<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信小程序(一)之UDP通信</title>
      <link href="/posts/2604964553.html"/>
      <url>/posts/2604964553.html</url>
      
        <content type="html"><![CDATA[<p>前期知识:<a href="https://zml3589110.github.io/posts/497460256.html">网络七层协议(OSI)基础知识</a></p><h1 id="文章代码参考"><a href="#文章代码参考" class="headerlink" title="文章代码参考"></a>文章代码参考</h1><h2 id="微信小程序UDP通信"><a href="#微信小程序UDP通信" class="headerlink" title="微信小程序UDP通信"></a>微信小程序UDP通信</h2><blockquote><p>微信小程序UDP通信及编码转换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Encoder  <span class="keyword">from</span> <span class="string">&#x27;../../util/Encoder.js&#x27;</span></span><br><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"><span class="built_in">this</span>.udp.bind(<span class="number">60000</span>) <span class="comment">//udp绑定本机</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">//连接目标</span></span><br><span class="line"><span class="function"><span class="title">linkUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp.connect(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//发送信息</span></span><br><span class="line"><span class="function"><span class="title">clickUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//utf-8转gbk编码</span></span><br><span class="line"><span class="keyword">var</span> gbkArray = Encoder.hexstrToArray(Encoder.stringToGbkHexstr(<span class="string">&#x27;123哈&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;gbkArray&gt;&gt;&quot;</span> , gbkArray)</span><br><span class="line"><span class="keyword">let</span> gbk = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>()</span><br><span class="line"><span class="built_in">console</span>.log(gbk)</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.write(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">message: gbk</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//监听接收到的数据</span></span><br><span class="line">onUdpMessage: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;收到的信息&#x27;</span>, res);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;onUdpMessage() 接收数据 &#x27;</span> + res.remoteInfo.size + <span class="string">&#x27; 字节：&#x27;</span> + <span class="built_in">JSON</span>.stringify(res, <span class="literal">null</span>, <span class="string">&#x27;\t&#x27;</span>));</span><br><span class="line"><span class="comment">// gbk转utf-8</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(res.message);</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> TextDecoder(<span class="string">&#x27;gbk&#x27;</span>).decode(x);</span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//监听收到的数据</span></span><br><span class="line"><span class="built_in">this</span>.udp.onMessage(<span class="built_in">this</span>.onUdpMessage)</span><br><span class="line"><span class="comment">//监听错误的信息</span></span><br><span class="line"><span class="built_in">this</span>.udp.onError(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"><a href="#关于微信小程序使用UDP实现局域网通讯及UDP模块的封装" class="headerlink" title="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"></a>关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</h2><blockquote><p>封装模块</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPSocket</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection = &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 创建一个UDP实例</span></span><br><span class="line">  <span class="function"><span class="title">establish</span>(<span class="params">monitor</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(monitor);</span><br><span class="line">    <span class="built_in">this</span>.connection = wx.createUDPSocket();</span><br><span class="line">    <span class="comment">// 绑定指定端口</span></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.connection.bind(monitor)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;连接成功&#x27;</span> + port + <span class="string">&#x27;端口&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 监听端口函数</span></span><br><span class="line">  <span class="function"><span class="title">onListening</span>(<span class="params">success, failure, open, cmd, mac</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 开启监听</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onListening(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      open(res)</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 监听回调函数</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onMessage(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下为我对数据的处理，使用到了我的一个tool.js,里面包含了对字节数组的处理</span></span><br><span class="line"><span class="comment">//需要的可以到我的个人博客获取www.meinaodai.top</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 做空包筛查</span></span><br><span class="line">      <span class="keyword">if</span> (res.message) &#123;</span><br><span class="line">        <span class="keyword">var</span> packet = tool.analysis(res.message)</span><br><span class="line">        <span class="comment">// 做数据空包处理</span></span><br><span class="line">        <span class="keyword">if</span> (packet) &#123;</span><br><span class="line">          <span class="comment">// 做数据筛查</span></span><br><span class="line">          <span class="comment">// console.log(tool.Screening(packet, cmd, mac));</span></span><br><span class="line">          success(tool.Screening(packet, cmd, mac))</span><br><span class="line">          <span class="built_in">console</span>.log(packet);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;------------------------&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// debug</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onError(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      failure(err)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 发送消息</span></span><br><span class="line">  <span class="function"><span class="title">send</span>(<span class="params">message</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.send(&#123;</span><br><span class="line">      address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">      port: <span class="number">20015</span>,</span><br><span class="line">      message</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 关闭搜索事件</span></span><br><span class="line">  <span class="function"><span class="title">UDPclose</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.close()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;UDP关闭&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模块引用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UDP = <span class="built_in">require</span>(<span class="string">&quot;./UDP.js&quot;</span>)   </span><br><span class="line">   <span class="comment">// UDP实例创建</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket = <span class="keyword">new</span> UDP.UDPSocket();</span><br><span class="line">    <span class="comment">// 连接端口</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.establish(<span class="number">20016</span>)</span><br><span class="line">    <span class="comment">// 请求设备上报状态</span></span><br><span class="line">    <span class="built_in">this</span>.udpsend()</span><br><span class="line">    <span class="comment">// 开始监听</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.onListening(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// debug</span></span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;, <span class="function"><span class="params">open</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(open);</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">//这两个参数为筛查条件，用于过滤无用或者不合法的信息，不需要的可传空值</span></span><br><span class="line">    <span class="string">&#x27;&#x27;</span>, getApp().globalData.item.mac)</span><br></pre></td></tr></table></figure><h1 id="实际工程测试"><a href="#实际工程测试" class="headerlink" title="实际工程测试"></a>实际工程测试</h1><p>先按照第一篇写时发现找不到 connect 函数，是因为变量问题！修改为全局变量后可以通过 connect 连接端口，但又缺失 hexstrToArray 函数，就没再继续下去。<br>后来找到第二篇参考，并根据参考写相应UDP函数，引用中 getApp().globalData.item.mac 和 tool.analysis(res.message) 均不存在，屏蔽即可，数据能正常收发。<br>再重新分析参考程序，并从官方文档中了解相应函数作用，最后基本按照官方文档提供的几个函数即可完成功能。</p><h2 id="在页面初始中建立实例并绑定端口"><a href="#在页面初始中建立实例并绑定端口" class="headerlink" title="在页面初始中建立实例并绑定端口"></a>在页面初始中建立实例并绑定端口</h2><blockquote><p>也可以使用 connect 模式，使用 bind 可以返回绑定端口<br>使用 onListening 打开监听功能，并通过 onMessage 设置监听数据回调函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.udp.bind(<span class="number">60000</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;端口&#x27;</span> + port + <span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.udp.onListening(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.udp.onMessage(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="设置数据发送"><a href="#设置数据发送" class="headerlink" title="设置数据发送"></a>设置数据发送</h2><blockquote><p>发送数据直接使用 send 函数即可，使用 255.255.255.255 是广播模式<br>即向局域网中所有端口 60000 均发送数据</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">BtnTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;这是一个测试按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.send(&#123;</span><br><span class="line">  address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">  port: <span class="number">60000</span>,</span><br><span class="line">  message: <span class="string">&#x27;hello, how are you&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="待添加部分"><a href="#待添加部分" class="headerlink" title="待添加部分"></a>待添加部分</h2><p>以上只是简单的数据收发，也在局域网中测试实现，不过完整的过程封装应该还需错误回调和关闭等功能。<br>即增加 UDPSocket.onError 和 UDPSocket.close 函数<br>官方所提供的函数如下:<br><strong>UDPSocket wx.createUDPSocket()</strong> 创建一个 UDP Socket 实例</p><blockquote><p>UDPSocket 基础库 2.7.0 开始支持，低版本需做兼容处理。<br>一个 UDP Socket 实例，默认使用 IPv4 协议</p></blockquote><p><strong>方法:</strong></p><table><thead><tr><th align="left">函数名</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><strong>number UDPSocket.bind(number port)</strong></td><td align="left">绑定一个系统随机分配的可用端口，或绑定一个指定的端口号</td></tr><tr><td align="left">UDPSocket.setTTL(number ttl)</td><td align="left">设置 IP_TTL 套接字选项，用于设置一个 IP 数据包传输时允许的最大跳步数</td></tr><tr><td align="left"><strong>UDPSocket.send(Object object)</strong></td><td align="left">向指定的 IP 和 port 发送消息。基础库 2.9.0 起支持广播 (指定地址为 255.255.255.255)</td></tr><tr><td align="left">UDPSocket.connect(Object object)</td><td align="left">预先连接到指定的 IP 和 port，需要配合 write 方法一起使用</td></tr><tr><td align="left">UDPSocket.write()</td><td align="left">用法与 send 方法相同，如果没有预先调用 connect 则与 send 无差异（注意即使调用了 connect 也需要在本接口填入地址和端口参数）</td></tr><tr><td align="left">UDPSocket.close()</td><td align="left">关闭 UDP Socket 实例，相当于销毁。 在关闭之后，UDP Socket 实例不能再发送消息，每次调用 UDPSocket.send 将会触发错误事件，并且 message 事件回调函数也不会再也执行。在 UDPSocket 实例被创建后将被 Native 强引用，保证其不被 GC。在 UDPSocket.close 后将解除对其的强引用，让 UDPSocket 实例遵从 GC</td></tr><tr><td align="left">UDPSocket.onClose(function callback)</td><td align="left">监听关闭事件</td></tr><tr><td align="left">UDPSocket.offClose(function callback)</td><td align="left">取消监听关闭事件</td></tr><tr><td align="left">UDPSocket.onError(function callback)</td><td align="left">监听错误事件</td></tr><tr><td align="left">UDPSocket.offError(function callback)</td><td align="left">取消监听错误事件</td></tr><tr><td align="left"><strong>UDPSocket.onListening(function callback)</strong></td><td align="left">监听开始监听数据包消息的事件</td></tr><tr><td align="left">UDPSocket.offListening(function callback)</td><td align="left">取消监听开始监听数据包消息的事件</td></tr><tr><td align="left"><strong>UDPSocket.onMessage(function callback)</strong></td><td align="left">监听收到消息的事件</td></tr><tr><td align="left">UDPSocket.offMessage(function callback)</td><td align="left">取消监听收到消息的事件</td></tr></tbody></table><p><strong>错误:</strong></p><table><thead><tr><th align="left">错误码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-1</td><td align="left">系统错误</td></tr><tr><td align="left">-2</td><td align="left">socket接口错误，可参考系统的socket错误码</td></tr><tr><td align="left">-3</td><td align="left">发送失败，无接口权限</td></tr><tr><td align="left">1</td><td align="left">发送失败，参数错误，address不合法</td></tr><tr><td align="left">2</td><td align="left">发送失败，参数错误，port不合法</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_50077305/article/details/118813518">微信小程序UDP通信</a><br>2.<a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/wx.createUDPSocket.html">微信官方文档-UDP通信</a><br>3.<a href="https://blog.csdn.net/qq_43318313/article/details/124193217">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</a><br>4.<a href="http://meinaodai.top/">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装的个人博客</a> 所提供的 tool.js 封装了常用函数</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> UDP </tag>
            
            <tag> 小程序 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程(一)之网络七层协议(OSI)</title>
      <link href="/posts/497460256.html"/>
      <url>/posts/497460256.html</url>
      
        <content type="html"><![CDATA[<h1 id="网络七层协议-OSI-基础知识"><a href="#网络七层协议-OSI-基础知识" class="headerlink" title="网络七层协议(OSI)基础知识"></a>网络七层协议(OSI)基础知识</h1><p>协议总览图：<br>​<img src="/posts/497460256/1.%E7%BD%91%E7%BB%9C%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>网络中的计算机与终端要想正确地传递信息和数据，必须在数据传输地顺序、数据的格式及内容等方面有一个约定的或规则，这种约定或规则称之为协议。</p></blockquote><table><thead><tr><th align="left">OSI层</th><th align="left">功能</th><th align="left">示例</th><th align="left">网络设备</th></tr></thead><tbody><tr><td align="left">应用层</td><td align="left">电子邮件，文件服务，虚拟终端</td><td align="left">TELNET，HTTP，FTP，NFS，SMTP，TFTP，SNMP，DNS，Telnet等</td><td align="left"></td></tr><tr><td align="left">表示层</td><td align="left">数据格式化，代码转换，数据加密 没有协议</td><td align="left">加密，ASCII等</td><td align="left"></td></tr><tr><td align="left">会话层</td><td align="left">解除或建立与别的接点的联系 没有协议</td><td align="left">RPC，SQL等</td><td align="left"></td></tr><tr><td align="left">传输层</td><td align="left">提供端对端的接口</td><td align="left">TCP，UDP，SPX</td><td align="left">四层交换机、也有工作在四层的路由器</td></tr><tr><td align="left">网络层</td><td align="left">为数据包选择路由</td><td align="left">IP，ICMP，RIP，OSPF，BGP，IGMP，IPX等</td><td align="left">路由器、三层交换机</td></tr><tr><td align="left">数据链路层</td><td align="left">传输有地址的帧以及错误检测功能</td><td align="left">ATM，FDDI，SLIP，CSLIP，PPP，ARP，RARP，MTU等</td><td align="left">网桥、以太网交换机、网卡(物理层和据链路层各一半)</td></tr><tr><td align="left">物理层</td><td align="left">以二进制数据形式在物理媒体上传输数据</td><td align="left">Rj45，802.3，ISO2110，IEEE802，IEEE802.2等</td><td align="left">中继器、集线器、双绞线等</td></tr></tbody></table><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>数据链层图：<br>​<img src="/posts/497460256/2.%E6%95%B0%E6%8D%AE%E9%93%BE%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第二层，介于物理层和网络层之间,其最基本的服务是将源自网络层来的数据可靠得传输到相邻节点的目的机网络层<br>在数据链路层中称这种数据块为帧，帧是数据链路层的传送单位，如何控制帧在屋里信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配，以及在两个网络实体之间提供数据链路通路的建立、维持和释放的管理.</p></blockquote><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层在数据链路层提供的两个相邻端点之间的数据帧的传送功能上进一步管理网络中的数据通信，将数据设法从源端经过若干个中间节点传送到目的端，从而向传输层提供最基本的端到端的数据传送服务<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第三层，介于传输层和数据链路层之间<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%821.png" class title="This is an 1.微信小程序UDP通信 image"><br>网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择，连接的建立、保持和终止等，它提供的服务使传输层不需要了解网络中的数据传输和交换技术。</p></blockquote><h1 id="Socket和HTTP"><a href="#Socket和HTTP" class="headerlink" title="Socket和HTTP"></a>Socket和HTTP</h1><p>简单了解OSI之后我们来看一下我们手机与电脑通信，所能够使用的两种数据通信，一种是HTTP请求，一种是Socket通信，HTTP是属于短连接，适合新闻，订票信息等客户端发起请求，每一次请求结束，自动断开连接。而Socket是属于长连接，适合游戏，聊天等实时数据。</p><h2 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h2><p>建立起一个TCP连接需要经过“三次握手”：<br>第一次握手：客户端发送syn包(syn&#x3D;j)到服务器，并进入SYN_SEND状态，等待服务器确认；<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack&#x3D;j+1），同时自己也发送一个SYN包（syn&#x3D;k），即SYN+ACK包，此时服务器进入SYN_RECV状态；<br>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack&#x3D;k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。</p><blockquote><p>握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连 接之前，TCP 连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写 了，就是服务器和客户端交互，最终确定断开）</p></blockquote><h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><p>同时Socket可以支持不同的传输层协议（UDP），那我们平时为什么不使用UDP呢，我们现在来看一下UDP与TCP的区别</p><table><thead><tr><th align="left"></th><th align="left">TCP</th><th align="left">UDP</th></tr></thead><tbody><tr><td align="left">是否面向连接</td><td align="left">面向连接</td><td align="left">面向非连接</td></tr><tr><td align="left">传输可靠性</td><td align="left">可靠</td><td align="left">不可靠</td></tr><tr><td align="left">应用场合</td><td align="left">传输大量数据</td><td align="left">少量数据</td></tr><tr><td align="left">传输速度</td><td align="left">慢</td><td align="left">快</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_48126962/article/details/117074843">网络七层协议</a><br>2.<a href="https://blog.csdn.net/ch1406285246/article/details/55504330">网络七层协议、TCP&#x2F;IP、UDP、HTTP、Socket 个人理解</a></p><blockquote><p>一、我一直以为Http和Tcp是两种不同的，但是地位对等的协议，虽然知道TCP是传输层，而http是应用层今天学习了下，知道了 http是要基于TCP连接基础上的，简单的说，TCP就是单纯建立连接，不涉及任何我们需要请求的实际数据，简单的传输。http是用来收发数据，即实际应用上来的。<br>二、TCP是底层通讯协议，定义的是数据传输和连接方式的规范 HTTP是应用层协议，定义的是传输数据的内容的规范 HTTP协议中的数据是利用TCP协议传输的，所以支持HTTP也就一定支持TCP<br>三、HTTP支持的是www服务而TCP&#x2F;IP是协议它是Internet国际互联网络的基础。TCP&#x2F;IP是网络中使用的基本的通信协议。TCP&#x2F;IP实际上是一组协议，它包括上百个各种功能的协议，如：远程登录、文件传输和电子邮件等，而TCP协议和IP协议是保证数据完整传输的两个基本的重要协议。通常说TCP&#x2F;IP是Internet协议族，而不单单是TCP和IP。</p></blockquote><p>3.<a href="https://zhuanlan.zhihu.com/p/101662799">网络OSI七层模型及各层作用</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> 网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> 网络七层协议 </tag>
            
            <tag> TCP/IP </tag>
            
            <tag> UDP </tag>
            
            <tag> Socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(二)</title>
      <link href="/posts/990256180.html"/>
      <url>/posts/990256180.html</url>
      
        <content type="html"><![CDATA[<h1 id="模块外形及连接方式"><a href="#模块外形及连接方式" class="headerlink" title="模块外形及连接方式"></a>模块外形及连接方式</h1><p>根据提供的资料先进行手工搭线，后续再做图。</p><h2 id="实物外形"><a href="#实物外形" class="headerlink" title="实物外形"></a>实物外形</h2><p>​<img src="/posts/990256180/1.WBR3%E6%A8%A1%E5%9D%97%E5%A4%96%E5%BD%A2.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3每个脚位以及硬件相关信息在对应的信息在文档(涂鸦WIFI基本开发(一))有详细说明</p><h2 id="连接原理图"><a href="#连接原理图" class="headerlink" title="连接原理图"></a>连接原理图</h2><p>​<img src="/posts/990256180/2.%E6%B6%82%E9%B8%A6%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E5%9B%BE.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3连接相对简单，基本只需要连接VCC、GND、TXD、RXD四个脚位即可，还有一个信息打印脚位TX为 A_16,测试有信息输出。</p><h2 id="实物连接"><a href="#实物连接" class="headerlink" title="实物连接"></a>实物连接</h2><p>​<img src="/posts/990256180/3.%E5%AE%9E%E9%99%85%E8%BF%9E%E7%BA%BF.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>根据原理图进行相应连接，需要增加两个电容放在VCC和GND之间做滤波，分别是0.1UF和10UF。</p><h1 id="实验效果"><a href="#实验效果" class="headerlink" title="实验效果"></a>实验效果</h1><p>实验使用的是涂鸦自带调试工具(Tuya Module Debugging Assistant)进行连接，涂鸦调试工具模拟MCU和模块进行通讯，基本正常！<br>​<img src="/posts/990256180/4.%E6%B6%82%E9%B8%A6%E6%A8%A1%E7%BB%84%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>今天拿到 WBR3 模块后连接测试，使用的是 USB TO TLL 串口工具，工具中的电源有 3.3V、VCC、5V，本着稳妥方法使用的是3.3V电源，然而当一直没能连接。<br>起初根本没有任何反应，串口接收不到任何数据。以为商家发错模块，直到使用 A_16 连接查看串口数据时才发现一直有乱码发过来，也就是说模块是正确，乱码很像乐鑫ESP8266刚启动时发送过来的数据一样。<br>因此才怀疑是不是模块一直复位，也才进一步怀疑电源过低导致芯片无法启动。<br>后来使用万用表点看发现电源才3V，再点看VCC有3.6V，使用这个电源就能正常工作通讯。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://zml3589110.github.io/posts/2486667095.html">涂鸦WIFI基本开发(一)</a><br>2.参考<a href="https://oshwhub.com/OrangePi/wen-shi-du-zhuan-gan-qi-wu-lian-wang-ce-shi">【涂鸦智能】云朵温度监视器</a>查看PCB</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> C语言 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小熊派鸿蒙系统环境搭建</title>
      <link href="/posts/1932715036.html"/>
      <url>/posts/1932715036.html</url>
      
        <content type="html"><![CDATA[<h1 id="系统环境选择"><a href="#系统环境选择" class="headerlink" title="系统环境选择"></a>系统环境选择</h1><p>​</p><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIFI </tag>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 鸿蒙 </tag>
            
            <tag> 小熊派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>商业洞察力目录</title>
      <link href="/posts/3924567325.html"/>
      <url>/posts/3924567325.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建模型，一个事物再复杂，也是几个固定要素组成的"><a href="#搭建模型，一个事物再复杂，也是几个固定要素组成的" class="headerlink" title="搭建模型，一个事物再复杂，也是几个固定要素组成的"></a>搭建模型，一个事物再复杂，也是几个固定要素组成的</h1><h2 id="第1章，系统、要素、连接关系"><a href="#第1章，系统、要素、连接关系" class="headerlink" title="第1章，系统、要素、连接关系"></a>第1章，系统、要素、连接关系</h2><h2 id="第2章，变量、因果链、增强回路、调节回路、滞后效应"><a href="#第2章，变量、因果链、增强回路、调节回路、滞后效应" class="headerlink" title="第2章，变量、因果链、增强回路、调节回路、滞后效应"></a>第2章，变量、因果链、增强回路、调节回路、滞后效应</h2><h2 id="第3章，流量、存量"><a href="#第3章，流量、存量" class="headerlink" title="第3章，流量、存量"></a>第3章，流量、存量</h2><h2 id="第4章，因果链"><a href="#第4章，因果链" class="headerlink" title="第4章，因果链"></a>第4章，因果链</h2><h2 id="第5章，增强回路"><a href="#第5章，增强回路" class="headerlink" title="第5章，增强回路"></a>第5章，增强回路</h2><h2 id="第6章，调节回路"><a href="#第6章，调节回路" class="headerlink" title="第6章，调节回路"></a>第6章，调节回路</h2><h2 id="第7章，滞后效应"><a href="#第7章，滞后效应" class="headerlink" title="第7章，滞后效应"></a>第7章，滞后效应</h2><h1 id="第一个训练场，解决难题，像商业顾问一样思考"><a href="#第一个训练场，解决难题，像商业顾问一样思考" class="headerlink" title="第一个训练场，解决难题，像商业顾问一样思考"></a>第一个训练场，解决难题，像商业顾问一样思考</h1><h2 id="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"><a href="#第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业" class="headerlink" title="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"></a>第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业</h2><h2 id="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"><a href="#第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）" class="headerlink" title="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"></a>第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）</h2><h2 id="改变原因"><a href="#改变原因" class="headerlink" title="改变原因"></a>改变原因</h2><h3 id="第10章，还原大前提（失效）"><a href="#第10章，还原大前提（失效）" class="headerlink" title="第10章，还原大前提（失效）"></a>第10章，还原大前提（失效）</h3><h3 id="第11章，突围边界墙（滞涨）"><a href="#第11章，突围边界墙（滞涨）" class="headerlink" title="第11章，突围边界墙（滞涨）"></a>第11章，突围边界墙（滞涨）</h3><h3 id="第12章，安装缓冲器（波动）"><a href="#第12章，安装缓冲器（波动）" class="headerlink" title="第12章，安装缓冲器（波动）"></a>第12章，安装缓冲器（波动）</h3><h3 id="第13章，跨越临界点（突变）"><a href="#第13章，跨越临界点（突变）" class="headerlink" title="第13章，跨越临界点（突变）"></a>第13章，跨越临界点（突变）</h3><h2 id="改变模型"><a href="#改变模型" class="headerlink" title="改变模型"></a>改变模型</h2><h3 id="第14章，改变模型的案例"><a href="#第14章，改变模型的案例" class="headerlink" title="第14章，改变模型的案例"></a>第14章，改变模型的案例</h3><h1 id="第二个训练场是看透人心，个体、群体、集体管理千差万别"><a href="#第二个训练场是看透人心，个体、群体、集体管理千差万别" class="headerlink" title="第二个训练场是看透人心，个体、群体、集体管理千差万别"></a>第二个训练场是看透人心，个体、群体、集体管理千差万别</h1><h2 id="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"><a href="#第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）" class="headerlink" title="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"></a>第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）</h2><h2 id="第16章，群体压力（群体）"><a href="#第16章，群体压力（群体）" class="headerlink" title="第16章，群体压力（群体）"></a>第16章，群体压力（群体）</h2><h2 id="第17章，结构性张力（个人）"><a href="#第17章，结构性张力（个人）" class="headerlink" title="第17章，结构性张力（个人）"></a>第17章，结构性张力（个人）</h2><h2 id="第18章，创业之心（合伙人）"><a href="#第18章，创业之心（合伙人）" class="headerlink" title="第18章，创业之心（合伙人）"></a>第18章，创业之心（合伙人）</h2><h2 id="第19章，改变人心模型的案例"><a href="#第19章，改变人心模型的案例" class="headerlink" title="第19章，改变人心模型的案例"></a>第19章，改变人心模型的案例</h2><h1 id="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"><a href="#第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。" class="headerlink" title="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"></a>第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。</h1><h2 id="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"><a href="#第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。" class="headerlink" title="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"></a>第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。</h2><h3 id="受阻模型：123-公地悲剧、成长上限、成长与投资不足"><a href="#受阻模型：123-公地悲剧、成长上限、成长与投资不足" class="headerlink" title="受阻模型：123 公地悲剧、成长上限、成长与投资不足"></a>受阻模型：123 公地悲剧、成长上限、成长与投资不足</h3><h3 id="失控模型：456-舍本逐末、饮鸩止渴、意外之敌"><a href="#失控模型：456-舍本逐末、饮鸩止渴、意外之敌" class="headerlink" title="失控模型：456 舍本逐末、饮鸩止渴、意外之敌"></a>失控模型：456 舍本逐末、饮鸩止渴、意外之敌</h3><h3 id="通吃模型：7-富者越富"><a href="#通吃模型：7-富者越富" class="headerlink" title="通吃模型：7 富者越富"></a>通吃模型：7 富者越富</h3><h3 id="锁死模型：89-恶性竞争、目标侵蚀"><a href="#锁死模型：89-恶性竞争、目标侵蚀" class="headerlink" title="锁死模型：89 恶性竞争、目标侵蚀"></a>锁死模型：89 恶性竞争、目标侵蚀</h3><h2 id="第21章，公地悲剧、成长上限、成长与投资不足"><a href="#第21章，公地悲剧、成长上限、成长与投资不足" class="headerlink" title="第21章，公地悲剧、成长上限、成长与投资不足"></a>第21章，公地悲剧、成长上限、成长与投资不足</h2><h2 id="第22章，舍本逐末、饮鸩止渴、意外之敌"><a href="#第22章，舍本逐末、饮鸩止渴、意外之敌" class="headerlink" title="第22章，舍本逐末、饮鸩止渴、意外之敌"></a>第22章，舍本逐末、饮鸩止渴、意外之敌</h2><h2 id="第23章，赢家通吃"><a href="#第23章，赢家通吃" class="headerlink" title="第23章，赢家通吃"></a>第23章，赢家通吃</h2><h2 id="第24章，恶性竞争、目标侵蚀"><a href="#第24章，恶性竞争、目标侵蚀" class="headerlink" title="第24章，恶性竞争、目标侵蚀"></a>第24章，恶性竞争、目标侵蚀</h2><h2 id="第25章，案例练习"><a href="#第25章，案例练习" class="headerlink" title="第25章，案例练习"></a>第25章，案例练习</h2><h1 id="第四个训练场，终身练习。破除顽固的三大思想误区。"><a href="#第四个训练场，终身练习。破除顽固的三大思想误区。" class="headerlink" title="第四个训练场，终身练习。破除顽固的三大思想误区。"></a>第四个训练场，终身练习。破除顽固的三大思想误区。</h1><h2 id="第26章，散点思维和公式思维"><a href="#第26章，散点思维和公式思维" class="headerlink" title="第26章，散点思维和公式思维"></a>第26章，散点思维和公式思维</h2><h2 id="第27章，局部思维和层次思维"><a href="#第27章，局部思维和层次思维" class="headerlink" title="第27章，局部思维和层次思维"></a>第27章，局部思维和层次思维</h2><h2 id="第28章，静止思维和演化思维"><a href="#第28章，静止思维和演化思维" class="headerlink" title="第28章，静止思维和演化思维"></a>第28章，静止思维和演化思维</h2><h2 id="第29章，储备模型，建立模型，迁移模型"><a href="#第29章，储备模型，建立模型，迁移模型" class="headerlink" title="第29章，储备模型，建立模型，迁移模型"></a>第29章，储备模型，建立模型，迁移模型</h2><h2 id="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"><a href="#第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限" class="headerlink" title="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"></a>第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限</h2>]]></content>
      
      
      <categories>
          
          <category> 商业类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商业 </tag>
            
            <tag> 洞察力 </tag>
            
            <tag> 目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.使用abbrlink生成唯一链接</title>
      <link href="/posts/238727531.html"/>
      <url>/posts/238727531.html</url>
      
        <content type="html"><![CDATA[<p>​文章链接默认是以年、月、日、标题格式来生成，主要是通过修改hexo配置文件_config.yml来完成<br>​<img src="/posts/238727531/1.%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE.png" class title="This is an 1.使用abbrlink生成唯一链接 image"></p><p>设置之后发现报错，那是因为没有安装依赖，根据提示安装即可<br>    npm install hexo-abbrlink –save</p><pre><code>官方Sample The generated link will look like the following:crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>安装好之后重新生成文章时，md文件的Front-matter 内会增加abbrlink 字段,值为生成的ID，<br>这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址,<br>换句话说,就是本篇文章有了自己的专属链接。有了专属链接，找百度收录也就简单的多了</p><p>本文参考文章:</p><a class="btn-beautify block" href="https://zhuanlan.zhihu.com/p/112318081" title="利用Hexo-abbrlink插件生成唯一文章链接"><i class="far fa-hand-point-right"></i><span>利用Hexo-abbrlink插件生成唯一文章链接</span></a>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO技术 </tag>
            
            <tag> abbrlink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(一)</title>
      <link href="/posts/2486667095.html"/>
      <url>/posts/2486667095.html</url>
      
        <content type="html"><![CDATA[<h1 id="因需将产品联网处理"><a href="#因需将产品联网处理" class="headerlink" title="因需将产品联网处理"></a>因需将产品联网处理</h1><p>​虽然一直在研究乐鑫esp8266，但发现接入云服务还需自己付费使用，因此就考虑找能免费对接网络的模块，很久以前玩过司南物联芯片，本想购入，但却发现主页都进不去，只好作罢。后来又找汉枫模块和涂鸦模块。</p><a class="btn-beautify block" href="http://www.hi-flying.com/index.php?route=product/category&path=135" title="汉枫模块"><i class="far fa-hand-point-right"></i><span>汉枫模块</span></a><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/MQTT-protocol?id=Kb65nphxrj8f1" title="涂鸦模块"><i class="far fa-hand-point-right"></i><span>涂鸦模块</span></a><p>汉枫看起来挺麻烦，加之比象花费太大时间！就选择涂鸦模块，因为涂鸦网站资料相对较多，也提供相对详细SDK，通过串口UART连接即可，根据说明，只要将其SDK-C导入到工程就可以使用。</p><h1 id="模块选择"><a href="#模块选择" class="headerlink" title="模块选择"></a>模块选择</h1><p>选择的是WBR3模块</p><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy" title="WBR3模块说明"><i class="far fa-hand-point-right"></i><span>WBR3模块说明</span></a><p>WBR3 是由涂鸦智能开发的一款低功耗嵌入式 Wi-Fi 加蓝牙模组。它由一个高集成度的无线射频芯片W701-VA2-CG构成，内置了 Wi-Fi 网络协议栈和丰富的库函数</p><ul><li>内置低功耗 KM4 MCU，可以兼作应用处理器</li><li>主频 100MHz</li><li>工作电压：3V-3.6V</li><li>外设：9×GPIOs, 1×UART, 1×Log_Tx</li><li>Wi-Fi&#x2F;蓝牙连通性<ul><li>802.11 B&#x2F;G&#x2F;N20</li><li>通道 <a href="mailto:&#49;&#x2d;&#49;&#52;&#x40;&#x32;&#46;&#52;&#71;&#x48;&#x7a;">&#49;&#x2d;&#49;&#52;&#x40;&#x32;&#46;&#52;&#71;&#x48;&#x7a;</a>(CH1-11 for US&#x2F;CA, CH1-13 for EU&#x2F;CN)</li><li>支持 WEP&#x2F;WPA&#x2F;WPA2&#x2F;WPA2 PSK（AES） 安全模式</li><li>支持 Bluetooth 4.2 Low Energy</li><li>802.11b 模式下 +20dBm 的输出功率</li><li>支持 SmartConfig 功能，包括 Android 和 iOS 设备</li><li>板载 PCB Onboard 天线</li><li>通过 CE、FCC 认证</li><li>工作温度：-20℃ to 85℃</li></ul></li></ul><h3 id="尺寸封装"><a href="#尺寸封装" class="headerlink" title="尺寸封装"></a>尺寸封装</h3><ul><li>WBR3 共有 2 排引脚（2×8），引脚间距为 2mm。</li><li>WBR3 尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×2.9±0.15 mm (H)。WBR3尺寸图如下图所示<img src="/posts/2486667095/1.WBR3%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">1.WBR3脚位图</li></ul><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote><h2 id="电气参数"><a href="#电气参数" class="headerlink" title="电气参数"></a>电气参数</h2><h3 id="绝对电气参数"><a href="#绝对电气参数" class="headerlink" title="绝对电气参数"></a>绝对电气参数</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ts</td><td align="left">存储温度</td><td align="left">-40</td><td align="left">105</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">供电电压</td><td align="left">-0.3</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">静电释放电压（人体模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">2</td><td align="left">KV</td></tr><tr><td align="left">静电释放电压（机器模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">0.5</td><td align="left">KV</td></tr></tbody></table><h3 id="工作条件"><a href="#工作条件" class="headerlink" title="工作条件"></a>工作条件</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">典型值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ta</td><td align="left">工作温度</td><td align="left">-20</td><td align="left">-</td><td align="left">85</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">工作电压</td><td align="left">3.0</td><td align="left">-</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">VIL</td><td align="left">I&#x2F;O低电平输入</td><td align="left">-</td><td align="left">-</td><td align="left">0.8</td><td align="left">V</td></tr><tr><td align="left">VIH</td><td align="left">I&#x2F;O高电平输入</td><td align="left">2.0</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">VOL</td><td align="left">I&#x2F;O低电平输出</td><td align="left">-</td><td align="left">-</td><td align="left">0.4</td><td align="left">V</td></tr><tr><td align="left">VOH</td><td align="left">I&#x2F;O高电平输出</td><td align="left">2.4</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">Imax</td><td align="left">I&#x2F;O驱动电流</td><td align="left">-</td><td align="left">-</td><td align="left">16</td><td align="left">mA</td></tr><tr><td align="left">Cpad</td><td align="left">输入引脚电容</td><td align="left">-</td><td align="left">2</td><td align="left">-</td><td align="left">pF</td></tr></tbody></table><h3 id="射频功耗"><a href="#射频功耗" class="headerlink" title="射频功耗"></a>射频功耗</h3><ul><li><p>TX 连续发送时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">功率</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">17dBm</td><td align="left">217</td><td align="left">268</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">18dBm</td><td align="left">231</td><td align="left">283</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">15dBm</td><td align="left">159</td><td align="left">188</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">17.5dBm</td><td align="left">177</td><td align="left">213</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">13dBm</td><td align="left">145</td><td align="left">167</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">16.5dBm</td><td align="left">165</td><td align="left">193</td><td align="left">mA</td></tr></tbody></table></li><li><p>RX 连续接收时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11B 11M</td><td align="left">63</td><td align="left">65</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11G 54M</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11N HT20 MCS7</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr></tbody></table></li></ul><h2 id="射频参数"><a href="#射频参数" class="headerlink" title="射频参数"></a>射频参数</h2><h3 id="基本射频特性"><a href="#基本射频特性" class="headerlink" title="基本射频特性"></a>基本射频特性</h3><table><thead><tr><th align="left">参数项</th><th align="left">详细说明</th></tr></thead><tbody><tr><td align="left">频率范围</td><td align="left">2.400~2.4835GHz</td></tr><tr><td align="left">Wi-Fi标准</td><td align="left">IEEE 802.11b&#x2F;g&#x2F;n(通道 1-14)</td></tr><tr><td align="left">蓝牙标准</td><td align="left">蓝牙4.2</td></tr><tr><td align="left">数据传输速率</td><td align="left">11b:1,2,5.5, 11 (Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11g:6,9,12,18,24,36,48,54(Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11n:HT20 MCS0~7</td></tr><tr><td align="left">天线类型</td><td align="left">PCB 天线，增益2.5dBi</td></tr></tbody></table><h2 id="天线信息"><a href="#天线信息" class="headerlink" title="天线信息"></a>天线信息</h2><h3 id="天线类型"><a href="#天线类型" class="headerlink" title="天线类型"></a>天线类型</h3><p>只有 PCB 板载天线接入方式，天线增益 2.5dBi。</p><h3 id="降低天线干扰"><a href="#降低天线干扰" class="headerlink" title="降低天线干扰"></a>降低天线干扰</h3><p>在 Wi-Fi 模组上使用 PCB 板载天线时，为确保 Wi-Fi 性能的最优化，建议模组天线部分和其他金属件距离至少在 15mm 以上。</p><h2 id="封装信息及生产指导"><a href="#封装信息及生产指导" class="headerlink" title="封装信息及生产指导"></a>封装信息及生产指导</h2><h3 id="机械尺寸"><a href="#机械尺寸" class="headerlink" title="机械尺寸"></a>机械尺寸</h3><p>WBR3的PCB机械尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×0.8±0.1 mm (H)。WBR3的机械尺寸如下图所示。</p><img src="/posts/2486667095/3.%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIFI </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收集好网站</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<p>配置美化相关</p><p>hexo个人博客搭建（二）butterfly主题配置: <a href="https://blog.csdn.net/YR_112233/article/details/122778691">Link</a></p><p>图片显示相关<br>Hexo + Typora + 开发Hexo插件 解决图片路径不一致: <a href="https://moeci.com/posts/hexo-typora/">Link</a><br>Hexo引用显示本地图片: <a href="https://www.xilixili.net/2019/03/26/hexo-markdown-use-images/">Link</a><br>Hexo butterfly 自定义文章封面 &amp;&amp; 主页顶部图片更改: <a href="https://blog.csdn.net/qq_43857095/article/details/108306164">Link</a></p><p>部署相关<br>Hexo 部署到 Gitee: <a href="https://blog.csdn.net/qq_38157825/article/details/112783631">Link</a><br>Hexo阶段三 – 将Hexo部署到github: <a href="https://blog.csdn.net/Night__breeze/article/details/117607049">Link</a></p><p>导航栏相关<br>Hexo 修改导航栏、标签、分类、归档图标，一分钟搞定: <a href="https://blog.csdn.net/h_kaka/article/details/119655493">Link</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题使用笔记</title>
      <link href="/posts/59422436.html"/>
      <url>/posts/59422436.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 安装文档(三) 主题配置-1</a><br>目录</p><ol><li>语言 2. 网站资料 3. 导航菜单</li><li>代码 4.1. 代码高亮主题 4.2. 代码复製 4.3. 代码框展开&#x2F;关闭 4.4. 代码换行 4.5. 代码高度限制</li><li>社交图标 6. 主页文章节选(自动节选和文章页description) 7. 顶部图 8. 文章置顶</li><li>文章封面 10. 文章页相关配置 10.1. 文章meta显示 10.2. 文章版权 10.3. 文章打赏<br>10.4. TOC 10.4.1. 为特定的文章配置 10.5. 相关文章 10.6. 文章锚点 10.7. 文章过期提醒<br>10.8. 文章编辑按钮 10.9. 文章分页按钮</li><li>头像 12. 图片描述 13. 复製相关配置 14. Footer 设置<br>14.1. 博客年份 14.2. 页脚自定义文本</li><li>右下角按钮 15.1. 简繁转换 15.2. 夜间模式 15.3. 閲读模式 15.4. 按钮排序</li><li>侧边栏设置 16.1. 侧边排版 16.2. 访问人数 busuanzi (UV 和 PV) 16.3. 运行时间<br>16.4. 最新评论 16.5. 自定义添加栏目</li><li>标籤外挂（Tag Plugins） 17.1. Note (Bootstrap Callout) 17.2. Gallery相册图库<br>17.3. Gallery相册 17.4. tag-hide 17.5. mermaid 17.6. Tabs 17.7. Button<br>17.8. inlineImg 17.9. label 17.10. timeline 17.11. flink</li></ol><p><a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 安装文档(四) 主题配置-2</a><br>目录</p><ol><li>评论 2. 在綫聊天 3. 分享 4. 搜索系统 5. 网站验证 6. 分析统计 7. 广告</li><li>Math 数学 9. 美化&#x2F;特效 9.1. 自定义主题色 9.2. 网站背景 9.3. footer 背景<br>9.4. 打字效果 9.5. 背景特效 9.6. 鼠标点击效果 9.7. 页面美化 9.8. 自定义字体和字体大小<br>9.8.1. 全局字体 9.8.2. Blog 标题字体 9.9. 网站副标题<br>9.10. 主页top_img显示大小 9.11. 页面加载动画preloader</li><li>PWA 11. 字数统计 12. 图片大图查看模式 13. Snackbar 弹窗 </li><li>其它配置 14.1. CSS 前缀 14.2. Open Graph 14.3. Instantpage<br>14.4. Pangu 15. Pjax 16. Inject 17. CDN</li></ol><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>433无线遥控使用说明</title>
      <link href="/posts/253476467.html"/>
      <url>/posts/253476467.html</url>
      
        <content type="html"><![CDATA[<h1 id="产品实物图说明"><a href="#产品实物图说明" class="headerlink" title="产品实物图说明"></a>产品实物图说明</h1><p>(图: 1.00安装git-vim-make程序)</p><img src="/posts/253476467/aaa.jpg" class title="This is an 433无线遥控 image"><img src="/posts/253476467/0.0%E4%BA%A7%E5%93%81%E5%9B%BE%E6%A6%82%E8%A7%88.jpg" class title="This is an 433无线遥控 image"> <h1 id="使用步骤说明"><a href="#使用步骤说明" class="headerlink" title="使用步骤说明"></a>使用步骤说明</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个标籤外挂。</p><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button" style>Click  </button><span class="hide-content">闪</span></span></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>block独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style>查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案</p></div></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><details class="toggle"><summary class="toggle-button" style>Butterfly安装方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><a class="btn-beautify block" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>主题中的图片都是默认以块级元素显示，如果你想以内联元素显示，可以使用这个标签外挂。</p><p>你看我长得漂亮不</p><p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>高亮所需的文字</p><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>可在任何界面插入类似友情链接列表效果</p><p>内容格式与友情链接界面一样，支持 yml 格式</p><div class="flink"><div class="flink-name">友情链接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="JerryC">              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日毕">今日事,今日毕</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="Hexo">              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、简单且强大的网誌框架">快速、简单且强大的网誌框架</div>            </a>          </div></div></div>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java学习标签 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO打开 related_posts 推荐功能时出现编译异常</title>
      <link href="/posts/2738849392.html"/>
      <url>/posts/2738849392.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>因为刚开始写文章并未出现tags标签重合，所以并未触发推荐功能！直到昨天写一篇有重复tags标签后就发现一直报错，首先还是网上百度查找问题。<br>一通操作下来，都只能找到 related_posts 打开说明和设置方式，最后还是得通过故障自己解决！<br>问题定位如图：</p><img src="/posts/2738849392/1.%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D.png" class title="This is an 1.HEXO打开推荐功能时出现编译异常 image"><h2 id="1-最初点-post-pug"><a href="#1-最初点-post-pug" class="headerlink" title="1.最初点 post.pug"></a>1.最初点 post.pug</h2><pre><code>hexo-theme-butterfly\layout\post.pug:27</code></pre><p>即说明是在文件 post.pug 中的函数 related_posts 出了异常，</p><blockquote><p>25|       include includes&#x2F;pagination.pug<br>    26|     if theme.related_post &amp;&amp; theme.related_post.enable<br>  –27|       !&#x3D; related_posts(page,site.posts)<br>    28|<br>    29|     if page.comments !&#x3D;&#x3D; false &amp;&amp; theme.comments &amp;&amp; theme.comments.use<br>    30|       - var commentsJsLoad &#x3D; true</p></blockquote><h2 id="2-根本问题点-this-escape-html-is-not-a-function"><a href="#2-根本问题点-this-escape-html-is-not-a-function" class="headerlink" title="2.根本问题点 this.escape_html is not a function"></a>2.根本问题点 this.escape_html is not a function</h2><p>最后问题为 related_post.js 文件下的 escape_html 函数</p><blockquote><p>使用escapeHTML，将字符串转为 &lt;script&gt;alert(2);&lt;&#x2F;script&gt;此时，浏览器将能正确解析，因为浏览器接收到实体字符后，转成对应的尖括号等<br>在 hexo-theme-butterfly\scripts\helpers\related_post.js 中的 escape_html 并未定义，因此有推荐数据进来时就报错，本来想自己增加 escape_html 函数，但又报 related_posts is not a function 错误，只好作罢！</p></blockquote><h2 id="3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）"><a href="#3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）" class="headerlink" title="3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）"></a>3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）</h2><p>既然返回的标题是字符串型，那就直接使用字符串测试后发现确实能通过，最后就去掉 escape_html 而直接使用。<br>按照说明，应该是浏览器字符串转换相关，后续看会不会因此报出什么故障了！<br>问题解决如图：</p><img src="/posts/2738849392/2.%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.png" class title="This is an 1.HEXO打开推荐功能时出现编译异常 image"><h1 id="参考到好的文章"><a href="#参考到好的文章" class="headerlink" title="参考到好的文章"></a>参考到好的文章</h1><p>一、<a href="https://www.cainiaoxueyuan.com/bc/1607.html">Hexo主题开发谈：制作过程如何避坑和一些经验</a><br>1.安装了hexo-browsersync之后也不能实现修改pug文件之后刷新出修改后的结果。只能实现自动刷新，但是刷新了之后还是修改前的页面。所以我找了一种办法使其能够达到预期的刷新并修改的效果，可以参考这个issue里最下面我的回答：<br>在你的node_modules文件夹里找到hexo-renderer-jade的文件夹，然后将里面lib&#x2F;pug.js（jade同理）的其中一行代码注释掉：<br>&#x2F;&#x2F; pugRender.compile &#x3D; pugCompile<br>我初步看了一下应该是跟预编译有关系。<br>2. hexo-server模式下，中文文章渲染不全。可以参考这个相关issue。解决办法是在站点的（而不是主题的）_config.yml里添加如下配置：<br>server:<br>    compress: true # 开启压缩<br>3. hexo默认的highlight渲染在未指定代码类型的时候会很慢，为了规范我们的文章书写以及提高渲染速度，我们应该在站点的配置文件里加上：<br>highlight:<br> auto_detect: false<br>并在写文章的时候，代码块的声明区域边上直接带上代码类型，比如：<code>js，这样就正常了</code></p><p>二、<a href="https://blog.csdn.net/qq_33058239/article/details/78727888">转义分为escapeHTML和unescapeHTML，先看两个函数的实现。</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>escapeHTML 转义html脚本 &lt; &gt; &amp; &quot; &#x27; </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">a</span></span> - </span></span><br><span class="line"><span class="comment"> *            字符串 </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line">escapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&quot;&quot;</span><span class="string">&quot;).replace(/&#x27;/g, &quot;</span><span class="string">&#x27;&quot;);;  </span></span><br><span class="line"><span class="string">&#125;,  </span></span><br><span class="line"><span class="string">/** </span></span><br><span class="line"><span class="string"> * @function unescapeHTML 还原html脚本 &lt; &gt; &amp; &quot; &#x27;</span> </span><br><span class="line"> * @param a - </span><br><span class="line"> *            字符串 </span><br><span class="line"> */  </span><br><span class="line">unescapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&quot;&#x27;</span>).replace(<span class="regexp">/&#x27;/g</span>, <span class="string">&quot;&#x27;&quot;</span>);  </span><br><span class="line">&#125;, </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 推荐文章 </tag>
            
            <tag> escape_html </tag>
            
            <tag> related_posts </tag>
            
            <tag> escapeHTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO本地服务正常，发布github后排版异常</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<img src="/posts/2614359431/%E5%B0%81%E9%9D%A2.jpeg" class title="This is an HEXO本地服务正常，发布github后排版异常 image"><p>使用的是 hexo+butterfly主题</p><p>在本地打开服务器时一切都很正常，一旦推送到github之后排版错乱起来！</p><p>原本很奇怪，以为是主题导致，查了很多都未发现问题！</p><p>最后删除 .deploy_git 后重建缓冲推送就正常了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>比参考文章好的是，这里能显示图片！</p><p>参考以下文档:<br><a href="https://blog.csdn.net/Wlittlestar/article/details/123964059?spm=1001.2014.3001.5501">BUG记录| hexo博客本地预览正常，但发布后不显示主题</a></p>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Esp8266做socket实验(TcpServer TcpClient UdpServer Udpclient)</title>
      <link href="/posts/32911666.html"/>
      <url>/posts/32911666.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境:"></a>实验环境:</h1><ol><li>虚拟机:VirtualBox6.0</li><li>Ubuntu系统: ubuntu-20.04.1-desktop-amd64</li><li>ESP8266: NodeMCU开发板</li><li>SDK:V3.4</li><li>使用乐鑫SDK提供examples实验使用</li></ol><h1 id="0、补充：编译完成后下载出现ttyUSB0找不到的问题"><a href="#0、补充：编译完成后下载出现ttyUSB0找不到的问题" class="headerlink" title="@0、补充：编译完成后下载出现ttyUSB0找不到的问题:"></a>@0、补充：编译完成后下载出现ttyUSB0找不到的问题:</h1><p>(图0.00找不到ttyUSB0)<br> <img src="/posts/32911666/0.00%E6%89%BE%E4%B8%8D%E5%88%B0ttyUSB0.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>这样需要设置好虚拟机和Ubuntu，然后插拔USB重新挂载：<br>（图0.10Ubuntu设置USB）<br> <img src="/posts/32911666/0.10Ubuntu%E8%AE%BE%E7%BD%AEUSB.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图0.11拔插USB显示连接上USB）<br> <img src="/posts/32911666/0.11%E6%8B%94%E6%8F%92USB%E6%98%BE%E7%A4%BA%E8%BF%9E%E6%8E%A5%E4%B8%8AUSB.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>最后使用命令使Ubuntu挂载USB0:<br>1.sudo usermod -a -G dialout $USER<br>2.sudo chmod -R 777 &#x2F;dev&#x2F;ttyUSB0<br>（图0.12可以正常下载和窗口监视）<br> <img src="/posts/32911666/0.12%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%AA%97%E5%8F%A3%E7%9B%91%E8%A7%86.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 分割线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887"><a href="#1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887" class="headerlink" title="@1、Socket预备知识:  https://blog.csdn.net/pashanhu6402/article/details/96428887"></a>@1、Socket预备知识:  <a href="https://blog.csdn.net/pashanhu6402/article/details/96428887">https://blog.csdn.net/pashanhu6402/article/details/96428887</a></h1><p>（图1.00Socket在网络中的结构）<br> <img src="/posts/32911666/1.00Socket%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E7%BB%93%E6%9E%84.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><h1 id="2、TcpServer和-TcpClient"><a href="#2、TcpServer和-TcpClient" class="headerlink" title="@2、TcpServer和 TcpClient"></a>@2、TcpServer和 TcpClient</h1><p>（图2.00TCP协议结构流程图）<br> <img src="/posts/32911666/2.00TCP%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84%E6%B5%81%E7%A8%8B%E5%9B%BE.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"><br>TcpServer和 TcpClient流程基本相同，不过TcpServer相对来说多了些流程。复制到工作目录下边。<br>（图2.10复制Tcp_Server文件到实验目录）<br> <img src="/posts/32911666/2.10%E5%A4%8D%E5%88%B6Tcp_Server%E6%96%87%E4%BB%B6%E5%88%B0%E5%AE%9E%E9%AA%8C%E7%9B%AE%E5%BD%95.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>打开Tcp_Server.c文件修改app_main为TcpServer_init,使用CONFIG_EXAMPLE_IPV4而非IPV6。<br>（图2.11修改app_main方便调用）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A8.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.11修改app_main方便调用1）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A81.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.12设置端口且使用IPV4）<br> <img src="/posts/32911666/2.12%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E4%B8%94%E4%BD%BF%E7%94%A8IPV4.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>在app_main函数中调用TcpServer_init完成TcpServer功能<br>（图2.13调用TcpServer功能）<br> <img src="/posts/32911666/2.13%E8%B0%83%E7%94%A8TcpServer%E5%8A%9F%E8%83%BD.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>下载即可使用<br>@2、tcpclient功能设置与tcpserver基本相同！<br>@3、udpclient功能设置和udpserver操作也基本相同！！！</p><p>技术总结：<br>@一、注意USB0的挂载问题！<br>@二、要复制components文件到实验目录，否则会找不到protocol_examples_common.h头文件！<br>（图3.13网络连接头文件）<br> <img src="/posts/32911666/3.13%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E5%A4%B4%E6%96%87%E4%BB%B6.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>乐鑫Esp8266_RTOS_SDK最新SDK_IDF编译环境搭建</title>
      <link href="/posts/2171885577.html"/>
      <url>/posts/2171885577.html</url>
      
        <content type="html"><![CDATA[<h1 id="零、安装Ubuntu"><a href="#零、安装Ubuntu" class="headerlink" title="零、安装Ubuntu"></a>零、安装Ubuntu</h1><p>续上集:《安装Ubuntu并设置共享和Xshell》安装好Ubuntu系统后就可以开始着手搭建ESP8266编译环境，不过过程并不美好，个中滋味及其坎坷只有受过毒打的人才能体会！！！真的比在Windows安装安信可环境麻烦N多倍。(想想之后可能要安装ESP32开发环境，誒，打工人！)<br>从上篇文章搭好到现在完成SDK_IDF的hello_world编译完成，竟然花了将近20天时间！！虽然都是零星使用上班和晚上下班回去做，但跨度也是有些长，其中各种被蹂躏真不是滋味！！！</p><p>@0、补充：上集补充:在安装好之后，发现每次都需要挂载share共享文件夹，很麻烦，因此就想办法每次开机后直接挂载，因此就有以下补充: </p><ol><li>sudo vim &#x2F;etc&#x2F;fstab</li><li>share &#x2F;mnt&#x2F;share vboxsf defaults 0 0<br>（图:0.0共享文件自动加载） <img src="/posts/2171885577/0.0%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 我是分鸽线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</li></ol><hr><h1 id="一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件"><a href="#一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件" class="headerlink" title="@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件"></a>@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件</h1><h2 id="1-安装git、vim、make软件"><a href="#1-安装git、vim、make软件" class="headerlink" title="1.  安装git、vim、make软件:"></a>1.  安装git、vim、make软件:</h2><p>sudo apt install git vim make<br>(图: 1.00安装git-vim-make程序)</p><img src="/posts/2171885577/1.00%E5%AE%89%E8%A3%85git-vim-make%E7%A8%8B%E5%BA%8F.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-安装乐鑫所需相关软件"><a href="#2-安装乐鑫所需相关软件" class="headerlink" title="2.  安装乐鑫所需相关软件:"></a>2.  安装乐鑫所需相关软件:</h2><p>sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python3 python3-serial<br>(图:1.10安装乐鑫所需软件)</p><img src="/posts/2171885577/1.10%E5%AE%89%E8%A3%85%E4%B9%90%E9%91%AB%E6%89%80%E9%9C%80%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p> 此时若报故障: (“选中 ‘python-is-python2’ 而非 ‘python’”,则要需要把Python3修改成默认,因为我已设置过，所以可以直接下载通过,算是第一个坑吧！)<br>这是由于Ubuntu所安装默认的Python为Python2，把它修改默认为Python3即可<br>查看本机安装的Python版本:<br>sudo ln -s &#x2F;usr&#x2F;bin&#x2F;python3.8 &#x2F;usr&#x2F;bin&#x2F;python<br>（图: 1.11查看本机安装的Python）</p><img src="/posts/2171885577/1.11%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BA%E5%AE%89%E8%A3%85%E7%9A%84Python.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！"><a href="#3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！" class="headerlink" title="3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)"></a>3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)</h2><p>sudo apt-get install python3-pip<br>(图:1.12通过Python安装pip软件)</p><img src="/posts/2171885577/1.12%E9%80%9A%E8%BF%87Python%E5%AE%89%E8%A3%85pip%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h3 id="以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"><a href="#以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！" class="headerlink" title="以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"></a>以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！</h3><h1 id="二、下载ESP8266最新SDK和Tool编译链工具"><a href="#二、下载ESP8266最新SDK和Tool编译链工具" class="headerlink" title="@二、下载ESP8266最新SDK和Tool编译链工具"></a>@二、下载ESP8266最新SDK和Tool编译链工具</h1><h2 id="1-下载ESP8266的SDK"><a href="#1-下载ESP8266的SDK" class="headerlink" title="1.  下载ESP8266的SDK"></a>1.  下载ESP8266的SDK</h2><p>去官网下载适合自己开发的SDK(必须3.0及以上),官网有说明！我下的是最新版本。一定一定一定一定要加–recursive拉取所有字模块，否则根本编译不了，而且还不知啥问题！！！这一步不知掉了多少次坑！</p><p>方法一(最好但下载速度最慢):去GitHub下载SDK,可以出门办个事，因为时间实在是太太太漫长了……………(如果会科学上网应该好很多，不过没去研究它！有更好办法的小伙伴希望能交流一下哦)<br> git clone –recursive <a href="https://github.com/espressif/ESP8266_RTOS_SDK.git">https://github.com/espressif/ESP8266_RTOS_SDK.git</a><br>(图: 2.10从GitHub上下载相应SDK)</p><img src="/posts/2171885577/2.10%E4%BB%8EGitHub%E4%B8%8A%E4%B8%8B%E8%BD%BD%E7%9B%B8%E5%BA%94SDK.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二(拉下来总会异常):去Gittee码云上下载SDK，官方放一份到码云，但直–recursive拉取时总出现账户登录，试了很多次就放弃了！虽然下载速度很诱人，但……<br>方法三(下载别人已经打包好的文件)：网上找了些，但还是编译不通过！到时候我也贴出自己从GitHub下载好的SDK出来。<br>（图: 2.13打包好的SDK和编译链工具）</p><img src="/posts/2171885577/2.13%E6%89%93%E5%8C%85%E5%A5%BD%E7%9A%84SDK%E5%92%8C%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-下载编译链工具"><a href="#2-下载编译链工具" class="headerlink" title="2.  下载编译链工具"></a>2.  下载编译链工具</h2><p>方法一(我只找到最新的5.2.0版本)：到乐鑫官网下载编译工具链<br>方法二:网上其他人提供编译链工具，很多都是5.2.0工具。<br>方法三(我在使用):在SDK目录下有README.md,它提供了合适的编译工具链(图: 2.23从README下载正确版本编译链工具)</p><p>使用wget下载适合系统编译链工具(也可从其他地方下载，建议还是从本环境下载，因为其他地方下载不知道又会出什么幺蛾子，这苦也吃过了！)<br>wget <a href="https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz">https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz</a><br>(图: 2.23使用wget下载编译链工具到当前目录)</p><img src="/posts/2171885577/2.23%E4%BD%BF%E7%94%A8wget%E4%B8%8B%E8%BD%BD%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7%E5%88%B0%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>使用tar解压编译工具链<br>sudo tar zxvf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz<br>(图: 2.24解压编译工具链)</p><img src="/posts/2171885577/2.24%E8%A7%A3%E5%8E%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h1 id="三、设置工具链PATH和SDK的PATH并检查其合法性"><a href="#三、设置工具链PATH和SDK的PATH并检查其合法性" class="headerlink" title="@三、设置工具链PATH和SDK的PATH并检查其合法性"></a>@三、设置工具链PATH和SDK的PATH并检查其合法性</h1><h2 id="1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH"><a href="#1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH" class="headerlink" title="1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):"></a>1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):</h2><p>打开~&#x2F;.bashrc文件: sudo vim ~&#x2F;.bashrc在末尾并添加这两个PATH<br>export PATH&#x3D;$PATH:$HOME&#x2F;esp8266&#x2F;xtensa-lx106-elf&#x2F;bin<br>export IDF_PATH&#x3D;”$HOME&#x2F;esp8266&#x2F;ESP8266_RTOS_SDK”<br> 最后wq保存退出, 注销并重新登录或者直接使用命令source  ~&#x2F;.bashrc使环境更新(图: 3.11更新PATH环境)</p><img src="/posts/2171885577/3.11%E6%9B%B4%E6%96%B0PATH%E7%8E%AF%E5%A2%83.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="2-检查PATH环境合法性"><a href="#2-检查PATH环境合法性" class="headerlink" title="2.  检查PATH环境合法性"></a>2.  检查PATH环境合法性</h2><p>检查编译工具链(图: 3.20检查编译工具链PATH): echo $PATH<br> 检查SDK(图: 3.21检查SDK的PATH): echo $IDF_PATH</p><img src="/posts/2171885577/3.21%E6%A3%80%E6%9F%A5SDK%E7%9A%84PATH.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0"><a href="#3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0" class="headerlink" title="3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0"></a>3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0</h2><p>xtensa-lx106-elf-gcc -v</p><img src="/posts/2171885577/3.30%E6%9F%A5%E7%9C%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE%E7%89%88%E6%9C%AC%E5%8F%B7.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><p>小坑总结:至此，Ubuntu环境编译搭建基本告一段落！1、编译工具链下载要匹配，我就有好多次下载的是5.2.0版本工具链来编译最新SDK导致各种莫名其妙问题！2、设置PATH一定要做好，不一定非要用我这个办法，网上也有很多，不过经过多次测试后还是觉得这种方式好一些！！</p><h1 id="四、编译hello工程文件"><a href="#四、编译hello工程文件" class="headerlink" title="@四、编译hello工程文件"></a>@四、编译hello工程文件</h1><p>走到这一步你是否已经觉得胜利女神在向你招手了吗？是否觉得万无一失了呢？反正当初我是这么觉得的！不过遭受N多次毒打之后，现在没到程序烧录并跑起来前都不会掉以轻心！<br>为什么说到这一步还是很多问题呢？因为网上很多很多教程到这一步就基本成功，但^&#x3D;^不知为啥，到这一步后编译make还是出现各种缺失问题！以前是SDK或者编译工具链问题，之后就应该不会，然而网上这方面资料又寥寥无几！<br>直到经过好多好多好多次重装Ubuntu重新搭建编译环境，基本在绝望的边缘后！某天中午偶然去看官方文档，发现他们在新SDK架构上引入了install.sh机制,才解决了问题!<br>方法一:安装所需的Python软件包(我自己安装好也还是编译不通过)，网上很多方法就是这个，requirements.txt文件是在SDK根目录下，包含所需环境软件:<br>python -m pip install –user -r $IDF_PATH&#x2F;requirements.txt<br>（图: 4.10安装Python所需要环境程序）</p><img src="/posts/2171885577/4.10%E5%AE%89%E8%A3%85Python%E6%89%80%E9%9C%80%E8%A6%81%E7%8E%AF%E5%A2%83%E7%A8%8B%E5%BA%8F.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二:进入SDK根目录,运行(这相当于一键配置,我是用这个方法配置成功了),其实这个方法也十分十分漫长，网络不好可能还要很多次安装!这其实也挺看运气的！<br>.&#x2F;install.sh<br>（图: 4.11使用install自动安装环境软件）</p><img src="/posts/2171885577/4.11%E4%BD%BF%E7%94%A8install%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后进入hello_world文件进行make编译,第一次编译时间比较长,以后就快了！其它往后相关操作网上有很多人写好资料了！<br>cd $IDF_PATH&#x2F;examples&#x2F;get-started&#x2F;hello_world<br>（图: 4.12对hello_world编译make结果0）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C0.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果1）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C1.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果2）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C2.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后就是make falsh烧录以及make monitor进行串口监听了！</p><hr><p>技术总结：<br>@一、下载的SDK_IDF必须要完整！必须要包含子模块！！<br>@二、编译工具链一定要匹配所使用的SDK！<br>@三、该安装的环境软件一个都不能少，在哪儿报错就得先处理好它！<br>@四、需要耐心和细心！需要耐心和细心！！需要耐心和细心！！！</p><hr><p>相关链接：<br><a href="http://qizhuqukanhai_1.gitee.io/myblog/">个人博客</a><br><a href="https://blog.csdn.net/zml3589110/article/details/109319118">CDSN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安装Ubuntu并设置共享和Xshell</title>
      <link href="/posts/3271392839.html"/>
      <url>/posts/3271392839.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装Ubuntu"><a href="#一、安装Ubuntu" class="headerlink" title="一、安装Ubuntu"></a>一、安装Ubuntu</h1><p>先到官网下载Ubuntu安装镜像文件(本次下载的是ubuntu-20.04.1-desktop-amd64.iso) ,使用Oracle VM VirtualBox虚拟机,配置如下:</p><img src="/posts/3271392839/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>一直一键下一步就安装好了！<br>安装好之后使用sudo apt update来更新Ubuntu系统</p><img src="/posts/3271392839/update%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>经过漫长更新等待… …(大约半个钟,理论上应该取决于网络环境)后更新完毕！</p><img src="/posts/3271392839/update%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E5%AE%8C%E6%88%90.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="二、安装Xshell的SSH客户端服务功能"><a href="#二、安装Xshell的SSH客户端服务功能" class="headerlink" title="二、安装Xshell的SSH客户端服务功能"></a>二、安装Xshell的SSH客户端服务功能</h1><p>  更新完系统后执行sudo apt install ssh命令进行Ubuntu端安装,这个安装快很多很多…</p><img src="/posts/3271392839/%E5%AE%89%E8%A3%85shell%E6%9C%8D%E5%8A%A1.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>安装完成后</p><img src="/posts/3271392839/shell%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>然后安装net-tool工具sudo apt install net-tools进行安装</p><img src="/posts/3271392839/%E5%AE%89%E8%A3%85shell%E7%9A%84net%E5%B7%A5%E5%85%B7.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后把虚拟机的网卡连接方式设置成桥接网卡模式:</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E6%88%90%E6%A1%A5%E6%8E%A5%E7%BD%91%E5%8D%A1.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后使用指令ifconfig指令查询本机网卡地址,用于SSH连接:</p><img src="/posts/3271392839/%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BAIP%E5%9C%B0%E5%9D%80.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="三、转到Xshell进行连接-填入相应的IP地址"><a href="#三、转到Xshell进行连接-填入相应的IP地址" class="headerlink" title="三、转到Xshell进行连接:填入相应的IP地址"></a>三、转到Xshell进行连接:填入相应的IP地址</h1><img src="/posts/3271392839/%E5%9C%A8xshell%E4%B8%8A%E8%AE%BE%E7%BD%AEIP%E5%9C%B0%E5%9D%80.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>点击连接后即可进行连接:</p><img src="/posts/3271392839/xshell%E4%B8%8A%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="四、安装虚拟机和Windows文件共享"><a href="#四、安装虚拟机和Windows文件共享" class="headerlink" title="四、安装虚拟机和Windows文件共享"></a>四、安装虚拟机和Windows文件共享</h1><h2 id="4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可"><a href="#4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可" class="headerlink" title="4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可"></a>4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可</h2><img src="/posts/3271392839/%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>然后设置设备—共享文件夹—选择自动挂载和固定分配—然后确定(此时Windows和Ubuntu已经实现共享)</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>一切顺利的话，打开Ubuntu的media文件夹会出现以下共享文件(sf_share)</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><h2 id="4-2-验证共享功能"><a href="#4-2-验证共享功能" class="headerlink" title="4-2:验证共享功能:"></a>4-2:验证共享功能:</h2><p>打开刚刚连接好的Xshell并打开mnt文件夹并新建共享映射文件夹share(可以自己定义)<br>cd &#x2F;mnt&#x2F;<br>sudo mkdir share</p><img src="/posts/3271392839/%E6%98%A0%E5%B0%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后建立并挂载映射关系sudo mount -t vboxsf share share&#x2F;</p><img src="/posts/3271392839/%E6%98%A0%E5%B0%84%E5%BB%BA%E7%AB%8B%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>即可查看管理Windows下共享的文件！</p><hr><hr><p>技术总结：<br>@一:下载安装基本没难度，根据提示一般都能完成！<br>@二：若是纯净系统也基本能装得上。<br>@三：根据Xshell使用说明填写即可。<br>@四：之前不是纯净系统时，安装增强功能总失败，然后新系统就不存在该问题！还要注意共享模式的设置！</p><hr><p>相关链接：<br><a href="https://blog.csdn.net/zml3589110/article/details/108954649">CDSN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tupian</title>
      <link href="/posts/3935749953.html"/>
      <url>/posts/3935749953.html</url>
      
        <content type="html"><![CDATA[<img src="/posts/3935749953/aaa.jpg" class title="This is an tupian image"><p>写博客时适当的添加图片是很有效率的一种做法，也会让别人更容易明白你想表达的意思。</p><p>如果你的博客也是通过Hexo框架建立的，在使用初期你可能也遇到过和我相似的问题：在一个.md文件中添加的图片并没有在预览中显示出来，下面分享一种解决此问题的方法：</p><p>修改博客配置。<br>下载插件。<br>修改博客配置<br>修改博客根目录中_config.yml文件的配置项post_asset_folder为true：</p><p>post_asset_folder: true</p><p>完成此设置后，当你通过hexo new 文件名新建博客后，会产生一个和文件同名的文件夹。</p><p>image.png<br>下载插件<br>在博客根目录中下使用npm安装插件：</p><p>npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save</p><p>示例<br>当文章需要添加图片时，将需要添加的图片放入同名的文件夹中，同时通过相对路径索引到该图片。</p><p>例如我在上方修改博客配置中展示的那张图片的md源码为：</p><p>*[·-·]:<img src="/./%E8%A7%A3%E5%86%B3Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/1580801930220.png" alt="示例"><br>使用命令hexo s开启服务，若无报错在本地可以看到图片在博客中正确显示。</p><p>作者：Gsdxiaohei<br>链接：<a href="https://www.jianshu.com/p/ea78bdd0551f">https://www.jianshu.com/p/ea78bdd0551f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>*[·-·]:注释内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710.html"/>
      <url>/posts/1243066710.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>这是我的第一个Blog尝试</title>
      <link href="/posts/911816538.html"/>
      <url>/posts/911816538.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><h1 id="Reward"><a href="#Reward" class="headerlink" title="Reward"></a>Reward</h1><p>#reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！<br>wechatpay: <a href="http://p3dm71oa7.bkt.clouddn.com/wcpay.png">http://p3dm71oa7.bkt.clouddn.com/wcpay.png</a><br>alipay: <a href="http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg">http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg</a><br>#bitcoin: &#x2F;images&#x2F;bitcoin.png</p><p>#<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">=========================== 常用指令收集 ======================================</span><br><span class="line">//***挑选了常用指令***</span><br><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate<span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy<span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">一步到位</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br><span class="line">===============================================================================</span><br></pre></td></tr></table></figure><p>它来自:<a href="https://blog.csdn.net/qq_26975307/article/details/62447489">Server</a></p><p>以下是正文</p><!--more--><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line">全是静态文件，访问速度快；</span><br><span class="line">免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">等等；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 首次 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="/posts/3846156473.html"/>
      <url>/posts/3846156473.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><p>以下是正文</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li></ol><a id="more"></a><ol start="4"><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等；</li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
