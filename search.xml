<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript正则表达式</title>
      <link href="/posts/3383621347.html"/>
      <url>/posts/3383621347.html</url>
      
        <content type="html"><![CDATA[<h1 id="重要问题"><a href="#重要问题" class="headerlink" title="重要问题"></a>重要问题</h1><h2 id="“-”导致匹配不上"><a href="#“-”导致匹配不上" class="headerlink" title="“+”导致匹配不上"></a>“+”导致匹配不上</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span>ABS+PC,抗跌落和震动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://www.lazycat.cc/Doctor/Application/Doctor/View/css/bower_components/jquery/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">replaceAll</span>(<span class="params">obj ,oldStr, newStr</span>) </span></span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">             <span class="keyword">return</span> obj.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;&gt;[\\s]*&quot;</span>+oldStr+<span class="string">&quot;[\\s]*&lt;&quot;</span>,<span class="string">&quot;gm&quot;</span>),<span class="function"><span class="keyword">function</span>(<span class="params">word</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                 <span class="keyword">return</span> <span class="string">&quot;&gt;&quot;</span>+newStr+<span class="string">&quot;&lt;&quot;</span>&#125;</span></span><br><span class="line">          ); </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> body=$(<span class="string">&quot;body&quot;</span>).html();</span></span><br><span class="line"><span class="javascript">        body=replaceAll(body,<span class="string">&quot;ABS+PC,抗跌落和震动&quot;</span>,<span class="string">&quot;ssssss&quot;</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;body&quot;</span>).html(body);</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>像这样有个加号，文本不会被替换，但是删除两个加号后就能正常被替换了</p><p><strong>解决办法是进行转义</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+号在正则表达式中是有意义的，要转义</span><br><span class="line"> oldStr = oldStr.replace(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;\\+&#x27;</span>);</span><br><span class="line"> <span class="keyword">return</span> obj.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;&gt;[\\s]*&quot;</span>+oldStr+<span class="string">&quot;[\\s]*&lt;&quot;</span>,<span class="string">&quot;gm&quot;</span>),<span class="function"><span class="keyword">function</span>(<span class="params">word</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">return</span> <span class="string">&quot;&gt;&quot;</span>+newStr+<span class="string">&quot;&lt;&quot;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>+需要转义，它表示多个字符，+才是字面的加号。</li><li>+在正则里有自己的含义，若要当普通字符使用，需要写成“+”</li></ul><h1 id="replace-函数使用"><a href="#replace-函数使用" class="headerlink" title="replace()函数使用"></a>replace()函数使用</h1><blockquote><p>语法：<br>string.replace(regexp, replacement)<br>参数：<br>regexp：必需。要搜索的值或正则表达式。<br>replacement：必需。指定替换文本或生成替换文本的函数。<br>返回值：已替换指定值的新字符串。<br>w3school：<a href="https://www.w3school.com.cn/jsref/jsref_replace.asp">JavaScript String replace() 方法</a></p></blockquote><h2 id="一、常规使用"><a href="#一、常规使用" class="headerlink" title="一、常规使用"></a>一、常规使用</h2><ul><li>将aaa替换为111：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa,bbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&quot;111&quot;</span>);<span class="comment">//输出&#x27;111,bbb,ccc&#x27;</span></span><br></pre></td></tr></table></figure></li><li>将连续的字母替换为111：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaaaaaa,bbbbbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/\w+/g</span>, <span class="string">&quot;111&quot;</span>);<span class="comment">//输出&#x27;111,111,111&#x27;</span></span><br></pre></td></tr></table></figure></li><li>将所有字母全部替换为1：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa,bbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/\w/g</span>, <span class="string">&quot;1&quot;</span>);<span class="comment">//输出&#x27;111,111,111&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="二、-1、-2、…、-99等使用"><a href="#二、-1、-2、…、-99等使用" class="headerlink" title="二、$1、$2、…、$99等使用"></a>二、$1、$2、…、$99等使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa,bbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/(\w+),(\w+),(\w+)/</span>, <span class="string">&quot;$3,$2,$1&quot;</span>);<span class="comment">//输出&#x27;ccc,bbb,aaa&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>$1代表第一个(\w+)匹配到的内容，即aaa</li><li>$2代表第一个(\w+)匹配到的内容，即bbb</li><li>$3代表第一个(\w+)匹配到的内容，即ccc</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa、bbb、ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/(\w)+、(\w)+、(\w)+/</span>, <span class="string">&quot;$3$2$1&quot;</span>);<span class="comment">//输出&#x27;cba&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>$1代表第一个(\w)匹配到的内容，即a</li><li>$2代表第一个(\w)匹配到的内容，即b</li><li>$3代表第一个(\w)匹配到的内容，即c</li></ul><p><strong>结论：</strong>$1、$2、…、$99 表示正则表达式中的括号匹配项的结果。</p><h2 id="三、函数"><a href="#三、函数" class="headerlink" title="三、函数"></a>三、函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出&#x27;hello,world&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/[A-Z]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> val.toLowerCase()</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//输出&#x27;HELLO,WORLD&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/[a-z]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> val.toUpperCase()</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//输出&#x27;000,000,111&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaaaaaa,bbbbbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/\w+/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> val === <span class="string">&#x27;ccc&#x27;</span> ? <span class="string">&#x27;111&#x27;</span>:<span class="string">&#x27;000&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>**一个经典的例子——模板字符匹配： **</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">    title:<span class="string">&#x27;标题&#x27;</span>,</span><br><span class="line">    subTitle: <span class="string">&#x27;副标题&#x27;</span>,</span><br><span class="line">    content:<span class="string">&#x27;内容&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;这是一段内容，标题是&#123;&#123;title&#125;&#125;，副标题是&#123;&#123;subTitle&#125;&#125;，内容是&#123;&#123;content&#125;&#125;&#x27;</span></span><br><span class="line"> </span><br><span class="line">str.replace(<span class="regexp">/\&#123;\&#123;(.*?)\&#125;\&#125;/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val,key</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> data[key]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>输出：这是一段内容，标题是标题，副标题是副标题，内容是内容</p><p>这里函数的第一个参数是匹配的内容，第二个参数是括号匹配的结果</p><h2 id="四、其他常用正则表达式"><a href="#四、其他常用正则表达式" class="headerlink" title="四、其他常用正则表达式"></a>四、其他常用正则表达式</h2><p>邮箱格式：^[a-z0-9A-Z]+[- | a-z0-9A-Z . _]+@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\.)+[a-z]{2,}$</p><p>正整数：^<a href="%5B0-9%5D">1-9</a>*$</p><img src="/posts/3383621347/eb3ab4539ef44e6988a629b517891091.png" class="" title="img"><ul><li>身份证号<br>^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$</li><li>ip地址<br>^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$</li><li>数字或英文字母<br>^([0-9a-zA-Z]+)$</li><li>手机号码<br>^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\d{8}$</li><li>日期时间格式YYYY-MM-DD HH:mm:ss<br>^(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})$</li><li>日期格式YYYY-MM-DD<br>^(\d{4}-\d{2}-\d{2})$</li><li>合法url<br>(https?|ftp|file):&#x2F;&#x2F;[-A-Za-z0-9+&amp;@#&#x2F;%?&#x3D;<del>_|!:,.;]+[-A-Za-z0-9+&amp;@#&#x2F;%&#x3D;</del>_|]</li><li>最多三位小数<br>^(?:[1-9]\d*|0)(?:\.\d{1,3})?$</li><li>大于等于0且最多三位小数<br>^(?!0+(?:\.0+)?$)(?:[1-9]\d*|0)(?:\.\d{1,3})?$</li><li>最多两位小数<br>^(?:[1-9]\d*|0)(?:\.\d{1,2})?$</li><li>大于等于0且最多两位小数<br>^(?!0+(?:\.0+)?$)(?:[1-9]\d*|0)(?:\.\d{1,2})?$</li><li>至少两个字符，中文或英文<br>^([a-zA-Z\u4E00-\u9FA5]+)$</li><li>3-15个字符，仅限数字、字母、斜杠、横杠、点<br>^[-&#x2F;0-9A-Za-z.]{3,15}$</li></ul><h2 id="replace-函数详细说明"><a href="#replace-函数详细说明" class="headerlink" title="replace()函数详细说明"></a>replace()函数详细说明</h2><h3 id="1-方法简介"><a href="#1-方法简介" class="headerlink" title="1. 方法简介"></a>1. 方法简介</h3><p>该方法的签名是：replace([RegExp|String],[String|Function])。</p><p>该方法 返回一个新的字符串，但并不改变字符串本身。</p><p>该方法接收2个参数，<br>第一个参数可以是字符串，也可以是一个正则表达式；<br>第二个参数可以是一个字符串，也可以是一个函数。</p><h3 id="2-replace-使用"><a href="#2-replace-使用" class="headerlink" title="2. replace()使用"></a>2. replace()使用</h3><p>2.1 replace(字符串,字符串)<br>假如我们有一个字符串中出现了错别字”背景“，需要用”北京“来替换，那么我们可以如下搞定：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="string">&#x27;背景&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str);   <span class="comment">// 输出结果：我爱北京天安门</span></span><br></pre></td></tr></table></figure><p>但这个用法有一个问题：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="string">&#x27;背景&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出结果：我爱北京天安门，但是背景雾霾太严重</span></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><blockquote><p>我们发现，如果字符串str中有多个待替换的子串，比如本例中的“背景”，出现了2次，那么replace()方法只能给我们用目标字符串(北京）替换掉第1次出现的”背景”。<br>如果想把所有的”背景”都给替换了，就必须调用多次。</p></blockquote><p><strong>此使用方法bug：</strong> 只能替换一次 多次替换需要多次调用</p><p>2.2 replace(正则表达式,字符串)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="regexp">/背景/g</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出结果：我爱北京天安门，但是北京雾霾太严重</span></span><br><span class="line"><span class="built_in">console</span>.log(str); </span><br></pre></td></tr></table></figure><blockquote><p>这里需要说明的是，str.replace(&#x2F;背景&#x2F;g,“北京”)的第一个参数 ”&#x2F;背景&#x2F;g“ 是一个正则表达式，使用&#x2F; &#x2F;的正则写法是JavaScript中正则表达式的字面量写法。<br>在此处，正则表达式的末尾有个g，它表示match源字符串str中所有匹配项。<br>这里如果没有g，那么也只能匹配到第一个错别字”背景“，只有加了这个g，才能匹配到所有的”背景“。</p></blockquote><p>2.3 replace(正则表达式,function(){})<br>以上的用法还是比较直观的，但是能实现的功能也比较简单，如果需要做一些复杂的字符串替换运算，那么就需要使用较为高级（复杂）的用法，就是 正则+function 的用法。说白了就是第一参数传一个正则表达式，我们下面称之为RegArg；第二个参数给一个函数，我们下面称之为FuncArg。这也是replace()的核心用法。</p><p>本质 ：对str使用RegArg做match()匹配，如果匹配到多项结果（比如使用了全局匹配g，或者分组），那么每一个匹配结果都将执行一次FuncArg函数，并且用该函数的返回值替代源字符串中的匹配项。</p><p>2.3.1 简单用法，正则表达式不使用分组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="regexp">/背景/</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><img src="/posts/3383621347/84ea0b39e14e41738840c6405b511077.png" class="" title="在这里插入图片描述"><p><strong>解析：</strong></p><ul><li>本例的目的是：把原字符串中的’背景’，替换为’北京’。</li><li>正则表达式没有使用全局匹配符g，所以只替换了源字符串中第一个‘背景’子串，FuncArg只执行了一次。</li></ul><p><strong>replace()函数第一个参数是简单正则表达式，第二个参数是函数时：</strong><br>这个函数是有参数的，而且这些参数是默认的。</p><ul><li>arguments[0]是匹配到的子字符串</li><li>arguments[1]是匹配到的子串的索引位置</li><li>arguments[2]是源字符串本身</li></ul><p>本例如果想替换所有的‘背景’为‘北京’，只需要让正则表达式后加个g。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="regexp">/背景/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><img src="/posts/3383621347/90fd02cee026464d87b56035ff97284a.png" class="" title="在这里插入图片描述"><blockquote><p>我们可以看到，输出了2个Arguments，因为我们使用全局匹配g后，会match到2个项，所以就执行了2次function。<br>第一个跟前边一样，第二个arugments的索引位置是10，因为源字符串中第二个‘背景’的索引是10.</p></blockquote><p>eg：把捐款是100元以下的金额数用‘**’来替换掉。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt =<span class="string">&#x27;刘菲:50元。张常成:150元。孙玉杰:200元。李明轩:20元。李子豪:1500元。&#x27;</span>;</span><br><span class="line">txt = txt.replace(<span class="regexp">/\d+/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>].length &gt; <span class="number">2</span> ? <span class="built_in">arguments</span>[<span class="number">0</span>] : <span class="string">&#x27;**&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(txt);</span><br></pre></td></tr></table></figure><img src="/posts/3383621347/84030ddbfe344667bdbbb213d617483e.png" class="" title="在这里插入图片描述"><p>2.3.2 复杂用法，正则表达式使用分组<br>eg：这个例子的意图是：把所有以“万”为单位的捐款，其金额改为‘元’。比如 ：4万，改为40000元</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt =<span class="string">&#x27;刘菲:5万。张常成:5000元。孙玉杰:2000元。李明轩:20万。李子豪:8500元。&#x27;</span>;</span><br><span class="line">txt = txt.replace(<span class="regexp">/(\d+)(万)/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">1</span>] + <span class="string">&#x27;0000&#x27;</span> + <span class="string">&#x27;元&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(txt);</span><br></pre></td></tr></table></figure><p><strong>输出结果是：</strong></p><img src="/posts/3383621347/e476abd35cb94a5e95021a201632c627.png" class="" title="在这里插入图片描述"><p><strong>replace()函数第一个参数是分组正则表达式，第二个参数是函数时：</strong></p><ul><li>arguments[0]是匹配到的子字符串</li><li>arguments[1]是匹配到的第1个分组项</li><li>arguments[2]是匹配到的第2个分组项</li><li>arguments[3]是匹配到的字符串的索引位置</li><li>arguments[4]是源字符串本身</li></ul><h1 id="正则匹配RegExp"><a href="#正则匹配RegExp" class="headerlink" title="正则匹配RegExp"></a>正则匹配RegExp</h1><p><a href="https://blog.csdn.net/a15297701931/article/details/126479577">JS高级 之 RegExp - 正则表达式</a><br><a href="https://blog.csdn.net/XSL_HR/article/details/130190704">JS 正则表达式（正则匹配RegExp）</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://ask.csdn.net/questions/257783">关于js正则匹配的问题，怎么加上一个”+”就匹配不上了</a></li><li><a href="https://blog.csdn.net/sxww_zyt/article/details/130258920">js正则表达式replace中参数为$1、$2、…、$99、函数等用法以及常用的正则表达式</a></li><li><a href="https://blog.csdn.net/qq_46658751/article/details/123390095">【JavaScript】详解JavaScript中的replace()函数</a></li><li><a href="https://www.runoob.com/jsref/jsref-replace.html">JavaScript replace() 方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> HTML </category>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
          <category> RegExp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> RegExp </tag>
            
            <tag> JavaScript </tag>
            
            <tag> HTML </tag>
            
            <tag> 加号匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo的常用指令合集</title>
      <link href="/posts/2069770813.html"/>
      <url>/posts/2069770813.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>hexo有许多主题，其实最火爆的是NexT、Matery等，复制关键词到GitHub或者baidu都能搜到。权衡利弊最终我还是选择了大多数人使用的next。</p></blockquote><h1 id="常用命令说明"><a href="#常用命令说明" class="headerlink" title="常用命令说明"></a>常用命令说明</h1><ul><li>（1）hexo g或hexo generate<br>该命令执行后在hexo站点根目录下生成public文件夹</li></ul><img src="/posts/2069770813/7683010350d24da995d50c154352b35d.png" class="" title="在这里插入图片描述"><ul><li>（2）hexo clean</li></ul><p>把（1）中的public文件夹删除</p><ul><li>（3）hexo s或hexo server<br>启动服务，默认地址为<a href="http://localhost:4000/%EF%BC%8C4000%E7%AB%AF%E5%8F%A3">http://localhost:4000/，4000端口</a></li></ul><img src="/posts/2069770813/185e5eec8e4e4769b821f6157468d87d.png" class="" title="在这里插入图片描述"><ul><li><p>（4）hexo d或hexo deploy<br>部署站点，在本地生成.deploy_git文件夹，并将编译后的文件上传至 GitHub。</p></li><li><p>（5）hexo new [layout] <title><br>例如： hexo new photo “my-first-blog”<br>上述指令执行时，Hexo 会尝试在 scaffolds 中寻找photo.md布局，若找到，则根据该布局新建文章；若未找到或指令中未指定该参数，则使用post.md新建文章。新建文章的名称在_config.yml中配置。</p></li></ul><img src="/posts/2069770813/35dacad9d318449696f68e6697eab9c7.png" class="" title="在这里插入图片描述"><ul><li>（6）删除文章<br>只需在本地把source&#x2F;_posts文件夹下的文章源文件删除后，执行以下命令重新部署即可。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s // 一定要先 clean，防止灵异事件发生</span><br></pre></td></tr></table></figure><ul><li>（7）备份&#x2F;迁移你的Hexo博客</li></ul><ol><li>备份根目录</li></ol><img src="/posts/2069770813/8b7829cea05440408b386a27bc71cade.png" class="" title="在这里插入图片描述"><ol start="2"><li>参考<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju">文档3：hexo-script使用文档</a>重新安装hexo</li><li>使用备份的目录覆盖新装的hexo目录</li></ol><img src="/posts/2069770813/56e7368f24dc4f258cdf2f2141543328.png" class="" title="在这里插入图片描述"><ol start="4"><li>最后使用下面的命令直接运行即可<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li><li>生成新的SSH公钥并上传至GitHub<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;a237440035&quot;</span><br><span class="line">git config --global user.email &quot;237440035@qq.com&quot;</span><br><span class="line">ssh-keygen -t ed25519 -C &quot;237440035@qq.com&quot;</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/2069770813/878226dbaf9849fb8528198ef9ad2ac4.png" class="" title="在这里插入图片描述"><p>公钥为：SHA256:57GWXC&#x2F;PLymwxMVw9NoNKMpaoSI71Mum7Y9tPZZbgPI <a href="mailto:&#x32;&#51;&#55;&#52;&#52;&#48;&#48;&#51;&#x35;&#64;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;">&#x32;&#51;&#55;&#52;&#52;&#48;&#48;&#51;&#x35;&#64;&#x71;&#113;&#46;&#x63;&#x6f;&#x6d;</a><br>也可以在文件C:\Users\Administrator.ssh\id_ed25519.pub中查看<br>将公钥复制在GitHub中即可使用hexo d命令</p><img src="/posts/2069770813/018945bae1274b7783e02631b033d741.png" class="" title="在这里插入图片描述"><h5 id="个性化定制你的Hexo博客"><a href="#个性化定制你的Hexo博客" class="headerlink" title="个性化定制你的Hexo博客"></a>个性化定制你的Hexo博客</h5><blockquote><p><a href="https://blog.csdn.net/qq_42889280/article/details/103087433">1、Hexo博客+Next主题深度优化与定制</a><br><a href="https://www.jianshu.com/p/baab04284923">2、备份你的Hexo博客</a><br><a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju">3、hexo-script使用文档</a><br><a href="https://www.jianshu.com/p/78c218f9d1e7">4、Hexo-设置阅读全文</a></p></blockquote><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/vpqtxzmzezeqjj9977/article/details/122982320">Hexo的常用指令合集</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO技术 </tag>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO插件说明</title>
      <link href="/posts/1804493672.html"/>
      <url>/posts/1804493672.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：</p><h3 id="脚本（Scripts）"><a href="#脚本（Scripts）" class="headerlink" title="脚本（Scripts）"></a>脚本（Scripts）</h3><p>如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 <code>scripts</code> 文件夹，在启动时就会自动加载。</p><h3 id="插件（Packages）"><a href="#插件（Packages）" class="headerlink" title="插件（Packages）"></a>插件（Packages）</h3><p>如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 <code>node_modules</code> 文件夹中建立文件夹，文件夹名称开头必须为 <code>hexo-</code>，如此一来 Hexo 才会在启动时加载；否则 Hexo 将会忽略它。</p><p>文件夹内至少要包含 2 个文件：一个是主程序，另一个是 <code>package.json</code>，描述插件的用途和所依赖的插件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── index.js</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure><p><code>package.json</code> 中至少要包含 <code>name</code>, <code>version</code>, <code>main</code> 属性，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">package.json&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hexo-my-plugin&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>您可以使用 Hexo 提供的官方工具插件来加速开发：</p><ul><li><a href="https://github.com/hexojs/hexo-fs">hexo-fs</a>：文件 IO</li><li><a href="https://github.com/hexojs/hexo-util">hexo-util</a>：工具程式</li><li><a href="https://github.com/hexojs/hexo-i18n">hexo-i18n</a>：本地化（i18n）</li><li><a href="https://github.com/hexojs/hexo-pagination">hexo-pagination</a>：生成分页数据</li></ul><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>当您完成插件后，可以考虑将它发布到 <a href="https://hexo.io/plugins">插件列表</a>，让更多人能够使用您的插件。发布插件的步骤和 <a href="https://hexo.io/zh-cn/docs/contributing.html#%E6%9B%B4%E6%96%B0%E6%96%87%E6%A1%A3">更新文档</a> 非常类似。</p><ol><li><p>Fork <a href="https://github.com/hexojs/site">hexojs&#x2F;site</a></p></li><li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="comment">//github.com/&lt;username&gt;/site.git</span></span><br><span class="line">$ cd site</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>在 <code>source/_data/plugins/</code> 中创建一个新的 yaml 文件，使用您的插件名称作为文件名。</p></li><li><p>编辑 <code>source/_data/plugins/&lt;your-plugin-name&gt;.yml</code> 并添加您的插件。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">description: Server <span class="built_in">module</span> <span class="keyword">for</span> Hexo.</span><br><span class="line">link: https:<span class="comment">//github.com/hexojs/hexo-server</span></span><br><span class="line">tags:</span><br><span class="line">  - official</span><br><span class="line">  - server</span><br><span class="line">  - <span class="built_in">console</span></span><br></pre></td></tr></table></figure></li><li><p>推送（push）分支。</p></li><li><p>建立一个新的合并申请（pull request）并描述改动。</p></li></ol><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://hexo.io/zh-cn/docs/plugins">Hexo插件说明</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 插件 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Typora + 开发Hexo插件 解决图片路径不一致</title>
      <link href="/posts/653633827.html"/>
      <url>/posts/653633827.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><p>在文章中，Typora编写时显示的很正常，但推送上去后就不行了，图片集体挂掉，无法显示出来，后来才找到这个方法！<br>这个方法的核心是源文章使用的是 Typora 图片引用方式，但推送编译时就更改路径方式，使用本地引用方法。<br>hexo-asset-img 这个文件夹中的 index.js 也是遵循 JavaScript 语法，自己研究之后发现他是使用正则表达式来替换路径，也就是说先识别出 typora 下图片路径，然后替换成hexo能使用的路径就行了！</p><p><strong>问题点：</strong></p><p>使用时发现一直没有替换，最后一层层调出才发现，使用正则表达式时，“+”是有效字符，需要正则化才行，费了一早上才知道！</p><p><a href="https://ask.csdn.net/questions/257783">关于js正则匹配的问题，怎么加上一个”+”就匹配不上了？</a></p><p>这篇文章有说明：<br>+号在正则表达式中是有意义的，要转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oldStr = oldStr.replace(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;\\+&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="1-下载安装-Typora"><a href="#1-下载安装-Typora" class="headerlink" title="1. 下载安装 Typora"></a>1. 下载安装 Typora</h1><p><a href="https://typora.io/">https://typora.io/</a></p><h1 id="2-配置-Typora-图片路径"><a href="#2-配置-Typora-图片路径" class="headerlink" title="2. 配置 Typora 图片路径"></a>2. 配置 Typora 图片路径</h1><p>![img](1.Hexo + Typora + 开发Hexo插件 解决图片路径不一致&#x2F;image-5f4b358d49ecff6196bdedac1b022c2a.png)</p><p>![img](1.Hexo + Typora + 开发Hexo插件 解决图片路径不一致&#x2F;image-c3df7eb6e26d520ff42b722a2c83f2bb.png)</p><p>图片文件保存路径: .&#x2F;${filename} 即保存到与 当前正在编辑的文件名 相同的同级文件夹下</p><p>下面三项依次为</p><ul><li><p>对本地位置的图片应用上述规则</p></li><li><p>对网络位置的图片应用上述规则</p></li><li><p>优先使用相对路径</p></li></ul><p><strong>建议都勾选上，至少要勾选上第一项</strong></p><p>PS：使用 Ctrl+V 粘贴 即可复制图片到Typora图片文件夹</p><h1 id="3-配置-Hexo-图片文件夹"><a href="#3-配置-Hexo-图片文件夹" class="headerlink" title="3. 配置 Hexo 图片文件夹"></a>3. 配置 Hexo 图片文件夹</h1><p>![img](1.Hexo + Typora + 开发Hexo插件 解决图片路径不一致&#x2F;image-4fefcdb6876c6f7ec8e002cdcddde463.png)</p><p>在 Hexo 根目录打开配置文件 <strong>_config.yml</strong></p><p><strong>搜索 post_asset_folder，false 改为 true</strong></p><p>![img](1.Hexo + Typora + 开发Hexo插件 解决图片路径不一致&#x2F;image-b288223fe2dd6816890d13f9e580be35.png)</p><p>这样修改后，每次 ‘hexo new page’ 生成新文章，都会在文章文件同级目录创建一个与文章文件名同名的文件夹，我们就在这里存放此文章的图片。</p><p>![img](1.Hexo + Typora + 开发Hexo插件 解决图片路径不一致&#x2F;image-303f4cfea59a8aa80059fc9b56e96cc0.png)</p><p><strong>PS: 这被称为 文章资源文件夹, 参考官方文档： <a href="https://hexo.io/zh-cn/docs/asset-folders">https://hexo.io/zh-cn/docs/asset-folders</a></strong></p><h1 id="4-开发-Hexo-转换图片路径-插件"><a href="#4-开发-Hexo-转换图片路径-插件" class="headerlink" title="4. 开发 Hexo 转换图片路径 插件"></a>4. 开发 Hexo 转换图片路径 插件</h1><p><strong>注意：自己最后使用的是npm直接下载方式安装，不过这个方式也刚好可以学习插件开发了</strong></p><p>现在，我们在 Typora下使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![example](postname/example.jpg)</span><br></pre></td></tr></table></figure><p>引用图片，享受实时预览，但需发布到 Hexo，使之发布后能正确加载我们的图片，还需要做以下转换:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![example](postname/example.jpg) --&gt; &#123;% asset_img example.jpg example %&#125;</span><br></pre></td></tr></table></figure><p>而这个转换我们需要在文章编译为html之前，在编译过程中转换为 这样的标签</p><p><strong>PS: <a href="https://hexo.io/zh-cn/docs/asset-folders#%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E7%9A%84%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6">Hexo官方文档 - 相对路径引用的标签插件</a></strong></p><h2 id="4-1-创建文件夹-hexo-asset-img，初始化npm包"><a href="#4-1-创建文件夹-hexo-asset-img，初始化npm包" class="headerlink" title="4.1 创建文件夹 hexo-asset-img，初始化npm包"></a>4.1 创建文件夹 hexo-asset-img，初始化npm包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo-asset-img</span><br><span class="line"><span class="built_in">cd</span> hexo-asset-img</span><br><span class="line">npm init</span><br></pre></td></tr></table></figure><p>![img](1.Hexo + Typora + 开发Hexo插件 解决图片路径不一致&#x2F;image-2c872375cf8af43072ef10ed213b13d6.png)</p><h2 id="4-2-编写插件-index-js"><a href="#4-2-编写插件-index-js" class="headerlink" title="4.2 编写插件 index.js"></a>4.2 编写插件 index.js</h2><p><strong>创建 index.js，编写代码如下</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;hexo-log&#x27;</span>)(&#123; <span class="string">&#x27;debug&#x27;</span>: <span class="literal">false</span>, <span class="string">&#x27;slient&#x27;</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * md文件返回 true</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>data </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ignore</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 好奇怪，试了一下, md返回true, 但却需要忽略 取反!</span></span><br><span class="line">    <span class="keyword">var</span> source = data.source;</span><br><span class="line">    <span class="keyword">var</span> ext = source.substring(source.lastIndexOf(<span class="string">&#x27;.&#x27;</span>)).toLowerCase();</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;md&#x27;</span>,].indexOf(ext) &gt; -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reverseSource = data.source.split(<span class="string">&quot;&quot;</span>).reverse().join(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> fileName = reverseSource.substring(<span class="number">3</span>, reverseSource.indexOf(<span class="string">&quot;/&quot;</span>)).split(<span class="string">&quot;&quot;</span>).reverse().join(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ![example](postname/example.jpg)  --&gt;  &#123;% asset_img example.jpg example %&#125;</span></span><br><span class="line">    <span class="keyword">var</span> regExp = <span class="built_in">RegExp</span>(<span class="string">&quot;!\\[(.*?)\\]\\(&quot;</span> + fileName + <span class="string">&#x27;/(.+?)\\)&#x27;</span>, <span class="string">&quot;g&quot;</span>);</span><br><span class="line">    <span class="comment">// hexo g</span></span><br><span class="line">    data.content = data.content.replace(regExp, <span class="string">&quot;&#123;% asset_img $2 $1 %&#125;&quot;</span>,<span class="string">&quot;g&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// log.info(`hexo-asset-img: filename: $&#123;fileName&#125;, title: $&#123;data.title.trim()&#125;`);</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;before_post_render&#x27;</span>,<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!ignore(data))&#123;</span><br><span class="line">        action(data)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="4-3-本地测试插件"><a href="#4-3-本地测试插件" class="headerlink" title="4.3 本地测试插件"></a>4.3 本地测试插件</h2><ol><li>Hexo根目录下 package.json 中 dependencies添加一行 “hexo-asset-img”: “^1.0.0”,</li><li>将 hexo-asset-img文件夹复制到 Hexo根目录下 node_modules文件夹下</li></ol><p><strong>注意：二者缺一不可，笔者试过不修改 package.json ，但没成功加载插件</strong></p><ul><li>重新生成文章</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s # 本地预览</span><br><span class="line"></span><br><span class="line">ps:也可以直接  hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><strong>PS：当然之后你还需要修正以前文章的图片路径</strong></p><p>public&#x2F;posts 生成结果如下图所示，成功</p><p>![img](1.Hexo + Typora + 开发Hexo插件 解决图片路径不一致&#x2F;image-49faf02cc39fc79b7d41181b34026384.png)</p><p>图片路径被转换成功</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;/posts/hexo-typora/image-2c872375cf8af43072ef10ed213b13d6.png&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;&quot;</span> title=<span class="string">&quot;image-20201128103300470&quot;</span>&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>后话：</strong><br>所说的问题就出现在了这里，一直是以为没什么问题，然而，多次尝试发现图片地址并未被改变，以为插件不起作用，但文件夹确确实实生成了，无奈只能研究其中代码含义，才有前面说的结果。<br>这里是作者列出详细步骤，实际上使用的话直接npm下载插件也行的了。</li></ul><h2 id="4-4-发布插件"><a href="#4-4-发布插件" class="headerlink" title="4.4 发布插件"></a>4.4 发布插件</h2><p>注意: 你需要先登录 npm login</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish --registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><p><img src="https://moeci.com/posts/hexo-typora/image-b0e539a443bb2dcc1aca24229a412d5b.png" alt="img"></p><h2 id="5-使用插件"><a href="#5-使用插件" class="headerlink" title="5. 使用插件"></a>5. 使用插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-img --save</span><br></pre></td></tr></table></figure><p>关联 GitHub<br><a href="https://github.com/yiyungent/hexo-asset-img">yiyungent&#x2F;hexo-asset-img: Hexo插件: 转换 图片相对路径 为 asset_img</a></p><p><a href="https://github.com/yiyungent/hexo-asset-img">https://github.com/yiyungent/hexo-asset-img</a></p><h1 id="作者说明"><a href="#作者说明" class="headerlink" title="作者说明"></a>作者说明</h1><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>hexo-asset-image 已无效, 大概是从 Hexo 5 开始，并且此仓库已 archive</p><p>Q: 为什么使用本地图片 而不是网络图片 (图床) ?<br>A:</p><ol><li>第三方图床不稳定, 容易丢失图片</li><li>自行搭建图床, 随着上传错误图片, 删除文章而没有删除关联图片 次数的增多, 未引用图片越来越多, 图床中也越来越多的无用冗余图片, 还不方便删除, 也容易误删除</li><li>本地图片 与 文章在一个文件夹, 易打包, 在无网络或网络较差时也能预览</li><li>本地图片 放在与 文章文件名同名文件夹内 方便管理</li></ol><p><code>补充:</code><br>很多 <code>markdown编辑器</code> 提供粘贴图片到本地图片文件夹, 这些图片文件名通常不易读, 较长, 如果每次删除文章中的图片引用, 都手动去删除相应图片, 以及删除文章, 手动删除关联图片文件夹, 比较麻烦, 但不删除, 未引用图片又会越来越多, 因此 <code>删除未引用图片工具</code> 应运而生!</p><ul><li><a href="https://gitee.com/link?target=https://github.com/yiyungent/clear-image-action">yiyungent&#x2F;clear-image-action: 🔧 Image detection. | 图片检测 | 清理未引用图片 | 删除未引用图片 | 检查引用的图片是否有效 | GitHub Actions</a></li><li><a href="https://gitee.com/link?target=https://github.com/yiyungent/coo">yiyungent&#x2F;coo: 🧰 .NET 自用CLI, 工具集</a></li></ul><h2 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h2><ul><li><a href="https://gitee.com/link?target=https://github.com/yiyungent/clear-image-action">yiyungent&#x2F;clear-image-action: 🔧 Image detection. | 图片检测 | 清理未引用图片 | 删除未引用图片 | 检查引用的图片是否有效 | GitHub Actions</a></li><li><a href="https://gitee.com/link?target=https://github.com/xcodebuild/hexo-asset-image">xcodebuild&#x2F;hexo-asset-image</a></li><li><a href="https://gitee.com/link?target=https://github.com/cocowool/hexo-image-link">cocowool&#x2F;hexo-image-link</a></li><li><a href="https://gitee.com/link?target=https://github.com/cnzsb/hexo-asset">cnzsb&#x2F;hexo-asset</a></li></ul><h1 id="NET-自用-CLI-工具集-清理未引用图片"><a href="#NET-自用-CLI-工具集-清理未引用图片" class="headerlink" title=".NET 自用 CLI | 工具集(清理未引用图片)"></a>.NET 自用 CLI | 工具集(清理未引用图片)</h1><blockquote><p>需要先在本地安装 <code>.NET 6 SDK</code></p></blockquote><ul><li><a href="https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-6.0.100-windows-x64-installer">Windows | .NET 6 SDK | 下载</a></li><li><a href="https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-6.0.100-macos-x64-installer">macOS | .NET 6 SDK | 下载</a></li><li><a href="https://docs.microsoft.com/dotnet/core/install/linux?WT.mc_id=dotnet-35129-website">Linux | .NET 6 SDK</a></li></ul><p>然后 安装 <code>coo</code> 工具集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet tool install -g coo</span><br></pre></td></tr></table></figure><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><h4 id="1-mdimg"><a href="#1-mdimg" class="headerlink" title="1. mdimg"></a>1. mdimg</h4><blockquote><ol><li>清理 md文件的未引用图片: 例如使用 <code>Hexo</code>, 采用本地图片文件 (图片放在md同名文件夹下) 等</li></ol></blockquote><p><code>&quot;F:\Com\me\Repos\notebook\source\_posts&quot;</code> 为 <code>Hexo文章目录</code>, 本人图片与文章处于同一目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 统计分析</span><br><span class="line">coo mdimg &quot;F:\Com\me\Repos\notebook\source\_posts&quot;</span><br><span class="line"># 统计分析 并删除未引用图片</span><br><span class="line">coo mdimg -d &quot;F:\Com\me\Repos\notebook\source\_posts&quot;</span><br></pre></td></tr></table></figure><blockquote><p>补充:</p><ol><li><code>所有图片数量=引用图片数+未引用图片数</code><br>这个等式匹配不上 <code>属于正常现象</code>, 因为 匹配 所有图片 时, 目前仅匹配了 <code>png,jpg,jpeg,gif</code>, 而 你在md中引用的图片可能还有其它<br>因此 <code>所有图片数量&lt;=引用图片数+未引用图片数</code></li><li>Windows, macOS 不区分路径大小写, 但 Linux 区分大小写<br>本工具匹配时, 忽略大小写, 因此不用担心 引用时, 大小写不一致 而导致工具以为 未引用此图片 而误删,<br>因此工具 可能存在漏删, 但不会误删除引用图片</li><li>本工具通过检测 <code>文章.md</code> 中图片的相对路径引用, 并转换为绝对路径, 与目标目录的所有存在图片的绝对路径进行匹配, 来找出哪些图片未引用</li></ol></blockquote><h4 id="2-cimg"><a href="#2-cimg" class="headerlink" title="2. cimg"></a>2. cimg</h4><blockquote><ol><li>清理 未引用图片 (<code>mdimg</code> 升级版)<br>支持识别 <code>md,html,htm</code></li></ol></blockquote><blockquote><p>支持 <code>相对路径</code>: 相对于当前命令行执行所在路径</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">coo cimg -d --ignore-paths=<span class="string">&quot;IgnoreDir1,IgnoreDir2,images/1.png&quot;</span> <span class="string">&quot;source/_posts&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>--ignore-paths=&quot;IgnoreDir1,IgnoreDir2,images/1.png&quot;</code> 这些图片地址忽略, 不会被删除</p></blockquote><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>卸载 coo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet tool uninstall -g coo</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://moeci.com/posts/hexo-typora/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85-typora">Hexo + Typora + 开发Hexo插件 解决图片路径不一致</a></li><li><a href="https://gitee.com/yiyungent/hexo-asset-img/">gitee hexo-asset-img</a></li><li><a href="https://zhuanlan.zhihu.com/p/645679541">(这个方法过时-思路可参考)解决Hexo+Github+Typora图片无法正确显示的问题</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> gihub </category>
          
          <category> Typora </category>
          
          <category> 图片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> Typora </tag>
            
            <tag> 图片 </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> RegExp </tag>
            
            <tag> replace </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小熊派鸿蒙系统环境搭建</title>
      <link href="/posts/1932715036.html"/>
      <url>/posts/1932715036.html</url>
      
        <content type="html"><![CDATA[<h1 id="系统环境选择"><a href="#系统环境选择" class="headerlink" title="系统环境选择"></a>系统环境选择</h1><p>​</p><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> WIFI </tag>
            
            <tag> 鸿蒙 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 小熊派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收集好网站</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<p>配置美化相关</p><p>hexo个人博客搭建（二）butterfly主题配置: <a href="https://blog.csdn.net/YR_112233/article/details/122778691">Link</a></p><p>图片显示相关<br>Hexo + Typora + 开发Hexo插件 解决图片路径不一致: <a href="https://moeci.com/posts/hexo-typora/">Link</a><br>Hexo引用显示本地图片: <a href="https://www.xilixili.net/2019/03/26/hexo-markdown-use-images/">Link</a><br>Hexo butterfly 自定义文章封面 &amp;&amp; 主页顶部图片更改: <a href="https://blog.csdn.net/qq_43857095/article/details/108306164">Link</a></p><p>部署相关<br>Hexo 部署到 Gitee: <a href="https://blog.csdn.net/qq_38157825/article/details/112783631">Link</a><br>Hexo阶段三 – 将Hexo部署到github: <a href="https://blog.csdn.net/Night__breeze/article/details/117607049">Link</a></p><p>导航栏相关<br>Hexo 修改导航栏、标签、分类、归档图标，一分钟搞定: <a href="https://blog.csdn.net/h_kaka/article/details/119655493">Link</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710.html"/>
      <url>/posts/1243066710.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题使用笔记</title>
      <link href="/posts/59422436.html"/>
      <url>/posts/59422436.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 安装文档(三) 主题配置-1</a><br>目录</p><ol><li>语言 2. 网站资料 3. 导航菜单</li><li>代码 4.1. 代码高亮主题 4.2. 代码复製 4.3. 代码框展开&#x2F;关闭 4.4. 代码换行 4.5. 代码高度限制</li><li>社交图标 6. 主页文章节选(自动节选和文章页description) 7. 顶部图 8. 文章置顶</li><li>文章封面 10. 文章页相关配置 10.1. 文章meta显示 10.2. 文章版权 10.3. 文章打赏<br>10.4. TOC 10.4.1. 为特定的文章配置 10.5. 相关文章 10.6. 文章锚点 10.7. 文章过期提醒<br>10.8. 文章编辑按钮 10.9. 文章分页按钮</li><li>头像 12. 图片描述 13. 复製相关配置 14. Footer 设置<br>14.1. 博客年份 14.2. 页脚自定义文本</li><li>右下角按钮 15.1. 简繁转换 15.2. 夜间模式 15.3. 閲读模式 15.4. 按钮排序</li><li>侧边栏设置 16.1. 侧边排版 16.2. 访问人数 busuanzi (UV 和 PV) 16.3. 运行时间<br>16.4. 最新评论 16.5. 自定义添加栏目</li><li>标籤外挂（Tag Plugins） 17.1. Note (Bootstrap Callout) 17.2. Gallery相册图库<br>17.3. Gallery相册 17.4. tag-hide 17.5. mermaid 17.6. Tabs 17.7. Button<br>17.8. inlineImg 17.9. label 17.10. timeline 17.11. flink</li></ol><p><a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 安装文档(四) 主题配置-2</a><br>目录</p><ol><li>评论 2. 在綫聊天 3. 分享 4. 搜索系统 5. 网站验证 6. 分析统计 7. 广告</li><li>Math 数学 9. 美化&#x2F;特效 9.1. 自定义主题色 9.2. 网站背景 9.3. footer 背景<br>9.4. 打字效果 9.5. 背景特效 9.6. 鼠标点击效果 9.7. 页面美化 9.8. 自定义字体和字体大小<br>9.8.1. 全局字体 9.8.2. Blog 标题字体 9.9. 网站副标题<br>9.10. 主页top_img显示大小 9.11. 页面加载动画preloader</li><li>PWA 11. 字数统计 12. 图片大图查看模式 13. Snackbar 弹窗 </li><li>其它配置 14.1. CSS 前缀 14.2. Open Graph 14.3. Instantpage<br>14.4. Pangu 15. Pjax 16. Inject 17. CDN</li></ol><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Nginx开机自启动设置方法</title>
      <link href="/posts/2373589197.html"/>
      <url>/posts/2373589197.html</url>
      
        <content type="html"><![CDATA[<h1 id="Linux操作系统："><a href="#Linux操作系统：" class="headerlink" title="Linux操作系统："></a>Linux操作系统：</h1><h2 id="1-使用Systemd服务"><a href="#1-使用Systemd服务" class="headerlink" title="1.使用Systemd服务"></a>1.使用Systemd服务</h2><p>对于使用Systemd管理服务的Linux发行版，例如Ubuntu 16.04及以后的版本、CentOS 7及以后的版本等，我们可以通过以下方法将Nginx设置为开机自启动：</p><p>首先，在创建Nginx服务文件之前，我们需要确保Nginx已经成功安装在系统上。然后，创建一个名为 nginx.service的服务文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim /etc/systemd/system/nginx.service</span></span><br></pre></td></tr></table></figure><p>复制并粘贴以下内容到该文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=The Nginx HTTP and reverse proxy server</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/run/nginx.pid</span><br><span class="line">ExecStartPre=/usr/sbin/nginx -t</span><br><span class="line">ExecStart=/usr/sbin/nginx</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>保存并关闭文件。然后，运行以下命令启动Nginx服务并设置开机自启：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl <span class="built_in">enable</span> nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo systemctl start nginx</span></span><br></pre></td></tr></table></figure><h2 id="2-使用SysV-Init"><a href="#2-使用SysV-Init" class="headerlink" title="2.使用SysV Init"></a>2.使用SysV Init</h2><p>对于早期使用SysV Init管理服务的Linux发行版，例如Ubuntu 14.04、CentOS 6等，可以通过以下方式将Nginx设置为开机自启：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo chkconfig --level 345 nginx on</span></span><br></pre></td></tr></table></figure><h1 id="Windows操作系统："><a href="#Windows操作系统：" class="headerlink" title="Windows操作系统："></a>Windows操作系统：</h1><p>若想要设置Nginx在Windows开机启动，可以通过以下方法实现：</p><h2 id="1-新建一个名称为“nginx-start-bat”的批处理脚本，并填写以下内容："><a href="#1-新建一个名称为“nginx-start-bat”的批处理脚本，并填写以下内容：" class="headerlink" title="1.新建一个名称为“nginx-start.bat”的批处理脚本，并填写以下内容："></a>1.新建一个名称为“nginx-start.bat”的批处理脚本，并填写以下内容：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">start</span> /b /d &quot;C:\<span class="built_in">path</span>\to\nginx&quot; nginx.exe</span><br></pre></td></tr></table></figure><p><strong>请注意将 C:\path\to\nginx替换成实际Nginx安装路径。</strong></p><h2 id="2-在Windows文件资源管理器中，通过以下路径进入系统的启动文件夹："><a href="#2-在Windows文件资源管理器中，通过以下路径进入系统的启动文件夹：" class="headerlink" title="2.在Windows文件资源管理器中，通过以下路径进入系统的启动文件夹："></a>2.在Windows文件资源管理器中，通过以下路径进入系统的启动文件夹：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">%APPDATA%</span>\Microsoft\Windows\<span class="built_in">Start</span> Menu\Programs\Startup</span><br></pre></td></tr></table></figure><p>将之前创建好的“nginx-start.bat”文件复制到此文件夹。</p><p>此时，Nginx应已设置为Windows开机自启动。</p><h1 id="macOS操作系统："><a href="#macOS操作系统：" class="headerlink" title="macOS操作系统："></a>macOS操作系统：</h1><p>对于macOS用户，可以使用以下方法将Nginx设置为开机自启：</p><h2 id="1-创建一个名为-homebrew-mxcl-nginx-plist的文件，并将其保存在-x2F-Library-x2F-LaunchAgents-路径下。"><a href="#1-创建一个名为-homebrew-mxcl-nginx-plist的文件，并将其保存在-x2F-Library-x2F-LaunchAgents-路径下。" class="headerlink" title="1.创建一个名为 homebrew.mxcl.nginx.plist的文件，并将其保存在 ~&#x2F;Library&#x2F;LaunchAgents 路径下。"></a>1.创建一个名为 homebrew.mxcl.nginx.plist的文件，并将其保存在 ~&#x2F;Library&#x2F;LaunchAgents 路径下。</h2><p>编辑文件并写入以下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span><br><span class="line">&lt;plist version=&quot;1.0&quot;&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">  &lt;key&gt;Label&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;homebrew.mxcl.nginx&lt;/string&gt;</span><br><span class="line">  &lt;key&gt;ProgramArguments&lt;/key&gt;</span><br><span class="line">  &lt;array&gt;</span><br><span class="line">    &lt;string&gt;/usr/local/opt/nginx/bin/nginx&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;-g&lt;/string&gt;</span><br><span class="line">    &lt;string&gt;daemon off;&lt;/string&gt;</span><br><span class="line">  &lt;/array&gt;</span><br><span class="line">  &lt;key&gt;RunAtLoad&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;KeepAlive&lt;/key&gt;</span><br><span class="line">  &lt;true/&gt;</span><br><span class="line">  &lt;key&gt;StandardErrorPath&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;/usr/local/var/log/nginx/error.log&lt;/string&gt;</span><br><span class="line">  &lt;key&gt;StandardOutPath&lt;/key&gt;</span><br><span class="line">  &lt;string&gt;/usr/local/var/log/nginx/access.log&lt;/string&gt;</span><br><span class="line">&lt;/dict&gt;</span><br><span class="line">&lt;/plist&gt;</span><br></pre></td></tr></table></figure><h2 id="2-接着，运行以下命令将创建的plist文件加载到launchd服务并启动Nginx："><a href="#2-接着，运行以下命令将创建的plist文件加载到launchd服务并启动Nginx：" class="headerlink" title="2.接着，运行以下命令将创建的plist文件加载到launchd服务并启动Nginx："></a>2.接着，运行以下命令将创建的plist文件加载到launchd服务并启动Nginx：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.8kiz.cn/archives/8407.html">nginx开机自启动设置方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> Nginx </tag>
            
            <tag> linux </tag>
            
            <tag> 开机自启 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx部署前端项目+ 域名配置</title>
      <link href="/posts/1718063250.html"/>
      <url>/posts/1718063250.html</url>
      
        <content type="html"><![CDATA[<h1 id="Step1：服务器上安装-Nginx"><a href="#Step1：服务器上安装-Nginx" class="headerlink" title="Step1：服务器上安装 Nginx"></a>Step1：服务器上安装 Nginx</h1><h2 id="1、安装nginx"><a href="#1、安装nginx" class="headerlink" title="1、安装nginx"></a>1、安装nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Ubuntu</span></span><br><span class="line">apt-get install nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> centOS</span></span><br><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><h2 id="2、检查nginx是否安装，输入如下命令后若出现版本号则安装成功"><a href="#2、检查nginx是否安装，输入如下命令后若出现版本号则安装成功" class="headerlink" title="2、检查nginx是否安装，输入如下命令后若出现版本号则安装成功"></a>2、检查nginx是否安装，输入如下命令后若出现版本号则安装成功</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -v</span><br></pre></td></tr></table></figure><h2 id="3、启动nginx"><a href="#3、启动nginx" class="headerlink" title="3、启动nginx"></a>3、启动nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置nginx在系统启动时自动启动</span></span><br><span class="line">systemctl enable nginx</span><br></pre></td></tr></table></figure><ul><li>注：这里如果出现报错，说明缺少nginx启动相关的依赖，根据报错提示，复制报错提示解决方案的命令，安装相关依赖重新执行上述启动命令即可！</li></ul><h2 id="4、在浏览器输入ip地址，若出现如下页面则启动成功"><a href="#4、在浏览器输入ip地址，若出现如下页面则启动成功" class="headerlink" title="4、在浏览器输入ip地址，若出现如下页面则启动成功"></a>4、在浏览器输入ip地址，若出现如下页面则启动成功</h2><img src="/posts/1718063250/b2b5aa905fc240738bb1429d076504d1.png" class="" title="img"><h1 id="Step2：打包上传Vue项目到服务器"><a href="#Step2：打包上传Vue项目到服务器" class="headerlink" title="Step2：打包上传Vue项目到服务器"></a>Step2：打包上传Vue项目到服务器</h1><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="1-1、Vue2项目配置跨域"><a href="#1-1、Vue2项目配置跨域" class="headerlink" title="1-1、Vue2项目配置跨域"></a>1-1、Vue2项目配置跨域</h3><p>在 vue.config.js 中进行如下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  publicPath: &#x27;/&#x27;,</span><br><span class="line">  outputDir: &#x27;dist&#x27;,</span><br><span class="line">  assetsDir: &#x27;static&#x27;,</span><br><span class="line">  lintOnSave: false,</span><br><span class="line">  productionSourceMap: false,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    port: port,</span><br><span class="line">    open: true,</span><br><span class="line">    overlay: &#123;</span><br><span class="line">      warnings: false,</span><br><span class="line">      errors: true</span><br><span class="line">    &#125;,</span><br><span class="line">    /* 上线用（配置跨域） */</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      &#x27;/api&#x27;: &#123;</span><br><span class="line">        target: &#x27;接口地址url&#x27;,</span><br><span class="line">        // 允许跨域</span><br><span class="line">        changeOrigin: true,</span><br><span class="line">        ws: true,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          &#x27;^/api&#x27;: &#x27;&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-Vue3-Vite项目配置跨域"><a href="#1-2-Vue3-Vite项目配置跨域" class="headerlink" title="1-2 Vue3+Vite项目配置跨域"></a>1-2 Vue3+Vite项目配置跨域</h3><p>在 vite.config.js 中进行如下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server: &#123;</span><br><span class="line">            port: 3005, // 项目端口</span><br><span class="line">            host: &quot;localhost&quot;,</span><br><span class="line">            proxy: &#123;</span><br><span class="line">                &quot;/smartReport&quot;: &#123; // 接口前缀</span><br><span class="line">                    target: &quot;接口服务器地址：ip+端口&quot;,</span><br><span class="line">                    // 允许跨域</span><br><span class="line">                    changeOrigin: true</span><br><span class="line">                    // 路径重写：在发出请求后将 接口前缀 替换为&#x27;&#x27;空值，这样不影响接口请求</span><br><span class="line">                    // pathRewrite: &#123; </span><br><span class="line">                    //   &#x27;^/smartReport&#x27;: &#x27;&#x27;</span><br><span class="line">                    // &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="2、Vue项目打包："><a href="#2、Vue项目打包：" class="headerlink" title="2、Vue项目打包："></a>2、Vue项目打包：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p><strong>打包完成后，会在项目根目录下自动生成一个默认dist文件夹</strong></p><h2 id="3、上传至服务器指定文件夹下"><a href="#3、上传至服务器指定文件夹下" class="headerlink" title="3、上传至服务器指定文件夹下"></a>3、上传至服务器指定文件夹下</h2><p>这里我放在服务器的 &#x2F;root&#x2F;front_end 文件夹下<br>上传命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r [dist文件夹所在的绝对路径] [服务器用户名]@[服务器IP地址]:[目标服务器文件夹绝对路径]</span><br></pre></td></tr></table></figure><p><strong>以我的举例：</strong></p><img src="/posts/1718063250/4cbbf91d37bd4d6e8f402db4f015a488.png" class="" title="img"><p><strong>也可以使用 Xftp 向服务器传输文件，Mac用户推荐Termius</strong></p><h1 id="Step3：配置-Nginx"><a href="#Step3：配置-Nginx" class="headerlink" title="Step3：配置 Nginx"></a>Step3：配置 Nginx</h1><ol><li><p>在服务器上找到Nginx安装位置<br>默认在&#x2F;etc&#x2F;nginx</p></li><li><p>打开 &#x2F;etc&#x2F;nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx</span><br></pre></td></tr></table></figure></li><li><p>修改nginx.conf</p></li></ol><p>我使用的Vs Code进行文件创建并写入</p><p><strong>方法：在Vs Code中安装以下插件，连接至服务器后，打开&#x2F;etc&#x2F;nginx</strong></p><img src="/posts/1718063250/f643cb89d48246338b911371727dca1b.png" class="" title="img"><p><strong>在 nginx.conf 中添加server，内容如下：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       3000;#自己设置端口号</span><br><span class="line">        server_name  njupt_patent  ;#自己设置项目名称</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /root/front_end/dist;#这里写vue项目的所在地址</span><br><span class="line">            index  index.html;#这里是vue项目的首页，需要保证dist中有index.html文件</span><br><span class="line">        &#125;</span><br><span class="line">        location /api/ &#123;    # 会将接口地址/api开头的全部替换文下边配置的地址</span><br><span class="line">            proxy_pass http://[服务器ip地址]:[端口号];            #接口服务地址</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;#错误页面</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完 nginx.conf 后保存，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 测试 Nginx 配置以确保没有语法错误</span></span><br><span class="line">nginx -t</span><br></pre></td></tr></table></figure><p>如果没有错误，重新加载Nginx以使更改生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><ol start="4"><li>也可以直接重启nginx<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure></li></ol><h1 id="Step4：授权访问服务器中的文件夹"><a href="#Step4：授权访问服务器中的文件夹" class="headerlink" title="Step4：授权访问服务器中的文件夹"></a>Step4：授权访问服务器中的文件夹</h1><p>在服务器中打开 dist 所在的文件夹的最上级文件夹（一般是根目录），如：我的 dist 文件夹的绝对路径为 &#x2F;root&#x2F;front_end&#x2F;dist ，那么就打开：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /</span><br></pre></td></tr></table></figure><p><strong>输入如下命令授权访问 dist 文件夹：</strong></p><img src="/posts/1718063250/1da84f125a63437081e772b72a830d04.png" class="" title="img"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 /root/</span><br></pre></td></tr></table></figure><h1 id="Step5：访问已经部署好的Vue项目"><a href="#Step5：访问已经部署好的Vue项目" class="headerlink" title="Step5：访问已经部署好的Vue项目"></a>Step5：访问已经部署好的Vue项目</h1><p><strong>在浏览器输入：</strong><br>服务器IP地址:自己设置端口号&#x2F;index.html<br><strong>即可进行访问</strong></p><h1 id="Step6：域名配置"><a href="#Step6：域名配置" class="headerlink" title="Step6：域名配置"></a>Step6：域名配置</h1><p>在上述 nginx.conf 中添加如下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen 80; #监听端口，http服务默认监听80端口</span><br><span class="line">server_name example.com; #域名，最好需要注册的域名，而且还要解析域名</span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://example.com:[端口号];#代理转发地址</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h1 id="配置本地地址映射域名以及域名转发指定ip"><a href="#配置本地地址映射域名以及域名转发指定ip" class="headerlink" title="配置本地地址映射域名以及域名转发指定ip"></a>配置本地地址映射域名以及域名转发指定ip</h1><p>首先安装nginx,参加博客：<a href="https://www.cnblogs.com/qfb620/p/5508468.html">https://www.cnblogs.com/qfb620/p/5508468.html</a></p><p>按照博客写的访问127.0.0.1查看是否访问成功，成功即安装成功。</p><p>下一步就是配置127.0.0.1与域名scc.company.com的映射（也就是访问scc.company.com可以请求到本地指定端口的地址。我的项目在本地的8083端口，配置正确，就能访问到我的项目）</p><p>首先,通过switch hosts来添加本地对应域名的映射 127.0.0.1 sct.company.com</p><p>下一步，打开nginx.conf</p><p>找到server,配置如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen       80;</span><br><span class="line">      server_name  sct.company.com;</span><br><span class="line"> </span><br><span class="line">      #charset koi8-r;</span><br><span class="line"> </span><br><span class="line">      #access_log  logs/host.access.log  main;</span><br><span class="line"> </span><br><span class="line">      location / &#123;</span><br><span class="line">          root   html;</span><br><span class="line">         index  index.html index.htm;</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      location /custom-web/ &#123;</span><br><span class="line">      proxy_pass   http://127.0.0.1:8083;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>主要改了下面两个地方</p><pre><code>   server_name  sct.company.com;    location /custom-web/ &#123;    proxy_pass   http://127.0.0.1:8083;    &#125;</code></pre><p>好了，127.0.0.1对应域名sct.company.com配好了</p><p>记得重启nginx,进入到nginx的目录，</p><p>输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><p>进行重启。</p><img src="/posts/1718063250/20190617175148422.png" class="" title="img"><p>没有报错就是重启成功</p><p>然后清空浏览器缓存，我是清空了好几次，</p><p>又ping了一下sct.company.com，看请求的是不是本地，</p><img src="/posts/1718063250/20190617175330584.png" class="" title="img"><p>可以看到请求的是本地</p><p>这个时候，浏览器输入sct.company.com&#x2F;custom-web&#x2F;…访问一下项目地址 ,可以看到可以请求到tomcat上面的项目了</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;分割线&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;<br>下面看下重定向，配置如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen       80;</span><br><span class="line">      server_name  sct.lvmama.com;</span><br><span class="line"> </span><br><span class="line">      #charset koi8-r;</span><br><span class="line"> </span><br><span class="line">      #access_log  logs/host.access.log  main;</span><br><span class="line"> </span><br><span class="line">      #location / &#123;</span><br><span class="line">         # root   html;</span><br><span class="line">         # index  index.html index.htm;</span><br><span class="line">     # &#125;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">   rewrite ^/(.*)$ http://www.baidu.com/; </span><br><span class="line">   proxy_pass   http://10.200.4.120:80;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">      location /customization-back-web/ &#123;</span><br><span class="line">      proxy_pass   http://127.0.0.1:8083;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>主要是这个代码：</p><p>  location &#x2F; {<br>        rewrite ^&#x2F;(.*)$ <a href="http://www.baidu.com/">http://www.baidu.com/</a>;<br>        proxy_pass   <a href="http://10.200.4.120/">http://10.200.4.120:80</a>;<br>       }</p><p>nginx -s reload重启nginx </p><p>你输入sct.company.com就会跳转到百度</p><h1 id="nginx配置文件-通过域名访问"><a href="#nginx配置文件-通过域名访问" class="headerlink" title="nginx配置文件 通过域名访问"></a>nginx配置文件 通过域名访问</h1><p>解读Nginx配置文件，通过域名访问tomcat<br>第一次在linux 服务器上使用nginx 并指向tomcat 目录 通过域名 访问项目。遇到了很多坑，为了让自己更好的学习并吸收知识，特意总结了一下这次的经验。<br>首先我们需要了解一下nginx的组成部分，想必大家都是对他有所了解。<br>文件所在的路径是 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf 文件夹下的nginx.conf。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">第一个原本的配置文件上是注释的，这里指的是nginx的用户权限，</span><br><span class="line">user nobody;</span><br><span class="line"></span><br><span class="line">设置最大的工作衍生进程数 这里默认是1</span><br><span class="line">worker_processes 1</span><br><span class="line"></span><br><span class="line">最大的连接数 设置最大的连接数默认为1024个连接数 </span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Http 的主要设置，这里可以添加多个server</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">每一个Server都是一个服务</span><br><span class="line">server&#123;</span><br><span class="line"><span class="meta">#</span><span class="bash">这里是过滤请求，/是所有请求都可以</span></span><br><span class="line">location /&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>下面部署nginx 并使其转发到tomcat下的重点在于server这个块。</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen       80; #首先是nginx的监听端口默认为80</span><br><span class="line">      server_name  www.xxxx.com; #这里是你需要访问的域名地址</span><br><span class="line"><span class="meta">#</span><span class="bash">add_header <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="string">&#x27;*&#x27;</span>;<span class="comment">#这里是http 域名跨域，报错时候添加的请求头，这样写所有请求都会进来，会很不安全。</span></span></span><br><span class="line">      #charset koi8-r;</span><br><span class="line">      #access_log  logs/host.access.log  main;#这里是 日志文件的生成路径</span><br><span class="line">      </span><br><span class="line"><span class="meta">#</span><span class="bash">详细介绍location</span></span><br><span class="line">      location / &#123;</span><br><span class="line">      #是监听的端口默认访问的地址，这里如果没有做tomcat的转发则会进入nginx的html目录下的index.html</span><br><span class="line">          root   html;</span><br><span class="line">          </span><br><span class="line">          #这里是编写监听到的请求所转发的端口号，即tomcat端口</span><br><span class="line">proxy_pass http://localhost:8081;</span><br><span class="line">          #Proxy Settings;</span><br><span class="line">          #proxy_redirect off;</span><br><span class="line">          #proxy_set_header Host $host;</span><br><span class="line">          #proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">          #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置nginx 的默认显示页</span></span><br><span class="line">          index  index.html index.htm;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">设置http请求的请求头，使其在跨域访问上不会被浏览器阻止。ps:这里设置我发现没有用，后来还是在ajax过滤器中添加的 请求头，如果大家有知道这里怎么修改的，请留言大家一起学习。</span></span><br><span class="line">add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;;</span><br><span class="line">add_header &#x27;Access-Control-Allow-Methods&#x27; &#x27;GET, POST, OPTIONS&#x27;;</span><br><span class="line">add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#x27;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">      # redirect server error pages to the static page /50x.html</span><br><span class="line">      #</span><br><span class="line">      error_page   500 502 503 504  /50x.html;</span><br><span class="line">      location = /50x.html &#123;</span><br><span class="line">          root   html;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>下面是location的设置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">设置服务器缓存</span><br><span class="line">1.添加一个location  ~.*\.(意思是所有.jpg后缀的文件)</span><br><span class="line">location  ~.*\.(jpg|png|gif)$&#123;</span><br><span class="line"></span><br><span class="line">2.设置该文件类型文件缓存的清除周期为30天</span><br><span class="line">expires  30d;</span><br><span class="line">&#125;</span><br><span class="line">location  ~.*\.(css|js)?$&#123;</span><br><span class="line"></span><br><span class="line">3.设置该文件类型文件缓存的清除周期为1小说</span><br><span class="line">expires  1h;</span><br><span class="line">&#125;</span><br><span class="line">这里注意 全部请求是/  而过滤的请求是\ </span><br></pre></td></tr></table></figure><p><strong>顺带提一下负载均衡</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Nginx 均衡负载的实现 简单提一下 均衡策略</span><br><span class="line">在http 里添加一个upstream 在这个里面依次填写 不同的ip以及端口 nginx </span><br><span class="line">upstream name&#123;</span><br><span class="line">server ip:端口号;</span><br><span class="line">server ip:端口号;</span><br><span class="line">server ip:端口号;</span><br><span class="line">server ip:端口号;</span><br><span class="line">&#125;</span><br><span class="line">nginx 的默认均衡策略是加权轮询 </span><br><span class="line">1.加权轮询策略</span><br><span class="line">nginx计算每个后端服务器的权重，然后自动分配权重最高的后端服务器来处理请求。</span><br><span class="line">加权轮询策略 使用 weight=1来给地址添加权重，权重越高，nginx会优先分配</span><br><span class="line"></span><br><span class="line">2.ip_hash策略</span><br><span class="line">nginx会记录这个访问的ip地址并且在一段时间中 分配给这个ip一个server。</span><br><span class="line">ip_hash 在upstream 的结尾加上  ip_hash; nginx 自动使用ip_hash</span><br><span class="line"></span><br><span class="line">3.url_hash 等.. 插件形式的均衡策略这里就不提了</span><br></pre></td></tr></table></figure><p><strong>设置完配置文件下面就是运行测试了。</strong></p><ol><li>进入nginx 启动文件的目录 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin</li><li>启动服务 .&#x2F;nginx （这是在第一次启动时使用，或者进程被杀死时启动。）</li><li>重启服务 .&#x2F;nginx -s reload (这是在修改了配置文件的情况下，不需要杀死进程)</li><li>如果在使用 .&#x2F;nginx 命令时 linux 报错nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)证明这个80端口被nginx占用了，这个时候需要杀死进程 使用killall -9 nginx 或者使用 netstat -apn | grep 80 查询当前80端口 tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 13741&#x2F;nginx: master 然后使用kill -9 13741命令杀死进程.</li><li>启动nginx服务器就不会报错，如果配置文件出现错误，下面会显示错误的行号</li></ol><p>在浏览器上输入域名，nginx自动在nginx.conf中查找 server_name 对应的域名 的server 下的location跳转到proxy_pass 这里指的的 IP和端口。我这里设置的是8081端口。</p><img src="/posts/1718063250/20181024161732244" class="" title="img"><p>注意如果proxy_pass 配置的IP地址和域名解析的IP地址不同会出现</p><img src="/posts/1718063250/20181024162037108" class="" title="img"><p>这个问题我是在java代码中使用ajax拦截请求后加入到请求头中解决的。</p><p>在nginx上添加下面这几段并没有实际效果。<br>add_header ‘Access-Control-Allow-Origin’ ‘*’;<br>add_header ‘Access-Control-Allow-Methods’ ‘GET, POST, OPTIONS’;<br>add_header ‘Access-Control-Allow-Headers’ ‘DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type’;</p><h1 id="LINUX安装nginx并绑定域名详细教程"><a href="#LINUX安装nginx并绑定域名详细教程" class="headerlink" title="LINUX安装nginx并绑定域名详细教程"></a>LINUX安装nginx并绑定域名详细教程</h1><ol><li><p>安装依赖包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//一键安装上面四个依赖</span><br><span class="line">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure></li><li><p>下载并解压安装包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//创建一个文件夹</span><br><span class="line">cd /usr/local</span><br><span class="line">mkdir nginx</span><br><span class="line">cd nginx</span><br><span class="line">//下载tar包</span><br><span class="line">wget http://nginx.org/download/nginx-1.13.7.tar.gz</span><br><span class="line">tar -xvf nginx-1.13.7.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>安装nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//进入nginx目录</span><br><span class="line">cd /usr/local/nginx</span><br><span class="line">//进入目录</span><br><span class="line">cd nginx-1.13.7</span><br><span class="line">//执行命令</span><br><span class="line">./configure</span><br><span class="line">//执行make命令</span><br><span class="line">make</span><br><span class="line">//执行make install命令</span><br><span class="line">make install</span><br></pre></td></tr></table></figure></li><li><p>配置nginx.conf</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开配置文件</span><br><span class="line">vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>将端口号改成没有被占用的端口（我这里用的是8066），因为可能apeache占用80端口，apeache端口尽量不要修改，我们选择修改nginx端口。</p></li></ol><p>localhost修改为你服务器ip地址。</p><img src="/posts/1718063250/20200512213707731.png" class="" title="img"><ol start="5"><li><p>启动nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -s reload</span><br><span class="line">//如果出现报错：nginx: [error] open() ＂/usr/local/nginx/logs/nginx.pid＂ failed</span><br><span class="line"></span><br><span class="line">则运行： /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>再次启动即可！<br><strong>查看nginx进程是否启动：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep nginx</span><br></pre></td></tr></table></figure></li><li><p>若想使用外部主机连接上虚拟机访问端口(你的服务器ip地址)，需要关闭虚拟机的防火墙：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">centOS6及以前版本使用命令： systemctl stop iptables.service</span><br><span class="line"></span><br><span class="line">centOS7关闭防火墙命令： systemctl stop firewalld.service</span><br></pre></td></tr></table></figure></li></ol><p><strong>随后访问该ip即可看到nginx界面。</strong></p><img src="/posts/1718063250/20200512214119545.png" class="" title="img"><ol start="7"><li>nginx安装完成后，我们来绑定域名<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开配置文件</span><br><span class="line">vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure></li></ol><p>修改监听端口listen为: 80;<br>修改server_name为 <a href="http://www.xxxx.com(这里是你的域名)/">www.xxxx.com（这里是你的域名）</a>;<br>在下面server标签里添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">           #转发地址</span><br><span class="line">           proxy_pass http://localhost:8066;</span><br><span class="line">           root   html;</span><br><span class="line">           index  index.html index.htm;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><img src="/posts/1718063250/20200512214633218.png" class="" title="img"><ol start="8"><li>然后保存文件，重启nginx，重新访问服务器IP地址，你会发现，你的域名也可以直接跳到你项目的页面</li></ol><img src="/posts/1718063250/20200512215045638.png" class="" title="img"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/NJR10byh/article/details/123267776">Linux服务器使用Nginx部署前端项目+ 域名配置</a></li><li><a href="https://blog.csdn.net/luo_yu_1106/article/details/92662138">nginx配置本地地址映射域名以及域名转发指定ip</a></li><li><a href="https://blog.csdn.net/qq_15724141/article/details/83346093">nginx配置文件 通过域名访问</a></li><li><a href="https://blog.csdn.net/qq_38159467/article/details/106085525">LINUX安装nginx并绑定域名详细教程</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx安装并部署VUE</title>
      <link href="/posts/588013124.html"/>
      <url>/posts/588013124.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是Nginx"><a href="#什么是Nginx" class="headerlink" title="什么是Nginx"></a>什么是Nginx</h1><p>一款高性能、轻量级Web服务软件<br>稳定性高<br>系统资源消耗低<br>对HTTP并发连接的处理能力高<br>单台物理服务器可支持30000~50000个并发请求</p><h1 id="Ubuntu如何部署vue项目操作步骤"><a href="#Ubuntu如何部署vue项目操作步骤" class="headerlink" title="Ubuntu如何部署vue项目操作步骤"></a>Ubuntu如何部署vue项目操作步骤</h1><ol><li>安装nginx。</li><li>在vue项目的根目录下履行“npm run bulid:prod”打包vue项目。</li><li>打包完成后会生成一个dist目录，将其上传到服务器中。</li><li>修改nginx配置文件&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default，例如：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">listen 80;</span><br><span class="line"></span><br><span class="line">listen [::]:80;</span><br><span class="line"></span><br><span class="line">server_name 127.0.0.1:80; # 服务器域名或IP+端口</span><br><span class="line"></span><br><span class="line">root /data/blog/backend/dist; # 打包后的dist目录</span><br><span class="line"></span><br><span class="line">index index.html;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line"></span><br><span class="line">try_files $uri $uri/ @router; # 指向下面的 @router否则会出现 404</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 对应上面的 @router,主要Vue要求其实不是真实路径，没法找到文件，需要重定向到 index.html 中，然后交给路由处理</span></span><br><span class="line"></span><br><span class="line">location @router &#123;</span><br><span class="line"></span><br><span class="line">rewrite ^.*$ /index.html last;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>输入命令重新加载配置文件便可。<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure></li></ol><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>系统：ubuntu20<br>安装nginx：<br>可以先创建一个nginx目录，我的目录在 &#x2F;usr&#x2F;local&#x2F;nginx下</p><h1 id="一、安装nginx"><a href="#一、安装nginx" class="headerlink" title="一、安装nginx"></a>一、安装nginx</h1><ol><li>安装依赖</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install gcc zlib1g-dev libpcre3 libpcre3-dev libssl-dev</span></span><br></pre></td></tr></table></figure><ol start="2"><li>下载nginx</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget https://nginx.org/download/nginx-1.13.4.tar.gz</span></span><br></pre></td></tr></table></figure><p>也可以手动下载：nginx官网 ：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p><ol start="3"><li><p>解压并进入目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -xvf nginx-1.13.4.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> nginx-1.13.4/</span></span><br></pre></td></tr></table></figure></li><li><p>编译和安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./configure</span></span><br><span class="line"><span class="meta">#</span><span class="bash">编译</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make</span></span><br><span class="line"><span class="meta">#</span><span class="bash">编译成功之后，就可以安装了</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make install</span></span><br></pre></td></tr></table></figure></li><li><p>查看nginx版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./configure</span></span><br><span class="line"><span class="meta">#</span><span class="bash">进入nginx安装目录</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看版本</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sbin/nginx -v</span></span><br><span class="line">nginx version: nginx/1.13.4</span><br></pre></td></tr></table></figure></li><li><p>启动【我安装到 &#x2F;usr&#x2F;local&#x2F;nginx目录下了】</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo /usr/<span class="built_in">local</span>/nginx/sbin/nginx</span></span><br><span class="line"><span class="meta">#</span><span class="bash">查看是否启动成功 端口默认是80端口</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> curl 127.0.0.1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">如果返回html 里面有 Welcome to nginx! 则成功</span></span><br></pre></td></tr></table></figure><ol start="7"><li>启动nginx<br>进入&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin目录，输入.&#x2F;nginx即可启动nginx</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx</span><br></pre></td></tr></table></figure><ol start="8"><li>如果启动报错：nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)，说明80端口被占用，使用如下命令：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fuser -k 80/tcp</span><br></pre></td></tr></table></figure></li></ol><p><strong>关闭nginx</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s quit  或者 ./nginx -s stop</span><br></pre></td></tr></table></figure><p><strong>重启nginx</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><p><strong>查看nginx进程</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep nginx</span><br></pre></td></tr></table></figure><ol start="9"><li>设置nginx开机启动<br><strong>只需在rc.local增加启动代码即可。</strong><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/rc.local</span><br></pre></td></tr></table></figure><strong>按键盘 i 然后在底部增加：</strong><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">/usr/<span class="built_in">local</span>/nginx 你的nginx安装的路径</span></span><br><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure></li></ol><p><strong>nginx安装完成</strong></p><h2 id="安装nginx说明2"><a href="#安装nginx说明2" class="headerlink" title="安装nginx说明2"></a>安装nginx说明2</h2><ol><li>下载压缩包<br>下载地址：<a href="https://nginx.org/en/download.html">nginx下载</a></li></ol><img src="/posts/588013124/20191206211604680.png" class=""><ol start="2"><li>解压<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.17.6.tar.gz</span><br></pre></td></tr></table></figure></li><li>安装依赖<br>进入nginx的安装目录</li></ol><img src="/posts/588013124/20191206212015540.png" class=""><p><strong>执行命令后会发现出现错误，很多not found， 我们需要添加依赖库。</strong></p><ul><li><p>1、PCRE库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./configure: error: the HTTP rewrite module requires the PCRE library.</span><br><span class="line">You can either disable the module by using --without-http_rewrite_module</span><br><span class="line">option, or install the PCRE library into the system, or build the PCRE library</span><br><span class="line">statically from the source with nginx by using --with-pcre=&lt;path&gt; option.</span><br></pre></td></tr></table></figure><p><strong>安装PCRE：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install libpcre3 libpcre3-dev</span><br></pre></td></tr></table></figure></li><li><p>2、zlib库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./configure: error: the HTTP gzip module requires the zlib library.</span><br><span class="line">You can either disable the module by using --without-http_gzip_module</span><br><span class="line">option, or install the zlib library into the system, or build the zlib library</span><br><span class="line">statically from the source with nginx by using --with-zlib=&lt;path&gt; option.</span><br></pre></td></tr></table></figure></li></ul><p>** 解决：**</p><p>下载压缩包<a href="http://zlib.net/">http://zlib.net/</a></p><img src="/posts/588013124/20191206212711572.png" class=""><ul><li>解压缩<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf zlib-1.2.11.tar.gz</span><br></pre></td></tr></table></figure></li><li>进入文件夹中，依次执行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>成功，会出现</p><img src="/posts/588013124/20191206213142831.png" class=""><ol start="4"><li>安装Nginx<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20191206213300526.png" class=""><ul><li>1、 查看nginx位置</li></ul><img src="/posts/588013124/2019120621343843.png" class=""><ul><li>2、进入&#x2F;usr&#x2F;local&#x2F;nginx</li></ul><img src="/posts/588013124/20191206213544801.png" class=""><ul><li>3、nginx启动命令<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">首先进入sbin</span></span><br><span class="line">./nginx 开启</span><br><span class="line">./nginx -s stop 停止</span><br><span class="line">./nginx -s quit</span><br><span class="line">./nginx -s reload</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">对 nginx 进行重启相当于先停止再启动，即先执行停止命令再执行启动命令</span></span><br><span class="line">./nginx -s quit</span><br><span class="line">./nginx</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#</span><span class="bash">重新加载配置文件</span></span><br><span class="line">    （当修改nginx.conf 修改，要想让配置生效需要重启nginx，使用./nginx -s reload不用先停止nginx再        </span><br><span class="line">     启动，即可将配置信息在nginx中生效。）</span><br><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure></li></ul><h2 id="一、编译安装Nginx服务"><a href="#一、编译安装Nginx服务" class="headerlink" title="一、编译安装Nginx服务"></a>一、编译安装Nginx服务</h2><p>下载安装包</p><ol><li>关闭防火墙将nginx所需软件包到&#x2F;opt目录下<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line">nginx-1.12.0.tar.gz</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210108161005237.png" class="" title="img"><ol start="2"><li>安装依赖包<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install pcre-devel zlib-devel gcc gcc-c++ make</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210108161659919.png" class="" title="img"><ol start="3"><li>创建运行用户、组<br><strong>（Nginx 服务程序默认以 nobody 身份运行，建议为其创建专门的用户账号，以便更准确地控制其访问权限）</strong><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -M -s /sbin/nologin nginx</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210108161927441.png" class="" title="img"><ol start="4"><li>编译安装Nginx<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cd /opt</span><br><span class="line">tar zxvf nginx-1.12.0.tar.gz -C /opt/</span><br><span class="line"></span><br><span class="line">cd nginx-1.12.0/</span><br><span class="line">./configure \</span><br><span class="line">--prefix=/usr/local/nginx \      #指定nginx的安装路径</span><br><span class="line">--user=nginx \#指定用户名</span><br><span class="line">--group=nginx \#指定组名</span><br><span class="line">--with-http_stub_status_module#启用 http_stub_status_module 模块以支持状态统计</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">ln -s /usr/local/nginx/sbin/nginx /usr/local/sbin/#让系统识别nginx的操作命令</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210108163831472.png" class="" title="img"><ol start="5"><li>检查、启动、重启、停止 nginx服务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">nginx -t#检查配置文件是否配置正确</span><br><span class="line">nginx#启动</span><br><span class="line">cat /usr/local/nginx/logs/nginx.pid#先查看nginx的PID号</span><br><span class="line">kill -3 &lt;PID号&gt;</span><br><span class="line">kill -s QUIT &lt;PID号&gt;#停止</span><br><span class="line">killall -3 nginx</span><br><span class="line">killall -s QUIT nginx</span><br><span class="line"></span><br><span class="line">kill -1 &lt;PID号&gt;#重载</span><br><span class="line">kill -s HUP &lt;PID号&gt;</span><br><span class="line">killall -1 nginx</span><br><span class="line">killall -s HUP nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">日志分隔，重新打开日志文件</span></span><br><span class="line">kill -USR1 &lt;PID号&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash">平滑升级</span></span><br><span class="line">kill -USR2 &lt;PID号&gt;</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210109092954580.png" class="" title="img"><ol start="6"><li>添加 Nginx 系统服务</li></ol><ul><li><p>方法一：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/init.d/nginx</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">chkconfig: - 99 20</span></span><br><span class="line"><span class="meta">#</span><span class="bash">description:Nginx Service Control Script</span></span><br><span class="line">COM=&quot;/usr/local/nginx/sbin/nginx&quot;</span><br><span class="line">PID=&quot;/usr/local/nginx/logs/nginx.pid&quot;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line"><span class="meta">  $</span><span class="bash">COM</span></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line">  kill -s QUIT $(cat $PID)</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">restart)</span><br><span class="line"><span class="meta">  $</span><span class="bash">0 stop</span></span><br><span class="line"><span class="meta">  $</span><span class="bash">0 start</span></span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">reload)</span><br><span class="line">  kill -s HUP $(cat $PID)</span><br><span class="line">;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">echo &quot;Usage: $0 &#123;start|stop|restart|reload&#125;&quot;</span><br><span class="line">exit 1</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">exit 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod +x /etc/init.d/nginx</span><br><span class="line">chkconfig --add nginx#添加为系统服务</span><br><span class="line">systemctl stop nginx</span><br><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure></li><li><p>方法二：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vim /lib/systemd/system/nginx.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/usr/local/nginx/logs/nginx.pid</span><br><span class="line">ExecStart=/usr/local/nginx/sbin/nginx</span><br><span class="line">ExecrReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecrStop=/bin/kill -s QUIT $MAINPID</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">chmod 754 /lib/systemd/system/nginx.service</span><br><span class="line">systemctl start nginx.service</span><br><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure></li></ul><img src="/posts/588013124/20210109094331370.png" class="" title="img"><img src="/posts/588013124/2021010909522079.png" class="" title="img"><h3 id="二、认识Nginx服务的主配置文件-nginx-conf"><a href="#二、认识Nginx服务的主配置文件-nginx-conf" class="headerlink" title="二、认识Nginx服务的主配置文件 nginx.conf"></a>二、认识Nginx服务的主配置文件 nginx.conf</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/nginx/conf/nginx.conf </span><br></pre></td></tr></table></figure><ol><li>全局配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">user nobody; <span class="comment">#运行用户，若编译时未指定则默认为 nobody</span></span></span><br><span class="line">worker_processes 1; #工作进程数量，可配置成服务器内核数 * 2</span><br><span class="line"><span class="meta">#</span><span class="bash">error_log logs/error.log; <span class="comment">#错误日志文件的位置</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">pid logs/nginx.pid; <span class="comment">#PID 文件的位置</span></span></span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210109100647777.png" class="" title="img"><ol start="2"><li>I&#x2F;O 事件配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    use epoll; #使用 epoll 模型，2.6及以上版本的系统内核，建议使用epoll模型以提高性能</span><br><span class="line">    worker_connections 4096; #每个进程处理 4096 个连接</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">如提高每个进程的连接数还需执行“<span class="built_in">ulimit</span> -n 65535”命令临时修改本地每个进程可以同时打开的最大文件数。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">在Linux平台上，在进行高并发TCP连接处理时，最高的并发数量都要受到系统对用户单一进程同时可打开文件数量的限制(这是因为系统为每个TCP连接都要创建一个socket句柄，每个socket句柄同时也是一个文件句柄)。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">可使用<span class="built_in">ulimit</span> -a命令查看系统允许当前用户进程打开的文件数限制.</span></span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210109104817851.png" class="" title="img"><img src="/posts/588013124/20210109100216697.png" class="" title="img"><ol start="3"><li>HTTP 配置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#文件扩展名与文件类型映射表</span></span></span><br><span class="line">    include       mime.types;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#默认文件类型</span></span></span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#日志格式设定</span></span></span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#访问日志位置</span></span></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#支持文件发送(下载)</span></span></span><br><span class="line">    sendfile        on;</span><br><span class="line"><span class="meta"> #</span><span class="bash"><span class="comment">#此选项允许或禁止使用socke的TCP_CORK的选项（发送数据包前先缓存数据），此选项仅在使用sendfile的时候使用</span></span></span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#连接保持超时时间，单位是秒</span></span></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#gzip模块设置，设置是否开启gzip压缩输出</span></span></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#Web 服务的监听配置</span></span></span><br><span class="line">server &#123;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#监听地址及端口</span></span></span><br><span class="line">listen 80; </span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#站点域名，可以有多个，用空格隔开</span></span></span><br><span class="line">server_name www.lic.com;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#网页的默认字符集</span></span></span><br><span class="line">charset utf-8;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#根目录配置</span></span></span><br><span class="line">location / &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#网站根目录的位置/usr/local/nginx/html</span></span></span><br><span class="line">root html;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#默认首页文件名</span></span></span><br><span class="line">index index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#内部错误的反馈页面</span></span></span><br><span class="line">error_page 500 502 503 504 /50x.html;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#错误页面配置</span></span></span><br><span class="line">location = /50x.html &#123;</span><br><span class="line">root html;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/588013124/20210109104601894.png" class="" title="img"><img src="/posts/588013124/20210109105457261.png" class="" title="img"><img src="/posts/588013124/20210109105124101.png" class="" title="img"><img src="/posts/588013124/20210109105253209.png" class="" title="img"><ol start="4"><li>日志格式设定：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">remote_addr与<span class="variable">$http_x_forwarded_for</span>用以记录客户端的ip地址；</span></span><br><span class="line"><span class="meta">$</span><span class="bash">remote_user：用来记录客户端用户名称；</span></span><br><span class="line"><span class="meta">$</span><span class="bash">time_local： 用来记录访问时间与时区；</span></span><br><span class="line"><span class="meta">$</span><span class="bash">request： 用来记录请求的url与http协议；</span></span><br><span class="line"><span class="meta">$</span><span class="bash">status： 用来记录请求状态；成功是200，</span></span><br><span class="line"><span class="meta">$</span><span class="bash">body_bytes_sent ：记录发送给客户端文件主体内容大小；</span></span><br><span class="line"><span class="meta">$</span><span class="bash">http_referer：用来记录从那个页面链接访问过来的；</span></span><br><span class="line"><span class="meta">$</span><span class="bash">http_user_agent：记录客户浏览器的相关信息；</span></span><br><span class="line"></span><br><span class="line">通常web服务器放在反向代理的后面，这样就不能获取到客户的IP地址了，通过$remote_add拿到的IP地址是反向代理服务器的iP地址。反向代理服务器在转发请求的http头信息中，可以增加x_forwarded_for信息，用以记录原有客户端的IP地址和原来客户端的请求的服务器地址。</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location常见配置指令，root、alias、proxy_pass</span><br><span class="line"></span><br><span class="line">root（根路径配置）：请求www.lic.com/test，会返回文件/usr/local/nginx/html/test/index.html</span><br><span class="line"></span><br><span class="line">alias（别名配置）：请求www.lic.com/test，会返回文件/usr/local/nginx/html/index.html</span><br></pre></td></tr></table></figure><img src="/posts/588013124/2021010912200345.png" class="" title="img"><img src="https://img-blog.csdnimg.cn/20210109122117163.png"><img src="https://img-blog.csdnimg.cn/20210109122148161.png"><img src="/posts/588013124/20210109122213224.png" class="" title="img"><img src="/posts/588013124/20210109122501166.png" class="" title="img"><h1 id="二、部署项目"><a href="#二、部署项目" class="headerlink" title="二、部署项目"></a>二、部署项目</h1><ol><li>打开vue项目，在控制台输入<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure>这是我打包好的：默认会生成一个dist文件</li></ol><img src="/posts/588013124/20210104155416123.png" class="" title="img"><ol start="2"><li><p>进入nginx安装目录下，有一个html文件，默认里边有一个index.html文件，删掉</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf *</span><br></pre></td></tr></table></figure></li><li><p>把生成的dist目录下的静态资源传输到服务器</p></li></ol><img src="/posts/588013124/20210104155519139.png" class="" title="img"><p><strong>注意：我自己为了方便上传就将这个文件创建了软链接，然后指向了共享文档里了</strong></p><ol start="4"><li>修改配置文件<br><strong>此外，进入cd &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf目录可修改nginx的配置文件：</strong><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure></li></ol><p><strong>这是我的：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  localhost;</span><br><span class="line"></span><br><span class="line">       #charset koi8-r;</span><br><span class="line"></span><br><span class="line">       #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">       root   html; #配置自己的静态文件的路径，就是刚刚将打包的vue项目上传的路径，我这里是nginx根路径下的html文件中</span><br><span class="line"></span><br><span class="line">       location / &#123;</span><br><span class="line">            # root   html;</span><br><span class="line">           index  index.html index.htm;</span><br><span class="line">           try_files $uri $uri/ /index.html;</span><br><span class="line">           #需要指向下面的@router否则会出现vue的路由在nginx中刷新出现404，两种写法，这里需要在下边配置router</span><br><span class="line">          # try_files $uri $uri/ @router;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       # location @router&#123;</span><br><span class="line">       #    rewrite ^.*$ /index.html last;</span><br><span class="line">       #&#125;</span><br><span class="line"></span><br><span class="line">      # 6、这里是解决跨域问题，将你后端的地址写在proxy_pass 后面就可以了                    </span><br><span class="line">      </span><br><span class="line">       location /api/ &#123;</span><br><span class="line">           #rewrite ^.+api/?(.*)$ /$1 break;  #这样写有问题,在网上看有人这样写，发现有问题</span><br><span class="line">           rewrite ^/api/(.*)$ /$1 break;  #必须的写这个，使用nginx的rewrite对uri进行重写  下面这行也要改为api </span><br><span class="line">           proxy_pass http://10.1.0.111:8888/; #跨域转发路由地址</span><br><span class="line">           proxy_redirect off;</span><br><span class="line">           proxy_set_header Host $host;</span><br><span class="line">           proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">       # redirect server error pages to the static page /50x.html</span><br><span class="line">       #</span><br><span class="line">       error_page   500 502 503 504  /50x.html;</span><br><span class="line">       location = /50x.html &#123;</span><br><span class="line">           root   html;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>这样就可以了<br>记得要开启端口号</p><ol start="5"><li>开放 8080 端口</li></ol><p>1、检查防火墙状态<br><strong>ubuntu</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw status</span><br></pre></td></tr></table></figure><p><strong>centos</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw disable</span><br></pre></td></tr></table></figure><p><strong>running 表示防火墙是开启的，如果你看到的是 not running，则表示防火墙关闭，</strong></p><p>2、关闭防火墙：<br><strong>ubuntu</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><p>3、开放 8080 端口<br><strong>ubuntu</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 22</span><br></pre></td></tr></table></figure><p><strong>centos</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br></pre></td></tr></table></figure><p>4、重启防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld.service</span><br></pre></td></tr></table></figure><p>5、重新载入配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>6、重启nginx<br>在&#x2F;nginx&#x2F;sbin&#x2F;目录下</p><p>重启：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><p>查看nginx进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep nginx</span><br></pre></td></tr></table></figure><h2 id="部署vue前台代码"><a href="#部署vue前台代码" class="headerlink" title="部署vue前台代码"></a>部署vue前台代码</h2><h3 id="1、打包前台代码"><a href="#1、打包前台代码" class="headerlink" title="1、打包前台代码"></a>1、打包前台代码</h3><p>VScode中执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run start</span><br></pre></td></tr></table></figure><p>在项目的文件夹里有个dist文件夹</p><img src="/posts/588013124/20191206214213585.png" class="" title="img"><p>里面的文件，全部复制到&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html中</p><img src="/posts/588013124/20191206214248497.png" class="" title="img"><img src="/posts/588013124/2019120621434736.png" class="" title="img"><h3 id="2、修改配置文件"><a href="#2、修改配置文件" class="headerlink" title="2、修改配置文件"></a>2、修改配置文件</h3><p><strong>进到conf目录下，有个nginx.conf，先备份（好习惯）</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp nginx.conf nginx.conf.back</span><br></pre></td></tr></table></figure><img src="/posts/588013124/20191206214501256.png" class="" title="img"><p>需要修改，</p><img src="/posts/588013124/20191206214827154.png" class="" title="img"><p>重新加载配置文件即可。</p><h1 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h1><ol><li><p><strong>404: Connection refused) while connecting to upstream, client: 172.16.54.1, server: localhost, request: “POST &#x2F;api&#x2F;accountApi&#x2F;accoun t&#x2F;loginAccount HTTP&#x2F;1.1”, upstream: “<a href="http://10.2.0.126:8888/api/accountApi/account/loginAccount%E2%80%9D">http://10.2.0.126:8888/api/accountApi/account/loginAccount”</a>, host: “172.16.5</strong><br>一般在nginx.conf中配置不对，跨域访问就会出现404，找不到页面的情况：<br>一般安装我上边跨域配置，就不会出现了。</p></li><li><p>vue项目，npm run build时点击路由切换，第一次点击没问题，再点不会切换报错如下图<br>Uncaught SyntaxError: Unexpected token ‘＜‘</p></li></ol><img src="/posts/588013124/20210104161229905.png" class="" title="img"><p>因为在将我的项目（在路由中用了懒加载）改为 history模式的过程中，有时候发现会出现chunk加载出错的情况，打开chrome的network发现那个chunk加载404了，是因为请求的url中多了一层路径。我在这里发现了解决方案。</p><p>LinusBorg说，因为在 history模式中切换路由时，我们是真正改变了页面的url路径，所以webpack的runtime会认为它位于 example.com&#x2F;some&#x2F;path。如果 publicPath是设置的相对路径，那么webpack加载chunk时可能会变成 example.com&#x2F;some&#x2F;path&#x2F;static&#x2F;js&#x2F;3.js这样的路径，然而chunk的真正路径是 example.com&#x2F;static&#x2F;js&#x2F;3.js，所以我们需要将 publicPath设置为绝对路径（ publicPath: ‘&#x2F;’）来解决这个问题。<br>具体查看：<a href="https://www.jb51.net/article/162268.htm">https://www.jb51.net/article/162268.htm</a> 讲解很详细<br>解决访问：在config.index中加上：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    publicPath: &#x27;/&#x27;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整的：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line"> publicPath:&#x27;/&#x27;, //配置该路径，nginx中，进行路由转发，才可找到</span><br><span class="line"> devServer: &#123;</span><br><span class="line">    historyApiFallback: true,</span><br><span class="line">    open: true,</span><br><span class="line">    proxy: &#123;</span><br><span class="line">      &#x27;/api&#x27;: &#123;</span><br><span class="line">      </span><br><span class="line">      //  target: &#x27;http://localhost:8888/&#x27;,//设置你调用的接口域名和端口号 别忘了加http</span><br><span class="line">        changeOrigin: true,    //這裡true表示实现跨域</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          &#x27;^/api&#x27;: &#x27;/&#x27; //这里理解成用‘/api’代替target里面的地址，后面组件中我们掉接口时直接用api代替 比如我要调用&#x27;http://40.00.100.100:3002/user/add&#x27;，直接写‘/api/user/add’即可</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完美解决问题</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/sunrj_niu/article/details/112181688">vue项目部署到nginx（超级详细）以及报错解决</a></li><li><a href="https://yuntue.com/post/74325.html">Ubuntu如何部署vue项目</a></li><li><a href="https://blog.csdn.net/weixin_42361127/article/details/103429823">Ubuntu安装Nginx,并部署vue前端代码</a></li><li><a href="https://blog.csdn.net/weixin_51432770/article/details/112350471">Nginx网站服务配置，图文详解（超详细）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu软连接</title>
      <link href="/posts/3647967481.html"/>
      <url>/posts/3647967481.html</url>
      
        <content type="html"><![CDATA[<h1 id="软链接基础"><a href="#软链接基础" class="headerlink" title="软链接基础"></a>软链接基础</h1><p><strong>建立软连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s 原目录 </span><br></pre></td></tr></table></figure><p><strong>删除软连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm  或者强制删除  -rf </span><br></pre></td></tr></table></figure><p><strong>创建软连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln -s 源地址   目的地址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  列如：Ubuntu文件系统rootfs_dir软连接到 /home/lp目录下</span><br><span class="line">  ln  -s  /opt/Linux/root_dir  /home/lp/roo_dir 就OK了</span><br></pre></td></tr></table></figure><h1 id="方法汇总"><a href="#方法汇总" class="headerlink" title="方法汇总"></a>方法汇总</h1><p><strong>一、什么是软连接</strong><br>软连接（Symbolic Link）也叫软链接，是一种特殊的文件，其作用类似于Windows系统下的快捷方式。软连接指向一个文件或目录的路径，当我们打开软连接时，实际上是访问软连接所指向的文件或目录。</p><p><strong>二、创建软连接</strong><br>在Ubuntu系统中，我们可以使用ln命令来创建软连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /path/to/file /path/to/link</span><br></pre></td></tr></table></figure><p>其中，-s代表创建软链接，&#x2F;path&#x2F;to&#x2F;file是要软链接的源文件或目录，&#x2F;path&#x2F;to&#x2F;link是软链接文件的路径。</p><p><strong>三、查看软链接</strong><br>我们可以通过ls命令来查看软链接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l path/to/link</span><br></pre></td></tr></table></figure><p>-l代表以详细信息列表的形式显示文件或目录的属性，path&#x2F;to&#x2F;link是软链接文件的路径。</p><p><strong>四、删除软链接</strong></p><ul><li><ol><li>使用rm命令删除软链接<br>我们可以使用rm命令来删除软连接。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /path/to/link</span><br></pre></td></tr></table></figure></li></ol></li></ul><p>其中，&#x2F;path&#x2F;to&#x2F;link是软链接文件的路径。执行此命令后，软链接文件将被从系统中删除。</p><ul><li><ol start="2"><li>使用unlink命令删除软链接<br>与rm命令不同的是，我们也可以使用unlink命令来删除软连接。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unlink /path/to/link</span><br></pre></td></tr></table></figure></li></ol></li></ul><p>其中，&#x2F;path&#x2F;to&#x2F;link是软链接文件的路径。与rm命令不同的是，unlink命令只能用来删除软链接文件，而不能删除其他类型的文件。</p><ul><li><ol start="3"><li>手动删除软链接文件<br>除了使用命令删除软链接外，我们也可以手动删除软链接文件。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /path/to/link_file</span><br></pre></td></tr></table></figure></li></ol></li></ul><p>其中，&#x2F;path&#x2F;to&#x2F;link_file是软链接文件所在的路径，执行此命令后，软链接文件将被从系统中删除。</p><p><strong>五、注意事项</strong></p><p>在删除软连接文件时需要注意以下几点：</p><ol><li><p>删除软链接并不会删除源文件<br>当我们删除软链接文件时，实际上是在删除软链接文件的记录，并不会删除源文件或目录。</p></li><li><p>删除软链接可能会影响程序功能<br>当软链接文件关联到一个程序的文件夹时，删除软链接文件可能会影响程序的正常运行。因此，在删除软链接文件之前需要确认软链接文件是否与程序相关联。</p></li><li><p>删除软链接需要确认权限<br>删除软链接文件需要具有足够的权限。如果当前用户没有足够的权限，则需要切换到具有删除权限的用户。</p></li></ol><p><strong>六、总结</strong></p><p>通过本文的介绍，我们了解了软连接的基本概念和创建、删除软链接的方法。在删除软链接时，我们需要注意软链接的相关性和删除权限。同时，在使用命令删除软链接时，也可以手动删除软链接文件。</p><h1 id="Linux-ln命令-建立文件-x2F-目录链接"><a href="#Linux-ln命令-建立文件-x2F-目录链接" class="headerlink" title="Linux ln命令 - 建立文件&#x2F;目录链接"></a>Linux ln命令 - 建立文件&#x2F;目录链接</h1><ol><li>使用方式：ln [option] source_file dist_file<br>             -f 建立时，将同档案名删除.<br>             -i 删除前进行询问.<br>             ln -s abc cde 建立abc 的软连接<br>             ln abc cde 建立abc的硬连接，</li><li>软链接与硬链接的区别（通俗）：</li></ol><p>硬链接可认为是一个文件拥有两个文件名;而软链接则是系统新建一个链接文件，此文件指向其所要指的文件</p><p>ln -s &#x2F;root&#x2F;lntest&#x2F;source&#x2F; &#x2F;root&#x2F;lntest&#x2F;dist&#x2F;</p><p>这里看到软链就是个快捷方式</p><img src="/posts/3647967481/14123109519447.png" class=""><ol start="3"><li>软链接与硬链接的区别（讲解）：</li></ol><p><strong>Linux 软连接与硬连接</strong></p><p>对于一个文件来说，有唯一的索引接点与之对应，而对于一个索引接点号，却可以有多个文件名与之对应。因此，在磁盘上的同一个文件可以通过不同的路径去访问该文件。注意在Linux下是一切皆文件的啊，文件夹、新加的硬盘 …都可以看着文件来处理的啊。</p><p>连接有软连接和硬连接(hard link)之分的，软连接(symbolic link)又叫符号连接。符号连接相当于Windows下的快捷方式。</p><p>不可以对文件夹建立硬连接的，我们通常用的还是软连接比较多。</p><p><strong>eg:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="built_in">source</span> dist        <span class="comment"># 建立软连接</span></span><br><span class="line"></span><br><span class="line">ln -s /mnt/hgfs/ /home/luo/    注意后面的“/” 是将目录里所有的文件链接过去，必须加上，否则，建立的目录显示颜色异常，还不能正常访问，如<span class="built_in">cd</span> 进不去</span><br><span class="line"></span><br><span class="line">ln <span class="built_in">source</span> dist            <span class="comment"># 建立硬连接</span></span><br></pre></td></tr></table></figure><p>软链接实际上只是一段文字，里面包含着它所指向的文件的名字，系统看到软链接后自动跳到对应的文件位置处进行处理；相反，硬联接为文件开设一个新的目录项，硬链接与文件原有的名字是平权的，在Linux看来它们是等价的。由于这个原因，硬链接不能连接两个不同文件系统上的文件。</p><p>（1）软连接可以 跨文件系统 ，硬连接不可以 。实践的方法就是用共享文件把windows下的 aa.txt文本文档连接到linux下&#x2F;root目录 下 bb,cc . ln -s aa.txt &#x2F;root&#x2F;bb 连接成功 。ln aa.txt &#x2F;root&#x2F;bb 失败 。</p><p>（2）关于 I节点的问题 。硬连接不管有多少个，都指向的是同一个I节点，会把 结点连接数增加，只要结点的连接数不是 0，文件就一直存在，不管你删除的是源文件还是 连接的文件 。只要有一个存在 ，文件就 存在 （其实也不分什么源文件连接文件的 ，因为他们指向都是同一个 I节点）。 当你修改源文件或者连接文件任何一个的时候 ，其他的文件都会做同步的修改。软链接不直接使用i节点号作为文件指针,而是使用文件路径名作为指针。所以 删除连接文件 对源文件无影响，但是删除源文件，连接文件就会找不到要指向的文件 。软链接有自己的inode,并在磁盘上有一小片空间存放路径名.</p><p>（3）软连接可以对一个不存在的文件名进行连接 。</p><p>（4）软连接可以对目录进行连接。</p><p><strong>备注：节点</strong> :它是UNIX内部用于描述文件特性的数据结构.我们通常称I节点为文件索引结点(信息结点).i节点含有关于文件的大部分的重要信息,包括文件数据块在磁盘上的地址.每一个I节点有它自己的标志号,我们称为文件顺序号.I节点包含的信息 1.文件类型 2.文件属主关系 3.文件的访问权限 4.文件的时间截.</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://javaforall.cn/187546.html">Ubuntu创建软连接</a></li><li><a href="https://www.python100.com/html/NO0742SZ7P1E.html">Ubuntu删除软连接方法汇总</a></li><li><a href="https://www.linuxidc.com/Linux/2014-12/111056.htm">Linux ln命令 - 建立文件&#x2F;目录链接</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 软链接 </category>
          
          <category> 文件管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 软链接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VirtualBox虚拟机开机后台自启动</title>
      <link href="/posts/3955128240.html"/>
      <url>/posts/3955128240.html</url>
      
        <content type="html"><![CDATA[<h1 id="编写BAT脚本文件"><a href="#编写BAT脚本文件" class="headerlink" title="编写BAT脚本文件"></a>编写BAT脚本文件</h1><p>编写bat脚本,其中F:\program\Oracle\VirtualBox为Virtualbox可执行文件所在目录，右键桌面快捷图标可以看到</p><p>虚拟机的名字在虚拟机主界面列表中就可以看到</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">F:\program\Oracle\VirtualBox\VBoxManage.exe startvm ES1 --type headless</span><br><span class="line">F:\program\Oracle\VirtualBox\VBoxManage.exe startvm ES2 --type headless</span><br><span class="line">F:\program\Oracle\VirtualBox\VBoxManage.exe startvm ES3 --type headless</span><br><span class="line">EXIT</span><br></pre></td></tr></table></figure><p>上面脚本是启动了３个虚拟机，根据自己需要改动即可</p><p>把Virtualbox.bat拉到 “C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup”下。这样就能开机启动了。</p><h1 id="遇到问题后自己解决办法"><a href="#遇到问题后自己解决办法" class="headerlink" title="遇到问题后自己解决办法"></a>遇到问题后自己解决办法</h1><p><strong>由于路径是 Program Files 有空格键，所以直接这样写是失败的！</strong><br>后边写成了分批模式就成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d:</span><br><span class="line"><span class="built_in">cd</span> Program Files</span><br><span class="line"><span class="built_in">cd</span> Oracle\VirtualBox</span><br><span class="line">VBoxManage.exe startvm Ubuntu --<span class="built_in">type</span> headless </span><br></pre></td></tr></table></figure><h1 id="BAT详细说明"><a href="#BAT详细说明" class="headerlink" title="BAT详细说明"></a>BAT详细说明</h1><p>Windows7下安装个linux虚拟机，学习下非常好。</p><p>但是每次使用linux的时候，都是打开virtualBox–&gt;启动安装的linux系统–&gt;再用远程桌面(SSH等)连接</p><p>每次手动打开比较麻烦，而且linux虚拟机也有窗口，比较冗杂。如果能开机自启，并且后台运行linux虚拟机(没有可见窗口)，那就开心了。</p><h2 id="找到VirtualBox的安装目录"><a href="#找到VirtualBox的安装目录" class="headerlink" title="找到VirtualBox的安装目录"></a>找到VirtualBox的安装目录</h2><p>我的virtualbox安装在 D:virualBox，进入这个目录，你会看到有个VBoxManage.exe文件，没有错，我们就是用它来启动虚拟机的。</p><p>怎么启动呢?命令行如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage startvm &lt;uuid&gt;|&lt;name&gt; [--<span class="built_in">type</span> gui|sdl|headless] </span><br></pre></td></tr></table></figure><p>比如我新建的虚拟机叫study，那么</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:virualBoxVBoxManage startvm study --<span class="built_in">type</span> headless </span><br></pre></td></tr></table></figure><p>–type headless:表示后台执行，没有窗口哦</p><p>来，我们打开cmd，试下这个命令</p><p>提示已经启动了study虚拟机了。</p><h2 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h2><p>现在看不到窗口了，但是还是需要手动输入命令行启动。如果能开机自启动就好了</p><p>1、首选我们要做一个bat脚本：virtualboxtStart.bat</p><p>2、里面写入上面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:virualBoxVBoxManage startvm study --<span class="built_in">type</span> headless  </span><br></pre></td></tr></table></figure><p>3、把virtualboxtStart.bat放到C:ProgramDataMicrosoftWindowsStart MenuProgramsStartup，这个目录下的脚本是开机的时候自动运行的哦</p><p>好了，小工告成。重启电脑，你就会发现，Windows7偷偷帮我们启动了study这个虚拟机了。</p><p>可以用SSH连接，操作了。</p><p>注：也可以在cmd中使用命令行对虚拟机进行状态管理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VBoxManage controlvm &lt;uuid&gt;|&lt;name&gt; pause|resume|reset|poweroff|savestate| </span><br></pre></td></tr></table></figure><p>比如我想关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:virualBoxVBoxManage controlvm study poweroff </span><br></pre></td></tr></table></figure><h1 id="解决bat批处理文件使用路径有空格-试过无效果"><a href="#解决bat批处理文件使用路径有空格-试过无效果" class="headerlink" title="解决bat批处理文件使用路径有空格(试过无效果)"></a>解决bat批处理文件使用路径有空格(试过无效果)</h1><p>编写批处理文件时，如果文件路径中有空格会无法读取完整路径，这时候可以将有空格的路径用双引号括起来</p><p>在start xxx.exe语句中，不能用双引号把整个路径括起来，要选择性的括有空格的那个</p><p>很多帖子写的是这样括</p><p>start G:\Siemens&quot;NX 12.0”\UGII\ugraf.exe</p><p>但是我试了之后发现运行的时候这个双引号连带着里面的文件名都变成了乱码</p><p>解决方法是把两边的“\”也括进去</p><p>start G:\Siemens”\NX 12.0&quot;UGII\ugraf.exe</p><p>这样就ok了</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="http://www.hzhcontrols.com/new-402594.html">如何在Windows 7下实现VirtualBox虚拟机开机后台自启动</a></li><li><a href="https://ispacesoft.com/107434.html">设置virtualbox开机自启动，并启动虚拟机</a></li><li><a href="https://blog.csdn.net/qq_58846219/article/details/134461042">解决bat批处理文件使用路径有空格</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 问题收集 </category>
          
          <category> 开机自启 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开机自启 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Virtual box </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝牙相关知识收集</title>
      <link href="/posts/4036844216.html"/>
      <url>/posts/4036844216.html</url>
      
        <content type="html"><![CDATA[<h1 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h1><ol><li><a href="https://blog.csdn.net/guoqx/article/details/129174436">蓝牙 - 如何在Windows下抓取蓝牙数据</a><br>首先，要在Windows上安装一个工具：Bluetooth Virtual Sniffer (btvs.exe)。<br>下载路径：</li></ol><p>访问：Get the Microsoft Bluetooth Test Platform software package - Windows drivers | Microsoft Learn</p><p>点击下载：<a href="https://download.microsoft.com/download/e/e/e/eeed3cd5-bdbd-47db-9b8e-ca9d2df2cd29/BluetoothTestPlatformPack-1.14.0.msi">https://download.microsoft.com/download/e/e/e/eeed3cd5-bdbd-47db-9b8e-ca9d2df2cd29/BluetoothTestPlatformPack-1.14.0.msi</a></p><p>下一步安装WireShark</p><p>在命令行终端里，运行btvs.exe程序。</p><p>c:\BTP\v1.14.0\x86&gt;btvs.exe -Mode Wireshark</p><p>然后就会启动Wireshark，开始抓取蓝牙数据。要抓取成功，要打开电脑的蓝牙功能，才会有数据出现。</p><ol start="2"><li><a href="https://blog.csdn.net/linan101/article/details/124007791">蓝牙 BLE 广播包信息解析</a><br>低功耗蓝牙 BLE 广播数据解析：</li></ol><p>低功耗蓝牙包含两类报文：广播报文 &amp; 数据报文；<br>在广播的时候使用3个信道，顺序广播；</p><p>广播包 有效数据部分 无效数据部分</p><h1 id="包解析"><a href="#包解析" class="headerlink" title="包解析"></a>包解析</h1><ol><li><a href="https://sleepingbug.blog.csdn.net/article/details/50628568">蓝牙4.0 BLE 广播包解析</a></li></ol><h1 id="阿里云蓝牙"><a href="#阿里云蓝牙" class="headerlink" title="阿里云蓝牙"></a>阿里云蓝牙</h1><ol><li><a href="https://help.aliyun.com/document_detail/173318.html">蓝牙BLE非交互式广播规范</a></li></ol><h1 id="C-蓝牙开发"><a href="#C-蓝牙开发" class="headerlink" title="C#蓝牙开发"></a>C#蓝牙开发</h1><ol><li><p><a href="https://blog.csdn.net/A244108451/article/details/128664207">使用C#进行蓝牙开发-接收BLE广播</a></p></li><li><p><a href="https://blog.csdn.net/allexw/article/details/129127168">使用C#进行低功耗蓝牙BLE开发</a></p></li><li><p><a href="https://www.jb51.net/article/273720.htm">C#连接蓝牙设备的实现示例</a></p></li><li><p><a href="https://blog.csdn.net/Ikaros_521/article/details/118700495">win10 蓝牙调试工具 Bluetooth LE Explorer 简单使用</a></p></li><li><p><a href="https://blog.csdn.net/code_long/article/details/105636398">C# ble 4.0 低能耗 蓝牙交互</a></p></li><li><p><a href="https://blog.csdn.net/shengfakun1234/article/details/110928783">Win10 平台C#与低功耗蓝牙BLE设备通信案例</a></p></li></ol><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 蓝牙 </category>
          
          <category> C# </category>
          
          <category> 抓包 </category>
          
          <category> Wireshark </category>
          
          <category> Bluetooth Test Platform </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝牙知识 </tag>
            
            <tag> 抓包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homeassistant环境Docker配置</title>
      <link href="/posts/1724428249.html"/>
      <url>/posts/1724428249.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu下使用docker"><a href="#Ubuntu下使用docker" class="headerlink" title="Ubuntu下使用docker"></a>Ubuntu下使用docker</h1><ol><li><p><a href="https://blog.csdn.net/Tester_muller/article/details/131440306">最详细的ubuntu 安装 docker教程</a></p></li><li><p><a href="https://blog.csdn.net/root_1314/article/details/128050433">Ubuntu-卸载Docker</a></p></li></ol><h2 id="安装hass"><a href="#安装hass" class="headerlink" title="安装hass"></a>安装hass</h2><ol><li><p><a href="https://blog.csdn.net/qq_41830158/article/details/131605397">docker安装Homeassist</a></p></li><li><p><a href="https://www.fastboard.cn/150/">Home Assistant基本搭建(Docker方式)</a></p></li></ol><p><strong>根据这个安装hass成功</strong></p><ol><li><a href="https://blog.51cto.com/u_16175446/7071164">ubuntu docker 安装homeassistant</a></li></ol><p>安装HomeAssistant<br>在安装HomeAssistant之前，我们需要先创建一个Docker容器来运行HomeAssistant。以下是整个安装过程的步骤：</p><p>步骤描述<br>1拉取HomeAssistant镜像<br>2创建HomeAssistant容器<br>3配置HomeAssistant<br>步骤1：拉取HomeAssistant镜像<br>首先，我们需要从Docker Hub上拉取HomeAssistant的镜像。HomeAssistant的官方镜像名称是homeassistant&#x2F;home-assistant。执行以下命令来拉取镜像：</p><p>docker pull homeassistant&#x2F;home-assistant<br>1.<br>步骤2：创建HomeAssistant容器<br>完成镜像的拉取后，我们可以通过创建一个Docker容器来运行HomeAssistant。为了方便管理，我们可以给容器起一个有意义的名称，并将一些配置文件和数据文件挂载到容器内部。执行以下命令来创建容器：</p><p>docker run -d –name&#x3D;homeassistant <br>  –restart unless-stopped <br>  -v &#x2F;path&#x2F;to&#x2F;config:&#x2F;config <br>  -v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro <br>  –network&#x3D;host <br>  homeassistant&#x2F;home-assistant<br>上述命令中的参数解释如下：</p><p>-d：表示以后台模式运行容器<br>–name&#x3D;homeassistant：给容器起一个名称，这里使用homeassistant<br>–restart unless-stopped：设置容器在退出后自动重新启动<br>-v &#x2F;path&#x2F;to&#x2F;config:&#x2F;config：将配置文件挂载到容器的&#x2F;config目录下，其中&#x2F;path&#x2F;to&#x2F;config是你本地存放HomeAssistant配置文件的路径<br>-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro：将宿主机的时区挂载到容器中，确保时间同步<br>–network&#x3D;host：使用主机网络模式，使得HomeAssistant能够访问本地网络设备<br>homeassistant&#x2F;home-assistant：此为之前拉取的HomeAssistant镜像名称<br>步骤3：配置HomeAssistant<br>现在，我们已经成功创建了HomeAssistant容器。接下来，我们需要进行一些配置，以便访问和管理HomeAssistant。以下是几个重要的配置项：</p><p>Web界面访问：HomeAssistant的Web界面默认监听在8123端口，使用浏览器访问<a href="http://localhost:8123即可进入界面。">http://localhost:8123即可进入界面。</a><br>配置文件：容器中的配置文件位于&#x2F;config目录下，你可以通过编辑本地配置文件来修改HomeAssistant的配置。<br>插件安装：HomeAssistant支持通过插件来扩展功能，你可以在Web界面的”插件商店”中安装和管理插件。</p><h1 id="整合部分"><a href="#整合部分" class="headerlink" title="整合部分"></a>整合部分</h1><ol><li><a href="https://ranlychan.top/archives/489.html">物联网 | HASS+MQTT+树莓派室内监测小型物联网系统</a></li></ol><h1 id="配置hass下的yaml文件"><a href="#配置hass下的yaml文件" class="headerlink" title="配置hass下的yaml文件"></a>配置hass下的yaml文件</h1><p><strong>通过这个办法找到yaml文件啦</strong></p><ol><li><a href="https://www.bilibili.com/read/cv14045974/">怎样修改homeassistant 的配置文件configuration.yaml</a><br>二．直接连接容器修改<br>1.通过ssh连接修改(使用的是这个)<br>     sudo docker exec -it homeassistant bash<br>    vi configuration.yaml<br>2.vnc 连接修改<br>   进入 &#x2F;usr&#x2F;share&#x2F;hassio&#x2F;homeassistant文件夹找configuration.yaml<br>3.通过破portainer连接修改<br>    vi configuration.yaml</li></ol><p><strong>参考这个修改实体成功</strong><br>2. <a href="https://blog.csdn.net/weixin_61908666/article/details/130186243">homeassistant配置MQTT集成以及传感器实体（STM32连接进入homeassistant）</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> ubuntu </category>
          
          <category> hass </category>
          
          <category> ESP8266 </category>
          
          <category> ESP32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 智能家居 </tag>
            
            <tag> ESP8266 </tag>
            
            <tag> 物联网 </tag>
            
            <tag> Homeassistant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu文件压缩、解压缩等操作</title>
      <link href="/posts/2452845339.html"/>
      <url>/posts/2452845339.html</url>
      
        <content type="html"><![CDATA[<h1 id="打包、压缩、解压缩-Lnux需先打包成一个文件再压缩"><a href="#打包、压缩、解压缩-Lnux需先打包成一个文件再压缩" class="headerlink" title="打包、压缩、解压缩(Lnux需先打包成一个文件再压缩)"></a>打包、压缩、解压缩(Lnux需先打包成一个文件再压缩)</h1><p>在具体总结各类压缩文件之前，首先要弄清两个概念：打包和压缩。</p><p>打包是指将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压缩算法变成一个小文件。为什么要区分这两个概念呢？其实这源于Linux中的很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就得先借助另外的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。</p><p>Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩了。</p><p><img src="https://img-blog.csdnimg.cn/709ccabc1f6949d488eec8d0925544ad.png"></p><h2 id="课堂笔记-tar既能打包又能解压缩"><a href="#课堂笔记-tar既能打包又能解压缩" class="headerlink" title="课堂笔记(tar既能打包又能解压缩)"></a>课堂笔记(tar既能打包又能解压缩)</h2><img src="https://img-blog.csdnimg.cn/709ccabc1f6949d488eec8d0925544ad.png"><img src="https://img-blog.csdnimg.cn/2c517ed25b014ad8a9c52c0147af2bd1.png"><img src="https://img-blog.csdnimg.cn/d53dc1dfb3f24c11b5f1e9d272853263.png"><p><strong>上面笔记中打包顺序写反了：tar - vcf test.tar test</strong></p><img src="https://img-blog.csdnimg.cn/ba8e0dd368e645e7aebb93bc1b8b2c99.png"><p><strong>tar提供打包解包的同时还具有压缩和解压缩功能：</strong></p><img src="https://img-blog.csdnimg.cn/b44a581f7de9455bb5037a6beebe4bff.png"><img src="https://img-blog.csdnimg.cn/13723a96f7b348b5a2969aed4e033b26.png"><p><strong>注意：不好用的时候，把参数Z去掉，或者你文件从Windows传到虚拟机有问题。</strong></p><img src="https://img-blog.csdnimg.cn/80d88168445c4d08a6a767dbfc04f3b2.png"><h1 id="打包解包-带软链接"><a href="#打包解包-带软链接" class="headerlink" title="打包解包(带软链接)"></a>打包解包(带软链接)</h1><img src="https://img-blog.csdnimg.cn/b5315f38e46542ebbb51724d0a836496.png"><p><strong>解包提示有问题的话，直接用 tar -vxf test.tar 解包软链接也生效。</strong></p><h2 id="1-拷贝文件-带软链接"><a href="#1-拷贝文件-带软链接" class="headerlink" title="1.拷贝文件(带软链接)"></a>1.拷贝文件(带软链接)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -d dep/libs/*  到开发板的/usr/lib下</span><br></pre></td></tr></table></figure><h2 id="2-拷贝文件夹"><a href="#2-拷贝文件夹" class="headerlink" title="2.拷贝文件夹"></a>2.拷贝文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r certs  到开发板的/mnt/user_data/iot_data下</span><br></pre></td></tr></table></figure><h2 id="3-命令实现"><a href="#3-命令实现" class="headerlink" title="3.命令实现"></a>3.命令实现</h2><p><strong>解包 .tar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf FileName.tar</span><br></pre></td></tr></table></figure><p><strong>打包.tar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf FileName.tar DirName  <span class="comment"># tar是打包，不是压缩！</span></span><br></pre></td></tr></table></figure><p><strong>解压.tar.gz 和 .tgz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf FileName.tar.gz</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.gz 和 .tgz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf FileName.tar.gz DirName</span><br></pre></td></tr></table></figure><p><strong>解压.zip：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip FileName.zip</span><br></pre></td></tr></table></figure><p><strong>压缩.zip：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r FileName.zip DirName</span><br></pre></td></tr></table></figure><p>-r 表示递归</p><p><strong>解包.tgz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf FileName.tgz</span><br></pre></td></tr></table></figure><p><strong>解压.gz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip FileName.gz</span><br></pre></td></tr></table></figure><p><strong>解压.gz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip -d FileName.gz</span><br></pre></td></tr></table></figure><p><strong>压缩.gz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip FileName</span><br></pre></td></tr></table></figure><p><strong>解压.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -d FileName.bz2</span><br></pre></td></tr></table></figure><p><strong>解压.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bunzip2 FileName.bz2</span><br></pre></td></tr></table></figure><p><strong>压缩.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -z FileName</span><br></pre></td></tr></table></figure><p><strong>解压.tar.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -jxvf FileName.tar.bz2</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar- jcvf FileName.tar.bz2 DirName</span><br></pre></td></tr></table></figure><p><strong>解压.bz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -d FileName.bz</span><br></pre></td></tr></table></figure><p><strong>解压.bz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bunzip2 FileName.bz</span><br></pre></td></tr></table></figure><p><strong>解压.tar.bz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar jxvf FileName.tar.bz</span><br></pre></td></tr></table></figure><p><strong>.tar.xz 这是两层压缩，外面是xz压缩方式，里层是tar压缩</strong><br>所以可以分两步实现解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ xz -d filename.tar.xz</span><br><span class="line">$ tar -xvf filename.tar</span><br></pre></td></tr></table></figure><p><strong>也可以直接解压</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvJf filename.tar.xz</span><br><span class="line">or</span><br><span class="line">tar -Jxf filename.tar.xz</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.xz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -Jcf filename.tar.xz filename</span><br></pre></td></tr></table></figure><p><strong>解压.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompress FileName.Z</span><br></pre></td></tr></table></figure><p><strong>压缩.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compress FileName</span><br></pre></td></tr></table></figure><p><strong>解压.tar.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -Zxvf FileName.tar.Z</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar Zcvf FileName.tar.Z DirName</span><br></pre></td></tr></table></figure><p><strong>解压.rar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rar -x FileName.rar</span><br></pre></td></tr></table></figure><p><strong>压缩.rar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rar -a FileName.rar DirName</span><br></pre></td></tr></table></figure><p><strong>解压.lha：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lha -e FileName.lha</span><br></pre></td></tr></table></figure><p><strong>压缩.lha：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lha -a FileName.lha FileName</span><br></pre></td></tr></table></figure><p><strong>解包.rpm：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm2cpio FileName.rpm | cpio -div</span><br></pre></td></tr></table></figure><p><strong>解包.deb：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar p FileName.deb data.tar.gz | tar -zxf </span><br></pre></td></tr></table></figure><p><strong>解压.tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sEx x FileName.*</span><br></pre></td></tr></table></figure><p><strong>压缩.tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sEx a FileName.* FileName</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/zhuguanlin121/article/details/118726551">Ubuntu文件压缩、解压缩、打包解包(带软链接)、拷贝文件(带软链接)、拷贝文件夹</a></li><li><a href="https://blog.csdn.net/weixin_45309916/article/details/107791294">Ubuntu 命令解压文件大全</a></li><li><a href="https://blog.csdn.net/ji519974770/article/details/81916468">打包和压缩的概念和区别</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> zar </category>
          
          <category> 文件管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> zar </tag>
            
            <tag> 压缩 </tag>
            
            <tag> 解压 </tag>
            
            <tag> 软链接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO打包到github报错</title>
      <link href="/posts/3701598706.html"/>
      <url>/posts/3701598706.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>在文章写好之后打包静态网页并发送到github中时，提示一下错误<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</p><p>一度以为ssh导致问题，重新创建几次都不成功<br>而且也已经放弃使用了一段时间</p><p>直到今天想重新安装esp8266环境时才想起</p><p>然后各种找原因，各种尝试</p><p>最终在这篇文章下找到了答案</p><p>就是把 C:\Users\Administrator.ssh\known_hosts 文件删除就行</p><h1 id="解决参考"><a href="#解决参考" class="headerlink" title="解决参考"></a>解决参考</h1><p>本地ubuntu20.04 通过ssh连接腾讯云 云主机ubuntu20.04出现以下提示</p><p>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!<br>Someone could be eavesdropping on you right now (man-in-the-middle attack)!<br>It is also possible that a host key has just been changed.<br>The fingerprint for the ECDSA key sent by the remote host is<br>SHA256:lWEJCiuk2DsPYdodOxj8w7WFY3b+RF+9f5ns.<br>Please contact your system administrator.<br>Add correct host key in &#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts to get rid of this message.<br>Offending ECDSA key in &#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts:6<br>  remove with:<br>  ssh-keygen -f “&#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts” -R “43.<em><strong>.</strong>.</em><strong>“<br>ECDSA host key for 43.</strong><em>.**.*</em> has changed and you have requested strict checking.<br>Host key verification failed.</p><p>将known_hosts文件删除就行了,看它的提示，文件位置在哪里，改成你的文件位置即可。</p><p>rm -rf &#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts<br>然后出现</p><p>Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?<br>敲yes就行了，然后输入你的密码即可。</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/crazytire/article/details/125964956">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! 解决办法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> gihub </category>
          
          <category> ssh </category>
          
          <category> known_hosts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu使用minicom串口工具</title>
      <link href="/posts/2500108762.html"/>
      <url>/posts/2500108762.html</url>
      
        <content type="html"><![CDATA[<h1 id="linux查看usb转串口设备使用的端口号"><a href="#linux查看usb转串口设备使用的端口号" class="headerlink" title="linux查看usb转串口设备使用的端口号"></a>linux查看usb转串口设备使用的端口号</h1><p><strong>查看使用的端口号：</strong></p><img src="https://img-blog.csdnimg.cn/20210613112924873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY3MzYwMw==,size_16,color_FFFFFF,t_70"><p><strong>也可以输入以下命令查看：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /dev/ttyUSB*</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210613114213709.png"><p><strong>可以看到有几个设备挂载。</strong></p><p>设置端口号：<br>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo minicom -s</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210613113046237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY3MzYwMw==,size_16,color_FFFFFF,t_70"><p>运行代码：<br>完成</p><h1 id="退出方法"><a href="#退出方法" class="headerlink" title="退出方法"></a>退出方法</h1><p>1）需使用Ctrl+a 进入设置状态<br>2）按z进入设置菜单<br>（1）S键：发送文件到目标系统中；<br>（2）W键：自动卷屏。当显示的内容超过一行之後，自动将後面的内容换行。这个功能在查看内核的啓动信息时很有用。<br>（3）C键：清除屏幕的显示内容；<br>（4）B键：浏览minicom的历史显示；<br>（5）X键：退出mInicom，会提示确认退出。</p><h1 id="minicom常用指令"><a href="#minicom常用指令" class="headerlink" title="minicom常用指令"></a>minicom常用指令</h1><p>因为现在电脑基本不配备串行接口，所以，usb转串口成为硬件调试时的必然选择。目前知道的，PL2303的驱动是有的，在dev下的名称是ttyUSB#。</p><p>minicom，tkterm都是linux下应用比较广泛的串口软件，这里简单介绍minicom使用。</p><p>一，安装</p><p>debian 系，比如 ubuntu、mint等：</p><p>sudo apt-get install minicom</p><p>二，配置</p><p>首先，查看串口设备是否可用。linux下的所有操作面向用户的都是文件操作，在对串口操作之前，我们应该先确认自己对该文件有没有读写权限。</p><p>ls -l &#x2F;dev&#x2F;ttyUSB*</p><p>linux下的usb串口命名为ttyUSB，运行上面命令，可以看到有几个设备挂载。</p><p>我们这里是：</p><p>crw-rw—- 1 root dialout 188, 0 Apr 10 17:10 &#x2F;dev&#x2F;ttyUSB0</p><p>只有ttuUSB0.</p><p>但是正如上面显示，ttyUSB0这个设备是root所有的，所以，我们以普通用户身份打开minicom是没法访问该文件的。</p><p>然后，运行$ sudo minicom -s ， 设置串口。</p><p>进入minicom的配置界面，使用上下键选择Serial port setup，回车。此时光标在“change which setting”后面停留，它的上面有如下菜单：</p><p>Serial port setup [Enter]+————————————————————-+</p><p>| A – Serial Device : &#x2F;dev&#x2F;ttyUSB0 |</p><p>| B – Lockfile Location : &#x2F;var&#x2F;lock |</p><p>| C – Callin Program : |</p><p>| D – Callout Program -: |</p><p>| E – Bps&#x2F;Par&#x2F;Bits : 115200 8N1 |</p><p>| F – Hardware Flow Control : No |</p><p>| G – Software Flow Control : No |</p><p>| |</p><p>| Change which setting? |</p><p>+————————————————————-+</p><p>我们只需输入上面对应的字母，就可以进如相应的菜单进行设置。设置完成，回车，光标会回到“change which setting”后面，如此重复。完成按回车返回主菜单即可。</p><p>注意：如果不是 USB 转串口，而是直接使用串口，那么 Serial Device 要配置为 &#x2F;dev&#x2F;ttyS0(具体哪个设备，系统不同名字不同，如果你不知道，那就看你运气了)。</p><p>返回主菜单后，选择“Save setup as dfl”，将其保存为默认设置，然后选择 Exit 退出，注意，不是退出 minicom。</p><p>三，使用</p><p>如果上面设置顺利，重新给开发板上电后，此时，窗口里就有信息打印出来了。minicom基本操作如下：</p><p>1)组合键 Ctrl+a 进入设置状态；</p><p>2)按 z 打开帮助菜单，或者你用的熟练的话，直接输入菜单对应的字母即可；</p><p>(1)S键：发送文件到目标系统中；</p><p>(2)W键：自动卷屏。当显示的内容超过一行之後，自动将後面的内容换行。这个功能在查看内核的啓动信息时很有用。</p><p>(3)C键：清除屏幕的显示内容；</p><p>(4)B键：浏览minicom的历史显示；</p><p>(5)X键：退出mInicom，会提示确认退出。</p><ol start="3"><li>比如，使用 Ctrl-A–&gt;O 进入 minicom 配置菜单：</li></ol><p>+—–[configuration]——+</p><p>| Filenames and paths |</p><p>| File transfer protocols -|</p><p>| Serial port setup |</p><p>| Modem and dialing |</p><p>| Screen and keyboard |</p><p>| Save setup as dfl |</p><p>| Save setup as.. |</p><p>| Exit |</p><p>+————————–+</p><p>我们可以配置使用 Ctrl-A-S 发送文件时的默认路径，可选择”Filenames and paths”进行配置：</p><p>+———————————————————————–+</p><p>| A – Download directory : &#x2F;home&#x2F;crliu |</p><p>| B – Upload directory : &#x2F;tmp |</p><p>| C – Script directory : |</p><p>| D – Script program : runscript |</p><p>| E – Kermit program : |</p><p>| F – Logging options |</p><p>| |</p><p>| Change which setting? |</p><p>+———————————————————————–+</p><p>如上，A – download 下载文件的存放位置(开发板 —&gt; PC, rz)开发板上的文件将被传输到PC机上的&#x2F;home&#x2F;crliu目录下。</p><p>B – upload 从此处读取上传的文件(PC —&gt; 开发板, sz)PC机向开发板发送文件，需要发送的文件在&#x2F;tmp目录下(PC机上的目录)。</p><p>四，其他技巧</p><p>启动 minicom 的时候，会检测 MINICOM 环境变量，将它们作为命令参数，如果命令中指定了某个参数，那么这个 MINICOM 中的相应的某个参数会被替换。</p><p>我们在 ~&#x2F;.bashrc 文件中添加这一行，使得 minicom 默认每次都进入彩色模式，并自动进入串口配置：</p><p>export MINICOM&#x3D;’-s -c on’</p><p>The configuration 参数更有趣。通常，minicom从文件“minirc.dfl”中获取其缺省值。不过，若你给minicom一个参数，它将尝试从文件“minirc.configuration”中获取缺省值。因此，为不同端口、不同用户等创建多个配置文件是可能的。最好使用设备名，如：tty1， tty64，sio2等。如果用户创建了自己的配置文件，那么该文件将以“.minirc.dfl”为名出现在他的home目录中。</p><p>minicom的全局配置文件通常在&#x2F;etc&#x2F;minirc.dfl. minicom将其配置文件保存在一个目录中，通常是：&#x2F;var&#x2F;lib&#x2F;minicom, &#x2F;usr&#x2F;local&#x2F;etc或者&#x2F;etc。要想知道minicom编译时内定的缺省目录，可用命令“minicom -h”，在那儿你可能还会找到runscript(1) 的demo文件。</p><p>配置文件的文件名格式：minirc.user。minicom默认加载配置文件minirc.df1，但你也可以仿照minirc.df1编辑自己的配置文件minirc.user，输入minicom user启动时则加载minirc.user。如在本机上，我做了一个minirc.root，输入minicom root 启动minicom，则系统自动加载&#x2F;etc&#x2F;minirc.root中的配置。</p><p>$HOME&#x2F;.minirc.*</p><p>$HOME&#x2F;.dialdir</p><p>$HOME&#x2F;minicom.log</p><p>&#x2F;usr&#x2F;share&#x2F;locale&#x2F;*&#x2F;LC_MESSAGES&#x2F;minicom.mo</p><p>*命令行启动minicom的参数</p><p>更多的参数，参见”man minicom”的输出。</p><p>-s</p><p>设置。 root 使用此选项在&#x2F;etc&#x2F;minirc.dfl中编辑系统范围的缺省值。使用此参数后，minicom 将 不 进行初始化， 而是直接进入配置菜单。如果因为你的系统被改变，或者第一次运行minicom时，minicom不能启动，这个参数就会很有用。对于多数系统，已经内定了比较合适的缺省值。</p><p>-o</p><p>不进行初始化。minicom 将跳过初始化代码。如果你未复位(reset)就退出了minicom，又想重启一次会话(session)，那么用这个选项就比较爽(不会再有错误提示：modem is locked —- 注)。但是也有潜在的危险：由于未对lock文件等进行检查，因此一般用户可能会与uucp之类的东东发生冲突……也许以后这个参数会被去掉。现在姑且假定，使用modem的用户对自己的行为足够负责。</p><p>-m</p><p>用Meta或Alt键重载命令键。在1.80版中这是缺省值，也可以在minicom 菜单中配置这个选项。不过若你一直使用不同的终端，其中有些没有Meta或Alt键，那么方便的做法还是把缺省的命令键设置为Ctrl-A，当你有了支持 Meta或Alt键的键盘时再使用此选项。Minicom假定你的Meta键发送ESC前缀，而不是设置字符最高位的那一种(见下)。</p><p>-M</p><p>跟“-m”一样，但是假定你的Meta键设置字符高端的第八位(发送128+字符代码)。</p><p>-z</p><p>使用终端状态行。仅当终端支持，并且在其termcap或terminfo<a href="https://cloud.tencent.com/solution/database?from=10680">数据库</a>入口中有相关信息时才可用。</p><p>-l</p><p>逐字翻译 高位被置位的字符。使用此标志， minicom将不再尝试将IBM行字符翻译为ASCII码，而是将其直接传送。许多PC-Unix克隆不经翻译也能正确显示它们(Linux使用专门的模式：Coherent和Sco)。</p><p>-w</p><p>在启动的时候就自动换行，这样启动之后不用运行 w进行设置了，详细参考后面。</p><p>-a</p><p>特性使用。 有些终端，特别是televideo终端， 有个很讨厌的特性处理(串行而非并行)。minicom缺省使用‘-a on’，但若你在用这样的终端，你就可以(必须!)加上选项‘-a off’。尾字‘on’或‘off’需要加上。</p><p>-t</p><p>终端类型。使用此标志， 你可以重载环境变量TERM， 这在环境变量MINICOM 中使用很方便； 你可以创建一个专门的 termcap 入口以备minicom 在控制台上使用，它将屏幕初始化为raw模式， 这样，连同‘-l’标志一起，就可以不经翻译而显示IBM行字符。</p><p>-c</p><p>颜色使用。些终端(如Linux控制台)支持标准ANSI转义序列色彩。由于termcap显然没有对于色彩的支持，因而minicom 硬性内置了这些转义序列的代码。所以此选项缺省为off。使用‘-c on’可以打开此项。把这个标志，还有‘-m’放入MINICOM环境变量中是个不错的选择。</p><p>-S</p><p>脚本。 启动时执行给定名字的脚本。到目前为止，还不支持将用户名和口令传送给启动脚本。如果你还使用了‘-d’选项，以在启动时开始拨号，此脚本将在拨号之前运行，拨号项目入口由‘-d’指明。</p><p>-p</p><p>要使用的伪终端。 它超载配置文件中定义的终端端口，但仅当其为伪tty设备。提供的文件名必须采用这样的形式：(&#x2F;dev&#x2F;)tty[p-z][0-f]</p><p>-C</p><p>文件名。 启动时打开捕获文件。</p><p>-8</p><p>不经修改地传送8位字符。“连续”意指未对地点&#x2F;特性进行真正改变，就不插入地点&#x2F;特性控制序列。此模式用于显示8位多字节字符，比如日本字(TMD！应该是中国字!!)。不是8位字符的语言都需要(例如显示芬兰文字就不需要这个)。</p><h1 id="linux-查看所有USB端口"><a href="#linux-查看所有USB端口" class="headerlink" title="linux 查看所有USB端口"></a>linux 查看所有USB端口</h1><p>1、查看串口是否可用</p><p>可以对串口发送数据比如对com1口，echo &#x2F;dev&#x2F;ttyS0</p><p>2、查看串口名称使用</p><p>ls -l &#x2F;dev&#x2F;ttyS*</p><p>一般情况下串口的名称全部在dev下面，如果你没有外插串口卡的话默认是dev下的ttyS*,一般ttyS0对应com1，ttyS1对应com2，当然也不一定是必然的；</p><p>3、查看串口驱动</p><p>cat&#x2F;proc&#x2F;tty&#x2F;drivers&#x2F;serial</p><p>4、查看串口设备</p><p>dmesg | grep ttyS*</p><p>5、查一下板子上的串口有没有设备</p><p>grep tty&#x2F;proc&#x2F;devices</p><p>如果有ttyS设备，再看&#x2F;dev&#x2F;有没有ttyS*，如没有就建立一个：mknod &#x2F;dev&#x2F;ttyS0 c 4 64</p><p>如果板子的设备中没有标准串口设备ttyS0，也没有ttySAC0。&#x2F;dev下应该有一个USB串口：&#x2F;dev&#x2F;ttyUSB0.</p><p>当一个串行卡或数据卡被侦测到时，它会被指定成为第一个可用的串行设备。通常是&#x2F;dev&#x2F;ttyS1(cua1)或&#x2F;dev&#x2F;ttyS2(cua2)，这完成看原已内建的串口数目。ttyS*设备会被报告在&#x2F;var&#x2F;run&#x2F;stab内。</p><p>PC上的串口一般是ttyS，板子上Linux的串口一般叫做ttySAC</p><p>补充:</p><p>如果需要查看这个串口设备输出</p><p>cat ttyUSB0</p><p>如果需要对这个设备输入</p><p>echo aaaaa&gt;ttyUSB0</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/weixin_43673603/article/details/117871650">linux查看usb转串口设备使用的端口号</a></li><li><a href="https://blog.csdn.net/jhyworkspace/article/details/53572284">minicom退出方法</a></li><li><a href="https://cloud.tencent.com/developer/article/2070441">minicom指令_Minicom 使用初步</a></li><li><a href="https://blog.csdn.net/weixin_34489089/article/details/116677110">linux 查看所有USB端口,linux查看所有串口和usb设备方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> minicom </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 串口 </tag>
            
            <tag> minicom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu烧录下载时找不到USB0报错</title>
      <link href="/posts/3713584928.html"/>
      <url>/posts/3713584928.html</url>
      
        <content type="html"><![CDATA[<h1 id="ESP编译好后下载时发现找不到端口"><a href="#ESP编译好后下载时发现找不到端口" class="headerlink" title="ESP编译好后下载时发现找不到端口"></a>ESP编译好后下载时发现找不到端口</h1><p>问题:<br>在linux环境，使用esp32 MDK进行烧录程序时， 当执行到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p dev/ttfUSB0 flash</span><br></pre></td></tr></table></figure><p>时候报错，无法操作。</p><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><p>只有root用户和属于dialout组的用户会有读写权限</p><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p>该方法重启就会失效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>永久生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG dialout user //user替换为自己的用户名</span><br></pre></td></tr></table></figure><h2 id="reboot-x2F-x2F-必须要重启一下才会生效"><a href="#reboot-x2F-x2F-必须要重启一下才会生效" class="headerlink" title="reboot &#x2F;&#x2F;必须要重启一下才会生效"></a>reboot &#x2F;&#x2F;必须要重启一下才会生效</h2><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/amimax/article/details/128244634">【问题解决】ESP32报错：could not open port &#x2F;dev&#x2F;ttyUSB0: [Errno 13] Permission denied: ‘&#x2F;dev&#x2F;ttyUSB0</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> ESP8266 </category>
          
          <category> ESP32 </category>
          
          <category> 乐鑫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> ESP8266 </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 乐鑫 </tag>
            
            <tag> 烧录 </tag>
            
            <tag> USB0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP32环境(Ubuntu) 问题集锦</title>
      <link href="/posts/2527818842.html"/>
      <url>/posts/2527818842.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装好环境后报错"><a href="#安装好环境后报错" class="headerlink" title="安装好环境后报错"></a>安装好环境后报错</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fatal: 不是 git 仓库：’/home/geeloong/esp/esp-idf/.git’</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;cmake&quot;</span> must be available on the PATH to use idf.py</span><br></pre></td></tr></table></figure><p><strong>解决办法:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">sudo apt install cmake</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/Aspiration_H/article/details/124168414">ESP32开发环境搭建，Linux，SDK，IDF，Ubuntu，乐鑫</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 文件共享 </category>
          
          <category> ESP32 </category>
          
          <category> 乐鑫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 乐鑫 </tag>
            
            <tag> ESP32 </tag>
            
            <tag> SDK-IDF </tag>
            
            <tag> 开发环境 </tag>
            
            <tag> 安装问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过HOMEKIT让ESP8266控制继电器</title>
      <link href="/posts/442091668.html"/>
      <url>/posts/442091668.html</url>
      
        <content type="html"><![CDATA[<h1 id="ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）"><a href="#ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）" class="headerlink" title="ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）"></a>ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）</h1><p><strong>首先感谢：</strong><br><a href="https://github.com/RavenSystem/esp-homekit-devices">https://github.com/RavenSystem/esp-homekit-devices</a><br><a href="https://github.com/Gruppio/Sonoff-Homekit">https://github.com/Gruppio/Sonoff-Homekit</a><br>主要设备：ESP8266、1路5V继电器、杜邦线若干。</p><img src="https://img-blog.csdnimg.cn/20190113140601235.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190113140616914.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190113140633662.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>下面开始进入正题：</p><h2 id="开始给ESP8266刷固件"><a href="#开始给ESP8266刷固件" class="headerlink" title="开始给ESP8266刷固件"></a>开始给ESP8266刷固件</h2><p><a href="https://pan.baidu.com/s/1Xp3CvFbdh4McnkBIacfsuQ">https://pan.baidu.com/s/1Xp3CvFbdh4McnkBIacfsuQ</a> （固件自取）<br>本次采用esptool.py来刷鞋固件，所以需要给电脑安装python环境。</p><h2 id="安装esptool-py"><a href="#安装esptool-py" class="headerlink" title="安装esptool.py"></a>安装esptool.py</h2><p>pip install esptool<br>切换到python的安装路径不知道在哪的输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> python</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20190113142401883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p><strong>cd &#x2F;python路径 切换到python安装目录，在此目录下放上我们要刷写的固件</strong></p><img src="https://img-blog.csdnimg.cn/20190113142724432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>好，开始用micro-USB线将ESP8266连接到计算机（如果不识别自行安装CH340驱动）记住端口号，我的是COM3</p><img src="https://img-blog.csdnimg.cn/20190113143206883.png"><h2 id="先清空flash"><a href="#先清空flash" class="headerlink" title="先清空flash"></a>先清空flash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py --port COM3 erase_flash</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/2019011314341874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><h2 id="刷入固件"><a href="#刷入固件" class="headerlink" title="刷入固件"></a>刷入固件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p COM3 -b 115200 write_flash -fs 1MB -fm dout -ff 40m 0x0 rboot.bin 0x1000 blank_config.bin 0x2000 Sonoff_ON.bin</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20190113143825879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>**到这里固件已经刷入完成，搜索WIFI看到名为Switch-****<strong>的SSID，连接上后进入192.168.4.1进行设置为其连接上一个可联网的WIFI。</strong></p><img src="https://img-blog.csdnimg.cn/20190113144217426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>这时打开ios的家庭APP，添加配件，选择“我没有代码或无法扫描”<strong>输入配对码：11111111</strong></p><img src="https://img-blog.csdnimg.cn/20190113144537603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190113144609464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><h2 id="我们可以从串口信息看到正在添加HOMEKIT-客户端"><a href="#我们可以从串口信息看到正在添加HOMEKIT-客户端" class="headerlink" title="我们可以从串口信息看到正在添加HOMEKIT 客户端"></a>我们可以从串口信息看到正在添加HOMEKIT 客户端</h2><img src="https://img-blog.csdnimg.cn/20190113145119352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><h2 id="这时已经成功添加到家庭APP，支持SIRI控制"><a href="#这时已经成功添加到家庭APP，支持SIRI控制" class="headerlink" title="这时已经成功添加到家庭APP，支持SIRI控制"></a>这时已经成功添加到家庭APP，支持SIRI控制</h2><img src="https://img-blog.csdnimg.cn/20190113145151882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>接下来，让我们把继电器连接到ESP8266的D6 (GPIO12)口上。ESP8266接笔记本的USB口可能会供电不足导致不能控制继电器。我在这里就用充电宝做电源了。我们可以试试让siri帮你开关继电器了</p><img src="https://img-blog.csdnimg.cn/2019011314553482.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>这里附上一张继电器接220V用电器的示意图</p><img src="https://img-blog.csdnimg.cn/20190113145902241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/TWTF1998/article/details/86419559">ESP8266控制继电器（支持HOMEKIT）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> ESP8266 </category>
          
          <category> 乐鑫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> ESP8266 </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 乐鑫 </tag>
            
            <tag> HOMEKIT </tag>
            
            <tag> esptool.py </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C 使用 sizeof 判断数组大小报错</title>
      <link href="/posts/2501953460.html"/>
      <url>/posts/2501953460.html</url>
      
        <content type="html"><![CDATA[<h1 id="extern关联数组"><a href="#extern关联数组" class="headerlink" title="extern关联数组"></a>extern关联数组</h1><p>在写代码时，我想用extern来关联一个数组，然后利用sizeof计算数组的大小，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> a[];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> b size=(sizeof(a)/sizeof(a[0]))</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>编译报错：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invalid application of `<span class="keyword">sizeof</span><span class="number">&#x27;</span> to incomplete type `<span class="keyword">char</span>[] &#x27;</span><br></pre></td></tr></table></figure><p>主要原因是sizeof不能用在extern变量：<br>sizeof 的计算是在代码编译的时刻。<br>而extern是在链接的时刻。<br>所以 sizeof 在计算时，并不知道这个extern修饰的符号到底占用了多少空间。</p><p>解决办法：</p><p>1.把sizeof()和数组写到一个文件中</p><p>2.不用宏定义b，而是在定义数组a的那个文件里定义 size&#x3D;(sizeof(a)&#x2F;sizeof(a[0]));<br>然后在其他文件中<br>extern int size;<br>extern char a[];</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.programminghunter.com/article/53431378866/#:~:text=invalid%20application%20of%20%60%20sizeof%27%20to%20incomplete,type%20%60char%20%5B%5D%20%27%20%E4%B8%BB%E8%A6%81%E5%8E%9F%E5%9B%A0%E6%98%AFsizeof%E4%B8%8D%E8%83%BD%E7%94%A8%E5%9C%A8extern%E5%8F%98%E9%87%8F%EF%BC%9A%20sizeof%20%E7%9A%84%E8%AE%A1%E7%AE%97%E6%98%AF%E5%9C%A8%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E7%9A%84%E6%97%B6%E5%88%BB%E3%80%82">invalid application of <code>sizeof&#39; to incomplete type </code>char[] ‘</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> 关键字 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> sizeof </tag>
            
            <tag> extern </tag>
            
            <tag> 关键字 </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 程序编译时自动更新版本号方法</title>
      <link href="/posts/996856330.html"/>
      <url>/posts/996856330.html</url>
      
        <content type="html"><![CDATA[<h1 id="1-创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件"><a href="#1-创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件" class="headerlink" title="1.创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件"></a>1.创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line">    <span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="comment">//by txwtech</span></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">AutoUpdateVersion</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UpdateVersion</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">string</span> line</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">var</span> first = line.IndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> second = line.LastIndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> sVersion = line.Substring(first + <span class="number">1</span>, second - first - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">var</span> arrVersion = sVersion.Split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span> (arrVersion.Length &lt; <span class="number">4</span>) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">var</span> major = Convert.ToInt32(arrVersion[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">var</span> minor = Convert.ToInt32(arrVersion[<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">var</span> build = Convert.ToInt32(arrVersion[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">var</span> amendment = Convert.ToInt32(arrVersion[<span class="number">3</span>]);</span><br><span class="line">                <span class="keyword">if</span> (++amendment &gt; <span class="number">999</span>) ++build;</span><br><span class="line">                <span class="keyword">if</span> (build &gt; <span class="number">99</span>) ++minor;</span><br><span class="line">                <span class="keyword">if</span> (minor &gt; <span class="number">9</span>) ++major;</span><br><span class="line">                <span class="keyword">var</span> sNewVersion = <span class="string">$&quot;<span class="subst">&#123;major&#125;</span>.<span class="subst">&#123;minor&#125;</span>.<span class="subst">&#123;build&#125;</span>.<span class="subst">&#123;amendment&#125;</span>&quot;</span>;</span><br><span class="line">                line = line.Replace(sVersion, sNewVersion);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;this is updateversion app&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (args.Length != <span class="number">1</span> || !File.Exists(args[<span class="number">0</span>])) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">var</span> lines = File.ReadAllLines(args[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = lines.Length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyFileVersion&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyVersion&quot;</span>) &amp;&amp; !lines[i].Contains(<span class="string">&quot;*&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                File.WriteAllLines(args[<span class="number">0</span>], lines);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="2-拷贝文件"><a href="#2-拷贝文件" class="headerlink" title="2. 拷贝文件"></a>2. 拷贝文件</h1><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220422171616543-110909714.jpg"><h1 id="3-复制到另外一个项目，需要自动更新版本号的项目"><a href="#3-复制到另外一个项目，需要自动更新版本号的项目" class="headerlink" title="3.复制到另外一个项目，需要自动更新版本号的项目"></a>3.复制到另外一个项目，需要自动更新版本号的项目</h1><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220422171541867-2022955841.jpg"><h1 id="4-打开项目属性进行设置；"><a href="#4-打开项目属性进行设置；" class="headerlink" title="4. 打开项目属性进行设置；"></a>4. 打开项目属性进行设置；</h1><p>start AutoUpdateVersion $(ProjectDir)Properties\AssemblyInfo.cs</p><p>或者：</p><p>AutoUpdateVersion $(ProjectDir)Properties\AssemblyInfo.cs</p><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220422171844330-228246739.jpg"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/txwtech/p/16179740.html">C#程序编译时自动更新版本号方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 版本号 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 版本号 </tag>
            
            <tag> 自动更新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 十进制与十六进制之间的转换</title>
      <link href="/posts/1935384656.html"/>
      <url>/posts/1935384656.html</url>
      
        <content type="html"><![CDATA[<h1 id="转换进制方法一"><a href="#转换进制方法一" class="headerlink" title="转换进制方法一"></a>转换进制方法一</h1><h2 id="一、十进制转换为十六进制"><a href="#一、十进制转换为十六进制" class="headerlink" title="一、十进制转换为十六进制"></a>一、十进制转换为十六进制</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">654</span>;</span><br><span class="line"><span class="built_in">string</span> A = a.ToString(<span class="string">&quot;X6&quot;</span>);</span><br></pre></td></tr></table></figure><p>上面Tostring(“X6”)是将整型a转化成16进制数；</p><p>其中：</p><p><strong>（1） “x”小写输出十六进制的的字母为小写字母，”X”大写则输出的十六进制字母为大写；</strong></p><p><strong>（2） 后面的数字6是表示自动补0补足6位；</strong></p><h2 id="二、十六进制转为十进制"><a href="#二、十六进制转为十进制" class="headerlink" title="二、十六进制转为十进制"></a>二、十六进制转为十进制</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = Convert.ToInt64(A, <span class="number">16</span>);</span><br></pre></td></tr></table></figure><p>将十六进制数A转化为整型a</p><p>其中：</p><p><strong>（1）var关键字：匿名类型，可以代替任何类型</strong></p><p><strong>（2） ToInt64(String value,Int frombase)是Convert里面的一个方法，是将制定技术的数字的字符串表示形式转换为等效的64位有符号整数，Value是需要转化的字符串，frombase是数字基数，即2，8，10，16，这里是将16进制转化，所以是16</strong></p><h1 id="将整数转换为十六进制"><a href="#将整数转换为十六进制" class="headerlink" title="将整数转换为十六进制"></a>将整数转换为十六进制</h1><p><strong>将整数转换为十六进制</strong></p><p>可以使用string.ToString()扩展方法将整数转换为十六进制。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer Value: <span class="number">500</span></span><br><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br></pre></td></tr></table></figure><p><strong>将十六进制转换为整数</strong>-</p><p>可以使用int.Parse或convert.ToInt32将十六进制值转换为整数</p><p>**int.Parse-**将数字的字符串表示形式转换为其等效的32位有符号整数。返回值指示操作是否成功。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><p>**Convert.ToInt32-**将指定的值转换为32位带符号整数。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><p><strong>将整数转换为十六进制</strong>-</p><p><strong>字符串hexValue &#x3D; integerValue.ToString（“ X”）;</strong></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DemoApplication</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">int</span> integerValue = <span class="number">500</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Integer Value: <span class="subst">&#123;integerValue&#125;</span>&quot;</span>);</span><br><span class="line">         <span class="built_in">string</span> hexValue = integerValue.ToString(<span class="string">&quot;X&quot;</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Hexadecimal Value: <span class="subst">&#123;hexValue&#125;</span>&quot;</span>);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p>上面代码的输出是</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer Value: <span class="number">500</span></span><br><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br></pre></td></tr></table></figure><p><strong>将十六进制转换为整数</strong>-</p><p><strong>使用int.Parse的示例</strong>-</p><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DemoApplication</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">string</span> hexValue = <span class="string">&quot;1F4&quot;</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Hexadecimal Value: <span class="subst">&#123;hexValue&#125;</span>&quot;</span>);</span><br><span class="line">         <span class="built_in">int</span> integerValue = <span class="built_in">int</span>.Parse(hexValue, System.Globalization.NumberStyles.HexNumber);</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Integer Value: <span class="subst">&#123;integerValue&#125;</span>&quot;</span>);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p>上面代码的输出是</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><p><strong>使用Convert.ToInt32的示例</strong>-</p><h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DemoApplication</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">string</span> hexValue = <span class="string">&quot;1F4&quot;</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Hexadecimal Value: <span class="subst">&#123;hexValue&#125;</span>&quot;</span>);</span><br><span class="line">         <span class="built_in">int</span> integerValue = Convert.ToInt32(hexValue, <span class="number">16</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Integer Value: <span class="subst">&#123;integerValue&#125;</span>&quot;</span>);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p>上面代码的输出是</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><h1 id="数据互转-16进制-amp-16进制字符串-amp-字符串"><a href="#数据互转-16进制-amp-16进制字符串-amp-字符串" class="headerlink" title="数据互转 16进制&amp;16进制字符串&amp;字符串"></a>数据互转 16进制&amp;16进制字符串&amp;字符串</h1><h2 id="1、字符串过滤-or-提取字符串"><a href="#1、字符串过滤-or-提取字符串" class="headerlink" title="1、字符串过滤 or 提取字符串"></a>1、字符串过滤 or 提取字符串</h2><p>提取字符串：在C# .net开发中 “ToString()”方法是最常见的，用于将文本转为字符串；</p><p>字符串过滤：在处理字符串数据或者hex数据时，一般都需要去掉 空格 数组标识0x 标点符号 等等字符，方便后续进一步处理；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将文本转为字符串</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">string</span> str = textBox1.Text.ToString();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//过滤字符串</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> pattern = <span class="string">&quot;[A-Za-z0-9]&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> strRet = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//正则匹配，只保留字母和数字</span></span><br><span class="line">    MatchCollection results = Regex.Matches(ReadString(), pattern);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> v <span class="keyword">in</span> results)</span><br><span class="line">    &#123;</span><br><span class="line">        strRet += v.ToString();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> strRet.Replace(<span class="string">&quot;0x&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、字符串与16进制数组互转"><a href="#2、字符串与16进制数组互转" class="headerlink" title="2、字符串与16进制数组互转"></a>2、字符串与16进制数组互转</h2><p>从字符串转16进制数组，字符串的每一个字符就是一个byte；</p><p>可以用Encoding类的方法完成格式转换，Encoding位于System.Text命名空间下；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//str为输入字符串</span></span><br><span class="line"><span class="built_in">byte</span>[] bytes = Encoding.Default.GetBytes(str);</span><br></pre></td></tr></table></figure><p><strong>同样的，字节数组转字符串；</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bytes为输入字节数组</span></span><br><span class="line"><span class="built_in">string</span> str = Encoding.Default.GetString(bytes);</span><br></pre></td></tr></table></figure><h2 id="3、16进制数组与16进制字符串互转"><a href="#3、16进制数组与16进制字符串互转" class="headerlink" title="3、16进制数组与16进制字符串互转"></a>3、16进制数组与16进制字符串互转</h2><ul><li>16进制数组无法直接打印和显示（否则会出现乱码），这就需要转成对应的字符串；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">//利用for循环将16进制数组转成对应的16进制字符串</span></span><br><span class="line"><span class="comment">//如 0x7E,0x5D,0x5A =&gt; &quot;7E5D5A&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">string</span> strTemp = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">strTemp += bytes[i].ToString(<span class="string">&quot;X2&quot;</span>);</span><br><span class="line">strTemp += <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般对于嵌入式硬件底层，收到的数据都是字节流，不需要转换，可以直接处理；</p><p>但是对于PC、Android等非底层驱动，拿到的数据都是字符串形式，这就需要将16进制字符串转16进制数组；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">//str为过滤之后的字符串，只包含字母和数字</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">string</span> strTemp = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; str.Length/<span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">strTemp += str.Substring(<span class="number">2</span> * i, <span class="number">2</span>);</span><br><span class="line">strTemp += <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、字符串与16进制字符串"><a href="#4、字符串与16进制字符串" class="headerlink" title="4、字符串与16进制字符串"></a>4、字符串与16进制字符串</h2><p>二者互转又多了一层。</p><ol><li><p>字符串转16进制字符串：先将字符串转为16进制数组，再将16进制数组转为16进制字符串；</p></li><li><p>16进制字符串转字符串：先将16进制字符串转为16进制数组，再将16进制数组转为字符串；</p></li></ol><h2 id="5、其它常见转换操作"><a href="#5、其它常见转换操作" class="headerlink" title="5、其它常见转换操作"></a>5、其它常见转换操作</h2><p><strong>5.1 字符串替换</strong><br>小节1中介绍了正则匹配来过滤字符串的方法，string类本身也有很多方法实现过滤和替换</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//去掉字符串中的控制字符</span></span><br><span class="line"><span class="built_in">string</span> str2 = str1.Replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\t&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>5.2 格式转换</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Encoding为编码格式转换</span></span><br><span class="line"><span class="comment">//Convert为数据格式转换</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//常见的转换有</span></span><br><span class="line"> </span><br><span class="line">Convert.ToByte();</span><br><span class="line">Convert.ToUInt16();</span><br><span class="line">Convert.ToUInt32();</span><br><span class="line">Convert.ToUInt64();</span><br><span class="line">Convert.ToDateTime();</span><br><span class="line">Convert.ToString();</span><br><span class="line">Convert.ToBase64String();</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/DKDUCK/article/details/120427693">C#中十进制与十六进制之间的转换</a></li><li><a href="https://www.nhooo.com/note/qa02fr.html">如何在C#中将整数转换为十六进制，反之亦然？</a></li><li><a href="https://blog.csdn.net/weixin_38743772/article/details/128653936">C# 数据互转 16进制&amp;16进制字符串&amp;字符串</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 数据 </category>
          
          <category> 进制转换 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 数据 </tag>
            
            <tag> 进制转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 获取本机IP</title>
      <link href="/posts/1056828438.html"/>
      <url>/posts/1056828438.html</url>
      
        <content type="html"><![CDATA[<h1 id="获取本机IP"><a href="#获取本机IP" class="headerlink" title="获取本机IP"></a>获取本机IP</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetLocalIp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span>获取本地的IP地址</span></span><br><span class="line">    <span class="built_in">string</span> AddressIP = <span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="keyword">foreach</span> (IPAddress _IPAddress <span class="keyword">in</span> Dns.GetHostEntry(Dns.GetHostName()).AddressList)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_IPAddress.AddressFamily.ToString() == <span class="string">&quot;InterNetwork&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            AddressIP = _IPAddress.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> AddressIP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/txwtech/p/16201403.html">c#获取本机IP</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> IP </category>
          
          <category> 网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 网络 </tag>
            
            <tag> IP地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十八（十字光标-交叉线跟随鼠标移动）</title>
      <link href="/posts/884599238.html"/>
      <url>/posts/884599238.html</url>
      
        <content type="html"><![CDATA[<h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><h2 id="设置ChartAre属性："><a href="#设置ChartAre属性：" class="headerlink" title="设置ChartAre属性："></a>设置ChartAre属性：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserEnabled = <span class="literal">true</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorY.IsUserEnabled = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h2 id="对Chart添加MouseMove事件，在方法内实现如下代码："><a href="#对Chart添加MouseMove事件，在方法内实现如下代码：" class="headerlink" title="对Chart添加MouseMove事件，在方法内实现如下代码："></a>对Chart添加MouseMove事件，在方法内实现如下代码：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.SetCursorPixelPosition(<span class="keyword">new</span> PointF(e.X, e.Y), <span class="literal">true</span>);</span><br><span class="line">    chart1.ChartAreas[<span class="number">0</span>].CursorY.SetCursorPixelPosition(<span class="keyword">new</span> PointF(e.X, e.Y), <span class="literal">true</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/337384925">C# Chart 十字光标&#x2F;交叉线跟随鼠标移动</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十七（隐藏与显示某一系列曲线方法vs2019-示例）</title>
      <link href="/posts/1984843230.html"/>
      <url>/posts/1984843230.html</url>
      
        <content type="html"><![CDATA[<h1 id="图表隐藏与显示方法"><a href="#图表隐藏与显示方法" class="headerlink" title="图表隐藏与显示方法"></a>图表隐藏与显示方法</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(checkBox1.Checked==<span class="literal">true</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//  chart1.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line">        <span class="comment">//  chart2.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line">        chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">true</span>;      </span><br><span class="line">        <span class="comment">//by txwtech</span></span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// chart1.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">        chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// chart1.Series[0].Points.Clear();</span></span><br><span class="line">        <span class="comment">//  chart2.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220429164428048-2096736696.jpg"><h1 id="完整代码示例"><a href="#完整代码示例" class="headerlink" title="完整代码示例"></a>完整代码示例</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms.DataVisualization.Charting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">draw_chart_practice</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        ToolTip toolTip = <span class="keyword">new</span> ToolTip();</span><br><span class="line">        <span class="built_in">string</span> postion11 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span>[] xx = <span class="keyword">new</span> <span class="built_in">string</span> []&#123;<span class="string">&quot;1月&quot;</span>,<span class="string">&quot;2月&quot;</span>, <span class="string">&quot;3月&quot;</span>,<span class="string">&quot;4月&quot;</span>, <span class="string">&quot;5月&quot;</span>, <span class="string">&quot;6月&quot;</span>,<span class="string">&quot;7月&quot;</span>, <span class="string">&quot;8月&quot;</span>, <span class="string">&quot;9月&quot;</span>, <span class="string">&quot;10月&quot;</span>, <span class="string">&quot;11月&quot;</span>, <span class="string">&quot;12月&quot;</span> &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">int</span>[] yy = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">88</span>,<span class="number">99</span>,<span class="number">100</span>, <span class="number">88</span>, <span class="number">99</span>, <span class="number">100</span> , <span class="number">88</span>, <span class="number">99</span>, <span class="number">100</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">5</span> &#125;;</span><br><span class="line">        <span class="built_in">int</span>[] yy2 = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">18</span>, <span class="number">95</span>, <span class="number">105</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span> &#125;;</span><br><span class="line">      <span class="comment">//  string[] yy3 = new string[] &#123; &quot;1月&quot;, &quot;2月&quot;, &quot;3月&quot;, &quot;4月&quot;, &quot;5月&quot;, &quot;6月&quot;, &quot;7月&quot;, &quot;8月&quot;, &quot;9月&quot;, &quot;10月&quot;, &quot;11月&quot;, &quot;12月&quot; &#125;;</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">modify</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">          <span class="comment">//  static void Main(string[] args)</span></span><br><span class="line">            &#123;</span><br><span class="line">                DirectoryInfo directoryInfo = <span class="keyword">new</span> DirectoryInfo(Application.StartupPath);</span><br><span class="line">                <span class="built_in">string</span> path = directoryInfo.Parent.Parent.FullName + <span class="string">@&quot;\Properties\AssemblyInfo.cs&quot;</span>; <span class="comment">//上上级目录</span></span><br><span class="line"></span><br><span class="line">             <span class="comment">//   if (args.Length != 1 || !File.Exists(args[0])) return;     </span></span><br><span class="line">                <span class="keyword">var</span> lines = File.ReadAllLines(path);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = lines.Length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyFileVersion&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyVersion&quot;</span>) &amp;&amp; !lines[i].Contains(<span class="string">&quot;*&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]); </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                File.WriteAllLines(path, lines); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddLogInfo_IP</span>(<span class="params"><span class="built_in">string</span> log_text</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">              <span class="comment">//  lock (Obj)</span></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="built_in">string</span> data = log_text;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">string</span> strNow, strDate;</span><br><span class="line"></span><br><span class="line">                    System.DateTime currentTime = <span class="keyword">new</span> System.DateTime();</span><br><span class="line">                    currentTime = System.DateTime.Now;</span><br><span class="line">                    strNow = currentTime.ToString();<span class="comment">//记录具体时间</span></span><br><span class="line">                    strDate = currentTime.ToString(<span class="string">&quot;yyyyMMdd&quot;</span>);</span><br><span class="line">                    strDate = <span class="string">&quot;\\\\172.17.50.89\\txw\\box_verification_ip\\&quot;</span> + strDate + <span class="string">&quot;box_verification.txt&quot;</span>; <span class="comment">//创建文件名</span></span><br><span class="line">                                                                                      <span class="comment">//  strDate = &quot;\</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="literal">true</span>)<span class="comment">//</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        data = strNow + <span class="string">&quot; &quot;</span> + data + <span class="string">&quot;\r\n&quot;</span>;                      </span><br><span class="line">                        File.AppendAllText(strDate, data, Encoding.UTF8);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (IOException e)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(<span class="string">&quot;日志记录写入错误\r\n&quot;</span> + e.StackTrace + <span class="string">&quot;\r\n&quot;</span> + e.Message);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;日志记录写入错误\r\n&quot;</span> + ex.StackTrace + <span class="string">&quot;\r\n&quot;</span> + ex.Message);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetLocalIp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment"><span class="doctag">///</span>获取本地的IP地址</span></span><br><span class="line">            <span class="built_in">string</span> AddressIP = <span class="built_in">string</span>.Empty;</span><br><span class="line">            <span class="keyword">foreach</span> (IPAddress _IPAddress <span class="keyword">in</span> Dns.GetHostEntry(Dns.GetHostName()).AddressList)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//if (_IPAddress.AddressFamily.ToString() == &quot;InterNetwork&quot;)</span></span><br><span class="line">                &#123;</span><br><span class="line">                   <span class="comment">// AddressIP = _IPAddress.ToString();</span></span><br><span class="line">                &#125;</span><br><span class="line">                AddLogInfo_IP(_IPAddress.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> AddressIP;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//GetLocalIp();</span></span><br><span class="line">            <span class="comment">//   modify();</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(1, 168);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(3, 122);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(4, 153);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(5, 172);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(6, 100);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(100, 120);</span></span><br><span class="line">            <span class="comment">//chart1.Series[1].Points.AddXY(2, 2);</span></span><br><span class="line">            <span class="comment">//chart1.Series[1].Points.AddXY(4, 6);</span></span><br><span class="line">            xx[<span class="number">0</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">1</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">2</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">3</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">4</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">5</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.DataBindXY(xx,yy);</span><br><span class="line">            chart1.Series[<span class="number">1</span>].Points.DataBindXY(xx, yy2);</span><br><span class="line">            chart2.Series[<span class="number">0</span>].Points.DataBindXY(xx, yy);</span><br><span class="line">            <span class="comment">// chart1.Series[0].Label = &quot;#VAL&quot;;//每个点的值显示</span></span><br><span class="line">            chart1.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL&quot;</span>;</span><br><span class="line">            chart1.Series[<span class="number">1</span>].ToolTip = <span class="string">&quot;#VALX:#VAL&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (checkBox1.Checked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">false</span>;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">              <span class="comment">//  chart1.Series[0].Points.Clear();</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (checkBox2.Checked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">//chart1.Series[1].Points.Clear();</span></span><br><span class="line">            &#125;</span><br><span class="line">            InitChart(chart1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UpdateVersion</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">string</span> line</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> first = line.IndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> second = line.LastIndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> sVersion = line.Substring(first + <span class="number">1</span>, second - first - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> arrVersion = sVersion.Split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (arrVersion.Length &lt; <span class="number">4</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">var</span> major = Convert.ToInt32(arrVersion[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">var</span> minor = Convert.ToInt32(arrVersion[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">var</span> build = Convert.ToInt32(arrVersion[<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">var</span> amendment = Convert.ToInt32(arrVersion[<span class="number">3</span>]);</span><br><span class="line">            <span class="keyword">if</span> (++amendment &gt; <span class="number">999</span>) ++build;</span><br><span class="line">            <span class="keyword">if</span> (build &gt; <span class="number">99</span>) ++minor;</span><br><span class="line">            <span class="keyword">if</span> (minor &gt; <span class="number">9</span>) ++major;</span><br><span class="line">            <span class="keyword">var</span> sNewVersion = <span class="string">$&quot;<span class="subst">&#123;major&#125;</span>.<span class="subst">&#123;minor&#125;</span>.<span class="subst">&#123;build&#125;</span>.<span class="subst">&#123;amendment&#125;</span>&quot;</span>;</span><br><span class="line">            line = line.Replace(sVersion, sNewVersion);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitChart</span>(<span class="params">System.Windows.Forms.DataVisualization.Charting.Chart chart1</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].CursorX.Interval = <span class="number">0</span>;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserEnabled = <span class="literal">true</span>;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserSelectionEnabled = <span class="literal">true</span>;</span><br><span class="line">            chart1.MouseClick += <span class="keyword">new</span> System.Windows.Forms.MouseEventHandler(chart1_MouseClick);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> area = chart1.ChartAreas[<span class="number">0</span>];</span><br><span class="line">           <span class="comment">// var area = chart1.Series[0];</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//      double xvalue = area.AxisX.PixelPositionToValue(e.X);</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">//  double yvalue = area.AxisY.PixelPositionToValue(e.Y);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// textbox1.text = string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue);</span></span><br><span class="line">        <span class="comment">//    postion11=(string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseHover</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> area = chart1.ChartAreas[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           <span class="comment">// double xvalue = area.AxisX.PixelPositionToValue(e.X);</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">// double yvalue = area.AxisY.PixelPositionToValue(e.Y);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// textbox1.text = string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue);</span></span><br><span class="line">           <span class="comment">// MessageBox.Show(string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue));</span></span><br><span class="line">          <span class="comment">//  toolTip.SetToolTip(chart1, postion11);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  private void chart1_Click(object sender, EventArgs e)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseClick</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Chart chart1 = sender <span class="keyword">as</span> Chart;</span><br><span class="line">              </span><br><span class="line">          <span class="comment">//  string aa = chart1.Series[0].ToolTip = &quot;#VALX:#VAL&quot;;</span></span><br><span class="line">         <span class="comment">//   MessageBox.Show(aa);</span></span><br><span class="line">            <span class="keyword">if</span> (e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.ZoomReset(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(checkBox1.Checked==<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="comment">//  chart1.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line">              <span class="comment">//  chart2.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line"></span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//by txwtech</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">               <span class="comment">// chart1.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">// chart1.Series[0].Points.Clear();</span></span><br><span class="line">              <span class="comment">//  chart2.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox2_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (checkBox2.Checked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">//chart1.Series[1].Points.Clear();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/txwtech/p/16207210.html">c#ms chart图表隐藏与显示某一系列曲线方法vs2019</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> 图表 </tag>
            
            <tag> 显示隐藏曲线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十六（在鼠标移动到Series上时显示节点及数据）</title>
      <link href="/posts/1504952015.html"/>
      <url>/posts/1504952015.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、效果与思路"><a href="#一、效果与思路" class="headerlink" title="一、效果与思路"></a>一、效果与思路</h1><h2 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h2><p>用chart的mousemove时间，实时跟踪鼠标最近的X轴的位置，然后把cursorX设置到那个位置上，让用户知道我是选的那一个X的值，同时用tooltip显示该X轴上所有的Y值，结贴了谢谢大家。</p><p>至于如何显示鼠标移动到的那个series上的数据节点，可以在Mousmove时，用一个击中测试，判断。</p><p><strong>参考代码，击中测试获得点数据点的索引：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (e.HitTestResult.ChartElementType == ChartElementType.DataPoint)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = e.HitTestResult.PointIndex;</span><br><span class="line">    DataPoint dp = e.HitTestResult.Series.Points[i];</span><br><span class="line">    e.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;1:F3&#125;&quot;</span>, dp.XValue, dp.YValues[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h2><p>用的是vs的chart控件。我在页面上的chart中写的是这种方式显示tooltip的（chart1是我的chart的名字）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chart1.GetToolTipText += <span class="keyword">new</span> EventHandler&lt;ToolTipEventArgs&gt;(chart_GetToolTipText);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chart_GetToolTipText</span>(<span class="params"><span class="built_in">object</span> sender, ToolTipEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.HitTestResult.ChartElementType == ChartElementType.DataPoint)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> i = e.HitTestResult.PointIndex;</span><br><span class="line">        DataPoint dp = e.HitTestResult.Series.Points[i];</span><br><span class="line">        e.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;1:F3&#125;&quot;</span>, dp.XValue, dp.YValues[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个鼠标悬停的判断范围也好窄好窄好窄好窄，选一个点要选半天，鼠标晃来晃去都不能出现tooltip，这个根本没办法用。请问高手有没有好的方式可以让图形可以容忍一定的偏斜，就是说即使没有选到这个点，到这个点附近多少范围之类也可以出现tooltip</p><p><strong>思路：</strong><br>1、记得以前有一个软件，当你的鼠标移动到你需要指点的附近时，它就会“磁吸”到点那里去，你也可以这样，挑最近的吸过去。<br>2、如果你开发的是分析软件，而且精度要求很高的话，建议采用加粗放大方式，点击后“标点”再缩小回去。</p><blockquote><p>参考</p></blockquote><p>#VALX         &#x2F;&#x2F;x轴数据<br>#VALY         &#x2F;&#x2F;y轴数据<br>#PERCENT      &#x2F;&#x2F;百分比<br>#AVG          &#x2F;&#x2F;平均值<br>#INDEX        &#x2F;&#x2F;索引值<br>#MAX          &#x2F;&#x2F;最大值<br>#MIN          &#x2F;&#x2F;最小值<br>#TOTAL        &#x2F;&#x2F;合计<br>#LEGENDTEXT   &#x2F;&#x2F;显示Legend的text<br>#SER          &#x2F;&#x2F;显示Series名称</p><h1 id="二、参考示例"><a href="#二、参考示例" class="headerlink" title="二、参考示例"></a>二、参考示例</h1><p>ChartControl.RuntimeHitTesting属性一定要设为True。</p><p>Line Series markers的Visible一定要弄成True。CalcHitInfo的SeriesPoint一直为null，最后跑到devexpress support center上问的。<br>我的dev版本是13.1.5，设置属性的方法是Series-&gt;View-&gt;MarkerVisibility。有的 版本可能是Series -&gt; LineMarkerOptions -&gt; Visible。</p><p>我的是以曲线图Spline为例，下面就是代码。</p><h2 id="1-鼠标点击点弹出Messagebox"><a href="#1-鼠标点击点弹出Messagebox" class="headerlink" title="1.鼠标点击点弹出Messagebox"></a>1.鼠标点击点弹出Messagebox</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_MouseClick</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    ChartHitInfo hitInfo = chartControl4.CalcHitInfo(e.Location); </span><br><span class="line">    <span class="keyword">if</span> (hitInfo.SeriesPoint != <span class="literal">null</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        MessageBox.Show(hitInfo.SeriesPoint.Values[<span class="number">0</span>].ToString()); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><img src="https://img-blog.csdn.net/20140328173729296?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20140328173746609?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h2 id="2-鼠标移动用ToolTipController显示值"><a href="#2-鼠标移动用ToolTipController显示值" class="headerlink" title="2.鼠标移动用ToolTipController显示值"></a>2.鼠标移动用ToolTipController显示值</h2><ul><li>外面定义</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ToolTipController toolTipController = <span class="keyword">new</span> ToolTipController();  </span><br></pre></td></tr></table></figure><ul><li>下面是dev的源码：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)  </span></span><br><span class="line"><span class="function"></span>    &#123;  </span><br><span class="line">        ChartHitInfo hitInfo = chartControl4.CalcHitInfo(e.Location);  </span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InDiagram)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In diagram&quot;</span>);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InNonDefaultPane)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In non-default pane: &quot;</span> + hitInfo.NonDefaultPane.Name);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InAxis)  </span><br><span class="line">        &#123;  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In axis: &quot;</span> + hitInfo.Axis.Name);  </span><br><span class="line">            <span class="keyword">if</span> (hitInfo.AxisLabelItem != <span class="literal">null</span>)  </span><br><span class="line">                builder.AppendLine(<span class="string">&quot;  Label item: &quot;</span> + hitInfo.AxisLabelItem.Text);  </span><br><span class="line">            <span class="keyword">if</span> (hitInfo.AxisTitle != <span class="literal">null</span>)  </span><br><span class="line">                builder.AppendLine(<span class="string">&quot;  Axis title: &quot;</span> + hitInfo.AxisTitle.Text);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InChartTitle)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In chart title: &quot;</span> + hitInfo.ChartTitle.Text);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InLegend)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In legend&quot;</span>);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InSeries)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In series: &quot;</span> + ((Series)hitInfo.Series).Name);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InSeriesLabel)  </span><br><span class="line">        &#123;  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In series label&quot;</span>);  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;  Series: &quot;</span> + ((Series)hitInfo.Series).Name);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.SeriesPoint != <span class="literal">null</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;  Argument: &quot;</span> + hitInfo.SeriesPoint.Argument);  </span><br><span class="line">            <span class="keyword">if</span> (!hitInfo.SeriesPoint.IsEmpty)  </span><br><span class="line">                builder.AppendLine(<span class="string">&quot;  Value: &quot;</span> + hitInfo.SeriesPoint.Values[<span class="number">0</span>]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (builder.Length &gt; <span class="number">0</span>)  </span><br><span class="line">            toolTipController.ShowHint(<span class="string">&quot;Hit-testing results:\n&quot;</span> + builder.ToString(), chartControl4.PointToScreen(e.Location));  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">            toolTipController.HideHint();  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>MouseLeave事件代码</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_MouseLeave</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    toolTipController.HideHint(); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><img src="https://img-blog.csdn.net/20140328174521500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h2 id="3-另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。"><a href="#3-另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。" class="headerlink" title="3.另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。"></a>3.另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_CustomDrawCrosshair</span>(<span class="params"><span class="built_in">object</span> sender, CustomDrawCrosshairEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">foreach</span> (CrosshairElement element <span class="keyword">in</span> e.CrosshairElements) </span><br><span class="line">    &#123; </span><br><span class="line">        SeriesPoint point = element.SeriesPoint; </span><br><span class="line">        element.LabelElement.MarkerImage = Image.FromFile(<span class="string">@&quot;F:\Resources\Add.png&quot;</span>);<span class="comment">// 设置图片路径 </span></span><br><span class="line">        element.LabelElement.MarkerImageSizeMode = ChartImageSizeMode.Stretch; </span><br><span class="line">        element.LabelElement.MarkerSize = <span class="keyword">new</span> Size(<span class="number">100</span>, <span class="number">100</span>); <span class="comment">// 大小 </span></span><br><span class="line">        element.LabelElement.Text = point.Values[<span class="number">0</span>].ToString();<span class="comment">//显示要显示的文字 </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><img src="https://img-blog.csdn.net/20140328174741250?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><p>这里有devexpress用CustomDrawCrosshair事件显示点信息的Demo<a href="https://documentation.devexpress.com/#WindowsForms/customdocument3440">How to: Show a Tooltip with a Series Point’s Data</a></p><p>参考</p><p>1.<a href="http://my.csdn.net/hustaiyaya">hustaiyaya</a>， <a href="http://bbs.csdn.net/topics/390754014">winform chart控件鼠标悬停显示Y值</a>。</p><p>2.<a href="http://my.csdn.net/huang369509940">黄大仙儿</a>，<a href="http://blog.csdn.net/hyj_13/article/details/22416029">c#—devexpress chartcontrol 鼠标点击chart上的点事件，鼠标移动显示值</a>，2014-3。</p><p>\3. <a href="http://blog.csdn.net/rztyfx/article/details/45912821">c# chart 鼠标放在数据点上出现的小提示。</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/arxive/p/5862471.html">C# chart，有关如何在鼠标移动到Series上时显示节点及数据 （有待继续更新）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十五（C#实现图表中鼠标移动并显示数据-这个方法超好用）</title>
      <link href="/posts/675811459.html"/>
      <url>/posts/675811459.html</url>
      
        <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img.jbzj.com/file_images/article/202202/2022212134233486.jpg?2022112134243"><img src="https://img.jbzj.com/file_images/article/202202/2022212134255210.jpg?202211213433"><h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="1-首先在页面上添加一个label控件并默认隐藏："><a href="#1-首先在页面上添加一个label控件并默认隐藏：" class="headerlink" title="1.首先在页面上添加一个label控件并默认隐藏："></a>1.首先在页面上添加一个label控件并默认隐藏：</h2><img src="https://img.jbzj.com/file_images/article/202202/2022212134316760.jpg?2022112134325"><h2 id="2-给该图表添加MouseMove鼠标移动事件："><a href="#2-给该图表添加MouseMove鼠标移动事件：" class="headerlink" title="2.给该图表添加MouseMove鼠标移动事件："></a>2.给该图表添加MouseMove鼠标移动事件：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 鼠标经过时发生</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">   &#123;</span><br><span class="line">       HitTestResult Result = <span class="keyword">new</span> HitTestResult();</span><br><span class="line">       Result = chart1.HitTest(e.X, e.Y);</span><br><span class="line">       <span class="keyword">if</span> (Result.Series != <span class="literal">null</span> &amp;&amp; Result.Object != <span class="literal">null</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">// 获取当前焦点x轴的值</span></span><br><span class="line">           <span class="built_in">string</span> xValue = ObjectUtil.GetPropertyValue(Result.Object, <span class="string">&quot;AxisLabel&quot;</span>).ToString();</span><br><span class="line">           <span class="comment">// 获取当前焦点所属区域名称</span></span><br><span class="line">           <span class="built_in">string</span> areaName = ObjectUtil.GetPropertyValue(Result.Object, <span class="string">&quot;LegendText&quot;</span>).ToString();</span><br><span class="line">           <span class="comment">// 获取当前焦点y轴的值</span></span><br><span class="line">           <span class="built_in">double</span> yValue = Result.Series.Points[Result.PointIndex].YValues[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 鼠标经过时label显示</span></span><br><span class="line">           skinLabel4.Visible = <span class="literal">true</span>;</span><br><span class="line">           skinLabel4.Text = <span class="string">&quot;时间：&quot;</span>+ xValue + <span class="string">&quot;\n&quot;</span>+ areaName + <span class="string">&quot;：&quot;</span>+ yValue + <span class="string">&quot;ug/m^3&quot;</span>;</span><br><span class="line">           skinLabel4.Location = <span class="keyword">new</span> Point(e.X, e.Y - <span class="number">20</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">// 鼠标离开时label隐藏</span></span><br><span class="line">           skinLabel4.Visible = <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   catch (Exception se)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">// 鼠标离开时label隐藏</span></span><br><span class="line">       skinLabel4.Visible = <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-其中GetPropertyValue-获取对象中的某个属性-方法如下："><a href="#3-其中GetPropertyValue-获取对象中的某个属性-方法如下：" class="headerlink" title="3.其中GetPropertyValue() 获取对象中的某个属性 方法如下："></a>3.其中GetPropertyValue() 获取对象中的某个属性 方法如下：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ObjectUtil</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> 获取某个对象中的属性值</span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;info&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;field&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">object</span> <span class="title">GetPropertyValue</span>(<span class="params"><span class="built_in">object</span> info, <span class="built_in">string</span> field</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       <span class="keyword">if</span> (info == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">       Type t = info.GetType();</span><br><span class="line">       IEnumerable&lt;System.Reflection.PropertyInfo&gt; property = <span class="keyword">from</span> pi <span class="keyword">in</span> t.GetProperties() <span class="keyword">where</span> pi.Name.ToLower() == field.ToLower() <span class="keyword">select</span> pi;</span><br><span class="line">       <span class="keyword">return</span> property.First().GetValue(info, <span class="literal">null</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最后（以下与上述无关）图表添加数据后绑定实现提示："><a href="#最后（以下与上述无关）图表添加数据后绑定实现提示：" class="headerlink" title="最后（以下与上述无关）图表添加数据后绑定实现提示："></a>最后（以下与上述无关）图表添加数据后绑定实现提示：</h2><img src="https://img.jbzj.com/file_images/article/202202/2022212134343874.jpg?2022112134352"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 扬尘监测、噪音监测、温度检测、湿度监测</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;_Chart&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ChartTemperatureMethod</span>(<span class="params">Chart _Chart</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;<span class="built_in">string</span>&gt; xData = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;() &#123;<span class="string">&quot;0&quot;</span>, <span class="string">&quot;4:00&quot;</span>, <span class="string">&quot;8:00&quot;</span>, <span class="string">&quot;12:00&quot;</span>, <span class="string">&quot;16:00&quot;</span>, <span class="string">&quot;20:00&quot;</span>, <span class="string">&quot;24:00&quot;</span> &#125;;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; yData = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">0</span>,<span class="number">21</span>, <span class="number">35</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">27</span>, <span class="number">7</span> &#125;;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; yData1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">0</span>,<span class="number">5</span>, <span class="number">18</span>, <span class="number">25</span>, <span class="number">68</span>, <span class="number">50</span>, <span class="number">30</span> &#125;;</span><br><span class="line">    <span class="built_in">string</span> iss = <span class="string">&quot;#VALX&quot;</span>;</span><br><span class="line">    <span class="comment">// 需要提示的信息</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series1&quot;</span>].ToolTip = <span class="string">&quot;时间：#VALX\nPM2.5：#VALYug/m^3\tPM10：&quot;</span> + yData1[xData.IndexOf(<span class="string">&quot;#VALX&quot;</span>) + <span class="number">1</span>] + <span class="string">&quot;ug/m^3&quot;</span>;</span><br><span class="line">    <span class="comment">// 标签显示 Inside：内部，Outside：外部，Disabled：禁用</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series1&quot;</span>][<span class="string">&quot;PieLabelStyle&quot;</span>] = <span class="string">&quot;Outside&quot;</span>;</span><br><span class="line">    chart1.Series[<span class="string">&quot;Series1&quot;</span>].Points.DataBindXY(xData, yData);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 需要提示的信息</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series2&quot;</span>].ToolTip = <span class="string">&quot;时间：#VALX\nPM2.5：&quot;</span> + yData[xData.IndexOf(<span class="string">&quot;#VALX&quot;</span>) + <span class="number">1</span>] + <span class="string">&quot;ug/m^3\tPM10：#VALYug/m^3&quot;</span>;</span><br><span class="line">    <span class="comment">// 标签显示 Inside：内部，Outside：外部，Disabled：禁用</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series2&quot;</span>][<span class="string">&quot;PieLabelStyle&quot;</span>] = <span class="string">&quot;Outside&quot;</span>;</span><br><span class="line">    chart1.Series[<span class="string">&quot;Series2&quot;</span>].Points.DataBindXY(xData, yData1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.jb51.net/article/237273.htm">C#实现图表中鼠标移动并显示数据</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> 图表 </tag>
            
            <tag> 鼠标 </tag>
            
            <tag> 显示数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#控件CheckedListBox之二（ListControl.SelectedValueChanged事件用法）</title>
      <link href="/posts/1849315500.html"/>
      <url>/posts/1849315500.html</url>
      
        <content type="html"><![CDATA[<p><strong>可以参看类</strong><a href="https://vimsky.com/examples/detail/csharp-class-system.windows.forms.listcontrol.html"><code>System.Windows.Forms.ListControl</code></a>的用法示例</p><h1 id="示例1-ListBox"><a href="#示例1-ListBox" class="headerlink" title="示例1: ListBox"></a>示例1: ListBox</h1><p><strong>主要是使用到了 ListBox1_SelectedValueChanged 事件</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入命名空间</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MyListControlSample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListBoxSample3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> ListBox ListBox1 = <span class="keyword">new</span> ListBox();</span><br><span class="line">        <span class="keyword">private</span> Label label1 = <span class="keyword">new</span> Label();</span><br><span class="line">        <span class="keyword">private</span> TextBox textBox1 = <span class="keyword">new</span> TextBox();</span><br><span class="line"></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Run(<span class="keyword">new</span> ListBoxSample3());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ListBoxSample3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> Size(<span class="number">307</span>, <span class="number">206</span>);</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;ListBox Sample3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            ListBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">16</span>);</span><br><span class="line">            ListBox1.Name = <span class="string">&quot;ListBox1&quot;</span>;</span><br><span class="line">            ListBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">130</span>);</span><br><span class="line"></span><br><span class="line">            label1.Location = <span class="keyword">new</span> Point(<span class="number">14</span>, <span class="number">150</span>);</span><br><span class="line">            label1.Name = <span class="string">&quot;label1&quot;</span>;</span><br><span class="line">            label1.Size = <span class="keyword">new</span> Size(<span class="number">40</span>, <span class="number">24</span>);</span><br><span class="line">            label1.Text = <span class="string">&quot;Value&quot;</span>;</span><br><span class="line"></span><br><span class="line">            textBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">150</span>);</span><br><span class="line">            textBox1.Name = <span class="string">&quot;textBox1&quot;</span>;</span><br><span class="line">            textBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">24</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">this</span>.Controls.AddRange(<span class="keyword">new</span> Control[] &#123; ListBox1, label1, textBox1 &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Populate the list box using an array as DataSource.</span></span><br><span class="line">            ArrayList USStates = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Alabama&quot;</span>, <span class="string">&quot;AL&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Washington&quot;</span>, <span class="string">&quot;WA&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;West Virginia&quot;</span>, <span class="string">&quot;WV&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wisconsin&quot;</span>, <span class="string">&quot;WI&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wyoming&quot;</span>, <span class="string">&quot;WY&quot;</span>));</span><br><span class="line">            ListBox1.DataSource = USStates;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set the long name as the property to be displayed and the short</span></span><br><span class="line">            <span class="comment">// name as the value to be returned when a row is selected.  Here</span></span><br><span class="line">            <span class="comment">// these are properties; if we were binding to a database table or</span></span><br><span class="line">            <span class="comment">// query these could be column names.</span></span><br><span class="line">            ListBox1.DisplayMember = <span class="string">&quot;LongName&quot;</span>;</span><br><span class="line">            ListBox1.ValueMember = <span class="string">&quot;ShortName&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Bind the SelectedValueChanged event to our handler for it.</span></span><br><span class="line">            ListBox1.SelectedValueChanged += </span><br><span class="line">                <span class="keyword">new</span> EventHandler(ListBox1_SelectedValueChanged);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Ensure the form opens with no rows selected.</span></span><br><span class="line">            ListBox1.ClearSelected();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ListBox1_SelectedValueChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ListBox1.SelectedIndex != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                textBox1.Text = ListBox1.SelectedValue.ToString();</span><br><span class="line">                <span class="comment">// If we also wanted to get the displayed text we could use</span></span><br><span class="line">                <span class="comment">// the SelectedItem item property:</span></span><br><span class="line">                <span class="comment">// string s = ((USState)ListBox1.SelectedItem).LongName;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">USState</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myShortName;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myLongName;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">USState</span>(<span class="params"><span class="built_in">string</span> strLongName, <span class="built_in">string</span> strShortName</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.myShortName = strShortName;</span><br><span class="line">            <span class="keyword">this</span>.myLongName = strLongName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ShortName</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myShortName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> LongName</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myLongName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="示例1-ListBoxSample3"><a href="#示例1-ListBoxSample3" class="headerlink" title="示例1: ListBoxSample3"></a>示例1: ListBoxSample3</h1><p><strong>ListControl类属于System.Windows.Forms命名空间，在下文中一共展示了ListControl类的1个代码示例</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入命名空间</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MyListControlSample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListBoxSample3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> ListBox ListBox1 = <span class="keyword">new</span> ListBox();</span><br><span class="line">        <span class="keyword">private</span> Label label1 = <span class="keyword">new</span> Label();</span><br><span class="line">        <span class="keyword">private</span> TextBox textBox1 = <span class="keyword">new</span> TextBox();</span><br><span class="line"></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Run(<span class="keyword">new</span> ListBoxSample3());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ListBoxSample3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> Size(<span class="number">307</span>, <span class="number">206</span>);</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;ListBox Sample3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            ListBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">16</span>);</span><br><span class="line">            ListBox1.Name = <span class="string">&quot;ListBox1&quot;</span>;</span><br><span class="line">            ListBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">130</span>);</span><br><span class="line"></span><br><span class="line">            label1.Location = <span class="keyword">new</span> Point(<span class="number">14</span>, <span class="number">150</span>);</span><br><span class="line">            label1.Name = <span class="string">&quot;label1&quot;</span>;</span><br><span class="line">            label1.Size = <span class="keyword">new</span> Size(<span class="number">40</span>, <span class="number">24</span>);</span><br><span class="line">            label1.Text = <span class="string">&quot;Value&quot;</span>;</span><br><span class="line"></span><br><span class="line">            textBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">150</span>);</span><br><span class="line">            textBox1.Name = <span class="string">&quot;textBox1&quot;</span>;</span><br><span class="line">            textBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">24</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">this</span>.Controls.AddRange(<span class="keyword">new</span> Control[] &#123; ListBox1, label1, textBox1 &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Populate the list box using an array as DataSource.</span></span><br><span class="line">            ArrayList USStates = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Alabama&quot;</span>, <span class="string">&quot;AL&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Washington&quot;</span>, <span class="string">&quot;WA&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;West Virginia&quot;</span>, <span class="string">&quot;WV&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wisconsin&quot;</span>, <span class="string">&quot;WI&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wyoming&quot;</span>, <span class="string">&quot;WY&quot;</span>));</span><br><span class="line">            ListBox1.DataSource = USStates;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set the long name as the property to be displayed and the short</span></span><br><span class="line">            <span class="comment">// name as the value to be returned when a row is selected.  Here</span></span><br><span class="line">            <span class="comment">// these are properties; if we were binding to a database table or</span></span><br><span class="line">            <span class="comment">// query these could be column names.</span></span><br><span class="line">            ListBox1.DisplayMember = <span class="string">&quot;LongName&quot;</span>;</span><br><span class="line">            ListBox1.ValueMember = <span class="string">&quot;ShortName&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Bind the SelectedValueChanged event to our handler for it.</span></span><br><span class="line">            ListBox1.SelectedValueChanged += </span><br><span class="line">                <span class="keyword">new</span> EventHandler(ListBox1_SelectedValueChanged);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Ensure the form opens with no rows selected.</span></span><br><span class="line">            ListBox1.ClearSelected();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ListBox1_SelectedValueChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ListBox1.SelectedIndex != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                textBox1.Text = ListBox1.SelectedValue.ToString();</span><br><span class="line">                <span class="comment">// If we also wanted to get the displayed text we could use</span></span><br><span class="line">                <span class="comment">// the SelectedItem item property:</span></span><br><span class="line">                <span class="comment">// string s = ((USState)ListBox1.SelectedItem).LongName;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">USState</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myShortName;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myLongName;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">USState</span>(<span class="params"><span class="built_in">string</span> strLongName, <span class="built_in">string</span> strShortName</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.myShortName = strShortName;</span><br><span class="line">            <span class="keyword">this</span>.myLongName = strLongName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ShortName</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myShortName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> LongName</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myLongName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://vimsky.com/examples/detail/csharp-event-system.windows.forms.listcontrol.selectedvaluechanged.html">C# ListControl.SelectedValueChanged事件代码示例</a></li><li><a href="https://vimsky.com/examples/detail/csharp-class-system.windows.forms.listcontrol.html">C# ListControl类代码示例</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 控件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> CheckedListBox </tag>
            
            <tag> ListControl.SelectedValueChanged </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#控件CheckedListBox之一（基本使用方法）</title>
      <link href="/posts/509147200.html"/>
      <url>/posts/509147200.html</url>
      
        <content type="html"><![CDATA[<blockquote><ol><li>有时候特殊的场景，要求鼠标点击一下时节点就要选中，因此可以做如下设置：</li></ol></blockquote><p><strong>在初始化的时候load事件里，加上这条设置</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.checkedListBox1.CheckOnClick = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h1 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h1><p><strong>（1）CheckOnClick属性</strong></p><p>CheckOnClick属性是布尔类型的值，如果为True，那么单击条目就能将条目勾选；如果为false，则要双击条目才能将其勾选。</p><p><strong>（2）ColumnWidth属性</strong></p><p>ColumnWitdh属性是整型数据，表示多列条目各列的列宽。该属性只有在MultiColumn属性（允许多列显示）设置为true时才有意义。</p><p><strong>（3）MultiColumn属性</strong></p><p>MultiColumn属性是布尔类型的值，指示是否开启多列显示条目。该属性是配合ColumnWidth属性一起使用。</p><p><strong>（4）SelectMode属性</strong></p><p>该属性指示列表将是单选还是多选，这里的“选”表示选中而不是“勾选”，选中后条目会高亮，但条目左边的小方框不会勾选。在CheckedLIstBox控件中，不支持多项选择，该属性只有两个值是有效的，分别是None和One。None表示条目不能被选中，左边的小方框也不能被勾选；One表示只有一个条目可以被选中（但勾选可以选多项）。</p><p><strong>（5）Sorted属性</strong></p><p>该属性是布尔累心的值，如果为true，则条目会根据字母进行排序，如果为false，则不进行排序。</p><p><strong>（6）Count属性</strong></p><p>该属性表示列表中条目的总量。</p><blockquote><p>用法如下：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> conut=checkedListBox1.Items.Count</span><br></pre></td></tr></table></figure><p><strong>（7）Items属性</strong></p><p>获取列表中条目的集合，通过下标获取指定条目。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">object</span> item=checkedListBox1.Items[i];</span><br></pre></td></tr></table></figure><p><strong>（8）SelectedItem属性和SelectedItems属性</strong></p><p>SelectedItem属性作用是获取选中的条目，而SelectedItems属性是一个数组，保存着被选中的条目的集合，可通过下标来获取条目。</p><blockquote><p>用法如下：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">object</span> item =checkedListBox1.SelectedItem;</span><br><span class="line"></span><br><span class="line"><span class="built_in">object</span> item=checkedListBox1.SelectedItems[i];</span><br><span class="line"></span><br><span class="line">checkedListBox1.Items.Add(item);</span><br></pre></td></tr></table></figure><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><p><strong>（1）Add方法</strong></p><p>该方法用于动态添加条目。用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.Add（“条目一”）；<span class="comment">//参数可以是一个字符串或者是一个条目</span></span><br><span class="line"><span class="comment">//或</span></span><br><span class="line">checkedListBox1.Items.Add（“条目一”，<span class="literal">true</span>）；<span class="comment">//第二个参数是布尔类型的，指示是否让条目被勾选</span></span><br></pre></td></tr></table></figure><p><strong>（2）RemoveAt方法</strong></p><p>该方法用于移除指定的条目，参数是条目的索引值。</p><p><strong>用法如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.RemoveAt(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><strong>（3）Insert方法</strong></p><p>该方法的作用是在指定位置插入一个条目，有两个参数，分别是index和item。index是条目的索引，item可以是一个条目，也可以是一个字符窜。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.Insert(i,“条目一”)；</span><br></pre></td></tr></table></figure><p><strong>（4）GetItemChecked方法</strong></p><p>该方法返回第i项条目是否被勾选（不是选中），如果是则返回true,否则为false。参数是条目的索引值。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isChecked=checkedListBox1.GetItemChecked(i)；</span><br></pre></td></tr></table></figure><p><strong>（5）SetItemChecked方法</strong></p><p>设置第i项条目是否被选中，参数有两个，第一个是索引，第二个是布尔值。第二个参数如果选true，则将第i项设置为勾选，否则设置为不勾选。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.SetItemChecked（i，<span class="literal">true</span>）；</span><br></pre></td></tr></table></figure><p><strong>（6）Clear方法</strong></p><p>该方法的作用是清除所有的条目。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Clear（）；</span><br></pre></td></tr></table></figure><h1 id="常用事件"><a href="#常用事件" class="headerlink" title="常用事件"></a>常用事件</h1><p><strong>（1）ItemCheck事件</strong></p><p>当条目被勾选时发生，其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkedListBox1_ItemCheck</span>(<span class="params"><span class="built_in">object</span> sender, ItemCheckEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//通过索引引用勾选的条目</span></span><br><span class="line">textBox1.Text = textBox1.Text +<span class="string">&quot;\r\n&quot;</span>+ checkedListBox1.Items[e.Index].ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）SelectedIndexChanged和SelectedValuedChanged事件</strong></p><p>这两个事件都是在条目被选中时发生（不一定被勾选）</p><h1 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h1><h2 id="1、遍历打勾的值"><a href="#1、遍历打勾的值" class="headerlink" title="1、遍历打勾的值"></a>1、遍历打勾的值</h2><p>初次接触CheckedListBox控件一般认为：foreach (object obj in checkedListBox1.SelectedItems)即可遍历选中的值。<br>其实这里遍历的只是高亮的值并不是打勾的值。</p><p>遍历打勾的值要用下面的代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(checkedListBox1.GetItemText(checkedListBox1.Items[i]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、添加项"><a href="#2、添加项" class="headerlink" title="2、添加项"></a>2、添加项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.Add(<span class="string">&quot;蓝色&quot;</span>);</span><br><span class="line">checkedListBox1.Items.Add(<span class="string">&quot;红色&quot;</span>);</span><br><span class="line">checkedListBox1.Items.Add(<span class="string">&quot;黄色&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="3、判断第i项是否选中-选中为true-否则为false"><a href="#3、判断第i项是否选中-选中为true-否则为false" class="headerlink" title="3、判断第i项是否选中,选中为true,否则为false"></a>3、判断第i项是否选中,选中为true,否则为false</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（checkedListBox1.GetItemChecked(i)）</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、设置第i项是否选中"><a href="#4、设置第i项是否选中" class="headerlink" title="4、设置第i项是否选中"></a>4、设置第i项是否选中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.SetItemChecked(i, <span class="literal">true</span>);  <span class="comment">//true改为false为没有选中。</span></span><br></pre></td></tr></table></figure><h2 id="5、设置全选"><a href="#5、设置全选" class="headerlink" title="5、设置全选"></a>5、设置全选</h2><p><strong>添加一个名为select_all的checkbox控件，由其控制checkedListBox是全选还是全不选</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">select_all_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(select_all.Checked)</span><br><span class="line">&#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; checkedListBox1.Items.Count; j++)</span><br><span class="line">               checkedListBox1.SetItemChecked(j, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> j =<span class="number">0</span>; j &lt; checkedListBox1.Items.Count; j++)</span><br><span class="line">      checkedListBox1.SetItemChecked(j, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、得到全部选中的值-，并将选中的项的文本组合成为一个字符串"><a href="#6、得到全部选中的值-，并将选中的项的文本组合成为一个字符串" class="headerlink" title="6、得到全部选中的值 ，并将选中的项的文本组合成为一个字符串"></a>6、得到全部选中的值 ，并将选中的项的文本组合成为一个字符串</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> strCollected = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span> (strCollected == <span class="built_in">string</span>.Empty)</span><br><span class="line">          &#123;</span><br><span class="line">               strCollected = </span><br><span class="line">                   checkedListBox1.GetItemText(checkedListBox1.Items[i]);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">               strCollected = strCollected + <span class="string">&quot;/&quot;</span> + </span><br><span class="line">                   checkedListBox1.GetItemText(checkedListBox1.Items[i]);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、设置CheckedListBox中第i项的Checked状态"><a href="#7、设置CheckedListBox中第i项的Checked状态" class="headerlink" title="7、设置CheckedListBox中第i项的Checked状态"></a>7、设置CheckedListBox中第i项的Checked状态</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1：</span></span><br><span class="line">checkedListBox1.SetItemCheckState(i, CheckState.Checked);</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2：</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (checkedListBox1.GetSelected(i))</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(checkedListBox1.CheckedItems.ToString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法3：</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBoxAll_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (checkBoxAll.Checked)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="comment">//被选择了则将CheckedListBox中的所有条目都变为Checked状态</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBoxLayerControl.Items.Count; i++)</span><br><span class="line">        &#123;    </span><br><span class="line">checkedListBoxLayerControl.SetItemCheckState(i, CheckState.Checked);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="comment">//否则变成Unchecked状态</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBoxLayerControl.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">checkedListBoxLayerControl.SetItemCheckState(i,CheckState.Unchecked);</span><br><span class="line">&#125;             </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8、checkedListBox-单选设置-代码实现"><a href="#8、checkedListBox-单选设置-代码实现" class="headerlink" title="8、checkedListBox 单选设置(代码实现)"></a>8、checkedListBox 单选设置(代码实现)</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chkl_ItemAuditing_ItemCheck</span>(<span class="params"><span class="built_in">object</span> sender, ItemCheckEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (chkl_ItemAuditing.CheckedItems.Count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; chkl_ItemAuditing.Items.Count; i++)</span><br><span class="line">         &#123;</span><br><span class="line"><span class="keyword">if</span> (i != e.Index)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.chkl_ItemAuditing.SetItemCheckState(i,</span><br><span class="line">System.Windows.Forms.CheckState.Unchecked);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9、checkedListBox1显示一个数据库中关键字对应的所有记录"><a href="#9、checkedListBox1显示一个数据库中关键字对应的所有记录" class="headerlink" title="9、checkedListBox1显示一个数据库中关键字对应的所有记录"></a>9、checkedListBox1显示一个数据库中关键字对应的所有记录</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; table.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = table.Rows[<span class="string">&quot;myname&quot;</span>].ToString();</span><br><span class="line">    <span class="built_in">string</span> paw = table.Rows[<span class="string">&quot;mypaw&quot;</span>].ToString();</span><br><span class="line">    checkedListBox1.Items.Add(name + paw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10、根据名设置选中"><a href="#10、根据名设置选中" class="headerlink" title="10、根据名设置选中"></a>10、根据名设置选中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;CheckedListBox.Items.Count;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">if</span>(CheckedListBox.GetItemText(CheckedListBox.Items)==<span class="string">&quot;你得到的值&quot;</span>)  </span><br><span class="line">&#123;  </span><br><span class="line">      CheckedListBox.SetItemChecked(i,<span class="literal">true</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11、清除checkedListBox1中所有的选项"><a href="#11、清除checkedListBox1中所有的选项" class="headerlink" title="11、清除checkedListBox1中所有的选项"></a>11、清除checkedListBox1中所有的选项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox1.Items.Clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12、设置索引为index的项为选中状态"><a href="#12、设置索引为index的项为选中状态" class="headerlink" title="12、设置索引为index的项为选中状态"></a>12、设置索引为index的项为选中状态</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox1.SetItemChecked(i, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13、选中checkedListBox1所有的选项"><a href="#13、选中checkedListBox1所有的选项" class="headerlink" title="13、选中checkedListBox1所有的选项"></a>13、选中checkedListBox1所有的选项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1：</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)        </span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox1.SetItemCheckState(i, CheckState.Checked);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2：</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">//如果checkedListBox1的第i项被选中，则显示checkedListBox1对应的值</span></span><br><span class="line"><span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">&#123;</span><br><span class="line">     MessageBox.Show(checkedListBox1.Items.ToString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14、反向选择checkedListBox1的选项"><a href="#14、反向选择checkedListBox1的选项" class="headerlink" title="14、反向选择checkedListBox1的选项"></a>14、反向选择checkedListBox1的选项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">   &#123;</span><br><span class="line">       checkedListBox1.SetItemChecked(i, <span class="literal">false</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       checkedListBox1.SetItemChecked(i, <span class="literal">true</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15、checkedListBox1中选定的项-gt-checkedListBox2"><a href="#15、checkedListBox1中选定的项-gt-checkedListBox2" class="headerlink" title="15、checkedListBox1中选定的项-&gt;checkedListBox2"></a>15、checkedListBox1中选定的项-&gt;checkedListBox2</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.CheckedItems.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox2.Items.Add(<span class="keyword">this</span>.checkedListBox1.CheckedItems);</span><br><span class="line"><span class="comment">//remove是除去一个具体的值，不是index，注意了</span></span><br><span class="line">    <span class="keyword">this</span>.checkedListBox1.Items.Remove(<span class="keyword">this</span>.checkedListBox1.CheckedItems);      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/opencv220/article/details/109616788">c#学习笔记：CheckedListBox控件的用法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 控件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> CheckedListBox </tag>
            
            <tag> 基本使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#控件DataGridView之三（控件中至少有一列没有单元格模板）</title>
      <link href="/posts/520108804.html"/>
      <url>/posts/520108804.html</url>
      
        <content type="html"><![CDATA[<h1 id="背景需求"><a href="#背景需求" class="headerlink" title="背景需求"></a>背景需求</h1><p>一个Form窗体，一个Button按钮，一个DataGridView控件，我要实现的是点击按钮，DataGridView控件增加一列。</p><h2 id="第一次尝试-报错"><a href="#第一次尝试-报错" class="headerlink" title="第一次尝试-报错"></a>第一次尝试-报错</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DataGridViewColumn column = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    column.Name = <span class="string">&quot;Column0&quot;</span>;</span><br><span class="line">    column.HeaderText = <span class="string">&quot;选择&quot;</span>;      </span><br><span class="line">    dataGridView1.Columns.Add(column);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题：</strong></p><img src="https://img-blog.csdn.net/20180404165123659"><h2 id="第二次尝试-重复增加这一列"><a href="#第二次尝试-重复增加这一列" class="headerlink" title="第二次尝试-重复增加这一列"></a>第二次尝试-重复增加这一列</h2><p><strong>多次单击按钮，就会重复增加这一列</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DataGridViewColumn column = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    column.Name = <span class="string">&quot;Column0&quot;</span>;</span><br><span class="line">    column.HeaderText = <span class="string">&quot;选择&quot;</span>;</span><br><span class="line">    DataGridViewCell dgvcell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">    column.CellTemplate = dgvcell;</span><br><span class="line">    dataGridView1.Columns.Add(column);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三次尝试-达到要求"><a href="#第三次尝试-达到要求" class="headerlink" title="第三次尝试-达到要求"></a>第三次尝试-达到要求</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dataGridView1.Columns.Clear();</span><br><span class="line">    DataGridViewColumn column = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    column.Name = <span class="string">&quot;Column0&quot;</span>;</span><br><span class="line">    column.HeaderText = <span class="string">&quot;选择&quot;</span>;</span><br><span class="line">    DataGridViewCell dgvcell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">    column.CellTemplate = dgvcell;</span><br><span class="line">    dataGridView1.Columns.Add(column);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/Luyanc/article/details/79819517">DataGridView控件中至少有一列没有单元格模板</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 控件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> DataGridView </tag>
            
            <tag> 错误 </tag>
            
            <tag> 一列没有单元格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 控件Groupbox之一（动态添加checkbox）</title>
      <link href="/posts/3607925543.html"/>
      <url>/posts/3607925543.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><strong>添加都是在groupbox的text的位置，每添加一个就不前面加的覆盖了</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(DataRow dr <span class="keyword">in</span> dt.Rows)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line"></span><br><span class="line">            CheckBox chkbox = <span class="keyword">new</span> CheckBox();</span><br><span class="line"></span><br><span class="line">            chkbox.Text = dr[<span class="string">&quot;模块名称&quot;</span>].ToString();</span><br><span class="line"></span><br><span class="line">            gpboxBrow.Controls.Add(chkbox);</span><br><span class="line"></span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><h2 id="添加位置坐标来解决问题"><a href="#添加位置坐标来解决问题" class="headerlink" title="添加位置坐标来解决问题"></a>添加位置坐标来解决问题</h2><ul><li><p>方法一：</p><p>在你的代码中添加这样的代码：</p></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkbox.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">349</span>, <span class="number">210</span>);</span><br><span class="line">chkbox.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br></pre></td></tr></table></figure><p><strong>例如：动态添加两个Button</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// button1</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Button btn = <span class="keyword">new</span> Button();</span><br><span class="line">btn.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">349</span>, <span class="number">210</span>);</span><br><span class="line">btn.Name = <span class="string">&quot;button1&quot;</span>;</span><br><span class="line">btn.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line">btn.TabIndex = <span class="number">2</span>;</span><br><span class="line">btn.Text = <span class="string">&quot;button1&quot;</span>;</span><br><span class="line">btn.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.Controls.Add(btn);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// button2</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Button btn2 = <span class="keyword">new</span> Button();</span><br><span class="line">btn2.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">349</span>, <span class="number">240</span>);</span><br><span class="line">btn2.Name = <span class="string">&quot;button2&quot;</span>;</span><br><span class="line">btn2.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line">btn2.TabIndex = <span class="number">3</span>;</span><br><span class="line">btn2.Text = <span class="string">&quot;button2&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>.Controls.Add(btn2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="或者设置chkbox-Location属性"><a href="#或者设置chkbox-Location属性" class="headerlink" title="或者设置chkbox.Location属性"></a>或者设置chkbox.Location属性</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">foreach</span>(DataRow dr <span class="keyword">in</span> dt.Rows)</span><br><span class="line">         &#123;</span><br><span class="line">            y += <span class="number">30</span>;</span><br><span class="line">            CheckBox chkbox = <span class="keyword">new</span> CheckBox();</span><br><span class="line">            chkbox.Location = <span class="keyword">new</span> Point(<span class="number">10</span>,y);</span><br><span class="line">            chkbox.Text = dr[<span class="string">&quot;模块名称&quot;</span>].ToString();</span><br><span class="line">            gpboxBrow.Controls.Add(chkbox);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://bbs.csdn.net/topics/290088852?list=559332">groupbox 里动态添加checkbox的问题</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 控件 </category>
          
          <category> Groupbox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> Groupbox </tag>
            
            <tag> checkbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 用代码向窗体中添加控件</title>
      <link href="/posts/952047602.html"/>
      <url>/posts/952047602.html</url>
      
        <content type="html"><![CDATA[<h1 id="添加控件步骤"><a href="#添加控件步骤" class="headerlink" title="添加控件步骤"></a>添加控件步骤</h1><p>（1）实例化一个控件；</p><p>（2）设置控件实例属性；</p><p>（3）将控件实例添加到窗体的Controls集合中</p><h2 id="【示例】"><a href="#【示例】" class="headerlink" title="【示例】"></a>【示例】</h2><p>（1）在Visual Studio中新建一个“Windos 窗体应用程序”</p><p>（2）窗体代码Form1.cs如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//实例化一个命令按钮</span></span><br><span class="line">            Button btn = <span class="keyword">new</span> Button();</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//设置命令按钮的属性 </span></span><br><span class="line">            btn.Location = <span class="keyword">new</span> Point(<span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">            btn.Size = <span class="keyword">new</span> Size(<span class="number">80</span>, <span class="number">25</span>);</span><br><span class="line">            btn.Text = <span class="string">&quot;退出&quot;</span>;</span><br><span class="line">            btn.Click += btn_Click;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//添加到窗口的Controls集合中</span></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(btn);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">btn_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（3）运行效果<br>窗体启动后：</p><img src="https://www.521u.com/img.php?id=c995d143ad4bd113bfad996f5cafa40f4bfb050e?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_600%2Ch_800%2Climit_1%2Fquality%2Cq_85%2Fformat%2Cf_auto"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.521u.com/read/227384424.html">C#如何用代码向窗体中添加控件？）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 路径 </tag>
            
            <tag> 控件 </tag>
            
            <tag> 窗体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 配置引用程序集的路径（分离exe和dll从指定路径调用）</title>
      <link href="/posts/3340548759.html"/>
      <url>/posts/3340548759.html</url>
      
        <content type="html"><![CDATA[<p><strong>问题：在开发较大的项目时，会引用很多其他项目的dll，而我们规划将不同类型的dll放在不同的功能目录下，此时我们通过反射动态加载时，出现System.IO.FileNotFoundException: 未能加载文件或程序集的问题。</strong></p><p>程序集DLL分为两类：</p><p>1）全局DLL（在GAC中注册，GAC——全局程序集缓存），有关GAC的详细资料可以参考一下链接：<br><a href="http://blog.csdn.net/prince_lintb/article/details/40789211">http://blog.csdn.net/prince_lintb/article/details/40789211</a></p><p>2）私有DLL，默认情况下，添加程序集引用的时候，程序集DLL会复制到可执行目录下。<br>对于私有DLL，当数目众多时，由于没有分类，会显得比较凌乱。在发布软件的时候也不希望在软件安装目录下看到大量的dll文件。如果能将其分类放在不同的文件夹下就再好不过了。<br>问题是，如何解决应用程序对DLL的查找路径问题呢？答案是在配置文件中添加如下配置项。（app.config或者web.config，没有就新建，添加-&gt;配置文件）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;runtime&gt;</span><br><span class="line">&lt;!--xmlns是必需的特性。指定程序集绑定所需的 XML 命名空间。 使用字符串“urn: 架构-microsoft-com:asm.v1”作为值。--&gt;</span><br><span class="line">&lt;assemblyBinding xmlns=<span class="string">&quot;urn:schemas-microsoft-com:asm.v1&quot;</span>&gt;</span><br><span class="line">&lt;publisherPolicy apply=<span class="string">&quot;yes&quot;</span>/&gt; &lt;!--指定运行时是否使用发布者策略--&gt;</span><br><span class="line">&lt;!--指定加载程序集时公共语言运行时搜索的子目录, 其中privatePath是相对于*.exe.config文件的相对路径，多个文件夹以分号分隔。--&gt;</span><br><span class="line">&lt;probing privatePath=<span class="string">&quot;Common;Security&quot;</span>/&gt;</span><br><span class="line">&lt;/assemblyBinding&gt;</span><br><span class="line">&lt;/runtime&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>其中privatePath是相对于*.exe.config文件的相对路径，多个文件夹以分号分隔。当编译后会在生成目录下生成一个后缀为.exe.config的文件，就是相对这个文件的。<br>添加程序集DLL引用之后，将DLL的属性“复制本地”设置为False。程序编译过程中，会自动检索Common和Security文件夹下的DLL及其依赖项。</p><p>注：关于xml字段和及节点含义查询：<a href="https://msdn.microsoft.com/zh-cn/library/twy1dw1e">https://msdn.microsoft.com/zh-cn/library/twy1dw1e</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/guanshan/p/guan2021-4-1_002.html">C# 配置引用程序集的路径（分离exe和dll从指定路径调用）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 路径 </tag>
            
            <tag> dll </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#控件DataGridView之二（标题列头等添加复选框）</title>
      <link href="/posts/3040252591.html"/>
      <url>/posts/3040252591.html</url>
      
        <content type="html"><![CDATA[<h1 id="列头添加复选框（这个方法试过-列数不多可以用）"><a href="#列头添加复选框（这个方法试过-列数不多可以用）" class="headerlink" title="列头添加复选框（这个方法试过-列数不多可以用）"></a>列头添加复选框（这个方法试过-列数不多可以用）</h1><p>第一：添加列标题时，添加两个空格——用于显示复选框；<br>第二：实现列标题添加复选框，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddCheckeBoxToDGVHeader</span>(<span class="params">DataGridView dgv</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.dgvList.Columns.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.Windows.Forms.CheckBox ckBox = <span class="keyword">new</span> System.Windows.Forms.CheckBox();</span><br><span class="line">                <span class="comment">//ckBox.Text = &quot;全选&quot;;</span></span><br><span class="line">                ckBox.Checked = <span class="literal">true</span>;</span><br><span class="line">                System.Drawing.Rectangle rect =</span><br><span class="line">                    dgv.GetCellDisplayRectangle(i, <span class="number">-1</span>, <span class="literal">false</span>);</span><br><span class="line">                ckBox.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">25</span>, <span class="number">25</span>);</span><br><span class="line"> </span><br><span class="line">                ckBox.Location = rect.Location;</span><br><span class="line">                ckBox.Padding = <span class="keyword">new</span> System.Windows.Forms.Padding(<span class="number">2</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                ckBox.BackColor = Color.Transparent;</span><br><span class="line">                ckBox.Name = dgv.Columns[i].Name;</span><br><span class="line">                ckBox.CheckedChanged += <span class="keyword">new</span> EventHandler(ckBox_CheckedChanged);</span><br><span class="line"> </span><br><span class="line">                dgv.Controls.Add(ckBox);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">ckBox_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            CheckBox chb = sender <span class="keyword">as</span> CheckBox;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;Test==&quot;</span>+ chb.Name);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://images2018.cnblogs.com/blog/529017/201806/529017-20180615133704176-747383869.png"><h1 id="在dataGridView表格中插入复选框"><a href="#在dataGridView表格中插入复选框" class="headerlink" title="在dataGridView表格中插入复选框"></a>在dataGridView表格中插入复选框</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DataGridViewColumn myCol = <span class="keyword">new</span> DataGridViewCheckBoxColumn();</span><br><span class="line">myCol.Name = <span class="string">&quot;SelBox&quot;</span>;    <span class="comment">//设置列的名称</span></span><br><span class="line">myCol.HeaderText = <span class="string">&quot;字段行的值&quot;</span>;     <span class="comment">//显示的列名</span></span><br><span class="line">dataGridView1.Columns.Insert(<span class="number">0</span>, myCol);<span class="comment">//在dataGridView1的指定列添加复选框</span></span><br><span class="line"><span class="comment">//dataGridView1.Columns.Add(myCol); //在最后列插入复选框,可自由选择</span></span><br></pre></td></tr></table></figure><h1 id="C-DataGridViewCheckBoxColumn用法"><a href="#C-DataGridViewCheckBoxColumn用法" class="headerlink" title="C#DataGridViewCheckBoxColumn用法"></a>C#DataGridViewCheckBoxColumn用法</h1><h2 id="实现功能："><a href="#实现功能：" class="headerlink" title="实现功能："></a>实现功能：</h2><p>点击单元格实现checkbox的勾选，点击头标题实现全选和非全选，记录选中的行数 （注意：this.dataList.RefreshEdit();&#x2F;&#x2F;否则可能不全选）</p><h2 id="增加一列复选框"><a href="#增加一列复选框" class="headerlink" title="增加一列复选框"></a>增加一列复选框</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加一列复选框</span></span><br><span class="line">DataGridViewCheckBoxColumn columncb = <span class="keyword">new</span> DataGridViewCheckBoxColumn();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 窗体加载</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FrmAddOrder_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化数据</span></span><br><span class="line"><span class="keyword">this</span>.dataList.DataSource = dataSource_NoOrder;<span class="comment">//绑定数据源</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//给datagridview加复选框的初始化</span></span><br><span class="line">columncb.FlatStyle = FlatStyle.Standard;</span><br><span class="line">columncb.HeaderText = <span class="string">&quot;👆全选&quot;</span>;</span><br><span class="line">columncb.Name = <span class="string">&quot;cb_check&quot;</span>;</span><br><span class="line">columncb.TrueValue = <span class="literal">true</span>;</span><br><span class="line">columncb.FalseValue = <span class="literal">false</span>;</span><br><span class="line">columncb.DataPropertyName = <span class="string">&quot;IsChecked&quot;</span>;</span><br><span class="line"><span class="comment">//datagridview的Name为dataList</span></span><br><span class="line">dataList.Columns.Insert(<span class="number">0</span>, columncb);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 头checkbox是否选中</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="built_in">bool</span> headCkBoxIsChecked = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 点击datagridview单元格，可以勾选该行的checkbox</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dataList_CellMouseClick</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellMouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (e.RowIndex == <span class="number">-1</span> &amp;&amp; !headCkBoxIsChecked &amp;&amp; e.ColumnIndex == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataList.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[i].Cells[<span class="string">&quot;cb_check&quot;</span>].Value = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">headCkBoxIsChecked = <span class="literal">true</span>;</span><br><span class="line">columncb.HeaderText = <span class="string">&quot;✋ 已全选&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (e.RowIndex == <span class="number">-1</span> &amp;&amp; headCkBoxIsChecked &amp;&amp; e.ColumnIndex == <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataList.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[i].Cells[<span class="number">0</span>].Value = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">headCkBoxIsChecked = <span class="literal">false</span>;</span><br><span class="line">columncb.HeaderText = <span class="string">&quot;👆 全选&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(e.ColumnIndex == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">bool</span>)dataList.Rows[e.RowIndex].Cells[<span class="string">&quot;cb_check&quot;</span>].EditedFormattedValue == <span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[e.RowIndex].Cells[<span class="string">&quot;cb_check&quot;</span>].Value = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[e.RowIndex].Cells[<span class="string">&quot;cb_check&quot;</span>].Value = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.dataList.RefreshEdit();<span class="comment">//刷新操作，否则点击之后可能不能立即勾选</span></span><br><span class="line"><span class="comment">//记录选中行数</span></span><br><span class="line">selectNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.dataList.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">bool</span>)dataList.Rows[i].Cells[<span class="string">&quot;cb_check&quot;</span>].EditedFormattedValue)</span><br><span class="line">&#123;</span><br><span class="line">selectNum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.lbNum.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0&#125; &quot;</span>, selectNum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="一个单元格添加CheckBox"><a href="#一个单元格添加CheckBox" class="headerlink" title="一个单元格添加CheckBox"></a>一个单元格添加CheckBox</h1><p>把 DataGridViewCheckBoxCell 实例放在指定的单元格里<br>如</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chk = <span class="keyword">new</span> DataGridViewCheckBoxCell();</span><br><span class="line">dataGridView1.Rows[<span class="number">0</span>].Cells[<span class="number">0</span>] = chk;</span><br></pre></td></tr></table></figure><h1 id="DataGridView控件列头添加CheckBox"><a href="#DataGridView控件列头添加CheckBox" class="headerlink" title="DataGridView控件列头添加CheckBox"></a>DataGridView控件列头添加CheckBox</h1><blockquote><p>DataGridView控件是CS架构中用的比较频繁的一个控件，里面提供了checkbox列的功能，可是却没有在列头给出checkbox控件用于全选&#x2F;全部取消所有行的功能，确实是个遗憾，这里就通过绘制实现这个功能.</p></blockquote><h1 id="添加一个帮助类"><a href="#添加一个帮助类" class="headerlink" title="添加一个帮助类"></a>添加一个帮助类</h1><p>添加一个帮助类DataGridViewCheckBoxHeaderCell，用于绘制列头checkbox和创建鼠标单击事件，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataGridViewCheckBoxHeaderCell</span> : <span class="title">DataGridViewColumnHeaderCell</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">DataGridViewCheckBoxHeaderEventHander</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCheckBoxHeaderEventArgs e</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Point checkBoxLocation;</span><br><span class="line">        <span class="keyword">private</span> Size checkBoxSize;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> _checked = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">private</span> Point _cellLocation = <span class="keyword">new</span> Point();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.VisualStyles.CheckBoxState _cbState =</span><br><span class="line">            System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> DataGridViewCheckBoxHeaderEventHander OnCheckBoxClicked;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//绘制列头checkbox</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Paint</span>(<span class="params">System.Drawing.Graphics graphics,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      System.Drawing.Rectangle clipBounds,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      System.Drawing.Rectangle cellBounds,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">int</span> rowIndex,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewElementStates dataGridViewElementState,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">object</span> <span class="keyword">value</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">object</span> formattedValue,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">string</span> errorText,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewCellStyle cellStyle,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewAdvancedBorderStyle advancedBorderStyle,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewPaintParts paintParts</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.Paint(graphics, clipBounds, cellBounds, rowIndex,</span><br><span class="line">                       dataGridViewElementState, <span class="keyword">value</span>,</span><br><span class="line">                       formattedValue, errorText, cellStyle,</span><br><span class="line">                       advancedBorderStyle, paintParts);</span><br><span class="line">            Point p = <span class="keyword">new</span> Point();</span><br><span class="line">            Size s = CheckBoxRenderer.GetGlyphSize(graphics,</span><br><span class="line">                                                   System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal);</span><br><span class="line">            p.X = cellBounds.Location.X +</span><br><span class="line">                  (cellBounds.Width/<span class="number">2</span>) - (s.Width/<span class="number">2</span>) - <span class="number">1</span>; <span class="comment">//列头checkbox的X坐标</span></span><br><span class="line">            p.Y = cellBounds.Location.Y +</span><br><span class="line">                  (cellBounds.Height/<span class="number">2</span>) - (s.Height/<span class="number">2</span>); <span class="comment">//列头checkbox的Y坐标</span></span><br><span class="line">            _cellLocation = cellBounds.Location;</span><br><span class="line">            checkBoxLocation = p;</span><br><span class="line">            checkBoxSize = s;</span><br><span class="line">            <span class="keyword">if</span> (_checked)</span><br><span class="line">                _cbState = System.Windows.Forms.VisualStyles.</span><br><span class="line">                    CheckBoxState.CheckedNormal;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                _cbState = System.Windows.Forms.VisualStyles.</span><br><span class="line">                    CheckBoxState.UncheckedNormal;</span><br><span class="line">            CheckBoxRenderer.DrawCheckBox</span><br><span class="line">                (graphics, checkBoxLocation, _cbState);</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 点击列头checkbox单击事件</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnMouseClick</span>(<span class="params">DataGridViewCellMouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Point p = <span class="keyword">new</span> Point(e.X + _cellLocation.X, e.Y + _cellLocation.Y);</span><br><span class="line">            <span class="keyword">if</span> (p.X &gt;= checkBoxLocation.X &amp;&amp; p.X &lt;=</span><br><span class="line">                                             checkBoxLocation.X + checkBoxSize.Width</span><br><span class="line">                &amp;&amp; p.Y &gt;= checkBoxLocation.Y &amp;&amp; p.Y &lt;=</span><br><span class="line">                checkBoxLocation.Y + checkBoxSize.Height)</span><br><span class="line">            &#123;</span><br><span class="line">                _checked = !_checked;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//获取列头checkbox的选择状态</span></span><br><span class="line">                DataGridViewCheckBoxHeaderEventArgs ex = <span class="keyword">new</span> DataGridViewCheckBoxHeaderEventArgs();</span><br><span class="line">                ex.CheckedState = _checked;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">object</span> sender = <span class="keyword">new</span> <span class="built_in">object</span>(); <span class="comment">//此处不代表选择的列头checkbox，只是作为参数传递。应该列头checkbox是绘制出来的，无法获得它的实例</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (OnCheckBoxClicked != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    OnCheckBoxClicked(sender, ex); <span class="comment">//触发单击事件</span></span><br><span class="line">                    <span class="keyword">this</span>.DataGridView.InvalidateCell(<span class="keyword">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">base</span>.OnMouseClick(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义包含列头checkbox选择状态的参数类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataGridViewCheckBoxHeaderEventArgs</span> : <span class="title">EventArgs</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> checkedState;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> CheckedState</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> checkedState; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; checkedState = <span class="keyword">value</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h1><p>在有DataGridView的界面，添加代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>给DataGridView添加checkbox列头</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddCheckboxCell</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DataGridViewCheckBoxHeaderCell ch = <span class="keyword">new</span> DataGridViewCheckBoxHeaderCell();</span><br><span class="line">            ch.OnCheckBoxClicked += <span class="keyword">new</span> DataGridViewCheckBoxHeaderCell.DataGridViewCheckBoxHeaderEventHander(ch_OnCheckBoxClicked);</span><br><span class="line">            <span class="comment">//第一列为DataGridViewCheckBoxColumn</span></span><br><span class="line">            DataGridViewCheckBoxColumn checkboxCol = <span class="keyword">new</span> DataGridViewCheckBoxColumn();</span><br><span class="line">            checkboxCol.HeaderCell = ch;</span><br><span class="line">            checkboxCol.HeaderCell.Value = <span class="built_in">string</span>.Empty; <span class="comment">//消除列头checkbox旁出现的文字</span></span><br><span class="line">            <span class="keyword">this</span>.dgvSelectAll.Columns.Insert(<span class="number">0</span>, checkboxCol);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">ch_OnCheckBoxClicked</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCheckBoxHeaderEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (DataGridViewRow dgvRow <span class="keyword">in</span> <span class="keyword">this</span>.dgvSelectAll.Rows)</span><br><span class="line">            &#123;</span><br><span class="line">                dgvRow.Cells[<span class="number">0</span>].Value = e.CheckedState;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.dgvSelectAll.RefreshEdit();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="formatted值的类型错误-System-FormatException-异常"><a href="#formatted值的类型错误-System-FormatException-异常" class="headerlink" title="formatted值的类型错误 System.FormatException 异常"></a>formatted值的类型错误 System.FormatException 异常</h1><p>在DataGridView手动添加了CheckBox列;在窗体Show的时候,遇到一个错误:<br>**错误如下: **</p><ul><li>DataGridView中发生一下异常:System.FormatException:单元格的Formatted值的类型错误.要替换此默认对话框,请处理DataError事件.</li></ul><p><strong>点击以后有一对话框错误如下:</strong></p><p>DataGridView中发生一下异常:</p><p>SystemArgumentException:为DataGridViewCheckBoxCell提供的值的类型错误.</p><p>在System.Windows.Forms.DataGridViewCheckBoxCell.set_EditiingCellFormattedValue(Object value)</p><p>在System.Windows.Forms.DataGridView.InitializeEditingCellValue (DataGridViewCessStyle&amp;dataGridViewCellStyle,DataGridViewCell&amp;dataGridViewCell)</p><p>要替换此默认对话框,请处理DataError事件.</p><p>我之前曾经用过CheckBox列，此次和之前的区别是 AllowUserToAddRows&#x3D;true;<br>我将该属性设置为false，错误没有出现，可以确定该错误与系统自动添加的行及checBox的默认值为null有关。</p><p>我在DefaultValuesNeeded事件中增加了默认值，发现错误依旧。</p><p>仔细研究发现如下两种解决方法：</p><p>其一：在CellFormatting事件中处理</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.dataGridView1.Columns[e.ColumnIndex].Name == <span class="string">&quot;AZK&quot;</span>)               </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.Value == <span class="literal">null</span>)                       </span><br><span class="line">            e.Value = <span class="literal">false</span>;               </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其二：在在CellFormatting事件中不处理，但DataError事件中处理</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;               </span><br><span class="line">    <span class="keyword">if</span> (dataGridView1.Rows[e.RowIndex].IsNewRow)                   </span><br><span class="line">        <span class="keyword">return</span>;           </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note: DataGridView中几个事件发生的顺序记录如下，以备查寻<br>在AllowUserToAddRows&#x3D;true时候的事件发生次序</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Form.Show ---&gt; CellFormatting (如果出错，<span class="keyword">goto</span> DataError)，注意这里的NewRow没有触发DefaultValuesNeeded事件。</span><br></pre></td></tr></table></figure><p>如果发生其他比如 RowEnter事件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（DefaultValuesNeeded） ---&gt; RowEnter ---&gt; CellClick</span><br><span class="line"></span><br><span class="line">（DefaultValuesNeeded） ---&gt; RowsAdded ---&gt; UserAddedRow</span><br><span class="line"></span><br><span class="line">DefaultValuesNeeded事件不会发生在 IsNewRow=<span class="literal">true</span>的row上</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.bbsmax.com/A/MyJxM0ba5n/">DateGridView标题列头添加复选框</a></li><li><a href="http://www.dui580.com/Html/?953.html">C#在dataGridView表格中插入复选框</a></li><li><a href="https://www.cnblogs.com/guanshan/p/guan2021-4-7_001.html">C#DataGridViewCheckBoxColumn用法（刷新操作，否则点击之后可能不能立即勾选）</a></li><li><a href="https://bbs.csdn.net/topics/392482043">如何在DataGridView中的某一个单元格添加CheckBox？</a></li><li><a href="https://www.cnblogs.com/guanshan/p/guan2021-4-9_001.html">C# winform单元格的formatted值的类型错误 DataGridView中CheckBox列运行时候System.FormatException异常</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> DataGridView </tag>
            
            <tag> 表格 </tag>
            
            <tag> 复选框 </tag>
            
            <tag> CheckBox </tag>
            
            <tag> DataGridViewCheckBoxColumn </tag>
            
            <tag> FormatException错误 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 动态工具栏实现</title>
      <link href="/posts/906356836.html"/>
      <url>/posts/906356836.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>是将MenuStrip中的所有DropDownItems列出来，供用户选择，被选中的项将在ToolStrip被显示出来，并且可以使用与其对应的DropDownItem的事件.</p><p>其工作流程可以分解如下图所示：</p><p>图１．１流程图</p><p>实际上这个图所描述的正是我们上面说的一样，只是换作图形表示而已，但这样一来程序的结构就变得清晰起来了。</p><p>实际上这个图所描述的正是我们上面说的一样，只是换作图形表示而已，但这样一来程序的结构就变得清晰起来了。可以看出，整个问题实际上被分解成了三个部分，即遍历菜单栏所有可用的DropDownItems，提供用户的选择界面，和为工具栏动态添Items及其事件。提供用户的选择界面这部分内容没什么技术含量，可以用任何一种你喜欢的方式实现，没什么好说的。下面我将重点说一下遍历菜单栏所有可用的DropDownItems，和为工具栏动态添Items及其事件这两部分。</p><h2 id="一、-遍历菜单栏所有可用的DropDownItems"><a href="#一、-遍历菜单栏所有可用的DropDownItems" class="headerlink" title="一、  遍历菜单栏所有可用的DropDownItems"></a>一、  遍历菜单栏所有可用的DropDownItems</h2><p>菜单栏的结构实际上是典型的“森林”，而每一个下拉菜单(DropDownItem)都是一棵树。</p><p>面对这种问题最好的解决方式就是递归。很多人提到递归就头大，其实对于了解递归的人来说递归很简单。尤其是树的遍历就更加的简单了，它有固有的模式，一般先对结束条件进行判断，然后递归遍历各个子树，就这么简单。</p><p><strong>对于本题DropDownItem的函数可以这样来写：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ToolStripMenuItem <span class="title">Items</span>(<span class="params">ToolStripMenuItem tsItem</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//结束条件判定</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (tsItem.DropDownItems.Count &lt;= <span class="number">0</span>) <span class="keyword">return</span> tsItem;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    &#123;   <span class="comment">//遍历各子树</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> tsItem.DropDownItems)</span><br><span class="line"></span><br><span class="line">        &#123;   <span class="comment">//递归遍历mItem子树</span></span><br><span class="line"></span><br><span class="line">            Items(mItem);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>** 代码说明：**</p><ul><li>函数首先判断节点(就是一个DropDownItem)是否含有子节点，如果它不含有子节点就return它(这就是结束条件判断)。</li></ul><blockquote><p>我们这样做完全是因为我们菜单使用习惯(所有的菜单功能都是在叶子节点实现功能的)，当然我们也可以将非叶子节点也return回去。但是最好不要这么干，因为它会令我们产生很多困扰(不信邪的朋友可以试试)。下一步再分别遍历该节点的每一个子树</p></blockquote><ul><li>上面是遍历某个DropDownItem和它的子节点，下面遍历整个菜单栏：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">…… </span><br><span class="line"></span><br><span class="line">                <span class="comment">//这是遍历菜单栏，可以放在任何你需要的地方，</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//注: menuStrip1是我菜单栏的名字</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> <span class="keyword">this</span>.menuStrip1.Items)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//递归遍历各个DropDownItem</span></span><br><span class="line"></span><br><span class="line">                    Items(mItem);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">……</span><br></pre></td></tr></table></figure><blockquote><p>上面就是遍历菜单的全部代码。这当然还没完，我们需要将遍历菜单得到的各个菜单项存入容器，以备下面的程序使用。</p></blockquote><p><strong>什么容器都可以，而我选择了List&lt;&gt;。要实现这个功能：</strong></p><ul><li>1.首先，我们需要增加一个容器 lMenuItems</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">……</span><br><span class="line"></span><br><span class="line"><span class="comment">//增加一个全局变量，它是一个容器</span></span><br><span class="line"></span><br><span class="line">List&lt;ToolStripMenuItem&gt; lMenuItems;</span><br><span class="line"></span><br><span class="line">……</span><br></pre></td></tr></table></figure><ul><li>2.然后，在遍历菜单栏程序段中添加代码</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这是遍历菜单栏，可以放在任何你需要的地方，</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//menuStrip1是我菜单栏的名字</span></span><br><span class="line"></span><br><span class="line">                lMenuItems = <span class="keyword">new</span> List&lt;ToolStripMenuItem&gt;();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> <span class="keyword">this</span>.menuStrip1.Items)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//递归遍历各个DropDownItem</span></span><br><span class="line"></span><br><span class="line">                    Items(mItem);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">……</span><br></pre></td></tr></table></figure><ul><li>3.将DropDownItem的递归遍历函数修改成下面这个样子</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ToolStripMenuItem <span class="title">Items</span>(<span class="params">ToolStripMenuItem tsItem</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;   <span class="comment">//结束条件判定</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (tsItem.DropDownItems.Count &lt;= <span class="number">0</span>) <span class="keyword">return</span> tsItem;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">            &#123;   <span class="comment">//遍历各子树</span></span><br><span class="line"></span><br><span class="line">                ToolStripMenuItem <span class="keyword">value</span> = <span class="literal">null</span>;<span class="comment">//临时变量</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> tsItem.DropDownItems)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//递归遍历mItem子树</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">value</span> = Items(mItem);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">value</span> != <span class="literal">null</span> &amp;&amp; lMenuItems != <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                            lMenuItems.Add(<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>好，初战告捷。跳过如何提供用户的选择界面部分不提，直接进入重点。</strong></p><h2 id="为工具栏动态添Items及其事件"><a href="#为工具栏动态添Items及其事件" class="headerlink" title="为工具栏动态添Items及其事件"></a>为工具栏动态添Items及其事件</h2><p>给工具栏动态添加Items其实是一件非常简单的事，就像有些人说的new一个，再Add()进去就搞定了。</p><p>关键的问题不在这里，如何使各个工具栏的Item的事件可以与DropDownItem的事件一一对应才是问题的关键。</p><p>各个DropDownItem都可以拥有自己的事件，各个事件的名称不同，而且事件是不能直接拿事件赋值的，如果无法实现事件的动态赋值，菜单栏动态添加也就没戏了。如果没有好多解决方法，程序开发到这里只能是僵局。</p><p><strong>关于事件的调整</strong></p><ul><li>1.首先事件是可以调用事件的，并且几个控件可以共用一个事件。这就为问题的解决提供了可能性。<br>让所有的可用菜单项都使用一个事件，或者说让这个事件统领其他的菜单事件。<br>我们新建一个事件，并将这个事件命名为Menu_Click，它来统领整个Menu的所有Click事件：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Menu_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>       &#123; …… &#125;</span><br></pre></td></tr></table></figure><ul><li>2.第二步，将原来所有DropDownItems的事件(菜单项事件)都替换成Menu_Click。</li></ul><p><strong>小知识： 事件参数中的sender事实上就是发出事件的控件(或源)，但因为它的类型是object，所有在使用前要对其进行强制类型转换。</strong></p><p>比如：有一个sender的实际类型是ToolStripItem，我需要获得sender的Name属性值就需要：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> sender_Name = ((ToolStripItem)sender).Name;</span><br></pre></td></tr></table></figure><p><strong>应用上面特点，在事件处理函数Menu_Click中就不难使用switch或者if&#x2F;else来区分事件的来源，并分别调用他们自己的事件处理函数了。</strong></p><h2 id="3-动态添加"><a href="#3-动态添加" class="headerlink" title="3.动态添加"></a>3.动态添加</h2><p><strong>解决了事件的问题，工具栏的动态添加实际上就是一句话的事</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">toolStrip1.Items.Add(<span class="keyword">new</span> ToolStripButton(</span><br><span class="line"></span><br><span class="line">                                     &lt;某DropDownItem&gt;.Text, <span class="comment">//DropDownItem显示的文字</span></span><br><span class="line"></span><br><span class="line">                                     &lt;某DropDownItem&gt;.Image, <span class="comment">//DropDownItem图标</span></span><br><span class="line"></span><br><span class="line">                                     <span class="keyword">new</span> System.EventHandler(Menu_Click), <span class="comment">//DropDownItem事件</span></span><br><span class="line"></span><br><span class="line">                                     &lt;某DropDownItem&gt;.Name <span class="comment">//DropDownItem名称</span></span><br><span class="line"></span><br><span class="line">));</span><br></pre></td></tr></table></figure><h1 id="简单实例："><a href="#简单实例：" class="headerlink" title="简单实例："></a>简单实例：</h1><p><strong>(请将代码粘贴到你新建项目中对应得位置)</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Form1.Designer.cs*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required designer variable.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.ComponentModel.IContainer components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Clean up any resources being used.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;disposing&quot;&gt;</span>true if managed resources should be disposed; otherwise, false.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (disposing &amp;&amp; (components != <span class="literal">null</span>))</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                components.Dispose();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">base</span>.Dispose(disposing);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required method for Designer support - do not modify</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> the contents of this method with the code editor.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1 = <span class="keyword">new</span> System.Windows.Forms.MenuStrip();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span> = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1 = <span class="keyword">new</span> System.Windows.Forms.ToolStrip();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.SuspendLayout();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// menuStrip1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Items.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Name = <span class="string">&quot;menuStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.TabIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Text = <span class="string">&quot;menuStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// first</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Name = <span class="string">&quot;first&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">47</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Text = <span class="string">&quot;first&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.Name = <span class="string">&quot;f1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.Text = <span class="string">&quot;f1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f11</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Name = <span class="string">&quot;f11&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Text = <span class="string">&quot;f11&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f12</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Name = <span class="string">&quot;f12&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Text = <span class="string">&quot;f12&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Name = <span class="string">&quot;f2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Text = <span class="string">&quot;f2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f3</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.Name = <span class="string">&quot;f3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.Text = <span class="string">&quot;f3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f31</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Name = <span class="string">&quot;f31&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Text = <span class="string">&quot;f31&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// secondToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.Name = <span class="string">&quot;secondToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">53</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.Text = <span class="string">&quot;second&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s1ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Name = <span class="string">&quot;s1ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Text = <span class="string">&quot;s1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s2ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Name = <span class="string">&quot;s2ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Text = <span class="string">&quot;s2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s3ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.Name = <span class="string">&quot;s3ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.Text = <span class="string">&quot;s3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s31ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.Name = <span class="string">&quot;s31ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.Text = <span class="string">&quot;s31&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s311ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Name = <span class="string">&quot;s311ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">94</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Text = <span class="string">&quot;s311&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s32ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Name = <span class="string">&quot;s32ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Text = <span class="string">&quot;s32&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// thirdToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.Name = <span class="string">&quot;thirdToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">47</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.Text = <span class="string">&quot;third&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// t1ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Name = <span class="string">&quot;t1ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Text = <span class="string">&quot;t1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// t2ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Name = <span class="string">&quot;t2ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Text = <span class="string">&quot;t2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// set</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">106</span>, <span class="number">185</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Name = <span class="string">&quot;set&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.TabIndex = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Text = <span class="string">&quot;set-&gt;Add&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.btnSet_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// toolStrip1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">0</span>, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Name = <span class="string">&quot;toolStrip2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.TabIndex = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Text = <span class="string">&quot;toolStrip2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Form1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF( <span class="number">6F</span> , <span class="number">12F</span> );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">266</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.toolStrip1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.<span class="keyword">set</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.menuStrip1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.PerformLayout();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.PerformLayout();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem first;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f11;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f12;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f3;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f31;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem secondToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s1ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s2ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s3ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s31ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s311ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s32ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem thirdToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem t1ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem t2ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.MenuStrip menuStrip1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStrip toolStrip1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.Button <span class="keyword">set</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*     Form1.cs    */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line"></span><br><span class="line">    &#123;   <span class="comment">//容器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> List&lt;ToolStripMenuItem&gt; lMenuItems;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;   <span class="comment">//加载菜单项到容器</span></span><br><span class="line"></span><br><span class="line">            lMenuItems = <span class="keyword">new</span> List&lt;ToolStripMenuItem&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> <span class="keyword">this</span>.menuStrip1.Items)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Items(mItem);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> 菜单事件</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Menu_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> itemName = ((ToolStripItem)sender).Name;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (itemName[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>: first_Click(sender, e); <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>: second_Click(sender, e); <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;t&#x27;</span>: third_Click(sender, e); <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">third_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;这是菜单“Third”的事件处理函数&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">second_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;这是菜单“Second”的事件处理函数&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">first_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> itemName = ((ToolStripItem)sender).Name;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> showString = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (itemName)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f11&quot;</span>: showString = <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f11.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f12&quot;</span>: showString =  <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f12.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f2&quot;</span>: showString = <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f2.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f31&quot;</span>: showString = <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f31.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="literal">default</span>: <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (showString != <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(showString);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment">//递归遍历DropDownItem函数</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> ToolStripMenuItem <span class="title">Items</span>(<span class="params">ToolStripMenuItem tsItem</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;   <span class="comment">//结束条件判定</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (tsItem.DropDownItems.Count &lt;= <span class="number">0</span>) <span class="keyword">return</span> tsItem;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">            &#123;   <span class="comment">//遍历各子树</span></span><br><span class="line"></span><br><span class="line">                ToolStripMenuItem <span class="keyword">value</span> = <span class="literal">null</span>;<span class="comment">//临时变量</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> tsItem.DropDownItems)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">value</span> = Items(mItem);<span class="comment">//递归遍历mItem子树</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">value</span> != <span class="literal">null</span> &amp;&amp; lMenuItems != <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                        lMenuItems.Add(<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="comment">//递归遍历DropDownItem函数&lt;END&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment">//动态设置工具栏函数</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSet_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            seting fset = <span class="keyword">new</span> seting();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (ToolStripMenuItem mitem <span class="keyword">in</span> lMenuItems)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (mitem.Name != <span class="keyword">new</span> ToolStripSeparator().Name)</span><br><span class="line"></span><br><span class="line">                    fset.listBox1.Items.Add(mitem.Name);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fset.ShowDialog() == DialogResult.OK)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">string</span> mn <span class="keyword">in</span> fset.listBox1.SelectedItems)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//如果toolStrip1还没有加载，加载之</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (toolStrip1 == <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                    &#123;</span><br><span class="line"></span><br><span class="line">                        toolStrip1 = <span class="keyword">new</span> ToolStrip();</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Top = menuStrip1.Bottom + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Left = menuStrip1.Left;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Name = <span class="string">&quot;toolStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">                        toolStrip1.TabIndex = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Text = <span class="string">&quot;toolStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">                        Controls.Add(<span class="keyword">this</span>.toolStrip1);<span class="comment">//将工具栏添加到窗口上</span></span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//找到与列表框中对应的DropDownItem，添加之</span></span><br><span class="line"></span><br><span class="line">                    <span class="built_in">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span> (i &lt; lMenuItems.Count &amp;&amp; mn != lMenuItems[i].Name)</span><br><span class="line"></span><br><span class="line">                    &#123; i++; &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (i &lt; lMenuItems.Count)</span><br><span class="line"></span><br><span class="line">                    &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//给ToolStrip动态添加</span></span><br><span class="line"></span><br><span class="line">                        toolStrip1.Items.Add(<span class="keyword">new</span> ToolStripButton(</span><br><span class="line"></span><br><span class="line">                                                            lMenuItems[i].Text,</span><br><span class="line"></span><br><span class="line">                                                            lMenuItems[i].Image,</span><br><span class="line"></span><br><span class="line">                                                            <span class="keyword">new</span> System.EventHandler(Menu_Click),</span><br><span class="line"></span><br><span class="line">                                                            lMenuItems[i].Name</span><br><span class="line"></span><br><span class="line">                                                            )</span><br><span class="line"></span><br><span class="line">                                              );</span><br><span class="line"></span><br><span class="line">                        lMenuItems.Remove(lMenuItems[i]);<span class="comment">//把已经添加过的从列表中去除</span></span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="comment">//动态设置工具栏函数&lt;END&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*seting.Designer.cs*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">seting</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required designer variable.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.ComponentModel.IContainer components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Clean up any resources being used.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;disposing&quot;&gt;</span>true if managed resources should be disposed; otherwise, false.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (disposing &amp;&amp; (components != <span class="literal">null</span>))</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                components.Dispose();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">base</span>.Dispose(disposing);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required method for Designer support - do not modify</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> the contents of this method with the code editor.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1 = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2 = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1 = <span class="keyword">new</span> System.Windows.Forms.ListBox();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// button1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">128</span>, <span class="number">238</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Name = <span class="string">&quot;button1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.TabIndex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Text = <span class="string">&quot;add&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.button1_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// button2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">209</span>, <span class="number">238</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Name = <span class="string">&quot;button2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.TabIndex = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Text = <span class="string">&quot;取消&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// listBox1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.FormattingEnabled = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.ItemHeight = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">12</span>, <span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.Name = <span class="string">&quot;listBox1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.SelectionMode = System.Windows.Forms.SelectionMode.MultiSimple;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">268</span>, <span class="number">220</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.TabIndex = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// seting</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF( <span class="number">6F</span> , <span class="number">12F</span> );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">266</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.listBox1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.button2);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.button1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;seting&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;seting&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.Button button1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.Button button2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> System.Windows.Forms.ListBox listBox1;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*seting.Designer.cs*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">seting</span> : <span class="title">Form</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">seting</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.OK;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Close();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/fd7893/article/details/1319341">C#趣味小程序(6)——动态工具栏</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 动态 </tag>
            
            <tag> 工具栏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 动态添加和删除控件</title>
      <link href="/posts/1255716618.html"/>
      <url>/posts/1255716618.html</url>
      
        <content type="html"><![CDATA[<h1 id="需求效果"><a href="#需求效果" class="headerlink" title="需求效果"></a>需求效果</h1><img src="https://img-blog.csdn.net/20140311141858203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGliZXJ4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><p><strong>如上图操作添加按钮,则下面自动增加一行GROUPBOX控件,操作删除则自动删除最后一行开始的BROUPBOX控件.</strong></p><h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="1-定义一个记录行数的全局变量"><a href="#1-定义一个记录行数的全局变量" class="headerlink" title="1)定义一个记录行数的全局变量"></a>1)定义一个记录行数的全局变量</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> watch_num = <span class="number">0</span>; </span><br></pre></td></tr></table></figure><h2 id="2-编写动态添加的代码"><a href="#2-编写动态添加的代码" class="headerlink" title="2)编写动态添加的代码"></a>2)编写动态添加的代码</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addWatchFrom</span>(<span class="params"><span class="built_in">int</span> _series,<span class="built_in">string</span> _diskName</span>)</span> &#123;</span><br><span class="line">          <span class="keyword">try</span></span><br><span class="line">          &#123;</span><br><span class="line"> </span><br><span class="line">              GroupBox s1 = <span class="keyword">new</span> GroupBox();</span><br><span class="line"> </span><br><span class="line">              s1.Top = <span class="number">200</span> + _series*<span class="number">90</span>;</span><br><span class="line">              s1.Left = <span class="number">8</span>;</span><br><span class="line"> </span><br><span class="line">              s1.Width = <span class="number">260</span>;</span><br><span class="line"> </span><br><span class="line">              s1.Height = <span class="number">80</span>;</span><br><span class="line"> </span><br><span class="line">                            <span class="keyword">this</span>.Controls.Add(s1);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">          &#125;</span><br><span class="line">          catch (Exception ex)</span><br><span class="line">          &#123;</span><br><span class="line"> </span><br><span class="line">              MessageBox.Show(ex.Message); </span><br><span class="line"> </span><br><span class="line">          &#125;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//添加按钮的操作</span></span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line"> </span><br><span class="line">          addWatchFrom(watch_num, <span class="string">&quot;C&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          watch_num++;</span><br><span class="line"> </span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="3）编写删除按钮的操作"><a href="#3）编写删除按钮的操作" class="headerlink" title="3）编写删除按钮的操作"></a>3）编写删除按钮的操作</h2><p><strong>这儿需要先遍历所有添加的GroupBOX控件，然后依据其纵向Y轴的变化，定位到需要删除的控件，实现删除。注意控件编号要减一，否则会异常。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除控件</span></span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button4_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">          <span class="keyword">if</span> ((<span class="keyword">this</span>.watch_num<span class="number">-1</span>) &gt;=<span class="number">0</span>)<span class="comment">//if 1</span></span><br><span class="line">          &#123;</span><br><span class="line"> </span><br><span class="line">              </span><br><span class="line">             <span class="keyword">foreach</span> (Control  obj0 <span class="keyword">in</span> <span class="keyword">this</span>.Controls )<span class="comment">//判断界面上的控件 </span></span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span> (obj0.GetType().ToString().Equals(<span class="string">&quot;System.Windows.Forms.GroupBox&quot;</span>)) </span><br><span class="line">               &#123;</span><br><span class="line"> </span><br><span class="line">                                      <span class="keyword">if</span> (obj0.Location.Y ==(<span class="number">200</span> + (<span class="keyword">this</span>.watch_num<span class="number">-1</span>) * <span class="number">90</span>))</span><br><span class="line">                   &#123;</span><br><span class="line">                                               <span class="keyword">this</span>.Controls.Remove(obj0);</span><br><span class="line"> </span><br><span class="line">                       <span class="keyword">if</span> (<span class="keyword">this</span>.watch_num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                           <span class="keyword">this</span>.watch_num--;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">                   </span><br><span class="line">                   <span class="comment">//此时只要执行你的删除控件代码即可</span></span><br><span class="line">               &#125;</span><br><span class="line"> </span><br><span class="line">             &#125; </span><br><span class="line">           </span><br><span class="line"> </span><br><span class="line">          &#125;<span class="comment">//if 1</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/tiberx/article/details/21012703">C#实现动态添加和删除控件</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 控件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 动态 </tag>
            
            <tag> 添加 </tag>
            
            <tag> 删除 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#窗体之四（点叉叉按钮关闭后进程没结束）</title>
      <link href="/posts/1670766738.html"/>
      <url>/posts/1670766738.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>如果要解决“C#winform 点叉叉按钮关闭一form窗体应用后，后台进程仍在运行”的问题，可以直接点击目录跳转到3.4关闭窗体的多种方法。</p></blockquote><p>前面为记录遇到该问题的一些过程。<br>之前用C#做了一个日志备份的窗体应用程序，最近把这个程序完善了一下，在窗体上显示了配置文件中的一些信息，并且增加了更新按钮，点击会将一些比较重要的配置写到日志文件中。</p><img src="https://img-blog.csdnimg.cn/59785734b5e94c6f89aa5bd8a3cde906.png"><p><strong>但是在测试的时候发现了一个问题，运行生成的Release文件中的exe文件（因为最后要放到服务器上使用，不会将整个项目拷贝过去，只拷贝Release文件）。</strong></p><img src="https://img-blog.csdnimg.cn/6f5afdc8431a4b3ca67c61317e80a3be.png"><p>在第一次运行的时候没什么问题，但是将程序关闭后，修改完配置文件中的线程数再启动的时候，窗体可以正常显示，备份功能也可以正常实现，但是日志中没有写入任何东西，点击更新按钮也没有将配置文件中的信息写入日志当中。下面的是第一次运行的时候写入的，但是后面就不显示了，点击更新按钮也不显示。</p><img src="https://img-blog.csdnimg.cn/813e8996d60a4726bd02d107d9ad2246.png"><h2 id="一、可能的原因1"><a href="#一、可能的原因1" class="headerlink" title="一、可能的原因1"></a>一、可能的原因1</h2><blockquote><p>1.1猜想1</p></blockquote><p>因为程序里面有使用多线程，我想会不会是在vs上运行程序生成项目的时候，线程数被固定了，后续更改配置文件的线程数与生成时项目中的线程数不一致导致程序出错。</p><img src="https://img-blog.csdnimg.cn/fe113372625f430fa7b434879cb07e60.png"><blockquote><p>1.2验证</p></blockquote><p>首先生成了一个4线程的项目，然后运行Release文件中的exe文件，发现功能没问题，日志也可以写入。<br>然后将窗体关闭，将配置文件中的线程数改为3，窗体启动后发现无法正常使用。<br>然后将窗体关闭，将配置文件中的线程数改为2，亦是如此。<br>然后将窗体关闭，将配置文件中的线程数改回4，亦是如此。</p><p>后续又做了如下验证：</p><img src="https://img-blog.csdnimg.cn/4811208d35734e769a37373485ee9ce5.jpeg"><p>期间有debug，开启线程没有问题，会按照配置文件中修改的参数来开启对应的线程，点击按钮也有执行日志写入功能，只是.log日志文件中没有实际写入，这说明程序应该是没有问题的。</p><blockquote><p>1.3结论</p></blockquote><p>根据上面的验证结果，得出的结论是跟生成的线程数没有关系。</p><h2 id="二、可能的原因2"><a href="#二、可能的原因2" class="headerlink" title="二、可能的原因2"></a>二、可能的原因2</h2><blockquote><p>2.1猜想2</p></blockquote><p>我想起之前在更新版本的时候，需要删除之前的版本或者给之前版本的文件加上日期，在应用窗体已经关闭的情况下还是显示该文件被占用无法删除或者修改，打开任务管理器，会发现有好几个该程序的进程正在运行，如实想会不会是因为该程序在上次关闭的时候没有彻底关闭，后来又运行exe的时候导致开了好几个，导致日志无法写入。</p><blockquote><p>2.2验证</p></blockquote><p><strong>运行Release文件中的exe文件，将窗体应用关闭后，发现后台进行并没有关闭</strong></p><img src="https://img-blog.csdnimg.cn/0e0a036282114afc9660ccfc12e411df.png"><p>此时不做任何修改，再执行exe文件，窗体启动后发现无法正常使用。<br>然后手动在任务管理器中结束该进程，重新启动exe，发现功能可以正常使用。</p><p>修改配置文件中的线程数，重新启动exe，发现功能可以正常使用。</p><blockquote><p>2.3结论</p></blockquote><p>功能无法正常使用就是因为程序进行没有完全结束，即使关闭了窗体应用，但是程序还在后台运行，如果在每次启动前去任务管理器将该进程关闭，该就可以解决。</p><p>但是该方法比较麻烦，而且治标不治本，于是便开始查询为什么会出现这种情况。</p><h2 id="三、最终解决办法"><a href="#三、最终解决办法" class="headerlink" title="三、最终解决办法"></a>三、最终解决办法</h2><blockquote><p>3.1出现的原因：</p></blockquote><p>有的说是有许多人在用做c# 做登录窗体时，登录成功后当前登录Form关闭，打开Main窗体，但Main窗体点关闭按钮后程序仍在进程仍旧在运行。<br>事实上，关闭Main窗体，只是关闭了Main窗体的线程，并没有关闭程序的主线程，即程序的主线程为登录From。</p><p>但是我这个只有一个窗口，所以不存在多窗体没有关闭的情况。<br><strong>我的真实情况是程序里面开线程了，有托管线程（非主线程），无法干净地退出。（自己遇到的情况基本也是如此）</strong></p><blockquote><p>3.2解决办法1</p></blockquote><p>有的说在FormClosing中添加Application.Exit()可以彻底结束进程。<br>怎么使用FormClosing事件，可以参考：<br>链接: <a href="https://jingyan.baidu.com/article/3065b3b68dafb5becff8a4c4.html">FormClosing事件在哪，怎么打开FormClosing事件</a></p><p><em><strong>于是添加了如下代码：</strong></em></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosing</span>(<span class="params"><span class="built_in">object</span> sender, FormClosingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MessageBox.Show(<span class="string">&quot;将要关闭窗口，是否继续？&quot;</span>, <span class="string">&quot;询问&quot;</span>, MessageBoxButtons.YesNo) == DialogResult.Yes)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">false</span>;</span><br><span class="line">                Application.Exit();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>但是发现关闭窗体后程序依旧没有彻底关闭。</strong></p><p>当我们关闭窗口时，只是停止了当前窗口的消息循环。当Main函数中有消息循环的窗口，这个消息循环结束后，Main函数就基本上完成了历史使命，整个应用程序自然就结束了。</p><p>而Application.Exit()方法是终止所有线程上的消息循环，一般情况下，无论在什么地方调用此方法，程序就能退出。</p><p><strong>但是如果你在程序中加入了某些耗时甚至是死循环的线程，那么即使是消息循环终止，程序也依然不会结束。</strong></p><p>而且这个代码还有一个问题，会导致显示确定退出的两次对话框，第一次单击“确定”第二次单击任何一个都会退出。</p><p>因为第一次单击了退出对话框的“确定”按钮后，Application.Exit();会导致触发第二次FrmMain_FormClosing()事件，所以就会显示两个确认退出的对话框，但第二对话框的选择对是否退出没有影响。可以改为判断如果单击了不是确认按钮则e.Cancel &#x3D; true; ，确定按钮什么都不写或不做判断，如果要加上Application.Exit(); 可以将其添加到窗体的FormClosed事件中。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosing</span>(<span class="params"><span class="built_in">object</span> sender, FormClosingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MessageBox.Show(<span class="string">&quot;将要关闭窗口，是否继续？&quot;</span>, <span class="string">&quot;询问&quot;</span>, MessageBoxButtons.YesNo) == DialogResult.Yes)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">             <span class="comment">//20221227 窗体关闭</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosed</span>(<span class="params"><span class="built_in">object</span> sender, FormClosedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Exit();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这样就不会出现弹出两次窗口的情况，但是程序没有彻底结束的问题依旧没有解决。</strong></p><blockquote><p>3.3解决办法2</p></blockquote><p><strong>在Form1_FormClosed事件中加入强制结束进程并退出。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosing</span>(<span class="params"><span class="built_in">object</span> sender, FormClosingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MessageBox.Show(<span class="string">&quot;将要关闭窗口，是否继续？&quot;</span>, <span class="string">&quot;询问&quot;</span>, MessageBoxButtons.YesNo) == DialogResult.Yes)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">             <span class="comment">//20221227 窗体关闭</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosed</span>(<span class="params"><span class="built_in">object</span> sender, FormClosedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Exit();</span><br><span class="line">            <span class="comment">//强制结束进程并退出</span></span><br><span class="line"><span class="comment">//System.Diagnostics.Process.GetCurrentProcess().Kill();</span></span><br><span class="line">System.Environment.Exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>3.4关闭窗体的多种方法</p></blockquote><p>在c#中退出WinForm程序包括有很多方法，如:**this.Close(); Application.Exit();Application.ExitThread(); System.Environment.Exit(0); **等他们各自又有一些不一样的地方，下面详细介绍一下。</p><ul><li><p>1.this.Close(); 只是关闭当前窗口，若不是主窗体的话，是无法退出程序的，另外若有托管线程（非主线程），也无法干净地退出；</p></li><li><p>2.Application.Exit(); 强制所有消息中止，退出所有的窗体，但是若有托管线程（非主线程），也无法干净地退出；</p></li><li><p>3.Application.ExitThread(); 强制中止调用线程上的所有消息，同样面临其它线程无法正确退出的问题；</p></li><li><p>4.System.Environment.Exit(0); <strong>这是最彻底的退出方式，不管什么线程都被强制退出，把程序结束的很干净。</strong></p></li></ul><blockquote><p>3.5FormClosing事件和FormClosed事件</p></blockquote><p>这里来说一下FormClosing事件和FormClosed事件</p><p><strong>FormClosing事件</strong><br>在窗体关闭时，FormClosing事件发生。此事件会得到处理。从而释放与窗体相关的所有资源。<br>如果取消此事件，则窗体仍然保持打开状态。<br>当窗体显示为模式对话框时，单击“关闭”会隐藏窗体并将DialogResult属性设为Cancel。<br>通过在些事件中设置DialogResult属性可以在用户单击右上角关闭按钮时重写DialogResult的值。</p><p><strong>FormClosed事件</strong><br>在用户或Application类的Close方法或Exit方法关闭窗体后，会发生FormClosed事件。<br>可以使用此事件释放窗体的一些资源。还可以使用此事件保存输入窗体中的一些信息或者更新父窗体。</p><h1 id="Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）"><a href="#Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）" class="headerlink" title="Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）"></a>Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）</h1><p>相信很多朋友在日常的编程中总会遇到各钟各样的问题，关于Form窗体点击关闭按钮并未关闭进程的解决方法就是很多朋友们都认为很难的一个学习.net的难点，下面就由达内为您介绍一下。</p><p>该问题也是因为本人Form项目开发经验不够引起的。</p><p>在开发一个小工具的过程中，因为是有多个Form窗体，多个窗体间的跳转都是如下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span> &#123;   </span><br><span class="line">    <span class="keyword">this</span>.Hide();   </span><br><span class="line">    UrlList form = <span class="keyword">new</span> UrlList(<span class="keyword">this</span>.cbuserid.SelectedItem.ToString());   </span><br><span class="line">    form.Show(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样子，我在UrlList窗体上面点击关闭按钮，想再要调试就会报无法将文件“obj\Debug\AutoPage.exe”复制到“bin\Debug\AutoPage.exe”。文件“bin\Debug\AutoPage.exe”正由另一进程使用，因此该进程无法访问该文件。一定要在任务管理器中关掉该进程后再调试，很是麻烦。自己猜想是因上面的this.Hide()只是隐藏了当前窗口，并没有关闭，所以我在关闭另一个窗口的时候，这个窗口其实还是未关闭的。</p><p>解决方法：在窗体的FormClosed事件中关掉所有应用窗口，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Main_FormClosed</span>(<span class="params"><span class="built_in">object</span> sender, FormClosedEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    Application.Exit(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>引申：在开发项目时，不管是Web项目还是Form项目，最好所有的窗体都继承基类，这样很多共公的功能就可以在基类中实现了。比如上面的的代码，如果有基类，就不用处理每个窗体的FormClosed事件了，只需处理基类的即可！</strong></p></blockquote><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/sunzixiao/article/details/128457506">C#winform 点叉叉按钮关闭一form窗体应用后，后台进程仍在运行的解决办法</a></li><li><a href="https://jingyan.baidu.com/article/3065b3b68dafb5becff8a4c4.html">c#学习：[4]FormClosed事件关闭窗体后事件</a></li><li><a href="https://www.cnblogs.com/wujy/archive/2013/01/04/2844492.html">Form窗体点击关闭按钮并未关闭进程的解决方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 窗体 </tag>
            
            <tag> 关闭 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 遍历特定目录及其子目录</title>
      <link href="/posts/2157161136.html"/>
      <url>/posts/2157161136.html</url>
      
        <content type="html"><![CDATA[<h1 id="递归方法遍历"><a href="#递归方法遍历" class="headerlink" title="递归方法遍历"></a>递归方法遍历</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归方法遍历目录，并统计其中文件的数目</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">statisticFiles</span>(<span class="params"><span class="built_in">string</span> directory</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> statistic=System.IO.Directory.GetFiles(directory).Length;</span><br><span class="line">            <span class="built_in">string</span>[] directories = System.IO.Directory.GetDirectories(directory);</span><br><span class="line">            <span class="comment">//深度遍历子目录</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> dir <span class="keyword">in</span> directories)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (isDirectory(dir))</span><br><span class="line">                &#123;</span><br><span class="line">                    statistic += statisticFiles(dir);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;Directory is Inexistence.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> statistic;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">isDirectory</span>(<span class="params"><span class="built_in">string</span> p</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> System.IO.Directory.Exists(p);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="遍历特定目录及其子目录-（应用实例，压缩指定目录下的所有文件"><a href="#遍历特定目录及其子目录-（应用实例，压缩指定目录下的所有文件" class="headerlink" title="遍历特定目录及其子目录 （应用实例，压缩指定目录下的所有文件)"></a>遍历特定目录及其子目录 （应用实例，压缩指定目录下的所有文件)</h1><p>这是我迄今所知的最简单的压缩方法。使用了Java类库。</p><p><strong>注意：必须在项目中添加对vjslib引用，程序才能通过编译。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      String strDirectory = <span class="string">@&quot;E:/工作&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            String zipFileName = <span class="string">&quot;E://workBackup//&quot;</span> + DateTime.Now.ToString(<span class="string">&quot;yy_MM_dd&quot;</span>) + <span class="string">&quot;.zip&quot;</span>;</span><br><span class="line">            <span class="comment">//output stream</span></span><br><span class="line">            java.io.FileOutputStream fos = <span class="keyword">new</span> java.io.FileOutputStream(zipFileName);</span><br><span class="line">            <span class="comment">//tie to zip stream</span></span><br><span class="line">            java.util.zip.ZipOutputStream zos = <span class="keyword">new</span> java.util.zip.ZipOutputStream(fos);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            Program p = <span class="keyword">new</span> Program();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Enter a Directory/&#x27;s Name:&quot;</span> );</span><br><span class="line">            p.strDirectory = System.Console.ReadLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isDirectory(p.strDirectory))</span><br><span class="line">            &#123;</span><br><span class="line">                p.zipFiles(p.strDirectory, zos);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Directory is Inexistence.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Close everything</span></span><br><span class="line">            zos.closeEntry();</span><br><span class="line">            zos.close();</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">isDirectory</span>(<span class="params"><span class="built_in">string</span> p</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> System.IO.Directory.Exists(p);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">zipFiles</span>(<span class="params">String dir, java.util.zip.ZipOutputStream zos</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            java.io.FileInputStream fis = <span class="literal">null</span>;</span><br><span class="line">            java.util.zip.ZipEntry ze = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//压缩目录中的文件</span></span><br><span class="line">            String[] strFiles = System.IO.Directory.GetFiles(dir);</span><br><span class="line">            <span class="keyword">foreach</span> (String strfileName <span class="keyword">in</span> strFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Stream with source file</span></span><br><span class="line">                fis = <span class="keyword">new</span> java.io.FileInputStream(strfileName);</span><br><span class="line">                <span class="comment">// It&#x27;s our entry in zip</span></span><br><span class="line">                String strZipFileName = strfileName.Replace(strDirectory+<span class="string">&quot;//&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                ze = <span class="keyword">new</span> java.util.zip.ZipEntry(strZipFileName);</span><br><span class="line"></span><br><span class="line">                zos.putNextEntry(ze);</span><br><span class="line">                <span class="built_in">sbyte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">sbyte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="built_in">int</span> len;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Read and write until done</span></span><br><span class="line">                <span class="keyword">while</span> ((len = fis.read(buffer)) &gt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    zos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//Close source stream</span></span><br><span class="line">                fis.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//深度优先遍历子目录</span></span><br><span class="line">            String[] subDirectories = System.IO.Directory.GetDirectories(dir);</span><br><span class="line">            <span class="keyword">foreach</span> (String sdir <span class="keyword">in</span> subDirectories)</span><br><span class="line">            &#123;</span><br><span class="line">                zipFiles(sdir, zos);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/fd7893/article/details/1246024">C# 趣味小程序（4）——遍历特定目录及其子目录</a></li><li><a href="https://blog.csdn.net/fd7893/article/details/1246077">续：C# 趣味小程序（4）——遍历特定目录及其子目录 （应用实例，压缩指定目录下的所有文件)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 文件管理 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 遍历文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#工具Graphics之一（实现添加中心旋转(任意角度)的文字）</title>
      <link href="/posts/1557869241.html"/>
      <url>/posts/1557869241.html</url>
      
        <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><blockquote><p>这篇文章是 GDI+ 总结系列的第三篇，如果对 GDI+ 的基础使用不熟悉的朋友可以先看第一篇文章《C# 使用 GDI+ 画图》。</p></blockquote><p>需求是要实现给图片添加任意角度旋转的文字，文字的旋转中心要是在文字区域中央，就像 CSS 的 rotate 函数一样的效果。<br><strong>如下：</strong></p><img src="https://img.devbox.cn/3cd4a/63cc/78c/cffbda3f96205f58.gif"><h1 id="分析-amp-思路"><a href="#分析-amp-思路" class="headerlink" title="分析&amp;思路"></a>分析&amp;思路</h1><p>Graphics 类有个 RotateTransform 方法，可以传入任意角度的值来旋转画板。但是这个方法的旋转中心是画板的左上角，所以直接单单用这个方法不能满足我们的需求。此外， Graphics 类还有个 TranslateTransform 方法可以改变坐标的原点，而且这个方法是沿着矩形的x,y轴平移的，即就算图片旋转了一定的角度后，再调用 TranslateTransform 方法，它还是沿着x,y轴平移。于是通过以下三个步骤即可实现图片中心旋转。</p><p>把画板(Graphics对象)原点平移到矩形中心位置(x, y)<br>在(x, y)位置绕原点旋转画板N度<br>画板退回(-x, -y)的距离<br>还是看不懂的同学看下面的图应该就明白了</p><img src="https://img.devbox.cn/3cd4a/63cc/78c/b07c00862d9697ae.png"><p>明白了原理，那不容易推断出，如果要旋转的中心不是图片中心而是文字中心，那步骤还是一样的，只是把(x, y)改为文字中心的坐标就好了。</p><p>除了上面说的方法，其实还有一个方法可以实现中心旋转，那就是使用 Matrix 类。 Matrix 类的 RotateAt 方法可以指定矩阵旋转的中心位置。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"> <span class="comment">// 摘要:</span></span><br><span class="line"> <span class="comment">//  沿 point 参数中指定的点并通过预先计算该旋转，来顺时针旋转此 System.Drawing.Drawing2D.Matrix。</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">// 参数:</span></span><br><span class="line"> <span class="comment">// angle:</span></span><br><span class="line"> <span class="comment">//  旋转角度（范围）（单位：度）。</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">// point:</span></span><br><span class="line"> <span class="comment">//  一个 System.Drawing.PointF，表示旋转中心。</span></span><br><span class="line"> [<span class="meta">TargetedPatchingOptOut(<span class="meta-string">&quot;Performance critical to inline this type of method across NGen image boundaries&quot;</span>)</span>]</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RotateAt</span>(<span class="params"><span class="built_in">float</span> angle, PointF point</span>)</span>;</span><br></pre></td></tr></table></figure><p>Graphics 类的 Transform 属性返回的就是 Matrix 对象，该属性可以 get 、 set 。因此我们先获取原来的画板的矩阵，然后使用 RotateAt 方法旋转该矩阵，再把旋转后的矩阵赋值给画板就好了。</p><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><p><strong>添加任意角度文字方法</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 图片添加任意角度文字(文字旋转是中心旋转，角度顺时针为正)</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;imgPath&quot;&gt;</span>图片路径</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;locationLeftTop&quot;&gt;</span>文字左上角定位(x1,y1)</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fontSize&quot;&gt;</span>字体大小，单位为像素</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;text&quot;&gt;</span>文字内容</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;angle&quot;&gt;</span>文字旋转角度</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fontName&quot;&gt;</span>字体名称</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>添加文字后的Bitmap对象<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Bitmap <span class="title">AddText</span>(<span class="params"><span class="built_in">string</span> imgPath, <span class="built_in">string</span> locationLeftTop, <span class="built_in">int</span> fontSize, <span class="built_in">string</span> text, <span class="built_in">int</span> angle = <span class="number">0</span>, <span class="built_in">string</span> fontName = <span class="string">&quot;华文行楷&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> Image img = Image.FromFile(imgPath);</span><br><span class="line"> <span class="built_in">int</span> width = img.Width;</span><br><span class="line"> <span class="built_in">int</span> height = img.Height;</span><br><span class="line"> Bitmap bmp = <span class="keyword">new</span> Bitmap(width, height);</span><br><span class="line"> Graphics graphics = Graphics.FromImage(bmp);</span><br><span class="line"> <span class="comment">// 画底图</span></span><br><span class="line"> graphics.DrawImage(img, <span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"> Font font = <span class="keyword">new</span> Font(fontName, fontSize, GraphicsUnit.Pixel);</span><br><span class="line"> SizeF sf = graphics.MeasureString(text, font); <span class="comment">// 计算出来文字所占矩形区域</span></span><br><span class="line"> <span class="comment">// 左上角定位</span></span><br><span class="line"> <span class="built_in">string</span>[] location = locationLeftTop.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line"> <span class="built_in">float</span> x1 = <span class="built_in">float</span>.Parse(location[<span class="number">0</span>]);</span><br><span class="line"> <span class="built_in">float</span> y1 = <span class="built_in">float</span>.Parse(location[<span class="number">1</span>]);</span><br><span class="line"> <span class="comment">// 进行文字旋转的角度定位</span></span><br><span class="line"> <span class="keyword">if</span> (angle != <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">region</span> 法一：TranslateTransform平移 + RotateTransform旋转</span></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">   * 注意：</span></span><br><span class="line"><span class="comment">   * Graphics.RotateTransform的旋转是以Graphics对象的左上角为原点，旋转整个画板的。</span></span><br><span class="line"><span class="comment">   * 同时x，y坐标轴也会跟着旋转。即旋转后的x，y轴依然与矩形的边平行</span></span><br><span class="line"><span class="comment">   * 而Graphics.TranslateTransform方法，是沿着x，y轴平移的</span></span><br><span class="line"><span class="comment">   * 因此分三步可以实现中心旋转</span></span><br><span class="line"><span class="comment">   * 1.把画板(Graphics对象)平移到旋转中心</span></span><br><span class="line"><span class="comment">   * 2.旋转画板</span></span><br><span class="line"><span class="comment">   * 3.把画板平移退回相同的距离(此时的x，y轴仍然是与旋转后的矩形平行的)</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>/ 把画板的原点(默认是左上角)定位移到文字中心</span></span><br><span class="line">  <span class="comment">//graphics.TranslateTransform(x1 + sf.Width / 2, y1 + sf.Height / 2);</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>/ 旋转画板</span></span><br><span class="line">  <span class="comment">//graphics.RotateTransform(angle);</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>/ 回退画板x,y轴移动过的距离</span></span><br><span class="line">  <span class="comment">//graphics.TranslateTransform(-(x1 + sf.Width / 2), -(y1 + sf.Height / 2));</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">region</span> 法二：矩阵旋转</span></span><br><span class="line">  Matrix matrix = graphics.Transform;</span><br><span class="line">  matrix.RotateAt(angle, <span class="keyword">new</span> PointF(x1 + sf.Width / <span class="number">2</span>, y1 + sf.Height / <span class="number">2</span>));</span><br><span class="line">  graphics.Transform = matrix;</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 写上自定义角度的文字</span></span><br><span class="line"> graphics.DrawString(text, font, <span class="keyword">new</span> SolidBrush(Color.Black), x1, y1);</span><br><span class="line"> graphics.Dispose();</span><br><span class="line"> img.Dispose();</span><br><span class="line"> <span class="keyword">return</span> bmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>PS：这里简单解释一下为什么文字中心是 (x1 + sf.Width &#x2F; 2, y1 + sf.Height &#x2F; 2) ，因为 (x, y) 是左上角，而 sf.Width 、 sf.Height 是文字矩形区域宽、高。</p></blockquote><p><strong>如图：</strong></p><img src="https://img.devbox.cn/3cd4a/63cc/78c/6cd105a84bef67cf.jpeg"><h1 id="测试调用"><a href="#测试调用" class="headerlink" title="测试调用"></a>测试调用</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">try</span></span><br><span class="line"> &#123;</span><br><span class="line">  Console.WriteLine(<span class="string">&quot;Start drawing ...&quot;</span>);</span><br><span class="line">  DrawingEntity drawing = <span class="keyword">new</span> DrawingEntity();</span><br><span class="line">  System.Drawing.Bitmap bmp = drawing.AddText(<span class="string">@&quot;D:\test\1.png&quot;</span>, <span class="string">&quot;176.94,150.48&quot;</span>, <span class="number">66</span>, <span class="string">&quot;写点啥好呢&quot;</span>, <span class="number">30</span>);</span><br><span class="line">  bmp.Save(<span class="string">@&quot;D:\test\output.png&quot;</span>);</span><br><span class="line">  bmp.Dispose();</span><br><span class="line">  Console.WriteLine(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> catch (System.Exception ex)</span><br><span class="line"> &#123;</span><br><span class="line">  Console.WriteLine(ex.ToString());</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">finally</span></span><br><span class="line"> &#123;</span><br><span class="line">  System.Console.WriteLine(<span class="string">&quot;\nPress any key to continue ...&quot;</span>);</span><br><span class="line">  System.Console.ReadKey();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最终效果</p></blockquote><ul><li><strong>没有旋转时</strong></li></ul><img src="https://img.devbox.cn/3cd4a/63cc/78c/4f1947a99023c6ed.png"><ul><li><strong>中心旋转30度</strong></li></ul><img src="https://img.devbox.cn/3cd4a/63cc/78c/e2772724e2403d24.png"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://devbox.cn/p/569843327">C# 使用 GDI+ 实现添加中心旋转(任意角度)的文字</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
          <category> Graphics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 波形 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> GDI </tag>
            
            <tag> Graphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十六（C# GDI绘制波形图--超级推荐方法）</title>
      <link href="/posts/2082154040.html"/>
      <url>/posts/2082154040.html</url>
      
        <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img2018.cnblogs.com/blog/1313948/201812/1313948-20181212174724477-410430978.png"><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">WaveChartUserCtrl</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        Color axisColor = Color.FromArgb(<span class="number">69</span>, <span class="number">200</span>, <span class="number">255</span>);<span class="comment">//坐标颜色</span></span><br><span class="line">        Color scaleColor = Color.FromArgb(<span class="number">129</span>, <span class="number">137</span>, <span class="number">156</span>);<span class="comment">//刻度颜色</span></span><br><span class="line">        Font axisFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">9</span>, FontStyle.Bold);<span class="comment">//坐标字体</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画板宽度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> boardWidth;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画板高度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> boardHeight;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 垂直（纵向）边距（画图区域距离左右两边长度）</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> verticalMargin;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 平行（横向）边距（画图区域距离左右两边长度）</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> horizontalMargin;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 水平间距像素</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> horizontalBetween;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 垂直间距像素</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> verticalBetween;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 图表区域宽度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">float</span> chartWidth;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 图表区域高度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">float</span> charHeight;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画图区域起点</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        PointF startPostion;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画图区域终点</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        PointF endPostion;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 左边Y轴每个间隔值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> leftIntervalValueY;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 右边Y抽每个间隔值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> rightIntervalValueY;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> X轴每个间隔值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment">//private int intervalValueX;</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> X轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> xScaleCount = <span class="number">20</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> X轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> XscaleCount</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> xScaleCount;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                xScaleCount = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Y轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> yScaleCount = <span class="number">8</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Y轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> YscaleCount</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> yScaleCount;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> leftmaxValue = <span class="number">300</span>;</span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;左边坐标最大值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> LeftMaxValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> leftmaxValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &lt;= LeftMinValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最大值不能低于最小值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line">                    <span class="comment">//maxValue = 300;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    leftmaxValue = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> leftminValue = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 仪表盘显示的最小值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;左边坐标最小值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> LeftMinValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> leftminValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt;= LeftMaxValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最小值不能超过最大值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line">                    <span class="comment">//minValue = 0;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    leftminValue = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> rightmaxValue = <span class="number">100</span>;</span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;右边坐标最大值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> RightMaxValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> rightmaxValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &lt;= RightMinValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最大值不能低于最小值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    rightmaxValue = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> rightminValue = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 仪表盘显示的最小值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;右边坐标最小值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> RightMinValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> rightminValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt;= RightMaxValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最小值不能超过最大值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    rightminValue = <span class="keyword">value</span>;</span><br><span class="line">                    <span class="comment">//InitCanvas();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> List&lt;Color&gt; lineColor = <span class="keyword">new</span> List&lt;Color&gt; &#123; Color.Red, Color.FromArgb(<span class="number">0</span>, <span class="number">192</span>, <span class="number">0</span>) &#125;;</span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;线条颜色&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> List&lt;Color&gt; LineColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> lineColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> != <span class="literal">null</span> &amp;&amp; <span class="keyword">value</span>.Count &gt; <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    lineColor = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">string</span> titlText1 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;标题1&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> TitlText1</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> titlText1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                titlText1 = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">string</span> titlText2 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;标题2&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> TitlText2</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> titlText2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                titlText2 = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据源1</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> Series SeriesData1 = <span class="keyword">new</span> Series();</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据源2</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> Series SeriesData2 = <span class="keyword">new</span> Series();</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 真实画布宽度为画板的80% ，其余部分预留。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> canvasWidth;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 最大X抽坐标为24H，最后记录一分钟记录一次</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> MaxXScaleCount = <span class="number">720</span>;<span class="comment">//24 * 60 / 2;//2秒通讯一次，最大每一分钟记录一次</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//private List&lt;float&gt; dataLst1 = new List&lt;float&gt;();</span></span><br><span class="line">        <span class="comment">//private List&lt;float&gt; dataLst2 = new List&lt;float&gt;();</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> DateTime startTime = DateTime.Now;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitCanvas</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            boardWidth = <span class="keyword">this</span>.ClientSize.Width;</span><br><span class="line">            boardHeight = <span class="keyword">this</span>.ClientSize.Height;</span><br><span class="line">            horizontalMargin = <span class="number">40</span>;</span><br><span class="line">            verticalMargin = <span class="number">40</span>;</span><br><span class="line">            chartWidth = boardWidth - <span class="number">2</span> * horizontalMargin;<span class="comment">//画图区域宽度</span></span><br><span class="line">            charHeight = boardHeight - <span class="number">2</span> * verticalMargin; <span class="comment">//画图区域高度,axisY 避免与X轴重合</span></span><br><span class="line">            canvasWidth = chartWidth * <span class="number">0.86F</span>;<span class="comment">//实际画布为画板的80%</span></span><br><span class="line">            startPostion = <span class="keyword">new</span> PointF(horizontalMargin, verticalMargin);</span><br><span class="line">            endPostion = <span class="keyword">new</span> PointF(boardWidth - horizontalMargin, boardHeight - verticalMargin);</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//SeriesData1.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//SeriesData2.LineColor = Color.FromArgb(0, 192, 0);</span></span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">WaveChartUserCtrl</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.SetStyle(ControlStyles.OptimizedDoubleBuffer</span><br><span class="line">                | ControlStyles.AllPaintingInWmPaint</span><br><span class="line">                | ControlStyles.DoubleBuffer, <span class="literal">true</span>);</span><br><span class="line">            InitCanvas();</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画图</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;gp&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Drawing</span>(<span class="params">Graphics gs</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            System.Diagnostics.Stopwatch runstopwatch = <span class="keyword">new</span> System.Diagnostics.Stopwatch();</span><br><span class="line">            runstopwatch.Start();</span><br><span class="line">            <span class="keyword">if</span> (SeriesData1.Datas.Count &gt; <span class="number">20</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                XscaleCount = SeriesData1.Datas.Count;</span><br><span class="line">            &#125;</span><br><span class="line">            horizontalBetween = canvasWidth / XscaleCount;</span><br><span class="line">            verticalBetween = charHeight / YscaleCount;</span><br><span class="line">            <span class="comment">//intervalValueX = 1;//</span></span><br><span class="line">            leftIntervalValueY = (<span class="built_in">int</span>)(LeftMaxValue - LeftMinValue) / YscaleCount;</span><br><span class="line">            rightIntervalValueY = (<span class="built_in">int</span>)(RightMaxValue - RightMinValue) / YscaleCount;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                StringFormat strFmt = <span class="keyword">new</span> System.Drawing.StringFormat();</span><br><span class="line">                strFmt.Alignment = StringAlignment.Center; <span class="comment">//文本水平居中</span></span><br><span class="line">                strFmt.LineAlignment = StringAlignment.Center; <span class="comment">//文本垂直居中</span></span><br><span class="line">                Pen axisPen = <span class="keyword">new</span> Pen(scaleColor, <span class="number">1.0F</span>);<span class="comment">//坐标文字</span></span><br><span class="line">                Bitmap bit = <span class="keyword">new</span> Bitmap((<span class="built_in">int</span>)boardWidth, (<span class="built_in">int</span>)boardHeight);</span><br><span class="line">                Graphics g = Graphics.FromImage(bit);</span><br><span class="line">                <span class="comment">//g.DrawString(TitlText, new Font(&quot;宋体&quot;, 9, FontStyle.Bold), new SolidBrush(SeriesData1.LineColor), 5, 10);</span></span><br><span class="line">                <span class="built_in">float</span> tempEndPointY = endPostion.Y;</span><br><span class="line">                <span class="comment">//Y轴格</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= YscaleCount; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">float</span> y = tempEndPointY - i * verticalBetween;</span><br><span class="line">                    g.DrawLine(axisPen, startPostion.X, y, endPostion.X, y);</span><br><span class="line"> </span><br><span class="line">                    <span class="built_in">string</span> leftText = (LeftMinValue + (i * leftIntervalValueY)).ToString();</span><br><span class="line">                    SizeF sf = g.MeasureString(leftText, axisFont);</span><br><span class="line">                    RectangleF rf = <span class="keyword">new</span> RectangleF(startPostion.X - <span class="number">30</span>, y - sf.Height / <span class="number">2</span>, <span class="number">30</span>, sf.Height);</span><br><span class="line">                    g.DrawString(leftText, axisFont, <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">0</span>]), rf, strFmt);</span><br><span class="line"> </span><br><span class="line">                    <span class="built_in">string</span> rightText = (RightMinValue + (i * rightIntervalValueY)).ToString();</span><br><span class="line">                    sf = g.MeasureString(rightText, axisFont);</span><br><span class="line">                    RectangleF rf1 = <span class="keyword">new</span> RectangleF(endPostion.X + <span class="number">5</span>, y - sf.Height / <span class="number">2</span>, <span class="number">30</span>, sf.Height);</span><br><span class="line">                    g.DrawString(rightText, axisFont, <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">1</span>]), rf1, strFmt);</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//画曲线</span></span><br><span class="line">                <span class="keyword">if</span> (SeriesData1 != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    strFmt.Alignment = StringAlignment.Near; <span class="comment">//</span></span><br><span class="line">                    RectangleF rf = <span class="keyword">new</span> RectangleF(<span class="number">0</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">30</span>);</span><br><span class="line">                    g.DrawString(TitlText1, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">0</span>]), rf, strFmt);</span><br><span class="line">                    <span class="comment">//计算0值的坐标</span></span><br><span class="line">                    <span class="built_in">int</span> tempv = (<span class="built_in">int</span>)((Math.Abs(LeftMinValue) - <span class="number">0</span>) / leftIntervalValueY);<span class="comment">//得到0到最小值的间隔距离；</span></span><br><span class="line">                    <span class="built_in">float</span> zeroY = tempEndPointY - tempv * verticalBetween;<span class="comment">//值为0点Y抽坐标；</span></span><br><span class="line">                    <span class="keyword">if</span> (SeriesData1.Datas.Count &gt; <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">int</span> dataIndex = <span class="number">0</span>;</span><br><span class="line">                        PointF[] arrDataPoint = <span class="keyword">new</span> PointF[SeriesData2.Datas.Count];</span><br><span class="line">                        <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF pf <span class="keyword">in</span> SeriesData1.Datas)</span><br><span class="line">                        &#123;</span><br><span class="line">                            PointF p = <span class="keyword">new</span> PointF();</span><br><span class="line">                            p.X = startPostion.X + horizontalBetween * index;</span><br><span class="line">                            p.Y = zeroY - verticalBetween * pf.Y / leftIntervalValueY;</span><br><span class="line">                            arrDataPoint[dataIndex++] = p;</span><br><span class="line">                            index++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        g.DrawCurve(<span class="keyword">new</span> Pen(<span class="keyword">new</span> SolidBrush(LineColor[<span class="number">0</span>]), <span class="number">2F</span>), arrDataPoint);</span><br><span class="line">                        PointF[] AreaPf = <span class="keyword">new</span> PointF[arrDataPoint.Length + <span class="number">2</span>];</span><br><span class="line">                        <span class="built_in">int</span> AreaIndxe = <span class="number">0</span>;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(startPostion.X, zeroY);</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF p <span class="keyword">in</span> arrDataPoint)</span><br><span class="line">                        &#123;</span><br><span class="line">                            AreaPf[AreaIndxe++] = p;</span><br><span class="line">                        &#125;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(arrDataPoint[arrDataPoint.Length - <span class="number">1</span>].X, zeroY);</span><br><span class="line">                        g.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.FromArgb(<span class="number">50</span>, LineColor[<span class="number">0</span>])), AreaPf);</span><br><span class="line">                        <span class="comment">//g.FillClosedCurve(new SolidBrush(Color.FromArgb(50, SeriesData1.LineColor)), AreaPf);</span></span><br><span class="line">                        <span class="comment">//g.DrawEllipse(new Pen(Brushes.Red), startPostion.X, zeroY, 10, 10);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (SeriesData2 != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    strFmt.Alignment = StringAlignment.Far; <span class="comment">//</span></span><br><span class="line">                    RectangleF rf = <span class="keyword">new</span> RectangleF(boardWidth - <span class="number">70</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">30</span>);</span><br><span class="line">                    g.DrawString(TitlText2, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">1</span>]), rf, strFmt);</span><br><span class="line">                    <span class="comment">//计算0值的坐标</span></span><br><span class="line">                    <span class="built_in">int</span> tempv = (<span class="built_in">int</span>)((Math.Abs(RightMinValue) - <span class="number">0</span>) / rightIntervalValueY);<span class="comment">//得到0到最小值的间隔距离；</span></span><br><span class="line">                    <span class="built_in">float</span> zeroY = tempEndPointY - tempv * verticalBetween;<span class="comment">//值为0点Y抽坐标；</span></span><br><span class="line">                    <span class="keyword">if</span> (SeriesData2.Datas.Count &gt; <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">int</span> dataIndex = <span class="number">0</span>;</span><br><span class="line">                        PointF[] arrDataPoint = <span class="keyword">new</span> PointF[SeriesData2.Datas.Count];</span><br><span class="line">                        <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF pf <span class="keyword">in</span> SeriesData2.Datas)</span><br><span class="line">                        &#123;</span><br><span class="line">                            PointF p = <span class="keyword">new</span> PointF();</span><br><span class="line">                            p.X = startPostion.X + horizontalBetween * index;</span><br><span class="line">                            p.Y = zeroY - verticalBetween * pf.Y / rightIntervalValueY;</span><br><span class="line">                            arrDataPoint[dataIndex++] = p;</span><br><span class="line">                            index++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        g.DrawCurve(<span class="keyword">new</span> Pen(<span class="keyword">new</span> SolidBrush(LineColor[<span class="number">1</span>]), <span class="number">2F</span>), arrDataPoint);</span><br><span class="line">                        PointF[] AreaPf = <span class="keyword">new</span> PointF[arrDataPoint.Length + <span class="number">2</span>];</span><br><span class="line">                        <span class="built_in">int</span> AreaIndxe = <span class="number">0</span>;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(startPostion.X, zeroY);</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF p <span class="keyword">in</span> arrDataPoint)</span><br><span class="line">                        &#123;</span><br><span class="line">                            AreaPf[AreaIndxe++] = p;</span><br><span class="line">                        &#125;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(arrDataPoint[SeriesData2.Datas.Count - <span class="number">1</span>].X, zeroY);</span><br><span class="line">                        g.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.FromArgb(<span class="number">50</span>, LineColor[<span class="number">1</span>])), AreaPf);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                g.DrawString(startTime.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>), <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Regular), Brushes.White, <span class="number">10</span>, <span class="keyword">this</span>.ClientSize.Height - <span class="number">30</span>);</span><br><span class="line">                g.DrawString(DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>), <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Regular), Brushes.White, <span class="keyword">this</span>.ClientSize.Width - <span class="number">80</span>, <span class="keyword">this</span>.ClientSize.Height - <span class="number">30</span>);</span><br><span class="line">                g.DrawString(<span class="string">&quot;Time/H&quot;</span>, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">12</span>, FontStyle.Regular), Brushes.Wheat, <span class="number">0</span>, <span class="keyword">this</span>.ClientSize.Height - <span class="number">15</span>);</span><br><span class="line">                gs.DrawImage(bit, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                g.Dispose();</span><br><span class="line"> </span><br><span class="line">                runstopwatch.Stop();</span><br><span class="line">                TimeSpan timespan = runstopwatch.Elapsed;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Drawing:&quot;</span> + timespan.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(ex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WaveChartUserCtrl_Resize</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitCanvas();</span><br><span class="line">            <span class="keyword">this</span>.Refresh();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WaveChartUserCtrl_Paint</span>(<span class="params"><span class="built_in">object</span> sender, PaintEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Drawing(e.Graphics);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddSeriesData</span>(<span class="params">List&lt;<span class="built_in">float</span>&gt; dataLst1, List&lt;<span class="built_in">float</span>&gt; dataLst2</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//System.Diagnostics.Stopwatch runstopwatch = new System.Diagnostics.Stopwatch();</span></span><br><span class="line">            <span class="comment">//runstopwatch.Start();</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">//dataLst1.Add(y1);</span></span><br><span class="line">            <span class="comment">//dataLst2.Add(y2);</span></span><br><span class="line">            <span class="comment">//if (dataLst1.Count &gt; 86400)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    dataLst1.RemoveAt(0);</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line">            <span class="comment">//if (dataLst2.Count &gt; 86400)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    dataLst2.RemoveAt(0);</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">int</span> tempx = dataLst1.Count / MaxXScaleCount + <span class="number">1</span>;</span><br><span class="line">            SeriesData1.Datas.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> index = <span class="number">0</span>; index &lt; dataLst1.Count; index++)</span><br><span class="line">            &#123;</span><br><span class="line">                PointF p1 = <span class="keyword">new</span> PointF(<span class="number">0</span>, dataLst1[index]);</span><br><span class="line">                <span class="keyword">if</span> (index % tempx == <span class="number">0</span> || index == dataLst1.Count)</span><br><span class="line">                &#123;</span><br><span class="line">                    SeriesData1.Datas.Add(p1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            SeriesData2.Datas.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> index = <span class="number">0</span>; index &lt; dataLst2.Count; index++)</span><br><span class="line">            &#123;</span><br><span class="line">                PointF p2 = <span class="keyword">new</span> PointF(<span class="number">0</span>, dataLst2[index]);</span><br><span class="line">                <span class="keyword">if</span> (index % tempx == <span class="number">0</span> || index == dataLst2.Count)</span><br><span class="line">                &#123;</span><br><span class="line">                    SeriesData2.Datas.Add(p2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//runstopwatch.Stop();</span></span><br><span class="line">            <span class="comment">//TimeSpan timespan = runstopwatch.Elapsed;</span></span><br><span class="line">            <span class="comment">//Console.WriteLine(timespan.ToString());</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">//this.Refresh();</span></span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 数据系列管理</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Series</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 标题</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> HeadText = <span class="string">&quot;title&quot;</span>;</span><br><span class="line"> </span><br><span class="line">        Color lineColor = Color.Red;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前画笔颜色</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> Color LineColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> lineColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                lineColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">PointF</span>&gt; Datas</span> = <span class="keyword">new</span> List&lt;PointF&gt;();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/wangyonglai/p/10109782.html">C# GDI绘制波形图</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
          <category> Graphics </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 波形 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> GDI </tag>
            
            <tag> Graphics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十五（C# GDI 图表 chart 串口 示波器）</title>
      <link href="/posts/3790986091.html"/>
      <url>/posts/3790986091.html</url>
      
        <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>作为嵌入式工程师在设计数字电源时需要将串口传上来的电压电流等数据通过图表方式实时显示在电脑上，刚开始使用第三方图表控件msChart，这个控件功能还是蛮强大的，该要的效果一般都能实现，但在数字电源开发这种应用场合该控件就不太合适了，因为以50Hz的交流电波形举例，1秒有100个周期变化再乘以每周期至少100个点，那1秒内就将有10000个数据需要在图表上显示出来，用第三方图表控件没有哪个有这么快的刷新速度。</p><p>怎么解决该问题呢？最好的方式是通过GDI绘制曲线图，因为只有自已绘制才能最大效率利用CPU来作图，而不是像第三方控件为一些无关紧要的任务浪费时间。</p><h1 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h1><p><strong>主要代码封装成Chart.dll中，外围使用非常简单</strong></p><p>1、资源管理器中引用Chart.dll<br>2、using MyChart;<br>3、按顺序申明线段名称（例如：string[] Field &#x3D; new string[] { “线a”, “线b” };<br>4、申明Chart对象（例如：Chart chart;)<br>5、构造Chart对象（例如：chart &#x3D; new Chart(Field); )<br>6、调用方法将窗口显示出来（例如：chart.Show(); ）<br>7、更新需要显示的数据到GDI图表中（例如：chart.Updata(temp);）<br>8、此时数据将显示到图表窗口中，右击鼠标有使用说明。</p><p>该Chart.dll不仅能显示曲线图还能将数据库存到Access数据库<br>本应用因绘图效率比一般图表控件高(如msChart等)，所以较合适作为软件示波器用</p><p>范例工程使用说明视频：<a href="https://www.bilibili.com/video/BV1MZ4y1V74D/">https://www.bilibili.com/video/BV1MZ4y1V74D/</a><br>范例工程下载地址1：<a href="https://download.csdn.net/download/iejinshan/10467169">https://download.csdn.net/download/iejinshan/10467169</a><br>范例工程下载地址2：<a href="https://pan.baidu.com/s/1wvh8554-NagXJacfjxp8LA?pwd=6666">https://pan.baidu.com/s/1wvh8554-NagXJacfjxp8LA?pwd=6666</a></p><p><strong>代码和视频中有点忘记说明了，chart对象会有个Show方法，一定要调用一次该方法图表才会显示出来，默认图表是隐藏的，请您特别注意。</strong></p><p><strong>注意： 上述范例核心代码封装在dll文件中，并未开放全部源代码，介意的请勿下载，谢谢。</strong></p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTUwOTIzMTczOTMzODY2?x-oss-process=image/format,png"><h1 id="参考绘图类代码"><a href="#参考绘图类代码" class="headerlink" title="参考绘图类代码"></a>参考绘图类代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GDIChart</span></span><br><span class="line">  &#123;</span><br><span class="line">    Bitmap bmp;</span><br><span class="line">    Graphics graphics;</span><br><span class="line">    PictureBox pictureBox;</span><br><span class="line">    DataGridView GridView1, GridView2;</span><br><span class="line">    HScrollBar hScrollBar;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> Xoffset, Yoffset,Ymax,Ymin;</span><br><span class="line">    <span class="built_in">int</span> YMoveUpValue;   <span class="comment">//向上偏移量</span></span><br><span class="line">    <span class="built_in">int</span> XMoveRightValue;<span class="comment">//向右偏移量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//double Xp;</span></span><br><span class="line">    <span class="built_in">int</span> NowID, RowSum, NowRow;</span><br><span class="line">    <span class="comment">//int Xwidth = 0;</span></span><br><span class="line">    <span class="comment">//int DotSumCopy;</span></span><br><span class="line">    Point pCopy;</span><br><span class="line">    <span class="built_in">string</span>[] FieldName;</span><br><span class="line">    <span class="comment">//double[] mLabel;</span></span><br><span class="line">    <span class="comment">//int[] yLabel;</span></span><br><span class="line">    <span class="built_in">int</span>[,] XY;</span><br><span class="line"></span><br><span class="line">    Point p;<span class="comment">//得到鼠标xy位置</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">int</span> Help;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GDIChart</span>(<span class="params"><span class="keyword">ref</span> PictureBox bx, <span class="keyword">ref</span> DataGridView dataGridView1, <span class="keyword">ref</span> DataGridView dataGridView2,<span class="keyword">ref</span> HScrollBar hscrollBar</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      YMoveUpValue = <span class="number">16</span>;</span><br><span class="line">      pictureBox = bx;</span><br><span class="line">      GridView1 = dataGridView1;</span><br><span class="line">      GridView2 = dataGridView2;</span><br><span class="line">      hScrollBar = hscrollBar;</span><br><span class="line"></span><br><span class="line">      FieldName = <span class="keyword">new</span> <span class="built_in">string</span>[GridView1.Rows.Count];</span><br><span class="line">      <span class="comment">//mLabel = new double[GridView1.Rows.Count];</span></span><br><span class="line">      <span class="comment">//yLabel = new int[GridView1.Rows.Count];</span></span><br><span class="line">      XY = <span class="keyword">new</span> <span class="built_in">int</span>[GridView1.Rows.Count,<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; FieldName.Length; i++)</span><br><span class="line">      &#123;</span><br><span class="line">        FieldName[i] = GridView1.Rows[i].HeaderCell.Value.ToString();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      Ymax = <span class="number">3600</span>;</span><br><span class="line">      Ymin = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      Help = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      pictureBox.Resize += <span class="keyword">new</span> System.EventHandler(EventHandlerBmpInit);<span class="comment">//pictureBox大小变化时产生事件重置Bitmap对象大小</span></span><br><span class="line"></span><br><span class="line">      pictureBox.MouseDown += <span class="keyword">new</span> MouseEventHandler(pictureBox_MouseDown);</span><br><span class="line">      pictureBox.MouseWheel += <span class="keyword">new</span> MouseEventHandler(PictureBox_MouseWheel);</span><br><span class="line">      pictureBox.KeyDown += <span class="keyword">new</span> KeyEventHandler(pictureBox_KeyDown);</span><br><span class="line">      <span class="comment">//pictureBox.MouseEnter += new EventHandler(pictureBox_MouseEnter);</span></span><br><span class="line">      <span class="comment">//pictureBox.MouseLeave += new EventHandler(pictureBox_MouseLeave);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> 打印字符_带背景色(<span class="keyword">ref</span> Graphics g, <span class="keyword">ref</span> Bitmap bmp,Font font, <span class="built_in">int</span> x, <span class="built_in">int</span> y, <span class="built_in">string</span> str)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//Font font = new Font(&quot;宋体&quot;, 9f);</span></span><br><span class="line">      PointF pointF = <span class="keyword">new</span> PointF(x, y);</span><br><span class="line">      SizeF sizeF = g.MeasureString(str, font);</span><br><span class="line">      g.FillRectangle(Brushes.PowderBlue, <span class="keyword">new</span> RectangleF(pointF, sizeF));</span><br><span class="line">      g.DrawString(str, font, Brushes.Black, pointF);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//去除小数点后多余数值</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">RemoveDecimal</span>(<span class="params"><span class="built_in">double</span> In, <span class="keyword">ref</span> <span class="built_in">double</span> Out</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (In == <span class="number">0</span>) &#123; <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (In &gt;= <span class="number">10</span> || In &lt;= <span class="number">-10</span>)</span><br><span class="line">        &#123;<span class="comment">//In有整数</span></span><br><span class="line">          Out = (<span class="built_in">double</span>)((<span class="built_in">int</span>)In);</span><br><span class="line">          Out += <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;<span class="comment">//In无整数</span></span><br><span class="line">          <span class="built_in">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">if</span> (In &gt; <span class="number">0</span>)</span><br><span class="line">          &#123;<span class="comment">//正数</span></span><br><span class="line">            <span class="keyword">while</span> (In &lt; <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              cnt *= <span class="number">10</span>;</span><br><span class="line">              In *= <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;<span class="comment">//负数</span></span><br><span class="line">            <span class="keyword">while</span> (In &lt; <span class="number">-10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              cnt *= <span class="number">10</span>;</span><br><span class="line">              In *= <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          Out = (<span class="built_in">double</span>)(<span class="built_in">int</span>)(In+<span class="number">0</span>) / cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;RemoveDecimal &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化参数</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">Init</span>(<span class="params"><span class="keyword">ref</span> DataTable dt,<span class="built_in">int</span> DotSum,<span class="built_in">double</span> y1,<span class="built_in">double</span> y2</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        Xoffset = (<span class="built_in">double</span>)(bmp.Width - XMoveRightValue) / DotSum;  <span class="comment">//计算出X轴每个像素值</span></span><br><span class="line">        Yoffset = (y2 - y1) / (<span class="built_in">double</span>)(bmp.Height - YMoveUpValue);       <span class="comment">//计算出Y轴每个像素值</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        RemoveDecimal(Xoffset, <span class="keyword">ref</span> Xoffset);<span class="comment">//去除小数点后多余数值</span></span><br><span class="line">        RemoveDecimal(Yoffset, <span class="keyword">ref</span> Yoffset);<span class="comment">//去除小数点后多余数值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;ChartInit &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制曲线</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingCurve</span>(<span class="params"><span class="keyword">ref</span> DataTable dt,DataGridView gridView,Color[] color,<span class="built_in">double</span> Ystart</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123; </span><br><span class="line">        Pen pen;</span><br><span class="line">        pen = <span class="keyword">new</span> Pen(System.Drawing.Color.Red, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">int</span> x1, y1, x2=<span class="number">0</span>, y2,flag;</span><br><span class="line"></span><br><span class="line">        p = pictureBox.PointToClient(Control.MousePosition);<span class="comment">//得到鼠标xy位置</span></span><br><span class="line">        p.X -= XMoveRightValue;</span><br><span class="line">        p.Y += YMoveUpValue;</span><br><span class="line"></span><br><span class="line">        graphics.TranslateTransform(XMoveRightValue, -YMoveUpValue);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> a = <span class="number">0</span>; a &lt; gridView.Rows.Count;a++ )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (Convert.ToBoolean(gridView.Rows[a].Cells[<span class="string">&quot;Enable&quot;</span>].Value) == <span class="literal">true</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            pen.Color = color[a];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> b = <span class="number">0</span>; b &lt; dt.Rows.Count<span class="number">-1</span>;b++)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">double</span> value0 = Convert.ToDouble(dt.Rows[b + <span class="number">0</span>][a + <span class="number">2</span>]);</span><br><span class="line">              <span class="built_in">double</span> value1 = Convert.ToDouble(dt.Rows[b + <span class="number">1</span>][a + <span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">              value0 -= Ystart;</span><br><span class="line">              value1 -= Ystart;</span><br><span class="line"></span><br><span class="line">              value0 += Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Move&quot;</span>].Value);</span><br><span class="line">              value1 += Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Move&quot;</span>].Value);</span><br><span class="line"></span><br><span class="line">              value0 *= Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Zoom&quot;</span>].Value);</span><br><span class="line">              value1 *= Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Zoom&quot;</span>].Value);</span><br><span class="line"></span><br><span class="line">              x1 = (<span class="built_in">int</span>)((b + <span class="number">0</span>) * Xoffset);</span><br><span class="line">              x2 = (<span class="built_in">int</span>)((b + <span class="number">1</span>) * Xoffset);</span><br><span class="line">              y1 = bmp.Height - (<span class="built_in">int</span>)(value0 / Yoffset);</span><br><span class="line">              y2 = bmp.Height - (<span class="built_in">int</span>)(value1 / Yoffset);</span><br><span class="line">              </span><br><span class="line">              graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">if</span> (flag == <span class="number">0</span> &amp;&amp; x1 &gt;= p.X) </span><br><span class="line">              &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                XY[a, <span class="number">0</span>] = x1;</span><br><span class="line">                XY[a, <span class="number">1</span>] = y1;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        graphics.TranslateTransform(-XMoveRightValue, YMoveUpValue);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingCurve &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制标签</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingLabel</span>(<span class="params"><span class="keyword">ref</span> DataTable dt,Color[] color</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (p.X &gt;= <span class="number">0</span> &amp;&amp; p.Y &gt;= YMoveUpValue &amp;&amp; p.X &lt;= pictureBox.Width - XMoveRightValue &amp;&amp; p.Y &lt;= pictureBox.Height)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">int</span> x1, y1, x2, y2;</span><br><span class="line">          Pen pen = <span class="keyword">new</span> Pen(Color.Red, <span class="number">1</span>);</span><br><span class="line">          pen.DashStyle = System.Drawing.Drawing2D.DashStyle.Dot;</span><br><span class="line"></span><br><span class="line">          graphics.TranslateTransform(XMoveRightValue, -YMoveUpValue);</span><br><span class="line"></span><br><span class="line">          x1 = p.X;</span><br><span class="line">          x2 = p.X;</span><br><span class="line">          y1 = <span class="number">3</span>;</span><br><span class="line">          y2 = pictureBox.Height;</span><br><span class="line">          graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line"></span><br><span class="line">          x1 = <span class="number">0</span>;</span><br><span class="line">          x2 = pictureBox.Width;</span><br><span class="line">          y1 = p.Y;</span><br><span class="line">          y2 = p.Y;</span><br><span class="line">          graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line"></span><br><span class="line">          pen.Width = <span class="number">2</span>;</span><br><span class="line">          <span class="built_in">int</span> row = (<span class="built_in">int</span>)((<span class="built_in">double</span>)(p.X) / Xoffset) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (row &gt;= <span class="number">0</span> &amp;&amp; row &lt; dt.Rows.Count)</span><br><span class="line">          &#123;</span><br><span class="line">            NowRow = row;</span><br><span class="line">            RowSum = dt.Rows.Count;</span><br><span class="line">            NowID = Convert.ToInt32(dt.Rows[row][<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">            DataTable SetTable = (GridView1.DataSource <span class="keyword">as</span> DataTable);</span><br><span class="line">            <span class="keyword">if</span> (pCopy != p)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dt.Columns.Count - <span class="number">2</span>; i++)</span><br><span class="line">              &#123;</span><br><span class="line">                SetTable.Rows[i][<span class="string">&quot;Value&quot;</span>] = Convert.ToDouble(dt.Rows[row][i + <span class="number">2</span>]);</span><br><span class="line">                SetTable.Rows[i][<span class="string">&quot;ID&quot;</span>] = Convert.ToDouble(dt.Rows[row][<span class="number">0</span>]);</span><br><span class="line">                SetTable.Rows[i][<span class="string">&quot;Time&quot;</span>] = Convert.ToDateTime(dt.Rows[row][<span class="number">1</span>]);</span><br><span class="line">              &#125;</span><br><span class="line">              GridView1.Refresh();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> str;</span><br><span class="line">            Font font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>);</span><br><span class="line">            <span class="built_in">int</span> Height = font.Height / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dt.Columns.Count - <span class="number">2</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">if</span> (Convert.ToBoolean(GridView1.Rows[i].Cells[<span class="string">&quot;Enable&quot;</span>].Value) == <span class="literal">true</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                pen.Color = color[i];</span><br><span class="line">                str = dt.Rows[row][i + <span class="number">2</span>].ToString();</span><br><span class="line"></span><br><span class="line">                x1 = XY[i, <span class="number">0</span>];</span><br><span class="line">                y1 = XY[i, <span class="number">1</span>];</span><br><span class="line">                x2 = XY[i, <span class="number">0</span>] + <span class="number">30</span>;</span><br><span class="line">                y2 = XY[i, <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (y2 &lt; <span class="number">15</span> + YMoveUpValue + Height) &#123; y2 += <span class="number">15</span>; &#125; <span class="keyword">else</span> &#123; y2 -= <span class="number">15</span>; &#125;</span><br><span class="line">                graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line">                打印字符_带背景色(<span class="keyword">ref</span> graphics, <span class="keyword">ref</span> bmp, font, x2, y2-Height, SetTable.Rows[i][<span class="number">0</span>].ToString() + <span class="string">&quot;-&gt;&quot;</span> + str);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            NowID = <span class="number">0</span>;</span><br><span class="line">            RowSum = <span class="number">0</span>;</span><br><span class="line">            NowRow = <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          graphics.TranslateTransform(-XMoveRightValue, YMoveUpValue);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          NowID = <span class="number">0</span>;</span><br><span class="line">          RowSum = <span class="number">0</span>;</span><br><span class="line">          NowRow = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pCopy = p;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingLabel &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制help</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingHelp</span>(<span class="params"><span class="built_in">double</span> Ystart</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (Help == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          p.Y = bmp.Height - p.Y;</span><br><span class="line">          p.X = p.X - XMoveRightValue;</span><br><span class="line"></span><br><span class="line">          <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          <span class="comment">//str += &quot;Yoffset=&quot; + Yoffset.ToString() + &quot;\n&quot;;</span></span><br><span class="line">          <span class="comment">//str += &quot;Xoffset=&quot; + Xoffset.ToString() + &quot;\n&quot;;</span></span><br><span class="line">          str += <span class="string">&quot;Dot=&quot;</span> + sys.DotSum.ToString() + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">          <span class="comment">//str += &quot;Width=&quot; + (pictureBox.Width - XMoveRightValue).ToString() + &quot;\n&quot;;</span></span><br><span class="line">          <span class="comment">//str += &quot;Row=&quot; + sys.ShowDataTable.Rows.Count.ToString() + &quot;\n&quot;;</span></span><br><span class="line">          str += <span class="string">&quot;Y=&quot;</span> + ((<span class="built_in">double</span>)p.Y * Yoffset + Ystart).ToString() + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">          <span class="comment">//str += &quot;X=&quot; + p.X / Xoffset + &quot;\n&quot;;</span></span><br><span class="line">          打印字符_带背景色(<span class="keyword">ref</span> graphics, <span class="keyword">ref</span> bmp,<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>), XMoveRightValue + <span class="number">16</span>, <span class="number">0</span>, str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingHelp &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制刻度表</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingScale</span>(<span class="params"><span class="built_in">double</span> Ystart, <span class="keyword">ref</span> DataTable dt</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">int</span> x1, y1, x2, y2;</span><br><span class="line">        SizeF sf = <span class="keyword">new</span> SizeF();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算最大字符长度</span></span><br><span class="line">        XMoveRightValue = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> y = YMoveUpValue; y &lt; bmp.Height - <span class="number">5</span>; )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">string</span> str = (Yoffset * (y - YMoveUpValue) + Ystart).ToString();</span><br><span class="line">          sf = graphics.MeasureString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>));</span><br><span class="line">          <span class="keyword">if</span> (XMoveRightValue &lt; sf.Width)</span><br><span class="line">          &#123;</span><br><span class="line">            XMoveRightValue = (<span class="built_in">int</span>)sf.Width;</span><br><span class="line">          &#125;</span><br><span class="line">          y += <span class="number">50</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//画Y轴刻度</span></span><br><span class="line">        x1 = XMoveRightValue;</span><br><span class="line">        y1 = bmp.Height - YMoveUpValue;</span><br><span class="line">        x2 = XMoveRightValue;</span><br><span class="line">        y2 = <span class="number">2</span>;</span><br><span class="line">        graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画长线</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> y = YMoveUpValue; y &lt; bmp.Height - <span class="number">5</span>; )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((y - YMoveUpValue) % <span class="number">50</span> == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x1 = XMoveRightValue;</span><br><span class="line">            y1 = bmp.Height - y;</span><br><span class="line">            x2 = XMoveRightValue + <span class="number">10</span>;</span><br><span class="line">            y2 = bmp.Height - y;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线max</span></span><br><span class="line">            <span class="built_in">string</span> str = (Yoffset * (y - YMoveUpValue) + Ystart).ToString();</span><br><span class="line">            sf = graphics.MeasureString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>));</span><br><span class="line">            graphics.DrawString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>), Brushes.Black, <span class="keyword">new</span> PointF(XMoveRightValue - sf.Width, y1 - <span class="number">8</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            x1 = XMoveRightValue;</span><br><span class="line">            y1 = bmp.Height - y;</span><br><span class="line">            x2 = XMoveRightValue + <span class="number">5</span>;</span><br><span class="line">            y2 = bmp.Height - y;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线min</span></span><br><span class="line">          &#125;</span><br><span class="line">          y += <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**/</span></span><br><span class="line">        <span class="comment">//画X轴刻度</span></span><br><span class="line">        x1 = XMoveRightValue;</span><br><span class="line">        y1 = bmp.Height - YMoveUpValue;</span><br><span class="line">        x2 = bmp.Width - <span class="number">5</span>;</span><br><span class="line">        y2 = bmp.Height - YMoveUpValue;</span><br><span class="line">        graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画长线</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = XMoveRightValue; i &lt; bmp.Width - <span class="number">10</span>; )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((i - XMoveRightValue) % <span class="number">50</span> == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x1 = i;</span><br><span class="line">            y1 = bmp.Height - YMoveUpValue - <span class="number">10</span>;</span><br><span class="line">            x2 = i;</span><br><span class="line">            y2 = bmp.Height - YMoveUpValue;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线max</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> row = (<span class="built_in">int</span>)((<span class="built_in">double</span>)(i - XMoveRightValue) / Xoffset);</span><br><span class="line">            <span class="keyword">if</span> (dt.Rows.Count &gt; row &amp;&amp; row &gt; <span class="number">0</span> &amp;&amp; sf.Width &lt; <span class="number">50</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">string</span> str = dt.Rows[row][<span class="number">0</span>].ToString();</span><br><span class="line">              sf = graphics.MeasureString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>));</span><br><span class="line">              graphics.DrawString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>), Brushes.Black, <span class="keyword">new</span> PointF(i - sf.Width / <span class="number">2</span>, bmp.Height - <span class="number">12</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">              sf.Width = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            x1 = i;</span><br><span class="line">            y1 = bmp.Height - YMoveUpValue - <span class="number">5</span>;</span><br><span class="line">            x2 = i;</span><br><span class="line">            y2 = bmp.Height - YMoveUpValue;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线min</span></span><br><span class="line">          &#125;</span><br><span class="line">          i += <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingScale &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//int sum = 0,start = 0,stop = 0;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">Updata</span>(<span class="params"><span class="keyword">ref</span> DataTable data, Color[] color, <span class="built_in">int</span> DotSum</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        Init(<span class="keyword">ref</span> data, DotSum, Ymin, Ymax);</span><br><span class="line"></span><br><span class="line">        DrawingCurve(<span class="keyword">ref</span> data, GridView1, color, Ymin);</span><br><span class="line"></span><br><span class="line">        DrawingLabel(<span class="keyword">ref</span> data, color);</span><br><span class="line"></span><br><span class="line">        DrawingHelp(Ymin);</span><br><span class="line"></span><br><span class="line">        DrawingScale(Ymin, <span class="keyword">ref</span> data);</span><br><span class="line"></span><br><span class="line">        pictureBox.CreateGraphics().DrawImage(bmp, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        graphics.Clear(Color.White);<span class="comment">//清缓存</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;ChartUpdata &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//pictureBox大小变化时需要同时调整Bitmap对象大小</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">EventHandlerBmpInit</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      bmp = <span class="keyword">new</span> Bitmap(pictureBox.Width, pictureBox.Height);</span><br><span class="line">      graphics = Graphics.FromImage(bmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//让PictureBox支持MouseWheel事件</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pictureBox_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      pictureBox.Focus();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PictureBox_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">if</span> ((Control.ModifierKeys &amp; Keys.Control) == Keys.Control)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">double</span> offset = (Ymax - Ymin) / pictureBox.Height;</span><br><span class="line">        <span class="built_in">double</span> Y = pictureBox.Height - e.Y;</span><br><span class="line">        <span class="built_in">double</span> UpWidth = (<span class="built_in">double</span>)(pictureBox.Height - Y) * Yoffset * <span class="number">0.2</span>;</span><br><span class="line">        <span class="built_in">double</span> DownWidth = (<span class="built_in">double</span>)(Y - <span class="number">0</span>) * Yoffset * <span class="number">0.2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e.Delta &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;<span class="comment">//Mouse Wheeled Up(缩小)</span></span><br><span class="line">          Ymax -= UpWidth;</span><br><span class="line">          Ymin += DownWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;<span class="comment">//Mouse Wheeled Down(放大)</span></span><br><span class="line">          Ymax += UpWidth;</span><br><span class="line">          Ymin -= DownWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Ymax &lt; Ymin) &#123; Ymax = Ymin + <span class="number">10</span>; &#125;</span><br><span class="line">        RemoveDecimal(Ymax, <span class="keyword">ref</span> Ymax);</span><br><span class="line">        RemoveDecimal(Ymin, <span class="keyword">ref</span> Ymin);</span><br><span class="line">        <span class="comment">//Console.WriteLine(&quot;delte=&quot;+e.Delta.ToString() + &quot;, X=&quot; + e.X.ToString() + &quot;, Y=&quot; + e.Y.ToString()); </span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.Delta &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          sys.DotSum = (<span class="built_in">int</span>)((<span class="built_in">double</span>)sys.DotSum * <span class="number">0.8</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          sys.DotSum = (<span class="built_in">int</span>)((<span class="built_in">double</span>)sys.DotSum * <span class="number">1.2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sys.DotSum &lt; <span class="number">10</span>) &#123; sys.DotSum = <span class="number">10</span>; &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (sys.DotSum &gt; <span class="number">50000</span>) &#123; sys.DotSum = <span class="number">50000</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> length = (<span class="built_in">int</span>)((<span class="built_in">double</span>)NowRow / RowSum * sys.DotSum);</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">value</span> = NowID - length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">value</span> &lt;= hScrollBar.Maximum &amp;&amp; <span class="keyword">value</span> &gt; hScrollBar.Minimum)</span><br><span class="line">        &#123;</span><br><span class="line">          hScrollBar.Value = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pictureBox_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">if</span> (e.KeyCode == Keys.F1)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (Help == <span class="number">0</span>) &#123; Help = <span class="number">1</span>; &#125; <span class="keyword">else</span> &#123; Help = <span class="number">0</span>; &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ((Control.ModifierKeys &amp; Keys.Control) == Keys.Control &amp;&amp; e.KeyCode == Keys.F2)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (sys.ToolWindows.Visible == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          sys.ToolWindows.Show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          sys.ToolWindows.Close();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/iejinshan/article/details/48683043">C# GDI 图表 chart 串口 示波器</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 串口 </tag>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> GDI </tag>
            
            <tag> 示波器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十四（C# 显示数据量过大时卡顿）</title>
      <link href="/posts/1277306233.html"/>
      <url>/posts/1277306233.html</url>
      
        <content type="html"><![CDATA[<h1 id="几个重要的属性"><a href="#几个重要的属性" class="headerlink" title="几个重要的属性"></a>几个重要的属性</h1><p><strong>在介绍实现方法前需要先了解chart控件的几个属性</strong></p><ol><li>ChartAreas ：绘图区域，当数据量大时只要一个绘图区域。</li><li>AxisX：X轴。（Y轴一致，此文进介绍X轴）。</li><li>AxisX.ScrollBar：X轴滚动条。</li><li>AxisX.ScaleView.Position：X轴显示的起始值。</li><li>AxisX.ScaleView.Size：X轴显示数据的数量</li></ol><img src="https://img-blog.csdnimg.cn/20200514152320251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODQ4MDk3,size_16,color_FFFFFF,t_70#pic_center"><blockquote><p>图中<br>AxisX.ScaleView.Position &#x3D; 941<br>AxisX.ScaleView.Size &#x3D; 1941-941+1</p></blockquote><h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1><ol><li>将数据分段每段10000到50000之间（以50000为例）。</li><li>给chart控件添加滚动条，</li><li>将第一个数据段的数据绑定到chart数据源上，给chart添加鼠标滚动事件。</li><li>滚动滚轮可以更改AxisX.ScaleView.Position的值，当显示完最后一个数值时，更改chart的数据源将第二段数据绑定在chart数据源上。</li><li>依次循环就可以实现所有数据的显示</li></ol><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="1-数据分段"><a href="#1-数据分段" class="headerlink" title="1.数据分段"></a>1.数据分段</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span>[] data = <span class="keyword">new</span> <span class="built_in">double</span>[<span class="number">2000</span>*<span class="number">1000</span>]&#123;...&#125;;<span class="comment">//需要显示的数据 长度为200万。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">double</span>[]&gt; DataPanel</span> = <span class="keyword">new</span> List&lt;<span class="built_in">double</span>[]&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> m =<span class="number">0</span>;m&lt;<span class="number">40</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">double</span> [] smallArray = <span class="keyword">new</span> <span class="built_in">double</span> [<span class="number">50000</span>]; </span><br><span class="line">  <span class="keyword">for</span>(<span class="built_in">int</span> n = <span class="number">0</span>;n&lt;<span class="number">50000</span>;n++)</span><br><span class="line">  &#123;</span><br><span class="line">  smallArray [n] = data [i*<span class="number">50000</span>+n];</span><br><span class="line">  &#125;</span><br><span class="line">  DataPanel .<span class="keyword">add</span>(smallArray);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-给chart控件添加滚动条"><a href="#2-给chart控件添加滚动条" class="headerlink" title="2.给chart控件添加滚动条"></a>2.给chart控件添加滚动条</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ChartScrollbarStyle</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span> &#123;        </span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.Enabled = <span class="literal">true</span>;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position = <span class="number">1</span>;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = <span class="number">300</span>;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.ButtonStyle = ScrollBarButtonStyles.SmallScroll;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.ButtonColor = Color.Silver;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.LineColor = Color.Black;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.IsPositionedInside = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-将数据绑定在chart数据源上，更改DataCount，就更改了数据源。"><a href="#3-将数据绑定在chart数据源上，更改DataCount，就更改了数据源。" class="headerlink" title="3.将数据绑定在chart数据源上，更改DataCount，就更改了数据源。"></a>3.将数据绑定在chart数据源上，更改DataCount，就更改了数据源。</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> DataCount = <span class="number">0</span>；</span><br><span class="line">chart1.Series[<span class="number">0</span>].Points.DataBindY(DataPanel[DataCount]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-给chart控件添加鼠标滚轮事件"><a href="#4-给chart控件添加鼠标滚轮事件" class="headerlink" title="4.给chart控件添加鼠标滚轮事件"></a>4.给chart控件添加鼠标滚轮事件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">chart1.MouseWheel += Chart1_MouseWheel;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Chart1_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> position = Convert.ToInt32(chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position);</span><br><span class="line">  <span class="built_in">int</span> WindowSize = chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size；</span><br><span class="line">  <span class="keyword">if</span> (e.Delta &lt; <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">     position += <span class="number">200</span>;<span class="comment">//滚轮动一下，移动多少数据</span></span><br><span class="line">     <span class="keyword">if</span> (position &gt;= chartAmend.ChartAreas[<span class="number">0</span>].AxisX.Maximum - WindowSize)<span class="comment">//一段数据显示完毕</span></span><br><span class="line">      &#123;</span><br><span class="line">          DataCount++;</span><br><span class="line">          <span class="keyword">if</span> (DataCount &gt;= DataPanel.Count)</span><br><span class="line">          &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;所有数据已经全部显示完毕&quot;</span>,<span class="string">&quot;提示&quot;</span>);</span><br><span class="line">           DataCount = DataPanel.Count<span class="number">-1</span>;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">        &#125;  </span><br><span class="line">chart1.Series[<span class="number">0</span>].Points.DataBindY(Overall.DataPanel[DataCount]);</span><br><span class="line">position = <span class="number">1</span>;<span class="comment">//新的一段数据开始时 滚动条移动到最左侧</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">     position -= <span class="number">200</span>;</span><br><span class="line">     <span class="keyword">if</span> (position &lt; <span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">    <span class="keyword">if</span> (DataCount == <span class="number">0</span>)</span><br><span class="line">     &#123;</span><br><span class="line">        position = <span class="number">1</span>;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;已经是第一个数据&quot;</span>, <span class="string">&quot;提示&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">       &#123;             </span><br><span class="line">         DataCount--;</span><br><span class="line">       &#125; </span><br><span class="line">          chart1.Series[<span class="number">0</span>].Points.DataBindY(Overall.DataPanel[DataCount]);</span><br><span class="line">  position = Convert.ToInt32(chart1.ChartAreas[<span class="number">0</span>].AxisX.Maximum - WindowSize);</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position = position;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>到此处，基本上就已经完成了。理论上讲可显示的数据量为无限大。并且该方法本人已经应用于超1000万数据显示的项目中，但是因为本文的代码是经过删减整理的，可能会有一些问题。取用时要自行验证。</strong></p><h1 id="精彩评论收集"><a href="#精彩评论收集" class="headerlink" title="精彩评论收集"></a>精彩评论收集</h1><h2 id="评论一-帅气转身而过"><a href="#评论一-帅气转身而过" class="headerlink" title="评论一:帅气转身而过"></a>评论一:帅气转身而过</h2><ul><li>（问）你好，滚轮事件有问题！我这样写有错！</li><li>（答）能具体点吗？可以把错误提示说一下吗？</li><li>（问）chart1.MouseWheel +&#x3D; Chart1_MouseWheel; 说不清，鼠标的事件中我找不到对于chart1.MouseWheel的注册，你这样写，我那边是无效的，红色的波浪线</li><li>（答）“chart1.MouseWheel +&#x3D;“ 输入完毕后会后提示显示，最好按照提示输入，可能是你的大小写有问题。这个我在项目中用过很多次了不可能有问题的，还有控件中是不包含MouseWheel事件的，只能通过代码实现。</li></ul><h2 id="评论二-椰壳里的海"><a href="#评论二-椰壳里的海" class="headerlink" title="评论二:椰壳里的海"></a>评论二:椰壳里的海</h2><ul><li>楼主，你只能每帧显示50000个数据，我这里可以任意范围平滑显示，看看我的帖子吧。</li><li>是一屏显示50000，这也基本上是chart控件的极限了。你说的任意范围平滑显示，那你试过单次显示500万数据吗？</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><p>用fastline样式就行，30w以下数据基本不卡</p></li><li><p>确实 spline最卡，我实时刷新125ms一个点，1000个点就开始卡</p></li><li><p>那怎么保全全部的数据呢，我看还是同时搞两个chart控件方便，一个后台运行保存全部数据，一个看当前时区的变动数据。需要查看全部的数据了再点开看。就不存在卡的现象了。即保存了全部数据，又不影响当前可变的数据。</p></li></ul><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_41848097/article/details/106119181">C# 如何解决chart控件显示数据量过大时的卡顿问题</a></li><li><a href="https://ask.csdn.net/questions/716794?answer=53416784&spm=1001.2014.3001.5504">echarts绘制大数量折线图太卡，绘制很慢</a></li><li><a href="https://echartsjs.com/">echartsjs大数据绘图</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> 图表 </tag>
            
            <tag> 大数据 </tag>
            
            <tag> 卡顿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十三（C# 实现动态图表，动态数据呈现）</title>
      <link href="/posts/2488899717.html"/>
      <url>/posts/2488899717.html</url>
      
        <content type="html"><![CDATA[<h1 id="实现动态数据图表"><a href="#实现动态数据图表" class="headerlink" title="实现动态数据图表"></a>实现动态数据图表</h1><h2 id="创建步骤"><a href="#创建步骤" class="headerlink" title="创建步骤"></a>创建步骤</h2><ol><li>创建用户控件窗体</li><li>添加一个 System.Windows.Forms.DataVisualization.Charting.Chart 以呈现图表</li><li>添加一个 System.Windows.Forms.Timer 以构造随时间变化的随机数据（动态演示，数据刷新频率取决于此timer控件通知频率）</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DynamicChart</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">DChart</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">int</span> xPointNum = <span class="number">25</span>;</span><br><span class="line">        Queue&lt;<span class="built_in">int</span>&gt; dataQueue = <span class="keyword">new</span> Queue&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">        List&lt;<span class="built_in">int</span>&gt; chartXList = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DChart</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            dataQueue.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; xPointNum; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                dataQueue.Enqueue(<span class="number">0</span>);</span><br><span class="line">                chartXList.Add(i+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            chart1.Legends[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DChart_Resize</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           chart1.Size = <span class="keyword">this</span>.Size;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timerClock_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (DesignMode) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> number = <span class="keyword">new</span> Random().Next(<span class="number">0</span>,<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (dataQueue.Count &gt;= xPointNum) dataQueue.Dequeue();</span><br><span class="line"></span><br><span class="line">            dataQueue.Enqueue(number);</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.DataBindXY(chartXList, dataQueue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DChart_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (DesignMode)</span><br><span class="line">            &#123;</span><br><span class="line">                timerClock.Enabled = <span class="literal">false</span>;</span><br><span class="line">                Random random = <span class="keyword">new</span> Random();</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; xPointNum; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataQueue.Count &gt;= xPointNum) dataQueue.Dequeue();</span><br><span class="line">                    dataQueue.Enqueue(random.Next(<span class="number">0</span>, <span class="number">100</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].Points.DataBindXY(chartXList, dataQueue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果演示"><a href="#结果演示" class="headerlink" title="结果演示"></a>结果演示</h2><img src="https://s2.51cto.com/images/blog/202107/09/97378cfba4c68f6eee32024132e1120f.jpg?x-oss-process=image/watermark,size_14,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/format,webp/resize,m_fixed,w_1184"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.51cto.com/firswof/3033608">C# 实现动态图表，动态数据呈现</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> 动态 </tag>
            
            <tag> Chart </tag>
            
            <tag> 图表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十二（Chart 动态添加series）</title>
      <link href="/posts/1480607824.html"/>
      <url>/posts/1480607824.html</url>
      
        <content type="html"><![CDATA[<h1 id="图形组件Chart动态添加Series"><a href="#图形组件Chart动态添加Series" class="headerlink" title="图形组件Chart动态添加Series"></a>图形组件Chart动态添加Series</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">Chart1.DataSource = dtb;</span><br><span class="line">            <span class="built_in">string</span>[] strcolor = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">20</span>];</span><br><span class="line">            strcolor[<span class="number">0</span>] = <span class="string">&quot;220, 224, 64, 10&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">1</span>] = <span class="string">&quot;220, 252, 180, 65&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">2</span>] = <span class="string">&quot;220, 159, 100, 100&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">3</span>] = <span class="string">&quot;220, 5, 100, 146&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">4</span>] = <span class="string">&quot;91,42,0&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">5</span>] = <span class="string">&quot;19,211,188&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">6</span>] = <span class="string">&quot;0,93,70&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">7</span>] = <span class="string">&quot;185,147,240&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">8</span>] = <span class="string">&quot;194,211,252&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">9</span>] = <span class="string">&quot;49,0,93&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">10</span>] = <span class="string">&quot;245,111,5&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">11</span>] = <span class="string">&quot;203,72,178&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">12</span>] = <span class="string">&quot;93,93,0&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">13</span>] = <span class="string">&quot;165,165,147&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">14</span>] = <span class="string">&quot;124,201,15&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">15</span>] = <span class="string">&quot;14,112,201&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">16</span>] = <span class="string">&quot;0,59,93&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">17</span>] = <span class="string">&quot;5,18,108&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">18</span>] = <span class="string">&quot;245,15,54&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">19</span>] = <span class="string">&quot;121,129,234&quot;</span>;</span><br><span class="line">            Chart1.Series.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dt.Rows.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Chart1.Series.Add(i.ToString());<span class="comment">//添加</span></span><br><span class="line">                Chart1.Series[i.ToString()].ChartType = SeriesChartType.StackedBar;</span><br><span class="line">                Chart1.Series[i.ToString()].IsXValueIndexed = <span class="literal">true</span>;</span><br><span class="line">                Chart1.Series[i.ToString()].XValueMember = <span class="string">&quot;Customer&quot;</span>;</span><br><span class="line">                Chart1.Series[i.ToString()].YValueMembers = <span class="string">&quot;StickCarQutity&quot;</span> + (i + <span class="number">1</span>);</span><br><span class="line">                Chart1.Series[i.ToString()].LegendText = dt.Rows[i][<span class="string">&quot;level&quot;</span>].ToString();</span><br><span class="line">                Chart1.Series[i.ToString()].BorderColor = Color.FromArgb(<span class="number">180</span>, <span class="number">26</span>, <span class="number">59</span>, <span class="number">105</span>);</span><br><span class="line">                Chart1.Series[i.ToString()].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">4</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span>[] number = strcolor[i].ToString().Split(<span class="keyword">new</span> Char[] &#123; <span class="string">&#x27;,&#x27;</span> &#125;);</span><br><span class="line">                    <span class="built_in">int</span> alpha = <span class="built_in">int</span>.Parse(number[<span class="number">0</span>].ToString());</span><br><span class="line">                    <span class="built_in">int</span> red = <span class="built_in">int</span>.Parse(number[<span class="number">1</span>].ToString());</span><br><span class="line">                    <span class="built_in">int</span> green = <span class="built_in">int</span>.Parse(number[<span class="number">2</span>].ToString());</span><br><span class="line">                    <span class="built_in">int</span> blue = <span class="built_in">int</span>.Parse(number[<span class="number">3</span>].ToString());</span><br><span class="line">                    Chart1.Series[i.ToString()].Color = Color.FromArgb(alpha, red, green, blue);<span class="comment">//颜色赋值</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="number">3</span>&lt;i&amp;&amp;i&lt;<span class="number">20</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span>[] number = strcolor[i].ToString().Split(<span class="keyword">new</span> Char[] &#123; <span class="string">&#x27;,&#x27;</span> &#125;);</span><br><span class="line">                        <span class="built_in">int</span> red = <span class="built_in">int</span>.Parse(number[<span class="number">0</span>].ToString());</span><br><span class="line">                        <span class="built_in">int</span> green = <span class="built_in">int</span>.Parse(number[<span class="number">1</span>].ToString());</span><br><span class="line">                        <span class="built_in">int</span> blue = <span class="built_in">int</span>.Parse(number[<span class="number">2</span>].ToString());</span><br><span class="line">                        Chart1.Series[i.ToString()].Color = Color.FromArgb(red, green, blue);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                    </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Chart1.DataBind();</span><br></pre></td></tr></table></figure><p><strong>不知道这个HTML文件有啥用呢！</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">asp:Chart</span> <span class="attr">ID</span>=<span class="string">&quot;Chart1&quot;</span> <span class="attr">runat</span>=<span class="string">&quot;server&quot;</span> <span class="attr">DataMember</span>=<span class="string">&quot;DefaultView&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;700px&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;800px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Legends</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:Legend</span> <span class="attr">Docking</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;Default&quot;</span> <span class="attr">BackColor</span>=<span class="string">&quot;Transparent&quot;</span> <span class="attr">Font</span>=<span class="string">&quot;Trebuchet MS, 8pt, style=Bold&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">asp:Legend</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Legends</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Series</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Series</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ChartAreas</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:ChartArea</span> <span class="attr">Name</span>=<span class="string">&quot;ChartArea1&quot;</span> <span class="attr">IsSameFontSizeForAllAxes</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisX</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span> <span class="attr">IsReversed</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Font</span>=<span class="string">&quot;Microsoft Sans Serif, 8pt&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">IntervalType</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ScaleBreakStyle</span> <span class="attr">CollapsibleSpaceThreshold</span>=<span class="string">&quot;10&quot;</span> <span class="attr">LineColor</span>=<span class="string">&quot;Transparent&quot;</span> <span class="attr">BreakLineStyle</span>=<span class="string">&quot;None&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">IntervalOffset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisX</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisY</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">IntervalType</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisY</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisX2</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">IntervalOffset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;True&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Font</span>=<span class="string">&quot;Microsoft Sans Serif, 8pt&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisX2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisY2</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Font</span>=<span class="string">&quot;Microsoft Sans Serif, 7pt&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorGrid</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisY2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">asp:ChartArea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ChartAreas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">asp:Chart</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="通过遍历添加"><a href="#通过遍历添加" class="headerlink" title="通过遍历添加"></a>通过遍历添加</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; x1.Count - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">     ArrayList xData = x2.GetRange(i, <span class="number">2</span>);</span><br><span class="line">     ArrayList yData = y2.GetRange(i, <span class="number">2</span>);</span><br><span class="line">     <span class="comment">//动态生成series</span></span><br><span class="line">     chart1.Series.Add(i.ToString());</span><br><span class="line">     chart1.Series[i].ChartType = SeriesChartType.Line;<span class="comment">//设置为折线</span></span><br><span class="line">     chart1.Series[i].Points.DataBindXY(xData, yData);</span><br><span class="line">     chart1.Series[i].BorderWidth = <span class="number">3</span>;<span class="comment">//折线粗细</span></span><br><span class="line">     chart1.Series[i].Color = getColor(level[i]);<span class="comment">//设置折线颜色</span></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/longphui/p/4739536.html">问题：C#Chart控件自动添加Series；结果：图形组件Chart动态添加Series</a></li><li><a href="https://blog.csdn.net/Rww178/article/details/114820384">C# 怎么向折线图动态添加series</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> 图表 </tag>
            
            <tag> 动态添加 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十一（Chart入门功能收集）</title>
      <link href="/posts/3529651870.html"/>
      <url>/posts/3529651870.html</url>
      
        <content type="html"><![CDATA[<h1 id="c-Winform-Chart基础入门-功能–如何添加-Chart-图表"><a href="#c-Winform-Chart基础入门-功能–如何添加-Chart-图表" class="headerlink" title="c# Winform Chart基础入门 功能–如何添加  Chart 图表"></a>c# Winform Chart基础入门 功能–如何添加  Chart 图表</h1><p>额外参考链接：<a href="http://www.cnblogs.com/greenerycn/archive/2008/10/27/microsoft-chart.html">http://www.cnblogs.com/greenerycn/archive/2008/10/27/microsoft-chart.html</a></p><p>首先添加引用System.Windows.Forms.DataVisualization，添加引用后，工具面板上将在数据中显示Chart,可直接拖拽到界面上。</p><p>代码中添加 <strong>Using System.Windows.Forms.DataVisualization.Charting;</strong></p><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619182809181-529430866.png"><h2 id="1-当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。"><a href="#1-当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。" class="headerlink" title="1. 当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。"></a>1. 当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。</h2><pre><code>通过设置Series的ChartType属性来选择图表类型，一般常用：折线Line，柱状图Column，饼状图Pie,雷达图Redar等等。</code></pre><h2 id="2-设置ChartAreas属性"><a href="#2-设置ChartAreas属性" class="headerlink" title="2. 设置ChartAreas属性"></a>2. 设置ChartAreas属性</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ct.ChartAreas.Add(<span class="keyword">new</span> ChartArea() &#123; Name = <span class="string">&quot;ca1&quot;</span> &#125;); <span class="comment">//背景框</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorGrid.Enabled = <span class="literal">false</span>; <span class="comment">//X轴上网格</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.Enabled = <span class="literal">false</span>; <span class="comment">//y轴上网格</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorGrid.LineDashStyle = ChartDashStyle.Dash; <span class="comment">//网格类型 短横线</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorGrid.LineColor = Color.Gray;</span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorTickMark.Enabled = <span class="literal">false</span>; <span class="comment">// x轴上突出的小点</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorTickMark.Enabled = <span class="literal">false</span>; <span class="comment">//</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].IsInterlaced = <span class="literal">true</span>; <span class="comment">//显示交错带</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].LabelStyle.Format = <span class="string">&quot;#年&quot;</span>; <span class="comment">//设置X轴显示样式</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.LineDashStyle = ChartDashStyle.Dash; <span class="comment">//网格类型 短横线</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.LineColor = Color.Blue;</span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.LineWidth = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].BackColor = System.Drawing.Color.Transparent; <span class="comment">//设置区域内背景透明</span></span><br></pre></td></tr></table></figure><h2 id="3-设置值Series"><a href="#3-设置值Series" class="headerlink" title="3. 设置值Series"></a>3. 设置值Series</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加的两组Test数据</span></span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; txData2 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">2011</span>, <span class="number">2012</span>, <span class="number">2013</span>, <span class="number">2014</span>, <span class="number">2015</span>, <span class="number">2016</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; tyData2 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; txData3 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">2012</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; tyData3 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">7</span> &#125;;</span><br><span class="line"></span><br><span class="line">ct.Series.Add(<span class="keyword">new</span> Series()); <span class="comment">//添加一个图表序列</span></span><br><span class="line"><span class="comment">// ct.Series[0].XValueType = ChartValueType.String; //设置X轴上的值类型</span></span><br><span class="line">ct.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>; <span class="comment">//设置显示X Y的值</span></span><br><span class="line">ct.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX年\r#VAL&quot;</span>; <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">ct.Series[<span class="number">0</span>].ChartArea = ct.ChartAreas[<span class="number">0</span>].Name; <span class="comment">//设置图表背景框ChartArea </span></span><br><span class="line">ct.Series[<span class="number">0</span>].ChartType = SeriesChartType.Line; <span class="comment">//图类型(折线)</span></span><br><span class="line">ct.Series[<span class="number">0</span>].Points.DataBindXY(txData2, tyData2); <span class="comment">//添加数据</span></span><br><span class="line"><span class="comment">//折线段配置</span></span><br><span class="line">ct.Series[<span class="number">0</span>].Color = Color.Red; <span class="comment">//线条颜色</span></span><br><span class="line">ct.Series[<span class="number">0</span>].BorderWidth = <span class="number">3</span>; <span class="comment">//线条粗细</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerBorderColor = Color.Red; <span class="comment">//标记点边框颜色</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerBorderWidth = <span class="number">3</span>; <span class="comment">//标记点边框大小</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerColor = Color.Red; <span class="comment">//标记点中心颜色</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerSize = <span class="number">5</span>; <span class="comment">//标记点大小</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerStyle = MarkerStyle.Circle; <span class="comment">//标记点类型</span></span><br><span class="line"></span><br><span class="line">ct.Series.Add(<span class="keyword">new</span> Series()); <span class="comment">//添加一个图表序列</span></span><br><span class="line">ct.Series[<span class="number">1</span>].Label = <span class="string">&quot;#VAL&quot;</span>; <span class="comment">//设置显示X Y的值</span></span><br><span class="line">ct.Series[<span class="number">1</span>].ToolTip = <span class="string">&quot;#VALX年\r#VAL&quot;</span>; <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">ct.Series[<span class="number">1</span>].ChartArea = <span class="string">&quot;ca1&quot;</span>;        <span class="comment">//选择显示的ChartArea ，如果和其他的Series选择是同一个ChartArea，则在同一个区域中显示对比</span></span><br><span class="line">ct.Series[<span class="number">1</span>].ChartType = SeriesChartType.Line; <span class="comment">//图类型(折线)</span></span><br><span class="line">ct.Series[<span class="number">1</span>].Points.DataBindXY(txData3, tyData3); <span class="comment">//添加数据</span></span><br><span class="line"><span class="comment">//折线段配置</span></span><br><span class="line">ct.Series[<span class="number">1</span>].Color = Color.Black; <span class="comment">//线条颜色</span></span><br><span class="line">ct.Series[<span class="number">1</span>].BorderWidth = <span class="number">3</span>; <span class="comment">//线条粗细</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerBorderColor = Color.Black; <span class="comment">//标记点边框颜色</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerBorderWidth = <span class="number">3</span>; <span class="comment">//标记点边框大小</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerColor = Color.Black; <span class="comment">//标记点中心颜色</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerSize = <span class="number">5</span>; <span class="comment">//标记点大小</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerStyle = MarkerStyle.Circle; <span class="comment">//标记点类型</span></span><br></pre></td></tr></table></figure><h2 id="4-其他ChartType的特殊设置"><a href="#4-其他ChartType的特殊设置" class="headerlink" title="4. 其他ChartType的特殊设置"></a>4. 其他ChartType的特殊设置</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//饼图说明设置，这用来设置饼图每一块的信息显示在什么地方</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;PieLabelStyle&quot;</span>] = <span class="string">&quot;Outside&quot;</span>;<span class="comment">//将文字移到外侧</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;PieLineColor&quot;</span>] = <span class="string">&quot;Black&quot;</span>;<span class="comment">//绘制黑色的连线。</span></span><br><span class="line"><span class="comment">//柱状图其他设置</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;DrawingStyle&quot;</span>] = <span class="string">&quot;Emboss&quot;</span>; <span class="comment">//设置柱状平面形状</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;PointWidth&quot;</span>] = <span class="string">&quot;0.5&quot;</span>; <span class="comment">//设置柱状大小</span></span><br></pre></td></tr></table></figure><h2 id="5-几种ChartType展示"><a href="#5-几种ChartType展示" class="headerlink" title="5. 几种ChartType展示"></a>5. 几种ChartType展示</h2><table><thead><tr><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619193636804-1004411170.png" alt="img"></th><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619194921306-1359831382.png" alt="img"></th><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195109596-335521709.png" alt="img"></th><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195141038-8113878.png" alt="img"></th></tr></thead><tbody><tr><td>折线图-Line</td><td>柱状图-Column</td><td>饼状图-Pie</td><td>雷达图-Redar</td></tr><tr><td><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195228872-1568633738.png" alt="img"></td><td><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195207652-433353833.png" alt="img"></td><td><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195304895-1220477305.png" alt="img"></td><td></td></tr><tr><td>Spline</td><td>Bar</td><td>Doughnut</td><td></td></tr></tbody></table><h1 id="C-的CHART-怎么设置不显示格网"><a href="#C-的CHART-怎么设置不显示格网" class="headerlink" title="C#的CHART 怎么设置不显示格网"></a>C#的CHART 怎么设置不显示格网</h1><h2 id="方法一：代码设置"><a href="#方法一：代码设置" class="headerlink" title="方法一：代码设置"></a>方法一：代码设置</h2><p><strong>使用如下代码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.chart1.chartArea[<span class="number">0</span>].AxisX.MajorGrid.LineColor = System.Drawing.Color.Transparent;</span><br><span class="line"><span class="keyword">this</span>.chart1.chartArea[<span class="number">0</span>].AxisY.MajorGrid.LineColor = System.Drawing.Color.Transparent;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法二：在属性栏上设置"><a href="#方法二：在属性栏上设置" class="headerlink" title="方法二：在属性栏上设置"></a>方法二：在属性栏上设置</h2><img src="https://www.freesion.com/images/69/dd954387931456c110300f2897b526ed.png"><img src="https://www.freesion.com/images/550/e4b403b37321e0121f7e405f1c586106.png"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/Betty-IT/p/9198557.html">c# Winform Chart入门</a></li><li><a href="https://www.freesion.com/article/43391405555/">C#的CHART 怎么设置不显示格网</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> 图表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 登录界面显示密码星号</title>
      <link href="/posts/2960592375.html"/>
      <url>/posts/2960592375.html</url>
      
        <content type="html"><![CDATA[<h1 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h1><img src="https://img-blog.csdnimg.cn/20200820231645675.png"><p>在软件设计时，往往需要设置用户的登录权限。用户在填写密码时，如何实现输入隐藏，或者以“*”号进行隐藏显示？这里需要利用textBox的PasswordChar属性。</p><h1 id="属性解释"><a href="#属性解释" class="headerlink" title="属性解释"></a>属性解释</h1><p>PasswordChar属性用于获取或设置字符，该字符用于屏蔽单行 TextBox 控件中的密码字符。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>下面展示了checkBox状态切换响应函数 代码</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ckBoxPassword_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ckBoxPassword.Checked)</span><br><span class="line">    &#123;</span><br><span class="line">        tBoxPassword.PasswordChar = <span class="string">&#x27;&#x27;</span>;   <span class="comment">//显示输入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        tBoxPassword.PasswordChar = <span class="string">&#x27;*&#x27;</span>;   <span class="comment">//显示*</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ckBoxPassword_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ckBoxPassword.Checked)</span><br><span class="line">&#123;</span><br><span class="line">tBoxPassword.PasswordChar = <span class="string">&#x27;\0&#x27;</span>;   <span class="comment">//显示输入</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">tBoxPassword.PasswordChar = <span class="string">&#x27;*&#x27;</span>;   <span class="comment">//显示*</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><img src="https://img-blog.csdnimg.cn/20200820232527236.gif#pic_center"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://javaforall.cn/161466.html">C#实现登录界面，密码星号显示（隐藏输入密码）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 登录界面 </tag>
            
            <tag> 密码星号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#winfrom 项目复制后界面空白</title>
      <link href="/posts/1869196606.html"/>
      <url>/posts/1869196606.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>有时候正在做的项目需要以前项目的界面（Form，UserControl），重新写又觉得麻烦，只好从原来项目复制文件过来，然后添加到这个项目，添加完了之后，打开设计器，发现界面成了空白，什么也没有，CS代码文件与设计器代码文件也是分离的。<br><strong>如图：</strong></p><img src="https://img-blog.csdnimg.cn/dde62b1f16604491b892147cbee08e35.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_9,color_FFFFFF,t_70,g_se,x_16#pic_center"><img src="https://img-blog.csdnimg.cn/e38175e47c6d42feb13e214e2332167e.jpg"><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="方案一（详细型）：删除重新调用"><a href="#方案一（详细型）：删除重新调用" class="headerlink" title="方案一（详细型）：删除重新调用"></a>方案一（详细型）：删除重新调用</h2><blockquote><p>1.新建一个winform项目test，建好以后在解决方案资源管理器中右击form1.cs，点击删除。此时项目文件夹中的.cs和.Designers.cs后缀文件将自动删除。</p></blockquote><img src="https://img-blog.csdnimg.cn/ef1ad438ce2a468dad0d3d8105503c3e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>2.将原来项目文件夹中，除了app.config、Program.cs、BasicDemo.csproj、bin文件夹、obj文件夹和Properties文件夹外，其余文件均复制到新项目文件夹中。</p></blockquote><img src="https://img-blog.csdnimg.cn/3cdf50732feb42c7a976b0487140f0ca.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>3.在新项目解决方案资源管理器中右击test项目–添加–现有项，选择BasicDemo.cs，其余文件也会自动添加到项目中。</p></blockquote><blockquote><p>4.修改BasisDemo.cs和BascDemo.designer.cs代码中的命名空间为新项目的命令空间。<strong>不改问题也不大！</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/ee051e8eaf114b029791ea7ca6d4220a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>5.如果原项目中引用了动态链接库，复制到新项目中时要重新引用一次。</p></blockquote><h2 id="方案二（简单型）：与方案一基本相同"><a href="#方案二（简单型）：与方案一基本相同" class="headerlink" title="方案二（简单型）：与方案一基本相同"></a>方案二（简单型）：与方案一基本相同</h2><p>选中项目中的设计器文件和资源文件，右键→从项目中排除（注意：不是删除，删除文件也会没了），然后打开设计器和资源文件所在目录，选中这两个文件，拖到项目中控件的CS文件上，就好了，现在双击控件CS文件也能看到设计的界面了，设计器文件与代码文件也合体了。</p><img src="https://img-blog.csdnimg.cn/2ecf2fa9695546a8b79abbbcf7788f83.jpg"><h2 id="方案三（原理型）："><a href="#方案三（原理型）：" class="headerlink" title="方案三（原理型）："></a>方案三（原理型）：</h2><blockquote><p>找到项目的项目文件（xx.csproj），用文本打开，找到以下内容：</p></blockquote><img src="https://img-blog.csdnimg.cn/1dbc21ec3a3d480793f87b0d382ad59f.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAV2hhdF9jYW5feW91X2Rv,size_16,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/44719353690c4a2699a26ebbac3855e7.jpg"><ul><li>UserListView是我刚刚改好的，是正常的，UserPictureBox是还没有改的，是有问题的，两者对比下，就可以改了。注意：一个是设计器文件，一个是资源文件，两个地方都要改。改完保存，再打开项目就好了。</li></ul><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/weixin_43178844/article/details/121518306">winform把一个项目复制到另一个项目中时出现界面空白问题</a></li><li><a href="https://blog.csdn.net/What_can_you_do/article/details/120757052">＜WinForm＞复制别的项目界面文件到项目中打开设计器空白问题</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 项目复制 </tag>
            
            <tag> 界面问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之十（Chart中各类图表数据显示）</title>
      <link href="/posts/224704259.html"/>
      <url>/posts/224704259.html</url>
      
        <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img-blog.csdnimg.cn/20210510134457640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODMyMjcy,size_16,color_FFFFFF,t_70"><h1 id="简单属性说明"><a href="#简单属性说明" class="headerlink" title="简单属性说明"></a>简单属性说明</h1><h2 id="ChartAreas属性"><a href="#ChartAreas属性" class="headerlink" title="ChartAreas属性"></a>ChartAreas属性</h2><p>ChartAreas属性指绘图区，一个控件可以有多个绘图区，比如我要在同一个控件内显示饼图和柱状图，肯定不能放在同一个ChartAreas区域内，应该在同一个Chart控件里增加两个ChartAreas并分别绑定Series对象。<br><strong>所以ChartAreas属性对应的是一个集合。</strong></p><h2 id="Series属性"><a href="#Series属性" class="headerlink" title="Series属性"></a>Series属性</h2><p>Series属性就是各种图表的图形啦，比如我们要显示某月的天气变化，那么应该有这样两组数据，一组是天数，一组是每天对应的温度值，同时绑定到Series对象中，再将Series对象Add()到Chart控件的Series属性里即可。<br>为了横向比较，例如我要看本月与上月的天气曲线变化图，并同时显示在同一个ChartAreas中，那该怎么办呢？很简单，再实例一个Series对象，将上月的天数数组与温度值数组绑定到一个新的Series2实例中，再将Series2实例Add()到Chart控件的Series属性里，此时，Chart控件的第一个绘图区ChartArea里就会有两条曲线。</p><h2 id="Legends属性"><a href="#Legends属性" class="headerlink" title="Legends属性"></a>Legends属性</h2><p>Legend就是指一个图标的图例，当一个Series属性有多个Series时，或是一个Series有几组数据时，为了区分各自的颜色，通常每个Serie对象一种颜色，这就需要用到图例来指明哪个颜色的代表的是什么数据</p><p><strong>如下图所示：</strong></p><img src="https://img-blog.csdnimg.cn/20190606115526740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190606115542660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190606115559527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190606115611468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><h2 id="关于数据的绑定"><a href="#关于数据的绑定" class="headerlink" title="关于数据的绑定"></a>关于数据的绑定</h2><p>将要显示的X轴和Y轴的数据分别放到两个数组里在， 然后绑定即可。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cht1.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br></pre></td></tr></table></figure><h1 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] x = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;南山大队&quot;</span>, <span class="string">&quot;福田大队&quot;</span>, <span class="string">&quot;罗湖大队&quot;</span>, <span class="string">&quot;宝安大队&quot;</span>, <span class="string">&quot;指挥处&quot;</span>, &#125;;</span><br><span class="line">        <span class="built_in">double</span>[] y = <span class="keyword">new</span> <span class="built_in">double</span>[] &#123; <span class="number">541</span>, <span class="number">574</span>, <span class="number">345</span>, <span class="number">854</span>, <span class="number">257</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> 柱状图</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//标题</span></span><br><span class="line">        cht1.Titles.Add(<span class="string">&quot;柱状图数据分析&quot;</span>);</span><br><span class="line">        cht1.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">        cht1.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//右上角标题</span></span><br><span class="line">        cht1.Titles.Add(<span class="string">&quot;合计：0 宗&quot;</span>);</span><br><span class="line">        <span class="comment">//cht1.Titles.Add(&quot;合计：25414 宗&quot;);</span></span><br><span class="line">        <span class="comment">//cht1.Titles.Add(&quot;合计：25414 宗&quot;);</span></span><br><span class="line">        <span class="comment">//cht1.Titles.Add(&quot;合计：25414 宗&quot;);</span></span><br><span class="line">        cht1.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">        cht1.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        <span class="comment">//设置标题位于右上角</span></span><br><span class="line">        <span class="comment">//cht1.Titles[1].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line">        <span class="comment">//cht1.Titles[2].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line">        <span class="comment">//cht1.Titles[3].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line">        <span class="comment">//cht1.Titles[4].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//控件背景</span></span><br><span class="line">        cht1.BackColor = Color.Yellow;</span><br><span class="line">        <span class="comment">//图表区背景</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">        <span class="comment">//X轴标签间距</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;   <span class="comment">//下方标签显示的角度</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//X坐标轴颜色</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        <span class="comment">//X坐标轴标题</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.Title = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TextOrientation = TextOrientation.Horizontal;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.ToolTip = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        <span class="comment">//X轴网络线条</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        <span class="comment">//Y坐标轴标题</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.Title = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.TitleForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.TextOrientation = TextOrientation.Rotated270;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.ToolTip = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        <span class="comment">//Y轴网格线条</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.TopBottom;</span><br><span class="line">        <span class="built_in">string</span> now_time = System.DateTime.Now.ToString(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">        Legend legend = <span class="keyword">new</span> Legend(now_time);</span><br><span class="line">        legend.Title = <span class="string">&quot;legendTitle&quot;</span>;</span><br><span class="line"></span><br><span class="line">        cht1.Series[<span class="number">0</span>].XValueType = ChartValueType.String;  <span class="comment">//设置X轴上的值类型</span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                <span class="comment">//设置显示X Y的值    </span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL&quot;</span>;     <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].ChartType = SeriesChartType.Column;    <span class="comment">//图类型(折线)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        cht1.Series[<span class="number">0</span>].Color = Color.Lime;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].LegendText = legend.Name;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;DrawingStyle = Cylinder&quot;</span>;</span><br><span class="line">        cht1.Legends.Add(legend);</span><br><span class="line">        cht1.Legends[<span class="number">0</span>].Position.Auto = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//绑定数据</span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">        cht1.Series[<span class="number">0</span>].Points[<span class="number">0</span>].Color = Color.Black;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].Palette = ChartColorPalette.Bright;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 饼图</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//标题</span></span><br><span class="line">            cht2.Titles.Add(<span class="string">&quot;饼图数据分析&quot;</span>);</span><br><span class="line">            cht2.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">            cht2.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line">            cht2.Titles.Add(<span class="string">&quot;合计：25412 宗&quot;</span>);</span><br><span class="line">            cht2.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">            cht2.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.Titles[<span class="number">1</span>].Alignment = ContentAlignment.TopRight;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//控件背景</span></span><br><span class="line">            cht2.BackColor = Color.Transparent;</span><br><span class="line">            <span class="comment">//图表区背景</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">            <span class="comment">//X轴标签间距</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">14f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//X坐标轴颜色</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//X坐标轴标题</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.Title = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TextOrientation = TextOrientation.Horizontal;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.ToolTip = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            <span class="comment">//X轴网络线条</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//Y坐标轴标题</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.Title = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.TitleForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.TextOrientation = TextOrientation.Rotated270;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.ToolTip = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            <span class="comment">//Y轴网格线条</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//背景渐变</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.None;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//图例样式</span></span><br><span class="line">            Legend legend2 = <span class="keyword">new</span> Legend(<span class="string">&quot;#VALX&quot;</span>);</span><br><span class="line">            legend2.Title = <span class="string">&quot;图例&quot;</span>;</span><br><span class="line">            legend2.TitleBackColor = Color.Transparent;</span><br><span class="line">            legend2.BackColor = Color.Transparent;</span><br><span class="line">            legend2.TitleForeColor = Color.Black;</span><br><span class="line">            legend2.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            legend2.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            legend2.ForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">            cht2.Series[<span class="number">0</span>].XValueType = ChartValueType.String;  <span class="comment">//设置X轴上的值类型</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                <span class="comment">//设置显示X Y的值    </span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL(宗)&quot;</span>;     <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].ChartType = SeriesChartType.Pie;    <span class="comment">//图类型(折线)</span></span><br><span class="line"></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Color = Color.Lime;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].LegendText = legend2.Name;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;DrawingStyle = Cylinder&quot;</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;PieLabelStyle = Outside&quot;</span>;</span><br><span class="line">            <span class="comment">//cht2.Legends.Add(legend2);</span></span><br><span class="line">            cht2.Legends[<span class="number">0</span>].Position.Auto = <span class="literal">true</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//是否显示图例</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].ShadowOffset = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//饼图折线</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>][<span class="string">&quot;PieLineColor&quot;</span>] = <span class="string">&quot;White&quot;</span>;</span><br><span class="line">            <span class="comment">//绑定数据</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            cht2.Series[<span class="number">0</span>].Points[<span class="number">0</span>].Color = Color.Black;</span><br><span class="line">            <span class="comment">//绑定颜色</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Palette = ChartColorPalette.BrightPastel;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="横向柱状图"><a href="#横向柱状图" class="headerlink" title="横向柱状图"></a>横向柱状图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> Bar图</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//标题</span></span><br><span class="line">           cht3.Titles.Add(<span class="string">&quot;交通违法行为TOP5&quot;</span>);</span><br><span class="line">           cht3.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">           cht3.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12f</span>, FontStyle.Regular);</span><br><span class="line">           cht3.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line">           cht3.Titles.Add(<span class="string">&quot;合计：25412 宗 &quot;</span>);</span><br><span class="line">           cht3.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">           cht3.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">           cht3.Titles[<span class="number">1</span>].Alignment = ContentAlignment.TopRight;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//控件背景</span></span><br><span class="line">           cht3.BackColor = Color.Transparent;</span><br><span class="line">           <span class="comment">//图表区背景</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">           <span class="comment">//X轴标签间距</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">14f</span>, FontStyle.Regular);</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//X坐标轴颜色</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">           <span class="comment">//X坐标轴标题</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.TitleForeColor = Color.Black;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//X轴网络线条</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">           <span class="comment">//Y坐标轴标题</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.TitleForeColor = Color.Black;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//Y轴网格线条</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.IsMarginVisible = <span class="literal">false</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].Area3DStyle.Enable3D = <span class="literal">true</span>;</span><br><span class="line">           <span class="comment">//背景渐变</span></span><br><span class="line">           cht2.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.None;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//图例样式</span></span><br><span class="line">           Legend legend3 = <span class="keyword">new</span> Legend(<span class="string">&quot;#VALX&quot;</span>);</span><br><span class="line">           legend3.Title = <span class="string">&quot;图例&quot;</span>;</span><br><span class="line">           legend3.TitleBackColor = Color.Transparent;</span><br><span class="line">           legend3.BackColor = Color.Transparent;</span><br><span class="line">           legend3.TitleForeColor = Color.Black;</span><br><span class="line">           legend3.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">           legend3.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">           legend3.ForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">           cht3.Series[<span class="number">0</span>].XValueType = ChartValueType.String;  <span class="comment">//设置X轴上的值类型</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                <span class="comment">//设置显示X Y的值    </span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL(宗)&quot;</span>;     <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].ChartType = SeriesChartType.Bar;    <span class="comment">//图类型(折线)</span></span><br><span class="line"></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Color = Color.Lime;</span><br><span class="line">           <span class="comment">//cht3.Series[0].LegendText = legend3.Name;</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;DrawingStyle = Cylinder&quot;</span>;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;PieLabelStyle = Outside&quot;</span>;</span><br><span class="line">           <span class="comment">//cht3.Legends.Add(legend3);</span></span><br><span class="line">           <span class="comment">//cht3.Legends[0].Position.Auto = true;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//是否显示图例</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].ShadowOffset = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//饼图折线</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>][<span class="string">&quot;PieLineColor&quot;</span>] = <span class="string">&quot;White&quot;</span>;</span><br><span class="line">           <span class="comment">//绑定数据</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//cht3.Series[0].Points[0].Color = Color.Black;</span></span><br><span class="line">           <span class="comment">//绑定颜色</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Palette = ChartColorPalette.BrightPastel;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//for (int n = 0; n &lt; x.Length; n++)</span></span><br><span class="line">           <span class="comment">//&#123;</span></span><br><span class="line">           <span class="comment">//    int ptIdx = cht3.Series[0].Points.AddY(Convert.ToDouble(y[n]));</span></span><br><span class="line">           <span class="comment">//    DataPoint pt = this.cht3.Series[0].Points[ptIdx];</span></span><br><span class="line">           <span class="comment">//    pt.LegendText = x[n] + &quot; &quot; + &quot;#PERCENT&#123;P2&#125;&quot; + &quot; [ &quot; + &quot;#VAL&#123;D&#125; 次&quot; + &quot; ]&quot;;//右边标签列显示的文字  </span></span><br><span class="line">           <span class="comment">//    pt.Label = x[n] + &quot; &quot; + &quot;#PERCENT&#123;P2&#125;&quot; + &quot; [ &quot; + &quot;#VAL&#123;D&#125; 次&quot; + &quot; ]&quot;; //圆饼外显示的信息 </span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//    //  pt.LabelToolTip = &quot;#PERCENT&#123;P2&#125;&quot;;  </span></span><br><span class="line">           <span class="comment">//    //pt.LabelBorderColor = Color.Red;//文字背景色   </span></span><br><span class="line">           <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">           <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="雷达图"><a href="#雷达图" class="headerlink" title="雷达图"></a>雷达图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line">cht4.Titles.Add(<span class="string">&quot;交通违法行为TOP5&quot;</span>);</span><br><span class="line">            cht4.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">            cht4.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12f</span>, FontStyle.Regular);</span><br><span class="line">            cht4.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line">            cht4.Titles.Add(<span class="string">&quot;合计：25412 宗 &quot;</span>);</span><br><span class="line">            cht4.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">            cht4.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            cht4.Titles[<span class="number">1</span>].Alignment = ContentAlignment.TopRight;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//控件背景</span></span><br><span class="line">            cht4.BackColor = Color.Transparent;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">            <span class="comment">//X轴标签间距</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">14f</span>, FontStyle.Regular);</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//X坐标轴颜色</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//X坐标轴标题</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.TitleForeColor = Color.Black;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//X轴网络线条</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//Y坐标轴标题</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.TitleForeColor = Color.Black;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//Y轴网格线条</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.IsMarginVisible = <span class="literal">false</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].Area3DStyle.Enable3D = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.IsInterlaced = <span class="literal">false</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.IsMarginVisible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//刻度线</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.MajorTickMark.Enabled = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.MajorGrid.Enabled = false;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.MajorGrid.Enabled = false;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.MajorTickMark.Enabled = false;</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Enabled = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//背景渐变</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.None;</span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].BorderWidth = 0;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].BackSecondaryColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].BackImageTransparentColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.MajorGrid.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.MajorTickMark.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.MinorTickMark.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.MajorGrid.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.MajorTickMark.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.MinorTickMark.LineColor = Color.Red;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//图例样式</span></span><br><span class="line">            Legend legend4 = <span class="keyword">new</span> Legend();</span><br><span class="line">            legend4.Title = <span class="string">&quot;图例&quot;</span>;</span><br><span class="line">            legend4.TitleBackColor = Color.Transparent;</span><br><span class="line">            legend4.BackColor = Color.Transparent;</span><br><span class="line">            legend4.TitleForeColor = Color.Black;</span><br><span class="line">            legend4.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            legend4.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            legend4.ForeColor = Color.Black;</span><br><span class="line">            cht4.Legends.Add(legend4);</span><br><span class="line">            cht4.Legends[<span class="number">0</span>].Position.Auto = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Series1</span></span><br><span class="line">            cht4.Series[<span class="number">0</span>].XValueType = ChartValueType.String; </span><br><span class="line">            cht4.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                </span><br><span class="line">            cht4.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht4.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#LEGENDTEXT:#VAL(宗)&quot;</span>;    </span><br><span class="line">            cht4.Series[<span class="number">0</span>].ChartType = SeriesChartType.Radar;    </span><br><span class="line">            cht4.Series[<span class="number">0</span>][<span class="string">&quot;RadarDrawingStyle&quot;</span>] = <span class="string">&quot;Line&quot;</span>;  </span><br><span class="line">            cht4.Series[<span class="number">0</span>].LegendText = <span class="string">&quot;2015年&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Series2</span></span><br><span class="line">            cht4.Series.Add(<span class="keyword">new</span> Series(<span class="string">&quot;Series2&quot;</span>));</span><br><span class="line">            cht4.Series[<span class="number">1</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                </span><br><span class="line">            cht4.Series[<span class="number">1</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].ToolTip = <span class="string">&quot;#LEGENDTEXT:#VAL(宗)&quot;</span>;     </span><br><span class="line">            cht4.Series[<span class="number">1</span>].ChartType = SeriesChartType.Radar;   </span><br><span class="line">            cht4.Series[<span class="number">1</span>][<span class="string">&quot;RadarDrawingStyle&quot;</span>] = <span class="string">&quot;Line&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].LegendText = <span class="string">&quot;2016年&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Series3</span></span><br><span class="line">            cht4.Series.Add(<span class="keyword">new</span> Series(<span class="string">&quot;Series3&quot;</span>));</span><br><span class="line">            cht4.Series[<span class="number">2</span>].Label = <span class="string">&quot;#VAL&quot;</span>;               </span><br><span class="line">            cht4.Series[<span class="number">2</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].ToolTip = <span class="string">&quot;#LEGENDTEXT:#VAL(宗)&quot;</span>;     </span><br><span class="line">            cht4.Series[<span class="number">2</span>].ChartType = SeriesChartType.Radar;    </span><br><span class="line">            cht4.Series[<span class="number">2</span>][<span class="string">&quot;RadarDrawingStyle&quot;</span>] = <span class="string">&quot;Line&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].LegendText = <span class="string">&quot;2017年&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="built_in">double</span>[] yValues = &#123; <span class="number">65.62</span>, <span class="number">75.54</span>, <span class="number">60.45</span>, <span class="number">34.73</span>, <span class="number">85.42</span>, <span class="number">55.9</span>, <span class="number">63.6</span>, <span class="number">55.2</span>, <span class="number">77.1</span> &#125;;</span><br><span class="line">            <span class="built_in">string</span>[] xValues = &#123; <span class="string">&quot;France&quot;</span>, <span class="string">&quot;Canada&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;USA&quot;</span>, <span class="string">&quot;Italy&quot;</span>, <span class="string">&quot;Spain&quot;</span>, <span class="string">&quot;Russia&quot;</span>, <span class="string">&quot;Sweden&quot;</span>, <span class="string">&quot;Japan&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//Seris2  </span></span><br><span class="line">            <span class="built_in">double</span>[] y2 = &#123; <span class="number">45.62</span>, <span class="number">65.54</span>, <span class="number">70.45</span>, <span class="number">84.73</span>, <span class="number">35.42</span>, <span class="number">55.9</span>, <span class="number">63.6</span> &#125;;</span><br><span class="line">            <span class="built_in">double</span>[] y3 = &#123; <span class="number">88.62</span>, <span class="number">35.54</span>, <span class="number">52.45</span>, <span class="number">45.73</span>, <span class="number">88.42</span>, <span class="number">14.9</span>, <span class="number">33.6</span> &#125;;</span><br><span class="line">            <span class="keyword">this</span>.cht4.Series[<span class="number">0</span>].Points.DataBindXY(xValues, yValues);</span><br><span class="line">            <span class="keyword">this</span>.cht4.Series[<span class="number">1</span>].Points.DataBindY(y2);</span><br><span class="line">            <span class="keyword">this</span>.cht4.Series[<span class="number">2</span>].Points.DataBindY(y3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置X轴显示间隔为1,X轴数据比较多的时候比较有用  </span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Interval = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//设置XY轴标题的名称所在位置位远  </span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.TitleAlignment = StringAlignment.Near;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; cht4.Series[<span class="number">2</span>].Points.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                cht4.Series[<span class="number">2</span>].Points[i].MarkerStyle = MarkerStyle.Circle;<span class="comment">//设置折点的风格     </span></span><br><span class="line">                cht4.Series[<span class="number">2</span>].Points[i].MarkerColor = Color.Red;<span class="comment">//设置seires中折点的颜色   </span></span><br><span class="line">            <span class="comment">//    cht4.Series[1].Points[i].MarkerStyle = MarkerStyle.Square;//设置折点的风格     </span></span><br><span class="line">            <span class="comment">//    cht4.Series[1].Points[i].MarkerColor = Color.Blue;//设置seires中折点的颜色  </span></span><br><span class="line">            <span class="comment">//    cht4.Series[2].Points[i].MarkerStyle = MarkerStyle.Square;//设置折点的风格     </span></span><br><span class="line">            <span class="comment">//    cht4.Series[2].Points[i].MarkerColor = Color.Green;//设置seires中折点的颜色  </span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; cht4.Series.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; cht4.Series[i].Points.Count; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    cht4.Series[i].Points[j].Label = <span class="string">&quot; &quot;</span>;</span><br><span class="line">                    <span class="comment">//cht4.Series[i].Points[j].LabelToolTip = &quot;string.Empty&quot;;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//cht4.ImageType = ChartImageType.Jpeg;</span></span><br><span class="line">            <span class="comment">//反锯齿  </span></span><br><span class="line">            cht4.AntiAliasing = AntiAliasingStyles.All;</span><br><span class="line">            <span class="comment">//调色板 磨沙:SemiTransparent  </span></span><br><span class="line">            cht4.Palette = ChartColorPalette.BrightPastel;</span><br><span class="line"></span><br><span class="line">            cht4.Series[<span class="number">0</span>].ChartType = SeriesChartType.Radar;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].ChartType = SeriesChartType.Radar;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].ChartType = SeriesChartType.Radar;</span><br><span class="line">            cht4.Width = <span class="number">500</span>;</span><br><span class="line">            cht4.Height = <span class="number">350</span>;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="comment">/* </span></span><br><span class="line"><span class="comment">                 #VALX      显示当前图例的X轴的对应文本(或数据) </span></span><br><span class="line"><span class="comment">                 #VAL, #VALY,  显示当前图例的Y轴的对应文本(或数据) </span></span><br><span class="line"><span class="comment">                 #VALY2, #VALY3, 显示当前图例的辅助Y轴的对应文本(或数据) </span></span><br><span class="line"><span class="comment">                 #SER:      显示当前图例的名称 </span></span><br><span class="line"><span class="comment">                 #LABEL       显示当前图例的标签文本 </span></span><br><span class="line"><span class="comment">                 #INDEX      显示当前图例的索引 </span></span><br><span class="line"><span class="comment">                 #PERCENT       显示当前图例的所占的百分比 </span></span><br><span class="line"><span class="comment">                 #TOTAL      总数量 </span></span><br><span class="line"><span class="comment">                 #LEGENDTEXT      图例文本 </span></span><br><span class="line"><span class="comment">                 */</span>  </span><br><span class="line">                    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_42832272/article/details/116593002">C#应用6——chart数据显示(柱状图、饼图、横向柱状图、雷达图)</a></li><li><a href="https://blog.csdn.net/qq_38628970/article/details/91041879">C#chart控件绘制折线图、柱状图、饼图、雷达图</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> 图表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之九（Chart鼠标位置浮动显示坐标值）</title>
      <link href="/posts/3865063700.html"/>
      <url>/posts/3865063700.html</url>
      
        <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img-blog.csdnimg.cn/2021040613561561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxMTA4MTg0,size_16,color_FFFFFF,t_70"><h1 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h1><h2 id="1、找到chart控件的series属性"><a href="#1、找到chart控件的series属性" class="headerlink" title="1、找到chart控件的series属性"></a>1、找到chart控件的series属性</h2><img src="https://img-blog.csdnimg.cn/20210406135830476.png"><h2 id="2、-将集合下isxvayleindexed属性设置为true"><a href="#2、-将集合下isxvayleindexed属性设置为true" class="headerlink" title="2、 将集合下isxvayleindexed属性设置为true"></a>2、 将集合下isxvayleindexed属性设置为true</h2><blockquote><p>也可以直接使用代码在初始化时实现实现</p></blockquote><img src="https://img-blog.csdnimg.cn/20210406135903819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxMTA4MTg0,size_16,color_FFFFFF,t_70"><h2 id="3、在鼠标移动事件下添加以下代码"><a href="#3、在鼠标移动事件下添加以下代码" class="headerlink" title="3、在鼠标移动事件下添加以下代码"></a>3、在鼠标移动事件下添加以下代码</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chart1.Series[<span class="number">0</span>].ToolTip = “X：<span class="meta">#VALX\nY：#VALY”;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_51108184/article/details/115459335">C#_chart 控件曲线坐标值，根据鼠标移动浮动显示(六)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
            <tag> 鼠标 </tag>
            
            <tag> 坐标值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之八（Chart下鼠标滚轮放大缩小及平移）</title>
      <link href="/posts/3201193844.html"/>
      <url>/posts/3201193844.html</url>
      
        <content type="html"><![CDATA[<h1 id="放大缩小"><a href="#放大缩小" class="headerlink" title="放大缩小"></a>放大缩小</h1><h2 id="使用一（这个正常使用）"><a href="#使用一（这个正常使用）" class="headerlink" title="使用一（这个正常使用）"></a>使用一（这个正常使用）</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">this</span>.chart1.MouseWheel += <span class="keyword">new</span> System.Windows.Forms.MouseEventHandler(<span class="keyword">this</span>.chart1_MouseWheel);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//鼠标向上滚的Delta值是120，向下是-120</span></span><br><span class="line">    <span class="keyword">if</span>(e.Delta == <span class="number">120</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size /= <span class="number">2</span>;<span class="comment">//每页显示的点数除以2实现放大效果</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = chart1.Series[<span class="number">0</span>].Points.Count/<span class="number">2</span>;<span class="comment">//首次滚动时size为NaN</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (e.Delta == <span class="number">-120</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size *= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = chart1.Series[<span class="number">0</span>].Points.Count * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="放大缩小二"><a href="#放大缩小二" class="headerlink" title="放大缩小二"></a>放大缩小二</h2><blockquote><p>添加鼠标滚轮事件</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.chart1.MouseWheel += <span class="keyword">new</span> System.Windows.Forms.MouseEventHandler(<span class="keyword">this</span>.chart1_MouseWheel);</span><br></pre></td></tr></table></figure><blockquote><p>实现鼠标滚轮事件</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 实验发现鼠标滚轮滚动一圈时e.Delta = 120，正反转对应正负120</span></span><br><span class="line"><span class="keyword">if</span> (chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size &gt; <span class="number">0</span>) <span class="comment">// 防止越过左边界</span></span><br><span class="line">&#123;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size += (e.Delta / <span class="number">120</span>); <span class="comment">// 每次缩放1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(e.Delta &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size += (e.Delta / <span class="number">120</span>); <span class="comment">// 每次缩放1</span></span><br><span class="line">&#125;           </span><br><span class="line">&#125;     </span><br></pre></td></tr></table></figure><h1 id="左右平移"><a href="#左右平移" class="headerlink" title="左右平移"></a>左右平移</h1><h2 id="平移使用一（这个正常使用）"><a href="#平移使用一（这个正常使用）" class="headerlink" title="平移使用一（这个正常使用）"></a>平移使用一（这个正常使用）</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> chartBeforePoint = <span class="number">0</span>; <span class="comment">// 用于记录鼠标上次移动的点，用于判断是左移还是右移</span></span><br><span class="line"><span class="built_in">bool</span> chartFlag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    chartBeforePoint = <span class="number">0</span>;</span><br><span class="line">    chartFlag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    chartFlag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (chartFlag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//e.x代表的是当前点</span></span><br><span class="line">        <span class="keyword">if</span> (chartBeforePoint != <span class="number">0</span> &amp;&amp; e.X - chartBeforePoint &gt; <span class="number">0</span>)<span class="comment">//往右移动了</span></span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position += <span class="number">1</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chartBeforePoint != <span class="number">0</span> &amp;&amp; e.X - chartBeforePoint &lt; <span class="number">0</span>)<span class="comment">//往左移动了</span></span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position -= <span class="number">1</span>;</span><br><span class="line">        chartBeforePoint = e.X;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="平移使用二"><a href="#平移使用二" class="headerlink" title="平移使用二"></a>平移使用二</h2><blockquote><p>初始化有关参数</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义两个全局变量</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">bool</span> isMouseDown = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> lastMove = <span class="number">0</span>; <span class="comment">// 用于记录鼠标上次移动的点，用于判断是左移还是右移</span></span><br><span class="line"><span class="comment">// 初始化ScaleView，可根据首次出现在chart中的数据点数修改合适的值</span></span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = <span class="number">5</span>;</span><br><span class="line"><span class="comment">// 设置不显示chart自带的滚动条</span></span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.Enabled = <span class="literal">false</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisY.ScrollBar.Enabled = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 注意不要开启X轴游标，默认不开启，如下设置false或者不设置下列参数</span></span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserEnabled = <span class="literal">false</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.AutoScroll = <span class="literal">false</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserSelectionEnabled = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><blockquote><p>添加鼠标按下、弹起和移动事件</p></blockquote><ul><li>上述事件在chart控件中均自带，直接添加即可，事件代码如下：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 鼠标按下事件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">lastMove  = <span class="number">0</span>;</span><br><span class="line">    isMouseDown = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 鼠标弹起事件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    isMouseDown = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 鼠标移动事件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isMouseDown)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// 可更改（交换）如下加减1或if条件来设置鼠标移动时曲线移动方向</span></span><br><span class="line">        <span class="keyword">if</span>(lastMove != <span class="number">0</span> &amp;&amp; e.X - lastMove &gt; <span class="number">0</span>)</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position += <span class="number">1</span>;  <span class="comment">// 每次移动1</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(lastMove != <span class="number">0</span> &amp;&amp; e.X - lastMove &lt; <span class="number">0</span>)</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position -= <span class="number">1</span>; <span class="comment">// 每次移动1</span></span><br><span class="line">        lastMove = e.X;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终效果如下，图片前面黑呼呼的为控制台输出，似乎有点看不清（可忽略），可观察到鼠标滚轮的变化。</p><img src="https://img.jbzj.com/file_images/article/202206/202206280925299.gif"><h1 id="拓展chart（如何简单使用Chart图表）"><a href="#拓展chart（如何简单使用Chart图表）" class="headerlink" title="拓展chart（如何简单使用Chart图表）"></a>拓展chart（如何简单使用Chart图表）</h1><p>Chart控件可以用来绘制波形图、柱状图、饼图、折线图等，用来进行数据表现是很不错的，现在简单说一下这个控件的使用方法</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><img src="https://img.jbzj.com/file_images/article/202206/2022062809292610.png"><blockquote><p>我们首先要加载Chart控件</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292611.png"><blockquote><p>然后打开控件的属性窗口</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292612.jpg"><img src="https://img.jbzj.com/file_images/article/202206/2022062809292613.png"><p>在这个窗口里面我们可以修改曲线的名称，名称在<strong>【数据》Name】</strong>里面修改</p><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><blockquote><p>XValueType是X轴的数据类型，Y同理，这里我们选Time，可以随时间改变</p></blockquote><h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><blockquote><p>ChartType是图表的类型，我们可以选出我们想要用的类型，这里选曲线</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292614.png"><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><p>Color可以选择曲线的颜色，这里我选了红色</p><p>左边的成员 框，是我们要显示的曲线，可以添加多个</p><p><strong>其他属性如果有需要自行修改，修改好之后确定，回到窗口设计界面</strong></p><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><blockquote><p>在工具箱添加Timer</p></blockquote><img  src="https://img.jbzj.com/file_images/article/202206/2022062809292615.png"><blockquote><p>在Timer的事件窗口双击时钟事件</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292616.png"><p><strong>代码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            timer1.Enabled = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.AddY(cnt*cnt);</span><br><span class="line">            label1.Text = cnt.ToString();</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>cnt是个自变量，曲线显示的是cnt为底的2次指数曲线</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/GoldenLionKing/article/details/125404813">C#Chart使用鼠标滚轮放大，缩小，平移曲线</a></li><li><a href="https://www.jb51.net/article/253223.htm">C# Chart折线图使用鼠标滚轮放大、缩小和平移曲线方式</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#控件DataGridView之一（使用各种数据源填充表格）</title>
      <link href="/posts/3132353851.html"/>
      <url>/posts/3132353851.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>C#中的表格控件只有一个，那就是datagridview，不像QT中可以用QTableview，QTableWidget。新手拿到datagridview的第一个问题就是数据从哪里来？难道从设计器中一个个手动输入，到时候要变怎办？所以，我们这里说说DataGridView的手动操作。</p></blockquote><h1 id="一、手动操作DataGridView"><a href="#一、手动操作DataGridView" class="headerlink" title="一、手动操作DataGridView"></a>一、手动操作DataGridView</h1><p><strong>这里我们是没有数据源的纯view控件的操作，后面第二部分我们再讲有数据源的操作。</strong></p><h2 id="1、初步尝试"><a href="#1、初步尝试" class="headerlink" title="1、初步尝试"></a>1、初步尝试</h2><p>下面的代码声明并初始化完成列DataGridViewColumn、行DataGridViewRow 、单元格DataGridViewCell 对象。<br>但这里需要注意的是，<strong>DataGridView必须先有列后有行，最后才是单元格cell</strong>，初始化完成后你就可以直接将他们加入DataGridView的实例中了，如下代码dataGridView1就是在设计器的工具箱中直接拖放到窗体中的DataGridView控件。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DataGridViewColumn col = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">DataGridViewRow row = <span class="keyword">new</span> DataGridViewRow();</span><br><span class="line">DataGridViewCell cell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">cell.Value = <span class="string">&quot;item&quot;</span>;</span><br><span class="line">col.CellTemplate = cell; <span class="comment">//设置单元格格式模板</span></span><br><span class="line">col.HeaderText = <span class="string">&quot;column01&quot;</span>;</span><br><span class="line">dataGridView1.Columns.Add(col);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><img src="https://img-blog.csdnimg.cn/337ed5f6ffd24463812ba978f7350c85.png"><blockquote><p>虽然，只有一行一列一个单元格，但如果我们搞懂了原理，那后面批量加入我们需要的行列和单元格就容易了。</p></blockquote><p><strong>这里了重点强调一下，加入的顺序应该是：</strong></p><p>1、初始化列<br>2、初始化行<br>3、初始化单元格<br>4、将列column加入DataGridView<br>5、将行row加入列DataGridView<br>6、将单元格cell加入行row</p><p><strong>注意，一个列必须设定它自己这一列的单元格格式母板，否则就会报错。如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cell= <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line"> col.CellTemplate = cell;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、批量加入"><a href="#2、批量加入" class="headerlink" title="2、批量加入"></a>2、批量加入</h2><p>批量加入无非就是加入了一些循环，过程和单个单元格的加入几乎没有差别。<br>需要注意的是<strong>每次加入的行或者列或者单元格都必须是一个新对象，也就是要new一个新的对象</strong>，否则就不能成功加入。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DataGridViewColumn col;</span><br><span class="line">DataGridViewRow row;</span><br><span class="line">DataGridViewCell cell= <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">        </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    col = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    col.HeaderText = <span class="string">&quot;col&quot;</span> + i.ToString();       </span><br><span class="line">    col.CellTemplate = cell;</span><br><span class="line">    dataGridView1.Columns.Add(col);</span><br><span class="line">    &#125;</span><br><span class="line">           </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;<span class="number">20</span>; i++)</span><br><span class="line"> &#123;</span><br><span class="line">     row = <span class="keyword">new</span> DataGridViewRow(); </span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">     &#123;</span><br><span class="line">        cell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">        cell.Value = <span class="string">&quot;item&quot;</span> + i.ToString() + j.ToString();</span><br><span class="line">        row.Cells.Add(cell);</span><br><span class="line">     &#125;</span><br><span class="line">     dataGridView1.Rows.Add(row);</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行的效果如下：</strong></p><img src="https://img-blog.csdnimg.cn/2965eed76ab949bca3c5df56497842e9.png"><blockquote><p>这里，我们将加入行和加入单元格同时进行的，你也可以加入行和加入列完成后，单独对单元格进行赋值</p></blockquote><p><strong>代码如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line"> &#123;</span><br><span class="line">     row = <span class="keyword">new</span> DataGridViewRow();</span><br><span class="line">     <span class="comment">//for (int j = 0; j &lt; 6; j++)</span></span><br><span class="line">     <span class="comment">//&#123;</span></span><br><span class="line">     <span class="comment">//    cell = new DataGridViewTextBoxCell();</span></span><br><span class="line">     <span class="comment">//    cell.Value = &quot;item&quot; + i.ToString() + j.ToString();</span></span><br><span class="line">     <span class="comment">//    row.Cells.Add(cell);</span></span><br><span class="line">     <span class="comment">//&#125;</span></span><br><span class="line">     dataGridView1.Rows.Add(row);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">20</span>; j++)</span><br><span class="line">         dataGridView1.Rows[j].Cells[i].Value = <span class="string">&quot;item&quot;</span> + j.ToString() + i.ToString();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、带数据的行的加入rows-Add"><a href="#3、带数据的行的加入rows-Add" class="headerlink" title="3、带数据的行的加入rows.Add"></a>3、带数据的行的加入rows.Add</h2><p>行的加入我们利用add方法来完成,它有三个重载，所以我们可以用多种方式加入，前面我们就已经使用过了它的最常见的重载，直接在add的参数中加入row<br>如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.Rows.Add(row);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这里我们使用数组加入也很方便：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//添加行</span></span><br><span class="line"> <span class="built_in">string</span>[] row0 = &#123; <span class="string">&quot;Jack&quot;</span>, <span class="string">&quot;1880&quot;</span>, <span class="string">&quot;2022-12-5&quot;</span>,<span class="string">&quot;12.5&quot;</span>,<span class="string">&quot;true&quot;</span> &#125;;</span><br><span class="line"> <span class="built_in">string</span>[] row1 = &#123; <span class="string">&quot;Smith&quot;</span>, <span class="string">&quot;2208&quot;</span>, <span class="string">&quot;2022-02-15&quot;</span>, <span class="string">&quot;538&quot;</span>, <span class="string">&quot;true&quot;</span> &#125;;</span><br><span class="line"> dataGridView1.Rows.Add(row0);</span><br><span class="line"> dataGridView1.Rows.Add(row1);</span><br><span class="line"> dataGridView1.Rows.Add(<span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;Tome&quot;</span>, <span class="string">&quot;1208&quot;</span>, <span class="string">&quot;2012-2-15&quot;</span>, <span class="string">&quot;1.2&quot;</span>, <span class="string">&quot;true&quot;</span> &#125;);</span><br><span class="line"> <span class="comment">//list转数组后加入</span></span><br><span class="line"> List&lt;<span class="built_in">string</span>&gt; values = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"> values.Add(<span class="string">&quot;Jone&quot;</span>);</span><br><span class="line"> values.Add(<span class="string">&quot;1222&quot;</span>);      </span><br><span class="line"> values.Add(<span class="string">&quot;2022-05-12&quot;</span>);</span><br><span class="line"> values.Add(<span class="string">&quot;23.2&quot;</span>);</span><br><span class="line"> values.Add(<span class="string">&quot;false&quot;</span>);</span><br><span class="line"> dataGridView1.Rows.Add(values.ToArray());</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img  src="https://img-blog.csdnimg.cn/c494a8f1f3ce4a38b4b39283fc0e35c0.png"><blockquote><p>还有一个重载是add(int )，这个专门从来加入空行，比如加入1000个空行，那就直接在参数中输入1000：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.Rows.Add(<span class="number">1000</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二、数据来源DataSource"><a href="#二、数据来源DataSource" class="headerlink" title="二、数据来源DataSource"></a>二、数据来源DataSource</h1><p>数据来源可以是自己从数据库中获取，也可以自己构建一个DataTable，也可以读入字符流或者字符列表等。这里分别演示。<br><strong>DataSource它的特点是：任何实现IListSource接口的类都可以作为它的右值。</strong></p><h2 id="1、来自列表List"><a href="#1、来自列表List" class="headerlink" title="1、来自列表List"></a>1、来自列表List</h2><p>我们将列表中装入一个对象，当然，这个对象有多少特征，我们就可以显示在表格中显示多少列</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Student&gt; students = <span class="keyword">new</span> List&lt;Student&gt;()</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">new</span> Student() &#123;Name=<span class="string">&quot;John&quot;</span>, Gender=<span class="literal">true</span>, Birthday=<span class="keyword">new</span> DateTime(<span class="number">2012</span>, <span class="number">12</span>, <span class="number">4</span>),Age= <span class="number">20</span>, Hight=<span class="number">15</span>&#125;,</span><br><span class="line">     <span class="keyword">new</span> Student() &#123;Name=<span class="string">&quot;Jack&quot;</span>,  Gender=<span class="literal">true</span>, Birthday=<span class="keyword">new</span> DateTime(<span class="number">2022</span>, <span class="number">10</span>, <span class="number">12</span>), Age=<span class="number">10</span>, Hight=<span class="number">125</span>&#125;</span><br><span class="line"> &#125;;</span><br><span class="line"> dataGridView1.DataSource = students.Select(x =&gt; <span class="keyword">new</span> &#123; x.Name, x.Gender, x.Birthday, x.Age, x.Hight &#125;).ToList();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/c0f27acc07df4cbda3a912d49cfdbdfe.png"><h2 id="2、来自自定义DataTable"><a href="#2、来自自定义DataTable" class="headerlink" title="2、来自自定义DataTable"></a>2、来自自定义DataTable</h2><p>既然是我们手动自定义的一个表，那么我们就必须给它定义行列和单元格内容。这的Datatable只是提供数据，与视图View无关，那么它的责任就是组织好数据给视图来显示，这在MVC中就属于model层。<br>下面的代码我们初始化了一个DataTable对象后就可以利用columns.add增加列了，增加完列我们用DataTable的newRow（）方法直接增加行，没有它法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col1&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col2&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col3&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col4&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col5&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col6&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dt.Rows.Add(dt.NewRow());</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">            dt.Rows[i][j]=<span class="string">&quot;item&quot;</span> + j.ToString() + i.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">dataGridView1.DataSource =dt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们上面所有的行，我们使用的格式都是String的，便于统一用循环添加，我们我们想要添加其他的格式的数据可以这样添加：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line"></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col1&quot;</span>, <span class="keyword">typeof</span>(System.Int32));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col2&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col3&quot;</span>, <span class="keyword">typeof</span>(System.DateTime));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col4&quot;</span>, <span class="keyword">typeof</span>(System.Boolean));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col5&quot;</span>, <span class="keyword">typeof</span>(System.Int16));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col6&quot;</span>, <span class="keyword">typeof</span>(System.Decimal));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于赋值，使用<strong>二维数组</strong>的方式直接给单元格赋值即可：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dt.Rows[i][j]=<span class="string">&quot;item&quot;</span> + j.ToString() + i.ToString();</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>最后，我们给DataGridView实例指定数据源DataSource 属性即可，这里我们指定为我们刚刚手动建立的DataTable。</p></blockquote><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/9e71c3ccb4cf4a34a6fed006856f2fe7.png"><p>看起来，和前面我们直接对DataGridView手动操作得到的表格没有什么两样，但实际我们此时已经使用了<strong>MVC</strong>的概念了，<strong>一个负责的是视图一个负责的是数据</strong>。</p><h2 id="3、动态建立表格"><a href="#3、动态建立表格" class="headerlink" title="3、动态建立表格"></a>3、动态建立表格</h2><ul><li>我们首先定义两个List分别存放表格的字段类型和值</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个表格的字段类型</span></span><br><span class="line">List&lt;<span class="built_in">string</span>&gt; typeDef = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.Int32&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.String&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.DateTime&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.Decimal&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.Boolean&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//表格字段内容</span></span><br><span class="line">List&lt;<span class="built_in">string</span>&gt; values = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">values.Add(<span class="string">&quot;1222&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;Jone&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;2022-05-12&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;23.2&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;false&quot;</span>);</span><br><span class="line">dataGridView1.DataSource = initialDataTable(typeDef,values);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接下来，我们定义一个函数，专门来建立一个表格</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataTable <span class="title">initialDataTable</span>(<span class="params">List&lt;String&gt; strlist, List&lt;String&gt; vluelist</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line"></span><br><span class="line">          DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line"></span><br><span class="line">          DataColumn col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; strlist.Count; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">              col.DataType = System.Type.GetType(strlist[i]);</span><br><span class="line">              dt.Columns.Add(col);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              dt.Rows.Add(dt.NewRow());</span><br><span class="line">              <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; strlist.Count; j++)</span><br><span class="line">                  dt.Rows[i][j] = vluelist[j];</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> dt;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/bd3810e2830f46a79bc1b7fd9dae0355.png"><h2 id="4、类和BindingList"><a href="#4、类和BindingList" class="headerlink" title="4、类和BindingList"></a>4、类和BindingList</h2><p>类的特征属性直接显示在表格里可以通过BindingList来实现</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BindingList&lt;Student&gt; list2 = <span class="keyword">new</span> BindingList&lt;Student&gt;();</span><br><span class="line">list2.Add(<span class="keyword">new</span> Student(<span class="string">&quot;John&quot;</span>, <span class="literal">true</span>, <span class="keyword">new</span> DateTime(<span class="number">2012</span>, <span class="number">12</span>, <span class="number">4</span>), <span class="number">20</span>, <span class="number">15</span>));</span><br><span class="line">list2.Add(<span class="keyword">new</span> Student(<span class="string">&quot;Jack&quot;</span>, <span class="literal">true</span>, <span class="keyword">new</span> DateTime(<span class="number">2022</span>, <span class="number">10</span>, <span class="number">12</span>), <span class="number">10</span>, <span class="number">125</span>));</span><br><span class="line">list2.Add(<span class="keyword">new</span> Student(<span class="string">&quot;Tomy&quot;</span>, <span class="literal">true</span>, <span class="keyword">new</span> DateTime(<span class="number">1992</span>, <span class="number">3</span>, <span class="number">5</span>), <span class="number">30</span>, <span class="number">5</span>));</span><br><span class="line">dataGridView1.DataSource= list2;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/07f441c81666489ea131b094f28cf8f0.png"><h2 id="5、来自文件字符流"><a href="#5、来自文件字符流" class="headerlink" title="5、来自文件字符流"></a>5、来自文件字符流</h2><blockquote><p>有了上面的基础后，我们就可以建立一个导入文本文件的表格，并且可以自动识别文本文件中的字段类型。</p></blockquote><p><strong>我们首先来看看效果：</strong></p><img src="https://img-blog.csdnimg.cn/65cc89759bc442cb83eb30707ad9cc7c.gif#pic_center"><p>导入文本表格要做好文本字段之间的分割Split，这里不详说了，首先要从读入的文本流中取出表格的各列的名称和类型，然后再取出内容，然后分别形成数组</p><p><strong>关键代码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">StreamReader sr = <span class="keyword">new</span> StreamReader(filepath, Encoding.UTF8);</span><br><span class="line">        typetext = sr.ReadLine();</span><br><span class="line">        headtext = sr.ReadLine();</span><br><span class="line">        <span class="built_in">string</span>[] typer = typetext.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        ArrayList content = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="comment">//开始读文本中的每条记录的内容</span></span><br><span class="line">        <span class="keyword">while</span> ((str=sr.ReadLine()) != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            content.Add(str);</span><br><span class="line">            Console.WriteLine(str); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义一个表格的字段类型</span></span><br><span class="line">        List&lt;<span class="built_in">string</span>&gt; typeDef = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; typer.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            typeDef.Add(<span class="string">&quot;System.&quot;</span> + typer[i].ToString());</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//表格字段内容</span></span><br><span class="line">        ArrayList head = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="built_in">string</span>[] header = headtext.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; header.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            head.Add( header[i].ToString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将上述代码得到的三个列表传入下面的DataTable处理函数中即可得到DataGridView的DataSource需要的DataTable</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataTable <span class="title">initialDataTable</span>(<span class="params">List&lt;String&gt; typelist, ArrayList headerlist,ArrayList contentarry</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line"></span><br><span class="line">     DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">     DataColumn col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; headerlist.Count; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">         col.ColumnName = headerlist[i].ToString();</span><br><span class="line">         col.DataType = System.Type.GetType(typelist[i]);</span><br><span class="line">         dt.Columns.Add(col);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">// 加入内容</span></span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; contentarry.Count; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         dt.Rows.Add(contentarry[i].ToString().Split(<span class="string">&#x27;,&#x27;</span>));               </span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> dt;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>可以参考的文本：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String,Boolean,Int32,DateTime,Int32,Int32</span><br><span class="line">Name,Gender,ID,Birthday,Score1,Score2</span><br><span class="line">John, <span class="literal">true</span>,<span class="number">1908</span>, <span class="number">2012</span><span class="number">-12</span><span class="number">-4</span>, <span class="number">20</span>, <span class="number">16</span></span><br><span class="line">Jack, false2015, <span class="number">2022</span><span class="number">-10</span><span class="number">-12</span>, <span class="number">10</span>, <span class="number">125</span></span><br><span class="line">Tomy, <span class="literal">true</span>, <span class="number">2047</span>,<span class="number">1992</span><span class="number">-3</span><span class="number">-5</span>, <span class="number">30</span>, <span class="number">15</span>,</span><br><span class="line">Mophy, <span class="literal">true</span>, <span class="number">1147</span>,<span class="number">2014</span><span class="number">-6</span><span class="number">-3</span>, <span class="number">40</span>, <span class="number">24</span></span><br><span class="line">Tollor, <span class="literal">false</span>,<span class="number">2347</span>,<span class="number">2102</span><span class="number">-2</span><span class="number">-15</span>, <span class="number">50</span>, <span class="number">55</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6、来自数据库"><a href="#6、来自数据库" class="headerlink" title="6、来自数据库"></a>6、来自数据库</h2><p>如果有数据库，那是最好不过的啦，直接将查询所得的表赋值给DataGridView的DataSource即可。<br>这里我们使用sqlite，事先要安装上sqlite，到Nuget中最快方式获得。</p><img sr="https://img-blog.csdnimg.cn/e3f1206fe8be43ac94beb10a0c556e13.png"><p>有了sqlite的环境，我们可以开始组织数据库读取了。这里我们调用的句子非常少，其实这是直接通过SQLiteDataAdapter 填充了一个新建的DataTable而已。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定数据库地址（我这里就放在debug目录下）</span></span><br><span class="line"><span class="built_in">string</span> constr = <span class="string">&quot;Data Source=tbdb.db;&quot;</span>;</span><br><span class="line"> <span class="comment">//设置SQL查询语句</span></span><br><span class="line"><span class="built_in">string</span> sql = <span class="string">&quot;select * from TestTab&quot;</span>;</span><br><span class="line">SQLiteDataAdapter mAdapter = <span class="keyword">new</span> SQLiteDataAdapter(sql, constr);</span><br><span class="line">DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">mAdapter.Fill(dt);</span><br><span class="line">dataGridView1.DataSource = dt;           </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>数据库中的表：</strong></p><img src="https://img-blog.csdnimg.cn/958629c401594f1eb86d70e111f0d952.png"><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/4efdbc5056d34330a1a52ea222f400f2.png"><h2 id="7、用到的student类"><a href="#7、用到的student类" class="headerlink" title="7、用到的student类"></a>7、用到的student类</h2><p><strong>上面用到的student类，这里列出来省得大家重新编写：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> _name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">bool</span> _gender =<span class="literal">false</span>;</span><br><span class="line">    DateTime _birthday;</span><br><span class="line">    <span class="built_in">int</span> _age;</span><br><span class="line">    <span class="built_in">decimal</span> _hight;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> School;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        School = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">Student</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">bool</span> gender, DateTime birthday, <span class="built_in">int</span> age, <span class="built_in">decimal</span> hight</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Name = name;</span><br><span class="line">        Gender = gender;</span><br><span class="line">        Birthday = birthday;</span><br><span class="line">        Age = age;</span><br><span class="line">        Hight = hight;</span><br><span class="line">        School = <span class="string">&quot;&quot;</span>;     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name&#123;<span class="keyword">get</span> &#123; <span class="keyword">return</span> _name; &#125;<span class="keyword">set</span> &#123; _name = <span class="keyword">value</span>; &#125;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> Gender&#123;<span class="keyword">get</span> &#123; <span class="keyword">return</span> _gender; &#125; <span class="keyword">set</span> &#123; _gender = <span class="keyword">value</span>; &#125;&#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime Birthday&#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> _birthday; &#125; <span class="keyword">set</span> &#123; _birthday = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> _age; &#125; <span class="keyword">set</span> &#123; _age = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">decimal</span> Hight &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> _hight; &#125; <span class="keyword">set</span> &#123; _hight = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">int</span>&gt; Scores &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>其实关于DataGridView的操作还有很多，控件中最复杂的就属它了，所以如果说你要重新编写一个自定义控件，它也是最复杂的，这里我们只是讲了表格的数据填充，后面一篇我们会讲到样式设置和编辑，有时间我们还可以讲讲自定义DataGridView的编写。感兴趣的童鞋可以继续关注。</p><h1 id="其他补充"><a href="#其他补充" class="headerlink" title="其他补充"></a>其他补充</h1><h2 id="datagridview默认选中第一行"><a href="#datagridview默认选中第一行" class="headerlink" title="datagridview默认选中第一行"></a>datagridview默认选中第一行</h2><p>设置datagridview在加载时默认选中第一行：<br>在需要为datagridview加载数据的地方添加代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.dataGridView1.Rows[<span class="number">0</span>].Selected = <span class="literal">true</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deplane_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">          </span><br><span class="line">           <span class="comment">// <span class="doctag">TODO:</span> 这行代码将数据加载到表“charge_sysDataSet.OnLine_Info”中。您可以根据需要移动或删除它。</span></span><br><span class="line">           <span class="keyword">this</span>.onLine_InfoTableAdapter.Fill(<span class="keyword">this</span>.charge_sysDataSet.OnLine_Info);</span><br><span class="line">           dataGridView1.AllowUserToAddRows = <span class="literal">false</span>;  <span class="comment">//去除空白行</span></span><br><span class="line">         dataGridView1.Rows[<span class="number">0</span>].Selected = <span class="literal">true</span>;<span class="comment">//默认选中第一行</span></span><br><span class="line">       &#125;在这里插入代码片</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C-向datagridview添加一行，并使他位于第一行"><a href="#C-向datagridview添加一行，并使他位于第一行" class="headerlink" title="C# 向datagridview添加一行，并使他位于第一行"></a>C# 向datagridview添加一行，并使他位于第一行</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datagridview.Rows.Insert(<span class="number">0</span>, row);</span><br></pre></td></tr></table></figure><h2 id="点击DataGridView时获取当前单元格信息-这个也很有用！"><a href="#点击DataGridView时获取当前单元格信息-这个也很有用！" class="headerlink" title="点击DataGridView时获取当前单元格信息(这个也很有用！)"></a>点击DataGridView时获取当前单元格信息(这个也很有用！)</h2><blockquote><p>在使用DataGridView控件时， 表中信息有时需要提取，因此，需使用获取坐标的方法，和获取内容的方法。</p></blockquote><img src="https://img-blog.csdnimg.cn/20eb88032eb145499a876252c28777c1.bmp"><img src="https://img-blog.csdnimg.cn/fd1b2809a6b346c3a9d674914cc526d2.bmp"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Test_DataGridView</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            dataGridView1.DataSource = Source();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//数据表资源</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> DataTable <span class="title">Source</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DataTable mydt = <span class="keyword">new</span> DataTable();</span><br><span class="line">            mydt.Columns.Add(<span class="string">&quot;姓名&quot;</span>);</span><br><span class="line">            mydt.Columns.Add(<span class="string">&quot;年龄&quot;</span>);</span><br><span class="line">            mydt.Columns.Add(<span class="string">&quot;分数&quot;</span>);</span><br><span class="line">            String[,] str = <span class="keyword">new</span> String[,] &#123; &#123; <span class="string">&quot;张三&quot;</span>, <span class="string">&quot;21&quot;</span>, <span class="string">&quot;90&quot;</span> &#125;, &#123; <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;22&quot;</span>, <span class="string">&quot;93&quot;</span> &#125;, &#123; <span class="string">&quot;王五&quot;</span>, <span class="string">&quot;23&quot;</span>, <span class="string">&quot;99&quot;</span> &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                DataRow dr = mydt.NewRow();</span><br><span class="line">                dr[<span class="number">0</span>] = str[i, <span class="number">0</span>];</span><br><span class="line">                dr[<span class="number">1</span>] = str[i, <span class="number">1</span>];</span><br><span class="line">                dr[<span class="number">2</span>] = str[i, <span class="number">2</span>];</span><br><span class="line">                mydt.Rows.Add(dr);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> mydt;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取单元格信息</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dataGridView1_CellClick</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取单元格坐标</span></span><br><span class="line">            <span class="built_in">int</span> col = dataGridView1.CurrentCellAddress.X + <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">int</span> row = dataGridView1.CurrentCellAddress.Y + <span class="number">1</span>;</span><br><span class="line">           </span><br><span class="line">            <span class="comment">//获取单元格内容</span></span><br><span class="line">            String content = dataGridView1.CurrentCell.Value.ToString();</span><br><span class="line"> </span><br><span class="line">            MessageBox.Show(<span class="string">&quot;行：&quot;</span> + row.ToString() + <span class="string">&quot;   列：&quot;</span> + col.ToString()+<span class="string">&quot;      内容：&quot;</span>+content);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在C-中将datagridview中的数据与图表绑定"><a href="#在C-中将datagridview中的数据与图表绑定" class="headerlink" title="在C#中将datagridview中的数据与图表绑定"></a>在C#中将datagridview中的数据与图表绑定</h2><p>我正在创建一个应用程序，它用于确定原始数据，并将这些原始数据值导入到datagridview中。<br>现在，我需要在图形表示中生成原始数据值。我有一个有多列的datgridview，我想用c#中的datagridview列值绘制图形&#x2F;图表。</p><p><strong>通过DataGridview对图表使用以下代码（未验证过，不知是否行）</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (DataGridViewRow row <span class="keyword">in</span> datagridview.Rows)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//chartBpComplaince.Series.Clear();</span></span><br><span class="line">                Series S = chartBpComplaince.Series.Add(row.Cells[<span class="number">2</span>].Value.ToString());</span><br><span class="line"></span><br><span class="line">                 S.Points.AddXY(row.Cells[<span class="number">4</span>].Value.ToString(), row.Cells[<span class="number">3</span>].Value.ToString());</span><br><span class="line">                 S.ChartType = SeriesChartType.Column;</span><br><span class="line">                 S.IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/haigear/article/details/128764698">C#手动操作DataGridView之——使用各种数据源填充表格实例</a></li><li><a href="https://blog.csdn.net/weixin_40486955/article/details/98071962">datagridview默认选中第一行方法</a></li><li><a href="https://blog.csdn.net/NickStudent/article/details/126142078">【C#语言】DataGridView获取当前单元格信息</a></li><li><a href="https://cloud.tencent.com/developer/ask/sof/100540628">如何在C#中将datagridview中的数据与图表绑定？</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> DataGridView </tag>
            
            <tag> 表格 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#二维数组</title>
      <link href="/posts/1818812067.html"/>
      <url>/posts/1818812067.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>在这篇文章中，我将会用示例讨论二维数组。做为文章的部分内容，我们会讨论：</p></blockquote><ol><li>什么是二维数组？</li><li>以示例解析矩形数组和交错数组。</li></ol><h1 id="什么是二维数组？"><a href="#什么是二维数组？" class="headerlink" title="什么是二维数组？"></a>什么是二维数组？</h1><p><strong>在C#中，以行和列的形式存储元素的数组称为二维数组。C#中，二维数组也叫多维数组，有两种类型。</strong></p><ol><li>矩形数组：行和列相等的数组叫做矩形数组。</li><li>行和列不相等的数组称为交错数组。</li></ol><h1 id="C-中的矩形数组"><a href="#C-中的矩形数组" class="headerlink" title="C#中的矩形数组"></a>C#中的矩形数组</h1><p><strong>让我们了解一下二维数组的语法，请看一下下面的图表</strong></p><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220710211342115-1542360066.png"><blockquote><p>让我们用示例来更好地理解一下矩形数组</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace _2DarrayDemo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span>[,] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arr)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)  <span class="comment">//0指的是一维</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)<span class="comment">//1指的是二维</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a += <span class="number">5</span>;</span><br><span class="line">                    arr[i, j] = a;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;i is &#123;0&#125;;j is &#123;1&#125;&quot;</span>,i,j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i,j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220711222856023-128846710.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace _2DarrayDemo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span>[,] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arr)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)  <span class="comment">//0指的是一维</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">2</span>); j++)<span class="comment">//如果将1修改为2，则会报错；</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a += <span class="number">5</span>;</span><br><span class="line">                    arr[i, j] = a;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;i is &#123;0&#125;;j is &#123;1&#125;&quot;</span>,i,j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i,j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220711223410656-1367845040.png"><p><strong>系统会提示“索引超出了数组界限”。</strong></p><blockquote><p><strong>在上面 的示例中，我们使用嵌套的for循环来分配二维数组元素。我们也可以在二维数组声明的时候给其赋值。</strong></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">TwoDimensionalArayDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//Assigning the array elements at the time of declaration</span></span><br><span class="line">            <span class="built_in">int</span>[,] arr = &#123;&#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>&#125;,</span><br><span class="line">                          &#123;<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>&#125;,</span><br><span class="line">                          &#123;<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>,<span class="number">34</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//printing values of array using for each loop</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arr)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//printing the values of array using nested for loop</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i, j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220711224311321-133638715.png"><h1 id="交错数组"><a href="#交错数组" class="headerlink" title="交错数组"></a>交错数组</h1><blockquote><p>这些也是二维数组，也将以行和列的形式存储数据。但是在这个交错的数组中，每一行的列大小是不同的。那就意味着如果第一行包含5列，第二行可能包含4列，而第三行可能包含10列。所以，你需要记住的一点就是，如果列的大小在每行发生变化，那么它就是一个交错数组。如果所有行中，列的大小保持不变，则它是一个矩形二维数组。</p></blockquote><p>在C#中，交错数组也叫做数组中的数组。这是因为在交错数组的情况下，每一行都是一维数组。因此，在C#中，具有不同列大小的多个一维数组组合形成了一个交错数组。</p><p>语法:  <type> [][] <name> &#x3D; new <type> [rows][];</p><p><strong>示例：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> [][] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>][];</span><br><span class="line"><span class="comment">//Or</span></span><br><span class="line"><span class="built_in">int</span> [][] arr = &#123;list of values&#125;;</span><br></pre></td></tr></table></figure><p>要在C#中声明交错数组，只需在声明时指定数组中所需要的行数即可。</p><p>示例如下：</p><p><strong>int [][] arr &#x3D; new int[4][];</strong></p><p><strong>在上面的数组声明中，我们指定在数组中需要4行。一旦你指定了你想要的数组的行数，那么你需要如下面所示那样用一维数组初始化每一行的列。</strong></p><p><strong>arr[0] &#x3D; new int[5]; &#x2F;&#x2F; we want five columns in the first row</strong><br><strong>arr[1] &#x3D; new int[6]; &#x2F;&#x2F; we want six columns in the first row</strong><br><strong>arr[2] &#x3D; new int[4]; &#x2F;&#x2F; we want four columns in the first row</strong><br><strong>arr[3] &#x3D; new int[5]; &#x2F;&#x2F; we want five columns in the first row</strong></p><p><strong>交错数组示例如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">TwoDimensionalArayDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span>[][] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>][];</span><br><span class="line"></span><br><span class="line">            arr[<span class="number">0</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">            arr[<span class="number">1</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">6</span>];</span><br><span class="line">            arr[<span class="number">2</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>];</span><br><span class="line">            arr[<span class="number">3</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;此处j值是&#123;0&#125;&quot;</span>,j);</span><br><span class="line">                    arr[i][j] = j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">int</span> x <span class="keyword">in</span> arr[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(x + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220714214431296-1013238939.png"><ul><li>在上面的例子中，我们通过使用嵌套的for循环来给交错数组的元素赋值。在交错数组定义的时候，也可以给交错数组赋值。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">TwoDimensionalArayDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// Assigning the values of the jagged array</span></span><br><span class="line">            <span class="comment">// at the time of its declaration</span></span><br><span class="line">            <span class="built_in">int</span>[][] arr = &#123;</span><br><span class="line">                            <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>]&#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>&#125;,</span><br><span class="line">                            <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>]&#123;<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>&#125;,</span><br><span class="line">                            <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>]&#123;<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>&#125;</span><br><span class="line">                           &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//printing the values of jagged array by using nested for loop</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//print the values of jagged array by using foreach loop within for loop</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">int</span> x <span class="keyword">in</span> arr[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(x + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220714215330744-1423859804.png"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/chenlight/p/16464106.html">C# 二维数组（2d Array）解析</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 数据结构 </category>
          
          <category> 数组 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 数组 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 二维数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 跨线程访问UI控件之二（操作UI的五种方法）</title>
      <link href="/posts/1599861562.html"/>
      <url>/posts/1599861562.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>经常因为需要在线程间操作UI而头疼，总结了一下，记录出来，以后方便查阅。<br>以下代码，展示在一个窗体内，线程接到消息后（当前时间字符串），使窗体的UI发生改变。分别使用五种不同的方法。</p></blockquote><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一:"></a>方法一:</h1><p><strong>通过设置窗体属性，取消线程间的安全检查。（最简单，最省事，也是最不负责任的一种）。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace winform线程间操作UI的五种方法</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">            Control.CheckForIllegalCrossThreadCalls = <span class="literal">false</span>;<span class="comment">//取消线程间的安全检查</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> bTest = <span class="literal">false</span>;      <span class="comment">//测试执行一次线程里面的函数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> sTip;</span><br><span class="line">        Thread thrRecv;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            thrRecv = <span class="keyword">new</span> Thread(ReceiveMessage);</span><br><span class="line">            thrRecv.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thrRecv.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReceiveMessage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (bTest)</span><br><span class="line">                &#123;</span><br><span class="line">                    sTip = System.DateTime.Now.ToString(<span class="string">&quot;yyyy-mm-dd HH:mm:ss&quot;</span>);</span><br><span class="line">                    textBox1.Text = sTip;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            bTest = checkBox1.Checked ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosing</span>(<span class="params"><span class="built_in">object</span> sender, FormClosingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            thrRecv.Abort();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/72820673ac494df4825b751e7e43033e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQklHRklTSDIwMTk=,size_17,color_FFFFFF,t_70,g_se,x_16"><h1 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h1><p>**通过设置全局变量属性，利用timer模拟实现此效果。<br>此方法的原理是，当接收线程接收到消息后，将消息赋值到一个全局变量上，同时timer一直在运行textBox1.Text &#x3D; sTip;<br>分析：<br>这种方法，不推荐使用，占用资源过多，并且根据timer时间设置的不同会有不同的延时。<br>**</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace winform线程间操作UI的五种方法</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form2</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> bTest = <span class="literal">false</span>;      <span class="comment">//测试执行一次线程里面的函数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> sTip;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form2_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread thrRecv = <span class="keyword">new</span> Thread(ReceiveMessage);</span><br><span class="line">            thrRecv.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thrRecv.Start();</span><br><span class="line">            timer1.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            bTest = checkBox1.Checked ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReceiveMessage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (bTest)</span><br><span class="line">                &#123;</span><br><span class="line">                    sTip = System.DateTime.Now.ToString(<span class="string">&quot;yyyy-mm-dd HH:mm:ss&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            textBox1.Text = sTip;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/92153e12262f45baa97b8607b21b0453.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQklHRklTSDIwMTk=,size_15,color_FFFFFF,t_70,g_se,x_16"><h1 id="方法三："><a href="#方法三：" class="headerlink" title="方法三："></a>方法三：</h1><p><strong>通过winform自带的backgroundworker取代thread进行异步操作。<br>代码的原理就是，把对UI的操作放到了backgroundworker2_progresschanged方法中进行，winform自带的backgroundworker不会受到影响，可以对UI进行操作。<br>分析：<br>这种方法，不推荐使用，虽然并没有什么不好的。但是就是感觉特别挫，因为只局限于winform，到了其它的地方，还不是得用thread来实现，使用这种方法解决问题，治标不治本。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace winform线程间操作UI的五种方法</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> bTest = <span class="literal">false</span>;      <span class="comment">//测试执行一次线程里面的函数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> sTip;             <span class="comment">//UI显示的内容</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> iCount = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form3_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            backgroundWorker2.WorkerReportsProgress = <span class="literal">true</span>;</span><br><span class="line">            backgroundWorker2.RunWorkerAsync();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            bTest = checkBox1.Checked ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//backgroundWorker1.RunWorkerAsync();</span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;测试界面卡顿&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker2_DoWork</span>(<span class="params"><span class="built_in">object</span> sender, DoWorkEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>         &#123;</span><br><span class="line">             <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">             &#123;</span><br><span class="line">                <span class="keyword">if</span> (bTest)</span><br><span class="line">                &#123;</span><br><span class="line">                    iCount++;</span><br><span class="line">                    sTip = System.DateTime.Now.ToString(<span class="string">&quot;yyyy-mm-dd HH:mm:ss&quot;</span>);</span><br><span class="line">                    backgroundWorker2.ReportProgress(<span class="number">50</span>, sTip);</span><br><span class="line">                    Thread.Sleep(<span class="number">1</span>);   <span class="comment">//需要休眠，要不然界面卡顿</span></span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backgroundWorker2_ProgressChanged</span>(<span class="params"><span class="built_in">object</span> sender, ProgressChangedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            textBox1.Text = e.UserState.ToString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form3_Shown</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//backgroundWorker2.RunWorkerAsync();</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/ea04bc381eab40fe8e505aa58c16ebf7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQklHRklTSDIwMTk=,size_17,color_FFFFFF,t_70,g_se,x_16"><h1 id="方法四："><a href="#方法四：" class="headerlink" title="方法四："></a>方法四：</h1><p><strong>通过UI线程的SynchronizationContext的Post&#x2F;Send方法更新。<br>分析：<br>这种方法，推荐使用，是不错的解决问题的好方法。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace winform线程间操作UI的五种方法</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form4</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        SynchronizationContext SyncContext = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> bTest = <span class="literal">false</span>;      <span class="comment">//测试执行一次线程里面的函数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> sTip;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            SyncContext = SynchronizationContext.Current;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form4_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread thrRecv = <span class="keyword">new</span> Thread(ReceiveMessage);</span><br><span class="line">            thrRecv.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thrRecv.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReceiveMessage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (bTest)</span><br><span class="line">                &#123;</span><br><span class="line">                    sTip = System.DateTime.Now.ToString(<span class="string">&quot;yyyy-mm-dd HH:mm:ss&quot;</span>);</span><br><span class="line">                    SyncContext.Post(change, sTip);</span><br><span class="line">                    Thread.Sleep(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">change</span>(<span class="params"><span class="built_in">object</span> str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            textBox1.Text = str.ToString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            bTest = checkBox1.Checked ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>原理是，在线程执行过程中，需要更新到UI控件上的数据不再直接更新，而是通过UI线程上下文的Post&#x2F;Send方法，将数据以异步&#x2F;同步消息的形式发送到UI线程的消息队列；UI线程收到该消息后，根据消息是异步消息还是同步消息来决定通过异步&#x2F;同步的方式调用SetTextSafePost方法直接更新自己的控件了。<br>在本质上，向UI线程发送的消息并不是简单数据，而是一条委托调用命令。</p></blockquote><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/0cde3cf0f6a54bd8be4e3abb749c6aa3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQklHRklTSDIwMTk=,size_17,color_FFFFFF,t_70,g_se,x_16"><h1 id="方法五："><a href="#方法五：" class="headerlink" title="方法五："></a>方法五：</h1><p><strong>通过设置UI控件的Invoke和BeginInvoke方法实现更新。<br>分析：<br>这种方法推荐使用，是当前的主流。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace winform线程间操作UI的五种方法</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form5</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">Change</span>(<span class="params"><span class="built_in">string</span> text</span>)</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> bTest = <span class="literal">false</span>;      <span class="comment">//测试执行一次线程里面的函数</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> sTip;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form5</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form5_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Thread thrRecv = <span class="keyword">new</span> Thread(ReceiveMessage);</span><br><span class="line">            thrRecv.IsBackground = <span class="literal">true</span>;</span><br><span class="line">            thrRecv.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Settext</span>(<span class="params"><span class="built_in">string</span> text</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            textBox1.Text = text;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ReceiveMessage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>         &#123;</span><br><span class="line">             <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (bTest)</span><br><span class="line">                &#123;</span><br><span class="line">                    sTip = System.DateTime.Now.ToString(<span class="string">&quot;yyyy-mm-dd HH:mm:ss&quot;</span>);</span><br><span class="line">                    <span class="keyword">this</span>.BeginInvoke(<span class="keyword">new</span> Change(Settext), sTip);</span><br><span class="line">                    Thread.Sleep(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            bTest = checkBox1.Checked ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这个方法是目前跨线程更新UI使用的主流方法，使用控件的Invoke&#x2F;BegainInvoke方法，将委托转到UI线程上调用，实现线程安全的更新。</strong></p><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/d30b63a8bccf4710a7173146ea6fbf62.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQklHRklTSDIwMTk=,size_17,color_FFFFFF,t_70,g_se,x_16"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>多线程间会经常使用到委托，对委托的理解十分关键。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/BIGFISH2019/article/details/122835709">c#winform线程间操作UI的五种方法</a></li><li><a href="https://www.cnblogs.com/weifeng123/p/13734999.html">c#winform线程间操作UI的五种方法参考出处</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 线程管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 线程管理 </tag>
            
            <tag> UI访问 </tag>
            
            <tag> 显示实时时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 开启线程的几种方式</title>
      <link href="/posts/100493848.html"/>
      <url>/posts/100493848.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、异步委托开启线程"><a href="#一、异步委托开启线程" class="headerlink" title="一、异步委托开启线程"></a>一、异步委托开启线程</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> 　　Action&lt;<span class="built_in">int</span>,<span class="built_in">int</span>&gt; a=<span class="keyword">add</span>;</span><br><span class="line"> 　　a.BeginInvoke(,,<span class="literal">null</span>,<span class="literal">null</span>);<span class="comment">//前两个是add方法的参数，后两个可以为空</span></span><br><span class="line"> 　　Console.WriteLine(<span class="string">&quot;main()&quot;</span>);</span><br><span class="line"> 　　Console.ReadKey();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">add</span>(<span class="params"><span class="built_in">int</span> a,<span class="built_in">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> 　　Console.WriteLine(a+b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、通过Thread类开启线程"><a href="#二、通过Thread类开启线程" class="headerlink" title="二、通过Thread类开启线程"></a>二、通过Thread类开启线程</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>         &#123;</span><br><span class="line">             Thread t1;</span><br><span class="line">             Thread t2;</span><br><span class="line">             t1 = <span class="keyword">new</span> Thread(SetInfo1);</span><br><span class="line">             t2 = <span class="keyword">new</span> Thread(SetInfo2);</span><br><span class="line">             t1.Start();</span><br><span class="line">             <span class="comment">//线程睡眠</span></span><br><span class="line">             <span class="comment">//t1.Join(1000);</span></span><br><span class="line">             <span class="comment">//挂起线程</span></span><br><span class="line">             t1.Suspend();</span><br><span class="line">             <span class="comment">//继续执行线程</span></span><br><span class="line">             t1.Resume();</span><br><span class="line">             <span class="comment">//结束线程</span></span><br><span class="line">             <span class="comment">//t1.Abort();</span></span><br><span class="line"> </span><br><span class="line">             t2.Start();</span><br><span class="line">             Console.ReadKey();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//奇数线程</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetInfo1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>         &#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="built_in">int</span> i = ; i &lt; ; i++)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span> (i %  != )</span><br><span class="line">                 &#123;</span><br><span class="line">                     Console.WriteLine(<span class="string">&quot;奇数为&quot;</span> + i);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="comment">//偶数线程</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetInfo2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>         &#123;</span><br><span class="line">             <span class="keyword">for</span> (<span class="built_in">int</span> i = ; i &lt; ; i++)</span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span> (i %  == )</span><br><span class="line">                 &#123;</span><br><span class="line">                     Console.WriteLine(<span class="string">&quot;偶数为&quot;</span> + i);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><h1 id="三、通过线程池开启线程"><a href="#三、通过线程池开启线程" class="headerlink" title="三、通过线程池开启线程"></a>三、通过线程池开启线程</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> 　　 <span class="comment">//线程池可以看做容纳线程的容器；一个应用程序最多只能有一个线程池；ThreadPool静态类通过QueueUserWorkItem()方法将工作函数排入线程池； 每排入一个工作函数，就相当于请求创建一个线程；</span></span><br><span class="line"><span class="comment">//线程池的作用：</span></span><br><span class="line"><span class="comment">//1、线程池是为突然大量爆发的线程设计的，通过有限的几个固定线程为大量的操作服务，减少了创建和销毁线程所需的时间，从而提高效率。</span></span><br><span class="line"><span class="comment">//2、如果一个线程的时间非常长，就没必要用线程池了(不是不能作长时间操作，而是不宜。)，况且我们还不能控制线程池中线程的开始、挂起、和中止</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ThreadPool.QueueUserWorkItem(<span class="keyword">new</span> WaitCallback(TestThreadPool), <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;hjh&quot;</span> &#125;);</span><br><span class="line">        Console.ReadKey();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">TestThreadPool</span>(<span class="params"><span class="built_in">object</span> state</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">string</span>[] arry = state <span class="keyword">as</span> <span class="built_in">string</span>[];<span class="comment">//传过来的参数值</span></span><br><span class="line">        <span class="built_in">int</span> workerThreads = ;</span><br><span class="line">        <span class="built_in">int</span> CompletionPortThreads = ;</span><br><span class="line">        ThreadPool.GetMaxThreads(<span class="keyword">out</span> workerThreads, <span class="keyword">out</span> CompletionPortThreads);</span><br><span class="line">        Console.WriteLine(DateTime.Now.ToString() + <span class="string">&quot;---&quot;</span> + arry[] + <span class="string">&quot;--workerThreads=&quot;</span> + workerThreads + <span class="string">&quot;--CompletionPortThreads&quot;</span> + CompletionPortThreads);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、通过任务Task开启线程"><a href="#四、通过任务Task开启线程" class="headerlink" title="四、通过任务Task开启线程"></a>四、通过任务Task开启线程</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>         &#123;</span><br><span class="line">             Task task = <span class="keyword">new</span> Task(DownLoadFile_My);</span><br><span class="line">             task.Start();</span><br><span class="line">             Console.ReadKey();</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DownLoadFile_My</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>         &#123;</span><br><span class="line">             Console.WriteLine(<span class="string">&quot;开始下载...线程ID:&quot;</span>+Thread.CurrentThread.ManagedThreadId);</span><br><span class="line">             Thread.Sleep();</span><br><span class="line">             Console.WriteLine(<span class="string">&quot;下载完成!&quot;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(() =&gt;</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="keyword">try</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="comment">//运行的代码</span></span><br><span class="line">     &#125;</span><br><span class="line">      catch (Exception ex)</span><br><span class="line">     &#123;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;).Start();</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.shuzhiduo.com/A/kjdwkWK2dN/">C# 开启线程的几种方式</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 线程管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> Thread </tag>
            
            <tag> 线程开启方式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#数据结构之一（环形缓冲区FIFO）</title>
      <link href="/posts/918496859.html"/>
      <url>/posts/918496859.html</url>
      
        <content type="html"><![CDATA[<h1 id="数组模拟环形队列（这个正在使用-效果很好）"><a href="#数组模拟环形队列（这个正在使用-效果很好）" class="headerlink" title="数组模拟环形队列（这个正在使用-效果很好）"></a>数组模拟环形队列（这个正在使用-效果很好）</h1><blockquote><p>上一章说到的数组模拟队列存在的问题，问题分析并优化</p></blockquote><ul><li>目前数组使用一次就不能用，没有达到复用的效果</li><li>将这个数组使用算法，改进成一个环形的队列</li></ul><p>对前面的数组模拟队列的优化，充分利用数组。因此将数组看做是一个环形的。（通过去模的方式来实现即可）</p><p>分析说明：</p><ul><li>尾索引的下一个为头索引时，表示队列满。即将队列容量空出一个作为约定，这个在做判断队列满的时候需要注意（rear+1）%maxsize&#x3D;&#x3D;front 满</li><li>rear&#x3D;&#x3D;front 空</li></ul><img src="https://pic3.zhimg.com/80/v2-02462cb1a43ecb49f9e47bdc3dd3245a_1440w.jpg"><p>实现思路如下：</p><ul><li>front指针含义调整，front指向队列第一个元素。也就是array[front]就是队列的第一个元素。front初始值&#x3D;0。</li><li>rear变量的含义调整，rear指向队列的最后一个元素的后一个位置。因为希望空出一个空间作为约定。rear初始值&#x3D;0。</li><li>当队列满时，条件是(rear + 1)% maxsize &#x3D; front , 位满。（PS：rear +1是预留一个位置，不牺牲这个空间会导致无法判断队列空或者满，rear一直自增，也就是说rear是很有可能大于maxsieze的，比如maxsize&#x3D;5，rear&#x3D;10，因为rear被加到10，此时rear的实际位置是0。取模式保证党front为0时，rear+1取模为0与front相等）</li><li>当队列空是，条件是rear&#x3D;&#x3D;front 。</li><li>有效的数据个数，(raer + maxsize - front)%maxsize。（为什么要取模，因为是环形同时有rear可能是最大的然后跑到最前面来；假如：rear&#x3D;1，front&#x3D;0，maxsize&#x3D;10 再套入公式中 (1+10-0)%10&#x3D;1 有效数据为1）</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CircleArrayQueue</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//队列最大值</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> _maxSize;</span><br><span class="line">    <span class="comment">//队列头部</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> _front;</span><br><span class="line">    <span class="comment">//队列尾部</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> _rear;</span><br><span class="line">    <span class="comment">//存储值的数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span>[] _tempArray;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleArrayQueue</span>(<span class="params"><span class="built_in">int</span> maxSize</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;MaxSize : <span class="subst">&#123; maxSize &#125;</span>&quot;</span>);</span><br><span class="line">        _maxSize = maxSize;</span><br><span class="line">        _tempArray = <span class="keyword">new</span> <span class="built_in">int</span>[_maxSize];</span><br><span class="line">        <span class="comment">//front指向队列第一个元素</span></span><br><span class="line">        _front = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//rear指向队列的最后一个元素的后一个位置</span></span><br><span class="line">        _rear = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsFull</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> (_rear + <span class="number">1</span>) % _maxSize == _front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsEmpty</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> _rear == _front;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 有效数据个数</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Num</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> (_rear + _maxSize - _front) % _maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">EnQueue</span>(<span class="params"><span class="built_in">int</span> val</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsFull())</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;队列已满，无法加入数据！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//直接插入数据</span></span><br><span class="line">        _tempArray[_rear] = val;</span><br><span class="line">        <span class="comment">//_rear后移一位，这里必须考虑取模</span></span><br><span class="line">        _rear = (_rear + <span class="number">1</span>) % _maxSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">DeQueue</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsEmpty())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;队列是空的，无法取出数据！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//这里需要分析出front是指向队列的第一个元素</span></span><br><span class="line">        <span class="comment">//1.先把front对应的值保留到一个临时变量</span></span><br><span class="line">        <span class="comment">//2.将front后移</span></span><br><span class="line">        <span class="comment">//3.将临时保存的变量返回</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> tempVal = _tempArray[_front];</span><br><span class="line">        _front = (_front + <span class="number">1</span>) % _maxSize;</span><br><span class="line">        <span class="keyword">return</span> tempVal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowAll</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsEmpty())</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;队列是空的!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;显示队列所有内容：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = _front; i &lt; _front + Num(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.Write(<span class="string">$&quot;<span class="subst">&#123; _tempArray[i % _maxSize] &#125;</span>\t&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Console.WriteLine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">PeekFirst</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (IsEmpty())</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;队列是空的，无法取出数据！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">$&quot;查看第一个值:<span class="subst">&#123; _tempArray[_front] &#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>代码调用</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//MySparseArray sparseArray = new MySparseArray();</span></span><br><span class="line">            <span class="comment">//sparseArray.Print();    </span></span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            CircleArrayQueue queue = <span class="keyword">new</span> CircleArrayQueue(<span class="number">4</span>);</span><br><span class="line">            queue.EnQueue(<span class="number">97</span>);</span><br><span class="line">            queue.EnQueue(<span class="number">98</span>);</span><br><span class="line">            queue.EnQueue(<span class="number">200</span>);</span><br><span class="line">            queue.EnQueue(<span class="number">1000</span>);</span><br><span class="line">            <span class="comment">//查看第一个值</span></span><br><span class="line">            queue.PeekFirst();</span><br><span class="line">            <span class="comment">//显示队列里所有的内容</span></span><br><span class="line">            queue.ShowAll();</span><br><span class="line">            <span class="comment">//取出一个值</span></span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;取出一个值:<span class="subst">&#123; queue.DeQueue() &#125;</span>&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;取出一个值:<span class="subst">&#123; queue.DeQueue() &#125;</span>&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">$&quot;取出一个值:<span class="subst">&#123; queue.DeQueue() &#125;</span>&quot;</span>);</span><br><span class="line">            queue.PeekFirst();</span><br><span class="line">            queue.EnQueue(<span class="number">200</span>);</span><br><span class="line">            queue.ShowAll();</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(ex.Message);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Console.Read();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><img src="https://pic4.zhimg.com/80/v2-32df9eb6cdf9c4fbe5b5d5f8ac6c8d0b_1440w.jpg"><h1 id="C-串口数据处理–环形缓冲区-FIFO"><a href="#C-串口数据处理–环形缓冲区-FIFO" class="headerlink" title="C#串口数据处理–环形缓冲区-FIFO"></a>C#串口数据处理–环形缓冲区-FIFO</h1><p><strong>注意：这个FIFO无效，还不知什么原因</strong></p><h2 id="一、FIFO环形缓冲区初始化"><a href="#一、FIFO环形缓冲区初始化" class="headerlink" title="一、FIFO环形缓冲区初始化"></a>一、FIFO环形缓冲区初始化</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="built_in">int</span> MAX_BUFFER_LEN = <span class="number">1024</span>;<span class="comment">//定义缓冲区大小</span></span><br><span class="line">FIFO receiveBufferManager = <span class="keyword">new</span> FIFO(MAX_BUFFER_LEN);</span><br></pre></td></tr></table></figure><h2 id="二、串口接收事件中添加写入环形缓冲"><a href="#二、串口接收事件中添加写入环形缓冲" class="headerlink" title="二、串口接收事件中添加写入环形缓冲"></a>二、串口接收事件中添加写入环形缓冲</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> num = serialPort1.BytesToRead;      <span class="comment">//获取接收缓冲区中的字节数</span></span><br><span class="line">               <span class="built_in">byte</span>[] received_buf = <span class="keyword">new</span> <span class="built_in">byte</span>[num];    <span class="comment">//声明一个大小为num的字节数据用于存放读出的byte型数据</span></span><br><span class="line">               serialPort1.Read(received_buf, <span class="number">0</span>, num);   <span class="comment">//读取接收缓冲区中num个字节到byte数组中</span></span><br><span class="line">               <span class="keyword">if</span> (num &gt; <span class="number">0</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                    receiveBufferManager.WriteBuffer(received_buf, <span class="number">0</span>,num);</span><br><span class="line">               &#125;</span><br></pre></td></tr></table></figure><h2 id="三、开一个线程解析数据，测试中串口以10ms的周期发送大量数据，然后在线程中以1s的速度去解析数据，数据依然不会丢失。"><a href="#三、开一个线程解析数据，测试中串口以10ms的周期发送大量数据，然后在线程中以1s的速度去解析数据，数据依然不会丢失。" class="headerlink" title="三、开一个线程解析数据，测试中串口以10ms的周期发送大量数据，然后在线程中以1s的速度去解析数据，数据依然不会丢失。"></a>三、开一个线程解析数据，测试中串口以10ms的周期发送大量数据，然后在线程中以1s的速度去解析数据，数据依然不会丢失。</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">serialPort1_DataReceived1</span>(<span class="params"><span class="built_in">object</span> o</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] freame_byte = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="built_in">byte</span>[] freame_byte1 = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (receiveBufferManager.GetDataCount() &gt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        receiveBufferManager.ReadBuffer(freame_byte, <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">                        receiveBufferManager.ReadBuffer(freame_byte1, <span class="number">0</span>,freame_byte[<span class="number">2</span>]);</span><br><span class="line">                        Console.Write(<span class="string">&quot;数据=&quot;</span>);</span><br><span class="line">                        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; freame_byte[<span class="number">2</span>]; i++)</span><br><span class="line">                        &#123;</span><br><span class="line">                            Console.Write(<span class="string">&quot;&#123;0:X000&#125; &quot;</span>, freame_byte1[i]);</span><br><span class="line">                        &#125;</span><br><span class="line">                        Console.WriteLine(<span class="string">&quot;&quot;</span>);</span><br><span class="line">                         receiveBufferManager.Clear(freame_byte[<span class="number">2</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> &#123; Console.WriteLine(<span class="string">&quot;缓冲区没有数据&quot;</span>); &#125;</span><br><span class="line">                    Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="四、环形缓冲区实现类"><a href="#四、环形缓冲区实现类" class="headerlink" title="四、环形缓冲区实现类"></a>四、环形缓冲区实现类</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RingBufferManager</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">byte</span>[] Buffer &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; <span class="comment">// 存放内存的数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> DataCount &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; <span class="comment">// 写入数据大小</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> DataStart &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; <span class="comment">// 数据起始索引</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> DataEnd &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;   <span class="comment">// 数据结束索引</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RingBufferManager</span>(<span class="params"><span class="built_in">int</span> bufferSize</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        DataCount = <span class="number">0</span>; DataStart = <span class="number">0</span>; DataEnd = <span class="number">0</span>;</span><br><span class="line">        Buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[bufferSize];</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">byte</span> <span class="keyword">this</span>[<span class="built_in">int</span> index]</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">get</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (index &gt;= DataCount) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;环形缓冲区异常，索引溢出&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (DataStart + index &lt; Buffer.Length)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> Buffer[DataStart + index];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> Buffer[(DataStart + index) - Buffer.Length];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">GetDataCount</span>(<span class="params"></span>) <span class="comment">// 得到当前写入的字节数</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> DataCount;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">GetReserveCount</span>(<span class="params"></span>) <span class="comment">// 得到剩余的字节数</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> Buffer.Length - DataCount;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        DataCount = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Clear</span>(<span class="params"><span class="built_in">int</span> count</span>) <span class="comment">// 清空指定大小的数据</span></span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (count &gt;= DataCount) <span class="comment">// 若是须要清理的数据大于现有数据大小，则所有清理</span></span><br><span class="line">        &#123;</span><br><span class="line">            DataCount = <span class="number">0</span>;</span><br><span class="line">            DataStart = <span class="number">0</span>;</span><br><span class="line">            DataEnd = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (DataStart + count &gt;= Buffer.Length)</span><br><span class="line">            &#123;</span><br><span class="line">                DataStart = (DataStart + count) - Buffer.Length;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                DataStart += count;</span><br><span class="line">            &#125;</span><br><span class="line">            DataCount -= count;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteBuffer</span>(<span class="params"><span class="built_in">byte</span>[] buffer, <span class="built_in">int</span> offset, <span class="built_in">int</span> count</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Int32 reserveCount = Buffer.Length - DataCount;</span><br><span class="line">        <span class="keyword">if</span> (reserveCount &gt;= count)                          <span class="comment">// 可用空间够使用</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (DataEnd + count &lt; Buffer.Length)            <span class="comment">// 数据没到结尾</span></span><br><span class="line">            &#123;</span><br><span class="line">                Array.Copy(buffer, offset, Buffer, DataEnd, count);</span><br><span class="line">                DataEnd += count;</span><br><span class="line">                DataCount += count;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>           <span class="comment">//  数据结束索引超出结尾 循环到开始</span></span><br><span class="line">            &#123;</span><br><span class="line">                System.Diagnostics.Debug.WriteLine(<span class="string">&quot;缓存从新开始....&quot;</span>);</span><br><span class="line">                Int32 overflowIndexLength = (DataEnd + count) - Buffer.Length;      <span class="comment">// 超出索引长度</span></span><br><span class="line">                Int32 endPushIndexLength = count - overflowIndexLength;             <span class="comment">// 填充在末尾的数据长度</span></span><br><span class="line">                Array.Copy(buffer, offset, Buffer, DataEnd, endPushIndexLength);</span><br><span class="line">                DataEnd = <span class="number">0</span>;</span><br><span class="line">                offset += endPushIndexLength;</span><br><span class="line">                DataCount += endPushIndexLength;</span><br><span class="line">                <span class="keyword">if</span> (overflowIndexLength != <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Array.Copy(buffer, offset, Buffer, DataEnd, overflowIndexLength);</span><br><span class="line">                &#125;</span><br><span class="line">                DataEnd += overflowIndexLength;                                     <span class="comment">// 结束索引</span></span><br><span class="line">                DataCount += overflowIndexLength;                                   <span class="comment">// 缓存大小</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 缓存溢出，不处理</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ReadBuffer</span>(<span class="params"><span class="built_in">byte</span>[] targetBytes,Int32 offset, Int32 count</span>) </span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (count &gt; DataCount) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;环形缓冲区异常，读取长度大于数据长度&quot;</span>);</span><br><span class="line">        Int32 tempDataStart = DataStart;</span><br><span class="line">        <span class="keyword">if</span> (DataStart + count &lt; Buffer.Length)</span><br><span class="line">        &#123;</span><br><span class="line">            Array.Copy(Buffer, DataStart, targetBytes, offset, count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            Int32 overflowIndexLength = (DataStart + count) - Buffer.Length;    <span class="comment">// 超出索引长度</span></span><br><span class="line">            Int32 endPushIndexLength = count - overflowIndexLength;             <span class="comment">// 填充在末尾的数据长度</span></span><br><span class="line">            Array.Copy(Buffer, DataStart, targetBytes, offset, endPushIndexLength);</span><br><span class="line">            </span><br><span class="line">            offset += endPushIndexLength;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (overflowIndexLength != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Array.Copy(Buffer, <span class="number">0</span>, targetBytes, offset, overflowIndexLength);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">WriteBuffer</span>(<span class="params"><span class="built_in">byte</span>[] buffer</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        WriteBuffer(buffer, <span class="number">0</span>, buffer.Length);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/justzhuzhu/p/15866448.html">c#环形队列</a></li><li><a href="https://blog.csdn.net/xu_BK/article/details/120015339">C#串口数据处理–环形缓冲区-FIFO</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 数据结构 </category>
          
          <category> FIFO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 环形缓冲区 </tag>
            
            <tag> 环形队列 </tag>
            
            <tag> FIFO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 将DataGridView中的数据保存到CSV和Excel中</title>
      <link href="/posts/2417497739.html"/>
      <url>/posts/2417497739.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、保存到CSV"><a href="#一、保存到CSV" class="headerlink" title="一、保存到CSV"></a>一、保存到CSV</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">dataGridViewToCSV</span>(<span class="params">DataGridView dataGridView</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dataGridView.Rows.Count == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;没有数据可导出!&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Information);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    SaveFileDialog saveFileDialog = <span class="keyword">new</span> SaveFileDialog();</span><br><span class="line">    saveFileDialog.Filter = <span class="string">&quot;CSV files (*.csv)|*.csv&quot;</span>;</span><br><span class="line">    saveFileDialog.FilterIndex = <span class="number">0</span>;</span><br><span class="line">    saveFileDialog.RestoreDirectory = <span class="literal">true</span>;</span><br><span class="line">    saveFileDialog.CreatePrompt = <span class="literal">true</span>;</span><br><span class="line">    saveFileDialog.FileName = <span class="literal">null</span>;</span><br><span class="line">    saveFileDialog.Title = <span class="string">&quot;保存&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (saveFileDialog.ShowDialog() == DialogResult.OK)</span><br><span class="line">    &#123;</span><br><span class="line">        Stream stream = saveFileDialog.OpenFile();</span><br><span class="line">        StreamWriter sw = <span class="keyword">new</span> StreamWriter(stream, System.Text.Encoding.GetEncoding(<span class="number">-0</span>));</span><br><span class="line">        <span class="built_in">string</span> strLine = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//表头</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataGridView.ColumnCount; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &gt; <span class="number">0</span>)</span><br><span class="line">                    strLine += <span class="string">&quot;,&quot;</span>;</span><br><span class="line">                strLine += dataGridView.Columns[i].HeaderText;</span><br><span class="line">            &#125;</span><br><span class="line">            strLine.Remove(strLine.Length - <span class="number">1</span>);</span><br><span class="line">            sw.WriteLine(strLine);</span><br><span class="line">            strLine = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="comment">//表的内容</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; dataGridView.Rows.Count; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                strLine = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="built_in">int</span> colCount = dataGridView.Columns.Count;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> k = <span class="number">0</span>; k &lt; colCount; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (k &gt; <span class="number">0</span> &amp;&amp; k &lt; colCount)</span><br><span class="line">                        strLine += <span class="string">&quot;,&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span> (dataGridView.Rows[j].Cells[k].Value == <span class="literal">null</span>)</span><br><span class="line">                        strLine += <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span> cell = dataGridView.Rows[j].Cells[k].Value.ToString().Trim();</span><br><span class="line">                        <span class="comment">//防止里面含有特殊符号</span></span><br><span class="line">                        cell = cell.Replace(<span class="string">&quot;\&quot;&quot;</span>, <span class="string">&quot;\&quot;\&quot;&quot;</span>);</span><br><span class="line">                         <span class="comment">//cell = &quot;\&quot;&quot; + cell + &quot;\&quot;&quot;; //每个元素值用引号包括</span></span><br><span class="line">                        strLine += cell;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                sw.WriteLine(strLine);</span><br><span class="line">            &#125;</span><br><span class="line">            sw.Close();</span><br><span class="line">            stream.Close();</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;数据被导出到：&quot;</span> + saveFileDialog.FileName.ToString(), <span class="string">&quot;导出完毕&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Information);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception ex)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(ex.Message, <span class="string">&quot;导出错误&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Information);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、保存到Excel"><a href="#二、保存到Excel" class="headerlink" title="二、保存到Excel"></a>二、保存到Excel</h1><h2 id="安装-Office-x2F-SharePoint-开发"><a href="#安装-Office-x2F-SharePoint-开发" class="headerlink" title="安装 Office&#x2F;SharePoint 开发"></a>安装 Office&#x2F;SharePoint 开发</h2><p><strong>正常调用的话会出现 没有 Microsoft.Office.XXX 错误</strong></p><blockquote><p>1、前言</p></blockquote><p>今天在写 C# 实验的时候遇到了</p><ul><li><p>命名空间“Microsoft”中不存在类型或命名空间名“Office”(是否缺少程序集引用?)</p></li><li><p>“Microsoft.Office.Interop”中不存在类型或命名空间名“Word”(是否缺少程序集引用?)<br>等等问题，关于 Office 的引用的，起初我查找网上的各种方法，发现都没有用，包括手动选择导入电脑中的 dll 和安装 NuGet 程序包，结果都是 “warning MSB3245: 未能解析此引用”</p></li></ul><p>后来在偶然中发现在 Visual Studio Installer 中安装 Office&#x2F;SharePoint 开发 可以解决这个问题。</p><blockquote><p>2、解决方案</p></blockquote><p>打开 Visual Studio 2019，选择 <strong>工具-&gt;获取工具和功能</strong>。</p><img src="https://img-blog.csdnimg.cn/8956a3d5d99245d3b592efb67a5af051.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAU3Vhc3nlsI_mmJM=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>弹出如下界面，勾选 <strong>Office&#x2F;SharePoint 开发 并点击修改</strong>。</p><img src="https://img-blog.csdnimg.cn/2404d73cf4e34a5686f8ba332d2bc207.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAU3Vhc3nlsI_mmJM=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>等待安装完成，然后重启 VS2019，就可以在引用管理器里看到 Microsoft.Office.XXX 等包了，并且编译也不会出现其他版本问题了。</p><img src="https://img-blog.csdnimg.cn/c1dfaa53c5014dd99d037710c29cce50.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAU3Vhc3nlsI_mmJM=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><blockquote><p><strong>Kill(xlApp);</strong> 这个没有实现</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">dataGridViewToExcel</span>(<span class="params">DataGridView dataGridView</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dataGridView.Rows.Count == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;没有数据可导出!&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Information);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> fileName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> saveFileName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    SaveFileDialog saveDialog = <span class="keyword">new</span> SaveFileDialog();</span><br><span class="line">    saveDialog.DefaultExt = <span class="string">&quot;xlsx&quot;</span>;</span><br><span class="line">    saveDialog.Filter = <span class="string">&quot;Excel文件|*.xlsx&quot;</span>;</span><br><span class="line">    saveDialog.FileName = fileName;</span><br><span class="line">    saveDialog.ShowDialog();</span><br><span class="line">    saveFileName = saveDialog.FileName;</span><br><span class="line">    <span class="keyword">if</span> (saveFileName.IndexOf(<span class="string">&quot;:&quot;</span>) &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//被点了取消</span></span><br><span class="line">    Microsoft.Office.Interop.Excel.Application xlApp = <span class="keyword">new</span> Microsoft.Office.Interop.Excel.Application();</span><br><span class="line">    <span class="keyword">if</span> (xlApp == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;无法创建Excel对象，您的电脑可能未安装Excel&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Microsoft.Office.Interop.Excel.Workbooks workbooks = xlApp.Workbooks;</span><br><span class="line">    Microsoft.Office.Interop.Excel.Workbook workbook =</span><br><span class="line">                workbooks.Add(Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATWorksheet);</span><br><span class="line">    Microsoft.Office.Interop.Excel.Worksheet worksheet =</span><br><span class="line">                (Microsoft.Office.Interop.Excel.Worksheet)workbook.Worksheets[<span class="number">1</span>];<span class="comment">//取得sheet1 </span></span><br><span class="line">                                                                                 <span class="comment">//写入标题             </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataGridView.ColumnCount; i++)</span><br><span class="line">    &#123; worksheet.Cells[<span class="number">1</span>, i + <span class="number">1</span>] = dataGridView.Columns[i].HeaderText; &#125;</span><br><span class="line">    <span class="comment">//写入数值</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> r = <span class="number">0</span>; r &lt; dataGridView.Rows.Count; r++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataGridView.ColumnCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            worksheet.Cells[r + <span class="number">2</span>, i + <span class="number">1</span>] = dataGridView.Rows[r].Cells[i].Value;</span><br><span class="line">        &#125;</span><br><span class="line">        System.Windows.Forms.Application.DoEvents();</span><br><span class="line">    &#125;</span><br><span class="line">    worksheet.Columns.EntireColumn.AutoFit();<span class="comment">//列宽自适应</span></span><br><span class="line">    MessageBox.Show(fileName + <span class="string">&quot;资料保存成功&quot;</span>, <span class="string">&quot;提示&quot;</span>, MessageBoxButtons.OK);</span><br><span class="line">    <span class="keyword">if</span> (saveFileName != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            workbook.Saved = <span class="literal">true</span>;</span><br><span class="line">            workbook.SaveCopyAs(saveFileName);  <span class="comment">//fileSaved = true;                 </span></span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception ex)</span><br><span class="line">        &#123;<span class="comment">//fileSaved = false;                      </span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;导出文件时出错,文件可能正被打开！\n&quot;</span> + ex.Message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    xlApp.Quit();</span><br><span class="line">    Kill(xlApp);</span><br><span class="line">    GC.Collect();<span class="comment">//强行销毁      </span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.jb51.net/article/246272.htm">C#将DataGridView中的数据保存到CSV和Excel中</a></li><li><a href="https://blog.csdn.net/qq_35353673/article/details/120468554">【C#】VS2019 添加引用中没有 Microsoft.Office.XXX 的解决办法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 文件管理 </category>
          
          <category> 前端 </category>
          
          <category> CSV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> DataGridView </tag>
            
            <tag> CSV </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32F103的RTC实时时钟功能</title>
      <link href="/posts/2076787782.html"/>
      <url>/posts/2076787782.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、STM32F1-RTC介绍"><a href="#一、STM32F1-RTC介绍" class="headerlink" title="一、STM32F1 RTC介绍"></a>一、STM32F1 RTC介绍</h1><h2 id="1-1-RTC简介"><a href="#1-1-RTC简介" class="headerlink" title="1.1 RTC简介"></a>1.1 RTC简介</h2><p>　　STM32 的实时时钟（ RTC）是一个独立的定时器。 STM32 的 RTC 模 块拥有一组连续计数的计数器，在相应软件配置下，可提供时钟日历的 功能。修改计数器的值可以重新设置系统当前的时间和日期。 <strong>RTC模块和时钟配置是在后备区域，无论器件状态如何（运行模式、 低功耗模式或处于复位状态），只要保证后备区域供电正常，RTC便不会 停止工作，</strong>所以通常会在后备区域供电端加一个纽扣电池，即使主电源 停止供电，后备电源也会启动供电，从而保证RTC时钟不停的运行，只有 当主电源和后备纽扣电池都没有电的时，RTC才停止工作。 从 RTC 的定时器特性来说，它是一个 32 位的计数器，只能向上计 数。它的时钟来源有三种，分别为高速外部时钟的 128 分频（ HSE&#x2F;128 ）、 低速内部时钟 LSI 以及低速外部时钟 LSE。</p><h2 id="1-2电源"><a href="#1-2电源" class="headerlink" title="1.2电源"></a>1.2电源</h2><img src="https://img2020.cnblogs.com/blog/1959382/202004/1959382-20200416135606620-1020547463.png"><p>电池备份区域</p><p><strong>使用电池或其他电源连接到VBAT脚上，当VDD断电时，可以保存备份寄存器的内容和维持RTC的</strong></p><p><strong>功能。</strong></p><p>VBAT脚也为RTC、LSE振荡器和PC13至PC15供电，这保证当主要电源被切断时RTC能继续工作。切换到VBAT供电由复位模块中的掉电复位功能控制。</p><p>如果应用中没有使用外部电池，VBAT必须连接到VDD引脚上。</p><h2 id="1-3备份寄存器-BKP-简介"><a href="#1-3备份寄存器-BKP-简介" class="headerlink" title="1.3备份寄存器(BKP)简介"></a>1.3备份寄存器(BKP)简介</h2><p>　　备份寄存器是42个16位的寄存器，可用来存储84个字节的用户应用程序数据。他们处在备份域里，当VDD电源被切断，他们仍然由VBAT维持供电。当系统在待机模式下被唤醒，或系统复位或电源复位时，他们也不会被复位。</p><p>此外，BKP控制寄存器用来管理侵入检测和RTC校准功能。</p><p>复位后，对备份寄存器和RTC的访问被禁止，并且备份域被保护以防止可能存在的意外的写操作。<strong>执行以下操作可以使能对备份寄存器和RTC的访问。</strong></p><p>　　● 通过设置寄存器RCC_APB1ENR的PWREN和BKPEN位来打开电源和后备接口的时钟</p><p>　　● 电源控制寄存器(PWR_CR)的DBP位来使能对后备寄存器和RTC的访问。</p><h2 id="1-4实时时钟-RTC"><a href="#1-4实时时钟-RTC" class="headerlink" title="1.4实时时钟(RTC)"></a>1.4实时时钟(RTC)</h2><p>RTC简介</p><p>　　实时时钟是一个独立的定时器。RTC模块拥有一组连续计数的计数器，在相应软件配置下，可提供时钟日历的功能。修改计数器的值可以重新设置系统当前的时间和日期。</p><p>　　RTC模块和时钟配置系统(RCC_BDCR寄存器)处于后备区域，即在系统复位或从待机模式唤醒后，RTC的设置和时间维持不变。</p><p>　　系统复位后，对后备寄存器和RTC的访问被禁止，这是为了防止对后备区域(BKP)的意外写操作。<strong>执行以下操作将使能对后备寄存器和RTC的访问：（BKP中也提到过）</strong></p><p>　　● 设置寄存器RCC_APB1ENR的PWREN和BKPEN位，使能电源和后备接口时钟</p><p>　　● 设置寄存器PWR_CR的DBP位，使能对后备寄存器和RTC的访问。 </p><h1 id="二、功能描述"><a href="#二、功能描述" class="headerlink" title="二、功能描述"></a>二、功能描述</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><p>　　RTC由两个主要部分组成(参见下图)。第一部分(APB1接口)用来和APB1总线相连。此单元还包含一组16位寄存器，可通过APB1总线对其进行读写操作(参见16.4节)。APB1接口由APB1总线时钟驱动，用来与APB1总线接口。</p><p>　　另一部分(RTC核心)由一组可编程计数器组成，分成两个主要模块。</p><p>　　<strong>第一个模块是RTC的预分频模块</strong>，它可编程产生最长为1秒的RTC时间基准TR_CLK。RTC的预分频模块包含了一个20位的可编程分频器(RTC预分频器)。如果在RTC_CR寄存器中设置了相应的允许位，则在每个实时时钟(RTC)TR_CLK周期中RTC产生一个中断(秒中断)。</p><p>　　<strong>第二个模块是一个32位的可编程计数器，</strong>可被初始化为当前的系统时间。系统时间按TR_CLK周期累加并与存储在RTC_ALR寄存器中的可编程时间相比较，如果RTC_CR控制寄存器中设置了相应允许位，比较匹配时将产生一个闹钟中断。</p><img src="https://img2020.cnblogs.com/blog/1959382/202004/1959382-20200416140350814-611247352.png"><h2 id="2、复位过程"><a href="#2、复位过程" class="headerlink" title="2、复位过程"></a>2、复位过程</h2><p>　　除了RTC_PRL、RTC_ALR、RTC_CNT和RTC_DIV寄存器外，所有的系统寄存器都由系统复位或电源复位进行异步复位。</p><p>　　RTC_PRL、RTC_ALR、RTC_CNT和RTC_DIV寄存器仅能通过备份域复位信号复位。</p><h2 id="3、读RTC寄存器"><a href="#3、读RTC寄存器" class="headerlink" title="3、读RTC寄存器"></a>3、读RTC寄存器</h2><p>RTC核完全独立于RTC APB1接口。</p><p>软件通过APB1接口访问RTC的预分频值、计数器值和闹钟值。但是，<strong>相关的可读寄存器只在与RTC与 APB1时钟进行重新同步的RTC时钟的上升沿被更新</strong>。<strong>RTC标志也是如此的</strong>。这意味着，如果APB1接口曾经被关闭，而读操作又是在刚刚重新开启APB1之后，则在第一次的内部寄存器更新之前，从APB1上读出的RTC寄存器数值可能被破坏了(通常读到0)。下述几种情况下能够发生这种情形：</p><p>● 发生系统复位或电源复位</p><p>● 系统刚从待机模式唤醒(参见第4.3节：低功耗模式)。</p><p>● 系统刚从停机模式唤醒(参见第4.3节：低功耗模式)。</p><p>所有以上情况中，APB1接口被禁止时(复位、无时钟或断电)RTC核仍保持运行状态。</p><p><strong>因此，若在读取RTC寄存器时，RTC的APB1接口曾经处于禁止状态，则软件首先必须等待RTC_CRL寄存器中的RSF位(寄存器同步标志)被硬件置’1’。</strong></p><p>注：RTC的 APB1接口不受WFI和WFE等低功耗模式的影响。</p><h2 id="4、写RTC寄存器"><a href="#4、写RTC寄存器" class="headerlink" title="4、写RTC寄存器"></a>4、写RTC寄存器</h2><p>必须设置RTC_CRL寄存器中的CNF位，使RTC进入配置模式后，才能写入RTC_PRL、RTC_CNT、RTC_ALR寄存器。</p><p>另外，对RTC任何寄存器的写操作，都必须在前一次写操作结束后进行。可以通过查询RTC_CR寄存器中的RTOFF状态位，判断RTC寄存器是否处于更新中。仅当RTOFF状态位是1时，才可以写入RTC寄存器。</p><h1 id="三、STM32F1-RTC配置步骤"><a href="#三、STM32F1-RTC配置步骤" class="headerlink" title="三、STM32F1 RTC配置步骤"></a>三、STM32F1 RTC配置步骤</h1><ul><li>使能PWR和BKP时钟。调用函数：RCC_APB1PeriphClockCmd()；</li><li>使能后备寄存器访问。调用函数：PWR_BackupAccessCmd()；</li><li>配置RTC时钟源，使能RTC时钟。调用函数：RCC_RTCCLKConfig()；RCC_RTCCLKCmd()；</li><li>如果使用LSE，要打开LSE：RCC_LSEConfig(RCC_LSE_ON)；</li><li>设置RTC预分频系数。调用函数：RTC_SetPrescaler()；</li><li>设置时间。调用函数：RTC_SetCounter()；</li><li>开启相关中断（如果需要）。调用函数：RTC_ITConfig()；</li><li>编写中断服务函数。调用函数：RTC_IRQHandler()；</li><li><strong>部分操作要等待写操作完成和同步。调用函数：RTC_WaitForLastTask()；RTC_WaitForSynchro()；</strong></li></ul><h1 id="四、程序举例"><a href="#四、程序举例" class="headerlink" title="四、程序举例"></a>四、程序举例</h1><p>编写RTC控制程序 本章所要实现的功能是：设置RTC时间日期初值，在RTC秒中断内使用 串口打印出RTC日期和时间，D1指示灯闪烁提示系统运行。</p><p>程序框架如下 ：</p><p>（1）初始化RTC，设置RTC时间日期初值 （2）开启RTC的秒中断，编写RTC中断函数, （3）在RTC中断内更新时间并打印输出 （4）编写主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">ifndef</span> _rtc_H</span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">define</span> _rtc_H</span></span><br><span class="line"> <span class="number">3</span> </span><br><span class="line"> <span class="number">4</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;system.h&quot;</span></span></span><br><span class="line"> <span class="number">5</span> </span><br><span class="line"> <span class="number">6</span> </span><br><span class="line"> <span class="number">7</span> <span class="function">u8 <span class="title">RTCx_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> <span class="number">8</span> <span class="function"><span class="keyword">void</span> <span class="title">RTC_GET</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> <span class="number">9</span> </span><br><span class="line"><span class="number">10</span> <span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">11 &#123;</span></span><br><span class="line"><span class="number">12</span>     u8 hour;</span><br><span class="line"><span class="number">13</span>     u8 min;</span><br><span class="line"><span class="number">14</span>     u8 sec;</span><br><span class="line"><span class="number">15</span> &#125;_calender;</span><br><span class="line"><span class="number">16</span> </span><br><span class="line"><span class="number">17</span> <span class="keyword">extern</span> _calender  calender;</span><br><span class="line"><span class="number">18</span> </span><br><span class="line"><span class="number">19</span> </span><br><span class="line"><span class="number">20</span> </span><br><span class="line"><span class="number">21</span> <span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p><strong>分析RTC_Init()函数：RTC初始化函数。</strong></p><p>　　初始化时按照之前的RTC一般步骤进行配置，这里需要注意的是，为了区分是否是第一次执行RTC_Init()函数，必须判断后配寄存器中是否写如果某个值（向BKP_DR1寄存器写入0xA0A0，写入其他的数字也可以）如果写入不用再初始化。</p><p><strong>为什么要区分是否执行过RTC_Init？</strong></p><p>　　如果由于 断电&#x2F; 复位&#x2F;唤醒等待 等因素，程序中断但RTC时钟以及后备寄存器区域还在执行；等恢复供电重新启动程序时，这不能再对RTC时钟进行初始化，否则一直初始化，那么RTC作为时钟就没什么实际作用。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">if</span> (BKP_ReadBackupRegister(BKP_DR1) != <span class="number">0xA0A0</span><span class="comment">//（从指定的后备寄存器中读出数据）判断是否初始化过</span></span><br><span class="line"><span class="number">2</span> &#123;                 </span><br><span class="line"><span class="number">3</span>         　　<span class="comment">//第一次进行初始化（RTC_Init）</span></span><br><span class="line"><span class="number">4</span> 　　BKP_WriteBackupRegister(BKP_DR1, <span class="number">0XA0A0</span>);    <span class="comment">//向指定的后备寄存器中写入用户程序数据</span></span><br><span class="line"><span class="number">5</span> &#125;</span><br><span class="line"><span class="number">6</span> <span class="keyword">else</span><span class="comment">//（已经初始化过）系统继续计时</span></span><br><span class="line"><span class="number">7</span> &#123;</span><br><span class="line"><span class="number">8</span>    <span class="comment">//不是第一次进行初始化（RTC_Init）</span></span><br><span class="line"><span class="number">9</span> &#125;</span><br></pre></td></tr></table></figure><p><strong>代码44：使用外部低速晶振（LSE）时需要检查指定的RCC相应的标志位是否设置，等待低速晶振就绪。</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;rtc.h&quot;</span></span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;systick.h&quot;</span></span></span><br><span class="line"> <span class="number">3</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ustrt.h&quot;</span></span></span><br><span class="line"> <span class="number">4</span> </span><br><span class="line"> <span class="number">5</span> </span><br><span class="line"> <span class="number">6</span> _calender  calender;</span><br><span class="line"> <span class="number">7</span> </span><br><span class="line"> <span class="number">8</span> </span><br><span class="line"> <span class="number">9</span> <span class="function"><span class="keyword">void</span> <span class="title">RTC_NVIC_Config</span><span class="params">()</span> <span class="comment">//设置RTC中断优先级</span></span></span><br><span class="line"><span class="function">10 </span>&#123;</span><br><span class="line"><span class="number">11</span>     NVIC_InitTypeDef    NVIC_InitStruct;</span><br><span class="line"><span class="number">12</span>     </span><br><span class="line"><span class="number">13</span>     NVIC_InitStruct.NVIC_IRQChannel=RTC_IRQn;</span><br><span class="line"><span class="number">14</span>     NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority=<span class="number">2</span>;</span><br><span class="line"><span class="number">15</span>     NVIC_InitStruct.NVIC_IRQChannelSubPriority=<span class="number">3</span>;</span><br><span class="line"><span class="number">16</span>     NVIC_InitStruct.NVIC_IRQChannelCmd=ENABLE ;</span><br><span class="line"><span class="number">17</span>     NVIC_Init(&amp;NVIC_InitStruct);</span><br><span class="line"><span class="number">18</span>     </span><br><span class="line"><span class="number">19</span> &#125;    </span><br><span class="line"><span class="number">20</span> </span><br><span class="line"><span class="number">21</span> <span class="function"><span class="keyword">void</span> <span class="title">RTC_GET</span><span class="params">()</span> <span class="comment">//获取 RTC 计数器的值并进行处理</span></span></span><br><span class="line"><span class="function">22 </span>&#123;</span><br><span class="line"><span class="number">23</span>     u32 timedata;</span><br><span class="line"><span class="number">24</span>     timedata=RTC_GetCounter();</span><br><span class="line"><span class="number">25</span>     calender.hour=timedata/<span class="number">3600</span>;</span><br><span class="line"><span class="number">26</span>     calender.min=timedata%<span class="number">3600</span>/<span class="number">60</span>;</span><br><span class="line"><span class="number">27</span>     calender.sec=timedata%<span class="number">3600</span>%<span class="number">60</span>;</span><br><span class="line"><span class="number">28</span> &#125;</span><br><span class="line"><span class="number">29</span> </span><br><span class="line"><span class="number">30</span> <span class="comment">//返回0：初始化失败</span></span><br><span class="line"><span class="number">31</span> <span class="comment">//返回1：初始化成功</span></span><br><span class="line"><span class="number">32</span> <span class="function">u8 <span class="title">RTCx_Init</span><span class="params">()</span></span></span><br><span class="line"><span class="function">33 </span>&#123;</span><br><span class="line"><span class="number">34</span>     u8 time;</span><br><span class="line"><span class="number">35</span>     RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR, ENABLE);</span><br><span class="line"><span class="number">36</span>     RCC_APB1PeriphClockCmd(RCC_APB1Periph_BKP, ENABLE);</span><br><span class="line"><span class="number">37</span>     PWR_BackupAccessCmd(ENABLE);</span><br><span class="line"><span class="number">38</span>     </span><br><span class="line"><span class="number">39</span>     </span><br><span class="line"><span class="number">40</span>     <span class="keyword">if</span>(BKP_ReadBackupRegister(BKP_DR1)!=<span class="number">0xA0a0</span>) <span class="comment">//从指定的后备寄存器读数据）检查是不是第一次配置时钟</span></span><br><span class="line"><span class="number">41</span>     &#123;                       </span><br><span class="line"><span class="number">42</span>         BKP_DeInit();    <span class="comment">//将后备寄存器初始化</span></span><br><span class="line"><span class="number">43</span>         RCC_LSEConfig(RCC_LSE_ON);     <span class="comment">//将RCC_LSE时钟开启</span></span><br><span class="line"><span class="number">44</span>         <span class="keyword">while</span>(RCC_GetFlagStatus(RCC_FLAG_LSERDY)==RESET &amp;&amp; time&lt;<span class="number">250</span>) <span class="comment">//检测LSE时钟是否开启</span></span><br><span class="line"><span class="number">45</span>         &#123;</span><br><span class="line"><span class="number">46</span>             time++;</span><br><span class="line"><span class="number">47</span>             delay_ms(<span class="number">10</span>);</span><br><span class="line"><span class="number">48</span>         &#125;</span><br><span class="line"><span class="number">49</span>         <span class="keyword">if</span>(time&gt;=<span class="number">250</span>)</span><br><span class="line"><span class="number">50</span>         &#123;</span><br><span class="line"><span class="number">51</span>             <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="number">52</span>         &#125;</span><br><span class="line"><span class="number">53</span>         RCC_RTCCLKConfig(RCC_RTCCLKSource_LSE);     <span class="comment">//配置RTC的时钟为LSE</span></span><br><span class="line"><span class="number">54</span>         RCC_RTCCLKCmd(ENABLE);    <span class="comment">//RTC时钟输入开启</span></span><br><span class="line"><span class="number">55</span>         RTC_WaitForLastTask();    <span class="comment">//等待直到RTC寄存器上的上一次写操作完成。</span></span><br><span class="line"><span class="number">56</span>         RTC_WaitForSynchro();    <span class="comment">//等待，直到RTC寄存器(RTC_CNT、RTC_ALR和RTC_PRL)与RTC APB时钟同步。</span></span><br><span class="line"><span class="number">57</span>         RTC_ITConfig(RTC_IT_SEC, ENABLE);</span><br><span class="line"><span class="number">58</span>         RTC_WaitForLastTask();  <span class="comment">//等待直到RTC寄存器上的上一次写操作完成。</span></span><br><span class="line"><span class="number">59</span>         RTC_EnterConfigMode();    <span class="comment">// 允许配置</span></span><br><span class="line"><span class="number">60</span>         RTC_SetPrescaler(<span class="number">32767</span>); <span class="comment">//设置 RTC 预分频的值</span></span><br><span class="line"><span class="number">61</span>         RTC_WaitForLastTask();   <span class="comment">//等待直到RTC寄存器上的上一次写操作完成。</span></span><br><span class="line"><span class="number">62</span>         RTC_SetCounter(<span class="number">0x1111</span>);     <span class="comment">//设置 RTC 计数器的值 初始化时间17：34：55</span></span><br><span class="line"><span class="number">63</span>         RTC_ExitConfigMode();    <span class="comment">//退出 RTC 配置模式</span></span><br><span class="line"><span class="number">64</span>         BKP_WriteBackupRegister(BKP_DR1,<span class="number">0xA0a0</span>);    <span class="comment">//向指定的后备寄存器中写入用户程序数据</span></span><br><span class="line"><span class="number">65</span>         </span><br><span class="line"><span class="number">66</span>     &#125;</span><br><span class="line"><span class="number">67</span>     <span class="keyword">else</span> <span class="comment">//（系统之前已经进行过相应初始化）系统继续计时</span></span><br><span class="line"><span class="number">68</span>     &#123;</span><br><span class="line"><span class="number">69</span>         RTC_WaitForLastTask();    <span class="comment">//等待直到RTC寄存器上的上一次写操作完成。</span></span><br><span class="line"><span class="number">70</span>         RTC_WaitForSynchro();    <span class="comment">//等待，直到RTC寄存器(RTC_CNT、RTC_ALR和RTC_PRL)与RTC APB时钟同步。</span></span><br><span class="line"><span class="number">71</span>         RTC_ITConfig(RTC_IT_SEC, ENABLE);    <span class="comment">//使能或者失能指定的 RTC 中断</span></span><br><span class="line"><span class="number">72</span>     &#125;</span><br><span class="line"><span class="number">73</span>     </span><br><span class="line"><span class="number">74</span>     RTC_NVIC_Config(); <span class="comment">//RCT中断优先级别设置    </span></span><br><span class="line"><span class="number">75</span>     RTC_GET(); <span class="comment">//获取 RTC 计数器的值</span></span><br><span class="line"><span class="number">76</span>     <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="number">77</span> &#125;</span><br><span class="line"><span class="number">78</span> </span><br><span class="line"><span class="number">79</span> <span class="function"><span class="keyword">void</span> <span class="title">RTC_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//RTC中断函数</span></span></span><br><span class="line"><span class="function">80 </span>&#123;</span><br><span class="line"><span class="number">81</span>     <span class="keyword">if</span>(RTC_GetITStatus(RTC_IT_SEC)!=<span class="number">0</span>) <span class="comment">//检查指定的 RTC 中断发生与否（秒中断）</span></span><br><span class="line"><span class="number">82</span>     &#123;</span><br><span class="line"><span class="number">83</span>         RTC_GET();</span><br><span class="line"><span class="number">84</span>         <span class="built_in">printf</span>(<span class="string">&quot;RTC_Time:%d:%d:%d\r\n&quot;</span>,calender.hour,calender.min,calender.sec);</span><br><span class="line"><span class="number">85</span>     &#125;</span><br><span class="line"><span class="number">86</span>     RTC_ClearITPendingBit(RTC_IT_SEC); <span class="comment">//清除 RTC 的中断待处理位</span></span><br><span class="line"><span class="number">87</span> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;system.h&quot;</span></span></span><br><span class="line"> <span class="number">2</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;led.h&quot;</span></span></span><br><span class="line"> <span class="number">3</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;systick.h&quot;</span></span></span><br><span class="line"> <span class="number">4</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ustrt.h&quot;</span></span></span><br><span class="line"> <span class="number">5</span> <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;rtc.h&quot;</span></span></span><br><span class="line"> <span class="number">6</span> </span><br><span class="line"> <span class="number">7</span> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 8 </span>&#123;</span><br><span class="line"> <span class="number">9</span>     u8 i=<span class="number">0</span>;</span><br><span class="line"><span class="number">10</span> </span><br><span class="line"><span class="number">11</span>     </span><br><span class="line"><span class="number">12</span>     SysTick_Init(<span class="number">72</span>);</span><br><span class="line"><span class="number">13</span>     NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line"><span class="number">14</span>     LED_Init();</span><br><span class="line"><span class="number">15</span>     ustrt_Init(<span class="number">9600</span>);</span><br><span class="line"><span class="number">16</span>     RTCx_Init();</span><br><span class="line"><span class="number">17</span>     </span><br><span class="line"><span class="number">18</span>     <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"><span class="number">19</span>     &#123;</span><br><span class="line"><span class="number">20</span>     </span><br><span class="line"><span class="number">21</span>         i++;</span><br><span class="line"><span class="number">22</span>         <span class="keyword">if</span>(i%<span class="number">20</span>==<span class="number">0</span>)</span><br><span class="line"><span class="number">23</span>         &#123;</span><br><span class="line"><span class="number">24</span>             led1=!led1;</span><br><span class="line"><span class="number">25</span>         &#125;</span><br><span class="line"><span class="number">26</span>         delay_ms(<span class="number">10</span>);    </span><br><span class="line"><span class="number">27</span>     &#125;</span><br><span class="line"><span class="number">28</span> &#125;</span><br></pre></td></tr></table></figure><h1 id="配置RCT基本步骤（参考二）-添加了程序但没接42khz晶振，因此在初始化阶段不通过"><a href="#配置RCT基本步骤（参考二）-添加了程序但没接42khz晶振，因此在初始化阶段不通过" class="headerlink" title="配置RCT基本步骤（参考二）-添加了程序但没接42khz晶振，因此在初始化阶段不通过"></a>配置RCT基本步骤（参考二）-添加了程序但没接42khz晶振，因此在初始化阶段不通过</h1><ol><li>使能PWR和BKP外设时钟</li><li>使能后备寄存器访问  </li><li>判断从指定的后备寄存器中读出数据：<br>如果读出数据与写入的数据相同，说明已经配置过了不需要重新配置，只要等待最近一次对RTC寄存器的写操作完成和使能RTC秒中断即可，如果读出数据与写入数据不相同，则需要重新配置。修改写入时间时一定要记得把两个0x5051修改成其他任意十六位数据。这样才可以重新修改写入时间。</li><li>复位备份区域     </li><li>设置外部低速晶振(LSE),使用外设低速晶振</li><li>检查指定的RCC标志位设置与否,等待低速晶振就绪，这一步尤为重要，<br>如果晶振出现问题整个系统是不会正常运行的。如果是硬件问题不容查出来。</li><li>设置RTC时钟(RTCCLK),选择LSE作为RTC时钟</li><li>使能RTC时钟 </li><li>等待最近一次对RTC寄存器的写操作完成</li><li>等待RTC寄存器同步<br>（注意9、10两步很重要，每次操作RTC寄存器时都要重复一次9、10两步）</li><li>使能RTC秒中断</li><li>等待最近一次对RTC寄存器的写操作完成</li><li>允许配置</li><li>设置RTC预分频的值：<br>计算方式32768&#x2F;(32767+1) &#x3D; 1Hz 周期刚好是1秒。</li><li>等待最近一次对RTC寄存器的写操作完成</li><li>设置时间</li><li>退出配置模式，防止误操作</li><li>向指定的后备寄存器中写入用户程序数据</li><li>RCT中断分组设置</li><li>更新时间</li></ol><h2 id="配置代码参考"><a href="#配置代码参考" class="headerlink" title="配置代码参考"></a>配置代码参考</h2><p><strong>RTC.c文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/************************************RTC.c文件***************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;rtc.h&quot;</span> </span></span><br><span class="line">   </span><br><span class="line">_calendar_obj calendar;<span class="comment">//时钟结构体 </span></span><br><span class="line"> </span><br><span class="line">u32 timecount=<span class="number">0</span>;  </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">RTC_NVIC_Config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = RTC_IRQn;<span class="comment">//RTC全局中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;<span class="comment">//先占优先级1位,从优先级3位</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">0</span>;<span class="comment">//先占优先级0位,从优先级4位</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="comment">//使能该通道中断</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);<span class="comment">//根据NVIC_InitStruct中指定的参数初始化外设NVIC寄存器</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//实时时钟配置</span></span><br><span class="line"><span class="comment">//初始化RTC时钟,同时检测时钟是否工作正常</span></span><br><span class="line"><span class="comment">//BKP-&gt;DR1用于保存是否第一次配置的设置</span></span><br><span class="line"><span class="comment">//返回0:正常</span></span><br><span class="line"><span class="comment">//其他:错误代码</span></span><br><span class="line"><span class="function">u8 <span class="title">RTC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//检查是不是第一次配置时钟</span></span><br><span class="line">u8 temp=<span class="number">0</span>;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);<span class="comment">//使能PWR和BKP外设时钟   </span></span><br><span class="line">PWR_BackupAccessCmd(ENABLE);<span class="comment">//使能后备寄存器访问  </span></span><br><span class="line"><span class="keyword">if</span> (BKP_ReadBackupRegister(BKP_DR1) != <span class="number">0x5051</span>)<span class="comment">//从指定的后备寄存器中读出数据:读出了与写入的指定数据不相乎</span></span><br><span class="line">&#123; </span><br><span class="line">BKP_DeInit();<span class="comment">//复位备份区域 </span></span><br><span class="line">RCC_LSEConfig(RCC_LSE_ON);<span class="comment">//设置外部低速晶振(LSE),使用外设低速晶振</span></span><br><span class="line"><span class="keyword">while</span> (RCC_GetFlagStatus(RCC_FLAG_LSERDY) == RESET&amp;&amp;temp&lt;<span class="number">250</span>)<span class="comment">//检查指定的RCC标志位设置与否,等待低速晶振就绪</span></span><br><span class="line">&#123;</span><br><span class="line">temp++;</span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=<span class="number">250</span>)<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//初始化时钟失败,晶振有问题    </span></span><br><span class="line">RCC_RTCCLKConfig(RCC_RTCCLKSource_LSE);<span class="comment">//设置RTC时钟(RTCCLK),选择LSE作为RTC时钟    </span></span><br><span class="line">RCC_RTCCLKCmd(ENABLE);<span class="comment">//使能RTC时钟  </span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_WaitForSynchro();<span class="comment">//等待RTC寄存器同步  </span></span><br><span class="line">RTC_ITConfig(RTC_IT_SEC, ENABLE);<span class="comment">//使能RTC秒中断</span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_EnterConfigMode();<span class="comment">// 允许配置</span></span><br><span class="line">RTC_SetPrescaler(<span class="number">32767</span>); <span class="comment">//设置RTC预分频的值，计算方式32768/(32767+1) = 1Hz 周期刚好是1秒。</span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_Set(<span class="number">2020</span>,<span class="number">2</span>,<span class="number">16</span>,<span class="number">22</span>,<span class="number">16</span>,<span class="number">00</span>);  <span class="comment">//设置时间</span></span><br><span class="line">RTC_ExitConfigMode(); <span class="comment">//退出配置模式  </span></span><br><span class="line">BKP_WriteBackupRegister(BKP_DR1, <span class="number">0X5051</span>);<span class="comment">//向指定的后备寄存器中写入用户程序数据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//系统继续计时</span></span><br><span class="line">&#123;</span><br><span class="line">RTC_WaitForSynchro();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">RTC_ITConfig(RTC_IT_SEC, ENABLE);<span class="comment">//使能RTC秒中断</span></span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成</span></span><br><span class="line">&#125;</span><br><span class="line">RTC_NVIC_Config();<span class="comment">//RCT中断分组设置         </span></span><br><span class="line">RTC_Get();<span class="comment">//更新时间</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//ok</span></span><br><span class="line"> </span><br><span class="line">&#125;     </span><br><span class="line"><span class="comment">//RTC时钟中断</span></span><br><span class="line"><span class="comment">//每秒触发一次  </span></span><br><span class="line"><span class="comment">//extern u16 tcnt; </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RTC_IRQHandler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">if</span> (RTC_GetITStatus(RTC_IT_SEC) != RESET)<span class="comment">//秒钟中断</span></span><br><span class="line">&#123;</span><br><span class="line">RTC_Get();<span class="comment">//更新时间   </span></span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">if</span>(RTC_GetITStatus(RTC_IT_ALR)!= RESET)<span class="comment">//闹钟中断</span></span><br><span class="line">&#123;</span><br><span class="line">RTC_ClearITPendingBit(RTC_IT_ALR);<span class="comment">//清闹钟中断  </span></span><br><span class="line">  RTC_Get();<span class="comment">//更新时间   </span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Alarm Time:%d-%d-%d %d:%d:%d\n&quot;</span>,calendar.w_year,calendar.w_month,calendar.w_date,calendar.hour,calendar.min,calendar.sec);<span class="comment">//输出闹铃时间</span></span><br><span class="line"></span><br><span class="line">  &#125;    </span><br><span class="line">RTC_ClearITPendingBit(RTC_IT_SEC|RTC_IT_OW);<span class="comment">//清闹钟中断</span></span><br><span class="line">RTC_WaitForLastTask();           </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//判断是否是闰年函数</span></span><br><span class="line"><span class="comment">//月份   1  2  3  4  5  6  7  8  9  10 11 12</span></span><br><span class="line"><span class="comment">//闰年   31 29 31 30 31 30 31 31 30 31 30 31</span></span><br><span class="line"><span class="comment">//非闰年 31 28 31 30 31 30 31 31 30 31 30 31</span></span><br><span class="line"><span class="comment">//输入:年份</span></span><br><span class="line"><span class="comment">//输出:该年份是不是闰年.1,是.0,不是</span></span><br><span class="line"><span class="function">u8 <span class="title">Is_Leap_Year</span><span class="params">(u16 year)</span></span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">4</span>==<span class="number">0</span>) <span class="comment">//必须能被4整除</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">100</span>==<span class="number">0</span>) </span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">400</span>==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//如果以00结尾,还要能被400整除    </span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;    </span><br><span class="line"><span class="comment">//设置时钟</span></span><br><span class="line"><span class="comment">//把输入的时钟转换为秒钟</span></span><br><span class="line"><span class="comment">//以1970年1月1日为基准</span></span><br><span class="line"><span class="comment">//1970~2099年为合法年份</span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他:错误代码.</span></span><br><span class="line"><span class="comment">//月份数据表 </span></span><br><span class="line">u8 <span class="keyword">const</span> table_week[<span class="number">12</span>]=&#123;<span class="number">0</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">5</span>&#125;; <span class="comment">//月修正数据表  </span></span><br><span class="line"><span class="comment">//平年的月份日期表</span></span><br><span class="line"><span class="keyword">const</span> u8 mon_table[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="function">u8 <span class="title">RTC_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u16 t;</span><br><span class="line">u32 seccount=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(syear&lt;<span class="number">1970</span>||syear&gt;<span class="number">2099</span>)<span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">1970</span>;t&lt;syear;t++)<span class="comment">//把所有年份的秒钟相加</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(t))seccount+=<span class="number">31622400</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line"><span class="keyword">else</span> seccount+=<span class="number">31536000</span>;  <span class="comment">//平年的秒钟数</span></span><br><span class="line">&#125;</span><br><span class="line">smon-=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;smon;t++)   <span class="comment">//把前面月份的秒钟数相加</span></span><br><span class="line">&#123;</span><br><span class="line">seccount+=(u32)mon_table[t]*<span class="number">86400</span>;<span class="comment">//月份秒钟数相加</span></span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(syear)&amp;&amp;t==<span class="number">1</span>)seccount+=<span class="number">86400</span>;<span class="comment">//闰年2月份增加一天的秒钟数   </span></span><br><span class="line">&#125;</span><br><span class="line">seccount+=(u32)(sday<span class="number">-1</span>)*<span class="number">86400</span>;<span class="comment">//把前面日期的秒钟数相加 </span></span><br><span class="line">seccount+=(u32)hour*<span class="number">3600</span>;<span class="comment">//小时秒钟数</span></span><br><span class="line">seccount+=(u32)min*<span class="number">60</span>; <span class="comment">//分钟秒钟数</span></span><br><span class="line">seccount+=sec;<span class="comment">//最后的秒钟加上去</span></span><br><span class="line"> </span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);<span class="comment">//使能PWR和BKP外设时钟  </span></span><br><span class="line">PWR_BackupAccessCmd(ENABLE);<span class="comment">//使能RTC和后备寄存器访问 </span></span><br><span class="line">RTC_SetCounter(seccount);<span class="comment">//设置RTC计数器的值</span></span><br><span class="line"> </span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成  </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//初始化闹钟  </span></span><br><span class="line"><span class="comment">//以1970年1月1日为基准</span></span><br><span class="line"><span class="comment">//1970~2099年为合法年份</span></span><br><span class="line"><span class="comment">//syear,smon,sday,hour,min,sec：闹钟的年月日时分秒   </span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他:错误代码.</span></span><br><span class="line"><span class="function">u8 <span class="title">RTC_Alarm_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u16 t;</span><br><span class="line">u32 seccount=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(syear&lt;<span class="number">1970</span>||syear&gt;<span class="number">2099</span>)<span class="keyword">return</span> <span class="number">1</span>;   </span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">1970</span>;t&lt;syear;t++)<span class="comment">//把所有年份的秒钟相加</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(t))seccount+=<span class="number">31622400</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line"><span class="keyword">else</span> seccount+=<span class="number">31536000</span>;  <span class="comment">//平年的秒钟数</span></span><br><span class="line">&#125;</span><br><span class="line">smon-=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;smon;t++)   <span class="comment">//把前面月份的秒钟数相加</span></span><br><span class="line">&#123;</span><br><span class="line">seccount+=(u32)mon_table[t]*<span class="number">86400</span>;<span class="comment">//月份秒钟数相加</span></span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(syear)&amp;&amp;t==<span class="number">1</span>)seccount+=<span class="number">86400</span>;<span class="comment">//闰年2月份增加一天的秒钟数   </span></span><br><span class="line">&#125;</span><br><span class="line">seccount+=(u32)(sday<span class="number">-1</span>)*<span class="number">86400</span>;<span class="comment">//把前面日期的秒钟数相加 </span></span><br><span class="line">seccount+=(u32)hour*<span class="number">3600</span>;<span class="comment">//小时秒钟数</span></span><br><span class="line">    seccount+=(u32)min*<span class="number">60</span>; <span class="comment">//分钟秒钟数</span></span><br><span class="line">seccount+=sec;<span class="comment">//最后的秒钟加上去     </span></span><br><span class="line"><span class="comment">//设置时钟</span></span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);<span class="comment">//使能PWR和BKP外设时钟   </span></span><br><span class="line">PWR_BackupAccessCmd(ENABLE);<span class="comment">//使能后备寄存器访问  </span></span><br><span class="line"><span class="comment">//上面三步是必须的!</span></span><br><span class="line"></span><br><span class="line">RTC_SetAlarm(seccount);</span><br><span class="line"> </span><br><span class="line">RTC_WaitForLastTask();<span class="comment">//等待最近一次对RTC寄存器的写操作完成  </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//得到当前的时间</span></span><br><span class="line"><span class="comment">//返回值:0,成功;其他:错误代码.</span></span><br><span class="line"><span class="function">u8 <span class="title">RTC_Get</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> u16 daycnt=<span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">u32 temp=<span class="number">0</span>;</span><br><span class="line">u16 temp1=<span class="number">0</span>;  </span><br><span class="line">    timecount=RTC_GetCounter(); </span><br><span class="line"> temp=timecount/<span class="number">86400</span>;   <span class="comment">//得到天数(秒钟数对应的)</span></span><br><span class="line"><span class="keyword">if</span>(daycnt!=temp)<span class="comment">//超过一天了</span></span><br><span class="line">&#123;  </span><br><span class="line">daycnt=temp;</span><br><span class="line">temp1=<span class="number">1970</span>;<span class="comment">//从1970年开始</span></span><br><span class="line"><span class="keyword">while</span>(temp&gt;=<span class="number">365</span>)<span class="comment">//计算出来的天数大于等于一年的天数</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(temp1))<span class="comment">//是闰年</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=<span class="number">366</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp-=<span class="number">366</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">temp1++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> temp-=<span class="number">365</span>;  <span class="comment">//平年 </span></span><br><span class="line">temp1++;  </span><br><span class="line">&#125;   </span><br><span class="line">calendar.w_year=temp1;<span class="comment">//得到年份</span></span><br><span class="line">temp1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(temp&gt;=<span class="number">28</span>)<span class="comment">//超过了一个月</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Is_Leap_Year(calendar.w_year)&amp;&amp;temp1==<span class="number">1</span>)<span class="comment">//当年是不是闰年/2月份</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=<span class="number">29</span>)<span class="comment">//如果天数超过29天</span></span><br><span class="line">&#123;</span><br><span class="line">temp-=<span class="number">29</span>;<span class="comment">//闰年的秒钟数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>; <span class="comment">//小于29天，不到闰年3月，直接跳出。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(temp&gt;=mon_table[temp1])</span><br><span class="line">&#123;</span><br><span class="line">temp-=mon_table[temp1];<span class="comment">//平年</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">temp1++;  </span><br><span class="line">&#125;</span><br><span class="line">calendar.w_month=temp1+<span class="number">1</span>;<span class="comment">//得到月份</span></span><br><span class="line">calendar.w_date=temp+<span class="number">1</span>;  <span class="comment">//得到日期 </span></span><br><span class="line">&#125;</span><br><span class="line">temp=timecount%<span class="number">86400</span>;     <span class="comment">//得到秒钟数      </span></span><br><span class="line">calendar.hour=temp/<span class="number">3600</span>;     <span class="comment">//小时</span></span><br><span class="line">calendar.min=(temp%<span class="number">3600</span>)/<span class="number">60</span>; <span class="comment">//分钟</span></span><br><span class="line">calendar.sec=(temp%<span class="number">3600</span>)%<span class="number">60</span>; <span class="comment">//秒钟</span></span><br><span class="line">calendar.week=RTC_Get_Week(calendar.w_year,calendar.w_month,calendar.w_date);<span class="comment">//获取星期   </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//获得现在是星期几</span></span><br><span class="line"><span class="comment">//功能描述:输入公历日期得到星期(只允许1901-2099年)</span></span><br><span class="line"><span class="comment">//输入参数：公历年月日 </span></span><br><span class="line"><span class="comment">//返回值：星期号 </span></span><br><span class="line"><span class="function">u8 <span class="title">RTC_Get_Week</span><span class="params">(u16 year,u8 month,u8 day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u16 temp2;</span><br><span class="line">u8 yearH,yearL;</span><br><span class="line"></span><br><span class="line">yearH=year/<span class="number">100</span>;yearL=year%<span class="number">100</span>; </span><br><span class="line"><span class="comment">// 如果为21世纪,年份数加100  </span></span><br><span class="line"><span class="keyword">if</span> (yearH&gt;<span class="number">19</span>)yearL+=<span class="number">100</span>;</span><br><span class="line"><span class="comment">// 所过闰年数只算1900年之后的  </span></span><br><span class="line">temp2=yearL+yearL/<span class="number">4</span>;</span><br><span class="line">temp2=temp2%<span class="number">7</span>; </span><br><span class="line">temp2=temp2+day+table_week[month<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span> (yearL%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;month&lt;<span class="number">3</span>)temp2--;</span><br><span class="line"><span class="keyword">return</span>(temp2%<span class="number">7</span>);</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p><strong>RTC.h文件</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/************************************RTC.h文件***************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __RTC_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __RTC_H    </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//时间结构体</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">vu8 hour;</span><br><span class="line">vu8 min;</span><br><span class="line">vu8 sec;</span><br><span class="line"><span class="comment">//公历日月年周</span></span><br><span class="line">vu16 w_year;</span><br><span class="line">vu8  w_month;</span><br><span class="line">vu8  w_date;</span><br><span class="line">vu8  week; </span><br><span class="line">&#125;_calendar_obj; </span><br><span class="line"><span class="keyword">extern</span> _calendar_obj calendar;<span class="comment">//日历结构体</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">extern</span> u8 <span class="keyword">const</span> mon_table[<span class="number">12</span>];<span class="comment">//月份日期数据表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Disp_Time</span><span class="params">(u8 x,u8 y,u8 size)</span></span>;<span class="comment">//在制定位置开始显示时间</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Disp_Week</span><span class="params">(u8 x,u8 y,u8 size,u8 lang)</span></span>;<span class="comment">//在指定位置显示星期</span></span><br><span class="line"><span class="function">u8 <span class="title">RTC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;        <span class="comment">//初始化RTC,返回0,失败;1,成功;</span></span><br><span class="line"><span class="function">u8 <span class="title">Is_Leap_Year</span><span class="params">(u16 year)</span></span>;<span class="comment">//平年,闰年判断</span></span><br><span class="line"><span class="function">u8 <span class="title">RTC_Alarm_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">RTC_Get</span><span class="params">(<span class="keyword">void</span>)</span></span>;         <span class="comment">//更新时间   </span></span><br><span class="line"><span class="function">u8 <span class="title">RTC_Get_Week</span><span class="params">(u16 year,u8 month,u8 day)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">RTC_Set</span><span class="params">(u16 syear,u8 smon,u8 sday,u8 hour,u8 min,u8 sec)</span></span>;<span class="comment">//设置时间 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本次使用的是STM32F103开发板，很多参考程序使用的是STM32F4，因此，其中很多定义和函数都没有！本程序其实还得添加许多头文件<br><strong>例如：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x_pwr.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x_bkp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x_rtc.h&quot;</span></span></span><br></pre></td></tr></table></figure><p>由于开发板没有32.768KHz辅助晶振，需要等以后买了再继续测试！</p><p><strong>注意：</strong></p><blockquote><p>F1没有F4的这个功能，F1只有一个计数器，所以需要自己根据这个计数器来计算出来得到，F4就有4个寄存器，所以可以直接读出来</p></blockquote><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://www.cnblogs.com/zhjblogs/p/12712575.html">（stm32f103学习总结）—RTC独立定时器—实时时钟实验 </a></li><li><a href="https://blog.csdn.net/zhai17863966493/article/details/104361466">STM32F103的RTC实时时钟配置</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> STM32 </category>
          
          <category> RTC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> STM32 </tag>
            
            <tag> RTC </tag>
            
            <tag> 实时时钟 </tag>
            
            <tag> STM32F103 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP32开发SDK-IDF环境搭建(Ubuntu)</title>
      <link href="/posts/2870405859.html"/>
      <url>/posts/2870405859.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu系统跟常用工具安装"><a href="#Ubuntu系统跟常用工具安装" class="headerlink" title="Ubuntu系统跟常用工具安装"></a>Ubuntu系统跟常用工具安装</h1><p>因为之前安装过esp8266 SDK-3.0版本，所以本次就在这个系统内安装<a href="https://zml3589110.github.io/posts/2171885577.html">传送门</a></p><ol><li><p>在安装中发现新版本的编译形式有变化，不能使用虚拟机自带的共享进行编译，需要使用Samba网络共享！因编译过程需要建立软链接。</p></li><li><p>记得将Python版本调整为Python 3</p></li></ol><h1 id="下载-SDK-IDF"><a href="#下载-SDK-IDF" class="headerlink" title="下载 SDK-IDF"></a>下载 SDK-IDF</h1><p><strong>开始使用的是 guthub 上的库，那速度要多慢有多慢，毕竟没有搭上梯子，后来就参考使用了 gittee 码云上的库，直接换飞机的速度了啊</strong></p><h2 id="一、下载重定向脚本-esp-gitee-tools"><a href="#一、下载重定向脚本-esp-gitee-tools" class="headerlink" title="一、下载重定向脚本 esp-gitee-tools"></a>一、下载重定向脚本 esp-gitee-tools</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/EspressifSystems/esp-gitee-tools.git</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二、下载SDK"><a href="#二、下载SDK" class="headerlink" title="二、下载SDK"></a>二、下载SDK</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/EspressifSystems/esp-idf.git -b release/v5.0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三、使用-esp-gitee-tools-拉取子模块"><a href="#三、使用-esp-gitee-tools-拉取子模块" class="headerlink" title="三、使用 esp-gitee-tools 拉取子模块"></a>三、使用 esp-gitee-tools 拉取子模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> esp-gitee-tools </span><br><span class="line"><span class="built_in">export</span> EGT_PATH=$(<span class="built_in">pwd</span>) </span><br><span class="line"><span class="built_in">cd</span> .. </span><br><span class="line"><span class="built_in">cd</span> esp-idf </span><br><span class="line"><span class="variable">$EGT_PATH</span>/submodule-update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四、安装编译工具链"><a href="#四、安装编译工具链" class="headerlink" title="四、安装编译工具链"></a>四、安装编译工具链</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">. install.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个步骤是自动安装编译所需要的各类软件，比如编译器、调试器等</p><p>由于是从 github 上下载下来，所以速度奇慢无比，总共花了两天才下载完成！</p><p><strong>再执行：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">. ./export.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="补充：下载主要文件"><a href="#补充：下载主要文件" class="headerlink" title="补充：下载主要文件"></a>补充：下载主要文件</h2><p>install.sh 下载工具文件路径为 $HOME&#x2F;.espressif&#x2F;dist</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">总用量 332M</span><br><span class="line">drwxrwxr-x 2 yichen yichen 4.0K 1月   2 11:38 ./</span><br><span class="line">drwxrwxr-x 5 yichen yichen 4.0K 1月   2 11:38 ../</span><br><span class="line">-rwxrwxrwx 1 yichen yichen  11M 1月   2 11:32 esp32ulp-elf-2.35_20220830-linux-amd64.tar.gz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen 2.4M 1月   2 11:37 esp-rom-elfs-20220823.tar.gz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen 2.0M 1月   2 11:34 openocd-esp32-linux-amd64-0.11.0-esp32-20221026.tar.gz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen 106M 1月   2 11:31 riscv32-esp-elf-gcc11_2_0-esp-2022r1-linux-amd64.tar.xz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen  26M 1月   2 11:25 riscv32-esp-elf-gdb-11.2_20220823-x86_64-linux-gnu.tar.gz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen  62M 1月   2 11:26 xtensa-esp32-elf-gcc11_2_0-esp-2022r1-linux-amd64.tar.xz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen  50M 1月   2 11:28 xtensa-esp32s2-elf-gcc11_2_0-esp-2022r1-linux-amd64.tar.xz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen  50M 1月   2 11:29 xtensa-esp32s3-elf-gcc11_2_0-esp-2022r1-linux-amd64.tar.xz*</span><br><span class="line">-rwxrwxrwx 1 yichen yichen  26M 1月   2 11:19 xtensa-esp-elf-gdb-11.2_20220823-x86_64-linux-gnu.tar.gz*</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用的是 5.0版本 SDK 下载，放到共享里，给有需要的人下载后解压到该目录下应该就可以通过！（未测试过）<br><a href="https://download.csdn.net/download/zml3589110/87360531">传送门</a></p><h1 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h1><p>因为需要多环境共存，毕竟还要玩esp8266嘛，所以就使用 aliases 方式进行别名命令设置，每次仅对跟窗体有效</p><p>这是我的ubuntu下编译esp32所需要的两个环境变量，将其添加到 ~&#x2F;.bash_aliases 文件中，然后重启即可<br>之后打开命令窗口时执行 get_esp32 和 get_e32 后就可以快速设置 ESP32环境了！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> get_esp32=<span class="string">&#x27;export PATH=$PATH:/home/yichen/.espressif/tools/xtensa-esp32-elf/esp-2022r1-11.2.0/xtensa-esp32-elf/bin&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> get_e32=<span class="string">&#x27;. $HOME/esp/esp-idf/export.sh&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="复制例程工程"><a href="#复制例程工程" class="headerlink" title="复制例程工程"></a>复制例程工程</h1><p>可以选择 idf 目录下的 example 文件中的例程，将它复制到 共享 share 文件中，这样也方便 Windows下查看编辑代码！（注意：不是虚拟机共享的文件夹，而是Samba共享的文件夹）</p><p>例如可以使用 $HOME&#x2F;esp&#x2F;esp-idf&#x2F;examples&#x2F;get-started&#x2F;hello_world 文件来测试</p><h1 id="配置编译工程"><a href="#配置编译工程" class="headerlink" title="配置编译工程"></a>配置编译工程</h1><ol><li>设置esp32系列模组</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idf.py set-target esp32</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>通过 menuconfig 菜单配置参数</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idf.py menuconfig</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以设置Wi-Fi 网络名称、密码以及各种组件配置等，不过每次配置完之后都得全部编译一遍！</p><ol start="3"><li>编译所选工程</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idf.py build</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一次编译得构建 build 文件，所以慢很多！如果环境正常基本上能出结果，否则就根据错误提示一个个排查处理。<br>最后会得到 二进制文件 bootloader.bin、partition-table.bin 和 hello_world.bin（你构建的工程文件名）</p><ol start="4"><li>烧录到设备</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idf.py flash monitor</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是两个命令组合起来，意思是烧录程序到 ESP32 并打开 监视窗口。<br>其中烧录波特率默认为 460800</p><p>如果想要自定义波特率则可以自己设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p PORT [-b BAUD] flash</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>由于我的开发板BOOT按键独立，没有自动下载功能，需要在下载前按住 BOOT 按键至识别到 ESP32 ，连接监视窗口也是如此！开始还一直以为没有连接好USB，或者需另外设置</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/chenbenzhen/article/details/124523241">【ESP32】虚拟机ubuntu下搭建 ESP-IDF 开发环境（详细）</a></li><li><a href="https://blog.csdn.net/weixin_38016446/article/details/128028260">ESP32-ESP-IDF-CMD编译烧写（自用）</a></li><li><a href="https://gitee.com/EspressifSystems/esp-idf/tree/release%2Fv5.0/">乐鑫gitee库</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 文件共享 </category>
          
          <category> ESP32 </category>
          
          <category> 乐鑫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 乐鑫 </tag>
            
            <tag> ESP32 </tag>
            
            <tag> SDK-IDF </tag>
            
            <tag> 开发环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT更新子模块</title>
      <link href="/posts/970792788.html"/>
      <url>/posts/970792788.html</url>
      
        <content type="html"><![CDATA[<p><strong>当主项目中用Git管理源代码，并且项目中用submodule方式引入了子模块，当子模块更新代码后，在主项目中如何更新子模块最新代码呢？</strong></p><h1 id="执行之模块更新步骤"><a href="#执行之模块更新步骤" class="headerlink" title="执行之模块更新步骤"></a>执行之模块更新步骤</h1><h2 id="1-如果是第一次pull子项目代码"><a href="#1-如果是第一次pull子项目代码" class="headerlink" title="1.如果是第一次pull子项目代码"></a>1.如果是第一次pull子项目代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule init</span><br></pre></td></tr></table></figure><h2 id="2-然后执行："><a href="#2-然后执行：" class="headerlink" title="2.然后执行："></a>2.然后执行：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git submodule update --remote --recursive</span><br></pre></td></tr></table></figure><p><strong>这个命令，只是更新子模块的branch和commit id信息，并不会pull新代码</strong></p><h2 id="3-然后，进入主项目中子项目的目录"><a href="#3-然后，进入主项目中子项目的目录" class="headerlink" title="3. 然后，进入主项目中子项目的目录"></a>3. 然后，进入主项目中子项目的目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h2 id="4-后续，如果主项目所引用的子项目的branch发生了变化，则在第3步时执行："><a href="#4-后续，如果主项目所引用的子项目的branch发生了变化，则在第3步时执行：" class="headerlink" title="4. 后续，如果主项目所引用的子项目的branch发生了变化，则在第3步时执行："></a>4. 后续，如果主项目所引用的子项目的branch发生了变化，则在第3步时执行：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git fetch</span><br><span class="line"></span><br><span class="line">git checkout submodule_newBranch submodule_newBranch</span><br><span class="line"></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>另：</p><p>在第4步中，在 git fetch 之后，如果使用的用jetbrain的IDE工具，比如IDEA &#x2F; GoLand等，它们会管理远程仓库，此时可以通过点击右下角的branch弹出窗口，来选择需要checkout子项目哪个分支。 </p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看(侵删)</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/bglmmz/article/details/127755543">Git submodule update，如何更新子模块</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
            <tag> 版本控制 </tag>
            
            <tag> git </tag>
            
            <tag> 子模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu开启Samba服务</title>
      <link href="/posts/2332243333.html"/>
      <url>/posts/2332243333.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu开启samba"><a href="#Ubuntu开启samba" class="headerlink" title="Ubuntu开启samba"></a>Ubuntu开启samba</h1><h2 id="安装samba"><a href="#安装samba" class="headerlink" title="安装samba"></a>安装samba</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改samba配置文件"><a href="#修改samba配置文件" class="headerlink" title="修改samba配置文件"></a>修改samba配置文件</h2><blockquote><p>如遇到未安装vim的提示，先输入安装vim指令（sudo apt-get install vim）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/samba/smb.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>文件末尾添加以下代码<br>—①按下G跳可快速转到文件末尾<br>—②按下i进入输入模式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[share]</span><br><span class="line">path = /home/username   <span class="comment">#path 测试机需要共享的路径，可自定义</span></span><br><span class="line">valid users = username  <span class="comment">#username 可以自定义</span></span><br><span class="line">available = yes</span><br><span class="line">browseable = yes</span><br><span class="line">writable = yes</span><br><span class="line">public = no</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>按下ESC切换到命令模式，输入:wq保存并退出vi</p><ul><li><p>创建samba用户<br>—新密码需要两次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a username       <span class="comment">#username 可以自定义</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu：~$ sudo smbpasswd -a username</span><br><span class="line">New SMB password：</span><br><span class="line">Retype new SMB password：</span><br><span class="line">Adder user username.</span><br><span class="line"><span class="built_in">test</span>@ubuntu：~$</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>重启samba</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service smbd restart</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="验证是否启动成功-在Windows上连接"><a href="#验证是否启动成功-在Windows上连接" class="headerlink" title="验证是否启动成功(在Windows上连接)"></a>验证是否启动成功(在Windows上连接)</h1><ul><li>查看测试机的IP地址的指令 <code>ifconfig</code>(如提示无次命令需要暗转，输入安装指令<code>sudo apt install net-tools</code>)<br>—-这里192.168.150.129是测试机的IP地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span>@ubuntu：~$ ifconfig</span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.150.129  netmask 255.255.255.0  broadcast 192.168.150.255</span><br><span class="line">        inet6 fe80::8545:a880:67f0:36c4  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:0c:29:2c:a8:cc  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 3296121  bytes 4268278683 (4.2 GB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 764829  bytes 541486956 (541.4 MB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 7323  bytes 949831 (949.8 KB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 7323  bytes 949831 (949.8 KB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>在Windows上连接，按 win+R 弹出运行窗口，输入\192.168.150.129，点确定,然后输入用户名和密码就可以访问了</li></ul><img src="https://img-blog.csdnimg.cn/e958da999d3c4ee0829eac16bb686331.png"><ul><li>如下图share文件夹就是对应测试机共享的文件夹</li></ul><img src="https://img-blog.csdnimg.cn/f84169f374904a6692d216e36a688bf1.png"><ul><li>把共享文件夹映射成磁盘</li></ul><img src="https://img-blog.csdnimg.cn/074efa9b2bab4079ad255a1ecfbc0aa7.png"><p><strong>也可以直接使用ubuntu计算机名称来连接-这样IP地址改变时也不影响</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_21312147/article/details/126500453">最靠谱的解决方案之Linux系列（1.ubuntu开启Samba服务）</a></li><li><a href="https://blog.csdn.net/qq_22870815/article/details/125113580">Ubuntu开启samba共享文件夹</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> 文件共享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 文件共享 </tag>
            
            <tag> Samba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT改当前项目仓库地址</title>
      <link href="/posts/2885709092.html"/>
      <url>/posts/2885709092.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近公司将gitlab整体迁移了，换了新的地址，虽然在迁移的时候将相关分支信息、代码拷过去了；<br>但是我们开发人员在迁移过程中也会有新的代码产出；或者由于项目原因，没有及时更新地址，造成大量新的代码产出！</p><p>怎么样将自己新产出的代码提交的新库呢？<br><strong>方法：更新仓库地址</strong></p><h1 id="怎么更改已有仓库地址"><a href="#怎么更改已有仓库地址" class="headerlink" title="怎么更改已有仓库地址"></a>怎么更改已有仓库地址</h1><hr><p><strong>注意：以下操作均在 右键 &#x3D;&gt; Git Bash Here 窗口中执行</strong></p><hr><h2 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h2><p>删除本地仓库当前关联的无效远程地址，再为本地仓库添加新的远程仓库地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git remote -v                       // 查看git对应的远程仓库地址</span><br><span class="line">git remote rm origin                // 删除关联对应的远程仓库地址</span><br><span class="line">git remote -v                       // 查看是否删除成功，如果没有任何返回结果，表示OK</span><br><span class="line">git remote add origin <span class="string">&quot;新的仓库地址&quot;</span> // 重新关联git远程仓库地址</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h2><p>直接修改本地仓库所关联的远程仓库的地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git remote      // 查看远程仓库名称：origin </span><br><span class="line">git remote get-url origin                  // 查看远程仓库地址</span><br><span class="line">git remote set-url origin <span class="string">&quot;新的仓库地址&quot;</span>    // ( 如果未设置ssh-key，此处仓库地址为 http://... 开头)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法3："><a href="#方法3：" class="headerlink" title="方法3："></a>方法3：</h2><p>修改 .git&#x2F;config 配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> .git      // 进入.git目录</span><br><span class="line">vim config   // 修改config配置文件，快速找到remote <span class="string">&quot;origin&quot;</span>下面的url并替换即可实现快速关联和修改</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看(侵删)</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/halo1416/article/details/123566471">git修改当前项目仓库地址的三种方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本控制 </tag>
            
            <tag> git </tag>
            
            <tag> 仓库地址 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LVGL模拟器NXP GUI Guider使用</title>
      <link href="/posts/278272964.html"/>
      <url>/posts/278272964.html</url>
      
        <content type="html"><![CDATA[<h1 id="GUI-Guider说明"><a href="#GUI-Guider说明" class="headerlink" title="GUI Guider说明"></a>GUI Guider说明</h1><p>GUI Guider是恩智浦提供的用户友好型图形用户界面开发工具，可通过<a href="https://www.nxp.com.cn/design/software/embedded-software/lvgl-open-source-graphics-library:LITTLEVGL-OPEN-SOURCE-GRAPHICS-LIBRARY">开源LVGL图形库</a>快速开发高品质的显示。GUI Guider的拖放编辑器可以轻松利用LVGL的众多特性，如小部件、动画和样式来创建GUI，而只需少量代码或根本无需任何代码。</p><p>下载地址  <a href="https://www.nxp.com.cn/design/software/development-software/gui-guider:GUI-GUIDER">GUI Guider_NXP 半导体</a>  可能需要注册nxp的账号 目前最新的是1.04  。运行需要安装jave环境 jre 。里边自带了mingw编译器使用sdl驱动用来跑模拟器，如果使用8.3的lvgl库还可以导出micropython文件。这个比lvgl官方的SquareLine Studio 好在没有免费账号屏幕数跟wigt数量限制，并且还有中文界面 可以改显示语言 主题 调整屏幕刷新率可以提高帧率 ，其实是每一帧的渲染时间 修改过lv-conf.h的就明白</p><img src="https://img2022.cnblogs.com/blog/2109578/202208/2109578-20220819202726655-1228122971.png"><p>能看出来界面是基于elctron的，代码是基于java加模板生成的</p><p>还可以很简单的给控件加事件  甚至都不用写一行代码    下图里给按钮的clicked 添加事件 使按键自己隐藏</p><img src="https://img2022.cnblogs.com/blog/2109578/202208/2109578-20220819203246759-944758677.png"><p>更好玩的是可以用这个模拟器来练习lvgl库里的例程  。先看工程导出的文件夹</p><img src="https://img2022.cnblogs.com/blog/2109578/202208/2109578-20220820092036530-562638066.png"><p>custom是自定义的程序，generated就是自动生成的代码，包含gui设计与事件，这里不要动，每次点运行模拟器都会重新生成代码。</p><img src="https://img2022.cnblogs.com/blog/2109578/202208/2109578-20220820092516260-1329959598.png"><p>lvgl-simulator是模拟的用的代码，可以参考里边的main.c来移植到别的硬件，观察他的初始化</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Create a GUI-Guider app  创造app */</span></span><br><span class="line">   setup_ui(&amp;guider_ui);<span class="comment">//设计小部件的ui布局</span></span><br><span class="line">   events_init(&amp;guider_ui);<span class="comment">//设置小部件的事件</span></span><br><span class="line">   custom_init(&amp;guider_ui);<span class="comment">//运行自定义的程序</span></span><br><span class="line">   </span><br></pre></td></tr></table></figure><p>我们要测试代码片段的话就在 custom文件夹里修改   这里做个小测试，找到从github上拖下来的lvgl库里的例子 在这个地方</p><img src="https://img2022.cnblogs.com/blog/2109578/202208/2109578-20220820093137112-1961924878.png"><p>把回调函数跟测试函数拷贝到 刚才的guiguider的 custom.c里  就像这样</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: MIT</span></span><br><span class="line"><span class="comment">// Copyright 2020 NXP</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file custom.c</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      INCLUDES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;custom.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      DEFINES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      TYPEDEFS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *  STATIC PROTOTYPES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *  STATIC VARIABLES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Create a demo application</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">event_cb</span><span class="params">(<span class="keyword">lv_event_t</span> * e)</span><span class="comment">//事件声明</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LV_LOG_USER(<span class="string">&quot;Clicked&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint32_t</span> cnt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">lv_obj_t</span> * btn = lv_event_get_target(e);</span><br><span class="line">    <span class="keyword">lv_obj_t</span> * label = lv_obj_get_child(btn, <span class="number">0</span>);</span><br><span class="line">    lv_label_set_text_fmt(label, <span class="string">&quot;%&quot;</span>LV_PRIu32, cnt);</span><br><span class="line">    cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_example_event_1</span><span class="params">(<span class="keyword">void</span>)</span>  <span class="comment">//创建一个带标签的按钮</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_obj_t</span> * btn = lv_btn_create(lv_scr_act());</span><br><span class="line">    lv_obj_set_size(btn, <span class="number">100</span>, <span class="number">50</span>);</span><br><span class="line">    lv_obj_center(btn);</span><br><span class="line">    lv_obj_add_event_cb(btn, event_cb, LV_EVENT_CLICKED, <span class="literal">NULL</span>);<span class="comment">//把刚才的回调函数添加到按钮上</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">lv_obj_t</span> * label = lv_label_create(btn);</span><br><span class="line">    lv_label_set_text(label, <span class="string">&quot;Click me!&quot;</span>);</span><br><span class="line">    lv_obj_center(label);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">custom_init</span><span class="params">(lv_ui *ui)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    lv_example_event_1();    在custom-init里运行自定义函数，主要不要把回调函数写到custom-init里，会导致无法运行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存文件，点guider的绿色三角按键运行。可以看到除了我们在guider里设计的按钮，还出现了自定义的按钮。点击这个按钮上边的数字会加1.这比每次测试都要烧录单片机快多了。注意这里必须要先给当前屏幕里随便添加个带事件的widget（标签不带事件不能使用），要不然不会自动生成某些代码导致报错</p><img src="https://img2022.cnblogs.com/blog/2109578/202208/2109578-20220820094207266-489501388.png"><h1 id="Gui-Guider使用"><a href="#Gui-Guider使用" class="headerlink" title="Gui-Guider使用"></a>Gui-Guider使用</h1><p>最近NXP给LVGL出了一款组态软件，让我们coding LVGL组件之外，又多了一种开发方式，可以简化为：拖拖控件，点点鼠标就能完成简单的嵌入式GUI</p><p>虽然他仅仅支持NXP的版本，但是你可以把生成的代码copy出来直接用在自己的板子上！爽歪歪？需要改善的地方就是启动太慢！！！</p><p>下面我们上一张图来看下效果</p><img src="https://img-blog.csdnimg.cn/20210224183317457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1hpYW9YaWFvUGVuZ0Jv,size_16,color_FFFFFF,t_70"><p>视频效果如下：</p><iframe id="Y9YQDnfK-1614164354713" src="https://player.bilibili.com/player.html?aid=971784786" allowfullscreen="true" data-mediaembed="bilibili" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; overflow-wrap: break-word; display: block; width: 730px; height: 365px;"></iframe><p>LVGL出PC拖控件软件了！</p><p>目前仅支持WIN10以及ubuntu,截止到2021&#x2F;02&#x2F;24最新的版本是V1.0，官网如下：</p><p><a href="https://www.nxp.com/design/software/development-software/gui-guider:GUI-GUIDER">https://www.nxp.com/design/software/development-software/gui-guider:GUI-GUIDER</a></p><p>为了简化你们的下载流程（NXP官网下载有点麻烦，需要填各种信息），我特意把软件以及user guide上传到公众号了</p><p>关注如下，发送LVGL电脑软件就会自动获取下载地址：</p><img src="https://img-blog.csdnimg.cn/20210224185847177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1hpYW9YaWFvUGVuZ0Jv,size_16,color_FFFFFF,t_70"><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://www.cnblogs.com/kyo413/p/16607189.html">NXP GUI-Guider，lvgl的好伴侣 拖曳式设计并自动生成代码，而且还可以当模拟器练习代码，如何使用gui guider自定义代码</a></li><li><a href="https://blog.csdn.net/XiaoXiaoPengBo/article/details/114033697">NXP给LVGL出组态软件啦！！撒花！Gui-Guider使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> GUI </category>
          
          <category> LVGL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> GUI </tag>
            
            <tag> LVGL </tag>
            
            <tag> 模拟器 </tag>
            
            <tag> NXP </tag>
            
            <tag> GUI Guider </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32实现SPI跟DMA功能</title>
      <link href="/posts/423287766.html"/>
      <url>/posts/423287766.html</url>
      
        <content type="html"><![CDATA[<p>一是想总结一下SPI总线的特点与注意点，二是总结一下SPI DMA的使用</p><h1 id="SPI总线"><a href="#SPI总线" class="headerlink" title="SPI总线"></a>SPI总线</h1><h2 id="SPI信号线说明"><a href="#SPI信号线说明" class="headerlink" title="SPI信号线说明"></a>SPI信号线说明</h2><p>通常SPI通过4个引脚与外部器件相连：</p><ul><li>MISO：主设备输入&#x2F;从设备输出引脚。该引脚在从模式下发送数据，在主模式下接收数据。</li><li>MOSI：主设备输出&#x2F;从设备输入引脚。该引脚在主模式下发送数据，在从模式下接收数据。</li><li>SCK：串口时钟，作为主设备的输出，从设备的输入</li><li>NSS：从设备选择。这是一个可选的引脚，用来选择主&#x2F;从设备。它的功能是用来作为“片选引脚”，让主设备可以单独地与特定从设备通讯，避免数据线上的冲突。</li></ul><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>MOSI脚相互连接，MISO脚相互连接。这样，数据在主和从之间串行地传输(MSB位在前)。</p><p>通信总是由主设备发起。主设备通过MOSI脚把数据发送给从设备，从设备通过MISO引脚回传数据。这意味全双工通信的数据输出和数据输入是用同一个时钟信号同步的；时钟信号由主设备通过SCK脚提供。</p><img src="https://img-blog.csdnimg.cn/img_convert/9ddeb43117eecfcfd19dfaae933c13c4.png"><h2 id="NSS说明与注意点"><a href="#NSS说明与注意点" class="headerlink" title="NSS说明与注意点"></a>NSS说明与注意点</h2><img src="https://img-blog.csdnimg.cn/img_convert/acf2381be4d45baae87331ce53abb813.png"><p>NSS分为内部引脚和外部引脚。</p><p>　　NSS外部引脚可以作为输入信号或者输出信号，输入信号一般用作硬件方式从机的片选，而输出信号一般用于主SPI去片选与之相连的从SPI。</p><p>　　NSS从设备选择有两种模式：</p><p><strong>1、软件模式</strong></p><p>　　可以通过设置SPI_CR1寄存器的SSM位来使能这种模式，当它为1时，NSS引脚上的电平由SSI决定。在这种模式下NSS外部引脚可以用作它用，而内部NSS信号电平可以通过写SPI_CR1的SSI位来驱动。　 </p><p><strong>2、硬件模式</strong></p><p>​    两种方式：</p><p>（1）对于主SPI，NSS可以直接接高电平，对于从SPI，可以直接接低电平。　　</p><p>（2）当STM32F10xxx工作为主SPI，并且NSS输出已经通过SPI_CR2寄存器的SSOE位使能，这时主机的NSS讲作为输出信号，引脚信号被拉低，所有NSS引脚与这个主SPI的NSS引脚相连并配置为硬件NSS的SPI设备，将自动变成从SPI设备。</p><p>　　此时两个的NSS信号线可以接个上拉电阻直连。</p><h1 id="DMA说明"><a href="#DMA说明" class="headerlink" title="DMA说明"></a>DMA说明</h1><p>DMA是AMBA的先进高性能总线(AHB)上的设备，它有2个AHB端口：一个是从端口，用于配置DMA，另一个是主端口，使得DMA可以在不同的从设备之间传输数据。</p><p>　　DMA的作用是在没有Cortex-M3核心的干预下，在后台完成数据传输。在传输数据的过程中，主处理器可以执行其它任务，只有在整个数据块传输结束后，需要处理这些数据时才会中断主处理器的操作。它可以在对系统性能产生较小影响的情况下，实现大量数据的传输。</p><h2 id="DMA原理"><a href="#DMA原理" class="headerlink" title="DMA原理"></a>DMA原理</h2><img src="https://img-blog.csdnimg.cn/138381ccb0ff43cd9bb719cd8017f29b.png"><p>1.CPU配置好DMA。</p><p>2.SPI发出DMA请求。（在DMA_Mode_Normal模式下，该请求实际上需要CPU命令SPI发出请求）</p><p>3.若该通道有多个请求，DMA控制器通过仲裁器判断，根据配置的优先级，选择先回应该通道高优先级的请求，再回应低优先级的请求。（此过程不需要CPU参与）</p><p>4.DMA控制器回应请求后，自动根据配置，进行数据传输。（此过程不需要CPU参与）</p><h2 id="DMA通道资源分配"><a href="#DMA通道资源分配" class="headerlink" title="DMA通道资源分配"></a>DMA通道资源分配</h2><p><strong>DMA1通道</strong></p><img src="https://img-blog.csdnimg.cn/31268ec27cad48b7a00f79f4dbdb8dec.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y-r5oiR6LCi5biD5pav,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>DMA2通道</strong></p><img src="https://img-blog.csdnimg.cn/4588f91124354944b34e22e937e7c960.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Y-r5oiR6LCi5biD5pav,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="SPI-DMA的通信过程"><a href="#SPI-DMA的通信过程" class="headerlink" title="SPI_DMA的通信过程"></a>SPI_DMA的通信过程</h1><ul><li><p>设置外设地址</p></li><li><p>设置存储器地址</p></li><li><p>设置传输数据量</p></li><li><p>设置通道的配置信息</p></li><li><p>使能DMA通道，启动传输</p></li><li><p>发送时，在每次TXE被设置为’1’时发出DMA请求，DMA控制器则写数据至SPI_DR寄存器，TXE标志因此而被清除。</p></li><li><p>接收时，在每次RXNE被设置为’1’时发出DMA请求，DMA控制器则从SPI_DR寄存器读出数据，RXNE标志因此而被清除。</p></li></ul><h2 id="相关配置代码（方法一）"><a href="#相关配置代码（方法一）" class="headerlink" title="相关配置代码（方法一）"></a>相关配置代码（方法一）</h2><p>这里使用的是SPI1</p><p><strong>SPI_DMA配置</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* Function Name  : SPI1_DMA_Configuration</span></span><br><span class="line"><span class="comment">* Description    : 配置SPI1_RX的DMA通道2，SPI1_TX的DMA通道3</span></span><br><span class="line"><span class="comment">* Input          : None</span></span><br><span class="line"><span class="comment">* Output         : None</span></span><br><span class="line"><span class="comment">* Return         : None</span></span><br><span class="line"><span class="comment">* Attention             :</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_DMA_Configuration</span><span class="params">( <span class="keyword">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DMA_InitTypeDef DMA_InitStructure;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* DMA1 Channel2 (triggered by SPI1 Rx event) Config */</span></span><br><span class="line">  DMA_DeInit(DMA1_Channel2);</span><br><span class="line">  DMA_InitStructure.DMA_PeripheralBaseAddr = SPI1_DR_Addr;                          <span class="comment">//设置 SPI1 发送外设(0x4001300C) 地址(目的地址)</span></span><br><span class="line">  DMA_InitStructure.DMA_MemoryBaseAddr = (<span class="keyword">uint32_t</span>)SPI1_RX_Buff;                    <span class="comment">//设置 SRAM 存储地址(目的地址)</span></span><br><span class="line">  DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralSRC;                                <span class="comment">//传输方向 外设-内存</span></span><br><span class="line">  DMA_InitStructure.DMA_BufferSize = SPI1_ReciveBufferSize;                         <span class="comment">//设置 SPI1 发送长度</span></span><br><span class="line">  DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;</span><br><span class="line">  DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;</span><br><span class="line">  DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;</span><br><span class="line">  DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;</span><br><span class="line">  DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;</span><br><span class="line">  DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;</span><br><span class="line">  DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;</span><br><span class="line">  DMA_Init(DMA1_Channel2, &amp;DMA_InitStructure);</span><br><span class="line"> </span><br><span class="line">  DMA_ITConfig(DMA1_Channel2, DMA_IT_TC, ENABLE);</span><br><span class="line">  <span class="comment">/* Enable SPI1 DMA RX request */</span></span><br><span class="line">  SPI1-&gt;CR2 |= <span class="number">1</span>&lt;&lt;<span class="number">0</span>;                                                                 <span class="comment">//接收缓冲区DMA使能</span></span><br><span class="line">  DMA_Cmd(DMA1_Channel2, ENABLE);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* DMA1 Channel3 (triggered by SPI1 Tx event) Config */</span></span><br><span class="line">  DMA_DeInit(DMA1_Channel3);</span><br><span class="line">  DMA_InitStructure.DMA_PeripheralBaseAddr = SPI1_DR_Addr;                          <span class="comment">//设置  接收外设(0x4001300C) 地址(源地址)</span></span><br><span class="line">  DMA_InitStructure.DMA_MemoryBaseAddr = (<span class="keyword">uint32_t</span>)SPI1_TX_Buff;                    <span class="comment">//设置 SRAM 存储地址(源地址)</span></span><br><span class="line">  DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;                                <span class="comment">//传输方向 内存-外设</span></span><br><span class="line">  DMA_InitStructure.DMA_BufferSize = SPI1_SendBufferSize;                           <span class="comment">//设置 SPI1 接收长度</span></span><br><span class="line">  DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;                  <span class="comment">//外设地址增量(不变)</span></span><br><span class="line">  DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;                           <span class="comment">//内存地址增量(变化)</span></span><br><span class="line">  DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;           <span class="comment">//外设传输宽度(字节)</span></span><br><span class="line">  DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;                   <span class="comment">//内存传输宽度(字节)</span></span><br><span class="line">  DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;                                     <span class="comment">//传输方式,一次传输完停止,不重新加载</span></span><br><span class="line">  DMA_InitStructure.DMA_Priority = DMA_Priority_VeryHigh;                           <span class="comment">//中断方式-高(三级)</span></span><br><span class="line">  DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;                                      <span class="comment">//内存到内存方式禁止</span></span><br><span class="line">  DMA_Init(DMA1_Channel3, &amp;DMA_InitStructure);</span><br><span class="line"> </span><br><span class="line">  DMA_ITConfig(DMA1_Channel3, DMA_IT_TC, ENABLE);                                   <span class="comment">//开启 DMA1_Channel3 传输完成中断</span></span><br><span class="line">  DMA_ITConfig(DMA1_Channel3, DMA_IT_TE, ENABLE);                                   <span class="comment">//开启 DMA1_Channel3 传输错误中断</span></span><br><span class="line">  <span class="comment">/* Enable SPI1 DMA TX request */</span></span><br><span class="line">  SPI1-&gt;CR2 |= <span class="number">1</span>&lt;&lt;<span class="number">1</span>;                                                                <span class="comment">//发送缓冲区DMA使能</span></span><br><span class="line">  DMA_Cmd(DMA1_Channel3, DISABLE);                                                  <span class="comment">//开启 DMA 通道 DMA1_Channel3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SPI发送</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* Function Name  : SPI1_Send</span></span><br><span class="line"><span class="comment">* Description    : SPI1的DMA方式发送</span></span><br><span class="line"><span class="comment">* Input          : SPI1_TX_Buff[SPI1_SendBufferSize]</span></span><br><span class="line"><span class="comment">* Output         : None</span></span><br><span class="line"><span class="comment">* Return         : None</span></span><br><span class="line"><span class="comment">* Attention             : 关闭DMA通道3之前必须等待TXE为1，等待忙标志为0</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_Send</span><span class="params">( u8 *buff, u32 len )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DMA1_Channel3-&gt;CPAR = SPI1_DR_Addr; <span class="comment">//外设地址</span></span><br><span class="line">    DMA1_Channel3-&gt;CMAR = (u32) buff; <span class="comment">//mem地址</span></span><br><span class="line">    DMA1_Channel3-&gt;CNDTR = len ; <span class="comment">//传输长度</span></span><br><span class="line">    DMA1_Channel3-&gt;CCR = (<span class="number">0</span> &lt;&lt; <span class="number">14</span>) | <span class="comment">// 非存储器到存储器模式</span></span><br><span class="line">            (<span class="number">2</span> &lt;&lt; <span class="number">12</span>) | <span class="comment">// 通道优先级高</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt; <span class="number">11</span>) | <span class="comment">// 存储器数据宽度8bit</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt; <span class="number">10</span>) | <span class="comment">// 存储器数据宽度8bit</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">9</span>) | <span class="comment">// 外设数据宽度8bit</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">8</span>) | <span class="comment">// 外设数据宽度8bit</span></span><br><span class="line">            (<span class="number">1</span> &lt;&lt;  <span class="number">7</span>) | <span class="comment">// 存储器地址增量模式</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">6</span>) | <span class="comment">// 外设地址增量模式(不增)</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">5</span>) | <span class="comment">// 非循环模式</span></span><br><span class="line">            (<span class="number">1</span> &lt;&lt;  <span class="number">4</span>) | <span class="comment">// 从存储器读</span></span><br><span class="line">            (<span class="number">1</span> &lt;&lt;  <span class="number">3</span>) | <span class="comment">// 允许传输错误中断</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">2</span>) | <span class="comment">// 允许半传输中断</span></span><br><span class="line">            (<span class="number">1</span> &lt;&lt;  <span class="number">1</span>) | <span class="comment">// 允许传输完成中断</span></span><br><span class="line">            (<span class="number">1</span>);        <span class="comment">// 通道开启</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>SPI接收</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">* Function Name  : SPI1_Recive</span></span><br><span class="line"><span class="comment">* Description    : SPI1的DMA方式接收</span></span><br><span class="line"><span class="comment">* Input          : None</span></span><br><span class="line"><span class="comment">* Output         : SPI1_RX_Buff[SPI1_ReciveBufferSize]</span></span><br><span class="line"><span class="comment">* Return         : None</span></span><br><span class="line"><span class="comment">* Attention             : 必须要先关闭通道2,然后再配置通道2的参数</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_Recive</span><span class="params">( u8 *buff, u32 len )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DMA1_Channel2-&gt;CCR &amp;= ~( <span class="number">1</span> &lt;&lt; <span class="number">0</span> );          <span class="comment">//关闭DMA通道2</span></span><br><span class="line"> </span><br><span class="line">    DMA1_Channel2-&gt;CPAR = SPI1_DR_Addr; <span class="comment">//外设地址</span></span><br><span class="line">    DMA1_Channel2-&gt;CMAR = (<span class="keyword">uint32_t</span>)buff; <span class="comment">//mem地址</span></span><br><span class="line">    DMA1_Channel2-&gt;CNDTR = len ; <span class="comment">//传输长度</span></span><br><span class="line">    DMA1_Channel2-&gt;CCR = (<span class="number">0</span> &lt;&lt; <span class="number">14</span>) | <span class="comment">// 非存储器到存储器模式</span></span><br><span class="line">            (<span class="number">2</span> &lt;&lt; <span class="number">12</span>) | <span class="comment">// 通道优先级高</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt; <span class="number">11</span>) | <span class="comment">// 存储器数据宽度8bit</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt; <span class="number">10</span>) | <span class="comment">// 存储器数据宽度8bit</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">9</span>) | <span class="comment">// 外设数据宽度8bit</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">8</span>) | <span class="comment">// 外设数据宽度8bit</span></span><br><span class="line">            (<span class="number">1</span> &lt;&lt;  <span class="number">7</span>) | <span class="comment">// 存储器地址增量模式</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">6</span>) | <span class="comment">// 外设地址增量模式(不增)</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">5</span>) | <span class="comment">// 非循环模式</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">4</span>) | <span class="comment">// 传输方向 外设-内存</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">3</span>) | <span class="comment">// 允许传输错误中断</span></span><br><span class="line">            (<span class="number">0</span> &lt;&lt;  <span class="number">2</span>) | <span class="comment">// 允许半传输中断</span></span><br><span class="line">            (<span class="number">1</span> &lt;&lt;  <span class="number">1</span>) | <span class="comment">// 允许传输完成中断</span></span><br><span class="line">            (<span class="number">1</span>);        <span class="comment">// 通道开启</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关配置代码（方法二）"><a href="#相关配置代码（方法二）" class="headerlink" title="相关配置代码（方法二）"></a>相关配置代码（方法二）</h2><p><em>既然使用的是SPI+DMA,必定要使能SPI，详细请参考</em></p><p><em><a href="https://blog.csdn.net/m0_67530207/article/details/127021750">SPI配置</a></em></p><p><em>配置完SPI后，配置DMA，如下</em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dma_init</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> SendBuff,<span class="keyword">unsigned</span> <span class="keyword">int</span> buffer_size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">DMA_InitTypeDef DMA_InitStructure;</span><br><span class="line">RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1,ENABLE);</span><br><span class="line">DMA_DeInit(DMA1_Channel3);</span><br><span class="line"><span class="comment">/*DMA配置*/</span></span><br><span class="line"> </span><br><span class="line">DMA_InitStructure.DMA_PeripheralBaseAddr = (<span class="keyword">uint32_t</span>)&amp;SPI1-&gt;DR;</span><br><span class="line"><span class="comment">//SPI数据寄存器地址</span></span><br><span class="line">DMA_InitStructure.DMA_MemoryBaseAddr = (<span class="keyword">uint32_t</span>)SendBuff; </span><br><span class="line"><span class="comment">//内存地址(要传输的变量的指针)</span></span><br><span class="line">DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST; </span><br><span class="line"><span class="comment">//方向(从内存到外设)</span></span><br><span class="line"><span class="comment">//DMA_DIR_PeripheralSRC为从外设到内存</span></span><br><span class="line">DMA_InitStructure.DMA_BufferSize = buffer_size; </span><br><span class="line"><span class="comment">//传输内容的大小</span></span><br><span class="line">DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable; </span><br><span class="line"><span class="comment">//外设地址不增</span></span><br><span class="line">DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable; </span><br><span class="line"><span class="comment">//内存地址自增</span></span><br><span class="line">DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte ; </span><br><span class="line"><span class="comment">//外设数据单位</span></span><br><span class="line">DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte ; </span><br><span class="line"><span class="comment">//内存数据单位</span></span><br><span class="line">DMA_InitStructure.DMA_Mode = DMA_Mode_Normal ; </span><br><span class="line"><span class="comment">//DMA模式：一次传输</span></span><br><span class="line">DMA_InitStructure.DMA_Priority = DMA_Priority_Medium ; </span><br><span class="line"><span class="comment">//优先级：高</span></span><br><span class="line">DMA_InitStructure.DMA_M2M = DMA_M2M_Disable; </span><br><span class="line"><span class="comment">//禁止内存到内存的传输</span></span><br><span class="line"> </span><br><span class="line">DMA_Init(DMA1_Channel3, &amp;DMA_InitStructure); </span><br><span class="line"><span class="comment">//配置DMA1的3通道</span></span><br><span class="line">DMA_Cmd(DMA1_Channel3, ENABLE);       <span class="comment">//使能DMA</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：DMA_PeripheralBaseAddr不是SPI外设的地址，而是SPI1-&gt;DR即SPI数据寄存器的地址</strong></p><p><strong>因为DMA_Mode_Normal模式使用一次后DMA_BufferSize会清零，如下代码用于重置DMA_BufferSize</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DMA_Buffercounter_reset</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> buffer_size)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">DMA_Cmd(DMA1_Channel3, DISABLE );     </span><br><span class="line"><span class="comment">//失能DMA，使得DMA_SetCurrDataCounter能够使用</span></span><br><span class="line"> DMA_SetCurrDataCounter(DMA1_Channel3,buffer_size); </span><br><span class="line"><span class="comment">//一次传输模式，DMA_BufferSize执行一次后会清零</span></span><br><span class="line"><span class="comment">//后续需要重复传输的时候，需要使用该函数再次设置DMA_BufferSize</span></span><br><span class="line"> DMA_Cmd(DMA1_Channel3, ENABLE);       </span><br><span class="line"><span class="comment">//使能DMA</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="主函数编写如下"><a href="#主函数编写如下" class="headerlink" title="主函数编写如下"></a>主函数编写如下</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> buff_size 256</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> sendbuff[buff_size];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mian</span><span class="params">(coid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dma_init((<span class="keyword">unsigned</span> <span class="keyword">int</span>)sendbuff,buff_size);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span> ;i&lt;buff_size;i++)</span><br><span class="line">&#123;</span><br><span class="line">          sendbuff[i]=color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span> ; i&lt;(<span class="number">32768</span>/buff_size); i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  SPI_I2S_DMACmd(SPI1,SPI_I2S_DMAReq_Tx,ENABLE); </span><br><span class="line">          <span class="comment">//SPI向DMA发出请求，DMA会通过仲裁器自动回应请求 </span></span><br><span class="line">  DMA_Buffercounter_reset(buff_size);</span><br><span class="line">          <span class="comment">//重置DMA_BufferSize，为下一次DMA传送做好准备</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(DMA_GetFlagStatus(DMA1_FLAG_TC3)!=RESET)<span class="comment">//判断DMA是否传输完成</span></span><br><span class="line">&#123;</span><br><span class="line">DMA_ClearFlag(DMA1_FLAG_TC3);<span class="comment">//DMA传输完成，清除标志位</span></span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/ba_wang_mao/article/details/109166336">STM32 SPI DMA 的使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> STM32 </category>
          
          <category> DMA </category>
          
          <category> SPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> STM32 </tag>
            
            <tag> SPI </tag>
            
            <tag> keil </tag>
            
            <tag> DMA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32通过SPI驱动ST7789(使用DMA)</title>
      <link href="/posts/944314574.html"/>
      <url>/posts/944314574.html</url>
      
        <content type="html"><![CDATA[<h1 id="DMA简单介绍"><a href="#DMA简单介绍" class="headerlink" title="DMA简单介绍"></a>DMA简单介绍</h1><p>DMA 直接内存搬运技术，使数据不经过cpu，直接从内存搬运到spi的发送的寄存器里面，这样做的好处是减少cpu的负担，而且能大大提升显示屏的刷新速率</p><h1 id="使用spi直接驱动ST7789显示屏"><a href="#使用spi直接驱动ST7789显示屏" class="headerlink" title="使用spi直接驱动ST7789显示屏"></a>使用spi直接驱动ST7789显示屏</h1><p>最开始我是用spi直接驱动 显示屏幕，但我发现即使是使用spi的最大频率发送数据，刷屏的速率依旧很慢</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;st7789.h&quot;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"> </span>&#123; </span><br><span class="line"> delay_init();     <span class="comment">//ÑÓÊ±º¯Êý³õÊ¼»¯  </span></span><br><span class="line"> initlcd();</span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"> fillScreen(<span class="number">0xf800</span>);</span><br><span class="line">   <span class="comment">//delay_us(100);</span></span><br><span class="line"> fillScreen(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// delay_us(100);</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&lt;st7789.h&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DC    PBout(11) <span class="comment">//DC  </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeData</span><span class="params">(u8 data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeCommand</span><span class="params">(u8 data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillScreen</span><span class="params">(u16 color)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_SetSpeed</span><span class="params">(u8 SpeedSet)</span></span>;   </span><br><span class="line"><span class="function">u8 <span class="title">SPI1_ReadWriteByte</span><span class="params">(u8 TxData)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&lt;st7789.c&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;st7789.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">SPI_InitTypeDef  SPI_InitStructure;</span><br><span class="line"><span class="comment">//spi1的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    </span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_SPI1, ENABLE );</span><br><span class="line"> </span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//¸´ÓÃÍÆÍìÊä³ö</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"> GPIO_SetBits(GPIOA,GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7);</span><br><span class="line"></span><br><span class="line">SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;  <span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_Mode = SPI_Mode_Master;<span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;<span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;<span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;<span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;</span><br><span class="line">SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_256;<span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;<span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_CRCPolynomial = <span class="number">7</span>;<span class="comment">//</span></span><br><span class="line">SPI_Init(SPI1, &amp;SPI_InitStructure);  <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line">SPI_Cmd(SPI1, ENABLE); <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">SPI1_ReadWriteByte(<span class="number">0xff</span>);<span class="comment">// </span></span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"> <span class="comment">//设置spi的传输速率</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_SetSpeed</span><span class="params">(u8 SpeedSet)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SPI_InitStructure.SPI_BaudRatePrescaler = SpeedSet ;</span><br><span class="line">  SPI_Init(SPI1, &amp;SPI_InitStructure);</span><br><span class="line">SPI_Cmd(SPI1,ENABLE);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//spi 读写</span></span><br><span class="line"><span class="function">u8 <span class="title">SPI1_ReadWriteByte</span><span class="params">(u8 TxData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 retry=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">while</span> (SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE) == RESET) <span class="comment">//</span></span><br><span class="line">&#123;</span><br><span class="line">retry++;</span><br><span class="line"><span class="keyword">if</span>(retry&gt;<span class="number">200</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;  </span><br><span class="line">SPI_I2S_SendData(SPI1, TxData); </span><br><span class="line">retry=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE) == RESET)<span class="comment">//</span></span><br><span class="line">&#123;</span><br><span class="line">retry++;</span><br><span class="line"><span class="keyword">if</span>(retry&gt;<span class="number">200</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;      </span><br><span class="line"><span class="keyword">return</span> SPI_I2S_ReceiveData(SPI1); <span class="comment">//    </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化显示屏</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span></span>&#123;</span><br><span class="line"> RCC-&gt;APB2ENR|=<span class="number">1</span>&lt;&lt;<span class="number">3</span>;<span class="comment">//时钟使能 </span></span><br><span class="line">GPIOB-&gt;CRH&amp;=<span class="number">0XFFFF0FFF</span>;<span class="comment">//设置为输出模式</span></span><br><span class="line">GPIOB-&gt;CRH|=<span class="number">0X00003000</span>;</span><br><span class="line">GPIOB-&gt;ODR|=<span class="number">1</span>&lt;<span class="number">11</span>;     <span class="comment">//dc high</span></span><br><span class="line"></span><br><span class="line">    SPI1_Init();</span><br><span class="line">SPI1_SetSpeed(SPI_BaudRatePrescaler_2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    writeCommand(<span class="number">0x01</span>);</span><br><span class="line">delay_us(<span class="number">150</span>);</span><br><span class="line">writeCommand(<span class="number">0x11</span>);</span><br><span class="line">delay_us(<span class="number">120</span>);</span><br><span class="line">writeCommand(<span class="number">0x3A</span>);</span><br><span class="line">writeData(<span class="number">0x55</span>);</span><br><span class="line">writeCommand(<span class="number">0x36</span>);</span><br><span class="line">writeData(<span class="number">0x00</span>);</span><br><span class="line">writeCommand(<span class="number">0x21</span>);</span><br><span class="line">writeCommand(<span class="number">0x13</span>);</span><br><span class="line">writeCommand(<span class="number">0x29</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeData</span><span class="params">(u8 data)</span></span>&#123;</span><br><span class="line">   DC = <span class="number">1</span>;</span><br><span class="line">   SPI1_ReadWriteByte(data);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeCommand</span><span class="params">(u8 cmd)</span></span>&#123;</span><br><span class="line"> DC = <span class="number">0</span>;</span><br><span class="line">   SPI1_ReadWriteByte(cmd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillScreen</span><span class="params">(u16 color)</span></span>&#123;</span><br><span class="line">  u16 i ,j;</span><br><span class="line">  writeCommand(<span class="number">0x2A</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">  writeData(<span class="number">240</span>);</span><br><span class="line">  writeCommand(<span class="number">0X2B</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">  writeData(<span class="number">0X01</span>);</span><br><span class="line">  writeData(<span class="number">0X40</span>);</span><br><span class="line">  writeCommand(<span class="number">0X2C</span>);</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span> ; i&lt;<span class="number">240</span> ; i++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(j = <span class="number">0</span> ; j&lt;<span class="number">320</span> ; j++)&#123;</span><br><span class="line">       writeData(color&gt;&gt;<span class="number">8</span>);  </span><br><span class="line">          writeData(color);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p><strong>刷新频率约 1秒3帧</strong></p><img src="https://img-blog.csdnimg.cn/20200523130634474.gif#pic_center"><h1 id="使用spi加dma驱动ST7789显示屏"><a href="#使用spi加dma驱动ST7789显示屏" class="headerlink" title="使用spi加dma驱动ST7789显示屏"></a>使用spi加dma驱动ST7789显示屏</h1><blockquote><p>在使dma搬运数据后刷新速率有了明显的提升</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;st7789.h&quot;</span>    </span></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"> </span>&#123; </span><br><span class="line"> delay_init();       </span><br><span class="line"> initlcd();</span><br><span class="line"> <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">   fillScreen(<span class="number">0xf800</span>);</span><br><span class="line">   fillScreen(<span class="number">0xffff</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&lt;st7789.h&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DC    PBout(11) <span class="comment">//DC  </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeData</span><span class="params">(u8 data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeCommand</span><span class="params">(u8 data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillScreen</span><span class="params">(u16 color)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_SetSpeed</span><span class="params">(u8 SpeedSet)</span></span>;   </span><br><span class="line"><span class="function">u8 <span class="title">SPI1_ReadWriteByte</span><span class="params">(u8 TxData)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MYDMA_Config</span><span class="params">(DMA_Channel_TypeDef*DMA_CHx,u32 cpar,u32 cmar,u16 cndtr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MYDMA_Enable</span><span class="params">(DMA_Channel_TypeDef*DMA_CHx)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&lt;st7789.c&gt;</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;st7789.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line">u8 SendBuff[<span class="number">480</span>];</span><br><span class="line">DMA_InitTypeDef DMA_InitStructure;</span><br><span class="line">u16 DMA1_MEM_LEN;    </span><br><span class="line"><span class="comment">//配置dma</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MYDMA_Config</span><span class="params">(DMA_Channel_TypeDef* DMA_CHx,u32 cpar,u32 cmar,u16 cndtr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> RCC_AHBPeriphClockCmd(RCC_AHBPeriph_DMA1, ENABLE);<span class="comment">//Ê¹ÄÜDMA´«Êä</span></span><br><span class="line"></span><br><span class="line">    DMA_DeInit(DMA_CHx);   <span class="comment">//将dma1的某通道</span></span><br><span class="line">DMA1_MEM_LEN=cndtr;</span><br><span class="line">DMA_InitStructure.DMA_PeripheralBaseAddr = cpar;  <span class="comment">//dma 要搬运到的外设地址</span></span><br><span class="line">DMA_InitStructure.DMA_MemoryBaseAddr = cmar;  <span class="comment">//dma要搬运的内存的地址</span></span><br><span class="line">DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralDST;  <span class="comment">//搬运方向， 从内存到外设</span></span><br><span class="line">DMA_InitStructure.DMA_BufferSize = cndtr; <span class="comment">//要搬运的内存的大小</span></span><br><span class="line">DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable; <span class="comment">//  传输过程中外设的基地址不变</span></span><br><span class="line">DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;  <span class="comment">//传输过程中内存地址递增</span></span><br><span class="line">DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;  <span class="comment">//数据宽度为八位</span></span><br><span class="line">DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;<span class="comment">//数据宽度为八位 </span></span><br><span class="line">DMA_InitStructure.DMA_Mode = DMA_Mode_Normal;  <span class="comment">//正常传输模式</span></span><br><span class="line">DMA_InitStructure.DMA_Priority = DMA_Priority_Medium; <span class="comment">//优先级设置</span></span><br><span class="line">DMA_InitStructure.DMA_M2M = DMA_M2M_Disable;  <span class="comment">//没有内存到内存的传输</span></span><br><span class="line">DMA_Init(DMA_CHx, &amp;DMA_InitStructure);  <span class="comment">//</span></span><br><span class="line">  </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//使能dma1的通道3，因为spi输出对应的是此通道</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MYDMA_Enable</span><span class="params">(DMA_Channel_TypeDef*DMA_CHx)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">DMA_Cmd(DMA_CHx, DISABLE );    </span><br><span class="line"> DMA_SetCurrDataCounter(DMA1_Channel3,DMA1_MEM_LEN);</span><br><span class="line"> DMA_Cmd(DMA_CHx, ENABLE);  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SPI_InitTypeDef  SPI_InitStructure;</span><br><span class="line"><span class="comment">//spi1的初始化</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">  </span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_SPI1, ENABLE );</span><br><span class="line"> </span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5 | GPIO_Pin_6 | GPIO_Pin_7;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  </span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"> GPIO_SetBits(GPIOA,GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7);</span><br><span class="line"></span><br><span class="line">SPI_InitStructure.SPI_Direction = SPI_Direction_2Lines_FullDuplex;  </span><br><span class="line">SPI_InitStructure.SPI_Mode = SPI_Mode_Master;</span><br><span class="line">SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b;</span><br><span class="line">SPI_InitStructure.SPI_CPOL = SPI_CPOL_High;</span><br><span class="line">SPI_InitStructure.SPI_CPHA = SPI_CPHA_2Edge;</span><br><span class="line">SPI_InitStructure.SPI_NSS = SPI_NSS_Soft;</span><br><span class="line">SPI_InitStructure.SPI_BaudRatePrescaler = SPI_BaudRatePrescaler_256;<span class="comment">//</span></span><br><span class="line">SPI_InitStructure.SPI_FirstBit = SPI_FirstBit_MSB;</span><br><span class="line">SPI_InitStructure.SPI_CRCPolynomial = <span class="number">7</span>;</span><br><span class="line">SPI_Init(SPI1, &amp;SPI_InitStructure); <span class="comment">//´æÆ÷</span></span><br><span class="line"> </span><br><span class="line">SPI_Cmd(SPI1, ENABLE); </span><br><span class="line"></span><br><span class="line">SPI1_ReadWriteByte(<span class="number">0xff</span>); </span><br><span class="line">&#125;   </span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPI1_SetSpeed</span><span class="params">(u8 SpeedSet)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SPI_InitStructure.SPI_BaudRatePrescaler = SpeedSet ;</span><br><span class="line">  SPI_Init(SPI1, &amp;SPI_InitStructure);</span><br><span class="line">SPI_Cmd(SPI1,ENABLE);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">u8 <span class="title">SPI1_ReadWriteByte</span><span class="params">(u8 TxData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 retry=<span class="number">0</span>; </span><br><span class="line"><span class="keyword">while</span> (SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_TXE) == RESET) <span class="comment">//</span></span><br><span class="line">&#123;</span><br><span class="line">retry++;</span><br><span class="line"><span class="keyword">if</span>(retry&gt;<span class="number">200</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;  </span><br><span class="line">SPI_I2S_SendData(SPI1, TxData); </span><br><span class="line">retry=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (SPI_I2S_GetFlagStatus(SPI1, SPI_I2S_FLAG_RXNE) == RESET)<span class="comment">//</span></span><br><span class="line">&#123;</span><br><span class="line">retry++;</span><br><span class="line"><span class="keyword">if</span>(retry&gt;<span class="number">200</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;      </span><br><span class="line"><span class="keyword">return</span> SPI_I2S_ReceiveData(SPI1);     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initlcd</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line"> RCC-&gt;APB2ENR|=<span class="number">1</span>&lt;&lt;<span class="number">3</span>;<span class="comment">//?????IO PORTC??  </span></span><br><span class="line">GPIOB-&gt;CRH&amp;=<span class="number">0XFFFF0FFF</span>;<span class="comment">//PC11/12 </span></span><br><span class="line">GPIOB-&gt;CRH|=<span class="number">0X00003000</span>;</span><br><span class="line">GPIOB-&gt;ODR|=<span class="number">1</span>&lt;<span class="number">11</span>;     <span class="comment">//PC11,12 ???</span></span><br><span class="line">  </span><br><span class="line">  SPI1_Init();</span><br><span class="line">SPI1_SetSpeed(SPI_BaudRatePrescaler_2);</span><br><span class="line"><span class="comment">//配置dma</span></span><br><span class="line">MYDMA_Config(DMA1_Channel3,(u32)&amp;SPI1-&gt;DR,(u32)SendBuff,<span class="number">480</span>);</span><br><span class="line"></span><br><span class="line">  writeCommand(<span class="number">0x01</span>);</span><br><span class="line">delay_us(<span class="number">150</span>);</span><br><span class="line">writeCommand(<span class="number">0x11</span>);</span><br><span class="line">delay_us(<span class="number">120</span>);</span><br><span class="line">writeCommand(<span class="number">0x3A</span>);</span><br><span class="line">writeData(<span class="number">0x55</span>);</span><br><span class="line">writeCommand(<span class="number">0x36</span>);</span><br><span class="line">writeData(<span class="number">0x00</span>);</span><br><span class="line">writeCommand(<span class="number">0x21</span>);</span><br><span class="line">writeCommand(<span class="number">0x13</span>);</span><br><span class="line">writeCommand(<span class="number">0x29</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeData</span><span class="params">(u8 data)</span></span>&#123;</span><br><span class="line">   DC = <span class="number">1</span>;</span><br><span class="line">   SPI1_ReadWriteByte(data);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writeCommand</span><span class="params">(u8 cmd)</span></span>&#123;</span><br><span class="line"> DC = <span class="number">0</span>;</span><br><span class="line">   SPI1_ReadWriteByte(cmd);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillScreen</span><span class="params">(u16 color)</span></span>&#123;</span><br><span class="line">u16 i ,j;</span><br><span class="line"><span class="comment">//DC = 0;</span></span><br><span class="line">  writeCommand(<span class="number">0x2A</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">writeData(<span class="number">0</span>);</span><br><span class="line">writeData(<span class="number">240</span>);</span><br><span class="line">  writeCommand(<span class="number">0X2B</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">  writeData(<span class="number">0</span>);</span><br><span class="line">writeData(<span class="number">0X01</span>);</span><br><span class="line">writeData(<span class="number">0X40</span>);</span><br><span class="line">  writeCommand(<span class="number">0X2C</span>);</span><br><span class="line">DC = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span> ;j&lt;<span class="number">480</span>;)&#123;</span><br><span class="line">      SendBuff[j] = color&gt;&gt;<span class="number">8</span>;</span><br><span class="line">  SendBuff[j+<span class="number">1</span>] = color;</span><br><span class="line">  j += <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span> ; i&lt;<span class="number">320</span> ; i++)&#123;</span><br><span class="line"></span><br><span class="line">  SPI_I2S_DMACmd(SPI1,SPI_I2S_DMAReq_Tx,ENABLE); <span class="comment">//????1?DMA?? </span></span><br><span class="line">      MYDMA_Enable(DMA1_Channel3);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(DMA_GetFlagStatus(DMA1_FLAG_TC3)!=RESET)<span class="comment">//µÈ´ýÍ¨µÀ4´«ÊäÍê³É</span></span><br><span class="line">&#123;</span><br><span class="line">DMA_ClearFlag(DMA1_FLAG_TC3);<span class="comment">//Çå³ýÍ¨µÀ4´«ÊäÍê³É±êÖ¾</span></span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h2><p><strong>刷新速率约一秒十多帧</strong></p><img src="https://img-blog.csdnimg.cn/20200523130804683.gif#pic_center"><h1 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h1><p>DC(A0)———— PB11<br>CLK———– PA5<br>MISO——— PA6<br>MOSI(SDA)——— PA7<br>CS———— GND</p><p>RESET———— VDD<br>BL———— VDD</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>dma和spi部分参考正点原子代码，示例使用的主控芯片是stm32f103</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/fengli1995/article/details/106298491">基于stm32 标准库spi驱动st7789(使用DMA)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> FreeRTOS </category>
          
          <category> STM32 </category>
          
          <category> DMA </category>
          
          <category> ST7789 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> STM32 </tag>
            
            <tag> FreeRTOS </tag>
            
            <tag> SPI </tag>
            
            <tag> keil </tag>
            
            <tag> DMA </tag>
            
            <tag> LCD </tag>
            
            <tag> TFT </tag>
            
            <tag> ST7789 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KEIL下载完程序后自动启动</title>
      <link href="/posts/4258229454.html"/>
      <url>/posts/4258229454.html</url>
      
        <content type="html"><![CDATA[<h1 id="勾选自动运行选项"><a href="#勾选自动运行选项" class="headerlink" title="勾选自动运行选项"></a>勾选自动运行选项</h1><p>勾选-&gt; Flash Download -&gt; Reset and Run 选项</p><img src="https://img-blog.csdnimg.cn/4a6f3487c7ee4d068f3f702bcc746922.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA55-z5aS054mb,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="取消勾选pack功能"><a href="#取消勾选pack功能" class="headerlink" title="取消勾选pack功能"></a>取消勾选pack功能</h1><p>取消勾选-&gt; Pack -&gt; Enable</p><img src="https://img-blog.csdnimg.cn/b748d9e401594748b7e154942a21fa03.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA55-z5aS054mb,size_20,color_FFFFFF,t_70,g_se,x_16"><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看（侵删）</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_43869518/article/details/123950248">KEIL下载完程序,芯片程序自动重启必要的两个配置</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> KEIL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KEIL5 </tag>
            
            <tag> 下载程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32系统学习(FreeRTOS)(一)之移植FreeRTOS</title>
      <link href="/posts/789507877.html"/>
      <url>/posts/789507877.html</url>
      
        <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="下载FreeRTOS系统"><a href="#下载FreeRTOS系统" class="headerlink" title="下载FreeRTOS系统"></a>下载FreeRTOS系统</h2><p><strong>在移植之前，我们首先要获取到FreeRTOS的官方的源码包。这里我们提供两个下载链接:</strong></p><blockquote><p>一个是官网：<a href="http://www.freertos.org/">http://www.freertos.org/</a><br>另外一个是代码托管网站：<a href="https://sourceforge.net/projects/freertos/files/FreeRTOS/">https://sourceforge.net/projects/freertos/files/FreeRTOS/</a></p></blockquote><p>这里我们演示如何在代码托管网站里面下载。打开网站链接之后，我们选择FreeRTOS的最新版本V9.0.0（2016年），尽管现在FreeRTOS的版本已经更新到V10.0.1了，但是我们还是选择V9.0.0，因为内核很稳定，并且网上资料很多，因为V10.0.0版本之后是亚马逊收购了FreeRTOS之后才出来的版本，主要添加了一些云端组件，我们本书所讲的FreeRTOS是实时内核，采用V9.0.0版本足以。</p><p><strong>注：本次自己测试使用的是官网中下载最新版本 FreeRTOSv202112.00</strong></p><ul><li>打开官网后如图所示，并点击右上角绿色按钮</li></ul><img src="https://img-blog.csdnimg.cn/37daecc952f149d9a2c1dbd744307de9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>跳转到如下页面之后，点击下载即可</li></ul><img src="https://img-blog.csdnimg.cn/3b449f5cadbd4ea1a0857f1f14158a85.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>下载完成之后解压，如图所示</li></ul><img src="https://img-blog.csdnimg.cn/7c796a6edba64079867b0b65756494e3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><h2 id="简单介绍FreeRTOS"><a href="#简单介绍FreeRTOS" class="headerlink" title="简单介绍FreeRTOS"></a>简单介绍FreeRTOS</h2><p>FreeRTOS包含Demo例程和内核源码（比较重要，我们就需要提取该目录下的大部分文件）。<br><strong>Source</strong>文件夹里面包含的是FreeRTOS内核的源代码，我们移植FreeRTOS的时候就需要这部分源代码；<br><strong>Demo</strong> 文件夹里面包含了FreeRTOS官方为各个单片机移植好的工程代码，FreeRTOS为了推广自己，会给各种半导体厂商的评估板写好完整的工程程序，这些程序就放在Demo这个目录下，这部分Demo非常有参考价值。</p><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211446972-80282122.png"><h3 id="Source文件夹"><a href="#Source文件夹" class="headerlink" title="Source文件夹"></a>Source文件夹</h3><p>这里我们再重点分析下FreeRTOS&#x2F; Source文件夹下的文件，①和③包含的是FreeRTOS的通用的头文件和C文件，这两部分的文件试用于各种编译器和处理器，是通用的。需要移植的头文件和C文件放在②portblle这个文件夹。</p><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211447309-2081394159.png"><p>portblle文件夹，是与编译器相关的文件夹，在不同的编译器中使用不同的支持文件。①中的KEIL就是我们就是我们使用的编译器，其实KEIL里面的内容跟RVDS里面的内容一样，所以我们只需要③RVDS文件夹里面的内容即可，里面包含了各种处理器相关的文件夹，从文件夹的名字我们就非常熟悉了，我们学习的STM32有M0、M3、M4等各种系列，FreeRTOS是一个软件，单片机是一个硬件，FreeRTOS要想运行在一个单片机上面，它们就必须关联在一起。MemMang文件夹下存放的是跟内存管理相关的源文件。</p><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211447629-790327210.png"><h2 id="使用简单基本STM32工程"><a href="#使用简单基本STM32工程" class="headerlink" title="使用简单基本STM32工程"></a>使用简单基本STM32工程</h2><p>要移植 FreeRTOS，肯定需要一个基础工程，基础工程越简单越好，这里我使用的是STM32F103RET6的板子，例程则选择最基础的OLED实验来作为基础工程<br>复制 stm32f103vet6_OLED_I2C 到工程位置即可</p><h1 id="移植过程参考一（这个测试）"><a href="#移植过程参考一（这个测试）" class="headerlink" title="移植过程参考一（这个测试）"></a>移植过程参考一（这个测试）</h1><p><strong>注意：这个方法是跑不起来，进不去任务，是因为配置文件不对，在使用了后边方法修改的配置文件后才实现！</strong></p><h2 id="2-1、添加FreeRTOS-源码"><a href="#2-1、添加FreeRTOS-源码" class="headerlink" title="2.1、添加FreeRTOS 源码"></a>2.1、添加FreeRTOS 源码</h2><blockquote><p>在基础工程中新建一个名为 FreeRTOS 的文件夹，如图所示</p></blockquote><img src="https://img-blog.csdnimg.cn/5d186f8ba890426aa3d126d6e752991f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>创建 FreeRTOS 文件夹以后就可以将 FreeRTOS 的源码添加到这个文件夹中，打开刚刚下载的FreeRTOS源码，找到路径为：FreeRTOSv202111.00\FreeRTOS\Source下的文件</p></blockquote><img src="https://img-blog.csdnimg.cn/33f5aac8f52f40efba5a9c9b0ec4807a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>将所有.c文件以及include、portable两个文件夹复制到基础工程下刚刚创建的FreeRTOS 文件夹中，如下图所示：</p></blockquote><img src="https://img-blog.csdnimg.cn/b499afd4026f463a94a8640d09871203.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>复制完成之后打开portable文件夹，我们只需要留下 keil、MemMang 和 RVDS 这三个文件夹，其他的都可以删除掉，删除完成之后如下图所示</p></blockquote><img src="https://img-blog.csdnimg.cn/067b726c6c5f4d6db1a33f446bfc1747.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>接着打开FreeRTOS源码，找到路径为：FreeRTOSv202111.00\FreeRTOS\Demo\CORTEX_STM32F103_Keil下的 FreeRTOSConfig.h文件，将其复制到基础工程路径为：实验1 LED灯闪烁\FreeRTOS\include下，如下图所示：</p><img src="https://img-blog.csdnimg.cn/fc7c96ad96464f3fa2516241289dcce3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><img src="https://img-blog.csdnimg.cn/f0f9a9d1f6a14de790fb6b8ba20775dc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><h2 id="2-2、向工程分组中添加文件"><a href="#2-2、向工程分组中添加文件" class="headerlink" title="2.2、向工程分组中添加文件"></a>2.2、向工程分组中添加文件</h2><blockquote><p>打开基础工程，新建分组 FreeRTOS_CORE 和 FreeRTOS_PORTABLE</p></blockquote><img src="https://img-blog.csdnimg.cn/18107e3ad9974853b0cb99654185955e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>接着往这两个分组里添加文件，FreeRTOS_CORE 分组添加路径为：实验1 LED灯闪烁\FreeRTOS下的所有.c文件</p></blockquote><img src="https://img-blog.csdnimg.cn/448f6907d3dc443ca207cb9c4d1931d7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>FreeRTOS_PORTABLE分组添加路径为：实验1 LED灯闪烁\FreeRTOS\portable\MemMang下的heap_4.c文件以及路径为：实验1 LED灯闪烁\FreeRTOS\portable\RVDS\ARM_CM3下的port.c文件</p></blockquote><img src="https://img-blog.csdnimg.cn/34e33db805f14efdba88487386a1ad8e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><img src="https://img-blog.csdnimg.cn/cfcf1479d17745c8913e27e76919656e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>添加完成如下图所示：</p></blockquote><img src="https://img-blog.csdnimg.cn/c45e060994a04201a11a12e624b0cabc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_15,color_FFFFFF,t_70,g_se,x_16#pic_center"><h2 id="2-3、添加相对应的头文件路径"><a href="#2-3、添加相对应的头文件路径" class="headerlink" title="2.3、添加相对应的头文件路径"></a>2.3、添加相对应的头文件路径</h2><p>添加完 FreeRTOS 源码中的 C 文件以后还要添加 FreeRTOS 源码的头文件路径，头文件路径如下图所示：</p><img src="https://img-blog.csdnimg.cn/23ce9182d3c44acaacc0e11c5be9f2c3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><h2 id="2-4、修改BasicSYSTEM文件"><a href="#2-4、修改BasicSYSTEM文件" class="headerlink" title="2.4、修改BasicSYSTEM文件"></a>2.4、修改BasicSYSTEM文件</h2><p>SYSTEM 文件夹里面的文件一开始是针对UCOS 而编写的，所以如果使用 FreeRTOS 的话 就需要做相应的修改。本来打算让 SYSTEM 文件夹也支持 FreeRTOS，但是这样的话会导致 SYSTEM 里面的文件太过于复杂，这样非常不利于初学者学习，所以这里就专门针对 FreeRTOS 修改了 SYSTEM 里面的文件。<br>1、修改 sys.h 文件 sys.h 文件修改很简单，在 sys.h 文件里面用宏 SYSTEM_SUPPORT_OS 来定义是否使用 OS， 我们使用了 FreeRTOS，所以应该将宏 SYSTEM_SUPPORT_OS 改为 1。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//0,不支持 os</span></span><br><span class="line"><span class="comment">//1,支持 os</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYSTEM_SUPPORT_OS1<span class="comment">//定义系统文件夹是否支持OS</span></span></span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/2fb4d647ecd94c3f8fb0b339020cd24e.png#pic_center"><p>2、修改 usart.c 文件 usart.c 文件修改也很简单，usart.c 文件有两部分要修改，一个是添加 FreeRTOS.h 头文件， 默认是添加的 UCOS 中的 includes.h 头文件，修改以后如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//0,不支持 os</span></span><br><span class="line"><span class="comment">//1,支持 os</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYSTEM_SUPPORT_OS1<span class="comment">//定义系统文件夹是否支持OS</span></span></span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/079ee3e4955f43888d021f924256b189.png#pic_center"><p>另外一个就是 USART1 的中断服务函数，在使用 UCOS 的时候进出中断的时候需要添加 OSIntEnter()和 OSIntExit()，使用 FreeRTOS 的话就不需要了，所以将这两行代码删除掉，修改以后如下：<br><strong>维持了原有，因为用不到</strong></p><img src="https://img-blog.csdnimg.cn/112ca3e502bd4d1281239855730e5d14.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>3、修改 delay.c 文件 delay.c 文件修改的就比较大了，因为涉及到 FreeRTOS 的系统时钟，delay.c 文件里面有 4 个函数，先来看一下函数 SysTick_Handler()，此函数是滴答定时器的中断服务函数，代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果使用 os,则包括下面的头文件即可.</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> SYSTEM_SUPPORT_OS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;FreeRTOS.h&quot;</span><span class="comment">// os 使用  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;event_groups.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">xPortSysTickHandler</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="comment">//systick 中断服务函数,使用 os 时用到</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SysTick_Handler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line"><span class="keyword">if</span>(xTaskGetSchedulerState()!=taskSCHEDULER_NOT_STARTED)<span class="comment">//系统已经运行</span></span><br><span class="line">&#123;</span><br><span class="line">xPortSysTickHandler();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/f2a3b89968624129bfddff8749426522.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>FreeRTOS 的心跳就是由滴答定时器产生的，根据 FreeRTOS 的系统时钟节拍设置好滴答定 时器的周期，这样就会周期触发滴答定时器中断了。在滴答定时器中断服务函数中调用 FreeRTOS 的API函数 xPortSysTickHandler()。 delay_init()是用来初始化滴答定时器和延时函数，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化延迟函数 </span></span><br><span class="line"><span class="comment">//SYSTICK 的时钟固定为 AHB 时钟,基础例程里面 SYSTICK 的时钟固定为HCLK时钟的1/8</span></span><br><span class="line"><span class="comment">//这里为了兼容FreeTROS，所以将 SYSTICK 的时钟频率改为 AHB 的频率</span></span><br><span class="line"><span class="comment">//SYSCLK:系统时钟频率</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_init</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u32 reload;</span><br><span class="line">SysTick_CLKSourceConfig(SysTick_CLKSource_HCLK);<span class="comment">//选择外部时钟  HCLK</span></span><br><span class="line">fac_us=SystemCoreClock/<span class="number">1000000</span>;<span class="comment">//不论是否使用 OS,fac_us 都需要使用</span></span><br><span class="line">reload=SystemCoreClock/<span class="number">1000000</span>;<span class="comment">//每秒钟的计数次数 单位为 M</span></span><br><span class="line">reload*=<span class="number">1000000</span>/configTICK_RATE_HZ;<span class="comment">//根据 configTICK_BATE_HZ 设定溢出时间</span></span><br><span class="line"><span class="comment">//时间 reload 为 24 位寄存器,最大值:</span></span><br><span class="line"><span class="comment">//16777216,在 72M 下,约合 0.233s 左右</span></span><br><span class="line">fac_ms=<span class="number">1000</span>/configTICK_RATE_HZ;<span class="comment">//代表 os 可以延时的最少单位 </span></span><br><span class="line">SysTick-&gt;CTRL|=SysTick_CTRL_TICKINT_Msk;   <span class="comment">//开启SYSTICK中断</span></span><br><span class="line">SysTick-&gt;LOAD=reload; <span class="comment">//每1/configTICK_BATE_HZ 秒中断一次</span></span><br><span class="line">SysTick-&gt;CTRL|=SysTick_CTRL_ENABLE_Msk;   <span class="comment">//开启SYSTICK</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/4e503df80ec74cc186a99723eb473e22.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>前面我们说了 FreeRTOS 的系统时钟是由滴答定时器提供的，那么肯定要根据 FreeRTOS 的 系统时钟节拍来初始化滴答定时器了，delay_init()就是来完成这个功能的。FreeRTOS 的系统时 钟节拍由宏 configTICK_RATE_HZ 来设置，这个值我们可以自由设置，但是一旦设置好以后我 们就要根据这个值来初始化滴答定时器，其实就是设置滴答定时器的中断周期。在基础例程中 滴答定时器的时钟频率设置的是 AHB 的 1&#x2F;8，这里为了兼容 FreeRTOS 将滴答定时器的时钟频 率改为了 AHB，也就是 72MHz！这一点一定要注意！ 接下来的三个函数都是延时的，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//延时 nus</span></span><br><span class="line"><span class="comment">//nus:为要延时的 us 数.</span></span><br><span class="line"><span class="comment">//nus:0~204522252(最大值即 2^32/fac_us@fac_us=168)       </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_us</span><span class="params">(u32 nus)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u32 ticks;</span><br><span class="line">u32 told,tnow,tcnt=<span class="number">0</span>;</span><br><span class="line">u32 reload=SysTick-&gt;LOAD;<span class="comment">//LOAD的值     </span></span><br><span class="line">ticks=nus*fac_us; <span class="comment">//需要的节拍数   </span></span><br><span class="line"><span class="comment">//tcnt=0;</span></span><br><span class="line">told=SysTick-&gt;VAL;        <span class="comment">//刚进入时的计数器值</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">tnow=SysTick-&gt;VAL;</span><br><span class="line"><span class="keyword">if</span>(tnow!=told)</span><br><span class="line">&#123;    </span><br><span class="line"><span class="comment">//这里注意一下 SYSTICK 是一个递减的计数器就可以了.</span></span><br><span class="line"><span class="keyword">if</span>(tnow&lt;told)tcnt+=told-tnow;</span><br><span class="line"><span class="keyword">else</span> tcnt+=reload-tnow+told;    </span><br><span class="line">told=tnow;</span><br><span class="line"><span class="keyword">if</span>(tcnt&gt;=ticks)<span class="keyword">break</span>;<span class="comment">//时间超过/等于要延迟的时间,则退出.</span></span><br><span class="line">&#125;  </span><br><span class="line">&#125;;     </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//延时 nms,会引起任务调度</span></span><br><span class="line"><span class="comment">//nms:要延时的 ms 数</span></span><br><span class="line"><span class="comment">//nms:0~65535</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_ms</span><span class="params">(u16 nms)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(xTaskGetSchedulerState()!=taskSCHEDULER_NOT_STARTED)<span class="comment">//系统已经运行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(nms&gt;=fac_ms)<span class="comment">//延时的时间大于 os 的最少时间周期 </span></span><br><span class="line">&#123;</span><br><span class="line">   vTaskDelay(nms/fac_ms);<span class="comment">//FreeRTOS 延时</span></span><br><span class="line">&#125;</span><br><span class="line">nms%=fac_ms;<span class="comment">//os 已经无法提供这么小的延时了,</span></span><br><span class="line"><span class="comment">//采用普通方式延时    </span></span><br><span class="line">&#125;</span><br><span class="line">delay_us((u32)(nms*<span class="number">1000</span>));<span class="comment">//普通方式延时,此时ucos无法启动调度.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//延时 nms,不会引起任务调度</span></span><br><span class="line"><span class="comment">//nms:要延时的 ms 数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_xms</span><span class="params">(u32 nms)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u32 i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;nms;i++) delay_us(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/d3908341b407477eac243c8f2266f519.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><img src="https://img-blog.csdnimg.cn/911fd424dd274d3eaf01f16ba761cdcb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>delay_us()是 us 级延时函数，delay_ms 和 delay_xms()都是 ms 级的延时函数，delay_us()和 delay_xms()不会导致任务切换。delay_ms()其实就是对 FreeRTOS 中的延时函数 vTaskDelay()的 简单封装，所以在使用 delay_ms()的时候就会导致任务切换。 delay.c 修改完成以后编译一下，会提示如下图所示错误：</p><img src="https://img-blog.csdnimg.cn/424e3d3cb7234e7595483017c5b93bf2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>上图的错误提示表示在 port.c、delay.c 和 stm32f10x_it.c 中三个重复定义的函数： SysTick_Handler()、SVC_Handler()和 PendSV_Handler()，这三个函数分别为滴答定时器中断服 务函数、SVC 中断服务函数和 PendSV 中断服务函数，将 stm32f10x_it.c 中的三个函数屏蔽掉， 如下图所示：</p><img src="https://img-blog.csdnimg.cn/d4546dc73c0041749a6e194ec053c825.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>再次编译代码，应该没有错误了，如果还是错误的话自行根据错误类型修改！至此，SYSTEM 文件夹就修改完成了，接下来我们进行跑马灯测试，测试代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oled_bmp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oled_font.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;oled.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;task.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//任务优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> START_TASK_PRIO1</span></span><br><span class="line"><span class="comment">//任务堆栈大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>START_STK_SIZE128</span></span><br><span class="line"><span class="comment">//任务句柄</span></span><br><span class="line">TaskHandle_t StartTask_Handler;</span><br><span class="line"><span class="comment">//任务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start_task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//任务优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED0_TASK_PRIO2</span></span><br><span class="line"><span class="comment">//任务堆栈大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LED0_STK_SIZE50</span></span><br><span class="line"><span class="comment">//任务句柄</span></span><br><span class="line">TaskHandle_t LED0Task_Handler;</span><br><span class="line"><span class="comment">//任务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led0_task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//任务优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LED1_TASK_PRIO3</span></span><br><span class="line"><span class="comment">//任务堆栈大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>LED1_STK_SIZE50</span></span><br><span class="line"><span class="comment">//任务句柄</span></span><br><span class="line">TaskHandle_t LED1Task_Handler;</span><br><span class="line"><span class="comment">//任务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led1_task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">////delay_init();</span></span><br><span class="line"><span class="comment">//OLED_Init();</span></span><br><span class="line"><span class="comment">////</span></span><br><span class="line"><span class="comment">////OLED_ShowString(0,0,&quot;ABCDEFG&quot;,8);</span></span><br><span class="line"><span class="comment">////OLED_ShowString(0,1,&quot;ABCDEFG&quot;,8);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//OLED_ShowString(0,0,&quot;ABCDEFG&quot;,16);</span></span><br><span class="line"><span class="comment">//OLED_ShowString(0,2,&quot;这一切足够了&quot;,16);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//OLED_Draw12864BMP(BMP1);</span></span><br><span class="line"><span class="comment">//while(1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);<span class="comment">//设置系统中断优先级分组4</span></span><br><span class="line">delay_init();<span class="comment">//延时函数初始化</span></span><br><span class="line"><span class="comment">//uart_init(115200);//初始化串口</span></span><br><span class="line">LED_Init();</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建开始任务</span></span><br><span class="line">xTaskCreate((TaskFunction_t )start_task,<span class="comment">//任务函数</span></span><br><span class="line"> (<span class="keyword">const</span> <span class="keyword">char</span>*    )<span class="string">&quot;start_task&quot;</span>,<span class="comment">//任务名称</span></span><br><span class="line"> (<span class="keyword">uint16_t</span> )START_STK_SIZE,<span class="comment">//任务堆栈大小</span></span><br><span class="line"> (<span class="keyword">void</span>* )<span class="literal">NULL</span>,<span class="comment">//传递给任务函数的参数</span></span><br><span class="line"> (UBaseType_t )START_TASK_PRIO,<span class="comment">//任务优先级</span></span><br><span class="line"> (TaskHandle_t* )&amp;StartTask_Handler);<span class="comment">//任务句柄</span></span><br><span class="line">vTaskStartScheduler();<span class="comment">//开启任务调度</span></span><br><span class="line"><span class="comment">//while(1);</span></span><br><span class="line"><span class="comment">//LED_Init();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//开始任务任务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">start_task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">taskENTER_CRITICAL();<span class="comment">//进入临界区</span></span><br><span class="line"><span class="comment">//创建LED0任务</span></span><br><span class="line">xTaskCreate((TaskFunction_t )led0_task,<span class="comment">//任务函数</span></span><br><span class="line"> (<span class="keyword">const</span> <span class="keyword">char</span>*    )<span class="string">&quot;led0_task&quot;</span>,<span class="comment">//任务名称</span></span><br><span class="line"> (<span class="keyword">uint16_t</span> )LED0_STK_SIZE,<span class="comment">//任务堆栈大小</span></span><br><span class="line"> (<span class="keyword">void</span>* )<span class="literal">NULL</span>,<span class="comment">//传递给任务函数的参数</span></span><br><span class="line"> (UBaseType_t )LED0_TASK_PRIO,<span class="comment">//任务优先级</span></span><br><span class="line"> (TaskHandle_t* )&amp;LED0Task_Handler);<span class="comment">//任务句柄</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//创建LED0任务</span></span><br><span class="line">xTaskCreate((TaskFunction_t )led1_task,<span class="comment">//任务函数</span></span><br><span class="line"> (<span class="keyword">const</span> <span class="keyword">char</span>*    )<span class="string">&quot;led1_task&quot;</span>,<span class="comment">//任务名称</span></span><br><span class="line"> (<span class="keyword">uint16_t</span> )LED1_STK_SIZE,<span class="comment">//任务堆栈大小</span></span><br><span class="line"> (<span class="keyword">void</span>* )<span class="literal">NULL</span>,<span class="comment">//传递给任务函数的参数</span></span><br><span class="line"> (UBaseType_t )LED1_TASK_PRIO,<span class="comment">//任务优先级</span></span><br><span class="line"> (TaskHandle_t* )&amp;LED1Task_Handler);<span class="comment">//任务句柄 </span></span><br><span class="line">vTaskDelete(StartTask_Handler);<span class="comment">//删除开始任务 </span></span><br><span class="line">taskEXIT_CRITICAL();<span class="comment">//退出临界区 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LED0任务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led0_task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vTaskDelay(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0=~LED0;</span><br><span class="line"><span class="comment">//GPIO_SetBits(GPIOA,GPIO_Pin_8);</span></span><br><span class="line">vTaskDelay(<span class="number">500</span>);</span><br><span class="line"><span class="comment">//GPIO_ResetBits(GPIOA,GPIO_Pin_8);</span></span><br><span class="line"><span class="comment">//vTaskDelay(500);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//LED1任务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">led1_task</span><span class="params">(<span class="keyword">void</span> *pvParameters)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vTaskDelay(<span class="number">800</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED1=<span class="number">0</span>;</span><br><span class="line">vTaskDelay(<span class="number">200</span>);</span><br><span class="line">LED1=<span class="number">1</span>;</span><br><span class="line">vTaskDelay(<span class="number">800</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/9fcc5d34a30f45f387cf03510600c9d8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBATENJT1Q=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><p>测试代码中创建了 3 个任务：LED0 测试任务、LED1 测试任务和浮点测试任务，它们的任务函数分别为：led0_task()、led1_task()。led0_task()和 led1_task()任务很简单，就是让 LED0 和 LED1 周期性闪烁<br>编译并下载代码到 STM32F103VET6 开发板中，下载进去以后会看到 LED0 和 LED1 开始闪烁， LED0 均匀闪烁，那是因为我们在 LED0 的任务代码中设置好的 LED0 亮 500ms，灭 500ms。 LED1 亮的时间短，灭的时间长，这是因为在 LED1 的任务代码中设置好的亮 200ms，灭 800ms。</p><h2 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h2><blockquote><p>到这里还是没能跑起来，还需要参考后边设置的 FreeRTOSConfig.h 后才能工作</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * FreeRTOS V202112.00</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy of</span></span><br><span class="line"><span class="comment"> * this software and associated documentation files (the &quot;Software&quot;), to deal in</span></span><br><span class="line"><span class="comment"> * the Software without restriction, including without limitation the rights to</span></span><br><span class="line"><span class="comment"> * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of</span></span><br><span class="line"><span class="comment"> * the Software, and to permit persons to whom the Software is furnished to do so,</span></span><br><span class="line"><span class="comment"> * subject to the following conditions:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></span><br><span class="line"><span class="comment"> * copies or substantial portions of the Software.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></span><br><span class="line"><span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS</span></span><br><span class="line"><span class="comment"> * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR</span></span><br><span class="line"><span class="comment"> * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER</span></span><br><span class="line"><span class="comment"> * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN</span></span><br><span class="line"><span class="comment"> * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * http://www.FreeRTOS.org</span></span><br><span class="line"><span class="comment"> * http://aws.amazon.com/freertos</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 1 tab == 4 spaces!</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> FREERTOS_CONFIG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FREERTOS_CONFIG_H</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*-----------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * Application specific definitions.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * These definitions should be adjusted for your particular hardware and</span></span><br><span class="line"><span class="comment"> * application requirements.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * THESE PARAMETERS ARE DESCRIBED WITHIN THE &#x27;CONFIGURATION&#x27; SECTION OF THE</span></span><br><span class="line"><span class="comment"> * FreeRTOS API DOCUMENTATION AVAILABLE ON THE FreeRTOS.org WEB SITE. </span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * See http://www.freertos.org/a00110.html</span></span><br><span class="line"><span class="comment"> *----------------------------------------------------------*/</span></span><br><span class="line"><span class="comment">/************************************************************************</span></span><br><span class="line"><span class="comment"> *               FreeRTOS基础配置配置选项 </span></span><br><span class="line"><span class="comment"> *********************************************************************/</span></span><br><span class="line"><span class="comment">/* 置1：RTOS使用抢占式调度器；置0：RTOS使用协作式调度器（时间片）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 注：在多任务管理机制上，操作系统可以分为抢占式和协作式两种。</span></span><br><span class="line"><span class="comment"> * 协作式操作系统是任务主动释放CPU后，切换到下一个任务。</span></span><br><span class="line"><span class="comment"> * 任务切换的时机完全取决于正在运行的任务。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_PREEMPTION1</span></span><br><span class="line"><span class="comment">//1使能时间片调度(默认式使能的)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TIME_SLICING1</span></span><br><span class="line"><span class="comment">/* 某些运行FreeRTOS的硬件有两种方法选择下一个要执行的任务：</span></span><br><span class="line"><span class="comment"> * 通用方法和特定于硬件的方法（以下简称“特殊方法”）。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 通用方法：</span></span><br><span class="line"><span class="comment"> *      1.configUSE_PORT_OPTIMISED_TASK_SELECTION 为 0 或者硬件不支持这种特殊方法。</span></span><br><span class="line"><span class="comment"> *      2.可以用于所有FreeRTOS支持的硬件</span></span><br><span class="line"><span class="comment"> *      3.完全用C实现，效率略低于特殊方法。</span></span><br><span class="line"><span class="comment"> *      4.不强制要求限制最大可用优先级数目</span></span><br><span class="line"><span class="comment"> * 特殊方法：</span></span><br><span class="line"><span class="comment"> *      1.必须将configUSE_PORT_OPTIMISED_TASK_SELECTION设置为1。</span></span><br><span class="line"><span class="comment"> *      2.依赖一个或多个特定架构的汇编指令（一般是类似计算前导零[CLZ]指令）。</span></span><br><span class="line"><span class="comment"> *      3.比通用方法更高效</span></span><br><span class="line"><span class="comment"> *      4.一般强制限定最大可用优先级数目为32</span></span><br><span class="line"><span class="comment"> * 一般是硬件计算前导零指令，如果所使用的，MCU没有这些硬件指令的话此宏应该设置为0！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_PORT_OPTIMISED_TASK_SELECTION        1    </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">/* 置1：使能低功耗tickless模式；置0：保持系统节拍（tick）中断一直运行</span></span><br><span class="line"><span class="comment"> * 假设开启低功耗的话可能会导致下载出现问题，因为程序在睡眠中,可用以下办法解决</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 下载方法：</span></span><br><span class="line"><span class="comment"> *      1.将开发版正常连接好</span></span><br><span class="line"><span class="comment"> *      2.按住复位按键，点击下载瞬间松开复位按键</span></span><br><span class="line"><span class="comment"> *     </span></span><br><span class="line"><span class="comment"> *      1.通过跳线帽将 BOOT 0 接高电平(3.3V)</span></span><br><span class="line"><span class="comment"> *      2.重新上电，下载</span></span><br><span class="line"><span class="comment"> *    </span></span><br><span class="line"><span class="comment"> * 1.使用FlyMcu擦除一下芯片，然后进行下载</span></span><br><span class="line"><span class="comment"> *STMISP -&gt; 清除芯片(z)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TICKLESS_IDLE0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 写入实际的CPU内核时钟频率，也就是CPU指令执行频率，通常称为Fclk</span></span><br><span class="line"><span class="comment"> * Fclk为供给CPU内核的时钟信号，我们所说的cpu主频为 XX MHz，</span></span><br><span class="line"><span class="comment"> * 就是指的这个时钟信号，相应的，1/Fclk即为cpu时钟周期；</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configCPU_CLOCK_HZ  (SystemCoreClock)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//RTOS系统节拍中断的频率。即一秒中断的次数，每次中断RTOS都会进行任务调度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTICK_RATE_HZ  (( TickType_t )1000)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可使用的最大优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_PRIORITIES  (32)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//空闲任务使用的堆栈大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMINIMAL_STACK_SIZE((unsigned short)128)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//任务名字字符串长度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_TASK_NAME_LEN(16)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//系统节拍计数器变量数据类型，1表示为16位无符号整形，0表示为32位无符号整形</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_16_BIT_TICKS0   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//空闲任务放弃CPU使用权给其他同优先级的用户任务</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configIDLE_SHOULD_YIELD1  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//启用队列</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_QUEUE_SETS  1    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启任务通知功能，默认开启</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TASK_NOTIFICATIONS    1   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用互斥信号量</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_MUTEXES    1   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用递归互斥信号量                                            </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_RECURSIVE_MUTEXES1  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//为1时使用计数信号量</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_COUNTING_SEMAPHORES1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置可以注册的信号量和消息队列个数 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configQUEUE_REGISTRY_SIZE10     </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_APPLICATION_TASK_TAG  0        </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************</span></span><br><span class="line"><span class="comment">              FreeRTOS与内存申请有关配置选项                                               </span></span><br><span class="line"><span class="comment">*****************************************************************/</span></span><br><span class="line"><span class="comment">//支持动态内存申请</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configSUPPORT_DYNAMIC_ALLOCATION        1    </span></span><br><span class="line"><span class="comment">//支持静态内存</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configSUPPORT_STATIC_ALLOCATION0</span></span><br><span class="line"><span class="comment">//系统所有总的堆大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTOTAL_HEAP_SIZE((size_t)(36*1024))    </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">             FreeRTOS与钩子函数有关的配置选项                                            </span></span><br><span class="line"><span class="comment">**************************************************************/</span></span><br><span class="line"><span class="comment">/* 置1：使用空闲钩子（Idle Hook类似于回调函数）；置0：忽略空闲钩子</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 空闲任务钩子是一个函数，这个函数由用户来实现，</span></span><br><span class="line"><span class="comment"> * FreeRTOS规定了函数的名字和参数：void vApplicationIdleHook(void )，</span></span><br><span class="line"><span class="comment"> * 这个函数在每个空闲任务周期都会被调用</span></span><br><span class="line"><span class="comment"> * 对于已经删除的RTOS任务，空闲任务可以释放分配给它们的堆栈内存。</span></span><br><span class="line"><span class="comment"> * 因此必须保证空闲任务可以被CPU执行</span></span><br><span class="line"><span class="comment"> * 使用空闲钩子函数设置CPU进入省电模式是很常见的</span></span><br><span class="line"><span class="comment"> * 不可以调用会引起空闲任务阻塞的API函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_IDLE_HOOK0      </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 置1：使用时间片钩子（Tick Hook）；置0：忽略时间片钩子</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 时间片钩子是一个函数，这个函数由用户来实现，</span></span><br><span class="line"><span class="comment"> * FreeRTOS规定了函数的名字和参数：void vApplicationTickHook(void )</span></span><br><span class="line"><span class="comment"> * 时间片中断可以周期性的调用</span></span><br><span class="line"><span class="comment"> * 函数必须非常短小，不能大量使用堆栈，</span></span><br><span class="line"><span class="comment"> * 不能调用以”FromISR&quot; 或 &quot;FROM_ISR”结尾的API函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="comment">/*xTaskIncrementTick函数是在xPortSysTickHandler中断函数中被调用的。因此，vApplicationTickHook()函数执行的时间必须很短才行*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TICK_HOOK0           </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用内存申请失败钩子函数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_MALLOC_FAILED_HOOK0 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 大于0时启用堆栈溢出检测功能，如果使用此功能 </span></span><br><span class="line"><span class="comment"> * 用户必须提供一个栈溢出钩子函数，如果使用的话</span></span><br><span class="line"><span class="comment"> * 此值可以为1或者2，因为有两种栈溢出检测方法 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configCHECK_FOR_STACK_OVERFLOW0   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************************</span></span><br><span class="line"><span class="comment">          FreeRTOS与运行时间和任务状态收集有关的配置选项   </span></span><br><span class="line"><span class="comment">**********************************************************************/</span></span><br><span class="line"><span class="comment">//启用运行时间统计功能</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configGENERATE_RUN_TIME_STATS        0             </span></span><br><span class="line"><span class="comment">//启用可视化跟踪调试</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TRACE_FACILITY      0    </span></span><br><span class="line"><span class="comment">/* 与宏configUSE_TRACE_FACILITY同时为1时会编译下面3个函数</span></span><br><span class="line"><span class="comment"> * prvWriteNameToBuffer()</span></span><br><span class="line"><span class="comment"> * vTaskList(),</span></span><br><span class="line"><span class="comment"> * vTaskGetRunTimeStats()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_STATS_FORMATTING_FUNCTIONS1        </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************************</span></span><br><span class="line"><span class="comment">                FreeRTOS与协程有关的配置选项                                                </span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="comment">//启用协程，启用协程以后必须添加文件croutine.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_CO_ROUTINES           0                 </span></span><br><span class="line"><span class="comment">//协程的有效优先级数目</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_CO_ROUTINE_PRIORITIES       ( 2 )       </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************************************************************</span></span><br><span class="line"><span class="comment">                FreeRTOS与软件定时器有关的配置选项      </span></span><br><span class="line"><span class="comment">**********************************************************************/</span></span><br><span class="line"> <span class="comment">//启用软件定时器</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TIMERS            1                              </span></span><br><span class="line"><span class="comment">//软件定时器优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTIMER_TASK_PRIORITY        (configMAX_PRIORITIES-1)        </span></span><br><span class="line"><span class="comment">//软件定时器队列长度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTIMER_QUEUE_LENGTH        10                               </span></span><br><span class="line"><span class="comment">//软件定时器任务堆栈大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTIMER_TASK_STACK_DEPTH      (configMINIMAL_STACK_SIZE*2)    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************************************</span></span><br><span class="line"><span class="comment">            FreeRTOS可选函数配置选项                                                     </span></span><br><span class="line"><span class="comment">************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_xTaskGetSchedulerState       1                       </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskPrioritySet         1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_uxTaskPriorityGet         1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskDelete           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskCleanUpResources       1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskSuspend           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskDelayUntil         1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskDelay           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_eTaskGetState           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_xTimerPendFunctionCall     1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_xTaskGetCurrentTaskHandle       1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_uxTaskGetStackHighWaterMark     0</span></span><br><span class="line"><span class="comment">//#define INCLUDE_xTaskGetIdleTaskHandle          0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************</span></span><br><span class="line"><span class="comment">            FreeRTOS与中断有关的配置选项                                                 </span></span><br><span class="line"><span class="comment">******************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __NVIC_PRIO_BITS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configPRIO_BITS       __NVIC_PRIO_BITS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configPRIO_BITS       4                  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//中断最低优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configLIBRARY_LOWEST_INTERRUPT_PRIORITY15     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//系统可管理的最高中断优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY5 </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configKERNEL_INTERRUPT_PRIORITY ( configLIBRARY_LOWEST_INTERRUPT_PRIORITY &lt;&lt; (8 - configPRIO_BITS) )<span class="comment">/* 240 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_SYSCALL_INTERRUPT_PRIORITY ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY &lt;&lt; (8 - configPRIO_BITS) )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************************************</span></span><br><span class="line"><span class="comment">            FreeRTOS与中断服务函数有关的配置选项                         </span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> xPortPendSVHandler PendSV_Handler</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> vPortSVCHandler SVC_Handler</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 以下为使用Percepio Tracealyzer需要的东西，不需要时将 configUSE_TRACE_FACILITY 定义为 0 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> ( configUSE_TRACE_FACILITY == 1 )</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;trcRecorder.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_xTaskGetCurrentTaskHandle               1   <span class="comment">// 启用一个可选函数（该函数被 Trace源码使用，默认该值为0 表示不用）</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define configUSE_IDLE_HOOK0</span></span><br><span class="line"><span class="comment">//#define configUSE_TICK_HOOK0</span></span><br><span class="line"><span class="comment">//#define configCPU_CLOCK_HZ( ( unsigned long ) 72000000 )</span></span><br><span class="line"><span class="comment">//#define configTICK_RATE_HZ( ( TickType_t ) 1000 )</span></span><br><span class="line"><span class="comment">//#define configMAX_PRIORITIES( 5 )</span></span><br><span class="line"><span class="comment">//#define configMINIMAL_STACK_SIZE( ( unsigned short ) 128 )</span></span><br><span class="line"><span class="comment">//#define configTOTAL_HEAP_SIZE( ( size_t ) ( 17 * 1024 ) )</span></span><br><span class="line"><span class="comment">//#define configMAX_TASK_NAME_LEN( 16 )</span></span><br><span class="line"><span class="comment">//#define configUSE_TRACE_FACILITY0</span></span><br><span class="line"><span class="comment">//#define configUSE_16_BIT_TICKS0</span></span><br><span class="line"><span class="comment">//#define configIDLE_SHOULD_YIELD1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Co-routine definitions. */</span></span><br><span class="line"><span class="comment">//#define configUSE_CO_ROUTINES 0</span></span><br><span class="line"><span class="comment">//#define configMAX_CO_ROUTINE_PRIORITIES ( 2 )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Set the following definitions to 1 to include the API function, or zero</span></span><br><span class="line"><span class="comment">to exclude the API function. */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define INCLUDE_vTaskPrioritySet1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_uxTaskPriorityGet1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_vTaskDelete1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_vTaskCleanUpResources0</span></span><br><span class="line"><span class="comment">//#define INCLUDE_vTaskSuspend1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_vTaskDelayUntil1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_vTaskDelay1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define INCLUDE_xTaskGetSchedulerState1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_xTaskGetCurrentTaskHandle1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* This is the raw value as per the Cortex-M3 NVIC.  Values can be 255</span></span><br><span class="line"><span class="comment">(lowest) to 0 (1?) (highest). */</span></span><br><span class="line"><span class="comment">//#define configKERNEL_INTERRUPT_PRIORITY 255</span></span><br><span class="line"><span class="comment">/* !!!! configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to zero !!!!</span></span><br><span class="line"><span class="comment">See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html. */</span></span><br><span class="line"><span class="comment">//#define configMAX_SYSCALL_INTERRUPT_PRIORITY 191 /* equivalent to 0xb0, or priority 11. */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* This is the value being used as per the ST library which permits 16</span></span><br><span class="line"><span class="comment">priority values, 0 to 15.  This must correspond to the</span></span><br><span class="line"><span class="comment">configKERNEL_INTERRUPT_PRIORITY setting.  Here 15 corresponds to the lowest</span></span><br><span class="line"><span class="comment">NVIC value of 255. */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configLIBRARY_KERNEL_INTERRUPT_PRIORITY15</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* FREERTOS_CONFIG_H */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="移植过程参考二（超详细说明）"><a href="#移植过程参考二（超详细说明）" class="headerlink" title="移植过程参考二（超详细说明）"></a>移植过程参考二（超详细说明）</h1><h2 id="提取源码"><a href="#提取源码" class="headerlink" title="提取源码"></a>提取源码</h2><ol><li>首先在我们的STM32裸机工程模板根目录下新建一个文件夹，命名为“FreeRTOS”，并且在FreeRTOS文件夹下新建两个空文件夹，分别命名为“src”与“port”，src文件夹用于保存FreeRTOS中的核心源文件，也就是我们常说的‘.c文件’，port文件夹用于保存内存管理以及处理器架构相关代码，这些代码FreeRTOS官方已经提供给我们的，直接使用即可，在前面已经说了，FreeRTOS是软件，我们的开发版是硬件，软硬件必须有桥梁来连接，这些与处理器架构相关的代码，可以称之为RTOS硬件接口层，它们位于FreeRTOS&#x2F;Source&#x2F;Portable文件夹下。</li><li>打开FreeRTOS V9.0.0源码，在“FreeRTOSv9.0.0\FreeRTOS\Source”目录下找到所有的‘.c文件’，将它们拷贝到我们新建的src文件夹中，</li></ol><p><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211447870-1007359084.png" alt="在这里插入图片描述"></p><ol><li>打开FreeRTOS V9.0.0源码，在“FreeRTOSv9.0.0\FreeRTOS\Source\portable”目录下找到“MemMang”文件夹与“RVDS”文件夹，将它们拷贝到我们新建的port文件夹中</li></ol><p><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211448127-1332532196.png" alt="在这里插入图片描述"></p><ol><li>打开FreeRTOS V9.0.0源码，在“FreeRTOSv9.0.0\ FreeRTOS\Source”目录下找到“include”文件夹，它是我们需要用到FreeRTOS的一些头文件，将它直接拷贝到我们新建的FreeRTOS文件夹中，完成这一步之后就可以看到我们新建的FreeRTOS文件夹已经有3个文件夹，这3个文件夹就包含FreeRTOS的核心文件，至此，FreeRTOS的源码就提取完成。</li></ol><p><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211448601-1848993234.png" alt="在这里插入图片描述"></p><h2 id="添加到工程"><a href="#添加到工程" class="headerlink" title="添加到工程"></a>添加到工程</h2><p><strong>添加FreeRTOSConfig.h文件</strong><br>FreeRTOSConfig.h文件是FreeRTOS的工程配置文件，因为FreeRTOS是可以裁剪的实时操作内核，应用于不同的处理器平台，用户可以通过修改这个FreeRTOS内核的配置头文件来裁剪FreeRTOS的功能，所以我们把它拷贝一份放在user这个文件夹下面。<br>打开FreeRTOSv9.0.0源码，在“FreeRTOSv9.0.0\FreeRTOS\Demo”文件夹下面找到“CORTEX_STM32F103_Keil”这个文件夹，双击打开，在其根目录下找到这个“FreeRTOSConfig.h”文件，然后拷贝到我们工程的user文件夹下即可，等下我们需要对这个文件进行修改。</p><p><strong>创建工程分组</strong><br>接下来我们在mdk里面新建FreeRTOS&#x2F;src和FreeRTOS&#x2F;port两个组文件夹，其中FreeRTOS&#x2F;src用于存放src文件夹的内容，FreeRTOS&#x2F;port用于存放port\MemMang文件夹 与port\RVDS\ARM_CM3文件夹的内容。<br>然后我们将工程文件中FreeRTOS的内容添加到工程中去，按照已经新建的分组添加我们的FreeRTOS工程源码。<br>在FreeRTOS&#x2F;port分组中添加MemMang文件夹中的文件只需选择其中一个即可，我们选择“heap_4.c”，这是FreeRTOS的一个内存管理源码文件。<br>添加完成后：</p><p><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211448785-6286460.png" alt="在这里插入图片描述"></p><p>** 添加头文件路径**<br>FreeRTOS的源码已经添加到开发环境的组文件夹下面，编译的时候需要为这些源文件指定头文件的路径，不然编译会报错。FreeRTOS的源码里面只有FreeRTOS\include和FreeRTOS\port\RVDS\ARM_CM3这两个文件夹下面有头文件，只需要将这两个头文件的路径在开发环境里面指定即可。同时我们还将FreeRTOSConfig.h这个头文件拷贝到了工程根目录下的user文件夹下，所以user的路径也要加到开发环境里面。<br><img src="https://img2018.cnblogs.com/blog/1834930/201910/1834930-20191015211449084-364826338.png" alt="在这里插入图片描述"></p><h2 id="修改FreeRTOSConfig-h"><a href="#修改FreeRTOSConfig-h" class="headerlink" title="修改FreeRTOSConfig.h"></a>修改FreeRTOSConfig.h</h2><p>FreeRTOSConfig.h是直接从demo文件夹下面拷贝过来的，该头文件对裁剪整个FreeRTOS所需的功能的宏均做了定义，有些宏定义被使能，有些宏定义被失能，一开始我们只需要配置最简单的功能即可。要想随心所欲的配置FreeRTOS的功能，我们必须对这些宏定义的功能有所掌握，下面我们先简单的介绍下这些宏定义的含义，然后再对这些宏定义进行修改。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> FREERTOS_CONFIG_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FREERTOS_CONFIG_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stm32f10x.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_usart.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//针对不同的编译器调用不同的stdint.h文件</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__ICCARM__) || defined(__CC_ARM) || defined(__GNUC__)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">uint32_t</span> SystemCoreClock;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//断言</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> vAssertCalled(char,int) printf(<span class="meta-string">&quot;Error:%s,%d\r\n&quot;</span>,char,int)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configASSERT(x) <span class="meta-keyword">if</span>((x)==0) vAssertCalled(__FILE__,__LINE__)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************************************************</span></span><br><span class="line"><span class="comment"> *               FreeRTOS基础配置配置选项 </span></span><br><span class="line"><span class="comment"> *********************************************************************/</span></span><br><span class="line"><span class="comment">/* 置1：RTOS使用抢占式调度器；置0：RTOS使用协作式调度器（时间片）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 注：在多任务管理机制上，操作系统可以分为抢占式和协作式两种。</span></span><br><span class="line"><span class="comment"> * 协作式操作系统是任务主动释放CPU后，切换到下一个任务。</span></span><br><span class="line"><span class="comment"> * 任务切换的时机完全取决于正在运行的任务。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_PREEMPTION  1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1使能时间片调度(默认式使能的)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TIME_SLICING1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 某些运行FreeRTOS的硬件有两种方法选择下一个要执行的任务：</span></span><br><span class="line"><span class="comment"> * 通用方法和特定于硬件的方法（以下简称“特殊方法”）。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 通用方法：</span></span><br><span class="line"><span class="comment"> *      1.configUSE_PORT_OPTIMISED_TASK_SELECTION 为 0 或者硬件不支持这种特殊方法。</span></span><br><span class="line"><span class="comment"> *      2.可以用于所有FreeRTOS支持的硬件</span></span><br><span class="line"><span class="comment"> *      3.完全用C实现，效率略低于特殊方法。</span></span><br><span class="line"><span class="comment"> *      4.不强制要求限制最大可用优先级数目</span></span><br><span class="line"><span class="comment"> * 特殊方法：</span></span><br><span class="line"><span class="comment"> *      1.必须将configUSE_PORT_OPTIMISED_TASK_SELECTION设置为1。</span></span><br><span class="line"><span class="comment"> *      2.依赖一个或多个特定架构的汇编指令（一般是类似计算前导零[CLZ]指令）。</span></span><br><span class="line"><span class="comment"> *      3.比通用方法更高效</span></span><br><span class="line"><span class="comment"> *      4.一般强制限定最大可用优先级数目为32</span></span><br><span class="line"><span class="comment"> * 一般是硬件计算前导零指令，如果所使用的，MCU没有这些硬件指令的话此宏应该设置为0！</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_PORT_OPTIMISED_TASK_SELECTION        1                       </span></span><br><span class="line">                                                                        </span><br><span class="line"><span class="comment">/* 置1：使能低功耗tickless模式；置0：保持系统节拍（tick）中断一直运行</span></span><br><span class="line"><span class="comment"> * 假设开启低功耗的话可能会导致下载出现问题，因为程序在睡眠中,可用以下办法解决</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 下载方法：</span></span><br><span class="line"><span class="comment"> *      1.将开发版正常连接好</span></span><br><span class="line"><span class="comment"> *      2.按住复位按键，点击下载瞬间松开复位按键</span></span><br><span class="line"><span class="comment"> *     </span></span><br><span class="line"><span class="comment"> *      1.通过跳线帽将 BOOT 0 接高电平(3.3V)</span></span><br><span class="line"><span class="comment"> *      2.重新上电，下载</span></span><br><span class="line"><span class="comment"> *    </span></span><br><span class="line"><span class="comment"> * 1.使用FlyMcu擦除一下芯片，然后进行下载</span></span><br><span class="line"><span class="comment"> *STMISP -&gt; 清除芯片(z)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TICKLESS_IDLE0   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 写入实际的CPU内核时钟频率，也就是CPU指令执行频率，通常称为Fclk</span></span><br><span class="line"><span class="comment"> * Fclk为供给CPU内核的时钟信号，我们所说的cpu主频为 XX MHz，</span></span><br><span class="line"><span class="comment"> * 就是指的这个时钟信号，相应的，1/Fclk即为cpu时钟周期；</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configCPU_CLOCK_HZ  (SystemCoreClock)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//RTOS系统节拍中断的频率。即一秒中断的次数，每次中断RTOS都会进行任务调度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTICK_RATE_HZ  (( TickType_t )1000)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可使用的最大优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_PRIORITIES  (32)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//空闲任务使用的堆栈大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMINIMAL_STACK_SIZE((unsigned short)128)</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//任务名字字符串长度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_TASK_NAME_LEN(16)</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">//系统节拍计数器变量数据类型，1表示为16位无符号整形，0表示为32位无符号整形</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_16_BIT_TICKS0                      </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//空闲任务放弃CPU使用权给其他同优先级的用户任务</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configIDLE_SHOULD_YIELD1           </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//启用队列</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_QUEUE_SETS  1    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启任务通知功能，默认开启</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TASK_NOTIFICATIONS    1   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用互斥信号量</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_MUTEXES    1    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用递归互斥信号量                                            </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_RECURSIVE_MUTEXES1   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//为1时使用计数信号量</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_COUNTING_SEMAPHORES1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置可以注册的信号量和消息队列个数 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configQUEUE_REGISTRY_SIZE10                                 </span></span><br><span class="line">                                                                       </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_APPLICATION_TASK_TAG  0                       </span></span><br><span class="line">                      </span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************************************************************</span></span><br><span class="line"><span class="comment">              FreeRTOS与内存申请有关配置选项                                               </span></span><br><span class="line"><span class="comment">*****************************************************************/</span></span><br><span class="line"><span class="comment">//支持动态内存申请</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configSUPPORT_DYNAMIC_ALLOCATION        1    </span></span><br><span class="line"><span class="comment">//支持静态内存</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configSUPPORT_STATIC_ALLOCATION0</span></span><br><span class="line"><span class="comment">//系统所有总的堆大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTOTAL_HEAP_SIZE((size_t)(36*1024))    </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">             FreeRTOS与钩子函数有关的配置选项                                            </span></span><br><span class="line"><span class="comment">**************************************************************/</span></span><br><span class="line"><span class="comment">/* 置1：使用空闲钩子（Idle Hook类似于回调函数）；置0：忽略空闲钩子</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 空闲任务钩子是一个函数，这个函数由用户来实现，</span></span><br><span class="line"><span class="comment"> * FreeRTOS规定了函数的名字和参数：void vApplicationIdleHook(void )，</span></span><br><span class="line"><span class="comment"> * 这个函数在每个空闲任务周期都会被调用</span></span><br><span class="line"><span class="comment"> * 对于已经删除的RTOS任务，空闲任务可以释放分配给它们的堆栈内存。</span></span><br><span class="line"><span class="comment"> * 因此必须保证空闲任务可以被CPU执行</span></span><br><span class="line"><span class="comment"> * 使用空闲钩子函数设置CPU进入省电模式是很常见的</span></span><br><span class="line"><span class="comment"> * 不可以调用会引起空闲任务阻塞的API函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_IDLE_HOOK0      </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 置1：使用时间片钩子（Tick Hook）；置0：忽略时间片钩子</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 时间片钩子是一个函数，这个函数由用户来实现，</span></span><br><span class="line"><span class="comment"> * FreeRTOS规定了函数的名字和参数：void vApplicationTickHook(void )</span></span><br><span class="line"><span class="comment"> * 时间片中断可以周期性的调用</span></span><br><span class="line"><span class="comment"> * 函数必须非常短小，不能大量使用堆栈，</span></span><br><span class="line"><span class="comment"> * 不能调用以”FromISR&quot; 或 &quot;FROM_ISR”结尾的API函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="comment">/*xTaskIncrementTick函数是在xPortSysTickHandler中断函数中被调用的。因此，vApplicationTickHook()函数执行的时间必须很短才行*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TICK_HOOK0           </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用内存申请失败钩子函数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_MALLOC_FAILED_HOOK0 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 大于0时启用堆栈溢出检测功能，如果使用此功能 </span></span><br><span class="line"><span class="comment"> * 用户必须提供一个栈溢出钩子函数，如果使用的话</span></span><br><span class="line"><span class="comment"> * 此值可以为1或者2，因为有两种栈溢出检测方法 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configCHECK_FOR_STACK_OVERFLOW0   </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************************</span></span><br><span class="line"><span class="comment">          FreeRTOS与运行时间和任务状态收集有关的配置选项   </span></span><br><span class="line"><span class="comment">**********************************************************************/</span></span><br><span class="line"><span class="comment">//启用运行时间统计功能</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configGENERATE_RUN_TIME_STATS        0             </span></span><br><span class="line"> <span class="comment">//启用可视化跟踪调试</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TRACE_FACILITY      0    </span></span><br><span class="line"><span class="comment">/* 与宏configUSE_TRACE_FACILITY同时为1时会编译下面3个函数</span></span><br><span class="line"><span class="comment"> * prvWriteNameToBuffer()</span></span><br><span class="line"><span class="comment"> * vTaskList(),</span></span><br><span class="line"><span class="comment"> * vTaskGetRunTimeStats()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_STATS_FORMATTING_FUNCTIONS1                       </span></span><br><span class="line">                                                                        </span><br><span class="line">                                                                        </span><br><span class="line"><span class="comment">/********************************************************************</span></span><br><span class="line"><span class="comment">                FreeRTOS与协程有关的配置选项                                                </span></span><br><span class="line"><span class="comment">*********************************************************************/</span></span><br><span class="line"><span class="comment">//启用协程，启用协程以后必须添加文件croutine.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_CO_ROUTINES           0                 </span></span><br><span class="line"><span class="comment">//协程的有效优先级数目</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_CO_ROUTINE_PRIORITIES       ( 2 )                   </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************************************************************</span></span><br><span class="line"><span class="comment">                FreeRTOS与软件定时器有关的配置选项      </span></span><br><span class="line"><span class="comment">**********************************************************************/</span></span><br><span class="line"> <span class="comment">//启用软件定时器</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configUSE_TIMERS            1                              </span></span><br><span class="line"><span class="comment">//软件定时器优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTIMER_TASK_PRIORITY        (configMAX_PRIORITIES-1)        </span></span><br><span class="line"><span class="comment">//软件定时器队列长度</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTIMER_QUEUE_LENGTH        10                               </span></span><br><span class="line"><span class="comment">//软件定时器任务堆栈大小</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configTIMER_TASK_STACK_DEPTH      (configMINIMAL_STACK_SIZE*2)    </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/************************************************************</span></span><br><span class="line"><span class="comment">            FreeRTOS可选函数配置选项                                                     </span></span><br><span class="line"><span class="comment">************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_xTaskGetSchedulerState       1                       </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskPrioritySet         1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_uxTaskPriorityGet         1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskDelete           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskCleanUpResources       1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskSuspend           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskDelayUntil         1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_vTaskDelay           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_eTaskGetState           1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_xTimerPendFunctionCall     1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_xTaskGetCurrentTaskHandle       1</span></span><br><span class="line"><span class="comment">//#define INCLUDE_uxTaskGetStackHighWaterMark     0</span></span><br><span class="line"><span class="comment">//#define INCLUDE_xTaskGetIdleTaskHandle          0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************</span></span><br><span class="line"><span class="comment">            FreeRTOS与中断有关的配置选项                                                 </span></span><br><span class="line"><span class="comment">******************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __NVIC_PRIO_BITS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configPRIO_BITS       __NVIC_PRIO_BITS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configPRIO_BITS       4                  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//中断最低优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configLIBRARY_LOWEST_INTERRUPT_PRIORITY15     </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//系统可管理的最高中断优先级</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY5 </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configKERNEL_INTERRUPT_PRIORITY ( configLIBRARY_LOWEST_INTERRUPT_PRIORITY &lt;&lt; (8 - configPRIO_BITS) )<span class="comment">/* 240 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> configMAX_SYSCALL_INTERRUPT_PRIORITY ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY &lt;&lt; (8 - configPRIO_BITS) )</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************************************</span></span><br><span class="line"><span class="comment">            FreeRTOS与中断服务函数有关的配置选项                         </span></span><br><span class="line"><span class="comment">****************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> xPortPendSVHandler PendSV_Handler</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> vPortSVCHandler SVC_Handler</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 以下为使用Percepio Tracealyzer需要的东西，不需要时将 configUSE_TRACE_FACILITY 定义为 0 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> ( configUSE_TRACE_FACILITY == 1 )</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;trcRecorder.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INCLUDE_xTaskGetCurrentTaskHandle               1   <span class="comment">// 启用一个可选函数（该函数被 Trace源码使用，默认该值为0 表示不用）</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* FREERTOS_CONFIG_H */</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="修改stm32f10x-it-c"><a href="#修改stm32f10x-it-c" class="headerlink" title="修改stm32f10x_it.c"></a>修改stm32f10x_it.c</h2><p>SysTick中断服务函数是一个非常重要的函数，FreeRTOS所有跟时间相关的事情都在里面处理，SysTick就是FreeRTOS的一个心跳时钟，驱动着FreeRTOS的运行，就像人的心跳一样，假如没有心跳，我们就相当于“死了”，同样的，FreeRTOS没有了心跳，那么它就会卡死在某个地方，不能进行任务调度，不能运行任何的东西，因此我们需要实现一个FreeRTOS的心跳时钟，FreeRTOS帮我们实现了SysTick的启动的配置：在port.c文件中已经实现vPortSetupTimerInterrupt()函数，并且FreeRTOS通用的SysTick中断服务函数也实现了：在port.c文件中已经实现xPortSysTickHandler()函数，所以移植的时候只需要我们在stm32f10x_it.c文件中实现我们对应（STM32）平台上的SysTick_Handler()函数即可。FreeRTOS为开发者考虑得特别多，PendSV_Handler()与SVC_Handler()这两个很重要的函数都帮我们实现了，在在port.c文件中已经实现xPortPendSVHandler()与vPortSVCHandler()函数，防止我们自己实现不了，那么在stm32f10x_it.c中就需要我们注释掉PendSV_Handler()与SVC_Handler()这两个函数了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//void SVC_Handler(void)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//void PendSV_Handler(void)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">xPortSysTickHandler</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//systick中断服务函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SysTick_Handler</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">if</span> (INCLUDE_xTaskGetSchedulerState  == 1 )</span></span><br><span class="line">      <span class="keyword">if</span> (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)</span><br><span class="line">      &#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">/* INCLUDE_xTaskGetSchedulerState */</span>  </span></span><br><span class="line">        xPortSysTickHandler();</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">if</span> (INCLUDE_xTaskGetSchedulerState  == 1 )</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span>  <span class="comment">/* INCLUDE_xTaskGetSchedulerState */</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建任务"><a href="#创建任务" class="headerlink" title="创建任务"></a>创建任务</h3><p>这里，我们创建一个单任务，任务使用的栈和任务控制块是在创建任务的时候FreeRTOS动态分配的。<br>任务必须是一个死循环，否则任务将通过LR返回，如果LR指向了非法的内存就会产生HardFault_Handler，而FreeRTOS指向一个死循环，那么任务返回之后就在死循环中执行，这样子的任务是不安全的，所以避免这种情况，任务一般都是死循环并且无返回值的。<br><strong>并且每个任务循环主体中应该有阻塞任务的函数，否则就会饿死比它优先级更低的任务！！！</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* FreeRTOS头文件 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;task.h&quot;</span></span></span><br><span class="line"><span class="comment">/* 开发板硬件bsp头文件 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_led.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AppTaskCreate</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">/* AppTask任务 */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/* 创建任务句柄 */</span></span><br><span class="line"><span class="keyword">static</span> TaskHandle_t AppTask_Handle = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  BaseType_t xReturn = pdPASS;<span class="comment">/* 定义一个创建信息返回值，默认为pdPASS */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 开发板硬件初始化 */</span></span><br><span class="line">  BSP_Init();</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 创建AppTaskCreate任务 */</span></span><br><span class="line">  xReturn = xTaskCreate((TaskFunction_t )AppTask,  <span class="comment">/* 任务入口函数 */</span></span><br><span class="line">                        (<span class="keyword">const</span> <span class="keyword">char</span>*    )<span class="string">&quot;AppTask&quot;</span>,<span class="comment">/* 任务名字 */</span></span><br><span class="line">                        (<span class="keyword">uint16_t</span>       )<span class="number">512</span>,  <span class="comment">/* 任务栈大小 */</span></span><br><span class="line">                        (<span class="keyword">void</span>*          )<span class="literal">NULL</span>,<span class="comment">/* 任务入口函数参数 */</span></span><br><span class="line">                        (UBaseType_t    )<span class="number">1</span>, <span class="comment">/* 任务的优先级 */</span></span><br><span class="line">                        (TaskHandle_t*  )&amp;AppTask_Handle);<span class="comment">/* 任务控制块指针 */</span> </span><br><span class="line">  <span class="comment">/* 启动任务调度 */</span>           </span><br><span class="line">  <span class="keyword">if</span>(pdPASS == xReturn)</span><br><span class="line">    vTaskStartScheduler();   <span class="comment">/* 启动任务，开启调度 */</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>);   <span class="comment">/* 正常不会执行到这里 */</span>    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AppTask</span><span class="params">(<span class="keyword">void</span>* parameter)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LED1_ON;</span><br><span class="line">        vTaskDelay(<span class="number">500</span>);   <span class="comment">/* 延时500个tick */</span></span><br><span class="line">        LED1_OFF;     </span><br><span class="line">        vTaskDelay(<span class="number">500</span>);   <span class="comment">/* 延时500个tick */</span> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://www.cnblogs.com/iot-dev/p/11681067.html">超详细的FreeRTOS移植全教程——基于srm32</a></li><li><a href="https://blog.csdn.net/hao1__/article/details/122038566">STM32F1+FreeRTOS系统移植例程</a></li><li><a href="https://blog.csdn.net/cs953575/article/details/118443722">https://blog.csdn.net/cs953575/article/details/118443722</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> FreeRTOS </category>
          
          <category> STM32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> STM32 </tag>
            
            <tag> FreeRTOS </tag>
            
            <tag> keil </tag>
            
            <tag> 移植 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LVGL学习(一)之模拟器搭建</title>
      <link href="/posts/1814094880.html"/>
      <url>/posts/1814094880.html</url>
      
        <content type="html"><![CDATA[<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><img src="https://img-blog.csdnimg.cn/52c6cb43948f4c23aef162e9c03cec90.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oyo6Lii5rCR5belYml1Yml1,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>lvgl提供了非常多的部件(30多个)给用户使用，这些部件的所有样式都是可以修改的。它们都有默认的样式，但是当我们觉得默认的样式不合适自己项目的时候可以就需要进行修改了，本文来教大家怎么修改 tabview部件顶部框(选项卡)的默认样式。</p><p>配置：</p><ul><li>codeblocks 20.03</li><li>lvgl v 8.1</li></ul><h1 id="修改样式"><a href="#修改样式" class="headerlink" title="修改样式"></a>修改样式</h1><p><strong>默认的样式</strong><br>正常我们这样就可以创建出一个 tabview部件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">lv_obj_t</span>* tv;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_obj_t</span>* t1;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_obj_t</span>* t2;</span><br><span class="line"></span><br><span class="line">tv = lv_tabview_create(lv_scr_act(), LV_DIR_TOP, LV_DPI_DEF / <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">t1 = lv_tabview_add_tab(tv, <span class="string">&quot;Selectors&quot;</span>);</span><br><span class="line">t2 = lv_tabview_add_tab(tv, <span class="string">&quot;Text input&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">lv_obj_t</span>* tab_btns = lv_tabview_get_tab_btns(tv);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>它的选项卡的默认样式是这样的：</p><img src="https://img-blog.csdnimg.cn/58d8e25b08074e9ea5ac0b254fdd77de.png"><h2 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h2><p><strong>修改背景色</strong><br>我们一下它的被选中时的背景色，我们只需要后面添加修改样式的代码即可，这里我使用本地样式修改，你也可以使用共享样式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_set_style_bg_color(tab_btns, lv_palette_main(LV_PALETTE_RED), LV_PART_ITEMS | LV_STATE_CHECKED);</span><br></pre></td></tr></table></figure><p>然后我们就能看到选中时的背景颜色被修改了：</p><img src="https://img-blog.csdnimg.cn/b25418def3d64f7fa84a5ac386404ecb.png"><p><strong>去除背景色</strong><br>如果我不想要背景色呢？那我们让背景色为透明即可：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_set_style_bg_opa(tab_btns, LV_OPA_0, LV_PART_ITEMS | LV_STATE_CHECKED);</span><br></pre></td></tr></table></figure><p>这样我们就能看到选中时没有高亮的背景色了：</p><img src="https://img-blog.csdnimg.cn/5dd852291bfd4688b062e342a4457dea.png"><h2 id="边框颜色"><a href="#边框颜色" class="headerlink" title="边框颜色"></a>边框颜色</h2><p><strong>修改边框颜色</strong><br>我们也可以修改选中时的边框颜色，我们只需要后面添加修改样式的代码即可，这里我是用本地样式修改，你也可以使用共享样式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_set_style_border_color(tab_btns, lv_palette_main(LV_PALETTE_GREEN), LV_PART_ITEMS | LV_STATE_CHECKED);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们就能看到选中时的边框颜色被修改了：</p><img src="https://img-blog.csdnimg.cn/992641e298cb4cf4ae9e6e748c3ec99c.png"><p><strong>去除边框</strong><br>如果我不想要边框呢？那我们让边框为透明即可：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_set_style_border_opa(tab_btns, LV_OPA_0, LV_PART_ITEMS | LV_STATE_CHECKED);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样我们就能看到选中时没有边框了：</p><img src="https://img-blog.csdnimg.cn/0d265fd734d0449889cd07efb480e42f.png"><h2 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h2><p><strong>文字颜色</strong><br>我们也可以修改文字颜色，我们只需要后面添加修改样式的代码即可，这里我是用本地样式修改，你也可以使用共享样式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//本地样式修改选中时的文字颜色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_color(tab_btns, lv_palette_main(LV_PALETTE_RED), LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本地样式修改未选中时的文字颜色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_color(tab_btns, lv_palette_main(LV_PALETTE_RED), 0);</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样我们就能看到文字颜色被改变了：</p><img src="https://img-blog.csdnimg.cn/c8ee0746cfaa485c84f348314b4f5039.png"><p><strong>文字大小</strong><br>我们也可以修改文字的大小(lvgl内置字体)，我们只需要后面添加修改样式的代码即可，这里我是用本地样式修改，你也可以使用共享样式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//本地样式修改选中时的文字颜色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_color(tab_btns, lv_palette_main(LV_PALETTE_RED), LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本地样式修改未选中时的文字颜色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_color(tab_btns, lv_palette_main(LV_PALETTE_RED), 0);</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样我们就能看到文字大小被改变了：</p><img src="https://img-blog.csdnimg.cn/499d58b87fe14404920285a0f09be820.png"><p><strong>显示中文</strong></p><p>通过学习 <a href="https://www.bilibili.com/video/BV1Ya411r7K2?p=15">lvgl使用中文字库</a>教程，我们就知道怎么在lvgl中快速使用中文字库了： <a href="https://www.bilibili.com/video/BV1Ya411r7K2?p=15">https://www.bilibili.com/video/BV1Ya411r7K2?p=15</a></p><p>下面我们可以让tabview的选项卡显示中文，我们只需要后面添加修改样式的代码即可，这里我是用本地样式修改，你也可以使用共享样式：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 本地样式修改字体(使用自定义字体-中文)</span></span><br><span class="line">   LV_FONT_DECLARE(lv_font_source_han_sans_bold_20);</span><br><span class="line">   lv_obj_set_style_text_font(tab_btns, &amp;lv_font_source_han_sans_bold_20, <span class="number">0</span>);   <span class="comment">// 使用自定义的字库</span></span><br><span class="line">   lv_obj_set_style_text_font(tab_btns, &amp;lv_font_source_han_sans_bold_20, LV_PART_ITEMS | LV_STATE_CHECKED);   <span class="comment">// 使用自定义的字库</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样我们就能看到显示中文了：</p><img src="https://img-blog.csdnimg.cn/a81d77a9222b4656aef78372c303e6f2.png"><h1 id="代码总结"><a href="#代码总结" class="headerlink" title="代码总结"></a>代码总结</h1><p>以上的代码贴在下面了，大家可以参考自己实验看看：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">static</span> <span class="keyword">lv_obj_t</span>* tv;</span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">lv_obj_t</span>* t1;</span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">lv_obj_t</span>* t2;</span><br><span class="line"></span><br><span class="line">   tv = lv_tabview_create(lv_scr_act(), LV_DIR_TOP, LV_DPI_DEF / <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">   t1 = lv_tabview_add_tab(tv, <span class="string">&quot;Selectors&quot;</span>);</span><br><span class="line">   t2 = lv_tabview_add_tab(tv, <span class="string">&quot;Text input&quot;</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">lv_obj_t</span>* tab_btns = lv_tabview_get_tab_btns(tv);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//本地样式修改背景色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_bg_color(tab_btns, lv_palette_main(LV_PALETTE_RED), LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//本地样式修改透明度</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_bg_opa(tab_btns, LV_OPA_0, LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//修改选中时边框的颜色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_border_color(tab_btns, lv_palette_main(LV_PALETTE_GREEN), LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//修改选中时边框的颜色透明度</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_border_opa(tab_btns, LV_OPA_0, LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//本地样式修改选中时的文字颜色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_color(tab_btns, lv_palette_main(LV_PALETTE_RED), LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本地样式修改未选中时的文字颜色</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_color(tab_btns, lv_palette_main(LV_PALETTE_RED), 0);</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 本地样式修改字体(使用内置字体)</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_font(tab_btns, &amp;lv_font_montserrat_28, LV_PART_ITEMS | LV_STATE_CHECKED);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 本地样式修改字体(使用自定义字体-中文)</span></span><br><span class="line">   <span class="comment">//LV_FONT_DECLARE(lv_font_source_han_sans_bold_20);</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_font(tab_btns, &amp;lv_font_source_han_sans_bold_20, 0);   // 使用自定义的字库</span></span><br><span class="line">   <span class="comment">//lv_obj_set_style_text_font(tab_btns, &amp;lv_font_source_han_sans_bold_20, LV_PART_ITEMS | LV_STATE_CHECKED);   // 使用自定义的字库</span></span><br><span class="line">   </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p><strong>获取LVGL内置调色板的颜色：</strong><br>lv_palette_main(LV_PALETTE_…)<br>其中 LV_PALETTE_… 有这些可选：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span></span><br><span class="line">    LV_PALETTE_RED,</span><br><span class="line">    LV_PALETTE_PINK,</span><br><span class="line">    LV_PALETTE_PURPLE,</span><br><span class="line">    LV_PALETTE_DEEP_PURPLE,</span><br><span class="line">    LV_PALETTE_INDIGO,</span><br><span class="line">    LV_PALETTE_BLUE,</span><br><span class="line">    LV_PALETTE_LIGHT_BLUE,</span><br><span class="line">    LV_PALETTE_CYAN,</span><br><span class="line">    LV_PALETTE_TEAL,</span><br><span class="line">    LV_PALETTE_GREEN,</span><br><span class="line">    LV_PALETTE_LIGHT_GREEN,</span><br><span class="line">    LV_PALETTE_LIME,</span><br><span class="line">    LV_PALETTE_YELLOW,</span><br><span class="line">    LV_PALETTE_AMBER,</span><br><span class="line">    LV_PALETTE_ORANGE,</span><br><span class="line">    LV_PALETTE_DEEP_ORANGE,</span><br><span class="line">    LV_PALETTE_BROWN,</span><br><span class="line">    LV_PALETTE_BLUE_GREY,</span><br><span class="line">    LV_PALETTE_GREY,</span><br><span class="line">    _LV_PALETTE_LAST,</span><br><span class="line">    LV_PALETTE_NONE = <span class="number">0xff</span>,</span><br><span class="line">&#125; <span class="keyword">lv_palette_t</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>使用自定义颜色</strong></p><p>除了使用 <code>lv_palette_main(LV_PALETTE_...)</code> 我们可以使用自定义的颜色值：</p><ul><li>十六进制颜色码： lv_color_hex(0x000000)</li><li>RGB值：LV_COLOR_MAKE(0x00, 0x00, 0x00)</li></ul><p>使用示例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_set_style_bg_color(tab_btns, lv_color_hex(<span class="number">0x000000</span>), LV_PART_ITEMS | LV_STATE_CHECKED);</span><br><span class="line">lv_obj_set_style_bg_color(tab_btns,  LV_COLOR_MAKE(<span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>), LV_PART_ITEMS | LV_STATE_CHECKED);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>lvgl视频教程</strong><br><a href="https://www.bilibili.com/video/av209749730">https://www.bilibili.com/video/av209749730</a></p><p>百问网LVGL(v8)系列课程(韦东山·监制) 教程基于lvgl v8.2版本，课程适配多个平台、多款板子</p><p>百问网LVGL(v8)视频课程(韦东山·监制) 教程基于lvgl v8.2版本，课程适配多个平台、多款板子！视频学习地址：<a href="https://www.bilibili.com/video/BV1Ya411r7K2">https://www.bilibili.com/video/BV1Ya411r7K2</a></p><p>视频教程配套资料<br><a href="https://gitee.com/weidongshan/lvgl_100ask_course_materials">https://gitee.com/weidongshan/lvgl_100ask_course_materials</a><br>相关学习资源<br>lvgl官网：<a href="https://lvgl.io/">https://lvgl.io</a><br>lvgl官方文档：<a href="https://docs.lvgl.io/">https://docs.lvgl.io</a><br>百问网lvgl中文文档：<a href="http://lvgl.100ask.net/">http://lvgl.100ask.net</a><br>百问网lvgl论坛：<a href="https://forums.100ask.net/c/13-category/13">https://forums.100ask.net/c/13-category/13</a><br>百问网lvgl学习交流群：<a href="http://lvgl.100ask.net/master/contact_us/index.html">http://lvgl.100ask.net/master/contact_us/index.html</a><br>百问网lvgl视频教程：<br><a href="https://www.bilibili.com/video/BV1Ya411r7K2">https://www.bilibili.com/video/BV1Ya411r7K2</a><br><a href="https://www.100ask.net/detail/p_61c5a317e4b0cca4a4e8b6f1/6">https://www.100ask.net/detail/p_61c5a317e4b0cca4a4e8b6f1/6</a><br>————————————————<br>版权声明：本文为CSDN博主「挨踢民工biubiu」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_35181236/article/details/122121775">https://blog.csdn.net/qq_35181236/article/details/122121775</a></p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/qq_35181236/article/details/122121775">LVGL|lvgl教程之修改lvgl tabview部件顶部框(选项卡)的默认样式</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> GUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> GUI </tag>
            
            <tag> LVGL </tag>
            
            <tag> lvgl tabview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Kits在根目录下自动创建</title>
      <link href="/posts/2654094191.html"/>
      <url>/posts/2654094191.html</url>
      
        <content type="html"><![CDATA[<h1 id="将-windows-kits-移到相应位置"><a href="#将-windows-kits-移到相应位置" class="headerlink" title="将 windows kits 移到相应位置"></a>将 windows kits 移到相应位置</h1><p>你是不是当时下载了Visual Stdio，然后莫名奇妙就多了个Windows Kits，<br>可以把它移动到VisualStdio里面找到你安装的Windows kits的文件夹，然后把它整个截切到想要移动的地方。<br>比如说，我就是把”D:\Windows kits”整个剪切到”D:\DevelopmentTool\VisualStdio2022\Windows Kits”。<br><strong>PS:需要注意的是这里是剪切文件夹，而不是复制，不然在你cmd下使用mklink提示“文件已经被创建”。</strong></p><h1 id="修改注册表实现链接"><a href="#修改注册表实现链接" class="headerlink" title="修改注册表实现链接"></a>修改注册表实现链接</h1><p>下载vs后，2022的直接默认在根目录下载kits文件夹，这让强迫症的我难受死了，经过三天的努力，终于解决了这个问题，<br>这个方法不是使用软连接的方法，使用软连接原来的地方还会多个快捷方式，对于别人来说治标不治本，对我来说屁用没有，<br>还是很难受，我看也没人写，我就写出来可以参考下，也免得我自己忘记。</p><p>通过修改注册表进行移动文件夹不报错。我修改了三个地方。</p><h2 id="位置一"><a href="#位置一" class="headerlink" title="位置一:"></a>位置一:</h2><ul><li>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Kits\Installed Roots</li></ul><img src="https://i0.hdslb.com/bfs/article/bf4e8c40c5e3a820f095fa64cc03ef7414d8ed15.png@942w_401h_progressive.webp"><h2 id="位置二"><a href="#位置二" class="headerlink" title="位置二:"></a>位置二:</h2><ul><li>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Microsoft SDKs\Windows\v10.0</li></ul><img src="https://i0.hdslb.com/bfs/article/5b94976f6987fe887fd038d175cf5927a699272d.png@942w_368h_progressive.webp"><h2 id="位置三"><a href="#位置三" class="headerlink" title="位置三:"></a>位置三:</h2><ul><li>计算机\HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows Kits\Installed Roots</li></ul><img src="https://i0.hdslb.com/bfs/article/87140356f377eded39f19d47c4d5a7466cf027b3.png@942w_389h_progressive.webp"><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看（侵删）</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://www.bilibili.com/read/cv16890467">下载vs后，移动windows kits文件夹(不使用快捷方式的方法)</a></li><li><a href="https://www.zhihu.com/question/440612684">出现在E盘的Windows Kits是怎么回事？删掉可以吗？</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Visual Stdio </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Visual Stdio </tag>
            
            <tag> Windows Kits </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu下将Python命令默认指向为Python3</title>
      <link href="/posts/213945612.html"/>
      <url>/posts/213945612.html</url>
      
        <content type="html"><![CDATA[<h1 id="ubuntu下将Python命令默认指向为Python3"><a href="#ubuntu下将Python命令默认指向为Python3" class="headerlink" title="ubuntu下将Python命令默认指向为Python3"></a>ubuntu下将Python命令默认指向为Python3</h1><p><strong>ubuntu</strong>下输入Python命令默认指向的是&#x2F;usr&#x2F;bin&#x2F;python</p><p>因此，为了方便使用，安装了python3后，我们一般会创建软链接使&#x2F;usr&#x2F;bin&#x2F;python指向&#x2F;usr&#x2F;bin&#x2F;python3。</p><p>备份系统自带python2的软链接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/bin/python /usr/bin/python.bak</span><br></pre></td></tr></table></figure><p>创建python3软链接：</p><p>（安装python一般会自动生成软链接&#x2F;usr&#x2F;bin&#x2F;python3，如果没有，请将“&#x2F;usr&#x2F;bin&#x2F;python3”改为你安装的python3的位置）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/bin/python3 /usr/bin/python</span><br></pre></td></tr></table></figure><p>同理，pip也一样</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/bin/pip3 /usr/bin/pip</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/leishupei/article/details/120736802">ubuntu下将Python命令默认指向为Python3</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下编译环境多版本共存（ESP8266）</title>
      <link href="/posts/1569020693.html"/>
      <url>/posts/1569020693.html</url>
      
        <content type="html"><![CDATA[<h1 id="ESP32编译环境多版本共存处理办法"><a href="#ESP32编译环境多版本共存处理办法" class="headerlink" title="ESP32编译环境多版本共存处理办法"></a>ESP32编译环境多版本共存处理办法</h1><h2 id="1-现有方法存在的问题"><a href="#1-现有方法存在的问题" class="headerlink" title="1.现有方法存在的问题"></a>1.现有方法存在的问题</h2><p>目前ESP32的官方开发框架ESP-IDF更新很快，我的电脑里已经存了好几个版本的ESP-IDF SDK了。尽管新版本的功能更强大，但旧版本的SDK中也有不少可以学习的知识，看到不同的编程优化思路。<br>每一个版本的SDK都需要配置编译工具所在的路径，以及配置工程路径的环境变量IDF_PATH。设置方法有两种：</p><ol><li>使用如下语句，导入SDK的编译工具和配置环境变量：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$PATH</span>:<span class="variable">$HOME</span>/esp/xtensa-esp32-elf/bin&quot;</span>  <span class="comment">#（配置SDK编译工具所在路径）</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> IDF_PATH=~/esp/esp-idf  <span class="comment"># （配置环境变量）</span></span><br></pre></td></tr></table></figure></li></ol><p>通过语句执行的配置，仅在当前终端有效，退出当前终端或者系统重启后，上述配置就失效了，即不可以执行正常的编译了。</p><p>若需继续使用，需再次敲击上述命令完成当前终端的配置。</p><ol start="2"><li>上述配置方法的原理<br>将上述语句，添加到‘～’目录下的.profile文件（这个文件在每次系统启动时就自动运行一次其中的命令），就可以保证上述配置一直有效，不需要每次使用都敲击1.1中的命令，就可以一直使用。（首次配置后，应重启系统，来使配置生效）</li></ol><p>但是，当我们下载了多个版本的SDK时，1.2的这种看起来”很方便的“配置，存在很大问题。比如，我下载了v3.17版本的SDK，也下载了v4.01版本的SDK，他们的IDF_PATH，以及编译工具的PATH都需要设置，把他们都写入到.profile文件，会出现如下所示的重名现象：</p><img src="https://img-blog.csdnimg.cn/20200812003512474.png"><p><strong>最终，IDF_PATH，PATH被赋值了两次，将以最后一次赋值为最终的配置（即对v4.01版本的SDK的配置），因此对v3.17的配置将失效，我们将不能完成v3.17的正常编译。</strong></p><blockquote><p>能不能有一种方法，让我们同时快速完成多个版本的SDK的编译环境配置呢？</p></blockquote><h2 id="2-解决方法："><a href="#2-解决方法：" class="headerlink" title="2.解决方法："></a>2.解决方法：</h2><p>切换到”～“目录下，运行 ls -al命令，查看该目录下的文件：</p><img src="https://img-blog.csdnimg.cn/20200812003731473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5eDEyMzQ=,size_16,color_FFFFFF,t_70"><p><strong>若有.bash_aliases文件就打开它，并添加以下内容：（注：若没有则可以新建-因为默认启动的.bashrc会扫描.bash_aliases下文件）</strong></p><p>（注意，我的SDK版本为v4.0、v3.22、v3.17，它们的编译工具，以及esp-idf工程目录在对应的esp4,esp322,esp317目录下，你可以依据你下载的SDK版本，以及具体的路径替换下述语句的相关目录路径。）</p><p><strong>旧版本的idf 添加下述语句：</strong></p><img src="https://img-blog.csdnimg.cn/20200812003925833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5eDEyMzQ=,size_16,color_FFFFFF,t_70"><p><strong>新版本的 idf 添加下述语句：</strong></p><img src="https://img-blog.csdnimg.cn/40a2169649944389bcfa658642e88b89.png"><p>**<em>注意：上述截图中第一条语句的 “.”后有一个空格。（其实不添加也不影响！）</em><br>若没有，就创建它，并添加上述内容。<br>添加后，保存该文件，并重新启动系统或者使用命令source &#x2F;home&#x2F;xxx&#x2F;.bashrc（注意使用正确的bashrc路径）刷新系统配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> get_esp32=<span class="string">&#x27;export PATH=$PATH:/home/yichen/.espressif/tools/xtensa-esp32-elf/esp-2022r1-11.2.0/xtensa-esp32-elf/bin&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> get_e32=<span class="string">&#x27;. $HOME/esp/esp-idf/export.sh&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>下面说一下如何使用：</strong><br>如图，打开一个终端，输入printenv IDF_PATH，显示当前IDF_PATH的配置。同理，输入printenv PATH，显示当前PATH的配置。然后运行get_esp322命令，再输入printenv IDF_PATH，发现了没，我们&#x2F;esp322&#x2F;xtensa-esp32-elf&#x2F;bin已经添加到PATH环境变量里了。再运行get_e322，输入printenv PATH，发现，IDF_PATH环境变量已经变为v3.2.2对应的&#x2F;esp322&#x2F;esp-idf了。</p><blockquote><p>不知道为什么我添加的路径都是往后叠加，越加越长</p></blockquote><img src="https://img-blog.csdnimg.cn/20200812004451697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5eDEyMzQ=,size_16,color_FFFFFF,t_70"><p>我们再打开一个终端，运行以下命令，并查看对应的环境变量。发现，输入get_esp317\get_e317也能完成对应于v3.17版本的SDK需要的配置。如此，在不同的终端中，我们输入不同的get_espxx 命令就可以完成设置了，不用敲击过长的命令，也不必担心环境变量名会重复而导致环境变量被反复设置而被覆盖的问题。</p><img src="https://img-blog.csdnimg.cn/20200812004512673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5eDEyMzQ=,size_16,color_FFFFFF,t_70"><h2 id="上述设置的原理说明"><a href="#上述设置的原理说明" class="headerlink" title="上述设置的原理说明"></a>上述设置的原理说明</h2><p>上述设置文件中使用的aliase命令，是linux下给指令起别名的命令行工具，我们通过给export IDF_PATH&#x3D;xxxx这条长指令起别名来达到节省敲击的字符数的目的，也就是说，起别名后，执行get_esp32，就等效于在命令行输入了：</p><p>export PATH&#x3D;”$HOME&#x2F;esp322&#x2F;xtensa-esp32-elf&#x2F;bin:$PATH</p><p>因此我们可以通过输入简单的命令，完成环境的配置。</p><p>另一方面，在”～“目录下的.bash_aliases是一个特殊的文件，它专门用来存放我们给其他命令起别名的设置。并且，每当新建一个终端，在终端启动时会自动运行一次这个文件里的指令，因此，对于不同版本的SDK，我们只需要新建一个终端，运行对应版本的指令，就可以实现当前终端的环境变量的配置，而不影响其他终端，做到多版本SDK开发的共存。</p><p>_.bashrc中有对.bash_aliases的说明：</p><img src="https://img-blog.csdnimg.cn/20200812010421728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmd5eDEyMzQ=,size_16,color_FFFFFF,t_70"><p><strong>即允许我们新建一个.bash_aliases文件来专门存放我们的起别名的操作。这正是上面我提到的一点。<br>在实践中注意修改对应的路径就可以了，该方法也适用于别的开发环境，多版本SDK共存处理的操作。</strong></p><h1 id="对-Bash-Aliases（别名）-说明"><a href="#对-Bash-Aliases（别名）-说明" class="headerlink" title="对 Bash Aliases（别名） 说明"></a>对 Bash Aliases（别名） 说明</h1><p><strong>Bash中的Aliases（别名）可以简单地称为将运行另一个命令&#x2F;程序的命令或快捷方式，当运行的命令很长且对于经常使用的命令时，那么使用Bash别名是非常有用的。</strong><br>在本文中，小编将简单整理在Linux系统中创建和使用Bash别名的不同方法，感兴趣的朋友可以关注下。</p><h2 id="在Linux中检查Bash别名"><a href="#在Linux中检查Bash别名" class="headerlink" title="在Linux中检查Bash别名"></a>在Linux中检查Bash别名</h2><blockquote><p>Bash Alias是一个shell内置命令，可以通过运行以下命令进行确认：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">type</span> -a <span class="built_in">alias</span></span></span><br><span class="line">alias is a shell builtin</span><br></pre></td></tr></table></figure><p>在跳转和设置别名之前，首先需要看到涉及的配置文件。一个别名可以在<strong>“用户级”</strong>或<strong>“系统级”</strong>中进行设置。<br>如果调用系统shell，只需在终端键入<strong>“ alias ”</strong>即可查看已定义别名的列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ alias</span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bashaliase.png"><p><strong>（检查已定义Linux别名的列表）</strong></p><p>在.bashrc文件或.bash_aliases文件中定义用户级别名。该.bash_aliases文件是将所有的别名到一个单独的文件，而不是把它在的.bashrc文件以及其他参数。刚开始，.bash_aliases是不可用的，所以必须创建它。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls -la ~ | grep -i .bash_aliases       <span class="comment"># 检查文件是否可用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> touch ~/.bash_aliases                  <span class="comment"># 创建一个空的别名文件</span></span></span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bashaliases.png"><p><strong>（创建Bash别名文件）</strong></p><p>打开.bashrc文件，并注意以下部分。这部分代码的功用是检查用户主目录下是否存在文件.bash_aliases，并在每次启动新的终端会话时将其加载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Alias definitions.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You may want to put all your additions into a separate file like</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ~/.bash_aliases, instead of adding them here directly.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> See /usr/share/doc/bash-doc/examples <span class="keyword">in</span> the bash-doc package.</span></span><br><span class="line"></span><br><span class="line">if [ -f ~/.bash_aliases ]; then</span><br><span class="line">    . ~/.bash_aliases</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>你还可以在任何目录下创建自定义别名文件，并在.bashrc或.profile中添加定义以加载它。但我不喜欢这样，个人比较喜欢选择将所有别名分组在.bash_aliases下。</p><p>当然，你也可以在.bashrc文件下添加别名。在.bashrc文件下查找别名部分，其中带有一些预定义的别名。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> color support of ls and also add handy aliases</span></span><br><span class="line">if [ -x /usr/bin/dircolors ]; then</span><br><span class="line">    test -r ~/.dircolors &amp;&amp; eval &quot;$(dircolors -b ~/.dircolors)&quot; || eval &quot;$(dircolors -b)&quot;</span><br><span class="line">    alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">    #alias dir=&#x27;dir --color=auto&#x27;</span><br><span class="line">    #alias vdir=&#x27;vdir --color=auto&#x27;</span><br><span class="line"></span><br><span class="line">    alias grep=&#x27;grep --color=auto&#x27;</span><br><span class="line">    alias fgrep=&#x27;fgrep --color=auto&#x27;</span><br><span class="line">    alias egrep=&#x27;egrep --color=auto&#x27;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> colored GCC warnings and errors</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="built_in">export</span> GCC_COLORS=<span class="string">&#x27;error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> some more ls aliases</span></span><br><span class="line">alias ll=&#x27;ls -alF&#x27;</span><br><span class="line">alias la=&#x27;ls -A&#x27;</span><br><span class="line">alias l=&#x27;ls -CF&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Add an <span class="string">&quot;alert&quot;</span> <span class="built_in">alias</span> <span class="keyword">for</span> long running commands.  Use like so:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   sleep 10; alert</span></span><br><span class="line">alias alert=&#x27;notify-send --urgency=low -i &quot;$([ $? = 0 ] &amp;&amp; echo terminal || echo error)&quot; &quot;$(history|tail </span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bas.png"><h2 id="在Linux系统中创建别名"><a href="#在Linux系统中创建别名" class="headerlink" title="在Linux系统中创建别名"></a><strong>在Linux系统中创建别名</strong></h2><p>你可以创建将仅为当前会话存储并在当前会话结束后将被销毁的临时别名，也可以创建将是持久性的永久别名。</p><p>在Linux中创建别名的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">alias</span> &lt;name-of-the-command&gt;=<span class="string">&quot;command to run&quot;</span></span></span><br></pre></td></tr></table></figure><p>例如，创建以下的别名。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">alias</span> Hello=<span class="string">&quot;echo welcome to idccoupon&quot;</span></span></span><br></pre></td></tr></table></figure><p>打开终端并创建所需的任何<strong>别名</strong>命令。注意：如果您打开另一个会话，那么新创建的别名将不可用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">alias</span> Hello<span class="string">&quot;echo welcome to idccoupon&quot;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">alias</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> Hello</span></span><br></pre></td></tr></table></figure><p>要使别名永久化，请将其添加到**.bash_aliases**文件中。你可以使用自己喜欢的文本编辑器，也可以使用cat命令或echo命令添加别名。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="built_in">alias</span> nf=<span class="string">&quot;neofetch&quot;</span> &gt;&gt; ~/.bash_aliases</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat &gt;&gt; ~/.bash_aliases</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat ~/.bash_aliases</span></span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bashalias.png"><p><strong>（列出定义的别名）</strong></p><p>如果想要它起作用，必须重新加载**.bash_aliases**文件，才能使更改在当前会话中生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span>〜/ .bash_aliases</span></span><br></pre></td></tr></table></figure><p>现在，如果我运行<strong>“ nf”（</strong>这是“ neofetch”的别名），它将触发<strong>neofetch</strong>程序。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nf</span></span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bashalia.png"><p><strong>（在Linux中运行Alias）</strong></p><p>此外，一个别名可以覆盖想要想覆盖任何命令。为了进行演示，这里将使用一个uptime命令，该命令将显示系统正常运行时间，登录的用户数以及系统平均负载。现在，我将创建一个别名，该别名将覆盖<strong>uptime命令</strong>的行为。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> uptime</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat &gt;&gt; ~/.bash_aliases <span class="built_in">alias</span> uptime=<span class="string">&quot;echo &#x27;I am running uptime command now&#x27;&quot;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.bash_aliases</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> uptime</span></span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bashali.png"><p><strong>覆盖命令的默认行为）</strong></p><p>从这个例子中可以得出结论，在检查和调用实际命令之前，优先级属于bash别名。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat ~/.bash_aliases</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.bash_aliases</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> uptime</span></span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bashal.png"><h2 id="在Linux中删除别名"><a href="#在Linux中删除别名" class="headerlink" title="在Linux中删除别名"></a>在Linux中删除别名</h2><p>现在，从**.bash_aliases<strong>文件中删除</strong>正常运行时间<strong>条目，然后重新加载</strong>.bash_aliases<strong>文件，该文件仍将使用别名定义输出正常运行时间。这是因为别名定义已加载到当前的Shell会话中，所以必须启动新会话或通过运行</strong>unalias**命令取消别名定义，如下图所示。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">unalias</span> uptime</span></span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/basha.png"><p><strong>在Linux中删除别名）</strong></p><p><strong>注意</strong>：Unalias将从当前加载的会话中删除别名定义，而不是从**.bashrc<strong>或</strong>.bash_aliases中删除**。</p><h2 id="添加系统范围的别名"><a href="#添加系统范围的别名" class="headerlink" title="添加系统范围的别名"></a>添加系统范围的别名</h2><p>至此，我们已经了解了如何在用户级别中设置别名。而如果想要全局设置别名，可以修改<strong>“ &#x2F;etc&#x2F;bash.bashrc”</strong>文件并添加将在全局范围内生效的别名。当然需要具有提升的特权才能修改<strong>bash.bashrc</strong>文件。</p><p>或者，在<strong>“ &#x2F;etc&#x2F;profile.d&#x2F;”</strong>下创建一个脚本。当登录到shell时，<strong>“ &#x2F; etc &#x2F; profile”</strong>将在<strong>profile.d</strong>下运行任何脚本，然后实际运行<strong>〜&#x2F; .profile</strong>。此方法将减少弄乱**&#x2F; etc &#x2F; profile<strong>或</strong>&#x2F;etc&#x2F;bash.bashrc**文件的风险。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo cat &gt;&gt; /etc/profile.d/alias.sh</span></span><br><span class="line">alias ls=”ls -ltra”</span><br></pre></td></tr></table></figure><p>以下是从**&#x2F; etc &#x2F; profile<strong>获取的代码，该代码负责运行我们放在</strong>&#x2F;etc&#x2F;profiles.d&#x2F;**下的所有脚本。它将查找带有<code>.sh</code>扩展名的所有文件，然后运行source命令。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tail / etc / profile</span></span><br></pre></td></tr></table></figure><img src="http://www.idccoupon.com/wp-content/uploads/2021/02/bash.png"><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>以上就是在Linux系统中创建和使用Bash Aliases（别名）的简单方法，不难发现，可以很容易的在Linux系统中设置别名、配置文件的别名，以及在“<strong>用户级</strong>”或“<strong>系统级</strong>”环境中设置别名的方法。</p><p>如果经常使用Linux命令，而且命令比较长的话， 那么不妨为其多设置几个别名，这样工作起来更加的便捷和高效。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/wangyx1234/article/details/107947892">ESP32编译环境多版本共存处理办法</a></li><li><a href="http://www.idccoupon.com/3938.html">Linux系统中创建和使用Bash Aliases（别名）的不同方法概述</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> ESP8266 </category>
          
          <category> 编译环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 编译环境 </tag>
            
            <tag> 多版本共存 </tag>
            
            <tag> Bash Aliases </tag>
            
            <tag> 别名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat字符串拼接</title>
      <link href="/posts/2626575334.html"/>
      <url>/posts/2626575334.html</url>
      
        <content type="html"><![CDATA[<h1 id="将两个字符串变量联合在一起"><a href="#将两个字符串变量联合在一起" class="headerlink" title="将两个字符串变量联合在一起"></a>将两个字符串变量联合在一起</h1><ol><li>方法一<br>可以写成set val &#x3D; %VarA%%VarB%，但是由于赋值问题，建议前后加上引号。</li></ol><p>例如：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="comment">rem 两个变量拼接，等号前后一定不要有空格</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> str1=Hello</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> str2=world</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> result=“<span class="variable">%str1%</span>, <span class="variable">%str2%</span>”</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%result%</span></span><br></pre></td></tr></table></figure><img src="https://iknow-pic.cdn.bcebos.com/94cad1c8a786c91777e8c33ac63d70cf3ac757cd?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_600%2Ch_800%2Climit_1%2Fquality%2Cq_85%2Fformat%2Cf_auto"><p><strong>扩展资料</strong><br>批处理文件，在DOS和Windows（任意）系统中，.bat文件是可执行文件，由一系列命令构成，其中可以包含对其他程序的调用。</p><p>这个文件的每一行都是一条DOS命令（大部分时候就好像我们在DOS提示符下执行的命令行一样），你可以使用DOS下的Edit或者Windows的记事本(notepad)等任何文本文件编辑工具创建和修改批处理文件。</p><p>批处理中的变量基本上是万能的，可以储存各种各样的数据，不过用来计算时你会发现变量类型转为了int，数值的极端范围为[-2147483648，2147483647]，如果不拿来计算的话，似乎数万位也是可以的。</p><ol start="2"><li>方法二 <figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">:: 是的, 你这样写也是可以的, 但是还是加上引号</span><br><span class="line">:: 这样可以避免一些字符无法赋值的问题</span><br><span class="line">:: 比如:</span><br><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">set</span> a=<span class="number">12345</span></span><br><span class="line">    <span class="built_in">set</span> b=<span class="number">23456</span></span><br><span class="line">    <span class="built_in">set</span> &quot;c=<span class="variable">%a%</span><span class="variable">%b%</span>&quot; </span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%c%</span></span><br><span class="line">    <span class="built_in">pause</span>&gt;<span class="built_in">nul</span></span><br><span class="line">     </span><br><span class="line">    :: 中国批处理脚本联盟</span><br></pre></td></tr></table></figure></li></ol><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看（侵删）</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://zhidao.baidu.com/question/1383554521726188140.html">bat 如何将两个字符串变量联合在一起?</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat函数使用</title>
      <link href="/posts/3963076605.html"/>
      <url>/posts/3963076605.html</url>
      
        <content type="html"><![CDATA[<h1 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h1><p>Windows bat脚本是一种解释性的脚本语言，可以拿到做很多事情。对于稍简单的问题：比如通过注册表判断下档期机器的语言啊，国家啊，安装了那些软件啊等等还少诶简单。但是如果有可能使用bat脚本来处理较复杂的问题时，就需要用函数来将其模块化，方便bat脚本的阅读和编写。下面来介绍下bat 函数的用法</p><h1 id="bat函数写法"><a href="#bat函数写法" class="headerlink" title="bat函数写法"></a>bat函数写法</h1><p>如下是一个最简单的函数写法；以**:func开始以 goto:eof **结束。:func和goto:eof之间的为函数内容，例如这里的echo this is a bat func</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">:func</span><br><span class="line"><span class="built_in">echo</span> this is a bat func</span><br><span class="line"><span class="function">goto:<span class="title">eof</span></span></span><br></pre></td></tr></table></figure><h1 id="bat函数调用"><a href="#bat函数调用" class="headerlink" title="bat函数调用"></a>bat函数调用</h1><p>写好了bat函数之后，我们需要调用它。如下代码片段展示了如何在bat脚本中调用函数。其实很简单，就这一句<strong>call:func</strong>即可。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">call:<span class="title">func</span></span></span><br><span class="line"><span class="function"><span class="title">pause</span></span></span><br><span class="line"><span class="function">:<span class="title">func</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">this</span> <span class="title">is</span> <span class="title">a</span> <span class="title">bat</span> <span class="title">func</span></span></span><br><span class="line"><span class="function"><span class="title">goto:eof</span></span></span><br></pre></td></tr></table></figure><h1 id="bat函数返回值"><a href="#bat函数返回值" class="headerlink" title="bat函数返回值"></a>bat函数返回值</h1><p><strong>目前我了解到的bat函数返回值的获取有如下两种方法：</strong></p><ul><li>使用参数带回</li><li>使用全局变量带回</li></ul><p>这里直接贴上关于bat函数的各种条件的验证代码：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">color</span> <span class="number">0</span>d</span><br><span class="line"><span class="built_in">echo</span> bat Function example</span><br><span class="line"><span class="built_in">echo</span> =================================</span><br><span class="line"><span class="built_in">echo</span> ==========Func No paramter ======</span><br><span class="line"><span class="built_in">echo</span> =================================</span><br><span class="line"><span class="built_in">echo</span> before <span class="keyword">call</span> myFuncNoPara</span><br><span class="line"><span class="function">call:<span class="title">myFuncNoPara</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">after</span> <span class="title">call</span> <span class="title">myFuncNoPara</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> =================================</span></span><br><span class="line"><span class="function"><span class="title">echo</span> ===========<span class="title">Func</span> <span class="title">has</span> <span class="title">paramter</span>=====</span></span><br><span class="line"><span class="function"><span class="title">echo</span> =================================</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">before</span> <span class="title">call</span> <span class="title">myFuncHasPara</span></span></span><br><span class="line"><span class="function"><span class="title">call:myFuncHasPara</span> 123 <span class="title">abc</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">after</span> <span class="title">call</span> <span class="title">myFuncHasPara</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> =================================</span></span><br><span class="line"><span class="function"><span class="title">echo</span> =======<span class="title">Func</span> <span class="title">with</span> <span class="title">return</span> <span class="title">value</span>====</span></span><br><span class="line"><span class="function"><span class="title">echo</span> =================================</span></span><br><span class="line"><span class="function"><span class="title">set</span> <span class="title">return</span>=123</span></span><br><span class="line"><span class="function"><span class="title">set</span> <span class="title">returnPara</span>=321</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">return</span>:%<span class="title">return</span>%</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">returnPara</span>:%<span class="title">returnPara</span>%</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">befora</span> <span class="title">call</span> <span class="title">myFuncReturnValue</span></span></span><br><span class="line"><span class="function"><span class="title">call:myFuncReturnValue</span> <span class="title">returnPara</span> <span class="title">abc</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">after</span> <span class="title">call</span> <span class="title">myFuncReturnValue</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">return</span>:%<span class="title">return</span>%</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">returnPara</span>:%<span class="title">returnPara</span>%</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">pause</span></span></span><br><span class="line"><span class="function">:<span class="title">myFuncNoPara</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncNoPara</span> <span class="title">enter</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncNoPara</span> <span class="title">First</span> <span class="title">para</span>:%1</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncNoPara</span> <span class="title">Second</span> <span class="title">para</span>:%2</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncNoPara</span> <span class="title">Third</span> <span class="title">para</span>:%3</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncNoPara</span> <span class="title">exit</span></span></span><br><span class="line"><span class="function"><span class="title">goto:eof</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">:<span class="title">myFuncHasPara</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncHasPara</span> <span class="title">enter</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncHasPara</span> <span class="title">First</span> <span class="title">para</span>:%1</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncHasPara</span> <span class="title">Second</span> <span class="title">para</span>:%2</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncHasPara</span> <span class="title">Third</span> <span class="title">para</span>:%3</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncHasPara</span> <span class="title">exit</span></span></span><br><span class="line"><span class="function"><span class="title">goto:eof</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">:<span class="title">myFuncReturnValue</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncReturnValue</span></span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncReturnValue</span> <span class="title">First</span> <span class="title">para</span>:%1</span></span><br><span class="line"><span class="function"><span class="title">echo</span> <span class="title">myFuncReturnValue</span> <span class="title">Second</span> <span class="title">para</span>:%2</span></span><br><span class="line"><span class="function"><span class="title">set</span> &quot;%~1=%2%&quot;</span></span><br><span class="line"><span class="function"><span class="title">set</span> <span class="title">return</span>=%2</span></span><br><span class="line"><span class="function"><span class="title">goto:eof</span></span></span><br></pre></td></tr></table></figure><p><strong>运行效果图：</strong></p><img src="https://img-blog.csdn.net/20170630145539023?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcGVuZ19jYW8=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看（侵删）</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/peng_cao/article/details/73999076">bat 脚本之 使用函数</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
            <tag> 函数使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat路径字符串处理</title>
      <link href="/posts/4108996742.html"/>
      <url>/posts/4108996742.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>又是实际开发中的问题，想要截取一个文件路径中的盘符、文件名等信息，第一反应是正则表达式？或者是 split 函数？这些往往都是“高级”语言中才会有的实现方法，对于批处理来说有点“带不动”啊，那么在bat批处理中要怎样处理类似的请求呢？最近找到了两种方法，接下来会逐一展示一下，不过在展示具体的写法前，我们先来看一下 %~dp0的含义。</p><h2 id="dp0的含义"><a href="#dp0的含义" class="headerlink" title="%~dp0的含义"></a>%~dp0的含义</h2><p>关于 %<del>dp0 的作用在之前的总结中[ 《.bat批处理（四）：路径相关%cd%和%</del>dp0的区别》 ](<a href="https://blog.csdn.net/albertsh/article/details/52807345">https://blog.csdn.net/albertsh/article/details/52807345</a>) 有提到过，它表示当前运行的批处理文件所在的目录，那么它是一个特殊的变量吗？</p><p>可以说算是吧，这个变量特殊在它是从参数变量 %0 扩展而来的，提到 %0 很多人都会想到它是批处理脚本的第一个参数，表示当前运行的脚本全路径，可以写个脚本试一下：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">0</span>:<span class="number">03</span>:<span class="number">25</span>]</span><br><span class="line">% Get-Content showparams.bat</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">0</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">1</span></span><br><span class="line"></span><br><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">0</span>:<span class="number">03</span>:<span class="number">31</span>]</span><br><span class="line">% ./showparams.bat good</span><br><span class="line">&quot;D:\data\bat\showparams.bat&quot;</span><br><span class="line">good</span><br></pre></td></tr></table></figure><blockquote><p>类似的变量还有 1%、2%、3%… 一直到9%，都依次表示运行批处理脚本时传入的参数，这些变量还有一个本领，那就是支持扩展，写起来花里胡哨的。</p></blockquote><h1 id="扩展字符串"><a href="#扩展字符串" class="headerlink" title="扩展字符串"></a>扩展字符串</h1><p><strong>扩展字符串是批处理自带的功能，可以实现对表示文件路径的字符串进行特殊的处理，以%0 参数为例，具体功能列举如下：</strong></p><ul><li>%~0 - 删除路径中的引号</li><li>%~f0 - 将 %0 扩展到一个完全合格的路径名</li><li>%~d0 - 将 %0 扩展到一个驱动器号</li><li>%~p0 - 将 %0 扩展到一个路径</li><li>%~n0 - 将 %0 扩展到一个文件名</li><li>%~x0 - 将 %0 扩展到一个文件扩展名</li><li>%~s0 - 将 %0 扩展的路径只含有短名</li><li>%~a0 - 将 %0 扩展到文件的文件属性</li><li>%~t0 - 将 %0 扩展到文件的日期&#x2F;时间</li><li>%~z0 - 将 %0 扩展到文件的大小</li><li>%~$PATH:0 查找变量0%在环境变量$PATH的目录，并将 %0 扩展到找到的第一个完全合格的名称，$PATH未被定义或没找到文件，则结果为空字符串</li></ul><blockquote><p>当然这个写法也可以进行组合，比如 %<del>d0 和 %</del>p0 组合后变成 %<del>dp0 也就是我们常见的那个变量啦</del></p></blockquote><p><strong>可以将这些变量打印出来看一下具体的值：</strong></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">0</span>:<span class="number">26</span>:<span class="number">17</span>]</span><br><span class="line">% Get-Content showparams.bat</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">0</span></span><br><span class="line"><span class="built_in">echo</span> %~<span class="number">0</span></span><br><span class="line"><span class="built_in">echo</span> %~f0</span><br><span class="line"><span class="built_in">echo</span> %~d0</span><br><span class="line"><span class="built_in">echo</span> %~p0</span><br><span class="line"><span class="built_in">echo</span> %~n0</span><br><span class="line"><span class="built_in">echo</span> %~x0</span><br><span class="line"><span class="built_in">echo</span> %~s0</span><br><span class="line"><span class="built_in">echo</span> %~a0</span><br><span class="line"><span class="built_in">echo</span> %~t0</span><br><span class="line"><span class="built_in">echo</span> %~z0</span><br><span class="line"><span class="built_in">echo</span> %~dp0</span><br><span class="line"><span class="built_in">echo</span> %~nx0</span><br><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">0</span>:<span class="number">26</span>:<span class="number">28</span>]</span><br><span class="line">% .\showparams.bat</span><br><span class="line">&quot;D:\data\bat\showparams.bat&quot;</span><br><span class="line"><span class="function">D:\<span class="title">data</span>\<span class="title">bat</span>\<span class="title">showparams.bat</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">data</span>\<span class="title">bat</span>\<span class="title">showparams.bat</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:</span></span><br><span class="line"><span class="function">\<span class="title">data</span>\<span class="title">bat</span>\</span></span><br><span class="line"><span class="function"><span class="title">showparams</span></span></span><br><span class="line"><span class="function">.<span class="title">bat</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">data</span>\<span class="title">bat</span>\<span class="title">showparams.bat</span></span></span><br><span class="line"><span class="function">--<span class="title">a</span>--------</span></span><br><span class="line"><span class="function">2021/10/17 00:26</span></span><br><span class="line"><span class="function">156</span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">data</span>\<span class="title">bat</span>\</span></span><br><span class="line"><span class="function"><span class="title">showparams.bat</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><h1 id="从字符串中截取路径、文件名（重点）"><a href="#从字符串中截取路径、文件名（重点）" class="headerlink" title="从字符串中截取路径、文件名（重点）"></a>从字符串中截取路径、文件名（重点）</h1><p>上面的部分解释了%~dp0，同时也知道了这些脚本参数指出扩展语法，如果是普通变量的话就不能使用扩展语法了，那么对于一个普通的包含字符串怎么才能使用扩展语法，截取到想要的部分呢？目前我知道的有两种方法：一种是传参使其变成脚本参数，也就是 %n的形式，另一种方法就是使用 for 语句，接下来分别看一下。</p><h2 id="脚本传参（这个方法很好-使用call方式调用传参）"><a href="#脚本传参（这个方法很好-使用call方式调用传参）" class="headerlink" title="脚本传参（这个方法很好-使用call方式调用传参）"></a>脚本传参（这个方法很好-使用call方式调用传参）</h2><p>普通的字符串无法进行扩展，如果想把这种变量就需要把它们变成脚本参数，这就需要将参数传递给另一个脚本，这样实现起来会将脚本调用变得复杂一些，实际上可以在一个脚本中完成截取工作，类似于C&#x2F;C++中的函数调用，可以在批处理中使用 call 命令搭配标签实现，具体代码如下：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">17</span>:<span class="number">37</span>:<span class="number">54</span>]</span><br><span class="line">% Get-Content extract1.bat</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> OriginStr=&quot;C:/Demo/myproject/example.txt&quot;</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%OriginStr%</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">call</span> :extract <span class="variable">%OriginStr%</span></span><br><span class="line"><span class="keyword">goto</span> :eof</span><br><span class="line"></span><br><span class="line">:extract</span><br><span class="line"><span class="comment">rem 获取到文件路径</span></span><br><span class="line"><span class="built_in">echo</span> %~dp1</span><br><span class="line"><span class="comment">rem 获取到文件盘符</span></span><br><span class="line"><span class="built_in">echo</span> %~d1</span><br><span class="line"><span class="comment">rem 获取到文件名称</span></span><br><span class="line"><span class="built_in">echo</span> %~n1</span><br><span class="line"><span class="comment">rem 获取到文件后缀</span></span><br><span class="line"><span class="built_in">echo</span> %~x1</span><br><span class="line"></span><br><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">17</span>:<span class="number">41</span>:<span class="number">25</span>]</span><br><span class="line">% .\extract1.bat</span><br><span class="line">&quot;C:/Demo/myproject/example.txt&quot;</span><br><span class="line"><span class="function">C:\<span class="title">Demo</span>\<span class="title">myproject</span>\</span></span><br><span class="line"><span class="function"><span class="title">C</span>:</span></span><br><span class="line"><span class="function"><span class="title">example</span></span></span><br><span class="line"><span class="function">.<span class="title">txt</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p><strong>在这段代码中 :eof 标签是一个默认的标签，表示文件结尾，实际需求中需根据具体要求进行调整。</strong></p><h2 id="for语法扩展"><a href="#for语法扩展" class="headerlink" title="for语法扩展"></a>for语法扩展</h2><p><strong>使用 for 循环是另一种实现方式，因为循环变量也可以支持扩展，可以将需要截取的字符串路径放在循环范围中，然后先循环输出测试下：</strong></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">17</span>:<span class="number">46</span>:<span class="number">29</span>]</span><br><span class="line">% Get-Content extract2.bat</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> OriginStr=&quot;C:/Demo/myproject/example.txt&quot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="variable">%%I</span> <span class="keyword">in</span> (<span class="variable">%OriginStr%</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%I</span></span><br><span class="line"></span><br><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">17</span>:<span class="number">46</span>:<span class="number">57</span>]</span><br><span class="line">% .\extract2.bat</span><br><span class="line">&quot;C:/Demo/myproject/example.txt&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>在批处理中的循环变量是 %%I的形式，需要两个 % 才可以，后面的变量名可以换成26个字母中的任意一个，并且字母会区分大小写，然后利用这些循环变量就可以进行扩展，然后完成最开始的需求，实现代码如下：</strong></p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">17</span>:<span class="number">53</span>:<span class="number">53</span>]</span><br><span class="line">% Get-Content extract2.bat</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> OriginStr=&quot;C:/Demo/myproject/example.txt&quot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="variable">%%I</span> <span class="keyword">in</span> (<span class="variable">%OriginStr%</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%I</span></span><br><span class="line"></span><br><span class="line"><span class="comment">rem 获取到文件路径</span></span><br><span class="line"><span class="keyword">for</span> <span class="variable">%%I</span> <span class="keyword">in</span> (<span class="variable">%OriginStr%</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%~</span>dpI</span><br><span class="line"><span class="comment">rem 获取到文件盘符</span></span><br><span class="line"><span class="keyword">for</span> <span class="variable">%%I</span> <span class="keyword">in</span> (<span class="variable">%OriginStr%</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%~</span>dI</span><br><span class="line"><span class="comment">rem 获取到文件名称</span></span><br><span class="line"><span class="keyword">for</span> <span class="variable">%%I</span> <span class="keyword">in</span> (<span class="variable">%OriginStr%</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%~</span>nI</span><br><span class="line"><span class="comment">rem 获取到文件后缀</span></span><br><span class="line"><span class="keyword">for</span> <span class="variable">%%I</span> <span class="keyword">in</span> (<span class="variable">%OriginStr%</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%~</span>xI</span><br><span class="line"></span><br><span class="line"># Albert <span class="built_in">at</span> home-pc <span class="keyword">in</span> D:\data\bat [<span class="number">17</span>:<span class="number">54</span>:<span class="number">01</span>]</span><br><span class="line">% .\extract2.bat</span><br><span class="line">&quot;C:/Demo/myproject/example.txt&quot;</span><br><span class="line"><span class="function">C:\<span class="title">Demo</span>\<span class="title">myproject</span>\</span></span><br><span class="line"><span class="function"><span class="title">C</span>:</span></span><br><span class="line"><span class="function"><span class="title">example</span></span></span><br><span class="line"><span class="function">.<span class="title">txt</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><blockquote><p>这种写法的好处就是无需控制标签跳转流程，通过循环命令 for 就可以获取想要的参数，使用起来会方便很多。</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>在批处理文件中 %~dp0 表示批处理文件所在的目录，而 %cd% 表示执行命令时所在的目录</li><li>在批处理文件中想要截取目录操作可以使用变量扩展来实现，而变量必须是 %i 的形式，其中的 i 是可以是 a<del>zA</del>Z0~9</li><li>for 表达式中的循环变量在cmd命令行中是 %i 的形式，而在批处理文件中需要协程 %%i 的形式</li><li>常用的变量扩展有：获取到文件盘符使用 %<del>d0，获取到文件名称使用 %</del>n0，获取到文件后缀使用 %~x0</li></ul><p><strong>注：使用在 【设置工程名称.bat】 文件中处理</strong></p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看（侵删）</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/albertsh/article/details/120818017">.bat批处理（十）：从路径字符串中截取盘符、文件名、后缀名等信息</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 文件管理 </category>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路径 </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 在复制大量文件期间不响应UI</title>
      <link href="/posts/958244878.html"/>
      <url>/posts/958244878.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>我已经编写了一个备份管理器项目，该项目提供了一个文件夹，它将每个文件和文件夹都复制到另一个位置，依此类推。</p><p>它可以工作(很好地完成了复制作业)，但是在复制过程中(大约需要1分钟)，应用程序UI不会响应。我听说过线程，并且看到过并行编程一词(仅此而已)，现在我需要一些解释，比较和示例，以能够切换我的代码。</p><p>我之前对线程做过非常简单的操作，但是很久以前，我对线程还没有足够的信心。这是我的代码:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CopyFiles</span>(<span class="params"><span class="built_in">string</span> path, <span class="built_in">string</span> dest</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    System.IO.Directory.CreateDirectory(dest + <span class="string">&quot;\\&quot;</span> + path.Split(<span class="string">&#x27;\\&#x27;</span>)[path.Split(<span class="string">&#x27;\\&#x27;</span>).Count()<span class="number">-1</span>]);</span><br><span class="line">    dest = dest + <span class="string">&quot;\\&quot;</span> + path.Split(<span class="string">&#x27;\\&#x27;</span>)[path.Split(<span class="string">&#x27;\\&#x27;</span>).Count() - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">string</span> file <span class="keyword">in</span> System.IO.Directory.GetFiles(path))</span><br><span class="line">    &#123;</span><br><span class="line">        System.IO.File.Copy(file, dest + <span class="string">&quot;\\&quot;</span> + file.Split(<span class="string">&#x27;\\&#x27;</span>)[file.Split(<span class="string">&#x27;\\&#x27;</span>).Count() - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">string</span> folder <span class="keyword">in</span> System.IO.Directory.GetDirectories(path))</span><br><span class="line">    &#123;</span><br><span class="line">        CopyFiles(folder, dest);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我会根据特定的时间间隔在计时器中运行此程序，如果我使用线程，是否应该省略计时器？带领我，我很困惑。</p></blockquote><h1 id="最佳答案"><a href="#最佳答案" class="headerlink" title="最佳答案"></a>最佳答案</h1><p>由于您没有足够的线程信心，因此我强烈建议您阅读<a href="https://www.albahari.com/threading/">Joe Albahari’s Threading in C# Tutorial</a>。并行编程是指您以“并行”方式或同时进行多项操作(主要是将大量计算分散在多个CPU或GPU内核上)。在这种情况下，您希望线程在复制所有文件时使您的UI响应。从本质上讲，您将具有如下所示的内容:(在阅读了C#教程中的线程之后)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Thread copyFilesThread = <span class="keyword">new</span> Thread(() =&gt; </span><br><span class="line">&#123;</span><br><span class="line">    CopyFiles(path, dest);</span><br><span class="line">&#125;);</span><br><span class="line">copyFilesThread.Start();</span><br></pre></td></tr></table></figure><p>UI在其自己的线程上运行。放入您的应用程序中的所有代码都将在UI线程上运行(除非您显式使用线程)。由于您的CopyFiles方法需要很长时间，因此它将停止UI，直到复制作业完成。使用线程将在UI线程的单独线程上运行CopyFiles，因此使UI线程响应。</p><p>编辑:至于您的计时器，它多久运行一次？<br>关于c# - 用户界面在复制大量文件期间不响应，我们在Stack Overflow上找到一个类似的问题： <a href="https://stackoverflow.com/questions/14018567/">https://stackoverflow.com/questions/14018567/</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.coder.work/article/7527149">c# - 用户界面在复制大量文件期间不响应</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 文件管理 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 复制文件 </tag>
            
            <tag> UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 文件及文件夹复制并显示进度条</title>
      <link href="/posts/3190408972.html"/>
      <url>/posts/3190408972.html</url>
      
        <content type="html"><![CDATA[<h1 id="参考给出的方案"><a href="#参考给出的方案" class="headerlink" title="参考给出的方案"></a>参考给出的方案</h1><p><strong>先求出文件和目录的数目：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Count</span>(<span class="params">String src</span>)</span> &#123;</span><br><span class="line"><span class="built_in">int</span> count = <span class="number">1</span>;</span><br><span class="line">String[] sub = Directory.GetDirectories(src);</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; sub.Length; i++) &#123;</span><br><span class="line">count += Count(sub[i]);</span><br><span class="line">&#125;</span><br><span class="line">String[] files = Directory.GetFiles(src);</span><br><span class="line">count += files.Length;</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>设置ProgressBar属性Maximum为上面求出的数目，然后复制：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Copy</span>(<span class="params">String src, String dest</span>)</span> &#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Directory.CreateDirectory(dest);</span><br><span class="line">String[] sub = Directory.GetDirectories(src);</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; sub.Length; i++) &#123;</span><br><span class="line">String name = Path.GetFileName(sub[i]);</span><br><span class="line">Copy(sub[i], dest + <span class="string">&quot;\\&quot;</span> + name);</span><br><span class="line">&#125;</span><br><span class="line">String[] files = Directory.GetFiles(src);</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; files.Length; i++) &#123;</span><br><span class="line">String name = Path.GetFileName(files[i]);</span><br><span class="line">File.Copy(files[i], dest + <span class="string">&quot;\\&quot;</span> + name);</span><br><span class="line">&#125;</span><br><span class="line">progressBar1.Increment(files.Length + <span class="number">1</span>);<span class="comment">//progressBar1是进度条。</span></span><br><span class="line">&#125;catch(Exception e)&#123;</span><br><span class="line">Console.WriteLine(e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>拷贝文件夹：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CopyDirectory</span>(<span class="params"><span class="built_in">string</span> SourceDirectory, <span class="built_in">string</span> TargetDirectory</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DirectoryInfo source = <span class="keyword">new</span> DirectoryInfo(SourceDirectory);</span><br><span class="line">DirectoryInfo target = <span class="keyword">new</span> DirectoryInfo(TargetDirectory);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Check If we have valid source</span></span><br><span class="line"><span class="keyword">if</span>(!source.Exists)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!target.Exists)</span><br><span class="line">target.Create();</span><br><span class="line"></span><br><span class="line"><span class="comment">//Copy Files</span></span><br><span class="line">FileInfo[] sourceFiles = source.GetFiles();</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; sourceFiles.Length; ++i)</span><br><span class="line">File.Copy(sourceFiles[i].FullName, target.FullName + <span class="string">&quot;\\&quot;</span> + sourceFiles[i].Name,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Copy directories</span></span><br><span class="line">DirectoryInfo[] sourceDirectories = source.GetDirectories();</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; sourceDirectories.Length; ++j)</span><br><span class="line">CopyDirectory(sourceDirectories[j].FullName,target.FullName +<span class="string">&quot;\\&quot;</span> + sourceDirectories</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自己最后实现的进度条显示方法的部分代码"><a href="#自己最后实现的进度条显示方法的部分代码" class="headerlink" title="自己最后实现的进度条显示方法的部分代码"></a>自己最后实现的进度条显示方法的部分代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//先求出文件和目录的数目：</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">int</span> <span class="title">Count</span>(<span class="params">String src</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">int</span> count = <span class="number">1</span>;</span><br><span class="line">    String[] sub = Directory.GetDirectories(src);</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; sub.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        count += Count(sub[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    String[] files = Directory.GetFiles(src);</span><br><span class="line">    count += files.Length;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 复制文件及文件夹</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;srcPath&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;destPath&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">copyDir</span>(<span class="params"><span class="built_in">string</span> srcPath, <span class="built_in">string</span> destPath</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DirectoryInfo dir = <span class="keyword">new</span> DirectoryInfo(srcPath);</span><br><span class="line">    <span class="comment">//获取目录下的文件和子目录</span></span><br><span class="line">    FileSystemInfo[] fileinfo = dir.GetFileSystemInfos();</span><br><span class="line">    <span class="keyword">foreach</span> (FileSystemInfo i <span class="keyword">in</span> fileinfo)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i <span class="keyword">is</span> DirectoryInfo)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//判断是否文件夹</span></span><br><span class="line">            <span class="keyword">if</span> (!Directory.Exists(destPath + <span class="string">&quot;\\&quot;</span> + i.Name))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//目标目录下不存在此文件夹即创建子文件夹</span></span><br><span class="line">                Directory.CreateDirectory(destPath + <span class="string">&quot;\\&quot;</span> + i.Name);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//递归调用复制子文件夹</span></span><br><span class="line">            copyDir(i.FullName, destPath + <span class="string">&quot;\\&quot;</span> + i.Name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//不是文件夹即复制文件，true表示可以覆盖同名文件</span></span><br><span class="line">            <span class="comment">//File.Copy(i.FullName, destPath + &quot;\\&quot; + i.Name, true);</span></span><br><span class="line">            CopyFile_1(i.FullName, destPath + <span class="string">&quot;\\&quot;</span> + i.Name, <span class="number">1024</span>);<span class="comment">//复制文件</span></span><br><span class="line">        &#125;</span><br><span class="line">        FileCnt++;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Invoke(<span class="keyword">new</span> MethodInvoker(<span class="built_in">delegate</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//此处可用于更新UI控件内容</span></span><br><span class="line">                <span class="keyword">this</span>.progressBar2.Maximum = FileMax;</span><br><span class="line">                <span class="keyword">this</span>.progressBar2.Value = FileCnt;</span><br><span class="line">                <span class="comment">//this.progressBar2.Increment(FileCnt);//progressBar1是进度条。</span></span><br><span class="line">                <span class="keyword">this</span>.label2.Text = (FileCnt*<span class="number">100</span> / FileMax).ToString() + <span class="string">&quot;%&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">this</span>.richTextBox1.AppendText(FileCnt.ToString() + <span class="string">&quot;:&quot;</span> + destPath + <span class="string">&quot;\\&quot;</span> + i.Name + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">this</span>.richTextBox1.SelectionStart = <span class="keyword">this</span>.richTextBox1.Text.Length; <span class="comment">// 光标 移动到 最后一行</span></span><br><span class="line">                <span class="keyword">this</span>.richTextBox1.ScrollToCaret();</span><br><span class="line">                </span><br><span class="line"></span><br><span class="line">                <span class="comment">//this.richTextBox1.AppendText(destPath + &quot;\\&quot; + i.Name+&quot;\n&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">            ));</span><br><span class="line">        &#125;<span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 文件的复制</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param FormerFile=&quot;string&quot;&gt;</span>源文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param toFile=&quot;string&quot;&gt;</span>目的文件路径<span class="doctag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param SectSize=&quot;int&quot;&gt;</span>传输大小<span class="doctag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param progressBar=&quot;ProgressBar&quot;&gt;</span>ProgressBar控件<span class="doctag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">CopyFile_1</span>(<span class="params"><span class="built_in">string</span> FormerFile, <span class="built_in">string</span> toFile, <span class="built_in">int</span> SectSize</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//progressBar1.Value = 0;//设置进度栏的当前位置为0</span></span><br><span class="line">    <span class="comment">//progressBar1.Minimum = 0;//设置进度栏的最小值为0</span></span><br><span class="line">    </span><br><span class="line">    FileStream fileToCreate = <span class="keyword">new</span> FileStream(toFile, FileMode.Create);<span class="comment">//创建目的文件，如果已存在将被覆盖</span></span><br><span class="line">    fileToCreate.Close();<span class="comment">//关闭所有资源</span></span><br><span class="line">    fileToCreate.Dispose();<span class="comment">//释放所有资源</span></span><br><span class="line">    FormerOpen = <span class="keyword">new</span> FileStream(FormerFile, FileMode.Open, FileAccess.Read);<span class="comment">//以只读方式打开源文件</span></span><br><span class="line">    ToFileOpen = <span class="keyword">new</span> FileStream(toFile, FileMode.Append, FileAccess.Write);<span class="comment">//以写方式打开目的文件</span></span><br><span class="line">    <span class="built_in">int</span> max = Convert.ToInt32(Math.Ceiling((<span class="built_in">double</span>)FormerOpen.Length / (<span class="built_in">double</span>)SectSize));<span class="comment">//根据一次传输的大小，计算传输的个数</span></span><br><span class="line">    <span class="comment">//progressBar1.Maximum = max;//设置进度栏的最大值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.InvokeRequired)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Invoke(<span class="keyword">new</span> MethodInvoker(<span class="built_in">delegate</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//此处可用于更新UI控件内容</span></span><br><span class="line">            <span class="keyword">this</span>.progressBar1.Value = <span class="number">0</span>;<span class="comment">//增加进度栏的进度块</span></span><br><span class="line">            <span class="keyword">this</span>.progressBar1.Minimum = <span class="number">0</span>;<span class="comment">//设置进度栏的最小值为0</span></span><br><span class="line">            <span class="keyword">this</span>.progressBar1.Maximum = max;<span class="comment">//设置进度栏的最大值</span></span><br><span class="line">        &#125;</span><br><span class="line">        ));</span><br><span class="line">    &#125;<span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> FileSize;<span class="comment">//要拷贝的文件的大小</span></span><br><span class="line">    <span class="keyword">if</span> (SectSize &lt; FormerOpen.Length)<span class="comment">//如果分段拷贝，即每次拷贝内容小于文件总长度</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[SectSize];<span class="comment">//根据传输的大小，定义一个字节数组</span></span><br><span class="line">        <span class="built_in">int</span> copied = <span class="number">0</span>;<span class="comment">//记录传输的大小</span></span><br><span class="line">        <span class="built_in">int</span> tem_n = <span class="number">1</span>;<span class="comment">//设置进度栏中进度块的增加个数</span></span><br><span class="line">        <span class="keyword">while</span> (copied &lt;= ((<span class="built_in">int</span>)FormerOpen.Length - SectSize))<span class="comment">//拷贝主体部分</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileSize = FormerOpen.Read(buffer, <span class="number">0</span>, SectSize);<span class="comment">//从0开始读，每次最大读SectSize</span></span><br><span class="line">            FormerOpen.Flush();<span class="comment">//清空缓存</span></span><br><span class="line">            ToFileOpen.Write(buffer, <span class="number">0</span>, SectSize);<span class="comment">//向目的文件写入字节</span></span><br><span class="line">            ToFileOpen.Flush();<span class="comment">//清空缓存</span></span><br><span class="line">            ToFileOpen.Position = FormerOpen.Position;<span class="comment">//使源文件和目的文件流的位置相同</span></span><br><span class="line">            copied += FileSize;<span class="comment">//记录已拷贝的大小</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//progressBar1.Value = progressBar1.Value + tem_n;//增加进度栏的进度块</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.InvokeRequired)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.Invoke(<span class="keyword">new</span> MethodInvoker(<span class="built_in">delegate</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//此处可用于更新UI控件内容</span></span><br><span class="line">                    <span class="keyword">this</span>.progressBar1.Value = <span class="keyword">this</span>.progressBar1.Value + tem_n;<span class="comment">//增加进度栏的进度块</span></span><br><span class="line">                    <span class="comment">//label1.Text = this.progressBar1.Value.ToString();</span></span><br><span class="line">                    <span class="comment">//label2.Text = FormerOpen.Length.ToString();</span></span><br><span class="line">                    <span class="comment">//label1.Text = ((this.progressBar1.Value / max) * 100).ToString() + &quot;%&quot;;</span></span><br><span class="line">                    <span class="comment">//label2.Text = ((1-(FormerOpen.Length / FileMax)) * 100).ToString() + &quot;%&quot;;</span></span><br><span class="line">                    <span class="comment">//label1.Text = (copied).ToString();  //当前复制大小</span></span><br><span class="line">                    <span class="comment">//label2.Text = (FormerOpen.Length).ToString();   //文件大小</span></span><br><span class="line"></span><br><span class="line">                    label1.Text = (copied / (FormerOpen.Length / <span class="number">100</span>)).ToString() + <span class="string">&quot;%&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                ));</span><br><span class="line">            &#125;<span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">int</span> left = (<span class="built_in">int</span>)FormerOpen.Length - copied;<span class="comment">//获取剩余大小</span></span><br><span class="line">        FileSize = FormerOpen.Read(buffer, <span class="number">0</span>, left);<span class="comment">//读取剩余的字节</span></span><br><span class="line">        FormerOpen.Flush();<span class="comment">//清空缓存</span></span><br><span class="line">        ToFileOpen.Write(buffer, <span class="number">0</span>, left);<span class="comment">//写入剩余的部分</span></span><br><span class="line">        ToFileOpen.Flush();<span class="comment">//清空缓存</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//如果整体拷贝，即每次拷贝内容大于文件总长度</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[FormerOpen.Length];<span class="comment">//获取文件的大小</span></span><br><span class="line">        FormerOpen.Read(buffer, <span class="number">0</span>, (<span class="built_in">int</span>)FormerOpen.Length);<span class="comment">//读取源文件的字节</span></span><br><span class="line">        FormerOpen.Flush();<span class="comment">//清空缓存</span></span><br><span class="line">        ToFileOpen.Write(buffer, <span class="number">0</span>, (<span class="built_in">int</span>)FormerOpen.Length);<span class="comment">//写放字节</span></span><br><span class="line">        ToFileOpen.Flush();<span class="comment">//清空缓存</span></span><br><span class="line">    &#125;</span><br><span class="line">    FormerOpen.Close();<span class="comment">//释放所有资源</span></span><br><span class="line">    ToFileOpen.Close();<span class="comment">//释放所有资源</span></span><br><span class="line">    <span class="comment">//if (MessageBox.Show(&quot;复制完成&quot;) == DialogResult.OK)//显示&quot;复制完成&quot;提示对话框</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    progressBar1.Value = 0;//设置进度栏的当有位置为0</span></span><br><span class="line">    <span class="comment">//    textBox1.Clear();//清空文本</span></span><br><span class="line">    <span class="comment">//    textBox2.Clear();</span></span><br><span class="line">    <span class="comment">//    str = &quot;&quot;;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//单文件拷贝j结束</span></span><br><span class="line">    <span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.InvokeRequired)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.Invoke(<span class="keyword">new</span> MethodInvoker(<span class="built_in">delegate</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//此处可用于更新UI控件内容</span></span><br><span class="line">            <span class="keyword">this</span>.progressBar1.Value = max;<span class="comment">//增加进度栏的进度块</span></span><br><span class="line">            label1.Text = <span class="string">&quot;100%&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ));</span><br><span class="line">    &#125;<span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button5_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//Console.WriteLine(&quot;文件数：&quot; + Count(textBox1.Text));</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">string</span> path = textBox1.Text;</span><br><span class="line">    <span class="built_in">string</span> dest = textBox2.Text;</span><br><span class="line"></span><br><span class="line">    timer1.Start(); <span class="comment">//开始记录复制时间</span></span><br><span class="line">    <span class="comment">//dt1</span></span><br><span class="line">    dt1 = DateTime.Parse(<span class="string">&quot;00:00:00&quot;</span>);</span><br><span class="line">    Lab_Time.Text = <span class="string">&quot;0:00:00&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//progressBar2.Maximum = Count(path);//设置进度栏的最大值</span></span><br><span class="line">    <span class="comment">//创建线程</span></span><br><span class="line">    Thread copyFilesThread = <span class="keyword">new</span> Thread(() =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//sw.Start();</span></span><br><span class="line">        <span class="comment">//CopyFiles(path, dest);</span></span><br><span class="line">        FileCnt = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//FileMax = Count(path);</span></span><br><span class="line">        <span class="comment">//copyDir(path, dest);</span></span><br><span class="line">        <span class="comment">//Console.WriteLine(&quot;FileCnt:&quot; + FileCnt);</span></span><br><span class="line">        <span class="comment">//Console.WriteLine(&quot;FileMax:&quot; + FileMax);</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//判断选择的路径是文件还是文件夹</span></span><br><span class="line">        <span class="keyword">if</span> (File.Exists(path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> name = System.IO.Path.GetFileName(path);<span class="comment">//名称</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;是文件&#123;0&#125;&quot;</span>, path);</span><br><span class="line">            CopyFile_1(path, dest+<span class="string">&quot;\\&quot;</span>+ name, <span class="number">1024</span>);</span><br><span class="line">            <span class="comment">//timer1.Stop(); //开始记录复制时间</span></span><br><span class="line">            <span class="comment">//Copy(path, dest);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Directory.Exists(path))</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;是文件夹&quot;</span>);</span><br><span class="line">            FileMax = Count(path);</span><br><span class="line">            copyDir(path, dest);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;都不是&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        timer1.Stop(); <span class="comment">//开始记录复制时间</span></span><br><span class="line">        MessageBox.Show(<span class="string">&quot;复制完成！&quot;</span>);</span><br><span class="line">        <span class="comment">//Console.WriteLine(&quot;复制时间为:&quot; + sw.Elapsed);</span></span><br><span class="line">        <span class="comment">//sw.Stop();</span></span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">    copyFilesThread.Start();    <span class="comment">//启动线程</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://bbs.csdn.net/topics/40147989">如何用C#实现文件及文件夹复制,且显示复制的进度条</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 文件管理 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 复制文件 </tag>
            
            <tag> UI </tag>
            
            <tag> 进度条 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 线程之一（理解Thread.Sleep()方法）</title>
      <link href="/posts/4167242940.html"/>
      <url>/posts/4167242940.html</url>
      
        <content type="html"><![CDATA[<h1 id="疑问？"><a href="#疑问？" class="headerlink" title="疑问？"></a>疑问？</h1><p>我们可能经常会用到 Thread.Sleep 函数来使线程挂起一段时间。那么你有没有正确的理解这个函数的用法呢？<br><strong>思考下面这两个问题：</strong></p><ol><li>假设现在是 2008-4-7 12:00:00.000，如果我调用一下 Thread.Sleep(1000) ，在 2008-4-7 12:00:01.000 的时候，这个线程会不会被唤醒？</li><li>某人的代码中用了一句看似莫明其妙的话：Thread.Sleep(0) 。既然是 Sleep 0 毫秒，那么他跟去掉这句代码相比，有啥区别么？</li></ol><blockquote><p><strong>个人补充：</strong>在B站学习C#线程时听过 Thread.Sleep(0) 说明，那是回收CPU的线程时间片！</p></blockquote><h1 id="我们先回顾一下操作系统原理"><a href="#我们先回顾一下操作系统原理" class="headerlink" title="我们先回顾一下操作系统原理"></a>我们先回顾一下操作系统原理</h1><p>操作系统中，CPU竞争有很多种策略。Unix系统使用的是时间片算法，而Windows则属于抢占式的。</p><h2 id="时间片算法"><a href="#时间片算法" class="headerlink" title="时间片算法"></a>时间片算法</h2><p>在时间片算法中，所有的进程排成一个队列。操作系统按照他们的顺序，给每个进程分配一段时间，即该进程允许运行的时间。如果在 时间片结束时进程还在运行，则CPU将被剥夺并分配给另一个进程。如果进程在时间片结束前阻塞或结束，则CPU当即进行切换。调度程 序所要做的就是维护一张就绪进程列表，，当进程用完它的时间片后，它被移到队列的末尾。</p><h2 id="抢占式操作系统"><a href="#抢占式操作系统" class="headerlink" title="抢占式操作系统"></a>抢占式操作系统</h2><p>所谓抢占式操作系统，就是说如果一个进程得到了 CPU 时间，除非它自己放弃使用 CPU ，否则将完全霸占 CPU 。因此可以看出，在抢占式操作系统中，操作系统假设所有的进程都是“人品很好”的，会主动退出 CPU 。在抢占式操作系统中，假设有若干进程，操作系统会根据他们的优先级、饥饿时间（已经多长时间没有使用过 CPU 了），给他们算出一 个总的优先级来。操作系统就会把 CPU 交给总优先级最高的这个进程。当进程执行完毕或者自己主动挂起后，操作系统就会重新计算一次所有进程的总优先级，然后再挑一个优先级最高的把 CPU 控制权交给他。</p><h2 id="两种算法举例"><a href="#两种算法举例" class="headerlink" title="两种算法举例"></a>两种算法举例</h2><p>我们用分蛋糕的场景来描述这两种算法。假设有源源不断的蛋糕（源源不断的时间），一副刀叉（一个CPU），10个等待吃蛋糕的人（10 个进程）。<br><strong>Unix 分蛋糕方式：</strong><br>如果是 Unix 操作系统来负责分蛋糕，那么他会这样定规矩：每个人上来吃 1 分钟，时间到了换下一个。最后一个人吃完了就再从头开始。于是，不管这10个人是不是优先级不同、饥饿程度不同、饭量不同，每个人上来的时候都可以吃 1 分钟。当然，如果有人本来不太饿，或者饭量小，吃了30秒钟之后就吃饱了，那么他可以跟操作系统说：我已经吃饱了（挂起）。于是操作系统就会让下一个人接着来。</p><p><strong>Windows 分蛋糕方式：</strong><br>如果是 Windows 操作系统来负责分蛋糕的，那么场面就很有意思了。他会这样定规矩：我会根据你们的优先级、饥饿程度去给你们每个人计算一个优先级。优先级最高的那个人，可以上来吃蛋糕——吃到你不想吃为止。等这个人吃完了，我再重新根据优先级、饥饿程度来计算每个人的优先级，然后再分给优先级最高的那个人。<br>这样看来，这个场面就有意思了——可能有些人是PPMM，因此具有高优先级，于是她就可以经常来吃蛋糕。可能另外一个人是个丑男，而且很ws，所以优先级特别低，于是好半天了才轮到他一次（因为随着时间的推移，他会越来越饥饿，因此算出来的总优先级就会越来越高，因此总有一天会轮到他的）。而且，如果一不小心让一个大胖子得到了刀叉，因为他饭量大，可能他会霸占着蛋糕连续吃很久很久，导致旁边的人在那里咽口水。。。<br>而且，还可能会有这种情况出现：操作系统现在计算出来的结果，5号PPMM总优先级最高，而且高出别人一大截。因此就叫5号来吃蛋糕。5号吃了一小会儿，觉得没那么饿了，于是说“我不吃了”（挂起）。因此操作系统就会重新计算所有人的优先级。因为5号刚刚吃过，因此她的饥饿程度变小了，于是总优先级变小了；而其他人因为多等了一会儿，饥饿程度都变大了，所以总优先级也变大了。不过这时候仍然有可能5号的优先级比别的都高，只不过现在只比其他的高一点点——但她仍然是总优先级最高的啊。因此操作系统就会说：5号mm上来吃蛋糕……（5号mm心里郁闷，这不刚吃过嘛……人家要减肥……谁叫你长那么漂亮，获得了那么高的优先级）。</p><p><strong>Thread.Sleep 函数意义：</strong><br>那么，Thread.Sleep 函数是干吗的呢？还用刚才的分蛋糕的场景来描述。上面的场景里面，5号MM在吃了一次蛋糕之后，觉得已经有8分饱了，她觉得在未来的半个小时之内都不想再来吃蛋糕了，那么她就会跟操作系统说：在未来的半个小时之内不要再叫我上来吃蛋糕了。这样，操作系统在随后的半个小时里面重新计算所有人总优先级的时候，就会忽略5号mm。Sleep函数就是干这事的，他告诉操作系统“在未来的多少毫秒内我不参与CPU竞争”。</p><h1 id="解答开头的问题"><a href="#解答开头的问题" class="headerlink" title="解答开头的问题"></a>解答开头的问题</h1><p>看完了 Thread.Sleep 的作用，我们再来想想文章开头的两个问题。</p><h2 id="对于第一个问题，答案是："><a href="#对于第一个问题，答案是：" class="headerlink" title="对于第一个问题，答案是："></a>对于第一个问题，答案是：</h2><p>不一定。因为你只是告诉操作系统：在未来的1000毫秒内我不想再参与到CPU竞争。那么1000毫秒过去之后，这时候也许另外一个线程正在使用CPU，那么这时候操作系统是不会重新分配CPU的，直到那个线程挂起或结束；况且，即使这个时候恰巧轮到操作系统进行CPU 分配，那么当前线程也不一定就是总优先级最高的那个，CPU还是可能被其他线程抢占去。</p><p>与此相似的，Thread有个Resume函数，是用来唤醒挂起的线程的。好像上面所说的一样，这个函数只是“告诉操作系统我从现在起开始参与CPU竞争了”，这个函数的调用并不能马上使得这个线程获得CPU控制权。（注意这个函数在net2.0以后标注为“过时”并在后续版本不提供支持了）</p><h2 id="对于第二个问题，答案是："><a href="#对于第二个问题，答案是：" class="headerlink" title="对于第二个问题，答案是："></a>对于第二个问题，答案是：</h2><p>有，而且区别很明显。假设我们刚才的分蛋糕场景里面，有另外一个PPMM 7号，她的优先级也非常非常高（因为非常非常漂亮），所以操作系统总是会叫道她来吃蛋糕。而且，7号也非常喜欢吃蛋糕，而且饭量也很大。不过，7号人品很好，她很善良，她没吃几口就会想：如果现在有别人比我更需要吃蛋糕，那么我就让给他。因此，她可以每吃几口就跟操作系统说：我们来重新计算一下所有人的总优先级吧。不过，操作系统不接受这个建议——因为操作系统不提供这个接口。于是7号mm就换了个说法：“在未来的0毫秒之内不要再叫我上来吃蛋糕了”。这个指令操作系统是接受的，于是此时操作系统就会重新计算大家的总优先级——注意这个时候是连7号一起计算的，因为“0毫秒已经过去了”嘛。因此如果没有比7号更需要吃蛋糕的人出现，那么下一次7号还是会被叫上来吃蛋糕。</p><p>因此，Thread.Sleep(0)的作用，就是“触发操作系统立刻重新进行一次CPU竞争”。竞争的结果也许是当前线程仍然获得CPU控制权，也许会换成别的线程获得CPU控制权。这也是我们在大循环里面经常会写一句Thread.Sleep(0) ，因为这样就给了其他线程比如Paint线程获得CPU控制权的权力，这样界面就不会假死在那里。</p><h1 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h1><p> 末了说明一下，虽然上面提到说“除非它自己放弃使用 CPU ，否则将完全霸占 CPU”，但这个行为仍然是受到制约的——操作系统会监控你霸占CPU的情况，如果发现某个线程长时间霸占CPU，会强制使这个线程挂起，因此在实际上不会出现“一个线程一直霸占着 CPU 不放”的情况。至于我们的大循环造成程序假死，并不是因为这个线程一直在霸占着CPU。实际上在这段时间操作系统已经进行过多次CPU竞争了，只不过其他线程在获得CPU控制权之后很短时间内马上就退出了，于是就又轮到了这个线程继续执行循环，于是就又用了很久才被操作系统强制挂起。。。因此反应到界面上，看起来就好像这个线程一直在霸占着CPU一样。</p><p>末了再说明一下，文中线程、进程有点混乱，其实在Windows原理层面，CPU竞争都是线程级的，本文中把这里的进程、线程看成同一个东西就好了。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="http://www.dui580.com/Html/?901.html">C# 理解Thread.Sleep()方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 线程管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 线程管理 </tag>
            
            <tag> Thread </tag>
            
            <tag> Sleep </tag>
            
            <tag> 方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 跨线程访问UI控件</title>
      <link href="/posts/2710851357.html"/>
      <url>/posts/2710851357.html</url>
      
        <content type="html"><![CDATA[<h1 id="跨线程访问UI控件的方法（实验使用的就是这个）"><a href="#跨线程访问UI控件的方法（实验使用的就是这个）" class="headerlink" title="跨线程访问UI控件的方法（实验使用的就是这个）"></a>跨线程访问UI控件的方法（实验使用的就是这个）</h1><blockquote><p>其实往后收集的方法都大同小异</p></blockquote><h2 id="禁止对跨线程访问做检查（不使用）"><a href="#禁止对跨线程访问做检查（不使用）" class="headerlink" title="禁止对跨线程访问做检查（不使用）"></a>禁止对跨线程访问做检查（不使用）</h2><p>&#x2F;&#x2F;在Form1_Load中插入<br> &#x2F;&#x2F;允许操作其它线程创建的控件<br> Control.CheckForIllegalCrossThreadCalls &#x3D; false;</p><h2 id="使用委托方法（验证这个方法可行-UI也不卡）"><a href="#使用委托方法（验证这个方法可行-UI也不卡）" class="headerlink" title="使用委托方法（验证这个方法可行-UI也不卡）"></a>使用委托方法（验证这个方法可行-UI也不卡）</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.InvokeRequired)</span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">this</span>.Invoke(<span class="keyword">new</span> MethodInvoker(<span class="built_in">delegate</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="comment">//此处可用于更新UI控件内容</span></span><br><span class="line">     &#125;</span><br><span class="line">     ));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   &#125;<span class="comment">//跨线程访问UI控件，更新主线程中dataGridView表格内容</span></span><br></pre></td></tr></table></figure><h1 id="C-优雅的解决-多线程中访问-UI-的问题"><a href="#C-优雅的解决-多线程中访问-UI-的问题" class="headerlink" title="C# 优雅的解决 多线程中访问 UI 的问题"></a>C# 优雅的解决 多线程中访问 UI 的问题</h1><p>优雅的解决 多线程中访问 UI 的问题</p><ol><li>在WinForm 程序中可以在Form的构造函数中. 将 “是否检察跨线程的控件访问” 设为 False. 就解决了. 就可以正常的使用控件了.<br>　　Control.CheckForIllegalCrossThreadCalls &#x3D; false;</li><li>就是使用控件的Invoke 方法<br>比如:<br>　　label1.Invoke(new MethodInvoker(delegate () {this.label1.text &#x3D; “靠…!”;}));<br>使用Lambda 表达示会更优雅一点:<br>　　label1.Inovke(new MethodInvoker( () &#x3D;&gt; this.lable1.text &#x3D; “哈哈..”));<br>这是我常用的. 觉得算得上优雅的方法. 如果还有朋友知道列优雅的方法,请留言告知~~!</li></ol><h2 id="2012-11-17-日补充"><a href="#2012-11-17-日补充" class="headerlink" title="2012.11.17 日补充"></a>2012.11.17 日补充</h2><p>在使用 线程或是使用异步的方法去改变 DataGridView 控件时.. 如果直接使用第一种方法.直接允许控制跨线程访问的话.  会有这样的问题(很是恼人) :</p><p><strong>用delegate的BeginInvoke去更新DataGridView时,当异步调用完成后有这样现象:</strong></p><ol><li>如果更新后DataGridView没有出现滚动条,程序会正常运行</li><li>如果更新后DataVridView出现了滚动条,程序会卡死</li></ol><p><strong>解决的方法是 不要使用 第一种方法: 这种方法 虽然方便.. 但会带来一些意料不到的问题. 还是这样来更新控件:</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">label1.Inovke(<span class="keyword">new</span> MethodInvoker( () =&gt; <span class="keyword">this</span>.lable1.text = <span class="string">&quot;哈哈..&quot;</span>));</span><br></pre></td></tr></table></figure><p>这个MethodInvoker只是一个 返回值,无参数的代理而已. 所以你也可能 自己定义一个 比如: public delegate void MyInvoker(); 然后使用</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">label1.Inovke(<span class="keyword">new</span> MyInvoker( () =&gt; <span class="keyword">this</span>.lable1.text = <span class="string">&quot;哈哈..&quot;</span>));  是一样的.</span><br></pre></td></tr></table></figure><p><strong>同样你也可以 使用 Action</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">label1.Inovke(<span class="keyword">new</span> Action( () =&gt; <span class="keyword">this</span>.lable1.text = <span class="string">&quot;哈哈..&quot;</span>));</span><br></pre></td></tr></table></figure><p><strong>而且. 可以通过  Control.InvokeRequired 方法 ,来判断,当前访问这个控件的线程 是否是UI线程.是否需要使用 Invoke方法.</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.dgv.InvokeRequired) &#123;</span><br><span class="line">　　<span class="keyword">this</span>.dgv.Invoke(<span class="keyword">new</span> MethodInvoker(()=&gt;dgv.DataSource = ds.Tables[<span class="number">0</span>]));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 如果是 UI 主线程更新的话</span></span><br><span class="line">　　<span class="keyword">this</span>.dgv.DataSource = ds.Tables[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>关于Invoke的拥有者：Control</strong></p><blockquote><p>因为Control.Invoke含义是将方法委托给 <em>拥有该Control</em> 的线程去执行。因些.我们不需要使用 this.label1.Invoke 或是 this.DataGridView,Invoke 可以直接使用 : this.Invoke.  this 指针也就是当前的 UI 主线程.</p></blockquote><p>就好似 A 跟 B 说, 我不方便去你家, 你帮我用你家的电脑下点电影什么的. A 不允许直接使用 B的电脑. 但他可以让B帮他完成一些事情. B得到了 A的一些求助. 自己去使用属于自己的电脑.   这个比喻就充分的表达了.. 两个线程间的交流. </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method_A_Thread</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">　　<span class="comment">// Do something</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">// 让UI线程帮忙完成些 ,属于 UI线程里的内容</span></span><br><span class="line">    </span><br><span class="line">     <span class="comment">// this.Invoke(new Action(() =&gt; this.label.Text = &quot;xxx&quot;));</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Winform中如何跨线程访问UI元素"><a href="#Winform中如何跨线程访问UI元素" class="headerlink" title="Winform中如何跨线程访问UI元素"></a>Winform中如何跨线程访问UI元素</h1><blockquote><p>在C# 的应用程序开发中， 我们经常要把UI线程和工作线程分开，防止界面停止响应， 同时我们又需要在工作线程中更新UI界面上的控件。但直接访问会出现“线程间操作无效”的情况，因为.NET禁止了跨线程调用控件， 否则谁都可以操作控件，最后可能造成错误。 下面介绍几种跨线程访问的方法：</p></blockquote><h2 id="1、禁止对跨线程访问做检查-不推荐使用这种方法"><a href="#1、禁止对跨线程访问做检查-不推荐使用这种方法" class="headerlink" title="1、禁止对跨线程访问做检查 (不推荐使用这种方法)"></a>1、禁止对跨线程访问做检查 (不推荐使用这种方法)</h2><p><strong>这种方法不检查跨线程访问，允许各个线程操作UI元素，容易出现错误。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Form2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  InitializeComponent();</span><br><span class="line">  <span class="comment">//禁止对跨线程访问做检查 (不推荐使用这种方法)</span></span><br><span class="line">  Control.CheckForIllegalCrossThreadCalls = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、使用委托方法-将其委托给UI控件更新"><a href="#2、使用委托方法-将其委托给UI控件更新" class="headerlink" title="2、使用委托方法  将其委托给UI控件更新"></a>2、使用委托方法  将其委托给UI控件更新</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用委托方法 将其委托给UI控件更新</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  Thread thread1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> ParameterizedThreadStart(UpdateLabel2));</span><br><span class="line">  thread1.Start(<span class="string">&quot;更新Label&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateLabel2</span>(<span class="params"><span class="built_in">object</span> str</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (label2.InvokeRequired)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// 当一个控件的InvokeRequired属性值为真时，说明有一个创建它以外的线程想访问它</span></span><br><span class="line">    Action&lt;<span class="built_in">string</span>&gt; actionDelegate = (x) =&gt; &#123; <span class="keyword">this</span>.label2.Text = x.ToString(); &#125;;</span><br><span class="line">    <span class="comment">// 或者</span></span><br><span class="line">    <span class="comment">// Action&lt;string&gt; actionDelegate = delegate(string txt) &#123; this.label2.Text = txt; &#125;;</span></span><br><span class="line">    <span class="keyword">this</span>.label2.Invoke(actionDelegate, str);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">this</span>.label2.Text = str.ToString();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、使用delegate和BeginInvoke来从其他线程中控制控件"><a href="#3、使用delegate和BeginInvoke来从其他线程中控制控件" class="headerlink" title="3、使用delegate和BeginInvoke来从其他线程中控制控件"></a>3、使用delegate和BeginInvoke来从其他线程中控制控件</h2><p>只要把上面的 this.label2.Invoke(actionDelegate, str); 中的 Invoke 改为BeginInvoke方法就可以了。</p><p><strong>Invoke方法和BeginInvoke方法的区别是：</strong><br>Invoke方法是同步的， 它会等待工作线程完成，BeginInvoke方法是异步的， 它会另起一个线程去完成工作线。</p><h2 id="4、使用同步上下文：SynchronizationContext方法"><a href="#4、使用同步上下文：SynchronizationContext方法" class="headerlink" title="4、使用同步上下文：SynchronizationContext方法"></a>4、使用同步上下文：SynchronizationContext方法</h2><blockquote><p>该方法是取得主线程的上下文信息，然后在子线程将访问UI控件方法推送到UI上下文的消息队列里，使用POST或者Send；</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SynchronizationContext synchronizationContext;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  synchronizationContext = SynchronizationContext.Current;</span><br><span class="line">  <span class="keyword">new</span> Thread(() =&gt; &#123; UpdateText(<span class="string">&quot;跨线程访问&quot;</span>); &#125;).Start();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">UpdateText</span>(<span class="params"><span class="built_in">string</span> msg</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  synchronizationContext.Post(_ =&gt; <span class="keyword">this</span>.label2.Text = msg, <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、使用BackgroundWorker组件-推荐使用这个方法"><a href="#5、使用BackgroundWorker组件-推荐使用这个方法" class="headerlink" title="5、使用BackgroundWorker组件(推荐使用这个方法)"></a>5、使用BackgroundWorker组件(推荐使用这个方法)</h2><p><strong>个人感觉没有自己开线程方便，因为还得在窗体上拉控件</strong></p><blockquote><p>BackgroundWorker是.NET里面用来执行多线程任务的控件，它允许编程者在一个单独的线程上执行一些操作。耗时的操作（如下载和数据库事务）。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">FileManagerForm</span> : <span class="title">Form</span></span><br><span class="line">&#123;</span><br><span class="line">  FileInfo file ;</span><br><span class="line">  BackgroundWorker bw;</span><br><span class="line">  ServerFile server;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">FileManagerForm</span>(<span class="params"><span class="built_in">string</span> filePath</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line"></span><br><span class="line">    file = <span class="keyword">new</span> FileInfo(filePath);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">long</span> size = file.Length / <span class="number">1024</span> / <span class="number">1024</span>;</span><br><span class="line">    lblOrgSize.Text = (<span class="built_in">int</span>)size+ <span class="string">&quot;MB&quot;</span>;</span><br><span class="line">    bw = <span class="keyword">new</span> BackgroundWorker();</span><br><span class="line">    server = <span class="keyword">new</span> ServerFile(file.Name);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FileManagerForm_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    proUpFile.Minimum = <span class="number">0</span>;</span><br><span class="line">    proUpFile.Maximum = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">    bw.WorkerReportsProgress = <span class="literal">true</span>;</span><br><span class="line">    bw.WorkerSupportsCancellation = <span class="literal">true</span>;</span><br><span class="line">    bw.DoWork += Bw_DoWork;</span><br><span class="line">    bw.ProgressChanged += Bw_ProgressChanged;</span><br><span class="line">    bw.RunWorkerCompleted += Bw_RunWorkerCompleted;</span><br><span class="line">    bw.RunWorkerAsync();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Bw_DoWork</span>(<span class="params"><span class="built_in">object</span> sender, DoWorkEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">using</span>(FileStream fileRead= file.OpenRead())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">long</span> setp = file.Length / <span class="number">100</span>;</span><br><span class="line">      <span class="keyword">while</span> (file.Length &gt; fileRead.Position)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (bw.CancellationPending)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">byte</span>[] bytes = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="built_in">int</span> count = fileRead.Read(bytes, <span class="number">0</span>, bytes.Length);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">long</span> writeLength= server.UpFile(bytes, count);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(writeLength &gt;proUpFile.Value* setp)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">int</span> size = (<span class="built_in">int</span>)(writeLength / <span class="number">1024</span> / <span class="number">1024</span>);</span><br><span class="line">          bw.ReportProgress(proUpFile.Value + <span class="number">1</span>, size);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      server.Close();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Bw_ProgressChanged</span>(<span class="params"><span class="built_in">object</span> sender, ProgressChangedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    proUpFile.Value= e.ProgressPercentage&gt; proUpFile.Maximum?proUpFile.Maximum:e.ProgressPercentage;</span><br><span class="line">    lblUpLoadSize.Text = e.UserState.ToString() + <span class="string">&quot;MB&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Bw_RunWorkerCompleted</span>(<span class="params"><span class="built_in">object</span> sender, RunWorkerCompletedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.proUpFile.Value == <span class="keyword">this</span>.proUpFile.Maximum)</span><br><span class="line">    &#123;</span><br><span class="line">      MessageBox.Show(<span class="string">&quot;文件发送成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      MessageBox.Show(<span class="string">&quot;文件发送失败！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.Close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnCancel_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">     bw.CancelAsync();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="http://www.dui580.com/Html/?955.html">C#跨线程访问UI控件的方法</a></li><li><a href="http://t.zoukankan.com/easyfrog-p-2343075.html">C# 优雅的解决 多线程中访问 UI 的问题</a></li><li><a href="https://www.jb51.net/article/198476.htm">Winform中如何跨线程访问UI元素</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 线程管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 线程管理 </tag>
            
            <tag> UI访问 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 创建记录工作时间</title>
      <link href="/posts/3492309518.html"/>
      <url>/posts/3492309518.html</url>
      
        <content type="html"><![CDATA[<h1 id="创建计时器，用来记录程序运行时间"><a href="#创建计时器，用来记录程序运行时间" class="headerlink" title="创建计时器，用来记录程序运行时间"></a>创建计时器，用来记录程序运行时间</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建计时器，用来记录程序运行时间</span></span><br><span class="line">Stopwatch sw=<span class="keyword">new</span> stopwatch（）；</span><br><span class="line">sw.start();</span><br><span class="line">想计时的程序段</span><br><span class="line">sw.stop();</span><br><span class="line"><span class="comment">//显示计时器时间. Elapsed：消逝</span></span><br><span class="line">Console.writeline(sw.elapsed);</span><br></pre></td></tr></table></figure><h1 id="自定义时间按秒增加"><a href="#自定义时间按秒增加" class="headerlink" title="自定义时间按秒增加"></a>自定义时间按秒增加</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>我自定义了一个时间2013-05-11 19:40:11，我想在这个时间上按每秒增加，就像时钟一样。怎么做？<br>应该是dt1没有返回覆盖掉原始值，求解决办法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> DateTime dt1=DateTime.Parse(<span class="string">&quot;2013-05-11 19:40:11&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dt1.AddSeconds(<span class="number">1</span>);<span class="comment">//自增1s</span></span><br><span class="line">label1.Text = dt1.ToString();</span><br><span class="line">label2.Text = dt1.AddSeconds(<span class="number">10</span>).ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>timer控件也开了,设置刷新100ms<br>label1显示的还是原时间<br>label2显示的是加了10s时间，如何才能像时钟一样</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p><strong>同学，dt1 &#x3D; dt1.AddSeconds(1);&#x2F;&#x2F;这才是自增1s</strong><br>AddSeconds(1)是有返回值的，不会改变dt1本身，这也是为什么label2起作用的原因<br>追问<br>如何能够像时钟一样呢？能够自己增加<br>追答<br>你不是有一个timer吗，把timer的时间间隔设成1S<br>在timer的事件里写<br><strong>label1.text &#x3D; （dt1 &#x3D; dt1.AddSeconds(1)).ToString();</strong><br>就可以了</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/mlxg99999/article/details/122221315">c#创建计时器，用来记录程序运行时间</a></li><li><a href="https://zhidao.baidu.com/question/303302704057473364.html">c# 自定义时间按秒增加</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 时间管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 时间管理 </tag>
            
            <tag> 工作时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 获取时间各种方法</title>
      <link href="/posts/4146378832.html"/>
      <url>/posts/4146378832.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-获取时间各种方法"><a href="#C-获取时间各种方法" class="headerlink" title="C#获取时间各种方法"></a>C#获取时间各种方法</h1><p>我们可以通过使用DataTime这个类来获取当前的时间。通过调用类中的各种方法我们可以获取不同的时间：如：日期（2008-09-04）、时间（12：12：12）、日期+时间（2008-09-04 12：11：10）等。</p><h2 id="获取日期和时间"><a href="#获取日期和时间" class="headerlink" title="获取日期和时间"></a>获取日期和时间</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DateTime.Now.ToString();            <span class="comment">// 2008-9-4 20:02:10</span></span><br><span class="line">DateTime.Now.ToLocalTime().ToString();        <span class="comment">// 2008-9-4 20:12:12</span></span><br></pre></td></tr></table></figure><h2 id="获取日期"><a href="#获取日期" class="headerlink" title="获取日期"></a>获取日期</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DateTime.Now.ToLongDateString().ToString();    <span class="comment">// 2008年9月4日</span></span><br><span class="line">DateTime.Now.ToShortDateString().ToString();    <span class="comment">// 2008-9-4</span></span><br><span class="line">DateTime.Now.ToString(<span class="string">&quot;yyyy-MM-dd&quot;</span>);        <span class="comment">// 2008-09-04</span></span><br><span class="line">DateTime.Now.Date.ToString();            <span class="comment">// 2008-9-4 0:00:00</span></span><br></pre></td></tr></table></figure><h2 id="获取时间"><a href="#获取时间" class="headerlink" title="获取时间"></a>获取时间</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DateTime.Now.ToLongTimeString().ToString();   <span class="comment">// 20:16:16</span></span><br><span class="line">DateTime.Now.ToShortTimeString().ToString();   <span class="comment">// 20:16</span></span><br><span class="line">DateTime.Now.ToString(<span class="string">&quot;hh:mm:ss&quot;</span>);        <span class="comment">// 08:05:57</span></span><br><span class="line">DateTime.Now.TimeOfDay.ToString();        <span class="comment">// 20:33:50.7187500</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他日期时间"><a href="#其他日期时间" class="headerlink" title="其他日期时间"></a>其他日期时间</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">DateTime.ToFileTime().ToString();       <span class="comment">// 128650040212500000</span></span><br><span class="line">DateTime.Now.ToFileTimeUtc().ToString();   <span class="comment">// 128650040772968750</span></span><br><span class="line">DateTime.Now.ToOADate().ToString();       <span class="comment">// 39695.8461709606</span></span><br><span class="line">DateTime.Now.ToUniversalTime().ToString();   <span class="comment">// 2008-9-4 12:19:14</span></span><br><span class="line"></span><br><span class="line">DateTime.Now.Year.ToString();         获取年份  <span class="comment">// 2008</span></span><br><span class="line">DateTime.Now.Month.ToString();      获取月份   <span class="comment">// 9</span></span><br><span class="line">DateTime.Now.DayOfWeek.ToString(); 获取星期   <span class="comment">// Thursday</span></span><br><span class="line">DateTime.Now.DayOfYear.ToString(); 获取第几天   <span class="comment">// 248</span></span><br><span class="line">DateTime.Now.Hour.ToString();          获取小时   <span class="comment">// 20</span></span><br><span class="line">DateTime.Now.Minute.ToString();     获取分钟   <span class="comment">// 31</span></span><br><span class="line">DateTime.Now.Second.ToString();     获取秒数   <span class="comment">// 45</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//n为一个数,可以数整数,也可以事小数</span></span><br><span class="line">dt.AddYears(n).ToString();   <span class="comment">//时间加n年</span></span><br><span class="line">dt.AddDays(n).ToString();   <span class="comment">//加n天</span></span><br><span class="line">dt.AddHours(n).ToString();   <span class="comment">//加n小时</span></span><br><span class="line">dt.AddMonths(n).ToString();   <span class="comment">//加n个月</span></span><br><span class="line">dt.AddSeconds(n).ToString();   <span class="comment">//加n秒</span></span><br><span class="line">dt.AddMinutes(n).ToString();   <span class="comment">//加n分</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SQL语句使用时间和日期的函数："><a href="#SQL语句使用时间和日期的函数：" class="headerlink" title="SQL语句使用时间和日期的函数："></a>SQL语句使用时间和日期的函数：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">getdate():获取系统当前时间</span><br><span class="line">dateadd(datepart,number,date):计算在一个时间的基础上增加一个时间后的新时间值,比如：dateadd(yy,<span class="number">30</span>,getdate())</span><br><span class="line">datediff(datepart,startdate,enddate):计算两个时间的差值,比如：datediff(yy,getdate(),<span class="string">&#x27;2008-08-08&#x27;</span>)</span><br><span class="line">dataname(datepart,date):获取时间不同部分的值，返回值为字符串</span><br><span class="line">datepart(datepart,date):和datename相似，只是返回值为整型</span><br><span class="line">day(date):获取指定时间的天数</span><br><span class="line">month(date):获取指定时间的月份</span><br><span class="line">year(date):获取指定时间的年份</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">year</span>(<span class="params">getdate(</span>)) ：当前年份</span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_36785719/article/details/120735223">C# 如何获取时间各种方法（日期+具体时间）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 时间管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 时间管理 </tag>
            
            <tag> 获取时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 获取文件名和路径</title>
      <link href="/posts/2198426451.html"/>
      <url>/posts/2198426451.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-获取文件名和文件路径"><a href="#C-获取文件名和文件路径" class="headerlink" title="C#获取文件名和文件路径"></a>C#获取文件名和文件路径</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><img src="https://img.jbzj.com/file_images/article/202207/202207220850581.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">OpenFileDialog open = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line">open.RestoreDirectory = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">string</span> fullname = open.FileName;</span><br><span class="line"><span class="built_in">string</span> path = System.IO.Path.GetDirectoryName(fullname);<span class="comment">//路径</span></span><br><span class="line"><span class="built_in">string</span> name = System.IO.Path.GetFileName(fullname);<span class="comment">//名称</span></span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><img src="https://img.jbzj.com/file_images/article/202207/202207220850582.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">OpenFileDialog open = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line">open.RestoreDirectory = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">string</span> fullpath = open.FileName;</span><br><span class="line"><span class="comment">//获取文件路径和文件名</span></span><br><span class="line"><span class="built_in">int</span> index = fullpath.LastIndexOf(<span class="string">&quot;//&quot;</span>);  <span class="comment">//返回“//”最后一次出现的位置</span></span><br><span class="line"><span class="built_in">string</span> filepath = fullpath.Substring(<span class="number">0</span>,index); <span class="comment">//截取字符串，0到“//”最后出现的位置</span></span><br><span class="line"><span class="built_in">string</span> filename = fullpath.Substring(index+<span class="number">1</span>);  <span class="comment">//截取文件名</span></span><br></pre></td></tr></table></figure><h1 id="C-通过文件路径获取文件名小技巧"><a href="#C-通过文件路径获取文件名小技巧" class="headerlink" title="C#通过文件路径获取文件名小技巧"></a>C#通过文件路径获取文件名小技巧</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> fullPath = <span class="string">@&quot;\WebSite1\Default.aspx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> filename = System.IO.Path.GetFileName(fullPath);<span class="comment">//文件名  “Default.aspx”</span></span><br><span class="line"><span class="built_in">string</span> extension = System.IO.Path.GetExtension(fullPath);<span class="comment">//扩展名 “.aspx”</span></span><br><span class="line"><span class="built_in">string</span> fileNameWithoutExtension = System.IO.Path.GetFileNameWithoutExtension(fullPath);<span class="comment">// 没有扩展名的文件名 “Default”</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.jb51.net/article/256372.htm">C#获取文件名和文件路径的两种实现方式</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 文件管理 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 获取路径 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# 判路径是文件还是文件夹</title>
      <link href="/posts/3128236970.html"/>
      <url>/posts/3128236970.html</url>
      
        <content type="html"><![CDATA[<h1 id="判断路径是否存在文件或文件夹"><a href="#判断路径是否存在文件或文件夹" class="headerlink" title="判断路径是否存在文件或文件夹"></a>判断路径是否存在文件或文件夹</h1><h2 id="判断文件夹是否存在"><a href="#判断文件夹是否存在" class="headerlink" title="判断文件夹是否存在"></a>判断文件夹是否存在</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> path = Application.StartupPath + <span class="string">&quot;\\新建文件夹&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!System.IO.Directory.Exists(path))</span><br><span class="line">&#123;</span><br><span class="line">    System.IO.Directory.CreateDirectory(path);<span class="comment">//不存在就创建目录</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="判断文件是否存在"><a href="#判断文件是否存在" class="headerlink" title="判断文件是否存在"></a>判断文件是否存在</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> path = Application.StartupPath + <span class="string">&quot;\\新建文件夹\\test.txt&quot;</span></span><br><span class="line"><span class="keyword">if</span>(System.IO.File.Exists(path)) </span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;存在该文件&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;不存在该文件&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="判断路径为文件或文件夹"><a href="#判断路径为文件或文件夹" class="headerlink" title="判断路径为文件或文件夹"></a>判断路径为文件或文件夹</h1><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 判断目标是文件夹还是目录(目录包括磁盘)</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;filepath&quot;&gt;</span>路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>返回true为一个文件夹，返回false为一个文件<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">IsDir</span>(<span class="params"><span class="built_in">string</span> filepath</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FileInfo fi = <span class="keyword">new</span> FileInfo(filepath);</span><br><span class="line">    <span class="keyword">if</span> ((fi.Attributes &amp; FileAttributes.Directory) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (File.Exists(add_file))</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;是文件&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Directory.Exists(targetPath))</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;是文件夹&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;都不是&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_38693757/article/details/115718818">C# 判断文件路径或文件是否存在</a></li><li><a href="https://blog.csdn.net/qq_38693757/article/details/115863494">C# 判断一个路径是文件夹还是文件</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 文件管理 </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 路径判断 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#语法之三（List多维数组用法）</title>
      <link href="/posts/1756346642.html"/>
      <url>/posts/1756346642.html</url>
      
        <content type="html"><![CDATA[<h1 id="list定义"><a href="#list定义" class="headerlink" title="list定义"></a>list定义</h1><p>当我们有很多类型一样的数据时，可以使用数组来进行存储并管理，但是这样的缺点是数组的大小是提前给定的、是固定的。 如果我们有许多类型一样但数量不定的数据，</p><p>我们可以使用集合类来进行管理——例如列表List。我们可以使用列表List很方便的添加数据，删除数据以及其他的一些数据操作。List<T>类是ArrayList类的泛型等效类，该类使</p><p>用大小可按需动态增加的数组实现IList<T>泛型接口。</p><p><strong>泛型的好处：</strong>它为使用c#语言编写面向对象程序增加了极大的效力和灵活性。不会强行对值类型进行装箱和拆箱，或对引用类型进行向下强制类型转换，所以性能得到提高。<br><strong>性能注意事项：</strong>在决定使用IList<T>还是使用ArrayList类(两者具有类似的功能)时，记住IList<T>类在大多数情况下执行得更好并且是类型安全的。如果对IList<T>类的类型T 使用引用类<br>型，则两个类的行为是完全相同的。但是，如果对类型T 使用值类型，则需要考虑实现和装箱问题。</p><h1 id="List的用法"><a href="#List的用法" class="headerlink" title="List的用法"></a>List的用法</h1><p><strong>1、List的基础、常用方法：</strong></p><p><strong>(1)、声明：</strong><br>①、List<T> mList &#x3D; new List<T>();<br>T为列表中元素类型，现在以string类型作为例子</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; mList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br></pre></td></tr></table></figure><p>②、List<T> testList &#x3D;new List<T> (IEnumerable<T> collection);</p><p>以一个集合作为参数创建List：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] temArr = &#123; <span class="string">&quot;Ha&quot;</span>, <span class="string">&quot;Hunter&quot;</span>, <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;Lily&quot;</span>, <span class="string">&quot;Jay&quot;</span>, <span class="string">&quot;Jim&quot;</span>, <span class="string">&quot;Kuku&quot;</span>, <span class="string">&quot;Locu&quot;</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">string</span>&gt; testList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;(temArr);</span><br></pre></td></tr></table></figure><p><strong>(2)、添加元素:</strong></p><p>①、 添加一个元素</p><p>　　语法： List. Add(T item) </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; mList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">mList.Add(<span class="string">&quot;John&quot;</span>);</span><br></pre></td></tr></table></figure><p>②、 添加一组元素</p><p>　　语法： List. AddRange(IEnumerable<T> collection)  </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; mList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"><span class="built_in">string</span>[] temArr = &#123; <span class="string">&quot;Ha&quot;</span>,<span class="string">&quot;Hunter&quot;</span>, <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;Lily&quot;</span>, <span class="string">&quot;Jay&quot;</span>, <span class="string">&quot;Jim&quot;</span>, <span class="string">&quot;Kuku&quot;</span>,  <span class="string">&quot;Locu&quot;</span> &#125;;</span><br><span class="line">mList.AddRange(temArr);</span><br></pre></td></tr></table></figure><p>③、在index位置添加一个元素</p><p>　　语法： Insert(int index, T item); </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; mList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">mList.Insert(<span class="number">1</span>, <span class="string">&quot;Hei&quot;</span>);</span><br></pre></td></tr></table></figure><p>④、遍历List中元素</p><p>语法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (T element <span class="keyword">in</span> mList)  <span class="comment">//T的类型与mList声明时一样</span></span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(element);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; mList = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">...<span class="comment">//省略部分代码</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> mList)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>(3)、删除元素:</strong></p><p>①、删除一个值</p><p>　　语法：List. Remove(T item)</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mList.Remove(<span class="string">&quot;Hunter&quot;</span>);</span><br></pre></td></tr></table></figure><p>②、 删除下标为index的元素</p><p>　　语法：List. RemoveAt(int index);  </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mList.RemoveAt(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>③、 从下标index开始，删除count个元素</p><p>　　语法：List. RemoveRange(int index, int count);</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mList.RemoveRange(<span class="number">3</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><strong>(4)、判断某个元素是否在该List中：</strong></p><p>语法：List. Contains(T item)  返回值为：true&#x2F;false</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (mList.Contains(<span class="string">&quot;Hunter&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;There is Hunter in the list&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    mList.Add(<span class="string">&quot;Hunter&quot;</span>);</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;Add Hunter successfully.&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>(5)、给List里面元素排序：</strong></p><p>　　语法： List. Sort ()  默认是元素第一个字母按升序</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mList.Sort();</span><br></pre></td></tr></table></figure><p><strong>(6)、给List里面元素顺序反转：</strong></p><p>　　语法： List. Reverse ()  可以与List. Sort ()配合使用，达到想要的效果</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mList. Reverse();</span><br></pre></td></tr></table></figure><p><strong>(7)、List清空：</strong></p><p>　　语法：List. Clear () </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mList.Clear();</span><br></pre></td></tr></table></figure><p><strong>(8)、获得List中元素数目：</strong></p><p>　　语法： List. Count ()  返回int值</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> count = mList.Count();</span><br><span class="line">Console.WriteLine(<span class="string">&quot;The num of elements in the list: &quot;</span> +count);</span><br></pre></td></tr></table></figure><p><strong>2、List的进阶、强大方法：</strong></p><p>本段举例用的List：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] temArr = &#123; <span class="string">&quot;Ha&quot;</span>,<span class="string">&quot;Hunter&quot;</span>, <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;Lily&quot;</span>, <span class="string">&quot;Jay&quot;</span>, <span class="string">&quot;Jim&quot;</span>, <span class="string">&quot;Kuku&quot;</span>, <span class="string">&quot; &quot;</span>Locu<span class="string">&quot; &#125;;</span></span><br><span class="line"><span class="string">mList.AddRange(temArr);</span></span><br></pre></td></tr></table></figure><p><strong>(1)、List.FindAll方法</strong>：检索与指定谓词所定义的条件相匹配的所有元素 </p><p>　　语法：public List<T> FindAll(Predicate<T> match);</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;<span class="built_in">string</span>&gt; subList = mList.FindAll(ListFind); <span class="comment">//委托给ListFind函数</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> subList)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;element in subList: &quot;</span>+s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时subList存储的就是所有长度大于3的元素。</p><p><strong>(2)、List.Find 方法</strong>：搜索与指定谓词所定义的条件相匹配的元素，并返回整个 List 中的第一个匹配元素。 </p><p>　　语法：public T Find(Predicate<T> match);</p><p>Predicate是对方法的委托，如果传递给它的对象与委托中定义的条件匹配，则该方法返回 true。当前 List 的元素被逐个传递给Predicate委托，并在 List 中向前移动，从第一个元素开始，到最后一个元素结束。当找到匹配项时处理即停止。</p><p>Predicate 可以委托给一个函数或者一个拉姆达表达式:</p><p>委托给拉姆达表达式：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> listFind = mList.Find(name =&gt;  <span class="comment">//name是变量，代表的是mList中元素，自己设定</span></span><br><span class="line">&#123;     </span><br><span class="line">   <span class="keyword">if</span> (name.Length &gt; <span class="number">3</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br><span class="line">Console.WriteLine(listFind);     <span class="comment">//输出是Hunter</span></span><br></pre></td></tr></table></figure><p>委托给一个函数： </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> listFind1 = mList.Find(ListFind);  <span class="comment">//委托给ListFind函数</span></span><br><span class="line">Console.WriteLine(listFind);    <span class="comment">//输出是Hunter</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//ListFind函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">ListFind</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (name.Length &gt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 这两种方法的结果是一样的。</p><p><strong>(3)、List.FindLast 方法</strong>：搜索与指定谓词所定义的条件相匹配的元素，并返回整个 List 中的最后一个匹配元素。<br>　　语法：public T FindLast(Predicate<T> match);</p><p>用法与List.Find相同。</p><p><strong>(4)、List.TrueForAll方法</strong>： 确定是否 List 中的每个元素都与指定的谓词所定义的条件相匹配。</p><p>　　语法：public bool TrueForAll(Predicate<T> match);</p><p>委托给拉姆达表达式：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> flag = mList.TrueForAll(name =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (name.Length &gt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line"> 　　　　<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line"> 　　　　<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">Console.WriteLine(<span class="string">&quot;True for all:  &quot;</span>+flag);  <span class="comment">//flag值为</span></span><br></pre></td></tr></table></figure><p> 委托给一个函数，这里用到上面的ListFind函数：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> flag = mList.TrueForAll(ListFind); 　　 <span class="comment">//委托给ListFind函数</span></span><br><span class="line">Console.WriteLine(<span class="string">&quot;True for all:  &quot;</span>+flag);  <span class="comment">//flag值为false</span></span><br></pre></td></tr></table></figure><p>这两种方法的结果是一样的。</p><p><strong>(5)List.Take(n)方法：</strong> 获得前n行 返回值为IEnumetable<T>，T的类型与List<T>的类型一样</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">IEnumerable&lt;<span class="built_in">string</span>&gt; takeList=  mList.Take(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> takeList)</span><br><span class="line">&#123;</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;element in takeList: &quot;</span> + s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时takeList存放的元素就是mList中的前5个。</p><p><strong>(6)、List.Where方法</strong>：检索与指定谓词所定义的条件相匹配的所有元素。跟List.FindAll方法类似。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">IEnumerable&lt;<span class="built_in">string</span>&gt; whereList = mList.Where(name =&gt;</span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">if</span> (name.Length &gt; <span class="number">3</span>)</span><br><span class="line">   &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> subList)</span><br><span class="line">&#123;</span><br><span class="line">   Console.WriteLine(<span class="string">&quot;element in subLis</span></span><br></pre></td></tr></table></figure><p>这时subList存储的就是所有长度大于3的元素。</p><p><strong>(7)、List.RemoveAll方法：</strong>移除与指定的谓词所定义的条件相匹配的所有元素。</p><p>　　语法： public int RemoveAll(Predicate<T> match);</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mList.RemoveAll(name =&gt;</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">if</span> (name.Length &gt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="built_in">string</span> s <span class="keyword">in</span> mList)</span><br><span class="line">&#123;</span><br><span class="line">    Console.WriteLine(<span class="string">&quot;element in mList:     &quot;</span> + s);</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>这时mList存储的就是移除长度大于3之后的元素。<br>补充请参考<a href="https://www.cnblogs.com/wisdomforce/archive/2010/05/31/1748642.html">C#泛型类之LIST<T></a></p><h1 id="C-泛型类之LIST"><a href="#C-泛型类之LIST" class="headerlink" title="C#泛型类之LIST"></a>C#泛型类之LIST<T></h1><h3 id="1、-定义"><a href="#1、-定义" class="headerlink" title="1、    定义"></a>1、    定义</h3><p>System.Collections.Generic.List<T>类表示可通过索引访问的对象的强类型列表。提供用于对列表进行搜索、排序和操作的方法。T为类型参数，代表列表中元素的类型。该类实现了IList<T>泛型接口，是ArrayList类的泛型等效类，其大小可按需动态增加。</p><h3 id="2-构造函数"><a href="#2-构造函数" class="headerlink" title="2.构造函数"></a>2.构造函数</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>List<T>()</td><td>初始化 List<T> 类的新实例，该实例为空并且具有默认初始容量（0）。</td></tr><tr><td>List<T>(IEnumerable<T>)</td><td>初始化 List<T> 类的新实例，该实例包含从指定集合复制的元素并且具有足够的容量来容纳所复制的元素。</td></tr><tr><td>List<T>(Int32)</td><td>始化 List<T> 类的新实例，该实例为空并且具有指定的初始容量。</td></tr></tbody></table><p>说明：默认向 List<T> 添加元素时，将通过重新分配内部数组，根据需要自动增大容量。如果可以估计集合的大小，那么当指定初始容量后，将无需在向 List<T> 中添加元素时执行大量的大小调整操作。这样可提高性能。</p><h3 id="3-List方法"><a href="#3-List方法" class="headerlink" title="3. List方法"></a>3. List<T>方法</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Add</td><td>将对象添加到 List<T> 的结尾处。</td></tr><tr><td>AddRange</td><td>将指定集合的元素添加到 List<T> 的末尾。</td></tr><tr><td>AsReadOnly</td><td>返回当前集合的只读 IList<T> 包装。</td></tr><tr><td>BinarySearch(T)</td><td>使用默认的比较器在整个已排序的 List<T> 中搜索元素，并返回该元素从零开始的索引。</td></tr><tr><td>BinarySearch(T, IComparer<T>)</td><td>使用指定的比较器在整个已排序的 List<T> 中搜索元素，并返回该元素从零开始的索引。</td></tr><tr><td>BinarySearch(Int32, Int32, T, IComparer<T>)</td><td>使用指定的比较器在已排序 List<T> 的某个元素范围中搜索元素，并返回该元素从零开始的索引。</td></tr><tr><td>Clear</td><td>从 List<T> 中移除所有元素。</td></tr><tr><td>Contains</td><td>确定某元素是否在 List<T> 中。</td></tr><tr><td>ConvertAll<TOutput></td><td>将当前 List<T> 中的元素转换为另一种类型，并返回包含转换后的元素的列表。</td></tr><tr><td>CopyTo(T[])</td><td>将整个 List<T> 复制到兼容的一维数组中，从目标数组的开头开始放置。</td></tr><tr><td>Exists</td><td>确定 List<T> 是否包含与指定谓词所定义的条件相匹配的元素。</td></tr><tr><td>Find</td><td>搜索与指定谓词所定义的条件相匹配的元素，并返回整个 List<T> 中的第一个匹配元素。</td></tr><tr><td>FindIndex(Predicate<T>)</td><td>搜索与指定谓词所定义的条件相匹配的元素，并返回整个 List<T> 中第一个匹配元素的从零开始的索引。</td></tr><tr><td>ForEach</td><td>对 List<T> 的每个元素执行指定操作。</td></tr><tr><td>GetEnumerator</td><td>返回循环访问 List<T> 的枚举器。</td></tr><tr><td>IndexOf(T)</td><td>搜索指定的对象，并返回整个 List<T> 中第一个匹配项的从零开始的索引。</td></tr><tr><td>Insert</td><td>将元素插入 List<T> 的指定索引处。</td></tr><tr><td>InsertRange</td><td>将集合中的某个元素插入 List<T> 的指定索引处。</td></tr><tr><td>LastIndexOf(T)</td><td>搜索指定的对象，并返回整个 List<T> 中最后一个匹配项的从零开始的索引。</td></tr><tr><td>Remove</td><td>从 List<T> 中移除特定对象的第一个匹配项。</td></tr><tr><td>Reverse()</td><td>将整个 List<T> 中元素的顺序反转。</td></tr><tr><td>Sort()</td><td>使用默认比较器对整个 List<T> 中的元素进行排序。</td></tr><tr><td>TrimExcess</td><td>将容量设置为 List<T> 中的实际元素数目（如果该数目小于某个阈值）。</td></tr><tr><td>TrueForAll</td><td>确定是否 List<T> 中的每个元素都与指定的谓词所定义的条件相匹配。</td></tr></tbody></table><p>说明：上述方法说明中有用到“谓词”，谓词就是Predicate<T> 委托，它代表一组方法，该方法定义一组条件，并确定指定的参数对象是否符合这些条件，具体的参见示例程序。</p><h3 id="4-List属性"><a href="#4-List属性" class="headerlink" title="4. List属性"></a>4. List<T>属性</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Capacity</td><td>获取或设置该内部数据结构在不调整大小的情况下能够容纳的元素总数。</td></tr><tr><td>Count</td><td>获取 List<T> 中实际包含的元素数。</td></tr></tbody></table><p>说明：Capacity 是 List<T> 在需要调整大小之前可以存储的元素数，Count 则是 List<T> 中实际存储的元素数。</p><h3 id="5-示例程序"><a href="#5-示例程序" class="headerlink" title="5.示例程序"></a>5.示例程序</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> List&lt;T&gt;类常用的方法</span></span><br><span class="line">                List&lt;<span class="built_in">string</span>&gt; dinosaurs = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();<span class="comment">//创建一个string的List集合</span></span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nCapacity: &#123;0&#125;&quot;</span>, dinosaurs.Capacity);<span class="comment">//输出默认容量的大小</span></span><br><span class="line"></span><br><span class="line">                dinosaurs.Add(<span class="string">&quot;Tyrannosaurus&quot;</span>);<span class="comment">//向集合添加元素</span></span><br><span class="line">                dinosaurs.Add(<span class="string">&quot;Amargasaurus&quot;</span>);</span><br><span class="line">                dinosaurs.Add(<span class="string">&quot;Mamenchisaurus&quot;</span>);</span><br><span class="line">                dinosaurs.Add(<span class="string">&quot;Deinonychus&quot;</span>);</span><br><span class="line">                dinosaurs.Add(<span class="string">&quot;Compsognathus&quot;</span>);</span><br><span class="line"></span><br><span class="line">                Console.WriteLine();</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">string</span> dinosaur <span class="keyword">in</span> dinosaurs)<span class="comment">//打印集合中的元素</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(dinosaur);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nCapacity: &#123;0&#125;&quot;</span>, dinosaurs.Capacity);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Count: &#123;0&#125;&quot;</span>, dinosaurs.Count);<span class="comment">//输出集合中实际元素的数量</span></span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nContains(\&quot;Deinonychus\&quot;): &#123;0&#125;&quot;</span>,</span><br><span class="line">                    dinosaurs.Contains(<span class="string">&quot;Deinonychus&quot;</span>));<span class="comment">//判断集合中是否包含某个元素</span></span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nInsert(2, \&quot;Compsognathus\&quot;)&quot;</span>);</span><br><span class="line">                dinosaurs.Insert(<span class="number">2</span>, <span class="string">&quot;Compsognathus&quot;</span>);<span class="comment">//将元素插入到集合的指定索引出，允许插入重复的元素</span></span><br><span class="line"></span><br><span class="line">                Console.WriteLine();</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">string</span> dinosaur <span class="keyword">in</span> dinosaurs)<span class="comment">//打印集合中的元素</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(dinosaur);</span><br><span class="line">                &#125;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\ndinosaurs[3]: &#123;0&#125;&quot;</span>, dinosaurs[<span class="number">3</span>]);<span class="comment">//输出集合中索引为3的元素</span></span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nRemove(\&quot;Compsognathus\&quot;)&quot;</span>);</span><br><span class="line">                dinosaurs.Remove(<span class="string">&quot;Compsognathus&quot;</span>);<span class="comment">//移除集合中第一个匹配的元素</span></span><br><span class="line"></span><br><span class="line">                Console.WriteLine();</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">string</span> dinosaur <span class="keyword">in</span> dinosaurs)<span class="comment">//打印集合中的元素</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(dinosaur);</span><br><span class="line">                &#125;</span><br><span class="line">                dinosaurs.TrimExcess();<span class="comment">//减小容量以匹配计数，然后显示 Capacity 和 Count 属性。如果未用容量已经小于总容量的 10%，则列表容量不会进行调整。</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nTrimExcess()&quot;</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Capacity: &#123;0&#125;&quot;</span>, dinosaurs.Capacity);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Count: &#123;0&#125;&quot;</span>, dinosaurs.Count);</span><br><span class="line"></span><br><span class="line">                dinosaurs.Clear();<span class="comment">//移除列表中的所有项，然后显示 Capacity 和 Count 属性。</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;\nClear()&quot;</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Capacity: &#123;0&#125;&quot;</span>, dinosaurs.Capacity);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Count: &#123;0&#125;&quot;</span>, dinosaurs.Count);</span><br><span class="line">            </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> List&lt;T&gt;类的新增方法</span></span><br><span class="line"></span><br><span class="line">            List&lt;<span class="built_in">string</span>&gt; dinosaurs1 = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();<span class="comment">//创建一个string的List集合</span></span><br><span class="line"></span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Compsognathus&quot;</span>);<span class="comment">//向集合添加元素</span></span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Amargasaurus&quot;</span>);</span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Oviraptor&quot;</span>);</span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Velociraptor&quot;</span>);</span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Deinonychus&quot;</span>);</span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Dilophosaurus&quot;</span>);</span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Gallimimus&quot;</span>);</span><br><span class="line">            dinosaurs1.Add(<span class="string">&quot;Triceratops&quot;</span>);</span><br><span class="line"></span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> dinosaur <span class="keyword">in</span> dinosaurs1)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(dinosaur);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nTrueForAll(EndsWithSaurus): &#123;0&#125;&quot;</span>,</span><br><span class="line">                dinosaurs1.TrueForAll(EndsWithSaurus));<span class="comment">//确定集合中的每个元素是否都与指定的谓词所定义的条件相匹配</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nFind(EndsWithSaurus): &#123;0&#125;&quot;</span>,</span><br><span class="line">                dinosaurs1.Find(EndsWithSaurus));<span class="comment">//搜索与指定谓词条件相匹配的第一个元素</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nFindLast(EndsWithSaurus): &#123;0&#125;&quot;</span>,</span><br><span class="line">                dinosaurs1.FindLast(EndsWithSaurus));<span class="comment">//搜索与指定谓词条件相匹配的最后一个元素</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nFindAll(EndsWithSaurus):&quot;</span>);</span><br><span class="line">            List&lt;<span class="built_in">string</span>&gt; sublist = dinosaurs1.FindAll(EndsWithSaurus);<span class="comment">//检索与指定谓词定义的条件匹配的所有元素</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> dinosaur <span class="keyword">in</span> sublist)<span class="comment">//打印集合</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(dinosaur);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(</span><br><span class="line">                <span class="string">&quot;\n&#123;0&#125; elements removed by RemoveAll(EndsWithSaurus).&quot;</span>,</span><br><span class="line">                dinosaurs1.RemoveAll(EndsWithSaurus));<span class="comment">//移除与指定谓词定义的条件匹配的所有元素</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nList now contains:&quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> dinosaur <span class="keyword">in</span> dinosaurs1)<span class="comment">//打印集合</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(dinosaur);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\nExists(EndsWithSaurus): &#123;0&#125;&quot;</span>,</span><br><span class="line">                dinosaurs1.Exists(EndsWithSaurus));<span class="comment">//该方法从头开始遍历该列表，依次将每个元素传递给 EndsWithSaurus 方法。如果 EndsWithSaurus 方法针对任何元素返回 true，搜索即停止</span></span><br><span class="line">            dinosaurs1.Sort();<span class="comment">//对集合中的元素排序</span></span><br><span class="line">            dinosaurs1.Reverse();<span class="comment">//将集合中的元素顺序反转</span></span><br><span class="line">            dinosaurs1.ForEach(Print);<span class="comment">//对集合中的每个元素执行指定的方法（如Print方法）</span></span><br><span class="line">            Console.Read();</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 搜索谓词方法，该方法接受一个字符串作为参数，并返回一个布尔值，指示输入的字符串是否以“saurus”结尾。</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">EndsWithSaurus</span>(<span class="params">String s</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((s.Length &gt; <span class="number">5</span>) &amp;&amp;</span><br><span class="line">                (s.Substring(s.Length - <span class="number">6</span>).ToLower() == <span class="string">&quot;saurus&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义打印集合的方法</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Print</span>(<span class="params"><span class="built_in">string</span> s</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(s);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="6-备注"><a href="#6-备注" class="headerlink" title="6.备注"></a>6.备注</h3><p>1、 List<T> 类既使用相等比较器又使用排序比较器。</p><ul><li>诸如 Contains、IndexOf、LastIndexOf 和 Remove 这样的方法对列表元素使用相等比较器。类型 T 的默认相等比较器按如下方式确定。如果类型 T 实现 IEquatable<T> 泛型接口，则相等比较器为该接口的 Equals(T) 方法；否则，默认相等比较器为 Object.Equals(Object)。</li><li>诸如 BinarySearch 和 Sort 这样的方法对列表元素使用排序比较器。类型 T 的默认比较器按如下方式确定。如果类型 T 实现 IComparable<T> 泛型接口，则默认比较器为该接口的 CompareTo(T) 方法；否则，如果类型 T 实现非泛型 IComparable 接口，则默认比较器为该接口的 CompareTo(Object) 方法。如果类型 T 没有实现其中任一个接口，则不存在默认比较器，并且必须显式提供比较器或比较委托。</li></ul><p>2、 List<T> 不保证是排序的。在执行要求 List<T> 已排序的操作（例如 BinarySearch）之前，您必须对 List<T> 进行排序。</p><p>3、 List<T> 不保证是排序的。在执行要求 List<T> 已排序的操作（例如 BinarySearch）之前，您必须对 List<T> 进行排序。</p><p>4、 使用整数索引可以访问此集合中的元素。此集合中的索引从零开始。</p><p>5、 List<T> 接受 null 作为引用类型的有效值并且允许有重复的元素。</p><p>6、 大多数情况下List<T>执行得更好并且是类型安全的,可以替换ArrayList,但是如果对类型 T 使用值类型，则编译器将特别针对该值类型生成 List<T> 类的实现。这意味着不必对 List<T> 对象的列表元素进行装箱就可以使用该元素，并且在创建大约 500 个列表元素之后，不对列表元素装箱所节省的内存将大于生成该类实现所使用的内存。如果创建小于500个元素，建议使用ArrayList.</p><h1 id="用CopyTo方法将List集合元素拷贝到数组Array"><a href="#用CopyTo方法将List集合元素拷贝到数组Array" class="headerlink" title="用CopyTo方法将List集合元素拷贝到数组Array"></a>用CopyTo方法将List集合元素拷贝到数组Array</h1><p>在C#的List集合操作中，有时候需要将List元素对象拷贝存放到对应的数组Array中，此时就可以使用到List集合的CopyTo方法来实现，CopyTo方法是List集合的扩展方法，共有3个重载方法签名，分别为void CopyTo(T[] array)、void CopyTo(T[] array, int arrayIndex)、void CopyTo(int index, T[] array, int arrayIndex, int count)等三种形式，此文重点介绍CopyTo的第一种方法签名形式void CopyTo(T[] array)。</p><p>首先定义个用于测试的类TestModel，具体的类定义如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestModel</span></span><br><span class="line">  &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="built_in">int</span> Index &#123; <span class="keyword">set</span>; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">public</span> <span class="built_in">string</span> Name &#123; <span class="keyword">set</span>; <span class="keyword">get</span>; &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>然后定义一个List<TestModel>集合，并往里面写入3条TestModel数据，具体实现如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">List&lt;TestModel&gt; testList = <span class="keyword">new</span> List&lt;ConsoleApplication1.TestModel&gt;();</span><br><span class="line">          testList.Add(<span class="keyword">new</span> TestModel()</span><br><span class="line">          &#123;</span><br><span class="line">               Index=<span class="number">1</span>,</span><br><span class="line">               Name=<span class="string">&quot;Index1&quot;</span></span><br><span class="line">          &#125;);</span><br><span class="line">          testList.Add(<span class="keyword">new</span> TestModel()</span><br><span class="line">          &#123;</span><br><span class="line">              Index = <span class="number">2</span>,</span><br><span class="line">              Name = <span class="string">&quot;Index2&quot;</span></span><br><span class="line">          &#125;);</span><br><span class="line">          testList.Add(<span class="keyword">new</span> TestModel()</span><br><span class="line">          &#123;</span><br><span class="line">              Index = <span class="number">3</span>,</span><br><span class="line">              Name = <span class="string">&quot;Index3&quot;</span></span><br><span class="line">          &#125;);</span><br></pre></td></tr></table></figure><p>我们需要达到的目的是，将testList集合的元素对象拷贝到数组Array中，此时可使用下列语句实现：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TestModel[] copyArray = <span class="keyword">new</span> TestModel[testList.Count];</span><br><span class="line"> testList.CopyTo(copyArray);</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>上述程序语句中的CopyTo方法为浅层次拷贝，当修改copyArray数组的时候，也会联动修改List集合对象testList。例如赋值copyArray[0].Index &#x3D; 10后，List集合对象testList的第一个元素testList[0]对象的Index属性也被修改为10。</p><h1 id="List-二维数组的使用（最重要的！踩了坑才记录这篇文章）"><a href="#List-二维数组的使用（最重要的！踩了坑才记录这篇文章）" class="headerlink" title="List 二维数组的使用（最重要的！踩了坑才记录这篇文章）"></a>List 二维数组的使用（最重要的！踩了坑才记录这篇文章）</h1><h2 id="C-泛型列表List实现二维数组的功能（令附C-泛型列表List基本用法总结）"><a href="#C-泛型列表List实现二维数组的功能（令附C-泛型列表List基本用法总结）" class="headerlink" title="C#泛型列表List实现二维数组的功能（令附C#泛型列表List基本用法总结）"></a>C#泛型列表List实现二维数组的功能（令附C#泛型列表List基本用法总结）</h2><blockquote><p><strong>是通过这篇文章才解决画图时传入多维数组数组问题</strong></p></blockquote><p>在决定使用 List<T> 还是使用 ArrayList 类（两者具有类似的功能）时，记住 List<T> 类在大多数情况下执行得更好并且是类型安全的。 如果对 List<T> 类的类型 T 使用引用类型，则两个类的行为是完全相同的。 但是，如果对类型 T 使用值类型，则需要考虑实现和装箱问题。想二维数组和一维数组那样能用好多方法，在这里可以实现：那就是利用泛型List<T>。</p><p>举个例子：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">view plaincopy to clipboardprint?</span><br><span class="line">List&lt;List&lt;<span class="built_in">int</span>&gt;&gt; array1 = <span class="keyword">new</span> List&lt;List&lt;<span class="built_in">int</span>&gt;&gt;();  </span><br><span class="line">        List&lt;<span class="built_in">int</span>&gt; array2 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();         </span><br><span class="line"> </span><br><span class="line">        array2.Add(<span class="number">2</span>);  </span><br><span class="line">        array2.Add(<span class="number">3</span>);  </span><br><span class="line">        array2.Add(<span class="number">6</span>);  </span><br><span class="line">        array2.Add(<span class="number">6</span>);  </span><br><span class="line">        array2.Add(<span class="number">6</span>);  </span><br><span class="line">        List&lt;<span class="built_in">int</span>&gt; array3 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();  </span><br><span class="line">        array3.Add(<span class="number">1</span>);  </span><br><span class="line">        array3.Add(<span class="number">4</span>);  </span><br><span class="line">        array3.Add(<span class="number">5</span>);  </span><br><span class="line">        array3.Add(<span class="number">12</span>);  </span><br><span class="line">        array3.Add(<span class="number">32</span>);  </span><br><span class="line">        array3.Add(<span class="number">42</span>);  </span><br><span class="line">        array1.Add(array2);  </span><br><span class="line">        array1.Add(array3);  </span><br><span class="line">        List&lt;<span class="built_in">string</span>&gt; array4 = array1[<span class="number">0</span>];  </span><br><span class="line">        List&lt;<span class="built_in">string</span>&gt; array5 = array1[<span class="number">1</span>]; </span><br></pre></td></tr></table></figure><p>-—————————————————————–</p><p>原理是：把列表合并再拆开，把数组中的每一行看做是一个列表的数据。</p><p>代码中定义两个列表的类型array1，利用List<T>的方法赋值，之后拆开，把值传到两个列表中。这样就实现了二维数组的赋值取值。这是二维数组，多维数组举一反三。例子只是为了说明用法 毫无代码价值。</p><p>C#泛型列表List<T>基本用法总结：（饮水思源：<a href="http://space.itpub.net/14466241/viewspace-624132%EF%BC%89">http://space.itpub.net/14466241/viewspace-624132）</a></p><p>示例代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">SampleListT</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line"> &#123;</span><br><span class="line">   <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">     <span class="comment">//using System.Collections.Generic; 命名空间中的List&lt;T&gt;</span></span><br><span class="line">     <span class="comment">//using System.Collections;　命名空间中的ArrayList</span></span><br><span class="line">     <span class="comment">//都实现了列表集合，一个是泛形集合，一个是非泛型的</span></span><br><span class="line">     <span class="comment">//下面我们将Person对象加到集合中</span></span><br><span class="line"></span><br><span class="line">​     Person p1 = <span class="keyword">new</span> Person( <span class="string">&quot;aladdin&quot;</span> , <span class="number">20</span> );</span><br><span class="line">​     Person p2 = <span class="keyword">new</span> Person(<span class="string">&quot;zhao&quot;</span>, <span class="number">10</span>);</span><br><span class="line">​     Person p3 = <span class="keyword">new</span> Person(<span class="string">&quot;jacky&quot;</span>, <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">​     <span class="comment">//如果不制定list的容器大小，默认是０,只要有元素加入是，会自动扩展到４,如果第５个元素加入时，就变成了８,第９个加入，就成１６</span></span><br><span class="line">​     <span class="comment">//可以看出，总是成倍的增长，扩展时要重新开辟内存，这样会影响效率，如果事先知道元素个数，或者可能个数，最好给个尽量大的权衡值</span></span><br><span class="line">​     <span class="comment">//我们加入３个元素，设容器大小为４.注：设为４不是指只能放４个元素，如果超出，一样也会成倍扩展，这样做只是为了尽量扩展带来的开销</span></span><br><span class="line">​     List&lt;Person&gt; list = <span class="keyword">new</span> List&lt;Person&gt;(<span class="number">4</span>);</span><br><span class="line">​     list.Add(p1);</span><br><span class="line">​     list.Add(p2);</span><br><span class="line">​     list.Add(p3);</span><br><span class="line"></span><br><span class="line">​     <span class="comment">//本方法是清除多于的没有用的内存空间，例：如果开辟大小为１００,而我们只用了４个，其余的放着，是不是很浪费　</span></span><br><span class="line">​     <span class="comment">//本方法调用时会检查元素个数是不是占到了容器大小的９０％以上，如果是，则不进行回收．</span></span><br><span class="line">​     list.TrimExcess();</span><br><span class="line"></span><br><span class="line">​     <span class="comment">//ArrayList方法与List&lt;&gt;用法一样，不同的是，它是对象集合，参数是Object这样会有装箱拆箱的可能，尽量用List&lt;&gt;</span></span><br><span class="line">​     <span class="comment">//本处不再做演示</span></span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 1 初始化集合器</span></span><br><span class="line">​     <span class="comment">// C#3.0开始，提供了初始化功能，但是并没有反应到ＩＬ代码中，在ＩＬ中，一样也是把个转化成ADD方法来调用</span></span><br><span class="line">​     List&lt;<span class="built_in">int</span>&gt; l2 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span> ,<span class="number">2</span> ,<span class="number">3</span> ,<span class="number">4</span> ,<span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 2 添加元素 AddRange() 本方法可以一次性添加一批对象</span></span><br><span class="line">​     List&lt;Person&gt; lists = <span class="keyword">new</span> List&lt;Person&gt;(<span class="number">10</span>);</span><br><span class="line">​     <span class="comment">//参数是一个必须可能跌代的对象,也可是数组</span></span><br><span class="line">​     list.AddRange( <span class="keyword">new</span> Person[] &#123; <span class="keyword">new</span> Person( <span class="string">&quot;aladdin&quot;</span> ,<span class="number">20</span>) , <span class="keyword">new</span> Person(<span class="string">&quot;zhao&quot;</span>,<span class="number">6</span>)&#125;);</span><br><span class="line"></span><br><span class="line">​     <span class="comment">//构造传入批量参数 ,与AddRange效果一样</span></span><br><span class="line">​     List&lt;Person&gt; mylist = <span class="keyword">new</span> List&lt;Person&gt;(<span class="keyword">new</span> Person[] &#123; <span class="keyword">new</span> Person( <span class="string">&quot;aladdin&quot;</span> ,<span class="number">20</span>) , <span class="keyword">new</span> Person(<span class="string">&quot;zhao&quot;</span>,<span class="number">6</span>)&#125;);</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 3 插入元素</span></span><br><span class="line">​     <span class="comment">// 使用Insert()方法,可以在指定位置插入元素</span></span><br><span class="line">​     <span class="comment">// 例 我们在1位置插入 则最后变成了 aladdin jacky zhao..插入意思就是,这个位我占了,以前占这位的和他之后的,通通往后移一位</span></span><br><span class="line">​     mylist.Insert( <span class="number">1</span> , <span class="keyword">new</span> Person( <span class="string">&quot;jacky&quot;</span> , <span class="number">88</span> ));</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">foreach</span> (Person p <span class="keyword">in</span> mylist)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(p.name);</span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 4 访问元素</span></span><br><span class="line">​     <span class="comment">// ArrayList 与 List&lt;T&gt;都是提供了索引器来访问的</span></span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;----------------访问元素------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; mylist.Count; i++)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(mylist[i].name);</span><br><span class="line">​     &#125;</span><br><span class="line">​     <span class="comment">//还可以使用foreach跌代器来实现,些处不再举例</span></span><br><span class="line"></span><br><span class="line">​     <span class="comment">//使用Foreach方法</span></span><br><span class="line">​     <span class="comment">//public delegate void Action&lt;T&gt;(T obj);例用委托做为参数</span></span><br><span class="line">​     <span class="comment">//些处我们用呀妈Day表达式实现</span></span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;-----------------用ForEach方法输出------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     mylist.ForEach( param =&gt; Console.WriteLine(param.name) ) ;</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 5删除元素</span></span><br><span class="line">​     <span class="comment">//删除元素可以使用RemoveAt()直接传入索引器值</span></span><br><span class="line">​     <span class="comment">//将第一个元素直接删除</span></span><br><span class="line">​     mylist.RemoveAt(<span class="number">0</span>);</span><br><span class="line">​     <span class="comment">//也可以将要删除的元素传给Remove方法</span></span><br><span class="line"></span><br><span class="line">​     List&lt;Person&gt; lists2 = <span class="keyword">new</span> List&lt;Person&gt;(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">​     Person per1 = <span class="keyword">new</span> Person( <span class="string">&quot;aladdin&quot;</span> , <span class="number">100</span> );</span><br><span class="line">​     Person per2 = <span class="keyword">new</span> Person(<span class="string">&quot;zhao&quot;</span>, <span class="number">100</span>);</span><br><span class="line">​     Person per3 = <span class="keyword">new</span> Person(<span class="string">&quot;jacky&quot;</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">​     lists2.Add(per1);</span><br><span class="line">​     lists2.Add(per2);</span><br><span class="line">​     lists2.Add(per3);</span><br><span class="line"></span><br><span class="line">​     lists2.Remove(per3);</span><br><span class="line"></span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;-------删除后的元素---------&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">foreach</span> (Person per <span class="keyword">in</span> lists2)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(per.name);</span><br><span class="line">​     &#125;</span><br><span class="line">​     <span class="comment">//从结果可以看出 名称为Jacky的元素被删除了</span></span><br><span class="line">​     <span class="comment">//下面说一下Remove方法的删除过程</span></span><br><span class="line">​     <span class="comment">// 用IndexOf方法确定出对象的索引,然后按索引删除</span></span><br><span class="line">​     <span class="comment">// 在IndexOf方法内,首先检查元素是不是实现了IEquatable接口,如果是,就调用这个接口中的Equals方法</span></span><br><span class="line">​     <span class="comment">// 如果没有实现,则调用Object中的Equals方法比较元素(也就是址址比较)</span></span><br><span class="line">​     <span class="comment">// 以上我们删除per3,很显明显一个地址,所以被删除了 </span></span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 下面我们改装了Person ,实现了IEquatable&lt;Person&gt;,在比较方法中,始终返回false , 则per3会比较失败,不会被删除</span></span><br><span class="line">​     <span class="comment">// 结果3个都在</span></span><br><span class="line">​     <span class="comment">// 如果要删除对象,最好使用索引直接删除,因为Remove方法经历了一系列过程后,最后才按索引删除!</span></span><br><span class="line"></span><br><span class="line">​     <span class="comment">// RemoveRange()删除一个范围</span></span><br><span class="line">​     <span class="comment">// 第一个参数 开始位置 第二个 个数</span></span><br><span class="line">​     <span class="comment">//lists2.RemoveRange( 1 , 2 );</span></span><br><span class="line">​     <span class="comment">//Console.WriteLine( &quot;批量删除后----------------&quot;);</span></span><br><span class="line"></span><br><span class="line">​     <span class="comment">//foreach (Person per in lists2)</span></span><br><span class="line">​     <span class="comment">//&#123;</span></span><br><span class="line">​     <span class="comment">//  Console.WriteLine(per.name);</span></span><br><span class="line">​     <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 6 搜索</span></span><br><span class="line">​     <span class="comment">// 搜索有很多种方式,可以使用IndexOf LastIndexOf FindIndex FindLasIndex Find FindLas ,如果只是查看元素存不,可以使用Exists()方法</span></span><br><span class="line">​     <span class="comment">// IndexOf() 方法 需要将一个对象做参数, 如果打到,就返回本元素在集合中的索引,如果找不到就返回-1,IndexOf还可以使用IEquatable接口来比较元素</span></span><br><span class="line"></span><br><span class="line">​     List&lt;Person&gt; ls3 = <span class="keyword">new</span> List&lt;Person&gt;(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">​     Person person1 = <span class="keyword">new</span> Person(<span class="string">&quot;aladdin&quot;</span>, <span class="number">100</span>);</span><br><span class="line">​     Person person2 = <span class="keyword">new</span> Person(<span class="string">&quot;zhao&quot;</span>, <span class="number">100</span>);</span><br><span class="line">​     Person person3 = <span class="keyword">new</span> Person(<span class="string">&quot;jacky&quot;</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">​     ls3.Add(person1);</span><br><span class="line">​     ls3.Add(person2);</span><br><span class="line">​     ls3.Add(person3);</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 为了使用默认的地址比较,我们把Person的接口暂时去掉</span></span><br><span class="line">​     <span class="built_in">int</span> index = ls3.IndexOf(person3);</span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;per3 的索引:&quot;</span> + index); <span class="comment">//2</span></span><br><span class="line">​     <span class="comment">// 还可以指定搜索范围 从第3个开始,范围长度是1</span></span><br><span class="line">​     <span class="built_in">int</span> index2 = ls3.IndexOf(person3,<span class="number">2</span>,<span class="number">1</span>);</span><br><span class="line">​     Console.WriteLine(index2);</span><br><span class="line">​     <span class="comment">//IEquatable比较方法前面已经写过,不再举例</span></span><br><span class="line"></span><br><span class="line">​     <span class="comment">// FindIndex()方法是用来搜索带有一定特性的元素</span></span><br><span class="line">​     <span class="comment">// 例用委托做参数 public delegate bool Predicate&lt;T&gt;(T obj);</span></span><br><span class="line"></span><br><span class="line">​     <span class="built_in">int</span> index3 = ls3.FindIndex(param =&gt; param.name.Equals(<span class="string">&quot;jacky&quot;</span>));</span><br><span class="line">​     Console.WriteLine( index3 );<span class="comment">// 2</span></span><br><span class="line">​     <span class="comment">// FindLastIndex是从后面查第一个出现的元素,因为我们这里没有重复元素,所以体现不出他只查找一个,就停下来的效果</span></span><br><span class="line">​     <span class="built_in">int</span> index4 = ls3.FindLastIndex(p =&gt; p.name.Equals(<span class="string">&quot;aladdin&quot;</span>));</span><br><span class="line">​     Console.WriteLine(index4);</span><br><span class="line">​     <span class="comment">// Find方法与FindIndex方法用法一样,不同的是,它返回的是元素本身</span></span><br><span class="line">​     Person ppp = ls3.Find( p =&gt; p.name.Equals(<span class="string">&quot;jacky&quot;</span>)) ;</span><br><span class="line">​     Console.WriteLine(ppp);</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 如果要查找所有的匹配元素,而不是找到第一个就停下来,就使用FindAll方法</span></span><br><span class="line">​     <span class="comment">// 我们查找所有年纪等于100的对象,3个都符合</span></span><br><span class="line">​     List&lt;Person&gt; newList = ls3.FindAll(p =&gt; p.age == <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;----------查找所有---------&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">foreach</span> (Person p <span class="keyword">in</span> newList)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(p.name);</span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 7 排序</span></span><br><span class="line">​     <span class="comment">// List可以例用Sort方法排序,实现算法是快速排序</span></span><br><span class="line">​     <span class="comment">// 本方法有好几个重载</span></span><br><span class="line">​     <span class="comment">//public void Sort(); //只对元素实现了IComparable才能使用这个方法 ,如果实现了则,可以直接调用一次sort之后,就排好序了</span></span><br><span class="line">​     <span class="comment">//public void Sort(Comparison&lt;T&gt; comparison); //我们的Person并没有实现那个接口,所以要用泛型委托当参数的方法</span></span><br><span class="line">​     <span class="comment">//public void Sort(IComparer&lt;T&gt; comparer); //泛型接口当参数 public delegate int Comparison&lt;T&gt;(T x, T y);</span></span><br><span class="line">​     <span class="comment">//public void Sort(int index, int count, IComparer&lt;T&gt; comparer); //可以指定范围</span></span><br><span class="line"></span><br><span class="line">​     List&lt;Person&gt; ls4 = <span class="keyword">new</span> List&lt;Person&gt;(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">​     Person person4 = <span class="keyword">new</span> Person(<span class="string">&quot;aladdin&quot;</span>, <span class="number">100</span>);</span><br><span class="line">​     Person person5 = <span class="keyword">new</span> Person(<span class="string">&quot;zhao&quot;</span>, <span class="number">33</span>);</span><br><span class="line">​     Person person6 = <span class="keyword">new</span> Person(<span class="string">&quot;jacky&quot;</span>, <span class="number">44</span>);</span><br><span class="line"></span><br><span class="line">​     ls4.Add(person4);</span><br><span class="line">​     ls4.Add(person5);</span><br><span class="line">​     ls4.Add(person6);</span><br><span class="line"></span><br><span class="line">​     ls4.Sort(MyComparFunc);</span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;-------------排序后的-------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">foreach</span> (Person p <span class="keyword">in</span> ls4)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(p.name+ p.age );</span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;--------颠倒循序------------------&quot;</span>);</span><br><span class="line">​     ls4.Reverse();</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">foreach</span> (Person p <span class="keyword">in</span> ls4)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(p.name+ p.age);</span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 8 类型转换</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以将集合中的元素转换成任意类型的元素,比如,我们要将集合中的Person转换成为Racer对象Racer只包含名字,没有年纪</span></span><br><span class="line">     <span class="comment">// public List&lt;TOutput&gt; ConvertAll&lt;TOutput&gt;(Converter&lt;T, TOutput&gt; converter);</span></span><br><span class="line">     <span class="comment">// public delegate TOutput Converter&lt;TInput, TOutput&gt;(TInput input); 委托参数</span></span><br><span class="line">     List&lt;Racer&gt; ls5 = ls4.ConvertAll&lt;Racer&gt;((input) =&gt; <span class="keyword">new</span> Racer(input.name)) ;</span><br><span class="line"></span><br><span class="line">​     Console.WriteLine( <span class="string">&quot;-----------转换后的玩意--------&quot;</span>);</span><br><span class="line">​     <span class="keyword">foreach</span> (Racer r <span class="keyword">in</span> ls5)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(r.name);</span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     <span class="comment">// 9 只读集合</span></span><br><span class="line">​     <span class="comment">// 在创建完集合以后,肯定是可读写的,如果不是,他就不能再添加新元素了,但是,如果是认为填充完毕,不要再做修改.</span></span><br><span class="line">​     <span class="comment">// 可以使用只读集合,使用AsReadOnly方法() 返回ReadOnlyCollection&lt;T&gt;类型,它与List&lt;&gt;操作是一样的,但是一但有修改集合的操作,就会刨出异常</span></span><br><span class="line">​     <span class="comment">// 他屏蔽了通常的ADD等方法</span></span><br><span class="line"></span><br><span class="line">​     ReadOnlyCollection&lt;Racer&gt; persss = ls5.AsReadOnly();</span><br><span class="line"></span><br><span class="line">​     Console.WriteLine(<span class="string">&quot;输出只读集合&quot;</span>);</span><br><span class="line"></span><br><span class="line">​     <span class="keyword">foreach</span> (Racer r <span class="keyword">in</span> persss)</span><br><span class="line">​     &#123;</span><br><span class="line">​       Console.WriteLine(r.name);</span><br><span class="line">​     &#125;</span><br><span class="line"></span><br><span class="line">​     Console.ReadLine();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//为了比较写的委托实现方法</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">MyComparFunc</span>(<span class="params">Person p1, Person p2</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">     <span class="keyword">if</span> (p1.age == p2.age)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span> <span class="keyword">if</span> (p1.age &gt; p2.age)</span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//two helper classes</span></span><br><span class="line"><span class="keyword">class</span> <span class="title">Person</span><span class="comment">//:IEquatable&lt;Person&gt;</span></span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">int</span> age;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Person</span>(<span class="params"> <span class="built_in">string</span> name , <span class="built_in">int</span> age </span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">     <span class="keyword">this</span>.name= name;</span><br><span class="line">     <span class="keyword">this</span>.age = age;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment"><span class="doctag">///</span>/始终给一个False值</span></span><br><span class="line">   <span class="comment">//public bool Equals(Person other)</span></span><br><span class="line">   <span class="comment">//&#123;</span></span><br><span class="line">   <span class="comment">//  return false;</span></span><br><span class="line">   <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">class</span> <span class="title">Racer</span></span><br><span class="line"> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Racer</span>(<span class="params"><span class="built_in">string</span> name</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">     <span class="keyword">this</span>.name= name;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="用List创建二维数组（未测试过，应当为正常）"><a href="#用List创建二维数组（未测试过，应当为正常）" class="headerlink" title="用List创建二维数组（未测试过，应当为正常）"></a>用List创建二维数组（未测试过，应当为正常）</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">List&lt;List&lt;<span class="built_in">int</span>&gt;&gt; dList = <span class="keyword">new</span> List&lt;List&lt;<span class="built_in">int</span>&gt;&gt;();</span><br><span class="line"></span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; list = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;(<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">10</span>,<span class="number">1</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">17</span>&#125;);</span><br><span class="line"></span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; list2 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;(<span class="keyword">new</span> <span class="built_in">int</span>[]&#123;<span class="number">21</span>,<span class="number">2</span>,<span class="number">23</span>,<span class="number">26</span>,<span class="number">27</span>&#125;);</span><br><span class="line"></span><br><span class="line">dList.Add(list);</span><br><span class="line">dList.Add(list);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>; i &lt; dList.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">0</span>; j &lt; dList[i].Count; j++)</span><br><span class="line">&#123;</span><br><span class="line">Console.Write(dList[i][j]+<span class="string">&quot;,&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;第&#123;0&#125;行数据&quot;</span>,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最近在解决一个地图图层操作的问题，图层操作的原理大致是这样的：<br>   每层图片划分为同样大小的网格，划分后可以看成一个二维数组，每一个网格代表数组中的一个元素，将其转化 为一      维数组（后面还会增加一维，由于对超过二维的数组有一种天然的的恐惧感，这里就把其转化为一维的了）;<br> 将每一层看做一维数组中的一个元素，这样对图层的操作就变成一个对二维数组的操作;<br> 预设的目标是能够实现动态的增加图层，增加的图层放在最上层;<br> 相邻两个图层之间能够交换顺序，即数组list[0]和数组list[1]能够交换位置;<br>   能够删除某一指定的层;<br> 就如上上面提到的一样，我想到的解决办法就是使用二维数组，但我需要的图层数目是动态的增加和减少的，而且某一层的顺序位置是可以变化的，这就涉及到数组的添加，删除，顺序变化，这些是普通的二维数组是实现不了的，于是就想到是用List，然后就在网上查了一些资料和MSDN文档，写了下面的测试代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>[] a = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">           <span class="built_in">int</span>[] b = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">           <span class="built_in">int</span>[] c = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">           <span class="built_in">int</span>[] d = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">           <span class="built_in">int</span>[] e = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">           <span class="built_in">int</span>[] f = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];  <span class="comment">//创建一维数组</span></span><br><span class="line">           List&lt;<span class="built_in">int</span>[]&gt; list = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>[]&gt;();</span><br><span class="line">           list.Add(a);</span><br><span class="line">           list.Add(b);</span><br><span class="line">           list.Add(c);</span><br><span class="line"></span><br><span class="line">           list.Add(d);  <span class="comment">//添加图层</span></span><br><span class="line">           list[<span class="number">0</span>][<span class="number">3</span>] = <span class="number">20</span>;</span><br><span class="line">           list[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">2</span>;  <span class="comment">//这里和普通二维数组的使用[,] 不一样</span></span><br><span class="line">           list[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">40</span>;</span><br><span class="line"></span><br><span class="line">           list.Reverse(<span class="number">1</span>,<span class="number">2</span>);    <span class="comment">//图层交换</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/xingyuanzier/p/11081279.html">C# 之list</a></li><li><a href="https://www.cnblogs.com/wisdomforce/archive/2010/05/31/1748642.html">C#泛型类之LIST<T></a></li><li><a href="https://www.jb51.net/article/232317.htm">C#中List用法介绍详解（这个说的很详细）</a></li><li><a href="https://www.cnblogs.com/xu-yi/p/11026480.html">C#中使用CopyTo方法将List集合元素拷贝到数组Array中</a></li><li><a href="https://www.cnblogs.com/canlay/archive/2011/09/06/2168507.html">C#泛型列表List实现二维数组的功能（令附C#泛型列表List基本用法总结）</a></li><li><a href="https://bbs.csdn.net/topics/392372606">关于 List[][] 大家见过这样的用法么？</a></li><li><a href="https://blog.csdn.net/qq_42675313/article/details/103342637">C# 创建二维List的简单例子</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 二维数组 </tag>
            
            <tag> 语法 </tag>
            
            <tag> List </tag>
            
            <tag> 泛型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#串口功能之五（串口调试助手温度曲线的显示）</title>
      <link href="/posts/526450441.html"/>
      <url>/posts/526450441.html</url>
      
        <content type="html"><![CDATA[<h1 id="c-串口调试助手、上位机"><a href="#c-串口调试助手、上位机" class="headerlink" title="c#串口调试助手、上位机"></a>c#串口调试助手、上位机</h1><p><strong>简介：</strong><br>此串口调试助手是在windows下开发的，工具是 Visual Studio 2017开发的，串口调试助手支持 600<del>115200波特率，端口号是 CMO1</del>CMO9，支持数据位、停止位、奇偶位，支持数据的接收与发送，接收方式十六进制、字符的选择，对接收端数据的清空，并能对温度传感器数据进行接收与绘折线图，并且能设置正常温度现实的区间，及时判断温度是否显示正常与否，并能对曲线的显示进行刷新重新绘制。</p><p><strong>效果图片：</strong></p><img src="https://img-blog.csdnimg.cn/20181219132507652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpY2tpbHlnb3U=,size_10,color_FF0000,t_70"><p>源码文件名：Csha_demo-master</p><p><strong>想要源代码的可以关注公众号回复：上位机</strong></p><img src="https://img-blog.csdnimg.cn/20181226195010361.jpg"><h2 id="串口参数介绍"><a href="#串口参数介绍" class="headerlink" title="串口参数介绍"></a>串口参数介绍</h2><p><strong>简介：</strong><br>典型地，串口用于ASCII码字符的传输。通信使用3根线完成：（1）地线，（2）发送，（3）接收。由于串口通信是异步的，端口能够在一根线上发送数据同时在另一根线上接收数据。</p><p><strong>波特率：</strong><br>这是一个衡量符号传输速率的参数。它表示每秒钟传送的符号的个数。例如300波特表示每秒钟发送300个符号。当我们提到时钟周期时，我们就是指波特率，例如如果协议需要4800波特率，那么时钟是4800Hz。这意味着串口通信在数据线上的采样率为4800Hz。通常电话线的波特率为14400，28800和36600。波特率可以远远大于这些值，但是波特率和距离成反比。高波特率常常用于放置的很近的仪器间的通信，典型的例子就是GPIB设备的通信。</p><p><strong>数据位：</strong><br>数据位表示一组数据实际包含的数据位数。数据位紧跟在起始位之后，是通信中的真正有效信息。数据位的位数由通信双方共同约定，一般可以是6位、7位或8位，比如标准的ASCII码是0—127（7位），扩展的ASCII码是0—255（8位）。传输数据时先传送字符的低位，后传送字符的高位，即低位（LSB）在前，高位（MSB）在后。</p><p><strong>奇偶位：</strong><br>奇偶校验通常用在数据通信中来保证数据的有效性。奇偶校验位是一个表示给定位数的二进制数中 1 的个数是奇数还是偶数的二进制数。奇偶校验位是最简单的错误检测码。</p><p><strong>停止位：</strong><br>用于表示单个包的最后一位。典型的值为1，1.5和2位。由于数据是在传输线上定时的，并且每一个设备有其自己的时钟，很可能在通信中两台设备间出现了小小的不同步。因此停止位不仅仅是表示传输的结束，并且提供计算机校正时钟同步的机会。适用于停止位的位数越多，不同时钟同步的容忍程度越大，但是数据传输率同时也越慢。</p><h2 id="串口通信模块-SerialPort"><a href="#串口通信模块-SerialPort" class="headerlink" title="串口通信模块(SerialPort)"></a>串口通信模块(SerialPort)</h2><ul><li><strong>配置IO文件</strong><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.IO.Ports;</span><br></pre></td></tr></table></figure></li><li><strong>图标</strong></li></ul><img src="https://img-blog.csdnimg.cn/20181219154748906.png"><table><thead><tr><th>属性</th><th>介绍</th></tr></thead><tbody><tr><td>BaudRate</td><td>波特率</td></tr><tr><td>DataBits</td><td>数据位</td></tr><tr><td>Parity</td><td>奇偶校验位</td></tr><tr><td>PortName</td><td>端口号</td></tr><tr><td>StopBits</td><td>停止位</td></tr><tr><td>ByteToRead</td><td>获取输入缓冲区的</td></tr><tr><td>IsOpen</td><td>获取是否开启串口</td></tr></tbody></table><ul><li><strong>Serialport 通信模块的事件</strong></li></ul><img src="https://img-blog.csdnimg.cn/2018121915571354.png"><p>在这里我们只用到DataReceived串口接收函数，如需了解另外两个请自己查阅</p><table><thead><tr><th>事件</th><th>介绍</th></tr></thead><tbody><tr><td>DataReceived</td><td>串口接收函数</td></tr><tr><td>ErrorReceived</td><td>串口数据接收错误</td></tr><tr><td>PinChanged</td><td>串口号发生改变</td></tr></tbody></table><h2 id="串口窗口介绍"><a href="#串口窗口介绍" class="headerlink" title="串口窗口介绍"></a>串口窗口介绍</h2><img src="https://img-blog.csdnimg.cn/20181219161228702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpY2tpbHlnb3U=,size_10,color_FF0000,t_70"><p><strong>由图可以看出正常温度区间设置的是20-25度之间，测试温度的过程中温度曲线黄色的为正常的曲线，红色的曲线为温度异常。温度刷新，温度曲线重新读取画线</strong></p><p>在窗体上添加4个Groupbox控件：</p><ul><li>第一个：串口设置</li><li>第二的：接收数据</li><li>第三个：发送数据</li><li>第四个：温度曲线显示</li></ul><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><h2 id="串口初始化函数"><a href="#串口初始化函数" class="headerlink" title="串口初始化函数"></a>串口初始化函数</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button_open_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           <span class="comment">// if(Button_on == 1)</span></span><br><span class="line">            <span class="keyword">if</span> (!serialPort1.IsOpen)<span class="comment">//如果串口是开</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.PortName = comboBox1.Text;<span class="comment">//端口号</span></span><br><span class="line">                serialPort1.BaudRate = Convert.ToInt32(comboBox2.Text, <span class="number">10</span>);<span class="comment">//波特率</span></span><br><span class="line">                <span class="built_in">float</span> f = Convert.ToSingle(comboBox3.Text.Trim());<span class="comment">//trim去除字符串前后的空格</span></span><br><span class="line">                <span class="keyword">if</span> (f == <span class="number">0</span>)<span class="comment">//设置停止位</span></span><br><span class="line">                    serialPort1.StopBits = StopBits.None;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (f == <span class="number">1.5</span>)</span><br><span class="line">                    serialPort1.StopBits = StopBits.OnePointFive;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (f == <span class="number">1</span>)</span><br><span class="line">                    serialPort1.StopBits = StopBits.One;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (f == <span class="number">2</span>)</span><br><span class="line">                    serialPort1.StopBits = StopBits.Two;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    serialPort1.StopBits = StopBits.One;</span><br><span class="line">                <span class="comment">//设置数据位</span></span><br><span class="line">                serialPort1.DataBits = Convert.ToInt32(comboBox4.Text.Trim());</span><br><span class="line">                <span class="comment">//设置奇偶校验位</span></span><br><span class="line">                <span class="built_in">string</span> s = comboBox5.Text.Trim();</span><br><span class="line">                <span class="keyword">if</span> (s.CompareTo(<span class="string">&quot;无&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    serialPort1.Parity = Parity.None;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s.CompareTo(<span class="string">&quot;奇校验&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    serialPort1.Parity = Parity.Odd;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s.CompareTo(<span class="string">&quot;偶校验&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    serialPort1.Parity = Parity.Even;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    serialPort1.Parity = Parity.None;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.Open();     <span class="comment">//打开串口</span></span><br><span class="line">                    button_open.Text = <span class="string">&quot;关闭串口&quot;</span>;</span><br><span class="line">                    comboBox1.Enabled = <span class="literal">false</span>;<span class="comment">//关闭使能</span></span><br><span class="line">                    comboBox2.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox3.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox4.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox5.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox6.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox7.Enabled = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                catch</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;串口打开失败！&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span><span class="comment">//如果串口是打开的则将其关闭</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.Close();</span><br><span class="line">                button_open.Text = <span class="string">&quot;打开串口&quot;</span>;</span><br><span class="line">                comboBox1.Enabled = <span class="literal">true</span>;<span class="comment">//使能配置</span></span><br><span class="line">                comboBox2.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox3.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox4.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox5.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox6.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox7.Enabled = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="画坐标图"><a href="#画坐标图" class="headerlink" title="画坐标图"></a>画坐标图</h2><img src="https://img-blog.csdnimg.cn/20181219164023414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpY2tpbHlnb3U=,size_16,color_FF0000,t_70"><h3 id="画坐标时用到头文件："><a href="#画坐标时用到头文件：" class="headerlink" title="画坐标时用到头文件："></a>画坐标时用到头文件：</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Drawing2D;</span><br></pre></td></tr></table></figure><h3 id="画线时用到类graphics"><a href="#画线时用到类graphics" class="headerlink" title="画线时用到类graphics"></a><strong>画线时用到类graphics</strong></h3><blockquote><p>graphics是抽象函数不能实例化，并且画线的时候编辑器是以左上角为坐标原点画的，想要把它改成左下角，只能自己计算坐标点，根据自己的需求把它画成称自己想要的，如上图我把（50,218）这个坐标表示成原点</p></blockquote><p><strong>注意：Graphics是在控件Groupbox控件下事件Paint下写的</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">groupBox4_Paint</span>(<span class="params"><span class="built_in">object</span> sender, PaintEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FontFamily family = <span class="keyword">new</span> FontFamily(<span class="string">&quot;Arial&quot;</span>);<span class="comment">//实例化字体的类型</span></span><br><span class="line">            <span class="built_in">int</span> fontstyle = (<span class="built_in">int</span>)FontStyle.Italic;<span class="comment">//设置字体的样式</span></span><br><span class="line">            GraphicsPath gp = <span class="keyword">new</span> GraphicsPath();</span><br><span class="line">            <span class="built_in">string</span> Str;</span><br><span class="line">            <span class="comment">//Draw y纵向轴绘制</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">14</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Graphics.DrawLine(TablePen, StartPrint + i * Unit_length, StartPrint - <span class="number">32</span>, StartPrint + i * Unit_length, <span class="number">10</span> * Unit_length + <span class="number">18</span>);<span class="comment">//画线</span></span><br><span class="line">                gp.AddString((i * <span class="number">10</span>).ToString(), family, fontstyle, <span class="number">8</span>, <span class="keyword">new</span> RectangleF(StartPrint + i * Unit_length - <span class="number">7</span>, <span class="number">10</span> * Unit_length + <span class="number">18</span> + <span class="number">4</span>, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);<span class="comment">//添加文字</span></span><br><span class="line">            &#125;</span><br><span class="line">            gp.AddString(<span class="string">&quot;时间(s)&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(groupBox4.ClientRectangle.Width / <span class="number">2</span> , <span class="number">9</span> * Unit_length + <span class="number">55</span>, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            Draw X 横向轴绘制</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Graphics.DrawLine(TablePen, StartPrint, i * Unit_length + <span class="number">18</span>, StartPrint + <span class="number">14</span> * Unit_length, i * Unit_length + <span class="number">18</span>);<span class="comment">//画线</span></span><br><span class="line">                Str = Convert.ToString((<span class="number">10</span> - i) * <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                    Str = <span class="string">&quot;50&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">10</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                gp.AddString(Str, family, fontstyle, <span class="number">8</span>, <span class="keyword">new</span> RectangleF(<span class="number">20</span>, i * Unit_length +<span class="number">16</span>, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);<span class="comment">//添加文字</span></span><br><span class="line">            &#125;</span><br><span class="line">            gp.AddString(<span class="string">&quot;温&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(<span class="number">0</span>, groupBox4.ClientRectangle.Height / <span class="number">2</span> - StartPrint, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            gp.AddString(<span class="string">&quot;度&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(<span class="number">0</span>, groupBox4.ClientRectangle.Height / <span class="number">2</span> + <span class="number">18</span> - StartPrint, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            gp.AddString(<span class="string">&quot;°C&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(<span class="number">0</span>, groupBox4.ClientRectangle.Height / <span class="number">2</span> + <span class="number">32</span> - StartPrint, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            e.Graphics.DrawPath(Pens.White, gp);<span class="comment">//写文字</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="方法介绍"><a href="#方法介绍" class="headerlink" title="方法介绍"></a><strong>方法介绍</strong></h3><p><strong>DrawLine(Pen pen, int x1, int y1, int x2, int y2);</strong></p><blockquote><p>pen：定义线条的宽度、颜色、样式<br>画线由(x1,y1)向(x2,y2)画</p></blockquote><p><strong>public void AddString(string s, FontFamily family, int style, float emSize, RectangleF layoutRect, StringFormat format);</strong></p><blockquote><p>s：绘制的字符<br>family：绘制的字体类型<br>style：字体的样式<br>emsize：方形块的高度<br>layoutRect：文本的矩形<br>format：文本格式设置信息</p></blockquote><h3 id="c-延时函数"><a href="#c-延时函数" class="headerlink" title="c#延时函数"></a><strong>c#延时函数</strong></h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delay</span>(<span class="params"><span class="built_in">int</span> milliSecond</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> start = Environment.TickCount;</span><br><span class="line">            <span class="keyword">while</span> (Math.Abs(Environment.TickCount - start) &lt; milliSecond)<span class="comment">//毫秒</span></span><br><span class="line">            &#123;</span><br><span class="line">                Application.DoEvents();<span class="comment">//可执行某无聊的操作</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>关于Math.Abs():</strong><br>Environment.TickCount，内部API是用DWORD GetTickCount()来实现的，该属性的值从系统计时器派生，并以 32 位有符号整数的形式存储。因此，如果系统连续运行，TickCount 将在约 24.9 天内从零递增至 Int32. MaxValue ，然后跳至 Int32. MinValue （这是一个负数），再在接下来的 24.9 天内递增至零。DWORD是无符号的，而 Environment.TickCount属性返回的值是有符号的，所以有一半的值用负数表示！</p><h3 id="串口写函数"><a href="#串口写函数" class="headerlink" title="串口写函数"></a>串口写函数</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button_send_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;<span class="comment">//发送数据</span></span><br><span class="line">            <span class="keyword">if</span>(serialPort1.IsOpen)</span><br><span class="line">            &#123;<span class="comment">//如果串口开启</span></span><br><span class="line">                <span class="keyword">if</span> (textBox_send.Text.Trim() != <span class="string">&quot;&quot;</span>)<span class="comment">//如果框内不为空则</span></span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.Write(textBox_send.Text.Trim());<span class="comment">//写数据</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;发送框没有数据&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;串口未打开&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="串口读函数（如果是温度传感器并选择温度传感器画温度曲线）"><a href="#串口读函数（如果是温度传感器并选择温度传感器画温度曲线）" class="headerlink" title="串口读函数（如果是温度传感器并选择温度传感器画温度曲线）"></a>串口读函数（如果是温度传感器并选择温度传感器画温度曲线）</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">post_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">float</span> Up, Dw,t;</span><br><span class="line">            Graphics graphics = groupBox4.CreateGraphics();</span><br><span class="line">            <span class="keyword">if</span> (!radioButton1.Checked)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> str = serialPort1.ReadExisting();<span class="comment">//字符串方式读</span></span><br><span class="line">                <span class="keyword">if</span>(!radioButton3.Checked)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//提取字符串中的数字</span></span><br><span class="line">                    <span class="built_in">string</span> result = System.Text.RegularExpressions.Regex.Replace(str, <span class="string">@&quot;[^0-9]+&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    Console.WriteLine(result);</span><br><span class="line">                    <span class="comment">//设置正常温度上限下限</span></span><br><span class="line">                    Dw = Convert.ToSingle(comboBox6.Text);</span><br><span class="line">                    Up = Convert.ToSingle(comboBox7.Text);</span><br><span class="line">                    <span class="keyword">if</span>(Dw&lt;Up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        t = Dw;</span><br><span class="line">                        Dw = Up;</span><br><span class="line">                        Up = t;</span><br><span class="line">                    &#125;</span><br><span class="line">                    dstr2 = Convert.ToSingle(result);<span class="comment">//字符串的转换成float</span></span><br><span class="line">                    textBox_T.Text = result + <span class="string">&quot;度&quot;</span>;</span><br><span class="line">                    textBox_receive.AppendText(str);</span><br><span class="line">                    <span class="comment">//正常温度的曲线</span></span><br><span class="line">                    <span class="keyword">if</span>(dstr2&gt;=Up&amp;&amp;dstr2&lt;=Dw)</span><br><span class="line">                    &#123;</span><br><span class="line">                        graphics.DrawLine(LinesPen, Origin_x + i * Unit_length, dstr1, Origin_x + (i+<span class="number">0.1f</span>) * Unit_length, Origin_y - dstr2 * <span class="number">4</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span><span class="comment">//异常温度的曲线</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        graphics.DrawLine(LinesEpen, Origin_x + i * Unit_length, dstr1, Origin_x + (i + <span class="number">0.1f</span>) * Unit_length, Origin_y - dstr2 * <span class="number">4</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    i += <span class="number">0.1f</span>;</span><br><span class="line">                    dstr1 = Origin_y - dstr2 * <span class="number">4</span>;</span><br><span class="line">                    Delay(<span class="number">1000</span>);<span class="comment">//不延时的话不显示</span></span><br><span class="line">                    <span class="comment">//textBox_T.Clear();无所谓</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    textBox_receive.AppendText(str);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span> data;</span><br><span class="line">                data = (<span class="built_in">byte</span>)serialPort1.ReadByte();</span><br><span class="line">                <span class="built_in">string</span> str = Convert.ToString(data, <span class="number">16</span>).ToUpper();<span class="comment">//</span></span><br><span class="line">                textBox_receive.AppendText(<span class="string">&quot;0x&quot;</span> + (str.Length == <span class="number">1</span> ? <span class="string">&quot;0&quot;</span> + str : str) + <span class="string">&quot;  &quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/lickilygou/article/details/85102538">c#串口调试助手温度曲线的显示-上位机的开发-串口参数介绍</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 通讯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 串口通讯 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> 曲线 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C# winfrom 全屏自适应屏幕分辨率</title>
      <link href="/posts/3006246467.html"/>
      <url>/posts/3006246467.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Rectangle rect = <span class="keyword">new</span> Rectangle();</span><br><span class="line">rect = Screen.GetWorkingArea(<span class="keyword">this</span>);</span><br><span class="line">   </span><br><span class="line"><span class="keyword">this</span>.Width = rect.Width;<span class="comment">//屏幕宽</span></span><br><span class="line"><span class="keyword">this</span>.Height = rect.Height;<span class="comment">//屏幕高</span></span><br><span class="line"><span class="keyword">this</span>.ControlBox = <span class="literal">false</span>;   <span class="comment">// 设置不出现关闭按钮</span></span><br><span class="line"><span class="keyword">this</span>.FormBorderStyle = FormBorderStyle.None;<span class="comment">//无边框</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//名字空间&quot;System.Windows.Forms&quot;中的&quot;Screen&quot;类的GetWorkingArea（）方法</span></span><br><span class="line"><span class="comment">//Rectangle rect = new Rectangle ( ) ;</span></span><br><span class="line"><span class="comment">//rect = Screen.GetWorkingArea ( this ) ;</span></span><br><span class="line"><span class="comment">//&quot;屏幕宽&quot;＝ rect.Width ;</span></span><br><span class="line"><span class="comment">//&quot;屏幕长&quot;＝ rect.Height ;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/winformasp/articles/12065948.html">winfrom 全屏自适应屏幕分辨率</a></li><li><a href="https://bbs.csdn.net/topics/60157463?list=lz">怎样得到桌面的大小？</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> GetWorkingArea </tag>
            
            <tag> 分辨率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#操作注册表（读写注册表）</title>
      <link href="/posts/1321126257.html"/>
      <url>/posts/1321126257.html</url>
      
        <content type="html"><![CDATA[<h1 id="注册表起源和作用"><a href="#注册表起源和作用" class="headerlink" title="注册表起源和作用"></a>注册表起源和作用</h1><p>自Windows95以来的所有Windows版本中，注册表是包含Windows安装，用户首选项，以及已安装软件和设备的所有配置信息的核心存储库。目前，几乎所有的商用软件都使用注册表来存储这些信息，COM组件必须把它们的信息存储在注册表中，才能有客户端调用。.NET Framework引入了独立存储器的概念，通过它应用程序可以在文件中存储专用于每个用户的信息，.NET Framework将确保为每个在机器上注册的用户单独地存储数据。<br>注册表的库和.NET库一样复杂，它包括访问注册表的类。其中有两个类涉及注册表，即Registry和RegistryKey，这两个类都在Microsoft Win32 名称控件中。</p><h1 id="注册表简介"><a href="#注册表简介" class="headerlink" title="注册表简介"></a>注册表简介</h1><blockquote><p><strong>注册表的层次结构非常类似于文件系统的层次结构。查看和修改注册表的内容的一般方式是使用regedit或regedt32应用程序。</strong></p></blockquote><p>在运行中输入：regedit，可以看到如下界面：</p><img src="https://img-blog.csdn.net/20170313145601719?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313145719901?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313145726604?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313145909325?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h1 id="NET-注册表类"><a href="#NET-注册表类" class="headerlink" title="NET 注册表类"></a>NET 注册表类</h1><blockquote><p><strong>要访问注册表，就可以使用Registry和RegistryKey。</strong></p></blockquote><p>RegistryKey实例表示一个注册表键。这个类实现的方法可以浏览子键，创建新键，读取或修改键中的值。换句话说，通过这类可以实现对注册建所有的操作，包括设置键的安全级别。<br>Registry类只能对注册表键进行单一的访问，以执行简单的操作。Registry类的另一个作用是提供表示顶级键的RegistryKey实例，以便开始在注册表中定位。Registry通过静态属性来提供这些实例。<br>那么接下来先介绍一下Registry 类<br>作用：提供了 RegistryKey 表示 Windows 注册表中的根键的对象和 static 方法，以访问键&#x2F;值对。</p><h2 id="Registry方法"><a href="#Registry方法" class="headerlink" title="Registry方法"></a>Registry方法</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>GetValue(String, String, Object)</td><td>检索与指定的注册表项中具有指定名称关联的值。 如果未在指定的键中找到的名称，将返回你提供一个默认值或 null 如果指定的键不存在。</td></tr><tr><td>SetValue(String, String, Object)</td><td>设置指定的注册表项指定的名称&#x2F;值对。 如果指定的键不存在，则创建它。</td></tr><tr><td>SetValue(String, String, Object, RegistryValueKind)</td><td>使用指定的注册表数据类型的指定的注册表项设置的名称&#x2F;值对。 如果指定的键不存在，则创建它。</td></tr></tbody></table><h2 id="Registry字段"><a href="#Registry字段" class="headerlink" title="Registry字段"></a>Registry字段</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>ClassesRoot</td><td>定义文档以及与这些类型相关联的属性类型 （或类）。 此字段中读取的 Windows 注册表基项 HKEY_CLASSES_ROOT。</td></tr><tr><td>CurrentConfig</td><td>包含与不是特定于用户的硬件相关的配置信息。 此字段中读取的 Windows 注册表基项 HKEY_CURRENT_CONFIG。</td></tr><tr><td>CurrentUser</td><td>包含有关当前用户首选项的信息。 此字段中读取的 Windows 注册表基项 HKEY_CURRENT_USER</td></tr><tr><td>DynData</td><td>已过时。 包含动态注册表数据。 此字段中读取的 Windows 注册表基项 HKEY_DYN_DATA。</td></tr><tr><td>LocalMachine</td><td>包含为本地计算机的配置数据。 此字段中读取的 Windows 注册表基项 HKEY_LOCAL_MACHINE。</td></tr><tr><td>PerformanceData</td><td>包含软件组件的性能信息。 此字段中读取的 Windows 注册表基项 HKEY_PERFORMANCE_DATA。</td></tr><tr><td>Users</td><td>包含有关默认用户配置信息。 此字段中读取的 Windows 注册表基项 HKEY_USERS。</td></tr></tbody></table><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>此类提供在运行 Windows 的计算机上的注册表中找到的标准的根键的集合。 注册表是有关应用程序、 用户和默认的系统设置的信息存储设施。 例如，应用程序可以使用注册表来存储信息，必须关闭该应用程序之后, 被保留并重新加载应用程序时访问这些信息。 例如，您可以存储颜色首选项、 屏幕位置或窗口的大小。 通过将信息存储在注册表中的其他位置，可以控制每个用户的此数据。<br>基或根 RegistryKey 实例公开的 Registry 类描述的子项和值在注册表中的基本存储机制。 所有键都是只读的因为注册表取决于它们存在。<br><strong>通过公开的项 Registry 是︰</strong></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>ClassesRoot</td><td>存储有关类型 （类） 的信息以及它们的属性。</td></tr><tr><td>CurrentConfig</td><td>将存储非特定于用户的硬件信息。</td></tr><tr><td>CurrentUser</td><td>存储有关用户首选项的信息。</td></tr><tr><td>DynData</td><td>将动态数据存储。</td></tr><tr><td>LocalMachine</td><td>存储在本地计算机的配置信息。</td></tr><tr><td>PerformanceData</td><td>存储软件组件的性能的信息。</td></tr><tr><td>Users</td><td>存储有关默认用户配置信息。</td></tr></tbody></table><p><strong>一旦确定要在其下存储&#x2F;检索信息从注册表的根密钥，您可以使用 RegistryKey 类来添加或删除子项，并处理给定键的值。</strong><br>硬件设备可以将信息放在使用自动插接口注册表中。 用于安装设备驱动程序软件可以通过写入到标准 Api 在注册表中放信息。<br>用于获取和设置值的静态方法<br>在.NET Framework 2.0 版中， Registry 类还包含 staticGetValue 和 SetValue 用于设置和从注册表项中检索值的方法。 这些方法都将打开和关闭注册表项的每个使用它们，因此它们不会执行的时间以及中的类似方法 RegistryKey 类，当您访问大量的值。<br>RegistryKey 类还提供了允许您设置的注册表项，以进行检索之前，测试一个值的数据类型并删除注册表项的 Windows 访问控制安全性的方法。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h3><p><strong>下面的代码示例演示如何检索 HKEY_USERS 项的子项并打印到屏幕的名称。 使用 OpenSubKey 方法来创建感兴趣的特定子项的一个实例。 然后，可以使用中的其他操作 RegistryKey 来操作该注册表项。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Win32;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Reg</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create a RegistryKey, which will access the HKEY_USERS</span></span><br><span class="line">        <span class="comment">// key in the registry of this machine.</span></span><br><span class="line">        RegistryKey rk = Registry.Users;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print out the keys.</span></span><br><span class="line">        PrintKeys(rk);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">PrintKeys</span>(<span class="params">RegistryKey rkey</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Retrieve all the subkeys for the specified key.</span></span><br><span class="line">        String [] names = rkey.GetSubKeyNames();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> icount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Subkeys of &quot;</span> + rkey.Name);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;-----------------------------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print the contents of the array to the console.</span></span><br><span class="line">        <span class="keyword">foreach</span> (String s <span class="keyword">in</span> names) &#123;</span><br><span class="line">            Console.WriteLine(s);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The following code puts a limit on the number</span></span><br><span class="line">            <span class="comment">// of keys displayed.  Comment it out to print the</span></span><br><span class="line">            <span class="comment">// complete list.</span></span><br><span class="line">            icount++;</span><br><span class="line">            <span class="keyword">if</span> (icount &gt;= <span class="number">10</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h3><p><strong>下面的代码示例将多个数据类型的值存储在一个示例键中创建密钥，因为它这样做了，然后检索并显示的值。 该示例演示如何存储和检索默认 （无名） 的名称&#x2F;值对，以及如何使用 defaultValue 名称&#x2F;值对不存在时。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Win32;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// The name of the key must include a valid root.</span></span><br><span class="line">        <span class="keyword">const</span> <span class="built_in">string</span> userRoot = <span class="string">&quot;HKEY_CURRENT_USER&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="built_in">string</span> subkey = <span class="string">&quot;RegistrySetValueExample&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="built_in">string</span> keyName = userRoot + <span class="string">&quot;\\&quot;</span> + subkey;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// An int value can be stored without specifying the</span></span><br><span class="line">        <span class="comment">// registry data type, but long values will be stored</span></span><br><span class="line">        <span class="comment">// as strings unless you specify the type. Note that</span></span><br><span class="line">        <span class="comment">// the int is stored in the default name/value</span></span><br><span class="line">        <span class="comment">// pair.</span></span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;&quot;</span>, <span class="number">5280</span>);</span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestLong&quot;</span>, <span class="number">12345678901234</span>,</span><br><span class="line">            RegistryValueKind.QWord);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Strings with expandable environment variables are</span></span><br><span class="line">        <span class="comment">// stored as ordinary strings unless you specify the</span></span><br><span class="line">        <span class="comment">// data type.</span></span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestExpand&quot;</span>, <span class="string">&quot;My path: %path%&quot;</span>);</span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestExpand2&quot;</span>, <span class="string">&quot;My path: %path%&quot;</span>,</span><br><span class="line">            RegistryValueKind.ExpandString);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Arrays of strings are stored automatically as </span></span><br><span class="line">        <span class="comment">// MultiString. Similarly, arrays of Byte are stored</span></span><br><span class="line">        <span class="comment">// automatically as Binary.</span></span><br><span class="line">        <span class="built_in">string</span>[] strings = &#123;<span class="string">&quot;One&quot;</span>, <span class="string">&quot;Two&quot;</span>, <span class="string">&quot;Three&quot;</span>&#125;;</span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestArray&quot;</span>, strings);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Your default value is returned if the name/value pair</span></span><br><span class="line">        <span class="comment">// does not exist.</span></span><br><span class="line">        <span class="built_in">string</span> noSuch = (<span class="built_in">string</span>) Registry.GetValue(keyName, </span><br><span class="line">            <span class="string">&quot;NoSuchName&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Return this default if NoSuchName does not exist.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;\r\nNoSuchName: &#123;0&#125;&quot;</span>, noSuch);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Retrieve the int and long values, specifying </span></span><br><span class="line">        <span class="comment">// numeric default values in case the name/value pairs</span></span><br><span class="line">        <span class="comment">// do not exist. The int value is retrieved from the</span></span><br><span class="line">        <span class="comment">// default (nameless) name/value pair for the key.</span></span><br><span class="line">        <span class="built_in">int</span> tInteger = (<span class="built_in">int</span>) Registry.GetValue(keyName, <span class="string">&quot;&quot;</span>, <span class="number">-1</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;(Default): &#123;0&#125;&quot;</span>, tInteger);</span><br><span class="line">        <span class="built_in">long</span> tLong = (<span class="built_in">long</span>) Registry.GetValue(keyName, <span class="string">&quot;TestLong&quot;</span>,</span><br><span class="line">            <span class="built_in">long</span>.MinValue);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;TestLong: &#123;0&#125;&quot;</span>, tLong);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// When retrieving a MultiString value, you can specify</span></span><br><span class="line">        <span class="comment">// an array for the default return value. </span></span><br><span class="line">        <span class="built_in">string</span>[] tArray = (<span class="built_in">string</span>[]) Registry.GetValue(keyName,</span><br><span class="line">            <span class="string">&quot;TestArray&quot;</span>,</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">string</span>[] &#123;<span class="string">&quot;Default if TestArray does not exist.&quot;</span>&#125;);</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>; i&lt;tArray.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;TestArray(&#123;0&#125;): &#123;1&#125;&quot;</span>, i, tArray[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// A string with embedded environment variables is not</span></span><br><span class="line">        <span class="comment">// expanded if it was stored as an ordinary string.</span></span><br><span class="line">        <span class="built_in">string</span> tExpand = (<span class="built_in">string</span>) Registry.GetValue(keyName,</span><br><span class="line">             <span class="string">&quot;TestExpand&quot;</span>, </span><br><span class="line">             <span class="string">&quot;Default if TestExpand does not exist.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;TestExpand: &#123;0&#125;&quot;</span>, tExpand);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// A string stored as ExpandString is expanded.</span></span><br><span class="line">        <span class="built_in">string</span> tExpand2 = (<span class="built_in">string</span>) Registry.GetValue(keyName,</span><br><span class="line">            <span class="string">&quot;TestExpand2&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Default if TestExpand2 does not exist.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;TestExpand2: &#123;0&#125;...&quot;</span>,</span><br><span class="line">            tExpand2.Substring(<span class="number">0</span>, <span class="number">40</span>));</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;\r\nUse the registry editor to examine the key.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Press the Enter key to delete the key.&quot;</span>);</span><br><span class="line">        Console.ReadLine();</span><br><span class="line">        Registry.CurrentUser.DeleteSubKey(subkey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This code example produces output similar to the following:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//NoSuchName: Return this default if NoSuchName does not exist.</span></span><br><span class="line"><span class="comment">//(Default): 5280</span></span><br><span class="line"><span class="comment">//TestLong: 12345678901234</span></span><br><span class="line"><span class="comment">//TestArray(0): One</span></span><br><span class="line"><span class="comment">//TestArray(1): Two</span></span><br><span class="line"><span class="comment">//TestArray(2): Three</span></span><br><span class="line"><span class="comment">//TestExpand: My path: %path%</span></span><br><span class="line"><span class="comment">//TestExpand2: My path: D:\Program Files\Microsoft.NET\...</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Use the registry editor to examine the key.</span></span><br><span class="line"><span class="comment">//Press the Enter key to delete the key.</span></span><br></pre></td></tr></table></figure><h1 id="RegistryKey-类"><a href="#RegistryKey-类" class="headerlink" title="RegistryKey 类"></a>RegistryKey 类</h1><img src="https://img-blog.csdn.net/20170313154357183?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313154403933?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h1 id="C-注册表项的创建，打开与删除"><a href="#C-注册表项的创建，打开与删除" class="headerlink" title="C#注册表项的创建，打开与删除"></a>C#注册表项的创建，打开与删除</h1><h2 id="1：创建"><a href="#1：创建" class="headerlink" title="1：创建"></a>1：创建</h2><p><strong>创建注册表项主要用到RegistryKey 的CreateSubKey()方法。如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">RegistryKey software = key.CreateSubKey(<span class="string">&quot;software\\test&quot;</span>);</span><br><span class="line"><span class="comment">//在HKEY_LOCAL_MACHINE\SOFTWARE下新建名为test的注册表项。如果已经存在则不影响！</span></span><br></pre></td></tr></table></figure><h2 id="2：打开"><a href="#2：打开" class="headerlink" title="2：打开"></a>2：打开</h2><p><strong>打开注册表项主要用到RegistryKey 的OpenSubKey()方法。如：<br>注意，如果该注册表项不存在，这调用这个方法会抛出异常</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">RegistryKey software = key.OpenSubKey(<span class="string">&quot;software\\test&quot;</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//注意该方法后面还可以有一个布尔型的参数，true表示可以写入。</span></span><br></pre></td></tr></table></figure><h2 id="3：删除"><a href="#3：删除" class="headerlink" title="3：删除"></a>3：删除</h2><p><strong>删除注册表项主要用到RegistryKey 的DeleteSubKey()方法。如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">key.DeleteSubKey(<span class="string">&quot;software\\test&quot;</span>,<span class="literal">true</span>); <span class="comment">//该方法无返回值，直接调用即可</span></span><br><span class="line">key.Close();</span><br></pre></td></tr></table></figure><p><strong>注意，如果该注册表项不存在，这调用这个方法会抛出异常</strong></p><h1 id="键值的创建-设置值、修改-，读取和删除"><a href="#键值的创建-设置值、修改-，读取和删除" class="headerlink" title="键值的创建(设置值、修改)，读取和删除"></a>键值的创建(设置值、修改)，读取和删除</h1><h2 id="1：创建-设置值、修改"><a href="#1：创建-设置值、修改" class="headerlink" title="1：创建(设置值、修改)"></a>1：创建(设置值、修改)</h2><p><strong>对键值的创建修改等操作主要用到RegistryKey 的SetValue()方法</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">RegistryKey software = key.OpenSubKey(<span class="string">&quot;software\\test&quot;</span>,<span class="literal">true</span>); <span class="comment">//该项必须已存在</span></span><br><span class="line">software.SetValue(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;博客园&quot;</span>);</span><br><span class="line"><span class="comment">//在HKEY_LOCAL_MACHINE\SOFTWARE\test下创建一个名为“test”，值为“博客园”的键值。如果该键值原本已经存在，则会修改替换原来的键值，如果不存在则是创建该键值。</span></span><br><span class="line"><span class="comment">// 注意：SetValue()还有第三个参数，主要是用于设置键值的类型，如：字符串，二进制，Dword等等~~默认是字符串。如：</span></span><br><span class="line"><span class="comment">// software.SetValue(&quot;test&quot;, &quot;0&quot;, RegistryValueKind.DWord); //二进制信息</span></span><br><span class="line">Key.Close();</span><br></pre></td></tr></table></figure><h2 id="2：读取"><a href="#2：读取" class="headerlink" title="2：读取"></a>2：读取</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> info = <span class="string">&quot;&quot;</span>;</span><br><span class="line">RegistryKey Key;</span><br><span class="line">Key = Registry.LocalMachine;</span><br><span class="line">myreg = Key.OpenSubKey(<span class="string">&quot;software\\test&quot;</span>);</span><br><span class="line"><span class="comment">// myreg = Key.OpenSubKey(&quot;software\\test&quot;,true);</span></span><br><span class="line">info = myreg.GetValue(<span class="string">&quot;test&quot;</span>).ToString();</span><br><span class="line">myreg.Close();</span><br></pre></td></tr></table></figure><p><strong>info结果为：博客园</strong></p><h2 id="3：删除-1"><a href="#3：删除-1" class="headerlink" title="3：删除"></a>3：删除</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey delKey = Registry.LocalMachine.OpenSubKey(<span class="string">&quot;Software\\test&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">delKey.DeleteValue(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">delKey.Close();</span><br></pre></td></tr></table></figure><blockquote><p><strong>细心的读者可能发现了第二个例子中OpenSubKey()方法参数与其他例子的不同。<br>如果你要修改键值，包括创建、设置、删除键值等都要在方法后面加个布尔参数，设置为true，表示可写可改；如果仅仅只是读取键值可以不加，此时可写关闭，你不能再往里写值(当然，你要加也可以true)！<br>还有读者提到读写默认键值的问题，主要在设置、读取的方法中将键名置空则就是对默认键值的操作。<br>如：<br>software.SetValue(“”, “博客园”); &#x2F;&#x2F; 在HKEY_LOCAL_MACHINE\SOFTWARE\test修改默认键值的值为“博客园”。读取类似！<br>另外，默认的键值是不能删除的，所以不要用DeleteValue()方法去删除，会抛出异常的！</strong></p></blockquote><h1 id="判断注册表项是否存在"><a href="#判断注册表项是否存在" class="headerlink" title="判断注册表项是否存在"></a>判断注册表项是否存在</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsRegeditItemExist</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> [] subkeyNames;  </span><br><span class="line">    RegistryKey hkml = Registry.LocalMachine;  </span><br><span class="line">    RegistryKey software = hkml.OpenSubKey(<span class="string">&quot;SOFTWARE&quot;</span>);  </span><br><span class="line">    <span class="comment">//RegistryKey software = hkml.OpenSubKey(&quot;SOFTWARE&quot;, true);  </span></span><br><span class="line">    subkeyNames = software.GetSubKeyNames();  </span><br><span class="line">    <span class="comment">//取得该项下所有子项的名称的序列，并传递给预定的数组中  </span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">string</span> keyName <span class="keyword">in</span> subkeyNames)   </span><br><span class="line">    <span class="comment">//遍历整个数组  </span></span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (keyName == <span class="string">&quot;test&quot;</span>)  </span><br><span class="line">        <span class="comment">//判断子项的名称  </span></span><br><span class="line">        &#123;   </span><br><span class="line">            hkml.Close();  </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span> ;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    hkml.Close();  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四：判断键值是否存在这里写代码片"><a href="#四：判断键值是否存在这里写代码片" class="headerlink" title="四：判断键值是否存在这里写代码片"></a>四：判断键值是否存在这里写代码片</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsRegeditKeyExit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">string</span>[] subkeyNames;</span><br><span class="line">  RegistryKey hkml = Registry.LocalMachine;</span><br><span class="line">  RegistryKey software = hkml.OpenSubKey(<span class="string">&quot;SOFTWARE\\test&quot;</span>);</span><br><span class="line">  <span class="comment">//RegistryKey software = hkml.OpenSubKey(&quot;SOFTWARE\\test&quot;, true);</span></span><br><span class="line">  subkeyNames = software.GetValueNames();</span><br><span class="line">  <span class="comment">//取得该项下所有键值的名称的序列，并传递给预定的数组中</span></span><br><span class="line">  <span class="keyword">foreach</span> (<span class="built_in">string</span> keyName  <span class="keyword">in</span> subkeyNames)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (keyName ==  <span class="string">&quot;test&quot;</span>) <span class="comment">//判断键值的名称</span></span><br><span class="line">    &#123;</span><br><span class="line">        hkml.Close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;    </span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  hkml.Close();</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/younghaiqing/article/details/61918968">C#读写注册表</a></li><li><a href="https://www.cnblogs.com/txw1958/archive/2012/08/01/csharp-regidit.html">C#操作注册表</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> Windows </category>
          
          <category> 注册表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 注册表 </tag>
            
            <tag> 读写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#获取硬件信息（封装类）</title>
      <link href="/posts/2407017966.html"/>
      <url>/posts/2407017966.html</url>
      
        <content type="html"><![CDATA[<h1 id="所获取的系统信息"><a href="#所获取的系统信息" class="headerlink" title="所获取的系统信息"></a>所获取的系统信息</h1><p>您可以获取您的系统信息，如处理器 ID、硬盘序列号、系统 MAC 地址、主板制造商、主板产品 ID、CD-DVD 驱动器路径、BIOS 制造商、BIOS 序列号、BIOS 标题、系统帐户名称、物理 RAM 内存, 主板上的 RAM 插槽编号, CPU 制造商, CPU 的当前时钟速度, 默认 IP 网关, CPU 速度, 获取当前语言, 系统信息, 处理器信息, 获取计算机名称。</p><h1 id="创建一个-Windows-窗体应用程序（form1）"><a href="#创建一个-Windows-窗体应用程序（form1）" class="headerlink" title="创建一个 Windows 窗体应用程序（form1）"></a>创建一个 Windows 窗体应用程序（form1）</h1><p>直接默认创建即可。</p><h1 id="添加参考（也可以在cs中添加using来使用）"><a href="#添加参考（也可以在cs中添加using来使用）" class="headerlink" title="添加参考（也可以在cs中添加using来使用）"></a>添加参考（也可以在cs中添加using来使用）</h1><p>添加“ System.Management ”的引用以使用C#获取计算机硬件信息。<br>请参见下图以在项目中添加参考。</p><img src="https://img-blog.csdnimg.cn/315bdf4681894d13b754879a91dbf0bd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWxsd2F5Mg==,size_17,color_FFFFFF,t_70,g_se,x_16"><p><strong>添加参考:</strong></p><img src="https://img-blog.csdnimg.cn/b79ce6757c4941629d1a6cf25e569664.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWxsd2F5Mg==,size_20,color_FFFFFF,t_70,g_se,x_16"><p>添加“System.Management”的引用</p><h1 id="添加类文件"><a href="#添加类文件" class="headerlink" title="添加类文件"></a>添加类文件</h1><p>您可能会阅读：<a href="https://codescratcher.com/net-c/passing-parameters-from-one-window-to-another-window-c/">将参数从一个窗口传递到另一个窗口 c#</a></p><p>在您的项目中将类文件名添加为“ HardwareInfo.cs ”。在您的类文件中添加以下代码。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Management;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">HardwareInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Processor Id.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetProcessorId</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;win32_processor&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        String Id = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line"> </span><br><span class="line">            Id = mo.Properties[<span class="string">&quot;processorID&quot;</span>].Value.ToString();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Id;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving HDD Serial No.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetHDDSerialNo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mangnmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_LogicalDisk&quot;</span>);</span><br><span class="line">        ManagementObjectCollection mcol = mangnmt.GetInstances();</span><br><span class="line">        <span class="built_in">string</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject strt <span class="keyword">in</span> mcol)</span><br><span class="line">        &#123;</span><br><span class="line">            result += Convert.ToString(strt[<span class="string">&quot;VolumeSerialNumber&quot;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving System MAC Address.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetMACAddress</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_NetworkAdapterConfiguration&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        <span class="built_in">string</span> MACAddress = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MACAddress == String.Empty)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((<span class="built_in">bool</span>)mo[<span class="string">&quot;IPEnabled&quot;</span>] == <span class="literal">true</span>) MACAddress = mo[<span class="string">&quot;MacAddress&quot;</span>].ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            mo.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        MACAddress = MACAddress.Replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> MACAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Motherboard Manufacturer.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBoardMaker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BaseBoard&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Manufacturer&quot;</span>).ToString();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Board Maker: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Motherboard Product Id.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBoardProductId</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BaseBoard&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Product&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Product: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving CD-DVD Drive Path.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetCdRomDrive</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_CDROMDrive&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Drive&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;CD ROM Drive Letter: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving BIOS Maker.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBIOSmaker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Manufacturer&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Maker: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving BIOS Serial No.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBIOSserNo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;SerialNumber&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Serial Number: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving BIOS Caption.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBIOScaption</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Caption&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Caption: Unknown&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving System Account Name.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetAccountName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_UserAccount&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line"> </span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Name&quot;</span>).ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User Account Name: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Physical Ram Memory.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetPhysicalMemory</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementScope oMs = <span class="keyword">new</span> ManagementScope();</span><br><span class="line">        ObjectQuery oQuery = <span class="keyword">new</span> ObjectQuery(<span class="string">&quot;SELECT Capacity FROM Win32_PhysicalMemory&quot;</span>);</span><br><span class="line">        ManagementObjectSearcher oSearcher = <span class="keyword">new</span> ManagementObjectSearcher(oMs, oQuery);</span><br><span class="line">        ManagementObjectCollection oCollection = oSearcher.Get();</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">long</span> MemSize = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">long</span> mCap = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// In case more than one Memory sticks are installed</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> oCollection)</span><br><span class="line">        &#123;</span><br><span class="line">            mCap = Convert.ToInt64(obj[<span class="string">&quot;Capacity&quot;</span>]);</span><br><span class="line">            MemSize += mCap;</span><br><span class="line">        &#125;</span><br><span class="line">        MemSize = (MemSize / <span class="number">1024</span>) / <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> MemSize.ToString() + <span class="string">&quot;MB&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving No of Ram Slot on Motherboard.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetNoRamSlots</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">int</span> MemSlots = <span class="number">0</span>;</span><br><span class="line">        ManagementScope oMs = <span class="keyword">new</span> ManagementScope();</span><br><span class="line">        ObjectQuery oQuery2 = <span class="keyword">new</span> ObjectQuery(<span class="string">&quot;SELECT MemoryDevices FROM Win32_PhysicalMemoryArray&quot;</span>);</span><br><span class="line">        ManagementObjectSearcher oSearcher2 = <span class="keyword">new</span> ManagementObjectSearcher(oMs, oQuery2);</span><br><span class="line">        ManagementObjectCollection oCollection2 = oSearcher2.Get();</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> oCollection2)</span><br><span class="line">        &#123;</span><br><span class="line">            MemSlots = Convert.ToInt32(obj[<span class="string">&quot;MemoryDevices&quot;</span>]);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> MemSlots.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Get CPU Temprature.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> method for retrieving the CPU Manufacturer</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> using the WMI class</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> CPU Manufacturer</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetCPUManufacturer</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">string</span> cpuMan = String.Empty;</span><br><span class="line">        <span class="comment">//create an instance of the Managemnet class with the</span></span><br><span class="line">        <span class="comment">//Win32_Processor class</span></span><br><span class="line">        ManagementClass mgmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">        <span class="comment">//create a ManagementObjectCollection to loop through</span></span><br><span class="line">        ManagementObjectCollection objCol = mgmt.GetInstances();</span><br><span class="line">        <span class="comment">//start our loop for all processors found</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> objCol)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cpuMan == String.Empty)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// only return manufacturer from first CPU</span></span><br><span class="line">                cpuMan = obj.Properties[<span class="string">&quot;Manufacturer&quot;</span>].Value.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cpuMan;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> method to retrieve the CPU&#x27;s current</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> clock speed using the WMI class</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Clock speed</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">GetCPUCurrentClockSpeed</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">int</span> cpuClockSpeed = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//create an instance of the Managemnet class with the</span></span><br><span class="line">        <span class="comment">//Win32_Processor class</span></span><br><span class="line">        ManagementClass mgmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">        <span class="comment">//create a ManagementObjectCollection to loop through</span></span><br><span class="line">        ManagementObjectCollection objCol = mgmt.GetInstances();</span><br><span class="line">        <span class="comment">//start our loop for all processors found</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> objCol)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cpuClockSpeed == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// only return cpuStatus from first CPU</span></span><br><span class="line">                cpuClockSpeed = Convert.ToInt32(obj.Properties[<span class="string">&quot;CurrentClockSpeed&quot;</span>].Value.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//return the status</span></span><br><span class="line">        <span class="keyword">return</span> cpuClockSpeed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> method to retrieve the network adapters</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> default IP gateway using WMI</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> adapters default IP gateway</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetDefaultIPGateway</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//create out management class object using the</span></span><br><span class="line">        <span class="comment">//Win32_NetworkAdapterConfiguration class to get the attributes</span></span><br><span class="line">        <span class="comment">//of the network adapter</span></span><br><span class="line">        ManagementClass mgmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_NetworkAdapterConfiguration&quot;</span>);</span><br><span class="line">        <span class="comment">//create our ManagementObjectCollection to get the attributes with</span></span><br><span class="line">        ManagementObjectCollection objCol = mgmt.GetInstances();</span><br><span class="line">        <span class="built_in">string</span> gateway = String.Empty;</span><br><span class="line">        <span class="comment">//loop through all the objects we find</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> objCol)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (gateway == String.Empty)  <span class="comment">// only return MAC Address from first card</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//grab the value from the first network adapter we find</span></span><br><span class="line">                <span class="comment">//you can change the string to an array and get all</span></span><br><span class="line">                <span class="comment">//network adapters found as well</span></span><br><span class="line">                <span class="comment">//check to see if the adapter&#x27;s IPEnabled</span></span><br><span class="line">                <span class="comment">//equals true</span></span><br><span class="line">                <span class="keyword">if</span> ((<span class="built_in">bool</span>)obj[<span class="string">&quot;IPEnabled&quot;</span>] == <span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    gateway = obj[<span class="string">&quot;DefaultIPGateway&quot;</span>].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//dispose of our object</span></span><br><span class="line">            obj.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//replace the &quot;:&quot; with an empty space, this could also</span></span><br><span class="line">        <span class="comment">//be removed if you wish</span></span><br><span class="line">        gateway = gateway.Replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//return the mac address</span></span><br><span class="line">        <span class="keyword">return</span> gateway;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieve CPU Speed.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">double</span>? GetCpuSpeedInGHz()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">double</span>? GHz = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">using</span> (ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> mc.GetInstances())</span><br><span class="line">            &#123;</span><br><span class="line">                GHz = <span class="number">0.001</span> * (UInt32)mo.Properties[<span class="string">&quot;CurrentClockSpeed&quot;</span>].Value;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> GHz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Current Language</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetCurrentLanguage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;CurrentLanguage&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Maker: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Current Language.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetOSInformation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;SELECT * FROM Win32_OperatingSystem&quot;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ((<span class="built_in">string</span>)wmi[<span class="string">&quot;Caption&quot;</span>]).Trim() + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)wmi[<span class="string">&quot;Version&quot;</span>] + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)wmi[<span class="string">&quot;OSArchitecture&quot;</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Maker: Unknown&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Processor Information.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetProcessorInformation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;win32_processor&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        String info = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> name = (<span class="built_in">string</span>)mo[<span class="string">&quot;Name&quot;</span>];</span><br><span class="line">            name = name.Replace(<span class="string">&quot;(TM)&quot;</span>, <span class="string">&quot;™&quot;</span>).Replace(<span class="string">&quot;(tm)&quot;</span>, <span class="string">&quot;™&quot;</span>).Replace(<span class="string">&quot;(R)&quot;</span>, <span class="string">&quot;®&quot;</span>).Replace(<span class="string">&quot;(r)&quot;</span>, <span class="string">&quot;®&quot;</span>).Replace(<span class="string">&quot;(C)&quot;</span>, <span class="string">&quot;©&quot;</span>).Replace(<span class="string">&quot;(c)&quot;</span>, <span class="string">&quot;©&quot;</span>).Replace(<span class="string">&quot;    &quot;</span>, <span class="string">&quot; &quot;</span>).Replace(<span class="string">&quot;  &quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line"> </span><br><span class="line">            info = name + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)mo[<span class="string">&quot;Caption&quot;</span>] + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)mo[<span class="string">&quot;SocketDesignation&quot;</span>];</span><br><span class="line">            <span class="comment">//mo.Properties[&quot;Name&quot;].Value.ToString();</span></span><br><span class="line">            <span class="comment">//break;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Computer Name.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetComputerName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_ComputerSystem&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        String info = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line">            info = (<span class="built_in">string</span>)mo[<span class="string">&quot;Name&quot;</span>];</span><br><span class="line">            <span class="comment">//mo.Properties[&quot;Name&quot;].Value.ToString();</span></span><br><span class="line">            <span class="comment">//break;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="设计窗口形式"><a href="#设计窗口形式" class="headerlink" title="设计窗口形式"></a>设计窗口形式</h1><p>请参见下图设计您的 Windows 窗体并生成按钮单击事件以使用 C# 获取计算机硬件信息。</p><p><strong>设计形式：</strong></p><img src="https://img-blog.csdnimg.cn/img_convert/3ad6d4278b9ff44dbc06418abb9eb73c.png"><h1 id="添加代码隐藏源"><a href="#添加代码隐藏源" class="headerlink" title="添加代码隐藏源"></a>添加代码隐藏源</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HardwareInformation</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">HardwareInfo_CodeScratcher</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HardwareInfo_CodeScratcher</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HardwareInfo_CodeScratcher_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ProcId_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblPid.Text = HardwareInfo.GetProcessorId();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HDDSNo_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblHDD.Text = HardwareInfo.GetHDDSerialNo();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BoardMake_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblBM.Text = HardwareInfo.GetBoardMaker();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BIOSMkr_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblBios.Text = HardwareInfo.GetBIOSmaker();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PhysicalMem_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblPM.Text = HardwareInfo.GetPhysicalMemory();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CPUSpeed_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblCS.Text = HardwareInfo.GetCpuSpeedInGHz().ToString();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CPUMkr_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblCM.Text = HardwareInfo.GetCPUManufacturer();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行项目并检查最终输出"><a href="#运行项目并检查最终输出" class="headerlink" title="运行项目并检查最终输出"></a>运行项目并检查最终输出</h1><p><strong>硬件信息 - 输出：</strong></p><img src="https://img-blog.csdnimg.cn/img_convert/358df9e80341ab221277746f8c5e6bfc.gif"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/allway2/article/details/123154410">使用 C# 获取计算机硬件信息</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 硬件信息 </tag>
            
            <tag> 自定义类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#加密之一（获取硬件信息base64加解密）</title>
      <link href="/posts/376366368.html"/>
      <url>/posts/376366368.html</url>
      
        <content type="html"><![CDATA[<h1 id="加解密作用和基本思路"><a href="#加解密作用和基本思路" class="headerlink" title="加解密作用和基本思路"></a>加解密作用和基本思路</h1><p>在我们编写好一款软件后，我们不想别人盗用我们的软件，这时候我们可以采用注册的方式来保护我们的作品。这时候我们可能就需要简单了解一下加密解密技术，下面是我的简单总结：<br>第一步：程序获得运行机的唯一标示（比如：网卡号，CPU编号，硬盘号等等）。<br>第二步：程序将获得的唯一标示加密，然后有用户或者程序将加密后的标示发送给你。<br>第三步：你将加密后的标示解密（其实这时候你获得的就是：网卡号，CPU编号，硬盘号）然后你再将网卡号，CPU编号，硬盘号加密发送给客户注册。<br>第四步：程序将你发送的注册号进行解密，解密后的编号其实也是：网卡号，CPU编号，硬盘号。<br>第五步：每当程序启动，首先解密你发送的注册号，然后读取网卡号，CPU编号，硬盘号等等，最好进行验证，看两个标示是否一样。</p><h1 id="获取硬件信息并加密信息"><a href="#获取硬件信息并加密信息" class="headerlink" title="获取硬件信息并加密信息"></a>获取硬件信息并加密信息</h1><h2 id="程序获得运行机的唯一标示：硬盘号，CPU信息"><a href="#程序获得运行机的唯一标示：硬盘号，CPU信息" class="headerlink" title="程序获得运行机的唯一标示：硬盘号，CPU信息"></a>程序获得运行机的唯一标示：硬盘号，CPU信息</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取硬盘号</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetDiskID</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//获取硬盘ID</span></span><br><span class="line">    String HDid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_DiskDrive&quot;</span>);</span><br><span class="line">    ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">    <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">    &#123;</span><br><span class="line">      HDid = (<span class="built_in">string</span>)mo.Properties[<span class="string">&quot;Model&quot;</span>].Value;</span><br><span class="line">    &#125;</span><br><span class="line">    moc = <span class="literal">null</span>;</span><br><span class="line">    mc = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> HDid;</span><br><span class="line">  &#125;</span><br><span class="line">  catch</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">  &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取CPU信息</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetCpuInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">string</span> cpuInfo = <span class="string">&quot;&quot;</span>;<span class="comment">//cpu序列号</span></span><br><span class="line">    ManagementClass cimobject = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">    ManagementObjectCollection moc = cimobject.GetInstances();</span><br><span class="line">    <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">    &#123;</span><br><span class="line">      cpuInfo = mo.Properties[<span class="string">&quot;ProcessorId&quot;</span>].Value.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cpuInfo;</span><br><span class="line">  &#125;</span><br><span class="line">  catch</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">this</span>.senRegeditID.Enabled = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.GetId.Enabled = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="程序将获得的唯一标示加密"><a href="#程序将获得的唯一标示加密" class="headerlink" title="程序将获得的唯一标示加密"></a>程序将获得的唯一标示加密</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加密</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Encrypt</span>(<span class="params"><span class="built_in">string</span> PlainText</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> KEY_64 = <span class="string">&quot;dafei250&quot;</span>;</span><br><span class="line">  <span class="built_in">string</span> IV_64 = <span class="string">&quot;DAFEI500&quot;</span>;</span><br><span class="line">  <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">  <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">  DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">  <span class="built_in">int</span> i = cryptoProvider.KeySize;</span><br><span class="line">  MemoryStream ms = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">  CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateEncryptor(byKey, byIV), CryptoStreamMode.Write);</span><br><span class="line">  StreamWriter sw = <span class="keyword">new</span> StreamWriter(cst);</span><br><span class="line">  sw.Write(PlainText);</span><br><span class="line">  sw.Flush();</span><br><span class="line">  cst.FlushFinalBlock();</span><br><span class="line">  sw.Flush();</span><br><span class="line">  <span class="keyword">return</span> Convert.ToBase64String(ms.GetBuffer(), <span class="number">0</span>, (<span class="built_in">int</span>)ms.Length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="解密注册信息"><a href="#解密注册信息" class="headerlink" title="解密注册信息"></a>解密注册信息</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解密</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> CypherText</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> KEY_64 = <span class="string">&quot;haeren55&quot;</span>; <span class="comment">//必须是8个字符(64Bit)</span></span><br><span class="line">  <span class="built_in">string</span> IV_64 = <span class="string">&quot;HAEREN55&quot;</span>;  <span class="comment">//必须8个字符(64Bit)</span></span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">    <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">    <span class="built_in">byte</span>[] byEnc;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      byEnc = Convert.FromBase64String(CypherText);</span><br><span class="line">    &#125;</span><br><span class="line">    catch</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">    MemoryStream ms = <span class="keyword">new</span> MemoryStream(byEnc);</span><br><span class="line">    CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateDecryptor(byKey, byIV), CryptoStreamMode.Read);</span><br><span class="line">    StreamReader sr = <span class="keyword">new</span> StreamReader(cst);</span><br><span class="line">    <span class="keyword">return</span> sr.ReadToEnd();</span><br><span class="line">  &#125;</span><br><span class="line">  catch &#123; <span class="keyword">return</span> <span class="string">&quot;无法解密!&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自己测试代码"><a href="#自己测试代码" class="headerlink" title="自己测试代码"></a>自己测试代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 加密解密技术</span></span><br><span class="line">    <span class="built_in">string</span> Secretkey;</span><br><span class="line">    <span class="comment">//获取硬盘号</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetDiskID</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取硬盘ID</span></span><br><span class="line">            String HDid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_DiskDrive&quot;</span>);</span><br><span class="line">            ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">            <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">            &#123;</span><br><span class="line">                HDid = (<span class="built_in">string</span>)mo.Properties[<span class="string">&quot;Model&quot;</span>].Value;</span><br><span class="line">            &#125;</span><br><span class="line">            moc = <span class="literal">null</span>;</span><br><span class="line">            mc = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span> HDid;</span><br><span class="line">        &#125;</span><br><span class="line">        catch</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取CPU信息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetCpuInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> cpuInfo = <span class="string">&quot;&quot;</span>;<span class="comment">//cpu序列号</span></span><br><span class="line">            ManagementClass cimobject = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">            ManagementObjectCollection moc = cimobject.GetInstances();</span><br><span class="line">            <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">            &#123;</span><br><span class="line">                cpuInfo = mo.Properties[<span class="string">&quot;ProcessorId&quot;</span>].Value.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> cpuInfo;</span><br><span class="line">        &#125;</span><br><span class="line">        catch</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.senRegeditID.Enabled = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">this</span>.GetId.Enabled = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加密</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Encrypt</span>(<span class="params"><span class="built_in">string</span> PlainText</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">string</span> KEY_64 = <span class="string">&quot;dafei250&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> IV_64 = <span class="string">&quot;DAFEI500&quot;</span>;</span><br><span class="line">        <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">        <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">        DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">        <span class="built_in">int</span> i = cryptoProvider.KeySize;</span><br><span class="line">        System.IO.MemoryStream ms = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">        CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateEncryptor(byKey, byIV), CryptoStreamMode.Write);</span><br><span class="line">        StreamWriter sw = <span class="keyword">new</span> StreamWriter(cst);</span><br><span class="line">        sw.Write(PlainText);</span><br><span class="line">        sw.Flush();</span><br><span class="line">        cst.FlushFinalBlock();</span><br><span class="line">        sw.Flush();</span><br><span class="line">        <span class="keyword">return</span> Convert.ToBase64String(ms.GetBuffer(), <span class="number">0</span>, (<span class="built_in">int</span>)ms.Length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//解密</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> CypherText</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//string KEY_64 = &quot;haeren55&quot;; //必须是8个字符(64Bit)</span></span><br><span class="line">        <span class="comment">//string IV_64 = &quot;HAEREN55&quot;;  //必须8个字符(64Bit)</span></span><br><span class="line">        <span class="built_in">string</span> KEY_64 = <span class="string">&quot;dafei250&quot;</span>; <span class="comment">//加密解密的标头必须一致</span></span><br><span class="line">        <span class="built_in">string</span> IV_64 = <span class="string">&quot;DAFEI500&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">            <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">            <span class="built_in">byte</span>[] byEnc;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                byEnc = Convert.FromBase64String(CypherText);</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">            MemoryStream ms = <span class="keyword">new</span> MemoryStream(byEnc);</span><br><span class="line">            CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateDecryptor(byKey, byIV), CryptoStreamMode.Read);</span><br><span class="line">            StreamReader sr = <span class="keyword">new</span> StreamReader(cst);</span><br><span class="line">            <span class="keyword">return</span> sr.ReadToEnd();</span><br><span class="line">        &#125;</span><br><span class="line">        catch &#123; <span class="keyword">return</span> <span class="string">&quot;无法解密!&quot;</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">GetId_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        tBoxID.Text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Secretkey = GetDiskID() + GetCpuInfo();</span><br><span class="line">        UpdateTextBox(tBoxID, Secretkey);</span><br><span class="line">        Secretkey = Encrypt(Secretkey);</span><br><span class="line">        UpdateTextBox(tBoxID, Secretkey);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//Console.WriteLine();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">senRegeditID_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        UpdateTextBox(tBoxID, <span class="string">&quot;解密：&quot;</span>);</span><br><span class="line">        UpdateTextBox(tBoxID, Decrypt(Secretkey)); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/wzhk009/p/14206611.html">C#关于获取硬盘号、CPU信息，加密解密技术</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 加密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 加密 </tag>
            
            <tag> Base64 </tag>
            
            <tag> 硬件信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT加密之一（base64加解密）</title>
      <link href="/posts/2925598117.html"/>
      <url>/posts/2925598117.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用加解密方式"><a href="#常用加解密方式" class="headerlink" title="常用加解密方式"></a>常用加解密方式</h1><p>这里提供两种加解密的方法。<br>第一种方法：使用QByteArray的toBase64和fromBase64来实现。<br>第二种方法：使用<a href="https://so.csdn.net/so/search?q=base64&spm=1001.2101.3001.7020">base64</a>.cpp文件中的base64_encode和base64_decode来实现。<a href="https://download.csdn.net/download/weixin_43246170/85784129">下载地址</a></p><h1 id="加解密调用处理"><a href="#加解密调用处理" class="headerlink" title="加解密调用处理"></a>加解密调用处理</h1><p><strong>头文件.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> WIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtWidgets&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="class"><span class="keyword">class</span> <span class="title">Widget</span>;</span> &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Widget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">Widget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::Widget *ui;</span><br><span class="line"></span><br><span class="line">    QPushButton* m_encryptbtn;</span><br><span class="line">    QPushButton* m_decryptbtn;</span><br><span class="line">    QLineEdit* m_encryptedit;</span><br><span class="line">    QLineEdit* m_decryptedit;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// WIDGET_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>实现文件.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mycrypto.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    m_encryptbtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;encrypt&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">    m_decryptbtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;decrypt&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    m_decryptedit = <span class="keyword">new</span> <span class="built_in">QLineEdit</span>(<span class="keyword">this</span>);</span><br><span class="line">    m_encryptedit = <span class="keyword">new</span> <span class="built_in">QLineEdit</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    QGridLayout* lay = <span class="keyword">new</span> <span class="built_in">QGridLayout</span>(<span class="keyword">this</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_encryptedit,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_decryptedit,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_encryptbtn,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_decryptbtn,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setLayout</span>(lay);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(m_encryptbtn,&amp;QPushButton::clicked,<span class="keyword">this</span>,[=]()&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0 <span class="comment">//方法一</span></span></span><br><span class="line">        m_decryptedit-&gt;<span class="built_in">setText</span>(m_encryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toLocal8Bit</span>().<span class="built_in">toBase64</span>());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">//方法二</span></span></span><br><span class="line">        m_decryptedit-&gt;<span class="built_in">setText</span>(MyCrypto::<span class="built_in">encrypt</span>(m_encryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toStdString</span>()).<span class="built_in">data</span>());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">connect</span>(m_decryptbtn,&amp;QPushButton::clicked,<span class="keyword">this</span>,[=]()&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line">        m_encryptedit-&gt;<span class="built_in">setText</span>(QByteArray::<span class="built_in">fromBase64</span>(m_decryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toLocal8Bit</span>()));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        m_encryptedit-&gt;<span class="built_in">setText</span>(MyCrypto::<span class="built_in">decrypt</span>(m_decryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toStdString</span>()).<span class="built_in">data</span>());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="方法二加解密-base64-decode-处理"><a href="#方法二加解密-base64-decode-处理" class="headerlink" title="方法二加解密 base64_decode 处理"></a>方法二加解密 base64_decode 处理</h1><p><strong>.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYCRYPTO_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYCRYPTO_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDataStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCrypto</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">const</span> std::string <span class="title">encrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp; orignal)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">const</span> std::string <span class="title">decrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp; orignal)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MYCRYPTO_H</span></span></span><br></pre></td></tr></table></figure><p><strong>.c</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mycrypto.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;base64.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief MyCrypto::encrypt  加密</span></span><br><span class="line"><span class="comment"> * @param orignal</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> std::string <span class="title">MyCrypto::encrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp;orignal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string encoded = <span class="built_in">base64_encode</span>(<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>*&gt;(orignal.<span class="built_in">c_str</span>()), orignal.<span class="built_in">length</span>());</span><br><span class="line">    <span class="keyword">return</span> encoded;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief MyCrypto::decrypt 解密</span></span><br><span class="line"><span class="comment"> * @param orignal</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> std::string <span class="title">MyCrypto::decrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp;orignal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string decoded = <span class="built_in">base64_decode</span>(orignal);</span><br><span class="line">    <span class="keyword">return</span> decoded;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/weixin_43246170/article/details/125468689">qt base64加解密</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> QT </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> Base64 </tag>
            
            <tag> QT </tag>
            
            <tag> 硬件信息读取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QT实现硬件注册机-win</title>
      <link href="/posts/1253920059.html"/>
      <url>/posts/1253920059.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用加密方式"><a href="#常用加密方式" class="headerlink" title="常用加密方式"></a>常用加密方式</h1><p>在工作中，为了方便项目调试，一般情况下我们都会选择开发一个上位机来实现简单的控制和数据读取的功能；但是，这个工具仅限于研发人员使用。为了防止别有用心的测试或者其它人员将这个APP通过U盘的形式拷贝走然后到另外一台电脑上运行，我们可以有以下两种简单的设计方案(以下内容默认用户已了解QT上位机开发，故屏蔽许多细节):</p><ol><li><p>设计一个简单的输入密码逻辑，当输入密码与自己设定的密码匹配时，即进入软件界面。这种方法比较简单，也很容易被破解。</p></li><li><p>提前通过另外一个软件读取本机的硬件信息(我们称之为注册机)，然后通过某种编码格式将该信息编码为其它的格式并生成一个文件(将该文件放到系统较为隐蔽的目录下)。当我们使用的APP打开时，按照约定格式打开并将该文件里的数据转换为硬件信息，然后进行匹配，如果发现没有该文件或者硬件信息不匹配，则提示软件未注册，否则，正常打开该软件。</p></li></ol><p>第一种方法比较简单，初学QT应用编程的小白都可以很容易将它实现，我们就不多说了。我们重点来讲解一下第二种方法的实现。</p><p>以下几个命令可以在Window cmd上运行即可以看到对应的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">获取cpu名称</span><br><span class="line">wmic cpu get Name</span><br><span class="line">获取cpu核心数</span><br><span class="line">wmic cpu get NumberOfCores</span><br><span class="line">获取cpu线程数</span><br><span class="line">wmic cpu get NumberOfLogicalProcessors</span><br><span class="line">查询cpu序列号</span><br><span class="line">wmic cpu get processorid</span><br><span class="line">查询主板序列号</span><br><span class="line">wmic baseboard get serialnumber</span><br><span class="line">查询BIOS序列号</span><br><span class="line">wmic bios get serialnumber</span><br><span class="line">查看硬盘</span><br><span class="line">wmic diskdrive get serialnumber</span><br></pre></td></tr></table></figure><p>这是我的电脑硬件信息：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/SYiceJK78CI835ugRj3Erh6lloPQXNNmKyUK6j8EVhO2DwNibQVYL0x3JzflqE5ic4LfmNENFzLwS62ktDcFFyyQg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"><p>其中，CPU序列号是一个唯一的ID号，它是厂家在制造CPU的时候烧入到内部的。我在工作中主要使用这个来进行加密，当然你也可以使用其它的内容。</p><h1 id="注册机原理"><a href="#注册机原理" class="headerlink" title="注册机原理"></a>注册机原理</h1><p>接下来我们可以实现一个简单的注册机逻辑：</p><ul><li>实现获取硬件信息接口</li><li>将硬件信息经过Base64格式转换</li><li>显示Base64格式转换为的结果</li></ul><blockquote><p><strong>参考代码实现：</strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取cpu名称：wmic cpu get Name</span></span><br><span class="line"><span class="comment">//获取cpu核心数：wmic cpu get NumberOfCores</span></span><br><span class="line"><span class="comment">//获取cpu线程数：wmic cpu get NumberOfLogicalProcessors</span></span><br><span class="line"><span class="comment">//查询cpu序列号：wmic cpu get processorid</span></span><br><span class="line"><span class="comment">//查询主板序列号：wmic baseboard get serialnumber</span></span><br><span class="line"><span class="comment">//查询BIOS序列号：wmic bios get serialnumber</span></span><br><span class="line"><span class="comment">//查看硬盘：wmic diskdrive get serialnumber</span></span><br><span class="line"><span class="function">QString <span class="title">MainWindow::getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QByteArray <span class="title">MainWindow::Encode</span><span class="params">(QByteArray data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> data.<span class="built_in">toBase64</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;注册机&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_GenerateCode_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString Code = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="comment">//打开文件，不存在则创建</span></span><br><span class="line">    file.<span class="built_in">open</span>(QIODevice::ReadWrite | QIODevice::Text);</span><br><span class="line">    <span class="comment">//写入文件需要字符串为QByteArray格式</span></span><br><span class="line">    <span class="keyword">if</span>(file.<span class="built_in">write</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>())) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ui-&gt;CodeDisplay-&gt;<span class="built_in">setText</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>()));</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">NULL</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册成功&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">NULL</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册失败&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编译运行后，当我们点击生成注册码时，则会显示硬件信息通过Base64编码的结果，如下所示:</strong></p><img src="https://mmbiz.qpic.cn/mmbiz_png/SYiceJK78CIicjkkVB8erj6E8QSn2ZcrYtUeMmiaLiahzuDyK8vnYDVibSpj3PTs32bLpkgh8Ox3mHzNrLkUviaTD7iaQ/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"><img src="https://mmbiz.qpic.cn/mmbiz_png/SYiceJK78CIicjkkVB8erj6E8QSn2ZcrYtQGbymEEtnp4oL8ghvORrqQichhNHpl0lXJd2r1I5LHtg9h2hyjm4l5A/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"><h2 id="自己代码实现"><a href="#自己代码实现" class="headerlink" title="自己代码实现"></a>自己代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QProcess&gt;</span></span></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent) :</span><br><span class="line">    <span class="built_in">QMainWindow</span>(parent),</span><br><span class="line">    <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow) &#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;注册机&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>() &#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取cpu名称：wmic cpu get Name</span></span><br><span class="line"><span class="comment">//获取cpu核心数：wmic cpu get NumberOfCores</span></span><br><span class="line"><span class="comment">//获取cpu线程数：wmic cpu get NumberOfLogicalProcessors</span></span><br><span class="line"><span class="comment">//查询cpu序列号：wmic cpu get processorid</span></span><br><span class="line"><span class="comment">//查询主板序列号：wmic baseboard get serialnumber</span></span><br><span class="line"><span class="comment">//查询BIOS序列号：wmic bios get serialnumber</span></span><br><span class="line"><span class="comment">//查看硬盘：wmic diskdrive get serialnumber</span></span><br><span class="line"><span class="function">QString <span class="title">MainWindow::getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span> </span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QByteArray <span class="title">MainWindow::Encode</span><span class="params">(QByteArray data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> data.<span class="built_in">toBase64</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_GenerateCode_clicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    QString Code = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="comment">//打开文件，不存在则创建</span></span><br><span class="line">    file.<span class="built_in">open</span>(QIODevice::ReadWrite | QIODevice::Text);</span><br><span class="line">    <span class="comment">//写入文件需要字符串为QByteArray格式</span></span><br><span class="line">    <span class="keyword">if</span>(file.<span class="built_in">write</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>())) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        ui-&gt;CodeDisplay-&gt;<span class="built_in">setText</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>()));</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">nullptr</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册成功&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">nullptr</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册失败&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑："><a href="#一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑：" class="headerlink" title="一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑："></a>一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑：</h1><p><strong>代码参考：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRAY_SIZE(x) (sizeof(x) / sizeof(x[0]))</span></span><br><span class="line"></span><br><span class="line"><span class="function">QString <span class="title">getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> RunFlag = <span class="number">0</span>;</span><br><span class="line">    QByteArray DecodeStr;</span><br><span class="line">    QString CpuSerialNumber;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">//1.获取CPU序列号</span></span><br><span class="line">    CpuSerialNumber = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="comment">//2.打开注册码文件,读取加密字符串并进行匹配加密字符串</span></span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(!file.<span class="built_in">open</span>(QIODevice::ReadOnly))</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">NULL</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码不存在,请导入注册码!&quot;</span>,QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//读取文件所有的内存</span></span><br><span class="line">        QByteArray EncodeStr = file.<span class="built_in">readAll</span>();</span><br><span class="line">        <span class="comment">//将读取的内容进行解码</span></span><br><span class="line">        DecodeStr = <span class="built_in">fromBase64</span>(EncodeStr);</span><br><span class="line">        <span class="comment">//将解码的结果与当前PC的CPU序列号进行比较</span></span><br><span class="line">        <span class="function">QString <span class="title">Str</span><span class="params">(DecodeStr)</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == Str.<span class="built_in">compare</span>(CpuSerialNumber))</span><br><span class="line">             RunFlag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.如果匹配成功,运行软件</span></span><br><span class="line">    <span class="keyword">if</span>(RunFlag)</span><br><span class="line">    &#123;</span><br><span class="line">        MainWindow w;</span><br><span class="line">        w.<span class="built_in">show</span>();</span><br><span class="line">        <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">NULL</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码无效,请联系厂商获取注册码!&quot;</span>,QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="本机上实现代码"><a href="#本机上实现代码" class="headerlink" title="本机上实现代码"></a>本机上实现代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QProcess&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRAY_SIZE(x) (sizeof(x) / sizeof(x[0]))</span></span><br><span class="line"></span><br><span class="line"><span class="function">QString <span class="title">getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span> </span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> RunFlag = <span class="number">0</span>;</span><br><span class="line">    QByteArray DecodeStr;</span><br><span class="line">    QString CpuSerialNumber;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">//1.获取CPU序列号</span></span><br><span class="line">    CpuSerialNumber = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="comment">//2.打开注册码文件,读取加密字符串并进行匹配加密字符串</span></span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(!file.<span class="built_in">open</span>(QIODevice::ReadOnly)) &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">nullptr</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码不存在,请导入注册码!&quot;</span>, QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//读取文件所有的内存</span></span><br><span class="line">        QByteArray EncodeStr = file.<span class="built_in">readAll</span>();</span><br><span class="line">        <span class="comment">//将读取的内容进行解码</span></span><br><span class="line">        DecodeStr = QByteArray::<span class="built_in">fromBase64</span>(EncodeStr);</span><br><span class="line">        <span class="comment">//将解码的结果与当前PC的CPU序列号进行比较</span></span><br><span class="line">        <span class="function">QString <span class="title">Str</span><span class="params">(DecodeStr)</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == Str.<span class="built_in">compare</span>(CpuSerialNumber))</span><br><span class="line">            RunFlag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.如果匹配成功,运行软件</span></span><br><span class="line">    <span class="keyword">if</span>(RunFlag) &#123;</span><br><span class="line">        MainWindow w;</span><br><span class="line">        w.<span class="built_in">show</span>();</span><br><span class="line">        <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">nullptr</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码无效,请联系厂商获取注册码!&quot;</span>, QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他注册方式"><a href="#其他注册方式" class="headerlink" title="其他注册方式"></a>其他注册方式</h1><p>实现注册机更好的方案则可以直接将信息写入注册表，然后APP去注册表中读取相应的内容。关于硬件信息的加密和解密方式，用户可以有其它的实现方法。</p><p>这里留一个问题，如何将APP启动信息与其它平台进行关联呢？例如Qt ARM端、Mac端、Android端?</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://mp.weixin.qq.com/s/XlM3WDAA3TtR7KUcPaVrLQ">Qt上位机开发之如何让自己的APP启动与硬件信息绑定(Win端)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> QT </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QT </tag>
            
            <tag> 硬件信息读取 </tag>
            
            <tag> 注册机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之七（简单绘制两条折线图）</title>
      <link href="/posts/2179120513.html"/>
      <url>/posts/2179120513.html</url>
      
        <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img-blog.csdnimg.cn/2020112517480836.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05pY2tTdHVkZW50,size_16,color_FFFFFF,t_70"><h1 id="参考代码实现"><a href="#参考代码实现" class="headerlink" title="参考代码实现"></a>参考代码实现</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms.DataVisualization.Charting;</span><br><span class="line"> </span><br><span class="line">namespace 图表练习</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">// 设置曲线的样式 </span></span><br><span class="line">            Series series1 = <span class="keyword">new</span> Series();</span><br><span class="line">            series1 = chart1.Series[<span class="number">0</span>];</span><br><span class="line">            series1.ChartType = SeriesChartType.Spline;</span><br><span class="line">            series1.BorderWidth = <span class="number">2</span>;</span><br><span class="line">            series1.Color = Color.Red;</span><br><span class="line">            series1.LegendText = <span class="string">&quot;第一条线&quot;</span>;</span><br><span class="line"> </span><br><span class="line">            Series series2 = <span class="keyword">new</span> Series();</span><br><span class="line">            series2 = chart1.Series[<span class="number">1</span>];</span><br><span class="line">            series2.ChartType = SeriesChartType.Line;</span><br><span class="line">            series2.BorderWidth = <span class="number">2</span>;</span><br><span class="line">            series2.Color = Color.Green;</span><br><span class="line">            series2.LegendText = <span class="string">&quot;第二条线&quot;</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 准备数据 </span></span><br><span class="line">            <span class="built_in">int</span>[] myValues1 = &#123; <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span> &#125;;</span><br><span class="line"> </span><br><span class="line">            <span class="built_in">int</span>[] myValues2 = &#123; <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">11</span> &#125;;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 在chart中显示数据 </span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">int</span> xValue1 = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">int</span> xValue2 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> yValue1 <span class="keyword">in</span> myValues1)</span><br><span class="line">            &#123;</span><br><span class="line">                series1.Points.AddXY(xValue1, yValue1);</span><br><span class="line">                xValue1++;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> yValue2 <span class="keyword">in</span> myValues2)</span><br><span class="line">            &#123;</span><br><span class="line">                series2.Points.AddXY(xValue2, yValue2);</span><br><span class="line">                xValue2++;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 设置显示范围 </span></span><br><span class="line">            ChartArea myChartArea = chart1.ChartAreas[<span class="number">0</span>];</span><br><span class="line">            myChartArea.AxisX.Minimum = <span class="number">0</span>;</span><br><span class="line">            myChartArea.AxisX.Maximum = <span class="number">30</span>;</span><br><span class="line">            myChartArea.AxisY.Minimum = <span class="number">0</span>;</span><br><span class="line">            myChartArea.AxisY.Maximum = <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/NickStudent/article/details/110138031">【C#语言】绘制两条折线图</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#串口问题之一（串口导致界面卡死）</title>
      <link href="/posts/10407708.html"/>
      <url>/posts/10407708.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>当串口接收大量数据且不断更新到text等UI界面时，要是再拖动数据或者处理UI上点击功能等操作时会十分卡顿，若仅接收数据并不更新到UI时正常。<br>后来发现是直接使用 rx.Text &#x3D; 接收到数据; 时会卡顿，参考别人使用 TextBox sender 传参就解决！</p><h1 id="解决参考代码"><a href="#解决参考代码" class="headerlink" title="解决参考代码"></a>解决参考代码</h1><blockquote><p><strong>卡顿代码</strong></p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sp_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender,SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.Threading.Thread.Sleep(<span class="number">100</span>); <span class="comment">//延时100ms等待接收完数据</span></span><br><span class="line"><span class="comment">//this.Invoke就是跨线程访问ui的方法</span></span><br><span class="line"><span class="keyword">this</span>.Invoke((EventHandler)(<span class="built_in">delegate</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (isHex == <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">tbxRecvData.Text += sp.ReadLine();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Byte[] ReceivedData = <span class="keyword">new</span> Byte[sp.BytesToRead]; <span class="comment">//创建接收字符数组</span></span><br><span class="line">sp.Read(ReceivedData, <span class="number">0</span>, ReceivedData.Length);</span><br><span class="line">String RecvDataText = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; ReceivedData.Length - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">RecvDataText += (<span class="string">&quot;0x&quot;</span> + ReceivedData[i].ToString(<span class="string">&quot;X2&quot;</span>) + <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">tbxRecvData.Text += RecvDataText;</span><br><span class="line">&#125;</span><br><span class="line">sp.DiscardInBuffer(); <span class="comment">//丢弃接收缓冲区数据</span></span><br><span class="line">&#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">好像是这段代码哪里的问题导致界面卡死</span><br><span class="line">大佬们看一下帮忙改一下</span><br></pre></td></tr></table></figure><blockquote><p><strong>测试答案：简单编写测试，没有问题，可以正常发送接收</strong></p></blockquote><img src="https://img-bbs.csdn.net/upload/201709/12/1505178993_530107.png"><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.IO.Ports;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">COMTest</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> SerialPort sp = <span class="keyword">new</span> SerialPort();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnOpen_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            sp.PortName = <span class="string">&quot;COM2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            sp.BaudRate = <span class="number">9600</span>;</span><br><span class="line"></span><br><span class="line">            sp.DataBits = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">            sp.StopBits = StopBits.One;</span><br><span class="line"></span><br><span class="line">            sp.Parity = Parity.None;</span><br><span class="line"></span><br><span class="line">            sp.ReadTimeout = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">            sp.ReceivedBytesThreshold = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!sp.IsOpen)</span><br><span class="line"></span><br><span class="line">                sp.Open();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            sp.DataReceived += Sp_DataReceived;</span><br><span class="line"></span><br><span class="line">            btnOpen.Enabled = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Sp_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] data = <span class="keyword">new</span> <span class="built_in">byte</span>[sp.BytesToRead];</span><br><span class="line"></span><br><span class="line">            sp.Read(data, <span class="number">0</span>, data.Length);</span><br><span class="line"></span><br><span class="line">            sp.DiscardInBuffer();</span><br><span class="line"></span><br><span class="line">            UpdateTextBox(texRev, Encoding.Default.GetString(data));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] data = Encoding.Default.GetBytes(texData.Text);</span><br><span class="line"></span><br><span class="line">            sp.Write(data, <span class="number">0</span>, data.Length);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateTextBox</span>(<span class="params">TextBox sender, <span class="built_in">string</span> content</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Invoke((EventHandler) <span class="built_in">delegate</span></span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                sender.AppendText(content + Environment.NewLine);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>例如像 RecvDataText +&#x3D; (“0x” + ReceivedData[i].ToString(“X2”) + “”); 这种代码，以及前边几行代码，根本不操作UI 控件，那么根本不应该放到 Invoke 中。而且只是一般地临时显示的话，使用 BeginInvoke 显然比 Invoke 更好。 你在阻塞 UI 线程（Invoke它）的时候，你执行 sp.ReadLine(); 这样的代码，这个 ReadLine 本身就是卡死、死等、阻塞式的代码，要等待对方传来换行回车或者文件结束符号才能解除阻塞。显然这样编程设计是不合适的。 尤其是通讯程序，要处理粘包、分包概念，更不应该阻塞式 Readline。</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://bbs.csdn.net/topics/392261371">c#串口程序界面卡死问题</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 通讯 </category>
          
          <category> 问题汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 串口通讯 </tag>
            
            <tag> UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#串口功能之四（串口基础功能和正则表达式）</title>
      <link href="/posts/740952076.html"/>
      <url>/posts/740952076.html</url>
      
        <content type="html"><![CDATA[<h1 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h1><p><strong>串口基础功能参考</strong></p><h1 id="编写相关"><a href="#编写相关" class="headerlink" title="编写相关"></a>编写相关</h1><h2 id="winform-中使用串口就需要在左侧工具箱里拖入一个serialPort，如下图所示"><a href="#winform-中使用串口就需要在左侧工具箱里拖入一个serialPort，如下图所示" class="headerlink" title="winform 中使用串口就需要在左侧工具箱里拖入一个serialPort，如下图所示"></a>winform 中使用串口就需要在左侧工具箱里拖入一个serialPort，如下图所示</h2><img src="https://img-blog.csdnimg.cn/20200203090728331.png"><h2 id="初始化串口"><a href="#初始化串口" class="headerlink" title="初始化串口"></a>初始化串口</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SerialPort serialPort;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">bool</span> Listening = <span class="literal">false</span>;<span class="comment">//是否没有执行完invoke相关操作   </span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">bool</span> Closing = <span class="literal">false</span>;<span class="comment">//是否正在关闭串口，执行Application.DoEvents，并阻止再次invoke   </span></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 初始化串口</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitPort</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.PortName = <span class="string">&quot;COM1&quot;</span>;</span><br><span class="line">                serialPort1.BaudRate = <span class="number">4800</span>;</span><br><span class="line">                serialPort1.DataBits = <span class="number">8</span>;</span><br><span class="line">                serialPort1.Parity = Parity.None;</span><br><span class="line">                serialPort1.StopBits = StopBits.One;</span><br><span class="line">                serialPort1.WriteTimeout = <span class="number">3000</span>;</span><br><span class="line">                serialPort1.ReadTimeout = <span class="number">3000</span>;</span><br><span class="line">                serialPort1.ReceivedBytesThreshold = <span class="number">1</span>;</span><br><span class="line">                serialPort1.DtrEnable = <span class="literal">true</span>;</span><br><span class="line">                serialPort1.RtsEnable = <span class="literal">true</span>;</span><br><span class="line">                updateText = <span class="keyword">new</span> UpdateTextEventHandler(UpdateTextBox);  <span class="comment">//实例化委托对象</span></span><br><span class="line">                serialPort1.Handshake = Handshake.RequestToSend;</span><br><span class="line">                serialPort1.Open();</span><br><span class="line">                <span class="comment">//MessageBox.Show(&quot;开始&quot;);</span></span><br><span class="line">                button3.Text = <span class="string">&quot;关闭串口&quot;</span>;</span><br><span class="line">                serialPort1.DataReceived += <span class="keyword">new</span> SerialDataReceivedEventHandler(serialPort1_DataReceived);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(ex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><h2 id="串口获取数据"><a href="#串口获取数据" class="headerlink" title="串口获取数据"></a>串口获取数据</h2><p><strong>我解析这个吊钩秤是通过称一直向外发送数据，程序解析数据，通过截取字符串，获取两个空白之间的数据并显示在文本框上</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span>  串口获取数据</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">serialPort1_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Closing) <span class="keyword">return</span>;<span class="comment">//如果正在关闭，忽略操作，直接返回，尽快的完成串口监听线程的一次循环</span></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Listening = <span class="literal">true</span>;<span class="comment">//设置标记，说明我已经开始处理数据，一会儿要使用系统UI的。</span></span><br><span class="line">                Thread.Sleep(<span class="number">600</span>);</span><br><span class="line"> </span><br><span class="line">                <span class="built_in">string</span> SDateTemp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="built_in">int</span> len = serialPort1.BytesToRead;</span><br><span class="line"> </span><br><span class="line">                Byte[] readBuffer = <span class="keyword">new</span> Byte[len];</span><br><span class="line">                serialPort1.Read(readBuffer, <span class="number">0</span>, len);</span><br><span class="line"> </span><br><span class="line">                SDateTemp = Encoding.Default.GetString(readBuffer);</span><br><span class="line">                <span class="comment">//MessageBox.Show(SDateTemp);</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                <span class="built_in">int</span> L = SDateTemp.IndexOf(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                <span class="built_in">int</span> length = SDateTemp.Length;</span><br><span class="line">                <span class="built_in">string</span> str1 = SDateTemp.Substring(L, length - L).Trim();</span><br><span class="line"> </span><br><span class="line">                <span class="built_in">int</span> L2 = str1.IndexOf(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                <span class="built_in">int</span> length2 = str1.Length;</span><br><span class="line">                str2 = str1.Substring(<span class="number">0</span>, L2).Trim();</span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(str2))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>.BeginInvoke(<span class="keyword">new</span> UpdateTextEventHandler(UpdateTextBox), <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; str2 &#125;);</span><br><span class="line">                    <span class="comment">//SDateTemp = GetValue(SDateTemp, &quot;@G002&quot;, &quot;kg&quot;).Trim(); //多少kg</span></span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//this.Invoke(new UpdateTextEventHandler(UpdateTextBox), new string[] &#123; SDateTemp &#125;);</span></span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                Listening = <span class="literal">false</span>;<span class="comment">//我用完了，ui可以关闭串口了。   </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><h2 id="跟新文本框显示数据"><a href="#跟新文本框显示数据" class="headerlink" title="跟新文本框显示数据"></a>跟新文本框显示数据</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateTextBox</span>(<span class="params"><span class="built_in">string</span> text</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">string</span>.IsNullOrEmpty(text))</span><br><span class="line">            &#123;</span><br><span class="line">                textBox6.Text = text;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="正则解析"><a href="#正则解析" class="headerlink" title="正则解析"></a>正则解析</h1><blockquote><p><strong>如果串口发送的数据时规范的并且可以用正则解析的话，可以使用下边的方法。</strong></p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 获得字符串中开始和结束字符串之间的值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获得字符串中开始和结束字符串之间的值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;str&quot;&gt;</span>字符串<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;A&quot;&gt;</span>开始<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;B&quot;&gt;</span>结束<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetValue</span>(<span class="params"><span class="built_in">string</span> str, <span class="built_in">string</span> A, <span class="built_in">string</span> B</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Regex rg = <span class="keyword">new</span> Regex(<span class="string">&quot;(?&lt;=(&quot;</span> + A + <span class="string">&quot;))[.\\s\\S]*?(?=(&quot;</span> + B + <span class="string">&quot;))&quot;</span>, RegexOptions.Multiline | RegexOptions.Singleline);</span><br><span class="line">            <span class="comment">//Regex rg = new Regex(&quot;(?&lt;=(&quot; + A + &quot;))[.\\d]*?(?=(&quot; + B + &quot;))&quot;, RegexOptions.Multiline | RegexOptions.Singleline);</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">return</span> rg.Match(str).Value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><p><strong>注：如果采用了上边GetValue方法的话，在serialPort1_DataReceived 方法中，带注释的两行就需要取消注释使用。</strong></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_38332436/article/details/104152092">c#（winform）通过串口读取并解析数据</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 通讯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
            <tag> C# </tag>
            
            <tag> 串口通讯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat输入路径处理文件</title>
      <link href="/posts/3143928547.html"/>
      <url>/posts/3143928547.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、使用到的内容"><a href="#一、使用到的内容" class="headerlink" title="一、使用到的内容"></a>一、使用到的内容</h1><ol><li>获取键盘输入</li><li>判断输入路径是否有效</li><li>批量删除文件</li><li>获取路径文件夹名字</li><li>对文件名进行重命名</li><li>复制移动文件</li></ol><h1 id="二、读取键入参数"><a href="#二、读取键入参数" class="headerlink" title="二、读取键入参数"></a>二、读取键入参数</h1><blockquote><p><strong>使用 set &#x2F;p 命令来获取用户的输入</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> /p name=your name: </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> %name%</span><br></pre></td></tr></table></figure><p>终端会先给出一个提示，然后接收输入，当敲入回车后，输入的行内容会被赋值给 name ，但不包括换行。</p><h1 id="三、判断路径有效性"><a href="#三、判断路径有效性" class="headerlink" title="三、判断路径有效性"></a>三、判断路径有效性</h1><blockquote><p><strong>根据用户输入路径来判断其有效性，有效则下一步，无效则重新输入</strong></p></blockquote><ul><li><strong>判断存在性的代码参考：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IF EXIST %DIR%\.svn ( </span><br><span class="line">    DEL /S %DIR%\.svn</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>BAT循环判断，通过goto跳转来重复输入</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">TITLE BAT循环判断进程是否存在 bat 如果存在则继续判断 不存在则重新运行</span><br><span class="line">COLOR A</span><br><span class="line"><span class="built_in">set</span> <span class="string">&quot;file=文件名&quot;</span></span><br><span class="line"><span class="keyword">for</span> /f <span class="string">&quot;delims=&quot;</span> %%I <span class="keyword">in</span> (<span class="string">&quot;%file%&quot;</span>) <span class="keyword">do</span> <span class="built_in">set</span> <span class="string">&quot;image=%%~nxI&quot;</span></span><br><span class="line">:begin</span><br><span class="line">tasklist|find /i <span class="string">&quot;%image%&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;%errorlevel%&quot;</span>==<span class="string">&quot;1&quot;</span> start <span class="string">&quot;&quot;</span> <span class="string">&quot;%file%&quot;</span></span><br><span class="line">goto begin</span><br></pre></td></tr></table></figure><p><strong>将以上两个配合起来即可完成输入判断功能！</strong></p><h1 id="四、批量删除文件夹下文件"><a href="#四、批量删除文件夹下文件" class="headerlink" title="四、批量删除文件夹下文件"></a>四、批量删除文件夹下文件</h1><blockquote><p><strong>注 bat 批处理 解决中文乱码 ：将文件以ANSI格式保存</strong></p></blockquote><blockquote><p><strong>删除文件夹下的文件的操作：</strong><br>使用del命令，单纯的删除文件操作，如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del /f /s /q C:UsersdellAppDataLocalTemp*.*</span><br></pre></td></tr></table></figure><ul><li><strong>其他文件处理参考：</strong></li></ul><blockquote><p><strong>删除文件夹操作：</strong><br>使用rd命令，删除空文件夹，如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rd /s /q C:UsersdellAppDataLocalTempA</span><br></pre></td></tr></table></figure><blockquote><p><strong>删除文件和文件夹操作：</strong><br>使用的是del命令+rd命令，先删除文件，在进入相应文件夹删除文件夹下的文件夹，如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">del /f /s /q C:UsersdellAppDataLocalTemp*.*</span><br><span class="line"><span class="built_in">cd</span> C:UsersdellAppDataLocalTemp</span><br><span class="line">rd /s /q C:UsersdellAppDataLocalTemp</span><br></pre></td></tr></table></figure><blockquote><p><strong>每隔1000s执行一次删除temp文件下的所有文件及文件夹。代码如下：</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:loop</span><br><span class="line">del /f /s /q C:UsersdellAppDataLocalTemp*.*</span><br><span class="line"><span class="built_in">cd</span> C:UsersdellAppDataLocalTemp</span><br><span class="line">rd /s /q C:UsersdellAppDataLocalTemp</span><br><span class="line">@ping 127.0.0.1 -n 1000 &gt;nul</span><br><span class="line">goto loop</span><br></pre></td></tr></table></figure><blockquote><p><strong>删除当前所有子目录下的所有jpeg文件：</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">::chcp utf8</span><br><span class="line">::chcp 65001 就是换成UTF-8代码页</span><br><span class="line">::chcp 936 可以换回默认的GBK</span><br><span class="line">::chcp 437 是美国英语</span><br><span class="line">::del D:A*.jpeg /f /s /q</span><br><span class="line">::保存，更改扩展名为 bat，双击运行即可。</span><br><span class="line">::/f 强制删除只读文件/s 从所有子目录删除指定文件/q 安静模式，删除时不要求确认</span><br><span class="line"><span class="built_in">echo</span> 当前盘符：%~d0</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：%~dp0</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：%~sdp0</span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：%~f0</span><br><span class="line"><span class="built_in">echo</span> 当前CMD默认目录：%<span class="built_in">cd</span>%</span><br><span class="line"><span class="built_in">echo</span> %~dp0 目录下所有的jpeg文件</span><br><span class="line">pause</span><br><span class="line">del %~dp0*.jpeg /f /s /q</span><br><span class="line">::/f 强制删除只读文件/s 从所有子目录删除指定文件/q 安静模式，删除时不要求确认</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h1 id="五、获取当前路径文件名"><a href="#五、获取当前路径文件名" class="headerlink" title="五、获取当前路径文件名"></a>五、获取当前路径文件名</h1><h2 id="方法一（使用中）、BAT-获取父文件名"><a href="#方法一（使用中）、BAT-获取父文件名" class="headerlink" title="方法一（使用中）、BAT 获取父文件名"></a>方法一（使用中）、BAT 获取父文件名</h2><blockquote><p><strong>获取批处理文件的父文件夹非常简单：</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> %%a <span class="keyword">in</span> (<span class="string">&quot;%~dp0.&quot;</span>) <span class="keyword">do</span> <span class="built_in">set</span> <span class="string">&quot;parent=%%~nxa&quot;</span></span><br><span class="line"><span class="built_in">echo</span> %parent%</span><br></pre></td></tr></table></figure><p><strong>对于文件路径的父级，根据问题：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> %%a <span class="keyword">in</span> (<span class="string">&quot;c:testpacka.txt&quot;</span>) <span class="keyword">do</span> <span class="keyword">for</span> %%b <span class="keyword">in</span> (<span class="string">&quot;%%~dpa.&quot;</span>) <span class="keyword">do</span> <span class="built_in">set</span> <span class="string">&quot;parent=%%~nxb&quot;</span></span><br><span class="line"><span class="built_in">echo</span> %parent%</span><br></pre></td></tr></table></figure><h2 id="方法二、BAT-获取当前文件夹的文件名"><a href="#方法二、BAT-获取当前文件夹的文件名" class="headerlink" title="方法二、BAT 获取当前文件夹的文件名"></a>方法二、BAT 获取当前文件夹的文件名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">pushd</span> %1 &amp; <span class="keyword">for</span> %%i <span class="keyword">in</span> (.) <span class="keyword">do</span> <span class="built_in">set</span> curr=%%~ni</span><br><span class="line"><span class="built_in">echo</span> %curr%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p><strong>选项语法：</strong></p><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">~I</td><td align="center">删除任何引号(“)，扩充 %I</td></tr><tr><td align="center">%~fI</td><td align="center">将 %I 扩充到一个完全合格的路径名</td></tr><tr><td align="center">%~dI</td><td align="center">仅将 %I 扩充到一个驱动器号</td></tr><tr><td align="center">%~pI</td><td align="center">仅将 %I 扩充到一个路径</td></tr><tr><td align="center">%~nI</td><td align="center">仅将 %I 扩充到一个文件名</td></tr><tr><td align="center">%~xI</td><td align="center">仅将 %I 扩充到一个文件扩展名</td></tr><tr><td align="center">%~sI</td><td align="center">扩充的路径只含有短名</td></tr><tr><td align="center">%~aI</td><td align="center">将 %I 扩充到文件的文件属性</td></tr><tr><td align="center">%~tI</td><td align="center">将 %I 扩充到文件的日期&#x2F;时间</td></tr><tr><td align="center">%~zI</td><td align="center">将 %I 扩充到文件的大小</td></tr><tr><td align="center">%~$PATH:I</td><td align="center">查找列在路径环境变量的目录，并将 %I 扩充到找到的第一个完全合格的名称。如果环境变量名未被定义，或者没有找到文件，此组合键会扩充到空字符串</td></tr></tbody></table><p><strong>组合修饰符：</strong></p><table><thead><tr><th align="center">修饰符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">%~dpI</td><td align="center">仅将 %I 扩充到一个驱动器号和路径</td></tr><tr><td align="center">%~nxI</td><td align="center">仅将 %I 扩充到一个文件名和扩展名</td></tr><tr><td align="center">%~fsI</td><td align="center">仅将 %I 扩充到一个带有短名的完整路径名</td></tr><tr><td align="center">%~dp$PATH:i</td><td align="center">查找列在路径环境变量的目录，并将 %I 扩充</td></tr><tr><td align="center">%~ftzaI</td><td align="center">将 %I 扩充到类似输出线路的 DIR</td></tr></tbody></table><p><strong>获取当前目录的绝对路径:  目录中有空格也可以加入””避免找不到路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 当前盘符：%~d0　　　　　　　　　　　　　　rem --　　C</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：%~dp0　　　　　　　　　　 rem --　　C:\Working\docs\</span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：%~f0　　　　　　　　　　rem --　　C:\Working\docs\aaa.bat</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：%~sdp0　　rem --　　C:\Working\docs\</span><br><span class="line"><span class="built_in">echo</span> 当前CMD默认目录：%<span class="built_in">cd</span>%　　　　　　　　　　rem--　　C:\Working\docs</span><br><span class="line"><span class="built_in">echo</span> 当前盘符：<span class="string">&quot;%~d0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：<span class="string">&quot;%~dp0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：<span class="string">&quot;%~f0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：<span class="string">&quot;%~sdp0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前CMD默认目录：<span class="string">&quot;%cd%&quot;</span></span><br></pre></td></tr></table></figure><h1 id="六、复制和重命名文件"><a href="#六、复制和重命名文件" class="headerlink" title="六、复制和重命名文件"></a>六、复制和重命名文件</h1><blockquote><p><strong>创建副本并重命名</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">rem 创建副本文件并重命名</span><br><span class="line"><span class="built_in">set</span> <span class="comment">#=Any question&amp;set @=WX&amp;set $=Q&amp;set/az=0x53b7e0b4</span></span><br><span class="line">title %<span class="comment">#% +%$%%$%/%@% %z%</span></span><br><span class="line"><span class="built_in">cd</span> /d <span class="string">&quot;%~dp0&quot;</span></span><br><span class="line">copy /y <span class="string">&quot;a.bin&quot;</span> <span class="string">&quot;aaaaaaaa.bin&quot;</span></span><br><span class="line"><span class="built_in">echo</span>;%<span class="comment">#% +%$%%$%/%@% %z%</span></span><br><span class="line">pause</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在文本文档里输入rename命令（即：ren 原文件名 后文件名）:</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">ren a.bat bbb.bat</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h1 id="七、其他知识点"><a href="#七、其他知识点" class="headerlink" title="七、其他知识点"></a>七、其他知识点</h1><blockquote><p><strong>获取文件夹下所有文件的路径名称并导出到txt文件中</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir/s/b &gt; 1.txt</span><br></pre></td></tr></table></figure><blockquote><p><strong>bat批处理 if 命令示例详解</strong><br>if,正如它E文中的意思，就是“如果”的意思，用来进行条件判断。翻译过来的意思就是：如果符合某一条件，便执行后面的命令。<br>主要用来判断：<br>1、两个“字符串”是否相等；<br>2、两个数值是大于、小于、等于,然后执行相应的命令。<br>当然还有特殊用法，如结合errorlevel：if errorlevel 1 echo error<br>或者结合defined（定义的意思）:if defined test (echo It is defined) else echo It isn’t defined<br><a href="https://www.jb51.net/article/14986.htm">IF命令示例详解</a></p></blockquote><blockquote><p><strong>CMD快速进入当前目录</strong><br>由于需要经常需要从cmd中进入当前工作目录,每次手工输入太繁琐了,于是写了以下bat文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:: 防止中文乱码</span><br><span class="line">chcp 65001</span><br><span class="line">:: 关闭回显</span><br><span class="line">@<span class="built_in">echo</span> off </span><br><span class="line">:: 进入当前目录</span><br><span class="line"><span class="built_in">cd</span>  %~dp0</span><br><span class="line">:: 运行后保持界面一直显示</span><br><span class="line">cmd /k</span><br><span class="line">:: 开启回显</span><br><span class="line">@<span class="built_in">echo</span> on </span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><p><a href="https://zhuanlan.zhihu.com/p/412846122">【BAT脚本学习笔记】获取输入</a></p></li><li><p><a href="https://blog.51cto.com/u_13161667/3303991">BAT判断一个目录是否存在</a></p></li><li><p><a href="https://blog.csdn.net/qq_42462075/article/details/103554158">BAT循环判断进程是否存在 bat 如果存在则继续判断 不存在则重新运行</a></p></li><li><p><a href="http://t.zoukankan.com/BruceKing-p-13151283.html">批处理bat 删除指定文件夹下的文件及文件夹</a></p></li><li><p><a href="https://www.cnblogs.com/hello1123/p/15944980.html">获得目录的文件的父目录名，非路径名</a><br>5-1. <a href="https://www.cnblogs.com/CRobot/p/15337172.html">BAT 获取当前文件夹的文件名</a><br>5-2. <a href="https://www.jb51.net/article/53021.htm">批处理bat命令 获取当前盘符和当前目录和上级目录的代码</a></p></li><li><p><a href="https://blog.csdn.net/qq_25885951/article/details/118656242">bat(cmd)快速进入当前文件目录+防止中文乱码+保持界面一致显示</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LVGL学习(一)之模拟器搭建</title>
      <link href="/posts/1814094879.html"/>
      <url>/posts/1814094879.html</url>
      
        <content type="html"><![CDATA[<h1 id="LVGL库简介"><a href="#LVGL库简介" class="headerlink" title="LVGL库简介"></a>LVGL库简介</h1><p>LVGL(Light and Versatile Graphics Library)是一个免费、开源的嵌入式图形库，可以创建丰富、美观的界面，具有许多可以自定义样式的控件，支持按键或触摸响应，支持中文字符，并且内存占用较低。可以在 <a href="https://lvgl.io/demos">https://lvgl.io/demos</a> 使用网页端体验 LVGL 的动态效果，再决定是否需要使用 LVGL 。</p><p>LVGL 使用 C 语言编写，可以用在树莓派、ESP32 、STM32 等单片机上，并支持各种中大型屏幕（只需要提供屏幕的绘图 API 即可）。LVGL 的官网地址为：<a href="https://lvgl.io/">https://lvgl.io/</a> ，GitHub 地址为：<a href="https://github.com/lvgl/lvgl">https://github.com/lvgl/lvgl</a> 。</p><p>LVGL 提供了许多示例程序，还提供了 PC 端的模拟器，这都加快了 LVGL 的开发效率。</p><p>再下载<a href="https://github.com/littlevgl/pc_simulator_sdl_visual_studio">官方的模拟器</a>。就可以进行仿真了</p><h1 id="熟悉模拟器的结构"><a href="#熟悉模拟器的结构" class="headerlink" title="熟悉模拟器的结构"></a>熟悉模拟器的结构</h1><blockquote><p>拿到模拟器第一反应就是F5运行一下。</p></blockquote><img src="https://img-blog.csdnimg.cn/20201118133804918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"><p>然后就可以打开main文件（LVGL.Simulator.cpp）去查看一下主函数结构。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hal_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">tick_thread</span><span class="params">(<span class="keyword">void</span> *data)</span></span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_indev_t</span> * kb_indev;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">lv_init();       <span class="comment">// 初始化lvgl</span></span><br><span class="line">hal_init();<span class="comment">// 这里单片机就是硬件初始化，模拟器中是模拟器初始化(修改配置)</span></span><br><span class="line">lv_demo_widgets();<span class="comment">// 这个函数就是演示的demo(修改示例)</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">lv_task_handler();<span class="comment">// lvgl的任务处理，主要处理事件响应</span></span><br><span class="line">Sleep(<span class="number">10</span>); <span class="comment">// 休眠10ms</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过分析实际我们只需要修改配置和demo就行了，经过对hal_init()的分析发现在lv_conf.h里有个宏定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Maximal horizontal and vertical resolution to support by the library.*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_HOR_RES_MAX          (800)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_VER_RES_MAX          (480)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Color depth:</span></span><br><span class="line"><span class="comment"> * - 1:  1 byte per pixel</span></span><br><span class="line"><span class="comment"> * - 8:  RGB332</span></span><br><span class="line"><span class="comment"> * - 16: RGB565</span></span><br><span class="line"><span class="comment"> * - 32: ARGB8888</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_COLOR_DEPTH     32</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这里有长宽和色深，我们可以修改它，当然还有很多配置，可以自己选择修改。</strong></p><h1 id="编写自己的demo"><a href="#编写自己的demo" class="headerlink" title="编写自己的demo"></a>编写自己的demo</h1><p>通过寻找我们找到了lv_demo_widgets();所在的地方: .\src\lv_demo_benchmark\lv_demo_benchmark.c<br>于是我就自己在src里建立了一个lv_test的文件夹在文件夹内建立了一个.h和.c，然后打开<a href="https://docs.lvgl.io/v7/en/html/widgets/btn.html?highlight=button%EF%BC%8C%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8Bbutton%E6%8E%A7%E4%BB%B6%EF%BC%8C%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%BC%96%E5%86%99button%E5%95%A6">https://docs.lvgl.io/v7/en/html/widgets/btn.html?highlight=button，研究一下button控件，开始自己编写button啦</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../../lv_examples.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_ex_btn</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_obj_t</span>* btn1 = lv_btn_create(lv_scr_act(), <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主函数把之前例子函数换成lv_ex_btn()，F5就出来啦</p><p><img src="https://img-blog.csdnimg.cn/2020111814275835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"></p><p>不过这样感觉太简单了加入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lv_obj_t</span>* label = lv_label_create(btn1, <span class="literal">NULL</span>);</span><br><span class="line">lv_label_set_text(label, <span class="string">&quot;Button&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过创建lable并放到button上，就可以显示Button这个名字啦</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_align(btn1, <span class="literal">NULL</span>, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就可以把它放到中央了，这时我们的按钮就很漂亮了，可以发现因为之前标签放到button上所以移动的时候是二者一起移动的<br>但是我们点击它什么反应都没有。那是因为我们没有绑定相关的“动作函数”在c语言里叫回调函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">event_handler</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">lv_event_t</span> event)</span> <span class="comment">// 设置动作函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event == LV_EVENT_CLICKED) &#123; <span class="comment">// 按下的时候会产生点击事件通过判断可以做出相应响应</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Clicked\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在lv_ex_btn()中加入绑定</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_set_event_cb(btn1, event_handler);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就可以实现效果啦</p><img src="https://img-blog.csdnimg.cn/20201118144452548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"><p>再举一反三，就完成了第一个简单的ui了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../../lv_examples.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">event_handler</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">lv_event_t</span> event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event == LV_EVENT_CLICKED) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Clicked\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event == LV_EVENT_VALUE_CHANGED) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Toggled\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_ex_btn</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lv_obj_t</span>* btn1 = lv_btn_create(lv_scr_act(), <span class="literal">NULL</span>);</span><br><span class="line">    lv_obj_set_event_cb(btn1, event_handler);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">lv_obj_t</span>* label = lv_label_create(btn1, <span class="literal">NULL</span>);</span><br><span class="line">    lv_label_set_text(label, <span class="string">&quot;Button&quot;</span>);</span><br><span class="line">    lv_obj_align(btn1, <span class="literal">NULL</span>, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">-40</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lv_obj_t</span>* btn2 = lv_btn_create(lv_scr_act(), <span class="literal">NULL</span>);</span><br><span class="line">    lv_obj_set_event_cb(btn2, event_handler);</span><br><span class="line">    lv_obj_align(btn2, <span class="literal">NULL</span>, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">40</span>);</span><br><span class="line">    lv_btn_set_checkable(btn2, <span class="literal">true</span>);</span><br><span class="line">    lv_btn_toggle(btn2);</span><br><span class="line">    lv_btn_set_fit2(btn2, LV_FIT_NONE, LV_FIT_TIGHT);</span><br><span class="line"></span><br><span class="line">    label = lv_label_create(btn2, <span class="literal">NULL</span>);</span><br><span class="line">    lv_label_set_text(label, <span class="string">&quot;Toggled&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行效果：</p><img src="https://img-blog.csdnimg.cn/20201118151538294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_42679566/article/details/109771809">LVGL学习之路——模拟器的搭建，使用button做出第一个ui界面</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C </category>
          
          <category> GUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> GUI </tag>
            
            <tag> LVGL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#线程之一（使用Thread）</title>
      <link href="/posts/1845063143.html"/>
      <url>/posts/1845063143.html</url>
      
        <content type="html"><![CDATA[<h1 id="线程界面创建过程"><a href="#线程界面创建过程" class="headerlink" title="线程界面创建过程"></a>线程界面创建过程</h1><p><strong>1. 启动2个线程，一个进行加法计算，一个进行减法计算。并且使界面不卡，随时可以拖动：</strong></p><p><img src="https://img-blog.csdnimg.cn/b56af637d1f4481599c6fd9317dd340a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>2. 在load方法中新建2个线程：</strong></p><p><img src="https://img-blog.csdnimg.cn/15aa999491bb46dcb4ef270d25d96ebb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_19,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>3. 两个线程分别运行加法的方法A和减法的方法B：</strong></p><p><img src="https://img-blog.csdnimg.cn/61ada8ab14a04f8e90d143b060c3d9f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><blockquote><p><strong>注意：这里需要使用Invoke，否则报错下图：</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/d2a7bdd9ad8f4bbaa36149a493010bae.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>4. 效果：</strong></p><p><img src="https://img-blog.csdnimg.cn/429f5995e0e34347bfbaf1d05b00987a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ThreadStart ts1 = <span class="keyword">new</span> ThreadStart(A);</span><br><span class="line">            Thread t1 = <span class="keyword">new</span> Thread(ts1);</span><br><span class="line">            t1.Start();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            ThreadStart ts2 = <span class="keyword">new</span> ThreadStart(B);</span><br><span class="line">            Thread t2 = <span class="keyword">new</span> Thread(ts2);</span><br><span class="line">            t2.Start();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">A</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//label1.Text = i.ToString();</span></span><br><span class="line">                Invoke(<span class="keyword">new</span> Action(() =&gt; label1.Text = i.ToString()));</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">B</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; Convert.ToInt16(label2.Text); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">                Invoke(<span class="keyword">new</span> Action(() =&gt; label2.Text = (Convert.ToInt16(label2.Text) - <span class="number">1</span>).ToString()));</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/u012563853/article/details/124195187">c#中使用Thread</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 线程 </tag>
            
            <tag> Thread类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之六（Chart 建立多个图表控件）</title>
      <link href="/posts/3093651449.html"/>
      <url>/posts/3093651449.html</url>
      
        <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="https://i0.hdslb.com/bfs/article/a7e021f25deb36a2dda5311509bcbfb460eb6d24.png@942w_665h_progressive.webp"></p><h1 id="创建chart控件"><a href="#创建chart控件" class="headerlink" title="创建chart控件"></a>创建chart控件</h1><p>首先是在工具箱-数据分组中我们就可以看到chart控件，使用时拖拽到界面即可。可以通过属性面板设置其样式，也可以通过代码来调整样式。设置的属性可参照：<br><a href="https://www.cnblogs.com/arxive/p/5861960.html">https://www.cnblogs.com/arxive/p/5861960.html</a></p><h1 id="创建通用类"><a href="#创建通用类" class="headerlink" title="创建通用类"></a>创建通用类</h1><blockquote><p><strong>总结的部分设置chart样式功能的通用类：</strong></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChartHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：添加序列</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;seriesName&quot;&gt;</span>序列名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chartType&quot;&gt;</span>图表类型<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;color&quot;&gt;</span>颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;markColor&quot;&gt;</span>标记点颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;showValue&quot;&gt;</span>是否显示数值<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddSeries</span>(<span class="params">Chart chart, <span class="built_in">string</span> seriesName, SeriesChartType chartType, Color color, Color markColor, <span class="built_in">bool</span> showValue = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.Series.Add(seriesName);</span><br><span class="line">        chart.Series[seriesName].ChartType = chartType;</span><br><span class="line">        chart.Series[seriesName].Color = color;</span><br><span class="line">        <span class="keyword">if</span> (showValue)</span><br><span class="line">        &#123;</span><br><span class="line">            chart.Series[seriesName].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">            chart.Series[seriesName].MarkerStyle = MarkerStyle.Circle;</span><br><span class="line">            chart.Series[seriesName].MarkerColor = markColor;</span><br><span class="line">            chart.Series[seriesName].LabelForeColor = color;</span><br><span class="line">            chart.Series[seriesName].LabelAngle = <span class="number">-90</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置标题</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chartName&quot;&gt;</span>图表名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetTitle</span>(<span class="params">Chart chart, <span class="built_in">string</span> chartName, Font font, Docking docking, Color foreColor</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.Titles.Add(chartName);</span><br><span class="line">        chart.Titles[<span class="number">0</span>].Font = font;</span><br><span class="line">        chart.Titles[<span class="number">0</span>].Docking = docking;</span><br><span class="line">        chart.Titles[<span class="number">0</span>].ForeColor = foreColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置样式</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;backColor&quot;&gt;</span>背景颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;foreColor&quot;&gt;</span>字体颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetStyle</span>(<span class="params">Chart chart, Color backColor, Color foreColor</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.BackColor = backColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].BackColor = backColor;</span><br><span class="line">        chart.ForeColor = Color.Red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置图例</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;docking&quot;&gt;</span>停靠位置<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;align&quot;&gt;</span>对齐方式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;backColor&quot;&gt;</span>背景颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;foreColor&quot;&gt;</span>字体颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLegend</span>(<span class="params">Chart chart, Docking docking, StringAlignment align, Color backColor, Color foreColor</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].Docking = docking;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].Alignment = align;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].BackColor = backColor;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].ForeColor = foreColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置XY轴</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;xTitle&quot;&gt;</span>X轴标题<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;yTitle&quot;&gt;</span>Y轴标题<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;align&quot;&gt;</span>坐标轴标题对齐方式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;foreColor&quot;&gt;</span>坐标轴字体颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;lineColor&quot;&gt;</span>坐标轴颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;arrowStyle&quot;&gt;</span>坐标轴箭头样式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;xInterval&quot;&gt;</span>X轴的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;yInterval&quot;&gt;</span>Y轴的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetXY</span>(<span class="params">Chart chart, <span class="built_in">string</span> xTitle, <span class="built_in">string</span> yTitle, StringAlignment align, Color foreColor, Color lineColor, AxisArrowStyle arrowStyle, <span class="built_in">double</span> xInterval, <span class="built_in">double</span> yInterval</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.Title = xTitle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.Title = yTitle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.TitleAlignment = align;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.TitleAlignment = align;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = foreColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.TitleForeColor = foreColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle = <span class="keyword">new</span> LabelStyle() &#123; ForeColor = foreColor &#125;;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle = <span class="keyword">new</span> LabelStyle() &#123; ForeColor = foreColor &#125;;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.ArrowStyle = arrowStyle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.ArrowStyle = arrowStyle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.Interval = xInterval;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.Interval = yInterval;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置网格</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;lineColor&quot;&gt;</span>网格线颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;xInterval&quot;&gt;</span>X轴网格的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;yInterval&quot;&gt;</span>Y轴网格的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetMajorGrid</span>(<span class="params">Chart chart, Color lineColor, <span class="built_in">double</span> xInterval, <span class="built_in">double</span> yInterval</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Interval = xInterval;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Interval = yInterval;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加form-load事件代码"><a href="#添加form-load事件代码" class="headerlink" title="添加form_load事件代码"></a>添加form_load事件代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">chart1.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart1, <span class="string">&quot;柱状图&quot;</span>, SeriesChartType.Column, Color.Lime, Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.AddSeries(chart1, <span class="string">&quot;曲线图&quot;</span>, SeriesChartType.Spline, Color.Red, Color.Red);</span><br><span class="line">ChartHelper.SetTitle(chart1, <span class="string">&quot;柱状图与曲线图&quot;</span>, <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12</span>), Docking.Bottom, Color.White);</span><br><span class="line">ChartHelper.SetStyle(chart1, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart1, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetXY(chart1, <span class="string">&quot;序号&quot;</span>, <span class="string">&quot;数值&quot;</span>, StringAlignment.Far, Color.White, Color.White, AxisArrowStyle.SharpTriangle, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">ChartHelper.SetMajorGrid(chart1, Color.Gray, <span class="number">20</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">chart2.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart2, <span class="string">&quot;饼状图&quot;</span>, SeriesChartType.Pie, Color.Lime, Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.SetStyle(chart2, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart2, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line"></span><br><span class="line">chart3.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart3, <span class="string">&quot;曲线图&quot;</span>, SeriesChartType.SplineRange, Color.FromArgb(<span class="number">100</span>, <span class="number">46</span>, <span class="number">199</span>, <span class="number">201</span>), Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.SetTitle(chart3, <span class="string">&quot;曲线图&quot;</span>, <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12</span>), Docking.Bottom, Color.FromArgb(<span class="number">46</span>, <span class="number">199</span>, <span class="number">201</span>));</span><br><span class="line">ChartHelper.SetStyle(chart3, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart3, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetXY(chart3, <span class="string">&quot;序号&quot;</span>, <span class="string">&quot;数值&quot;</span>, StringAlignment.Far, Color.White, Color.White, AxisArrowStyle.SharpTriangle, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">ChartHelper.SetMajorGrid(chart3, Color.Gray, <span class="number">20</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">chart4.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart4, <span class="string">&quot;饼状图&quot;</span>, SeriesChartType.Funnel, Color.Lime, Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.SetStyle(chart4, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart4, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line"></span><br><span class="line">RefreshData();</span><br></pre></td></tr></table></figure><h1 id="添加一些方法功能"><a href="#添加一些方法功能" class="headerlink" title="添加一些方法功能"></a>添加一些方法功能</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RefreshData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; x1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; y1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">    Random ra = <span class="keyword">new</span> Random();</span><br><span class="line">    y1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123;</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart1&quot;</span>);</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart2&quot;</span>);</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart3&quot;</span>);</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart4&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">RefreshChartDelegate</span>(<span class="params">List&lt;<span class="built_in">int</span>&gt; x, List&lt;<span class="built_in">int</span>&gt; y, <span class="built_in">string</span> type</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RefreshChart</span>(<span class="params">List&lt;<span class="built_in">int</span>&gt; x, List&lt;<span class="built_in">int</span>&gt; y, <span class="built_in">string</span> type</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (type == <span class="string">&quot;chart1&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart1.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            chart1.Series[<span class="number">1</span>].Points.DataBindXY(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="string">&quot;chart2&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart2.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart2.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            List&lt;Color&gt; colors = <span class="keyword">new</span> List&lt;Color&gt;() &#123;</span><br><span class="line">                Color.Red,</span><br><span class="line">                Color.DarkRed,</span><br><span class="line">                Color.IndianRed,</span><br><span class="line">                Color.MediumVioletRed,</span><br><span class="line">                Color.OrangeRed,</span><br><span class="line">                Color.PaleVioletRed,</span><br><span class="line">                Color.Purple,</span><br><span class="line">                Color.DarkOrange,</span><br><span class="line">                Color.Maroon,</span><br><span class="line">                Color.LightCoral,</span><br><span class="line">                Color.LightPink,</span><br><span class="line">                Color.Magenta</span><br><span class="line">            &#125;;</span><br><span class="line">            DataPointCollection points = chart2.Series[<span class="number">0</span>].Points;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; points.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                points[i].Color = colors[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="string">&quot;chart3&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart3.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart3.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="string">&quot;chart4&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart4.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart4.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            List&lt;Color&gt; colors = <span class="keyword">new</span> List&lt;Color&gt;() &#123;</span><br><span class="line">                Color.Red,</span><br><span class="line">                Color.DarkRed,</span><br><span class="line">                Color.IndianRed,</span><br><span class="line">                Color.MediumVioletRed,</span><br><span class="line">                Color.OrangeRed,</span><br><span class="line">                Color.PaleVioletRed,</span><br><span class="line">                Color.Purple,</span><br><span class="line">                Color.DarkOrange,</span><br><span class="line">                Color.Maroon,</span><br><span class="line">                Color.LightCoral,</span><br><span class="line">                Color.LightPink,</span><br><span class="line">                Color.Magenta</span><br><span class="line">            &#125;;</span><br><span class="line">            DataPointCollection points = chart4.Series[<span class="number">0</span>].Points;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; points.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                points[i].Color = colors[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加定时器定时刷新功能"><a href="#添加定时器定时刷新功能" class="headerlink" title="添加定时器定时刷新功能"></a>添加定时器定时刷新功能</h1><blockquote><p><strong>注意：定时器添加的线程Thread需要先定义后使用</strong><br>在声明处添加 <strong>using System.Threading;</strong> 即可</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(RefreshData)).Start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加按钮控制开始和停止"><a href="#添加按钮控制开始和停止" class="headerlink" title="添加按钮控制开始和停止"></a>添加按钮控制开始和停止</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b_tstart)</span><br><span class="line">    &#123;</span><br><span class="line">        b_tstart=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.timer1.Stop();</span><br><span class="line">        button1.Text = <span class="string">&quot;启动&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        b_tstart = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.timer1.Start();</span><br><span class="line">        button1.Text = <span class="string">&quot;停止&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.bilibili.com/read/cv14839280/">C#中Winform Chart图表控件使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#串口功能之三（串口实时显示波形）</title>
      <link href="/posts/719299426.html"/>
      <url>/posts/719299426.html</url>
      
        <content type="html"><![CDATA[<h1 id="功能实现"><a href="#功能实现" class="headerlink" title="功能实现"></a>功能实现</h1><p><strong>实现单片机与电脑通讯，通过串口接收。并显示通过串口过来的数据波形</strong></p><h1 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h1><p><img src="https://img-blog.csdn.net/20180724163911530?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMDE3NjYx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><blockquote><p>在主界面设置串口号以及波特率，点击打开串口，再点击波形显示，即可显示通过串口过来的数据波形。</p></blockquote><p><strong>主界面源码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace _3</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">ShowWindow</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">HideWindow</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">OpenPort</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">ClosePort</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> Point <span class="title">GetMainPos</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">GetMainWidth</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainForm</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        Drawer Displayer;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainForm</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls = <span class="literal">false</span>;  <span class="comment">//操控线程</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">serialPort1_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, System.IO.Ports.SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">byte</span>[] data = <span class="keyword">new</span> <span class="built_in">byte</span>[serialPort1.BytesToRead];                                <span class="comment">//定义缓冲区，因为串口事件触发时有可能收到不止一个字节</span></span><br><span class="line">            serialPort1.Read(data, <span class="number">0</span>, data.Length);</span><br><span class="line">            <span class="keyword">if</span> (Displayer != <span class="literal">null</span>)</span><br><span class="line">                Displayer.AddData(data);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateNewDrawer</span>(<span class="params"></span>)<span class="comment">//创建ADC绘制窗口</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Displayer = <span class="keyword">new</span> Drawer();<span class="comment">//创建新对象</span></span><br><span class="line"></span><br><span class="line">            Displayer.Show();<span class="comment">//显示窗口</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateDisplayer</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Left = <span class="number">0</span>;</span><br><span class="line">            CreateNewDrawer();</span><br><span class="line">            Rectangle Rect = Screen.GetWorkingArea(<span class="keyword">this</span>);</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.PortName = comboBox1.Text;                                              <span class="comment">//端口号</span></span><br><span class="line">                serialPort1.BaudRate = Convert.ToInt32(comboBox2.Text);                             <span class="comment">//波特率</span></span><br><span class="line">                serialPort1.Open();                                                                 <span class="comment">//打开串口</span></span><br><span class="line">                button2.Enabled = <span class="literal">false</span>;</span><br><span class="line">                button3.Enabled = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;端口错误&quot;</span>, <span class="string">&quot;错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.Close();     <span class="comment">//关闭串口                                                       //关闭串口        </span></span><br><span class="line">                button2.Enabled = <span class="literal">true</span>;</span><br><span class="line">                button3.Enabled = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            catch                  <span class="comment">//一般关闭串口不会出错，故而不用编程</span></span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                comboBox1.Items.Add(<span class="string">&quot;COM&quot;</span> + i.ToString());                                        <span class="comment">//添加串口</span></span><br><span class="line">            &#125;</span><br><span class="line">            comboBox1.Text = <span class="string">&quot;COM1&quot;</span>;                                                              <span class="comment">//默认选项</span></span><br><span class="line">            comboBox2.Text = <span class="string">&quot;4800&quot;</span>;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (Displayer == <span class="literal">null</span>)<span class="comment">//第一次创建Displayer = null</span></span><br><span class="line">            &#123;</span><br><span class="line">                CreateDisplayer();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Displayer.IsDisposed)<span class="comment">//多次创建通过判断IsDisposed确定串口是否已关闭，避免多次创建</span></span><br><span class="line">                &#123;</span><br><span class="line">                    CreateDisplayer();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">comboBox1_SelectedIndexChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="绘制界面"><a href="#绘制界面" class="headerlink" title="绘制界面"></a>绘制界面</h1><p><img src="https://img-blog.csdn.net/20180724163945361?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMDE3NjYx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><p><strong>绘制界面源码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace _3</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Drawer</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> Unit_length = <span class="number">22</span>;<span class="comment">//单位格大小</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> DrawStep = <span class="number">5</span>;<span class="comment">//默认绘制单位</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> Y_Max = <span class="number">255</span>;<span class="comment">//Y轴最大数值</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MaxStep = <span class="number">30</span>;<span class="comment">//绘制单位最大值</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> MinStep = <span class="number">1</span>;<span class="comment">//绘制单位最小值 </span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> StartPrint = <span class="number">32</span>;<span class="comment">//点坐标偏移量</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">List</span>&lt;<span class="title">byte</span>&gt; DataList</span> = <span class="keyword">new</span> List&lt;<span class="built_in">byte</span>&gt;();<span class="comment">//数据结构----线性链表</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">List</span>&lt;<span class="title">byte</span>&gt; DataListZH</span> = <span class="keyword">new</span> List&lt;<span class="built_in">byte</span>&gt;();<span class="comment">//数据结构----线性链表</span></span><br><span class="line">        <span class="keyword">private</span> Pen LinesPen = <span class="keyword">new</span> Pen(Color.FromArgb(<span class="number">0xaa</span>, <span class="number">0x00</span>, <span class="number">0x00</span>));<span class="comment">//波形颜色</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> KeyShift, KeyStepUp, KeyStepDown;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Drawer</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.SetStyle(ControlStyles.DoubleBuffer | ControlStyles.UserPaint | ControlStyles.AllPaintingInWmPaint, <span class="literal">true</span>);<span class="comment">//开启双缓冲</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.UpdateStyles();</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddData</span>(<span class="params"><span class="built_in">byte</span>[] Data</span>)    <span class="comment">//将MainForm的数据推送过来</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; Data.Length; i++)</span><br><span class="line">                DataList.Add(Data[i]);<span class="comment">//链表尾部添加数据</span></span><br><span class="line"></span><br><span class="line">            Invalidate();<span class="comment">//刷新显示</span></span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Drawer_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Drawer_Paint</span>(<span class="params"><span class="built_in">object</span> sender, PaintEventArgs e</span>)   <span class="comment">//绘制</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//String Str = &quot;&quot;;</span></span><br><span class="line">            e.Graphics.FillRectangle(Brushes.White, e.Graphics.ClipBounds);      <span class="comment">//将整个窗口定义为白色</span></span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (DataList.Count - <span class="number">1</span> &gt;= (<span class="keyword">this</span>.ClientRectangle.Width - StartPrint) / DrawStep)<span class="comment">//如果数据量大于可容纳的数据量，即删除最左数据</span></span><br><span class="line">            &#123;</span><br><span class="line">                DataList.RemoveRange(<span class="number">0</span>, DataList.Count - (<span class="keyword">this</span>.ClientRectangle.Width - StartPrint) / DrawStep - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] DataListt = DataList.ToArray();</span><br><span class="line">            <span class="built_in">int</span>[] D = <span class="keyword">new</span> <span class="built_in">int</span>[DataListt.Length];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; DataListt.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">int</span> m = DataListt[i];</span><br><span class="line">                D[i] = m;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span>[] D2 = <span class="keyword">new</span> <span class="built_in">int</span>[DataListt.Length];</span><br><span class="line"></span><br><span class="line">            <span class="comment">//500采样频率的50Hz陷波</span></span><br><span class="line">            <span class="built_in">double</span>[] B = <span class="keyword">new</span> <span class="built_in">double</span>[<span class="number">3</span>] &#123; <span class="number">0.96897915136010271</span>, <span class="number">-1.5678412012906751</span>, <span class="number">0.96897915136010271</span> &#125;;</span><br><span class="line">            <span class="built_in">double</span>[] A = <span class="keyword">new</span> <span class="built_in">double</span>[<span class="number">3</span>] &#123; <span class="number">1</span>, <span class="number">-1.5678412012906751</span>, <span class="number">0.93795830272020542</span> &#125;;</span><br><span class="line">            <span class="built_in">double</span> W1 = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">double</span> W2 = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">double</span> W3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; DataListt.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                W1 = A[<span class="number">0</span>] * D[i] - A[<span class="number">1</span>] * W2 - A[<span class="number">2</span>] * W3;</span><br><span class="line">                <span class="built_in">double</span> s = Math.Floor(B[<span class="number">0</span>] * W1 + B[<span class="number">1</span>] * W2 + B[<span class="number">2</span>] * W3);</span><br><span class="line">                D2[i] = (<span class="built_in">int</span>)s;</span><br><span class="line">                W3 = W2;</span><br><span class="line">                W2 = W1;</span><br><span class="line">            &#125;</span><br><span class="line">            W1 = <span class="number">0</span>;</span><br><span class="line">            W2 = <span class="number">0</span>;</span><br><span class="line">            W3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//平滑</span></span><br><span class="line">            <span class="built_in">int</span>[] D3 = <span class="keyword">new</span> <span class="built_in">int</span>[DataListt.Length];</span><br><span class="line">            D3 = D2;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">2</span>; i &lt; DataListt.Length - <span class="number">3</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">int</span> s =  D2[i - <span class="number">2</span>] + D2[i - <span class="number">1</span>] + D2[i] + D2[i + <span class="number">1</span>] + D2[i + <span class="number">2</span>] ;</span><br><span class="line">                D3[i] = s / <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//数据入组</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; D3.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span>[] M = BitConverter.GetBytes(D3[i]);</span><br><span class="line">                DataListZH.Add(M[<span class="number">0</span>]);</span><br><span class="line">                Invalidate();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (DataListZH.Count - <span class="number">1</span> &gt;= (<span class="keyword">this</span>.ClientRectangle.Width - StartPrint) / DrawStep)<span class="comment">//如果数据量大于可容纳的数据量，即删除最左数据</span></span><br><span class="line">            &#123;</span><br><span class="line">                DataListZH.RemoveRange(<span class="number">0</span>, DataListZH.Count - (<span class="keyword">this</span>.ClientRectangle.Width - StartPrint) / DrawStep - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; DataListZH.Count - <span class="number">1</span>; i++)           <span class="comment">//绘制波形</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Graphics.DrawLine(LinesPen, StartPrint + i * DrawStep, <span class="number">17</span> * Unit_length - DataListZH[i]*<span class="number">3</span> , StartPrint + (i + <span class="number">1</span>) * DrawStep, <span class="number">17</span> * Unit_length - DataListZH[i + <span class="number">1</span>]*<span class="number">3</span> );     <span class="comment">//绘制一条连接由坐标对指定的两个点的线条</span></span><br><span class="line">                <span class="comment">//(波形颜色，x1,y1,x2,y2)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Drawer_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.Shift)<span class="comment">//shift功能键按下</span></span><br><span class="line">                KeyShift = <span class="literal">true</span>;<span class="comment">//标志位置位</span></span><br><span class="line">            <span class="keyword">switch</span> (e.KeyCode)<span class="comment">//功能标志置位</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> Keys.Up:<span class="comment">//放大波形</span></span><br><span class="line">                    KeyStepUp = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Keys.Down:<span class="comment">//缩小波形</span></span><br><span class="line">                    KeyStepDown = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="literal">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Drawer_KeyUp</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (KeyShift)</span><br><span class="line">            &#123;             </span><br><span class="line"></span><br><span class="line">                                <span class="keyword">if</span> (KeyStepUp)</span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (DrawStep &lt; MaxStep)<span class="comment">//绘制单位递增</span></span><br><span class="line">                                        DrawStep++;</span><br><span class="line">                                    Invalidate();</span><br><span class="line">                                    KeyStepUp = <span class="literal">false</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (KeyStepDown)</span><br><span class="line">                                    &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (DrawStep &gt; MinStep)<span class="comment">//绘制单位递减</span></span><br><span class="line">                                            DrawStep--;</span><br><span class="line">                                        Invalidate();</span><br><span class="line">                                        KeyStepDown = <span class="literal">false</span>;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                   </span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span><span class="comment">//如果是其他按键，清空所有标志位</span></span><br><span class="line">            &#123;</span><br><span class="line">                KeyStepUp = <span class="literal">false</span>;</span><br><span class="line">                KeyStepDown = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            KeyShift = <span class="literal">false</span>;<span class="comment">//清空shift标志位</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><h2 id="问题一：复制程序后没有效果"><a href="#问题一：复制程序后没有效果" class="headerlink" title="问题一：复制程序后没有效果"></a>问题一：复制程序后没有效果</h2><p>A:需要对事件进行绑定！在设计窗口下，点击事件按钮（带闪电图标），然后分别将对应函数和事件联系起来<br>KeyDown-&gt;Drawer_KeyDown、KeyUp-&gt;Drawer_KeyUp、Paint-&gt;Drawer_Paint，而后 Invalidate 刷新显示才有效</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_41017661/article/details/81187745">C#实现串口通讯实时显示波形并实现平滑滤波和50Hz滤波</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 通讯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 串口通讯 </tag>
            
            <tag> 波形 </tag>
            
            <tag> 绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之五（Chart 创建多个ChartArea）</title>
      <link href="/posts/123814450.html"/>
      <url>/posts/123814450.html</url>
      
        <content type="html"><![CDATA[<h1 id="在窗口上添加Chart控件"><a href="#在窗口上添加Chart控件" class="headerlink" title="在窗口上添加Chart控件"></a>在窗口上添加Chart控件</h1><p><strong>chart控件属性设置：【图表】–【ChartAreas集合】。此处设置了2个ChartArea。</strong></p><p><img src="https://www.freesion.com/images/666/11f937002736420bcd0f754f039c3caa.png"></p><h1 id="设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，"><a href="#设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，" class="headerlink" title="设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，"></a>设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，</h1><p><img src="https://www.freesion.com/images/901/e7d0d1e5c5d4e31a124a9c9d3c1d9b85.png"></p><h1 id="曲线较多，可以自己写代码设置"><a href="#曲线较多，可以自己写代码设置" class="headerlink" title="曲线较多，可以自己写代码设置"></a>曲线较多，可以自己写代码设置</h1><blockquote><p>这个例子中我用代码设置了3条曲线。</p></blockquote><p><strong>全部代码如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     <span class="keyword">init</span>();<span class="comment">//曲线初始化</span></span><br><span class="line">     timer1.Start();<span class="comment">//开启计时器</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 曲线初始化</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     <span class="comment">//清除默认的series</span></span><br><span class="line">     chart1.Series.Clear();</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>;i&lt; <span class="number">3</span>;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         Series series = <span class="keyword">new</span> Series(SERIES[i]);</span><br><span class="line">         series.ChartType = SeriesChartType.Spline;</span><br><span class="line">         series.MarkerBorderWidth = <span class="number">2</span>;</span><br><span class="line">         series.MarkerSize = <span class="number">4</span>;</span><br><span class="line">         series.MarkerStyle = MarkerStyle.Circle;</span><br><span class="line">         series.ToolTip = SERIES[i] + <span class="string">&quot; #VAL \r\n #AXISLABEL&quot;</span>;</span><br><span class="line">         chart1.Series.Add(series);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 曲线</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span>[] SERIES =</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="string">&quot;曲线一&quot;</span>,<span class="string">&quot;曲线二&quot;</span>,<span class="string">&quot;曲线三&quot;</span></span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 计时器</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     Random r1 = <span class="keyword">new</span> Random();</span><br><span class="line">     <span class="built_in">int</span> val1 = r1.Next(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">     Random r2 = <span class="keyword">new</span> Random();</span><br><span class="line">     <span class="built_in">int</span> val2 = r1.Next(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">     Random r3 = <span class="keyword">new</span> Random();</span><br><span class="line">     <span class="built_in">int</span> val3 = r1.Next(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartArea = <span class="string">&quot;ChartArea1&quot;</span>;</span><br><span class="line">         <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].ChartArea = <span class="string">&quot;ChartArea1&quot;</span>;</span><br><span class="line">         <span class="keyword">this</span>.chart1.Series[<span class="number">2</span>].ChartArea = <span class="string">&quot;ChartArea2&quot;</span>;</span><br><span class="line">         chart1.Series[<span class="number">0</span>].Points.AddY(val1);</span><br><span class="line">         chart1.Series[<span class="number">1</span>].Points.AddY(val2);</span><br><span class="line">         chart1.Series[<span class="number">2</span>].Points.AddY(val3);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>结果如图所示：</strong></p><p><img src="https://www.freesion.com/images/818/3bdc9fa7ad793b900c225760e51ac122.png"></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.freesion.com/article/2399683528/">C# CHART控件多个CHARTAREA</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之四（Chart 简单绘图）</title>
      <link href="/posts/4010725329.html"/>
      <url>/posts/4010725329.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Chart控件可以用来绘制波形图、柱状图、饼图、折线图等，用来进行数据表现是很不错的，现在简单说一下这个控件的使用方法</p></blockquote><h1 id="一、效果图"><a href="#一、效果图" class="headerlink" title="一、效果图"></a>一、效果图</h1><p><img src="https://img-blog.csdnimg.cn/2021012817414331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><h1 id="二、设置步骤"><a href="#二、设置步骤" class="headerlink" title="二、设置步骤"></a>二、设置步骤</h1><p><strong>首先要加载Chart控件：</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128174254241.png"></p><p><strong>打开控件的属性窗口</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128174442185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><p><strong>在这个窗口里面我们可以修改曲线的名称，名称在【数据》Name】里面修改</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128174511238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><h1 id="三、常用几个选项的作用"><a href="#三、常用几个选项的作用" class="headerlink" title="三、常用几个选项的作用"></a>三、常用几个选项的作用</h1><blockquote><p><strong>数据：XValueType是X轴的数据类型，Y同理，这里我们选Time，可以随时间改变</strong><br><strong>图表：ChartType是图表的类型，我们可以选出我们想要用的类型，这里选曲线</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210128175000769.png"></p><blockquote><p><strong>外观：Color可以选择曲线的颜色，这里我选了红色</strong><br><strong>其他：左边的成员框，是我们要显示的曲线，可以添加多个</strong></p></blockquote><blockquote><p>其他属性如果有需要自行修改，修改好之后确定，回到窗口设计界面</p></blockquote><p><strong>在工具箱添加Timer</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128175311218.png"></p><p><strong>在Timer的事件窗口双击时钟事件</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128175423217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><h1 id="四、代码实现"><a href="#四、代码实现" class="headerlink" title="四、代码实现"></a>四、代码实现</h1><blockquote><p>代码如下，请自行对照填到对应的事件里面去</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            timer1.Enabled = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.AddY(cnt*cnt);</span><br><span class="line">            label1.Text = cnt.ToString();</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>注：cnt是个自变量，曲线显示的是cnt为底的2次指数曲线</strong></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/zlllg/article/details/113353399">C#中如何使用Chart图表</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#语法之二（try-catch用法）</title>
      <link href="/posts/2758512064.html"/>
      <url>/posts/2758512064.html</url>
      
        <content type="html"><![CDATA[<h1 id="Try-Catch-说明和使用"><a href="#Try-Catch-说明和使用" class="headerlink" title="Try-Catch 说明和使用"></a>Try-Catch 说明和使用</h1><blockquote><p>在C#程序运行中，不可避免的会出现很多异常事件，这些异常事件会阻止程序继续运行，给用户体验增加困难。所以我们要尽量避免异常的同时，也要对异常进行处理。这时就需要使用到try-catch语句。</p></blockquote><p><strong>例如，写一段异常程序，不用try-catch，效果如下：</strong></p><p><img src="https://img-blog.csdnimg.cn/430345e553ae44dbb45b4e3710238fb0.png"></p><p>这时系统会弹出如下错误，直接将错误弹出来，使用户体验不好。</p><p><img src="https://img-blog.csdnimg.cn/a85bf5ad88f9451b9dc4e861b19a69ca.png"></p><p><strong>使用Try-catch用法之后，代码和效果如下所示：</strong></p><p><img src="https://img-blog.csdnimg.cn/60db0f9c1684467f94018622a9a79e90.png"></p><p>则若产生异常，会根据程序输出相应的错误提示，提高用户体验，如下所示：</p><p><img src="https://img-blog.csdnimg.cn/370edc3ef7484492b7c2351fb9b275bc.png"></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_41883890/article/details/124725452">C#语法中try-catch的用法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 语法 </tag>
            
            <tag> try-catch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#数学函数之一（正弦sin、反正弦arcsin，正切tan、反正切arctan）</title>
      <link href="/posts/1660897681.html"/>
      <url>/posts/1660897681.html</url>
      
        <content type="html"><![CDATA[<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 三角函数和反三角函数</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Messaging;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Linq;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 正弦、反正弦</span></span><br><span class="line">            <span class="comment">//正弦</span></span><br><span class="line">            <span class="built_in">double</span> sinAngleValue1 = <span class="number">30</span>;<span class="comment">//角度值：30度。</span></span><br><span class="line">            <span class="built_in">double</span> sinRadianValue1 = Math.PI * sinAngleValue1 / <span class="number">180</span>;<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> sinValue1 = Math.Sin(sinRadianValue1);<span class="comment">//求sin30度，其实sin30度 = sin(PI/6)，但是，数学上或代码上，常常用弧度PI/6,来计算sin(PI/6)，其他函数同理。</span></span><br><span class="line">            Console.WriteLine(sinValue1);</span><br><span class="line">            <span class="comment">//反正弦</span></span><br><span class="line">            <span class="built_in">double</span> sinValue2 = <span class="number">0.5</span>;<span class="comment">//正弦值 = 0.5。</span></span><br><span class="line">            <span class="built_in">double</span> sinRadianValue2 = Math.Asin(sinValue2);<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> sinAngleValue2 = sinRadianValue2 / Math.PI * <span class="number">180</span>;<span class="comment">//根据弧度值，来求角度值。</span></span><br><span class="line">            Console.WriteLine(sinAngleValue2);</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"> </span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 正切、反正切</span></span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            <span class="comment">//正切</span></span><br><span class="line">            <span class="built_in">double</span> tanAngleValue1 = <span class="number">15</span>;<span class="comment">//角度值</span></span><br><span class="line">            <span class="built_in">double</span> tanRadianValue1 = Math.PI * tanAngleValue1 / <span class="number">180</span>;<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> tanValue1 = Math.Tan(tanRadianValue1);<span class="comment">//tan值</span></span><br><span class="line">            Console.WriteLine(tanValue1);<span class="comment">//tan值</span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">double</span> tanValue2 = <span class="number">1</span>;<span class="comment">//正切值</span></span><br><span class="line">            <span class="built_in">double</span> tanRadianValue2 = Math.Atan(tanValue2);<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> tanAngleValue2 = tanRadianValue2 / Math.PI *<span class="number">180</span>;<span class="comment">//求角度</span></span><br><span class="line">            Console.WriteLine(tanAngleValue2);</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_15241978/2850238">c#实现 正弦sin、反正弦arcsin，正切tan、反正切arctan：求角度值</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 数学函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#编辑器之一（#region 大纲功能）</title>
      <link href="/posts/3856603375.html"/>
      <url>/posts/3856603375.html</url>
      
        <content type="html"><![CDATA[<h1 id="region说明"><a href="#region说明" class="headerlink" title="region说明"></a>region说明</h1><p>利用 #region，可以指定在使用 Visual Studio Code 编辑器的大纲功能时可展开或折叠的代码块。<br>在较长的代码文件中，能够折叠或隐藏一个或多个区域会十分便利，这样，可将精力集中于当前处理的文件部分。</p><h1 id="添加方式和效果"><a href="#添加方式和效果" class="headerlink" title="添加方式和效果"></a>添加方式和效果</h1><p><strong>添加步骤：</strong><br>方法一、选中需要添加的代码段——右键——片段——外侧代码。<br>方法二、手动输入 #region</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 分页列表展示</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> ActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="built_in">int</span> pageIndex = Request[<span class="string">&quot;pageIndex&quot;</span>] != <span class="literal">null</span> ? Convert.ToInt32(Request[<span class="string">&quot;pageIndex&quot;</span>]) : <span class="number">1</span>;</span><br><span class="line">           <span class="built_in">int</span> pageSize = <span class="number">5</span>;</span><br><span class="line">           <span class="built_in">int</span> pageCount = NewInfoService.GetPageCount(pageSize);</span><br><span class="line">           pageIndex = pageIndex &lt; <span class="number">1</span> ? <span class="number">1</span> : pageIndex;</span><br><span class="line">           pageIndex = pageIndex &gt; pageCount ? pageCount : pageIndex;</span><br><span class="line">           List&lt;T_New&gt;list=NewInfoService.GetPageEntityList(pageIndex, pageSize);</span><br><span class="line">           ViewData[<span class="string">&quot;newInfoList&quot;</span>] = list;</span><br><span class="line">           ViewData[<span class="string">&quot;pageIndex&quot;</span>] = pageIndex;</span><br><span class="line">           ViewData[<span class="string">&quot;pageCount&quot;</span>] = pageCount;</span><br><span class="line">           <span class="keyword">return</span> View();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/2018051410513243?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2NTYyMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p><code>#region</code> 块必须通过 <a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-endregion">#endregion</a> 指令终止。</p><p><code>#region</code> 块不能与 <a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-if">#if</a> 块重叠。 但是，可以将 <code>#region</code> 块嵌套在 <code>#if</code> 块内，或将 <code>#if</code> 块嵌套在 <code>#region</code> 块内。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_38465623/article/details/80306743">#region</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 编辑器 </tag>
            
            <tag> 大纲功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之三（Chart 设置Y轴自适应）</title>
      <link href="/posts/1486382218.html"/>
      <url>/posts/1486382218.html</url>
      
        <content type="html"><![CDATA[<p>既然用到了chart控件，那么这个图像就有各种不确定的数据以及多条曲线</p><h1 id="一、Y轴的自适应"><a href="#一、Y轴的自适应" class="headerlink" title="一、Y轴的自适应"></a>一、Y轴的自适应</h1><blockquote><p><strong>关于Y轴的自适应只需要在设置图表时将最大值和最小值改为一下代码即可</strong></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.chart1.ChartAreas[<span class="number">0</span>].AxisY.IsStartedFromZero = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h1 id="二、多条线的展示（核心代码如下）"><a href="#二、多条线的展示（核心代码如下）" class="headerlink" title="二、多条线的展示（核心代码如下）"></a>二、多条线的展示（核心代码如下）</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置图表显示样式</span></span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Color = Color.Blue;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Titles[<span class="number">0</span>].Text = <span class="built_in">string</span>.Format(<span class="string">&quot;这是一个测试表&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartType = SeriesChartType.Line;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartType = SeriesChartType.FastLine;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Points.Clear();</span><br><span class="line">            <span class="comment">//第二条图像</span></span><br><span class="line">            Series series2 = <span class="keyword">new</span> Series(<span class="string">&quot;S2&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series.Add(series2);</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].Color = Color.Red;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].ChartType = SeriesChartType.Spline;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].ChartType = SeriesChartType.FastLine;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].Points.Clear();</span><br></pre></td></tr></table></figure><p>这是对差chart产生两个数据的设定，除此之外，还需要对数据更新时设置，将二者分开设置（在这里不进行详细的说明了，可以直接复制对只有一个线的数据更新）</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/Caiabcd/article/details/108910488">C#的chart控件生成的波形图Y轴自适应</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之二（Chart 样式说明）</title>
      <link href="/posts/2957355685.html"/>
      <url>/posts/2957355685.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、Chart属性熟悉"><a href="#一、Chart属性熟悉" class="headerlink" title="一、Chart属性熟悉"></a>一、Chart属性熟悉</h1><blockquote><p>能够对C# chart控件属性熟悉起帮助的code, 现在分享给大家，<a href="https://files.cnblogs.com/files/arxive/WinChart_Operate_Demo.rar">Chart Operate Demo Code Download</a>，如有帮助，别忘点个赞.</p></blockquote><p><img src="https://images2015.cnblogs.com/blog/527375/201609/527375-20160912142644711-1711793675.png" alt="img"></p><p>有关MS_Chart的Control范围、ChartArea范围、InnerPlotArea范围，及Lengend、刻度与标签的位置关系如下图所示。以便让大家有个清晰的认识。</p><p><img src="https://images2015.cnblogs.com/blog/527375/201703/527375-20170316151631057-660893516.jpg" alt="img"></p><p>Chart<br>    ChartBorder            图表区域的边框设置<br>    ChartFill             图表区域的背景填充<br>    Legend              图表的注释标签显示设置项目，一组数据对应一种颜色的注释<br>      IsHStack           当有多个显示项的时候设置Y轴数据是叠加的还是分开的<br>    Xaxis               图表区域的X轴相关信息设置<br>      AxisColor          坐标轴颜色<br>      Cross            坐标的原点，可以设置坐标的偏移程度<br>      CrossAuto          原点自动设置：True的话Cross的设置就无效了。<br>      FontSpec           X轴标题字体相关信息<br>         Angle         X轴标题字体显示时候的角度，0为水平 90为垂直<br>         Fill          X轴标题字体填充信息<br>            ColorOpacity   透明度<br>            IsScaled     设置X轴标题字体显示大小是否根据图的比例放大缩小<br>            RangeMax     填充时候的最大倾斜度（有过渡色，没试过）<br>            RangeMin     填充时候的最小倾斜度（有过渡色，没试过）<br>         StringAlignment    X轴标题字体排列（不清楚，没试过）<br>      IsOmitMag          是否显示指数幂（10次方，没试过，似乎与IsUseTenPower有关系）<br>      IsPreventLabelOverlap    坐标值显示是否允许重叠，如果False的话，控件会根据坐标值长度自动消除部分坐标值的显示状态<br>      IsShowTitle         X轴标题是否显示<br>      IsTicsBetweenLabels     两个坐标值之间是否自动显示分隔标志<br>      IsUseTenPower        是否使用10次幂指数<br>      IsVisible          是否显示X轴<br>      IsZeroLine          当数据为0时候是否显示（在饼状图显示的时候有用）<br>      MajorGrid          大跨度的X轴表格虚线线显示信息<br>         DashOff        虚线中孔间距<br>         DashOn         虚线单位长度<br>      MajorTic           大跨度的X轴刻度信息<br>         IsInside        在Chart内部是否显示<br>         IsOutSide       在Chart外部是否显示<br>         IsOpposite       在对面的轴上是否显示<br>      MinorGrid          小跨度的X轴表格虚线显示信息<br>      MinorTic           小跨度的x轴刻度信息<br>      MinSpace           刻度和轴之间的距离（没试过）<br>      Scale            刻度值的一些设定<br>         IsReverse       X轴的刻度值从高到低还是从低到高<br>         MajorStep       大刻度步长<br>         MajorStepAuto     是否自动设置大刻度步长<br>         MajorUnit       大刻度步长单位<br>         Max          刻度最大值<br>         MaxAuto        根据输入数据自动设置刻度最大值<br>         Min          刻度最小值<br>         MinAuto        根据输入数据自动设置刻度最小值<br>         MinGrace        不清楚，没试过<br>         MinorStep       小刻度步长<br>         MinorStepAuto     是否自动设置小刻度步长<br>         MinorUnit       小刻度单位<br>      Type             数据显示方式<br>                      Liner直接现实（自动）<br>                      Date按日期方式显示<br>                      Log 按指数幂方式显示<br>                      Ordinal顺序显示<br>    Y2Axis              第二个Y轴坐标信息显示（具体设置看X轴）<br>    Yaxis               第一个Y轴坐标信息显示（具体设置看X轴）</p><p>GraphPane<br>    BarBase              在生成柱状图的时候设置柱状是基于X轴还是其他轴<br>    BarType              柱状的类型叠加或其他。<br>    IsFontsScaled           图比例变化时候图表上的文字是否跟着自动缩放<br>    IsIgnoreInitial          是否忽略初始值<br>    IsIgnoreMissing          是否忽略缺省值<br>    IsPenWidthScaled         图比例变化时候图表上的画笔的粗细是否跟着自动缩放<br>    IsShowTitle            图表标题是否显示<br>    PaneFill             Pane的一些填充信息</p><p>MasterPane<br>    BaseDimension           缩放比例基数（可以试试效果）</p><p>数据                   未测试过。不知道如何和数据库绑定</p><p>外观<br>    IsImageMap            不清楚干吗用的</p><p>行为<br>    AxisChaneged           是否允许自动绘图（没试过，一般都true，动态绘图）<br>    CacheDuration           Cache保存时间0<br>    OutputFormat           输出格式<br>    RenderedImagePath         输出路径<br>    RenderMode            输出模式，不太清楚一般都是ImageTag，另一个输出的是乱码不是图片</p><p>对于图表而言，一般是三种表现形式：柱状图、饼状图和点线图。</p><p>ChartBorder<br>图表区域的边框设置</p><p>ChartFill<br>图表区域的背景填充</p><p>Legend<br>图表的注释标签显示设置项目，一组数据对应一种颜色的注释</p><p>IsHStack<br>当有多个显示项的时候设置 Y 轴数据是叠加的还是分开的</p><p>Xaxis<br>图表区域的 X 轴相关信息设置</p><p>AxisColor<br>坐标轴颜色</p><p>Cross<br>坐标的原点，可以设置坐标的偏移程度</p><p>CrossAuto<br>原点自动设置：True 的话 Cross 的设置就无效了。</p><p>FontSpec<br>X 轴标题字体相关信息</p><p>Angle<br>X 轴标题字体显示时候的角度，0为水平 90为垂直</p><p>Fill<br>X 轴标题字体填充信息</p><p>ColorOpacity<br>透明度</p><p>IsScaled<br>设置 X 轴标题字体显示大小是否根据图的比例放大缩小</p><p>RangeMax<br>填充时候的最大倾斜度（有过渡色，没试过）</p><p>RangeMin<br>填充时候的最小倾斜度（有过渡色，没试过）</p><p>StringAlignment<br>X 轴标题字体排列（不清楚，没试过）</p><p>IsOmitMag<br>是否显示指数幂（10次方，没试过，似乎与 IsUseTenPower 有关系）</p><p>IsPreventLabelOverlap<br>坐标值显示是否允许重叠，如果False的话，控件会根据坐标值长度自动消除部分坐标值的显示状态</p><p>IsShowTitle<br>X 轴标题是否显示</p><p>IsTicsBetweenLabels<br>两个坐标值之间是否自动显示分隔标志</p><p>IsUseTenPower<br>是否使用10次幂指数</p><p>IsZeroLine<br>当数据为0时候是否显示（在饼状图显示的时候有用）</p><p>IsVisible<br>是否显示 X 轴</p><p>MajorGrid<br>大跨度的 X 轴表格虚线线显示信息</p><p>DashOff<br>虚线中孔间距</p><p>DashOn<br>虚线单位长度</p><p>MajorTic<br>大跨度的 X 轴刻度信息</p><p>IsInside<br>在 Chart 内部是否显示</p><p>IsOutSide<br>在 Chart 外部是否显示</p><p>IsOpposite<br>在对面的轴上是否显示</p><p>MinorGrid<br>小跨度的 X 轴表格虚线显示信息</p><p>MinorTic<br>小跨度的 x 轴刻度信息</p><p>MinSpace<br>刻度和轴之间的距离（没试过）</p><p>Scale<br>刻度值的一些设定</p><p>IsReverse<br>X 轴的刻度值从高到低还是从低到高</p><p>MajorStep<br>大刻度步长</p><p>MajorStepAuto<br>是否自动设置大刻度步长</p><p>MajorUnit<br>大刻度步长单位</p><p>Max<br>刻度最大值</p><p>MaxAuto<br>根据输入数据自动设置刻度最大值</p><p>Min<br>刻度最小值</p><p>MinAuto<br>根据输入数据自动设置刻度最小值</p><p>MinGrace<br>不清楚，没试过</p><p>MinorStep<br>小刻度步长</p><p>MinorStepAuto<br>是否自动设置小刻度步长</p><p>MinorUnit<br>小刻度单位</p><p>Type<br>数据显示方式</p><p>Liner<br>直接现实（自动）</p><p>Date<br>按日期方式显示</p><p>Log<br>按指数幂方式显示</p><p>Ordinal<br>顺序显示</p><p>Y2Axis<br>第二个 Y 轴坐标信息显示（具体设置看 X 轴）</p><p>Yaxis<br>第一个 Y 轴坐标信息显示（具体设置看 X 轴）</p><p>BarBase<br>在生成柱状图的时候设置柱状是基于 X 轴还是其他轴</p><p>BarType<br>柱状的类型叠加或其他。</p><p>IsFontsScaled<br>图比例变化时候图表上的文字是否跟着自动缩放</p><p>IsIgnoreInitial<br>是否忽略初始值</p><p>IsIgnoreMissing<br>是否忽略缺省值</p><p>IsPenWidthScaled<br>图比例变化时候图表上的画笔的粗细是否跟着自动缩放</p><p>IsShowTitle<br>图表标题是否显示</p><p>PaneFill<br>Pane 的一些填充信息</p><p>BaseDimension<br>缩放比例基数（可以试试效果）</p><p>IsImageMap<br>不清楚干吗用的</p><p>AxisChaneged<br>是否允许自动绘图（没试过，一般都 true，动态绘图）</p><p>CacheDuration<br>Cache 保存时间0</p><p>OutputFormat<br>输出格式</p><p>RenderedImagePath<br>输出路径</p><p>RenderMode<br>输出模式，不太清楚一般都是 ImageTag，另一个输出的是乱码不是图片。对于图表而言，一般是三种表现形式：柱状图、饼状图和点线图。</p><h1 id="二、问题"><a href="#二、问题" class="headerlink" title="二、问题"></a>二、问题</h1><h2 id="2-1-控制X轴的标签间隔显示"><a href="#2-1-控制X轴的标签间隔显示" class="headerlink" title="2.1 控制X轴的标签间隔显示"></a>2.1 控制X轴的标签间隔显示</h2><p>下面这部分参考自： <a href="http://bbs.csdn.net/topics/390421777">救急！！！Dev的chartControl画曲线图，怎么控制X轴的标签间隔显示</a>？  <a href="http://my.csdn.net/huangama2011">huangama2011</a></p><p>X轴是时间，Y轴是金额；<br>现在记录有100多个，标签在X轴都显示出来了，数字密密麻麻；<br>麻烦问下，怎么控制X轴的标签间隔显示？</p><p>**要设置下 series1.ArgumentScaleType &#x3D; ScaleType.DateTime;&#x2F;&#x2F;x轴类型 这个 **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Series series1 = <span class="keyword">new</span> Series(<span class="keyword">this</span>.Text, ViewType.Spline);</span><br><span class="line">            series1.ArgumentScaleType = ScaleType.DateTime;<span class="comment">//x轴类型</span></span><br><span class="line">            series1.ValueScaleType = ScaleType.Numerical;<span class="comment">//y轴类型</span></span><br><span class="line">            <span class="comment">//X轴的数据字段</span></span><br><span class="line">            series1.ArgumentDataMember = <span class="string">&quot;StatisticsTime&quot;</span>;</span><br><span class="line">            <span class="comment">//Y轴的数据字段</span></span><br><span class="line">            series1.ValueDataMembers[<span class="number">0</span>] = <span class="string">&quot;StatisticsSum&quot;</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状是否需要</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Kind = MarkerKind.Circle;         </span><br><span class="line">            <span class="comment">//不显示X、Y轴上面的交点的值</span></span><br><span class="line">            ((PointSeriesLabel)series1.Label).Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//线条的类型，虚线，实线</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineStyle.DashStyle = DashStyle.Solid;</span><br></pre></td></tr></table></figure><p>**完整代码： **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BindChart</span>(<span class="params">DataTable datatable, ChartControl myChartControl</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            myChartControl.Name = <span class="string">&quot;chartResult&quot;</span>;</span><br><span class="line">            myChartControl.Dock = DockStyle.Fill;</span><br><span class="line">            myChartControl.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">400</span>, <span class="number">250</span>);</span><br><span class="line">            <span class="comment">// 显示标签.            </span></span><br><span class="line">            myChartControl.Legend.Visible = <span class="literal">true</span>;</span><br><span class="line">            myChartControl.Series.Clear();</span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 仅供参考（不需要）</span></span><br><span class="line">            <span class="comment">//控制X、Y轴显示</span></span><br><span class="line">            <span class="comment">//XYDiagram diagram = (XYDiagram)chartControl.Diagram;</span></span><br><span class="line">            <span class="comment">//diagram.AxisX.Label.Staggered = true;</span></span><br><span class="line">            <span class="comment">//diagram.AxisY.Label.BeginText = &quot;Axis value = &quot;;</span></span><br><span class="line">            <span class="comment">//diagram.AxisY.Label.Angle = -30;</span></span><br><span class="line">            <span class="comment">//diagram.AxisY.Label.Antialiasing = true;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//XYDiagram diagram = (XYDiagram)chartControl.Diagram; </span></span><br><span class="line">            <span class="comment">//diagram.AxisX.DateTimeMeasureUnit = DateTimeMeasurementUnit.Second; </span></span><br><span class="line">            <span class="comment">//diagram.AxisX.DateTimeOptions.Format = DateTimeFormat.Custom; diagram.AxisX.DateTimeOptions.FormatString = &quot;HH:mm:ss&quot;;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.Interlaced = true;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.GridSpacing = 10;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.Label.Angle = -30;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.Label.Antialiasing = true;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.DateTimeOptions.Format = DateTimeFormat.MonthAndDay;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/XYDiagram xyDiagram1 = new XYDiagram();</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.Range.Auto = false; //要开启滚动条必须将其设置为false</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span><span class="doctag">///</span>xyDiagram1.AxisX.Range.MaxValueInternal = 30.5D &gt; (cnt + 1) ? (cnt + 1) : 30.5D;//在不拉到滚动条的时候，X轴显示多个值，既固定的X轴长度。</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span><span class="doctag">///</span>xyDiagram1.AxisX.Range.MinValueInternal = -0.5D;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.Range.ScrollingRange.Auto = false;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.MinorCount = 9; //显示X轴间隔数量</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.Tickmarks.MinorVisible = true;//是否显示X轴间隔</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.MinorCount = 1;//显示Y轴间隔数量</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Tickmarks.MinorVisible = true;//是否显示Y轴间隔</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.Range.ScrollingRange.MaxValueSerializable = (cnt + 1).ToString();//整个X轴最多显示多多少个值</span></span><br><span class="line">            <span class="comment">// xyDiagram1.AxisX.Range.ScrollingRange.MinValueSerializable = &quot;0&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.DateTimeMeasureUnit = DateTimeMeasurementUnit.Second;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.DateTimeOptions.Format = DateTimeFormat.Custom;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.DateTimeOptions.FormatString = &quot;yyyy:MM:HH&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.Range.ScrollingRange.SideMarginsEnabled = true;//是否从X轴原点开始显示</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.Range.SideMarginsEnabled = false;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.VisibleInPanesSerializable = &quot;-1&quot;;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Percent;//显示为百分数</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Range.Auto = false;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.Range.MaxValueSerializable = &quot;1.02&quot;;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.Range.MinValueSerializable = &quot;0.5&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Range.ScrollingRange.SideMarginsEnabled = true;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Range.SideMarginsEnabled = true;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.VisibleInPanesSerializable = &quot;-1&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.EnableScrolling = true;//启用滚动条</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取Diagram必须在ChartControl中已经加入了Series之后</span></span><br><span class="line">            <span class="comment">//((XYDiagram)chartControl.Diagram).Rotated = false;</span></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//图标位置</span></span><br><span class="line">            myChartControl.Legend.AlignmentHorizontal = LegendAlignmentHorizontal.Right;</span><br><span class="line">            myChartControl.Legend.AlignmentVertical = LegendAlignmentVertical.Top;</span><br><span class="line"></span><br><span class="line">            ChartTitle chartTitle = <span class="keyword">new</span> ChartTitle();</span><br><span class="line">            chartTitle.Text = <span class="keyword">this</span>.Text;<span class="comment">//标题内容</span></span><br><span class="line">            chartTitle.TextColor = System.Drawing.Color.Black;<span class="comment">//字体颜色</span></span><br><span class="line">            chartTitle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;Tahoma&quot;</span>, <span class="number">8</span>);<span class="comment">//字体类型字号</span></span><br><span class="line">            chartTitle.Dock = ChartTitleDockStyle.Bottom;<span class="comment">//标题对齐方式</span></span><br><span class="line">            chartTitle.Alignment = StringAlignment.Far;</span><br><span class="line">            myChartControl.Titles.Clear();<span class="comment">//清理标题</span></span><br><span class="line">            myChartControl.Titles.Add(chartTitle);<span class="comment">//加载标题</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Series series1 = <span class="keyword">new</span> Series(<span class="keyword">this</span>.Text, ViewType.Spline);</span><br><span class="line">            series1.ArgumentScaleType = ScaleType.DateTime;<span class="comment">//x轴类型</span></span><br><span class="line">            series1.ValueScaleType = ScaleType.Numerical;<span class="comment">//y轴类型</span></span><br><span class="line">            <span class="comment">//X轴的数据字段</span></span><br><span class="line">            series1.ArgumentDataMember = <span class="string">&quot;StatisticsTime&quot;</span>;</span><br><span class="line">            <span class="comment">//Y轴的数据字段</span></span><br><span class="line">            series1.ValueDataMembers[<span class="number">0</span>] = <span class="string">&quot;StatisticsSum&quot;</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状是否需要</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Kind = MarkerKind.Circle;          </span><br><span class="line">            <span class="comment">//不显示X、Y轴上面的交点的值</span></span><br><span class="line">            ((PointSeriesLabel)series1.Label).Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//线条的类型，虚线，实线</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineStyle.DashStyle = DashStyle.Solid;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//绑定数据源</span></span><br><span class="line">            series1.DataSource = datatable;</span><br><span class="line"></span><br><span class="line">            myChartControl.Series.Add(series1);        </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-x轴的间距过大的问题"><a href="#2-2-x轴的间距过大的问题" class="headerlink" title="2.2 x轴的间距过大的问题"></a>2.2 x轴的间距过大的问题</h2><ul><li>关于X轴数据间距过大的问题，可以通过设置scale来解决。在Format Chart页，选中Chart Area-&gt;Axes-&gt;X-Axis, 设置间隔。</li><li>关于点重合的问题，你可以通过改变marker的形状和大小来解决。在Format Chart页，选中Series-&gt;Value series,找到marker就可以进行设置了。</li><li>X轴和Y轴的最大值设置 也是在Chart Area-&gt;Axes-&gt;X-Axis的刻度中设置。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Series&gt; listSer = ``<span class="keyword">new</span>` `List&lt;Series&gt;();</span><br></pre></td></tr></table></figure><p><strong>引发动态生成图表的按钮事件完整如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> sqlString = <span class="string">&quot;select count(*) from dotrelation where dotdesc like &#x27;温度%&#x27;&quot;</span>;</span><br><span class="line">num = Mycon.countORL(conn, sqlString);<span class="comment">//获得数据库中满足条件的记录数</span></span><br><span class="line"><span class="comment">//MessageBox.Show(&quot;满足条件的数据记录为&quot; + num);</span></span><br><span class="line"><span class="built_in">int</span> heightPer = <span class="number">100</span> / num;<span class="comment">//计算每个绘图区高度</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">string</span> serName = <span class="string">&quot;test&quot;</span> + i.ToString();</span><br><span class="line">  listSer.Add(<span class="keyword">new</span> Series(serName));<span class="comment">//对象数组</span></span><br><span class="line">  fillData(date);<span class="comment">//初始化数组此方法自己定义的</span></span><br><span class="line">  initialSeries((Series)listSer[i], Color.Red, date);</span><br><span class="line">  chart1.ChartAreas.Add(<span class="string">&quot;ANOTHER&quot;</span> + i);</span><br><span class="line"><span class="comment">//这里是关键！！！！！</span></span><br><span class="line">    chart1.ChartAreas[i].Position.Width = <span class="number">100</span>;<span class="comment">//绘图区域在控件中的宽度 100是百分比</span></span><br><span class="line">    chart1.ChartAreas[i].Position.Height = heightPer;</span><br><span class="line">    chart1.ChartAreas[i].Position.X = <span class="number">5</span>;<span class="comment">//绘图区域在控件中的绝对位置 横坐标</span></span><br><span class="line">    chart1.ChartAreas[i].Position.Y = <span class="number">3</span> + heightPer * i;<span class="comment">//绘图区域在控件中的绝对位置纵坐标</span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineWidth = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineWidth = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.Title = <span class="string">&quot;监测值&quot;</span>;</span><br><span class="line">    <span class="comment">//设置网格线  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.MajorGrid.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisX.MajorGrid.Interval = <span class="number">2</span>;<span class="comment">//网格间隔</span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.MinorGrid.Interval = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.MajorGrid.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.MajorGrid.Interval = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.MinorGrid.Interval = <span class="number">2</span>;</span><br><span class="line">     </span><br><span class="line">  </span><br><span class="line">    chart1.Series[i].IsValueShownAsLabel = <span class="literal">false</span>; <span class="comment">//是否显示数据      </span></span><br><span class="line">    chart1.Series[i].IsVisibleInLegend = <span class="literal">false</span>;  <span class="comment">//是否显示数据说明  </span></span><br><span class="line">    chart1.Series[i].MarkerStyle = MarkerStyle.Circle;   <span class="comment">//线条上的数据点标志类型  </span></span><br><span class="line">    chart1.Series[i].MarkerSize = <span class="number">3</span>;  <span class="comment">//标志大小  </span></span><br><span class="line">    chart1.Series[i].ChartType = SeriesChartType.Line;      <span class="comment">//图表类型为曲线</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;ANOTHER&quot;</span> + i.ToString();</span><br><span class="line">    chart1.Series[i].ChartArea = name;<span class="comment">//指定绘图区域</span></span><br><span class="line">   </span><br><span class="line">  </span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineColor = Color.Blue;<span class="comment">//X轴颜色  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineColor = Color.Blue;<span class="comment">//Y轴颜色  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineWidth = <span class="number">2</span>;         <span class="comment">//X轴宽度  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineWidth = <span class="number">2</span>;          <span class="comment">//Y轴宽度  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisY.Title = <span class="string">&quot;人数&quot;</span>; <span class="comment">//Y轴标题</span></span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//fillData(date);//初始化数组</span></span><br><span class="line"><span class="comment">//initialSeries(series1, Color.Red, date);</span></span><br><span class="line">initalChart();<span class="comment">//图表初始化</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文章：</p><ol><li><a href="http://home.cnblogs.com/u/liuxinls/">louiskoo</a> ， <a href="http://www.cnblogs.com/liuxinls/archive/2013/04/26/3044219.html">c# Chart设置样式</a>。</li><li>IT-CollectionPlatForm， <a href="http://blog.sina.com.cn/s/blog_45ef2e490101begn.html">C# 2010 Chart的使用</a>。</li></ol><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="hhttps://www.cnblogs.com/arxive/p/5861960.html">c# Chart设置样式</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#绘图之一（绘制实时折线图，波形图）</title>
      <link href="/posts/93616624.html"/>
      <url>/posts/93616624.html</url>
      
        <content type="html"><![CDATA[<h1 id="Chart绘图相关知识"><a href="#Chart绘图相关知识" class="headerlink" title="Chart绘图相关知识"></a>Chart绘图相关知识</h1><blockquote><p>Chart控件，功能强大：可以绘制柱状图、折线图、波形图、饼状图，大大简化了对图的开发与定制。</p></blockquote><p><strong>Chart控件的相关概念：</strong></p><ul><li><strong>ChartArea：</strong>表示图表区域，一个Chart可以绘制多个ChartArea，重叠在一起。</li><li><strong>Series：</strong>表示数据序列，每个ChartArea可以有多个数据线。即，Series属于ChartArea.</li><li><strong>AxisX,AxisY：</strong>表示主坐标轴，每一个ChartArea都有对应的坐标轴，包括主坐标轴，辅坐标轴</li><li><strong>Queue集合：</strong>表示先进先出的集合。</li></ul><p>Queue主要有两个方法：<br>    1. Dequeue() 表示移除并返回位于 System.Collections.Generic.Queue<T> 开始处的对象。<br>    2. Enqueue() 表示将对象添加到 System.Collections.Generic.Queue<T> 的结尾处。</p><blockquote><p>其他用到知识：</p></blockquote><p><strong>Timer 定时器：</strong>定时执行相应的功能，更新数据，刷新图表。</p><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p>如下【先点击初始化按钮，再点击开始按钮】：</p><p><strong>一、折线图【折线图，是取[0,100]之间的随即数进行填充】：</strong></p><img src="https://img.jbzj.com/file_images/article/202007/2020710160915797.png?202061016923"><p><strong>二、波形图【波形图，是取正玄值，并放大50倍，然后上移50】</strong></p><img src="https://img.jbzj.com/file_images/article/202007/2020710160949041.png?202061016957"><h1 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h1><blockquote><p>实验错误经验：在窗体代码前要增加以下声明代码才能使用 ChartArea 这些类，ChartArea 完整名字为：<br> System.Windows.Forms.DataVisualization.Charting.ChartArea</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows.Forms.DataVisualization.Charting;</span><br></pre></td></tr></table></figure><p><strong>完整源码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms.DataVisualization.Charting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">RealChart</span> : <span class="title">Form</span></span><br><span class="line"> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="title">Queue</span>&lt;<span class="title">double</span>&gt; dataQueue</span> = <span class="keyword">new</span> Queue&lt;<span class="built_in">double</span>&gt;(<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="built_in">int</span> curValue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="built_in">int</span> num = <span class="number">5</span>;<span class="comment">//每次删除增加几个点</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">RealChart</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   InitializeComponent();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 初始化事件</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnInit_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   InitChart();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 开始事件</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnStart_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">this</span>.timer1.Start();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 停止事件</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnStop_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">this</span>.timer1.Stop();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 定时器事件</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   UpdateQueueValue();</span><br><span class="line">   <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Points.Clear();</span><br><span class="line">   <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;dataQueue.Count;i++)&#123;</span><br><span class="line">    <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Points.AddXY((i+<span class="number">1</span>), dataQueue.ElementAt(i));</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 初始化图表</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitChart</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">   <span class="comment">//定义图表区域</span></span><br><span class="line">   <span class="keyword">this</span>.chart1.ChartAreas.Clear();</span><br><span class="line">   ChartArea chartArea1 = <span class="keyword">new</span> ChartArea(<span class="string">&quot;C1&quot;</span>);</span><br><span class="line">   <span class="keyword">this</span>.chart1.ChartAreas.Add(chartArea1);</span><br><span class="line">   <span class="comment">//定义存储和显示点的容器</span></span><br><span class="line">   <span class="keyword">this</span>.chart1.Series.Clear();</span><br><span class="line">   Series series1 = <span class="keyword">new</span> Series(<span class="string">&quot;S1&quot;</span>);</span><br><span class="line">   series1.ChartArea = <span class="string">&quot;C1&quot;</span>;</span><br><span class="line">   <span class="keyword">this</span>.chart1.Series.Add(series1);</span><br><span class="line">   <span class="comment">//设置图表显示样式</span></span><br><span class="line">   <span class="keyword">this</span>.chart1.ChartAreas[<span class="number">0</span>].AxisY.Minimum = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">this</span>.chart1.ChartAreas[<span class="number">0</span>].AxisY.Maximum =<span class="number">100</span>;</span><br><span class="line">   <span class="keyword">this</span>.chart1.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">5</span>;</span><br><span class="line">   <span class="keyword">this</span>.chart1.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = System.Drawing.Color.Silver;</span><br><span class="line">   <span class="keyword">this</span>.chart1.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = System.Drawing.Color.Silver;</span><br><span class="line">   <span class="comment">//设置标题</span></span><br><span class="line">   <span class="keyword">this</span>.chart1.Titles.Clear();</span><br><span class="line">   <span class="keyword">this</span>.chart1.Titles.Add(<span class="string">&quot;S01&quot;</span>);</span><br><span class="line">   <span class="keyword">this</span>.chart1.Titles[<span class="number">0</span>].Text = <span class="string">&quot;XXX显示&quot;</span>;</span><br><span class="line">   <span class="keyword">this</span>.chart1.Titles[<span class="number">0</span>].ForeColor = Color.RoyalBlue;</span><br><span class="line">   <span class="keyword">this</span>.chart1.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> System.Drawing.Font(<span class="string">&quot;Microsoft Sans Serif&quot;</span>, <span class="number">12F</span>);</span><br><span class="line">   <span class="comment">//设置图表显示样式</span></span><br><span class="line">   <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Color = Color.Red;</span><br><span class="line">   <span class="keyword">if</span> (rb1.Checked)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">this</span>.chart1.Titles[<span class="number">0</span>].Text =<span class="built_in">string</span>.Format( <span class="string">&quot;XXX &#123;0&#125; 显示&quot;</span>,rb1.Text);</span><br><span class="line">    <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartType = SeriesChartType.Line;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (rb2.Checked) &#123;</span><br><span class="line">    <span class="keyword">this</span>.chart1.Titles[<span class="number">0</span>].Text = <span class="built_in">string</span>.Format(<span class="string">&quot;XXX &#123;0&#125; 显示&quot;</span>, rb2.Text);</span><br><span class="line">    <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartType = SeriesChartType.Spline;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Points.Clear();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//更新队列中的值</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateQueueValue</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (dataQueue.Count &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="comment">//先出列</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">     dataQueue.Dequeue();</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (rb1.Checked)</span><br><span class="line">   &#123;</span><br><span class="line">    Random r = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">     dataQueue.Enqueue(r.Next(<span class="number">0</span>, <span class="number">100</span>));</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span> (rb2.Checked) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="comment">//对curValue只取[0,360]之间的值</span></span><br><span class="line">     curValue = curValue % <span class="number">360</span>;</span><br><span class="line">     <span class="comment">//对得到的正玄值，放大50倍，并上移50</span></span><br><span class="line">     dataQueue.Enqueue((<span class="number">50</span>*Math.Sin(curValue*Math.PI / <span class="number">180</span>))+<span class="number">50</span>);</span><br><span class="line">     curValue=curValue+<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h1><p>关于定时器Timer【微软自带的控件】:</p><p>说明：表示在相同的时间间隔，引发用户自定义的事情 。实现用户需要的功能。本例中是用来定时更新队列中的数据，并刷新图表。</p><p><strong>常用说明：</strong></p><ol><li>Interval 时间间隔，以毫秒为单位，本例是300毫秒。</li><li>Tick 定时触发的事件，本例对应timer1_Tick事件方法。</li><li>Start()，Stop() 表示定时器的启动和停止。Enabled 表示定时器是否启用，默认值为 false，需要手动设置为true。</li></ol><img src="https://img.jbzj.com/file_images/article/202007/2020710161057940.png?202061016114"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/190509.htm">C# 绘制实时折线图，波形图</a> —&gt;<a href="https://blog.51cto.com/u_11990719/3107363"><strong>原文出处</strong></a></li><li><a href="https://www.cnblogs.com/hsiang/p/6242641.html">C# 实时折线图，波形图</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 绘图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 绘图 </tag>
            
            <tag> Chart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat输出日志信息</title>
      <link href="/posts/952081412.html"/>
      <url>/posts/952081412.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、echo输出内容"><a href="#一、echo输出内容" class="headerlink" title="一、echo输出内容"></a>一、echo输出内容</h1><blockquote><p>bat脚本常用的的输出命令是“echo 输出内容”，可以利用echo将文本输出到cmd窗口或文件。bat脚本是不区分大小写的脚本语言，因此大小写都可以。</p></blockquote><p><strong>例如：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">REM 在命令行窗口输出</span><br><span class="line"><span class="built_in">echo</span> Hello World！</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>会在命令行窗口输出Hello World！</p><p>通过bat打开命令行窗口运行上面的命令还会输出CMD运行相关的提示信息。如果想关闭多余的输出可以用 @ECHO OFF，示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">REM 在命令行窗口纯净的输出</span><br><span class="line"><span class="built_in">echo</span> Hello World！</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h1 id="二、输出内容到文件"><a href="#二、输出内容到文件" class="headerlink" title="二、输出内容到文件"></a>二、输出内容到文件</h1><p>效果：可以使用重定向将输出结果保存到文件中。 </p><p>符号&gt;和&gt;&gt;符号为两个常用的重定向符号。&gt;会将原始文件的内容清空，&gt;&gt;会在文件后面追加内容，如果文件不存在则创建文件。</p><p><strong>具体使用方法如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> Hello World &gt;file.txt</span><br><span class="line"><span class="built_in">echo</span> Hello World 1&gt;file.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Hello World 2&gt;file.txt</span><br></pre></td></tr></table></figure><p>运行后，会将Hello World输出到file.txt中。两行代码等价。<br>其中1的意思是代表将标准输出重定向，标准输出即正常的输出内容。<br>而2&gt;file.txt则代表将错误信息输出到file.txt中，这样Hello World会显示在屏幕上，只有报错的信息会保存在file.txt中。</p><h1 id="三、输出内容追加到文件"><a href="#三、输出内容追加到文件" class="headerlink" title="三、输出内容追加到文件"></a>三、输出内容追加到文件</h1><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> Hello World &gt;&gt;file.txt</span><br></pre></td></tr></table></figure><blockquote><p>上面的语句使用了2个&gt;，表示追加内容，如果file.txt内容不是空，则Hello World会在最后一行的后面另起一行保存。</p></blockquote><h1 id="四、将bat文件的输出结果放到txt文件中"><a href="#四、将bat文件的输出结果放到txt文件中" class="headerlink" title="四、将bat文件的输出结果放到txt文件中"></a>四、将bat文件的输出结果放到txt文件中</h1><blockquote><p>有时候我们会写批处理执行过程，会集中输出很多内容，又不想在bat里面频繁的试用输出到文件命令，怎么办呢？</p></blockquote><p><strong>我们可以尝试下面的办法：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">call <span class="string">&quot;批处理路径&quot;</span>&gt;D:\结果.txt</span><br><span class="line">start notepad D:\结果.txt</span><br><span class="line"></span><br><span class="line">REM 再例如下面这样</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">call <span class="string">&quot;D:\procedure.bat&quot;</span>&gt;D:\结果.txt</span><br><span class="line">start notepad D:\结果.txt</span><br></pre></td></tr></table></figure><p><strong>【实例】：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line"><span class="built_in">echo</span> 检查并停止相关服务....</span><br><span class="line"><span class="built_in">echo</span> ------------------------------</span><br><span class="line"><span class="keyword">for</span> %%i <span class="keyword">in</span> (wuauserv,yun-wps) <span class="keyword">do</span> (</span><br><span class="line">    sc query <span class="string">&quot;%%i&quot;</span> &gt;nul &amp;&amp; (</span><br><span class="line">        <span class="built_in">echo</span> %date:~0,4%-%date:~5,2%-%date:~8,2% %time:~0,8%开始停止服务：%%i &gt;&gt;<span class="string">&quot;%date:~0,4%-%date:~5,2%-%date:~8,2%_%time:~0,2%.txt&quot;</span></span><br><span class="line">        net stop <span class="string">&quot;%%i&quot;</span></span><br><span class="line">        </span><br><span class="line">        ::@ECHO 开始卸载服务：%var%</span><br><span class="line">        ::SC DELETE %var%</span><br><span class="line">        </span><br><span class="line">        REM net start <span class="string">&quot;%%i&quot;</span></span><br><span class="line">        REM wmic SERVICE <span class="built_in">where</span> name=<span class="string">&quot;%%i&quot;</span> get State|findstr /i <span class="string">&quot;RUNNING&quot;</span> &amp;&amp; ( <span class="built_in">echo</span> %%i已启动。 )||( <span class="built_in">echo</span> %%i未启动！请查看日志信息。 )</span><br><span class="line">    )||(</span><br><span class="line">        <span class="built_in">echo</span> %date:~0,4%-%date:~5,2%-%date:~8,2% %time:~0,8%服务不存在：%%i 自动跳过&gt;&gt;<span class="string">&quot;%date:~0,4%-%date:~5,2%-%date:~8,2%_%time:~0,2%.txt&quot;</span></span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="built_in">echo</span> 执行完成</span><br><span class="line"></span><br><span class="line">REM pause</span><br><span class="line"><span class="built_in">exit</span> /B</span><br></pre></td></tr></table></figure><p>将上面的脚本复制到txt里面，并另存为ANSI格式，重命名为：WinService-Stop.bat，然后在相同目录下新建一个txt，复制下面这段：</p><figure class="highlight vbs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> ws=WScript.<span class="built_in">CreateObject</span>(<span class="string">&quot;WScript.Shell&quot;</span>)</span><br><span class="line">ws.Run <span class="string">&quot;WinService-Stop.bat&quot;</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure><p>将上面的脚本复制到txt里面，并另存为ANSI格式，重命名为：启动bat文件.vbs，它的作用是用了静默启动bat脚本而隐藏CMD窗口，隐藏命令行窗口使用户无感知。注意两个文件在同一目录。</p><p>然后我们在“计算机-管理-任务计划程序”里面新增一个任务计划，定时执行“启动bat文件.vbs”就可以自动关闭Windows系统的自动更新啦。</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://www.cnblogs.com/xiongzaiqiren/p/11392768.html">bat脚本输出日志</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat弹出确认取消选择框</title>
      <link href="/posts/3977731493.html"/>
      <url>/posts/3977731493.html</url>
      
        <content type="html"><![CDATA[<h1 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h1><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> Vbscript=Msgbox(&quot;你的系统即将崩溃，是否立即更新？&quot;,<span class="number">1</span>,&quot;系统管理员提醒&quot;)</span><br><span class="line"><span class="keyword">for</span> /f &quot;Delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;MsHta VBScript:Execute(&quot;CreateObject(&quot;&quot;Scripting.Filesystemobject&quot;&quot;).GetStandardStream(<span class="number">1</span>).Write(<span class="variable">%Vbscript:&quot;=&quot;&quot;%</span>)&quot;^)(Close^)&#x27;) <span class="keyword">do</span> <span class="built_in">Set</span> &quot;MsHtaReturnValue=<span class="variable">%%a</span>&quot;</span><br><span class="line"><span class="built_in">set</span> ReturnValue1=确定</span><br><span class="line"><span class="built_in">set</span> ReturnValue2=取消或关闭窗口</span><br><span class="line"><span class="built_in">echo</span> 你点击了<span class="variable">!ReturnValue%MsHtaReturnValue%!</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%MsHtaReturnValue%</span> == <span class="number">1</span> (</span><br><span class="line">    <span class="built_in">echo</span> 你好世界！终于等到你。</span><br><span class="line">) <span class="keyword">else</span> (</span><br><span class="line">    <span class="built_in">echo</span> 再见。</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><blockquote><p>bat本身不具备弹框提示能力，上面的脚本是借助VB脚本的弹框来实现取消和确认的。同理还可以弹出其他形式的框框（可以参考<a href="https://www.w3school.com.cn/vbscript/func_msgbox.asp">Msgbox函数说明</a>）。</p></blockquote><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://www.cnblogs.com/xiongzaiqiren/p/11392842.html">bat弹出确认或取消窗口</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#窗体之三（窗口跳转 后关闭上一个窗口）</title>
      <link href="/posts/3802822928.html"/>
      <url>/posts/3802822928.html</url>
      
        <content type="html"><![CDATA[<h1 id="方法一：（这个方法未测试通过）"><a href="#方法一：（这个方法未测试通过）" class="headerlink" title="方法一：（这个方法未测试通过）"></a>方法一：（这个方法未测试通过）</h1><p>关闭子窗体后</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">form2.Closed += (ss,ee)=&gt; &#123; <span class="keyword">this</span>.Close(); &#125;;</span><br><span class="line"><span class="comment">//或Application.OpenForms集合找到要关闭的窗口，再Close：</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> Application.OpenForms)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (item <span class="keyword">is</span> Form1) item.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方法二：（可行）"><a href="#方法二：（可行）" class="headerlink" title="方法二：（可行）"></a>方法二：（可行）</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B new_form = <span class="keyword">new</span> B();</span><br><span class="line">new_form.owner = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">this</span>.hide();</span><br><span class="line">new_form.showdialog();</span><br><span class="line">Application.ExitThread();</span><br></pre></td></tr></table></figure><blockquote><p>Application.ExitThread();是退出当前线程。<br>首先默认情况下我们的程序是单线程的，<br>this.hide();后把当前窗体隐藏起来了，然后new_form.showdialog();模态弹出新窗口。<br>这个时候线程不会继续执行（被阻塞了），<br>直到我们关闭了新弹出来的模态窗口后，程序才会继续执行Application.ExitThread();此时线程关闭，所有一切都关闭了，隐藏的窗口也关闭了。</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://t.zoukankan.com/huanhuan86-p-2920303.html">C# winForm 窗口跳转 后关闭上一个窗口的方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 窗体 </tag>
            
            <tag> 跳转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>窗体之二（进行多窗口切换：使用Panel）</title>
      <link href="/posts/4052716721.html"/>
      <url>/posts/4052716721.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-添加相应功能"><a href="#一-添加相应功能" class="headerlink" title="一.添加相应功能"></a>一.添加相应功能</h1><ol><li><strong>先在解决方案资源器中右键添加“用户控件”</strong></li></ol><img src="https://img-blog.csdnimg.cn/dd2e5d2b3ec04910b33d211464c8cb60.png"><ol start="2"><li>或者在项目中选择添加窗体控件或者窗体功能</li></ol><h1 id="二、在添加的控件中添加自己想要的UI"><a href="#二、在添加的控件中添加自己想要的UI" class="headerlink" title="二、在添加的控件中添加自己想要的UI"></a>二、在添加的控件中添加自己想要的UI</h1><img src="https://img-blog.csdnimg.cn/62886d235d204ac98cc1df5353747437.png"><h1 id="三、在主窗体中添加Panel并且设置相应调用关系"><a href="#三、在主窗体中添加Panel并且设置相应调用关系" class="headerlink" title="三、在主窗体中添加Panel并且设置相应调用关系"></a>三、在主窗体中添加Panel并且设置相应调用关系</h1><img src="https://img-blog.csdnimg.cn/9d737593fc264bc4924b6525f2140832.png"><p><strong>1. 在左侧的学生用户2双击跳转到代码，添加如下:</strong></p><img src="https://img-blog.csdnimg.cn/90087727998d49e78d51e6fbefe6fefd.png"><p><strong>2. 声明变量：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> UserControl1 f1; <span class="comment">//创建用户控件一变量</span></span><br><span class="line"><span class="keyword">public</span> UserControl2 f2; <span class="comment">//创建用户控件一变量</span></span><br></pre></td></tr></table></figure><p><strong>3. 定义相应变量：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1 = <span class="keyword">new</span> UserControl1();    <span class="comment">//实例化f1</span></span><br><span class="line">f2 = <span class="keyword">new</span> UserControl2();    <span class="comment">//实例化f1</span></span><br></pre></td></tr></table></figure><p><strong>4. 在按键事件中调用窗体的实现代码：</strong></p><img src="https://img-blog.csdnimg.cn/235b70edf18a4b5b870e3a2777c2f8ee.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f1.Show();   <span class="comment">//将窗体一进行显示</span></span><br><span class="line">panel2.Controls.Clear();    <span class="comment">//清空原容器上的控件</span></span><br><span class="line">panel2.Controls.Add(f1);    <span class="comment">//将窗体一加入容器panel2</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_35230125/article/details/125268494">C#实现多窗口切换：Panel详细教程（亲测）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 窗体 </tag>
            
            <tag> Panel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#语法之一（基础语法）</title>
      <link href="/posts/1833294516.html"/>
      <url>/posts/1833294516.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-C-程序结构"><a href="#一-C-程序结构" class="headerlink" title="一.C# 程序结构"></a>一.C# 程序结构</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//类的定义</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//（1）属性</span></span><br><span class="line">        <span class="built_in">double</span> length;</span><br><span class="line">        <span class="built_in">double</span> width;</span><br><span class="line">        <span class="comment">//（2）方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Acceptdetails</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.length = <span class="number">4.5</span>;</span><br><span class="line">            <span class="keyword">this</span>.width = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getArea</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.length * <span class="keyword">this</span>.width;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Length: &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Width: &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Area: &#123;0&#125;&quot;</span>, getArea());</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//Main函数是程序的主入口</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Rectangle rectangle = <span class="keyword">new</span> Rectangle();</span><br><span class="line">            rectangle.Acceptdetails();</span><br><span class="line">            rectangle.Display();</span><br><span class="line">            <span class="comment">//阻塞窗口</span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>1.using的使用：</strong><br>  （1）含义：使用命名空间，类似于Java的Import<br>  （2）注意：using 关键字用于在程序中包含命名空间。一个程序可以包含多个 using 语句。<br><strong>2.namespace的使用：</strong><br>  （1）namespace声明本类的命名空间为netBasic_learning，其他地方可以通过using netBasic_learning来使用此处的类和方法<br>  （2）一个namespace内可以包含多个类<br><strong>3.Main函数的阻塞：</strong><br>  （1）Console.ReadLine() : 最后一行 Console.ReadLine(); 是针对 VS.NET 用户的。这使得程序会等待一个回车的动作，防止程序从 Visual Studio .NET 启动时屏幕会快速运行并关闭。即防止黑窗口一闪而过，阻塞一下。同时ReadLine()方法还可以用于读取程序输入。       （2）Console.ReadKey() : 其作用同上。<br><strong>4.总结：</strong><br>     1.C#语法基本与Java差不多，都是面向对象的语言。只不过C#主要面向桌面应用开发，Java主要面向Web应用开发<br>     2.C#与 Java 不同的是，文件名可以不同于类的名称。</p></blockquote><h1 id="二-C-数据类型与变量"><a href="#二-C-数据类型与变量" class="headerlink" title="二.C# 数据类型与变量"></a>二.C# 数据类型与变量</h1><h2 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="1.基本数据类型"></a>1.基本数据类型</h2><img src="https://img-blog.csdnimg.cn/b8fc58f805c149df8ffe75202099732a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_dataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.基本数据类型：分配存储空间，存放数据</span></span><br><span class="line">            <span class="built_in">int</span> Int_number = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">double</span> Double_number = <span class="number">3.14</span>;</span><br><span class="line">            <span class="built_in">bool</span> Bool_number = <span class="literal">true</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Int: &#123;0&#125;,Double: &#123;1&#125;,Bool: &#123;2&#125;&quot;</span>, Int_number,Double_number,Bool_number);<span class="comment">//自动换行</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-引用类型"><a href="#2-引用类型" class="headerlink" title="2.引用类型"></a>2.引用类型</h2><blockquote><p>引用类型不包含存储在变量中的实际数据，但它们包含对变量的引用。换句话说，它们指的是一个内存位置。使用多个变量时，引用类型可以指向一个内存位置。如果内存位置的数据是由一个变量改变的，其他变量会自动反映这种值的变化。内置的 引用类型有：object、string和我们自定义的类Class。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_dataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//引用数据类型：存放数据的引用地址，即别名(Object、String、class)</span></span><br><span class="line">            String str = <span class="string">&quot;Hello World！&quot;</span>;</span><br><span class="line">            String str_origin = <span class="string">&quot;Hello\nWorld!&quot;</span>;<span class="comment">//转义字符</span></span><br><span class="line">            String str_change = <span class="string">@&quot;Hello\nWorld!&quot;</span>;<span class="comment">//原样输出 @ = &quot;\\&quot;</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String str: &#123;0&#125;&quot;</span>, str);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String str_origin: &#123;0&#125;&quot;</span>, str_origin);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String str_change: &#123;0&#125;&quot;</span>, str_change);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-数据类型转换"><a href="#3-数据类型转换" class="headerlink" title="3.数据类型转换"></a>3.数据类型转换</h2><blockquote><p><strong>一.数据类型转换</strong><br><strong>(1)隐式类型转换：</strong>安全转换，不会造成数据丢失。比如从派生类转换为基类，小范围类型-&gt;大范围类型int-&gt;long，float-&gt;double，在一些计算中会自动转换发生<br><strong>(2)显式类型转换：</strong>不安全转换，可能会造成数据丢失。比如double-&gt;int<br><strong>(3)内置的类型转换方法：</strong>int.Parse()、ToString()等</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_dataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//数据类型转换</span></span><br><span class="line">            <span class="comment">//  (1)隐式类型转换：安全转换，不会造成数据丢失。比如从派生类转换为基类，小范围类型-&gt;大范围类型int-&gt;long，float-&gt;double，在一些计算中会自动转换发生</span></span><br><span class="line">            <span class="comment">//  (2)显式类型转换：不安全转换，可能会造成数据丢失。比如double-&gt;int</span></span><br><span class="line">            <span class="built_in">double</span> a = <span class="number">3.1415</span>;</span><br><span class="line">            <span class="built_in">int</span> b = (<span class="built_in">int</span>)a;<span class="comment">//向下取整，丢失精度</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Double-&gt;Int: &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            <span class="comment">//  (3)内置的类型转换方法</span></span><br><span class="line">            <span class="built_in">string</span> num = <span class="string">&quot;66&quot;</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Int -&gt; String: &#123;0&#125;&quot;</span>,a.ToString());</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String -&gt; Int: &#123;0&#125;&quot;</span>, <span class="built_in">int</span>.Parse(num));</span><br><span class="line">            <span class="comment">//4.常量：const ，运行期间不能被修改</span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-字符串string类型"><a href="#4-字符串string类型" class="headerlink" title="4.字符串string类型"></a>4.字符串string类型</h2><blockquote><p><strong>一.字符串：使用 string 关键字来声明一个字符串变量。string 关键字是 System.String 类的别名。</strong><br>        <strong>1.字符串构建：</strong><br>                - “”：string str &#x3D; “hello world!”;<br>                - +：string str &#x3D; a + b;(字符串拼接)<br>        <strong>2.字符串常用方法：</strong><br>             - public static int Compare( string strA, string strB ):比较两个指定的 string 对象(按ASCII)，并返回一个表示它们在排列顺序中相对位置的整数。<br>             - public static string Concat( string str0, string str1 )：连接两个 string 对象。相当于+<br>             - public bool Contains( string value )：判断字符串是否包含字串value<br>             - public bool EndsWith( string value )：判断 string 对象是否以value结尾。<br>             - public bool StartsWith( string value )：判断字符串实例的开头是否匹配指定的字符串。<br>             - public bool Equals( string value )：判断当前的 string 对象是否与指定的 string 对象具有相同的值。<br>             - public static string Format( string format, Object arg0 )：把指定字符串中一个或多个格式项替换为指定对象的字符串表示形式。<br>             - public int IndexOf( string value&#x2F;char ch )：返回指定字符串在该实例中第一次出现的索引，索引从 0 开始。<br>             - public int LastIndexOf( string value&#x2F;char value ):返回指定字符串在该实例中最后一次出现的索引，索引从 0 开始。<br>             - public string Insert( int startIndex, string value )：返回一个新的字符串，其中，指定的字符串被插入在当前 string 对象的指定索引位置。<br>             - public static string Join( string separator, string[] value )：连接一个字符串数组中的所有元素，使用指定的分隔符分隔每个元素。<br>             - public string Remove( int startIndex )：移除当前实例中的所有字符，从指定位置开始，一直到最后一个位置为止，并返回字符串。<br>             - public string Replace( string oldValue, string newValue )：把当前 string 对象中，所有指定的字符串替换为另一个指定的字符串，并返回新的字符串。<br>             - public string[] Split( params char[] separator )：返回一个字符串数组，包含当前的 string 对象中的子字符串，子字符串是使用指定的 Unicode 字符数组中的元素进行分隔的。<br>             - public char[] ToCharArray()：返回一个带有当前 string 对象中所有字符的 Unicode 字符数组。<br>             - public string ToLower()&#x2F;ToUpper()&#x2F;Trim()</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_string</span></span><br><span class="line">    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mains</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//  （1）字符串构建：</span></span><br><span class="line">            <span class="built_in">string</span> a_str = <span class="string">&quot;Hello,&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> b_str = <span class="string">&quot;World!,Write the code,change the world.&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> strs = a_str + b_str;</span><br><span class="line">            Console.WriteLine(strs);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *（2）字符串方法、操作（重点）：</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">//2.字符串比较</span></span><br><span class="line">            <span class="built_in">string</span> c_str = <span class="string">&quot;Hello,&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(a_str == c_str)<span class="comment">//==在引用数据里，比较的是地址。因此两个数据相同的变量可能是“不相等的”。</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//但是此处是相等的，原因是string是常量，地址也相同。</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;== 比较符号：a_str 与 c_str 相同&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (a_str.Equals(c_str))<span class="comment">//Equals比较的是数值大小是否相同，推荐！</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Equals 比较函数：a_str 与 c_str 相同&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">int</span> res = String.Compare(a_str, b_str);<span class="comment">//a_str&lt;b_str是比较&lt;0；a_str=b_str是=0；a_str&gt;b_str是&gt;0</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;排序结果： &#123;0&#125;&quot;</span>,res);</span><br><span class="line">            <span class="comment">//2.字符串包含</span></span><br><span class="line">            <span class="keyword">if</span> (strs.Contains(<span class="string">&quot;World&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;&#123;0&#125;包含&#123;1&#125;&quot;</span>, strs,<span class="string">&quot;World&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//3.字串获取</span></span><br><span class="line">            <span class="built_in">string</span> child_str = strs.Substring(<span class="number">15</span>);</span><br><span class="line">            Console.WriteLine(child_str);</span><br><span class="line">            <span class="comment">//4.字符串合并</span></span><br><span class="line">            <span class="built_in">string</span>[] str_arrays = &#123; <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>, <span class="string">&quot;i&#x27;m&quot;</span>, <span class="string">&quot;OK&quot;</span> &#125;;</span><br><span class="line">            <span class="built_in">string</span> join_str = String.Join(<span class="string">&quot;-&quot;</span>, str_arrays);</span><br><span class="line">            Console.WriteLine(join_str);</span><br><span class="line">            <span class="comment">//5.字符串分割</span></span><br><span class="line">            <span class="built_in">string</span>[] str_list = join_str.Split(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">string</span> factor <span class="keyword">in</span> str_list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(factor);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//6.字符串格式化</span></span><br><span class="line"> </span><br><span class="line">            Console.ReadKey();</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-C-计算与条件、循环"><a href="#三-C-计算与条件、循环" class="headerlink" title="三.C#计算与条件、循环"></a>三.C#计算与条件、循环</h1><h2 id="1-计算语句"><a href="#1-计算语句" class="headerlink" title="1.计算语句"></a>1.计算语句</h2><blockquote><p>1.算术运算符：+、-、<em>、&#x2F;、%、++、–<br>2.关系运算符：&#x3D;&#x3D;、!&#x3D;、&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;<br>3.逻辑运算符：&amp;&amp;、||、!<br>4.位运算：&amp;(与，全1才1)、|(或，一1即1)、^(异或，相异即1)、&lt;&lt;(左移，右补0)、&gt;&gt;(右移，左补0)<br>5.赋值运算符：+&#x3D;、-&#x3D;、&#x2F;&#x3D;、%&#x3D;、&amp;&#x3D;、&lt;&lt;&#x3D;<br>6.其他运算符：<br>        （1）?: 三元表达式 a&#x3D;&#x3D;1?xxx:yyy<br>        （2）&amp; 取地址<br>        （3）</em> 指针<br>        （4）sizeof、typeof、is</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//算术运算</span></span><br><span class="line">            <span class="built_in">double</span> y = <span class="number">5</span> / <span class="number">2</span>; <span class="comment">//如果/法都为整数，则运算结果也为整数（向下取整）</span></span><br><span class="line">            <span class="built_in">double</span> y_2 = <span class="number">5.0</span>/<span class="number">2</span>;<span class="comment">//如果/法有一个为浮点数，则运算结果自动向大类型转换</span></span><br><span class="line">            Console.WriteLine(y);</span><br><span class="line">            Console.WriteLine(y_2);</span><br><span class="line">            <span class="comment">//总结：运算与Java差不多-。-</span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-条件选择"><a href="#2-条件选择" class="headerlink" title="2.条件选择"></a>2.条件选择</h2><blockquote><p><strong>一.条件判断：</strong><br>      （1）if…else if…else<br>      （2）switch(Expression){<br>                     case condition1:<br>                          break;<br>                      case condition2:<br>                        break;<br>                      default:<br>               }</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">double</span> y = <span class="number">5</span> / <span class="number">2</span>; <span class="comment">//如果/法都为整数，则运算结果也为整数（向下取整）</span></span><br><span class="line">            <span class="comment">//条件判断：</span></span><br><span class="line">            <span class="keyword">if</span> (y&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;y &gt; 0&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;y = 0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;y &lt; 0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-循环分支"><a href="#3-循环分支" class="headerlink" title="3.循环分支"></a>3.循环分支</h2><blockquote><p><strong>一.循环语句</strong><br>       (1)  for：for(初始化，判断，循环操作){循环语句}、foreach()<br>       (2)  while：只要给定的条件为真，会重复执行一个目标语句。先判断再执行<br>       (3) do..while：在循环的尾部检查它的条件。会确保至少执行一次循环。<br>       (4) 循环控制语句：break跳出循环，continue直接继续循环</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//循环语句</span></span><br><span class="line">            <span class="comment">//  (1)for：for(初始化，判断，循环操作)&#123;循环语句&#125;</span></span><br><span class="line">            <span class="comment">//  (2)while：只要给定的条件为真，会重复执行一个目标语句。先判断再执行</span></span><br><span class="line">            <span class="comment">// （3）do..while：在循环的尾部检查它的条件。会确保至少执行一次循环。</span></span><br><span class="line">            <span class="comment">//  (4)循环控制语句：break跳出循环，continue直接继续循环</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(i);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-C-数组"><a href="#四-C-数组" class="headerlink" title="四.C# 数组"></a>四.C# 数组</h1><h2 id="1-可空类型"><a href="#1-可空类型" class="headerlink" title="1.可空类型"></a>1.可空类型</h2><blockquote><p>1.可空类型（null）:可空类型可以表示其基础值类型正常范围内的值，再加上一个 null 值。<br>        (1)声明可空类型：<br>            - 基本数据：? 单问号用于对 int、double、bool 等无法直接赋值为 null 的数据类型进行 null 的赋值。比如：int? num1 &#x3D; null;<br>            - 类与对象：直接声明<br>        (2)null合并运算符(??)：判断如果第一个操作数的值为 null，则运算符返回第二个操作数的值，否则返回第一个操作数的值。<br>            - 使用：a &#x3D; b ?? c<br>            - 本质：a &#x3D; (b&#x3D;&#x3D;null)?c:b</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_Arrays</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.可空类型（null）:可空类型可以表示其基础值类型正常范围内的值，再加上一个 null 值。</span></span><br><span class="line">            <span class="comment">//  (1)声明可空类型：</span></span><br><span class="line">            <span class="built_in">int</span>? num1 = <span class="literal">null</span>;<span class="comment">//可空int类型取空值</span></span><br><span class="line">            <span class="built_in">int</span>? num2 = <span class="number">66</span>;<span class="comment">//可空int类型不取空值</span></span><br><span class="line">            <span class="built_in">double</span>? num3 = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">double</span>? num4 = <span class="number">3.1415</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;显示可空类型的值： &#123;0&#125;, &#123;1&#125;, &#123;2&#125;, &#123;3&#125;&quot;</span>,num1, num2, num3, num4);</span><br><span class="line">            <span class="keyword">if</span>(num1 == <span class="literal">null</span>)<span class="comment">//空值判断</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Int数据num1为空值&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Rectangle rect = <span class="literal">null</span>;<span class="comment">//类&amp;对象空值声明 </span></span><br><span class="line">            <span class="keyword">if</span>(rect == <span class="literal">null</span>)<span class="comment">//类&amp;对象空值判断</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Rectangle类对象rect为空&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//  (2)null合并运算符(??)：判断如果第一个操作数的值为 null，则运算符返回第二个操作数的值，否则返回第一个操作数的值。</span></span><br><span class="line">            <span class="built_in">double</span>? b = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">double</span>? c = <span class="number">3.1415</span>;</span><br><span class="line">            <span class="built_in">double</span>? a = b ?? c;<span class="comment">//b如果为空则返回c</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-数组"><a href="#2-数组" class="headerlink" title="2.数组"></a>2.数组</h2><blockquote><p>1.数组：数组是一个存储【相同类型元素】的固定大小的顺序集合<br>       （1）声明数组：double[] arrays; 声明一个数组不会在内存中初始化数组。<br>       （2）初始化数组：double[] balance &#x3D; new double[10];数组是一个引用类型，所以您需要使用 new 关键字来创建数组的实例。<br>       （3）数组赋值：<br>            - 索引赋值： balance[0] &#x3D; 3.14;<br>            - 声明数组的同时给数组赋值： double[] balance &#x3D; { 2340.0, 4523.69, 3421.0};<br>            - 创建并初始化一个数组： int [] marks &#x3D; new int[5]  { 99,  98, 92, 97, 95};<br>            - 省略数组的大小：int [] marks &#x3D; new int[]  { 99,  98, 92, 97, 95};<br>            - 赋值一个数组变量到另一个目标数组变量中。在这种情况下，目标和源会指向相同的内存位置(引用)：int[] score  &#x3D; marks;<br>       （4）数据访问、遍历：[]下标访问+for、foreach循环<br>       （5）多维数组：int[,] a;声明二维数组，int[, ,] a;声明三维数组<br>       （6）交错数组：交错数组是数组的数组。交错数组是一维数组，每个元素是一个数组<br>            - 声明：int [][] scores;int数组的一维数组，声明一个数组不会在内存中创建数组<br>            - 初始化：int[][] scores &#x3D; new int[5][];含有五个元素<br>            - 初始化赋值：int[][] scores &#x3D; new int[2][]{new int[]{92,93,94},new int[]{85,66,87,88}};<br>            - 访问：scores[i][j] 取第i个子数组的第j个元素（类似于二维数组）</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_Arrays</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.数组：数组是一个存储【相同类型元素】的固定大小的顺序集合</span></span><br><span class="line">            <span class="comment">//  （1）声明数组：double[] arrays; 声明一个数组不会在内存中初始化数组。</span></span><br><span class="line">            <span class="comment">//  （2）初始化数组：double[] balance = new double[10];数组是一个引用类型，所以您需要使用 new 关键字来创建数组的实例。</span></span><br><span class="line">            <span class="comment">//  （3）数组赋值：</span></span><br><span class="line">            <span class="comment">//      - 索引赋值： balance[0] = 3.14;</span></span><br><span class="line">            <span class="comment">//      - 声明数组的同时给数组赋值： double[] balance = &#123; 2340.0, 4523.69, 3421.0&#125;;</span></span><br><span class="line">            <span class="comment">//      - 创建并初始化一个数组： int [] marks = new int[5]  &#123; 99,  98, 92, 97, 95&#125;;</span></span><br><span class="line">            <span class="comment">//      - 省略数组的大小：int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span></span><br><span class="line">            <span class="comment">//      - 赋值一个数组变量到另一个目标数组变量中。在这种情况下，目标和源会指向相同的内存位置(引用)：int[] score  = marks;</span></span><br><span class="line">            <span class="comment">//  （4）数据访问、遍历：[]下标访问+for、foreach循环</span></span><br><span class="line">            <span class="built_in">int</span>[] List = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; List.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                List[i] = i*<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="keyword">foreach</span>(<span class="built_in">int</span> j <span class="keyword">in</span> List)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Element = &#123;0&#125;&quot;</span>,j);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//   （4）多维数组：int[,] a;声明二维数组，int[, ,] a;声明三维数组</span></span><br><span class="line">            <span class="built_in">int</span>[,] matrix = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>, <span class="number">4</span>];<span class="comment">//初始化3x4的二维数组</span></span><br><span class="line">            <span class="built_in">int</span>[,] matrix_2 = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>, <span class="number">4</span>]&#123;<span class="comment">//初始化并赋值</span></span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> &#125;, <span class="comment">//初始化第0行</span></span><br><span class="line">                &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;, <span class="comment">//初始化第1行</span></span><br><span class="line">                &#123;<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>&#125; <span class="comment">//初始化第2行</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; matrix_2.GetLength(<span class="number">0</span>); i++)<span class="comment">//循环遍历多维数组</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; matrix_2.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;矩阵(&#123;0&#125;,&#123;1&#125;)的值为&#123;2&#125;&quot;</span>, i,j, matrix_2[i,j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//  （5）交错数组：交错数组是数组的数组。交错数组是一维数组，每个元素是一个数组</span></span><br><span class="line">            <span class="comment">//      - 声明：int [][] scores;int数组的一维数组，声明一个数组不会在内存中创建数组</span></span><br><span class="line">            <span class="comment">//      - 初始化：int[][] scores = new int[5][];含有五个元素</span></span><br><span class="line">            <span class="comment">//      - 初始化赋值：int[][] scores = new int[2][]&#123;new int[]&#123;92,93,94&#125;,new int[]&#123;85,66,87,88&#125;&#125;;</span></span><br><span class="line">            <span class="comment">//      - 访问：scores[i][j] 取第i个子数组的第j个元素（类似于二维数组）</span></span><br><span class="line">            <span class="built_in">int</span>[][] scores = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>][];</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; scores.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &lt;= <span class="number">2</span>) scores[i] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>];</span><br><span class="line">                <span class="keyword">else</span> scores[i] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; scores[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    scores[i][j] = i * j + <span class="number">6</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; scores.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; scores[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;子数组&#123;0&#125;下标&#123;1&#125;的值为&#123;2&#125;&quot;</span>, i, j, scores[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>（7）Array 类：Array 类是 C# 中所有数组的基类，提供了很多属性和方法</strong><br>            - Array.Clear:根据元素的类型，设置数组中某个范围的元素为零、为 false 或者为 null。<br>            - Array.IndexOf(Array, Object):搜索指定的对象，返回整个[一维数组]中第一次出现的索引。<br>            - Array.Reverse(Array):逆转整个一维数组中元素的顺序。<br>            - Array.Sort(Array):使用数组的每个元素的 IComparable 实现来排序整个一维数组中的元素。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_Arrays</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//  （6）Array 类：Array 类是 C# 中所有数组的基类，提供了很多属性和方法</span></span><br><span class="line">            <span class="comment">//      - Array.Clear:根据元素的类型，设置数组中某个范围的元素为零、为 false 或者为 null。</span></span><br><span class="line">            <span class="comment">//      - Array.IndexOf(Array, Object):搜索指定的对象，返回整个[一维数组]中第一次出现的索引。</span></span><br><span class="line">            <span class="comment">//      - Array.Reverse(Array):逆转整个一维数组中元素的顺序。</span></span><br><span class="line">            <span class="comment">//      - Array.Sort(Array):使用数组的每个元素的 IComparable 实现来排序整个一维数组中的元素。</span></span><br><span class="line">            <span class="built_in">int</span>[] list = &#123; <span class="number">34</span>, <span class="number">72</span>, <span class="number">13</span>, <span class="number">44</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">10</span> &#125;;</span><br><span class="line">            Console.Write(<span class="string">&quot;原始数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);<span class="comment">//不换行输出</span></span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();<span class="comment">//输出换行</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 逆转数组</span></span><br><span class="line">            Array.Reverse(list);<span class="comment">//改变原数组</span></span><br><span class="line">            Console.Write(<span class="string">&quot;逆转数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 排序数组</span></span><br><span class="line">            Array.Sort(list);<span class="comment">//改变原数组，默认由小到大</span></span><br><span class="line">            Console.Write(<span class="string">&quot;排序数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五-列表与字典"><a href="#五-列表与字典" class="headerlink" title="五.列表与字典"></a>五.列表与字典</h1><h2 id="1-列表ArrayList"><a href="#1-列表ArrayList" class="headerlink" title="1.列表ArrayList"></a>1.列表ArrayList</h2><blockquote><p><strong>1.ArrayList：动态数组列表集合，类似于Java的List<Object></strong><br>    （1）初始化：ArrayList是一个类&#x2F;对象，需要使用new关键字初始化，且不需要指定大小（动态扩展） ArrayList array &#x3D; new ArrayList();<br>    （2）特点：<br>          - 长度动态扩展，无需人为指定；<br>          - 存储数据时使用Object类型，故可以同时存储多种不同的数据（int、double、class、string）<br>          - 不是类型安全的，可能出现类型匹配错误；存在频繁的装箱拆箱操作，性能低下<br>    （3）使用：<br>          - Item[Int32]    获取或设置指定索引处的元素。<br>          - Count    获取 ArrayList 中实际包含的元素个数。<br>          - public virtual int Add( object value ); 在 ArrayList 的末尾添加一个对象。<br>          - public virtual void Clear(); 从 ArrayList 中移除所有的元素。<br>          - public virtual void Insert( int index, object value ); 在 ArrayList 的指定索引处，插入一个元素。<br>          - public virtual void Remove( object obj ); 从 ArrayList 中移除第一次出现的指定对象。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.ArrayList：动态数组列表集合，类似于Java的List&lt;Object&gt;</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ArrayList_Use</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mains</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ArrayList arrayList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            arrayList.Add(<span class="number">2</span>);</span><br><span class="line">            arrayList.Add(<span class="number">3.1415</span>);</span><br><span class="line">            arrayList.Add(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList 长度： &quot;</span> + arrayList.Count);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList[0]： &quot;</span> + arrayList[<span class="number">0</span>]);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList[1]： &quot;</span> + arrayList[<span class="number">1</span>]);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList[2]： &quot;</span> + arrayList[<span class="number">2</span>]);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-列表List"><a href="#2-列表List" class="headerlink" title="2.列表List"></a>2.列表List</h2><blockquote><p><strong>2.List：List也是一种动态列表集合，类似于ArrayList，但必须提供泛型</strong><br>    （1）定义：为了解决ArrayList的类型不安全，C#提供了List列表，List列表声明时必须提供泛型，即List内存放的数据必须都是该泛型的数据。<br>    （2）初始化：List<int> list &#x3D; new List<int>();<br>    （3）本质：List其实就是在ArrayList基础上，添加了类型限制，以后都推荐使用List<br>    （4）使用：与ArrayList类似，注意泛型也可以是自定义的类，List也可以存放对象！</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.List：List也是一种动态列表集合，类似于ArrayList，但必须提供泛型</span></span><br><span class="line">    <span class="comment">//  （1）定义：为了解决ArrayList的类型不安全，C#提供了List列表，List列表声明时必须提供泛型，即List内存放的数据必须都是该泛型的数据。</span></span><br><span class="line">    <span class="comment">//  （2）初始化：List&lt;int&gt; list = new List&lt;int&gt;();</span></span><br><span class="line">    <span class="comment">//  （3）本质：List其实就是在ArrayList基础上，添加了类型限制，以后都推荐使用List</span></span><br><span class="line">    <span class="comment">//  （4）使用：与ArrayList类似，注意泛型也可以是自定义的类，List也可以存放对象！</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">List_Use</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mains</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            List&lt;<span class="built_in">int</span>&gt; list = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                list.Add(i + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (list[i] % <span class="number">2</span>!=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    list[i] *= <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">int</span> val <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(val + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            list.Clear();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;清空后长度 ： &quot;</span> + list.Count);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-字典Dictionary"><a href="#3-字典Dictionary" class="headerlink" title="3.字典Dictionary"></a>3.字典Dictionary</h2><blockquote><p><strong>3.Dictionary：Dictionary是由键值对组成的字典类型，类似于Java的Map</strong><br>    （1）初始化：Dictionary也是对象，需要使用new关键字。同时在初始化时需要指定键值对的泛型 Dictionary&lt;string,int&gt; dir &#x3D; new Dictionary&lt;string,int&gt;();<br>    （2）特点：<br>          - Dictionary里面的每一个元素都是一个键值对(由二个元素组成：键和值)，可以通过 Dictionary[key]来取值<br>          - Dictionary里面键必须是唯一的,而值不需要唯一的<br>    （3）使用：<br>          - Count        获取包含在 Dictionary&lt;TKey, TValue&gt; 中的键&#x2F;值对的数目。<br>          - Keys         获取包含 Dictionary&lt;TKey, TValue&gt; 中的键的集合。<br>          - Values 获取包含 Dictionary&lt;TKey, TValue&gt; 中的值的集合。<br>          - Add                 将指定的键和值添加到字典中。<br>          - Clear 从 Dictionary&lt;TKey, TValue&gt; 中移除所有的键和值。<br>          - ContainsKey 确定 Dictionary&lt;TKey, TValue&gt; 是否包含指定的键。<br>          - GetEnumerator       返回循环访问 Dictionary&lt;TKey, TValue&gt; 的枚举器<br>          - Remove              从 Dictionary&lt;TKey, TValue&gt; 中移除所指定的键的值。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//3.Dictionary：Dictionary是由键值对组成的字典类型，类似于Java的Map</span></span><br><span class="line">    <span class="comment">//  （1）初始化：Dictionary也是对象，需要使用new关键字。同时在初始化时需要指定键值对的泛型 Dictionary&lt;string,int&gt; dir = new Dictionary&lt;string,int&gt;();</span></span><br><span class="line">    <span class="comment">//  （2）特点：</span></span><br><span class="line">    <span class="comment">//      - Dictionary里面的每一个元素都是一个键值对(由二个元素组成：键和值)，可以通过 Dictionary[key]来取值</span></span><br><span class="line">    <span class="comment">//      - Dictionary里面键必须是唯一的,而值不需要唯一的</span></span><br><span class="line">    <span class="comment">//  （3）使用：</span></span><br><span class="line">    <span class="comment">//      - Count        获取包含在 Dictionary&lt;TKey, TValue&gt; 中的键/值对的数目。</span></span><br><span class="line">    <span class="comment">//      - Keys         获取包含 Dictionary&lt;TKey, TValue&gt; 中的键的集合。</span></span><br><span class="line">    <span class="comment">//      - Values 获取包含 Dictionary&lt;TKey, TValue&gt; 中的值的集合。</span></span><br><span class="line">    <span class="comment">//      - Add                 将指定的键和值添加到字典中。</span></span><br><span class="line">    <span class="comment">//      - Clear 从 Dictionary&lt;TKey, TValue&gt; 中移除所有的键和值。</span></span><br><span class="line">    <span class="comment">//      - ContainsKey 确定 Dictionary&lt;TKey, TValue&gt; 是否包含指定的键。</span></span><br><span class="line">    <span class="comment">//      - GetEnumerator       返回循环访问 Dictionary&lt;TKey, TValue&gt; 的枚举器</span></span><br><span class="line">    <span class="comment">//      - Remove              从 Dictionary&lt;TKey, TValue&gt; 中移除所指定的键的值。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Dictionary</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; dictionary = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;();</span><br><span class="line">            dictionary.Add(<span class="string">&quot;wangxin&quot;</span>, <span class="number">99</span>);<span class="comment">//Add赋值，Add赋值不能添加key重复的项</span></span><br><span class="line">            dictionary[<span class="string">&quot;shayuan&quot;</span>] = <span class="number">100</span>;<span class="comment">//=赋值，=赋值可以添加key重复项，会覆盖原始数据</span></span><br><span class="line">            <span class="keyword">if</span> (dictionary.ContainsKey(<span class="string">&quot;wangxin&quot;</span>))<span class="comment">//是否包含key</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Dictionary 长度： &quot;</span> + dictionary.Count);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;wangxin is &#123;0&#125;&quot;</span>, dictionary[<span class="string">&quot;wangxin&quot;</span>]);</span><br><span class="line">                dictionary.Remove(<span class="string">&quot;wangxin&quot;</span>);<span class="comment">//删除key</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (dictionary.ContainsKey(<span class="string">&quot;shayuan&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Dictionary 长度： &quot;</span> + dictionary.Count);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;shayuan is &#123;0&#125;&quot;</span>, dictionary[<span class="string">&quot;shayuan&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//Console.WriteLine(&quot;wangxin is &#123;0&#125;&quot;, dictionary[&quot;wangxin&quot;]);//访问不存在的数据会报异常</span></span><br><span class="line">            <span class="keyword">if</span> (!dictionary.ContainsKey(<span class="string">&quot;wangxin&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;wangxin is removed!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//遍历Dictionary</span></span><br><span class="line">            <span class="comment">//遍历key</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> key <span class="keyword">in</span> dictionary.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Key = &#123;0&#125;&quot;</span>, key);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//遍历value</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> <span class="keyword">value</span> <span class="keyword">in</span> dictionary.Values)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;value = &#123;0&#125;&quot;</span>, <span class="keyword">value</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//遍历字典</span></span><br><span class="line">            <span class="keyword">foreach</span> (KeyValuePair&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; kvp <span class="keyword">in</span> dictionary)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Key = &#123;0&#125;, Value = &#123;1&#125;&quot;</span>, kvp.Key, kvp.Value);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//添加存在的元素 try...catch..处理异常</span></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                dictionary.Add(<span class="string">&quot;txt&quot;</span>, <span class="number">99</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (ArgumentException)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;An element with Key = \&quot;txt\&quot; already exists.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六-类与继承"><a href="#六-类与继承" class="headerlink" title="六.类与继承"></a>六.类与继承</h1><h2 id="1-类的基本概念"><a href="#1-类的基本概念" class="headerlink" title="1.类的基本概念"></a>1.类的基本概念</h2><blockquote><p><strong>1.类的封装</strong><br>    （1）访问修饰符：类的默认访问标识符是 internal，成员的默认访问标识符是 private。<br>          - public：所有对象都可以访问；<br>          - private：对象本身在对象内部可以访问；<br>          - protected：只有该类对象及其子类对象可以访问<br>          - internal：同一个程序集的对象可以访问；可以被定义在该成员所定义的【应用程序内】的任何类或方法访问。<br>          - protected internal：访问限于当前程序集或派生自包含类的类型。（protected和internal的并集）<br>    （2）方法：类的行为，主要是方法参数的传递方式<br>          - 值传递：这种方式复制参数的实际值给函数的形式参数，实参和形参使用的是两个不同内存中的值。在这种情况下，当形参的值发生改变时，不会影响实参的值<br>          - 引用传递(ref)：这种方式复制参数的内存位置的引用给形式参数。这意味着，当形参的值发生改变时，同时也改变实参的值。<br>          - 输出参数(out)：这种方式可以返回多个值。传 out 定义的参数进去的时候这个参数在函数内部必须初始化。否则是不能进行编译的。<br>          - 数组传值：可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。<br><strong>注意：</strong>ref 和 out 都是传递数据的地址，正因为传了地址，才能对源数据进行修改。</p></blockquote><blockquote><p><strong>2.类的基本参数</strong><br>    （1）构造函数：初始化对象时自动执行，默认提供一个无参构造 Object(){}<br>    （2）析构函数：销毁对象时自动执行 ~Object(){}<br>    （3）静态成员变量： static 关键字把类成员定义为静态的，静态成员变量属于类，可以在任意地方初始化和使用<br>    （4）静态成员函数：static 关键字把类成员定义为静态的，静态成员变量属于类，静态成员函数只能访问静态变量</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.类的封装</span></span><br><span class="line">    <span class="comment">//  （1）访问修饰符：类的默认访问标识符是 internal，成员的默认访问标识符是 private。</span></span><br><span class="line">    <span class="comment">//      - public：所有对象都可以访问；</span></span><br><span class="line">    <span class="comment">//      - private：对象本身在对象内部可以访问；</span></span><br><span class="line">    <span class="comment">//      - protected：只有该类对象及其子类对象可以访问</span></span><br><span class="line">    <span class="comment">//      - internal：同一个程序集的对象可以访问；可以被定义在该成员所定义的【应用程序内】的任何类或方法访问。</span></span><br><span class="line">    <span class="comment">//      - protected internal：访问限于当前程序集或派生自包含类的类型。（protected和internal的并集）</span></span><br><span class="line">    <span class="comment">//  （2）方法：类的行为，主要是方法参数的传递方式</span></span><br><span class="line">    <span class="comment">//      - 值传递：这种方式复制参数的实际值给函数的形式参数，实参和形参使用的是两个不同内存中的值。在这种情况下，当形参的值发生改变时，不会影响实参的值</span></span><br><span class="line">    <span class="comment">//      - 引用传递(ref)：这种方式复制参数的内存位置的引用给形式参数。这意味着，当形参的值发生改变时，同时也改变实参的值。</span></span><br><span class="line">    <span class="comment">//      - 输出参数(out)：这种方式可以返回多个值。传 out 定义的参数进去的时候这个参数在函数内部必须初始化。否则是不能进行编译的。</span></span><br><span class="line">    <span class="comment">//      - 数组传值：可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。</span></span><br><span class="line">    <span class="comment">//  注意：ref 和 out 都是传递数据的地址，正因为传了地址，才能对源数据进行修改。</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">A</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _a;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _b;</span><br><span class="line">        <span class="comment">//值传递</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sum</span>(<span class="params"><span class="built_in">int</span> a,<span class="built_in">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a += b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;值传递函数内求和 a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//引用传递</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sum</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">int</span> a,<span class="keyword">ref</span> <span class="built_in">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a += b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递函数内求和 a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出参数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sum</span>(<span class="params"><span class="built_in">int</span> a,<span class="built_in">int</span> b,<span class="keyword">out</span> <span class="built_in">int</span> c</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            c = a + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//类/对象传递(对象传值 = 引用传值)</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span>(<span class="params">A obj</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> temp = obj._a;</span><br><span class="line">            obj._a = obj._b;</span><br><span class="line">            obj._b = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//数组传值</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sumAndClear</span>(<span class="params"><span class="built_in">int</span>[] arrays</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arrays.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                sum += arrays[i];</span><br><span class="line">                arrays[i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;数组求和sum = &#123;0&#125;&quot;</span>, sum);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            A a_obj = <span class="keyword">new</span> A();</span><br><span class="line">            <span class="comment">//值传递</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;值传递求和前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a,b);</span><br><span class="line">            a_obj.sum(a, b);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;值传递求和后初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            <span class="comment">//引用传递</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递求和前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            a_obj.sum(<span class="keyword">ref</span> a, <span class="keyword">ref</span> b);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递求和后初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            <span class="comment">//输出参数</span></span><br><span class="line">            <span class="built_in">int</span> res;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;输出参数求和前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            a_obj.sum( a, b,<span class="keyword">out</span> res);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递求和后初始数据a = &#123;0&#125;,b = &#123;1&#125;,res = &#123;2&#125;&quot;</span>, a, b,res);</span><br><span class="line">            <span class="comment">//对象传递</span></span><br><span class="line">            a_obj._a = <span class="number">3</span>;</span><br><span class="line">            a_obj._b = <span class="number">4</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;对象传递交换前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a_obj._a, a_obj._b);</span><br><span class="line">            a_obj.swap(a_obj);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;对象传递交换后初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a_obj._a, a_obj._b);</span><br><span class="line">            <span class="comment">//数组传递</span></span><br><span class="line">            <span class="built_in">int</span>[] arr = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span> &#125;;</span><br><span class="line">            Console.Write(<span class="string">&quot;数组传值前： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">int</span> fac <span class="keyword">in</span> arr) Console.Write(fac + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            a_obj.sumAndClear(arr);</span><br><span class="line">            Console.Write(<span class="string">&quot;数组传值后： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> fac <span class="keyword">in</span> arr) Console.Write(fac + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.类的基本参数</span></span><br><span class="line">    <span class="comment">//  （1）构造函数：初始化对象时自动执行，默认提供一个无参构造 Object()&#123;&#125;</span></span><br><span class="line">    <span class="comment">//  （2）析构函数：销毁对象时自动执行 ~Object()&#123;&#125;</span></span><br><span class="line">    <span class="comment">//  （3）静态成员变量： static 关键字把类成员定义为静态的，静态成员变量属于类，可以在任意地方初始化和使用</span></span><br><span class="line">    <span class="comment">//  （4）静态成员函数：static 关键字把类成员定义为静态的，静态成员变量属于类，静态成员函数只能访问静态变量</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">B</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">double</span> val;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">B</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            val = <span class="number">0</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;第&#123;0&#125;个B，无参构造函数Val = &#123;1&#125;&quot;</span>,cnt,val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">B</span>(<span class="params"><span class="built_in">double</span> _val = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            val = _val;</span><br><span class="line">            cnt++;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;第&#123;0&#125;个B，有参构造函数Val = &#123;1&#125;&quot;</span>, cnt,val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getVal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">getCntOfB</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> cnt;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        ~B()</span><br><span class="line">        &#123;</span><br><span class="line">            cnt--;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;析构函数执行&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            B b_1 = <span class="keyword">new</span> B();</span><br><span class="line">            Console.WriteLine(b_1.getVal());</span><br><span class="line">            B b_2 = <span class="keyword">new</span> B(<span class="number">3.14</span>);</span><br><span class="line">            Console.WriteLine(b_2.getVal());</span><br><span class="line">            Console.WriteLine(B.getCntOfB());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-类的继承"><a href="#2-类的继承" class="headerlink" title="2.类的继承"></a>2.类的继承</h2><blockquote><p><strong>3.类的继承 Child:Parent</strong><br>    （1）C#只支持单继承，但可以通过接口来实现多继承<br>    （2）派生类继承了基类的public、protected、internal成员变量和成员方法。<br>    （3）若不指明，创建子类对象调用子类的构造函数时，会默认首先调用父类的无参构造函数</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//3.类的继承 Child:Parent</span></span><br><span class="line">    <span class="comment">//  （1）C#只支持单继承，但可以通过接口来实现多继承</span></span><br><span class="line">    <span class="comment">//  （2）派生类继承了基类的public、protected、internal成员变量和成员方法。</span></span><br><span class="line">    <span class="comment">//  （3）若不指明，创建子类对象调用子类的构造函数时，会默认首先调用父类的无参构造函数</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">double</span> length;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">double</span> width;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Shape</span>(<span class="params"><span class="built_in">double</span> len,<span class="built_in">double</span> wid</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            length = len;</span><br><span class="line">            width = wid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;长度： &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;宽度： &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Cube</span>:<span class="title">Shape</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">double</span> height;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Cube</span>(<span class="params"><span class="built_in">double</span> len,<span class="built_in">double</span> wid,<span class="built_in">double</span> hei</span>): <span class="title">base</span>(<span class="params">len, wid</span>)<span class="comment">//base(x,y)初始化父类参数，先于子类执行</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            height = hei;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetVolume</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> height * GetArea();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.Display();<span class="comment">//通过base来指代当前对象的父类</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;体积： &#123;0&#125;&quot;</span>, GetVolume());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Cube cube = <span class="keyword">new</span> Cube(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">            cube.Display();<span class="comment">//调用子类的覆盖方法</span></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七-多-态"><a href="#七-多-态" class="headerlink" title="七.多 态"></a>七.多 态</h1><blockquote><p><strong>1.多态：多态是根据不同的场景同一个行为具有多个不同表现形式或形态的能力。</strong><br>    （1）静态多态：函数的响应是在编译时发生的。<br>          - 函数重载：对相同的函数名有多个定义。可以是参数列表中的参数类型不同，也可以是参数个数不同。不能重载只有返回类型不同的函数声明。<br>          - 运算符重载：可以重定义或重载 C# 中内置的运算符。通过关键字 operator 后跟运算符的符号来定义的，同时包含 public 和 static 修饰符。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.多态：多态是根据不同的场景同一个行为具有多个不同表现形式或形态的能力。</span></span><br><span class="line">    <span class="comment">//  （1）静态多态：函数的响应是在编译时发生的。</span></span><br><span class="line">    <span class="comment">//      - 函数重载：对相同的函数名有多个定义。可以是参数列表中的参数类型不同，也可以是参数个数不同。不能重载只有返回类型不同的函数声明。</span></span><br><span class="line">    <span class="comment">//      - 运算符重载：可以重定义或重载 C# 中内置的运算符。通过关键字 operator 后跟运算符的符号来定义的，同时包含 public 和 static 修饰符。</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Vector</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> x;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> y;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Vector</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            x = <span class="number">0</span>;</span><br><span class="line">            y = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Vector</span>(<span class="params"><span class="built_in">int</span> _x,<span class="built_in">int</span> _y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            x = _x;</span><br><span class="line">            y = _y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getX</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getY</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> y;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span>(<span class="params"><span class="built_in">int</span> x</span>)</span> &#123; <span class="keyword">this</span>.x = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span>(<span class="params"><span class="built_in">int</span> y</span>)</span> &#123; <span class="keyword">this</span>.y = y; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Vector(&#123;0&#125;,&#123;1&#125;)&quot;</span>, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 重载 + 运算符来把两个 Vector 对象相加(可以直接访问private)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> Vector <span class="keyword">operator</span> +(Vector a, Vector b)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector C = <span class="keyword">new</span> Vector();</span><br><span class="line">            C.x = a.x + b.x;</span><br><span class="line">            C.y = a.y + b.y;</span><br><span class="line">            <span class="keyword">return</span> C;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 重载 - 运算符来把两个 Vector 对象相减(可以直接访问private)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> Vector <span class="keyword">operator</span> -(Vector a, Vector b)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector C = <span class="keyword">new</span> Vector();</span><br><span class="line">            C.x = a.x - b.x;</span><br><span class="line">            C.y = a.y - b.y;</span><br><span class="line">            <span class="keyword">return</span> C;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 重载 * 运算符来把两个 Vector 对象相乘(可以直接访问private)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="keyword">operator</span> *(Vector a, Vector b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> a.x * b.x + a.y * b.y;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector a = <span class="keyword">new</span> Vector(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">            Vector b = <span class="keyword">new</span> Vector(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="comment">//+法</span></span><br><span class="line">            Vector c = a + b;</span><br><span class="line">            c.Display();</span><br><span class="line">            <span class="comment">//-法</span></span><br><span class="line">            c = a - b;</span><br><span class="line">            c.Display();</span><br><span class="line">            <span class="comment">//*法</span></span><br><span class="line">            <span class="built_in">int</span> res = a * b;</span><br><span class="line">            Console.WriteLine(res);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>（2）动态多态：函数的响应是在运行时发生的。</strong><br>        - 虚方法（virtual ）：定义子类可以重写覆盖父类的方法，对虚方法的调用是在运行时发生的。子类需要使用override声明<br>              + 父类定义虚方法，子类可以实现重写父类虚方法，也可以不实现重写。如果重写了，那么创建子类对象后，不管是父类指针还是子类，调用虚方法都会执行子类的覆盖。<br>              + 父类定义虚方法，必须要有父类的实现，在父类中是一个普通函数。<br>        - 抽象（abstract ）：抽象abstract关键字可以作用在方法上，也可以作用在类上。子类需要使用override声明<br>              + 父类抽象方法没有实现，只有声明。子类必须实现父类的抽象方法<br>              + 类内任何一个方法是抽象的，则该类必须被声明为抽象类。即抽象方法只能在抽象类中定义<br>              + 抽象类不能被实例化，但可以指向子类实例。子类若不实现抽象方法则也会变成抽象类。<br>        - 总结：简单说，抽象方法是需要子类去实现的。虚方法是已经实现了的，可以被子类覆盖，也可以不覆盖，取决于需求。抽象方法和虚方法都可以供派生类重写。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//动态多态：函数的响应是在运行时发生的。</span></span><br><span class="line">    <span class="comment">//      - 虚方法（virtual ）：定义子类可以重写覆盖父类的方法，对虚方法的调用是在运行时发生的。子类需要使用override声明</span></span><br><span class="line">    <span class="comment">//          + 父类定义虚方法，子类可以实现重写父类虚方法，也可以不实现重写。如果重写了，那么创建子类对象后，不管是父类指针还是子类，调用虚方法都会执行子类的覆盖。</span></span><br><span class="line">    <span class="comment">//          + 父类定义虚方法，必须要有父类的实现，在父类中是一个普通函数。</span></span><br><span class="line">    <span class="comment">//      - 抽象（abstract ）：抽象abstract关键字可以作用在方法上，也可以作用在类上。子类需要使用override声明</span></span><br><span class="line">    <span class="comment">//          + 父类抽象方法没有实现，只有声明。子类必须实现父类的抽象方法</span></span><br><span class="line">    <span class="comment">//          + 类内任何一个方法是抽象的，则该类必须被声明为抽象类。即抽象方法只能在抽象类中定义</span></span><br><span class="line">    <span class="comment">//          + 抽象类不能被实例化，但可以指向子类实例。子类若不实现抽象方法则也会变成抽象类。</span></span><br><span class="line">    <span class="comment">//      - 总结：简单说，抽象方法是需要子类去实现的。虚方法是已经实现了的，可以被子类覆盖，也可以不覆盖，取决于需求。抽象方法和虚方法都可以供派生类重写。</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//抽象类：包含至少一个抽象方法，但是不仅仅包含抽象方法</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Animal</span>(<span class="params"><span class="built_in">string</span> _name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            name = _name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//抽象方法：叫</span></span><br><span class="line">        <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span>(<span class="params"></span>)</span>;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//虚方法</span></span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;&#123;0&#125; is eating&quot;</span>,name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Dog</span> : <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Dog</span>(<span class="params"><span class="built_in">string</span> name</span>):<span class="title">base</span>(<span class="params">name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实现抽象类</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">shout</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Dog &#123;0&#125; is wangwang&quot;</span>,name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//覆盖重写虚函数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.eat();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Dog &#123;0&#125; is eat bone&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Cat</span> : <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Cat</span>(<span class="params"><span class="built_in">string</span> name</span>) : <span class="title">base</span>(<span class="params">name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实现抽象类</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">shout</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Cat &#123;0&#125; is miaomiao&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//覆盖重写虚函数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.eat();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Cat &#123;0&#125; is eat fish&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Animal[] animals = <span class="keyword">new</span> Animal[<span class="number">2</span>] &#123; <span class="keyword">new</span> Dog(<span class="string">&quot;tom&quot;</span>), <span class="keyword">new</span> Cat(<span class="string">&quot;marry&quot;</span>) &#125;;</span><br><span class="line">            <span class="keyword">foreach</span>(Animal animal <span class="keyword">in</span> animals)</span><br><span class="line">            &#123;</span><br><span class="line">                animal.shout();</span><br><span class="line">                animal.eat();</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>2.接口（interface）：接口类似于抽象类，但接口内所有方法都是抽象的</strong><br>      （1）接口不能实例化，继承接口必须实现所有抽象方法（不用声明override），接口可以指向子类（多态）<br>      （2）接口默认声明为public<br>      （3）接口可以多继承，解决 C# 里面类可以同时继承多个基类的问题。<br>      （4）接口可以继承接口</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//2.接口（interface）：接口类似于抽象类，但接口内所有方法都是抽象的</span></span><br><span class="line">    <span class="comment">//  （1）接口不能实例化，继承接口必须实现所有抽象方法（不用声明override），接口可以指向子类（多态）</span></span><br><span class="line">    <span class="comment">//  （2）接口默认声明为public</span></span><br><span class="line">    <span class="comment">//  （3）接口可以多继承，解决 C# 里面类可以同时继承多个基类的问题。</span></span><br><span class="line">    <span class="comment">//  （4）接口可以继承接口</span></span><br><span class="line">    <span class="keyword">interface</span> <span class="title">Parent</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">disPlay</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Child</span> : <span class="title">Parent</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disPlay</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;child is display!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_40772692/article/details/121818727">C#（一） C# 基础语法一文通</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#开发WinForm之二(进阶与复杂控件使用)</title>
      <link href="/posts/126044072.html"/>
      <url>/posts/126044072.html</url>
      
        <content type="html"><![CDATA[<h1 id="复合控件"><a href="#复合控件" class="headerlink" title="复合控件"></a>复合控件</h1><blockquote><p><strong>1.控件的使用综述：在WinForm中使用控件主要包括以下几种情况:</strong><br>（1）标准控件：直接使用winform自带的控件，比如button、textBox等。我们只需要修改属性，添加事件即可。<br>（2）复合控件：将一些标准控件组合起来，实现复杂功能。需要定义 class YourControl:UserControl{ }<br>（3）扩展控件：拓展或者改变一些标准控件的功能。需要继承于标准控件，class YourButton:Button { }<br>（4）自定义控件：完全自定义一个控件，定义属性、方法、样式等。需要继承于Control（Control是所有控件的基类），class YourControl:Control { }<br> <strong>注意：</strong>我们之前学习了标准控件的使用，所以这节课我们就学习一下复合控件如何定义和使用，循序渐进。</p></blockquote><blockquote><p><strong>2.复合控件：实现一个搜索框控件（组合文本框与图片框）:</strong><br>（1）定义：复合控件又称为用户控件，专门用来将标准控件进行组合，其继承自 UserControl<br>（2）定义复合控件：<br>    - 右键解决方案-&gt;添加 用户控件窗体(UserControl)，命名为SearchBox。会自动生成一个SearchBox类，继承自 UserControl<br>    - 双击 SearchBox.cs文件，可以打开设计界面，像窗口一样设计符合组件的样式<br>            a. 拖上去一个textBox文本框作为搜索框<br>            b. 拖上去一个图片框，设置图片为搜索图标<br>            c. 使用表格布局，将二者组合到一起，并调整大小和位置（Anchor、Dock、表格比例等）<br>            d.保存后，重新生成解决方案，再点击界面中的工具箱即可看到我们自己的复合控件<br>（3）复合控件的摆放和原理<br>     - 在界面中可以直接拖拽符合控件，并且复合控件作为一个整体也具有Size、Location、事件等等常规属性。<br>     - 复合控件本质上就是一个窗体！复合控件中的组件和窗体中的组件一样，在初始化时放置到窗体上。     </p></blockquote><h2 id="复合控件SearchBox可视化设计"><a href="#复合控件SearchBox可视化设计" class="headerlink" title="复合控件SearchBox可视化设计"></a>复合控件SearchBox可视化设计</h2><blockquote><p>在SearchBox.cs窗体设计界面中，对复合控件进行可视化样式设计，其步骤如下：<br>添加一个TableLayoutPanel表格布局容器，保留一行两列。并设置其Dock为Fill填满整个父窗口，然后设置两列表格大小比例为7:3。（用来放置文本框和图片框按钮）<br>添加一个TextBox到第一个单元格，并设置其Anchor为左右边距固定（可以随父窗口拉伸而拉伸）<br>添加一个pictureBox到第二个单元格，并设置其Dock为Fill填满单元格，添加图片资源-搜索图标<br><strong>注意：</strong>现在只是设计好了SearchBox的样式，但是还没有设计其属性访问和事件处理，比如复合控件如何获取文本框的值？如何获取&#x2F;设置图片框的点击事件？复合控件如何当作一个整体来用？</p></blockquote><img src="https://img-blog.csdnimg.cn/599cb97399b948b1a8c722e5a889cf18.png"><h2 id="复合控件的属性访问和事件处理"><a href="#复合控件的属性访问和事件处理" class="headerlink" title="复合控件的属性访问和事件处理"></a>复合控件的属性访问和事件处理</h2><p>**复合控件的访问和事件处理：我们有时需要获取复合控件内子控件的数据、或者给复合控件的某个位置（图片、按钮）设置事件 **</p><h3 id="（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可"><a href="#（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可" class="headerlink" title="（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可"></a>（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可</h3><ul><li>在复合控件设计界面内选择每个子控件，设置其 Modifiers 属性为 public （默认为private）</li><li>然后在复合控件源码中，相关的子控件就会自动变为 public 访问修饰的，我们可以直接使用 [复合控件.子控件.属性] 来访问</li><li>给SearchBox的搜索图片设置点击事件：searchBox1.pictureBox1.Click +&#x3D; new EventHandler(searchEvent);</li><li>获取文本框搜索内容：MessageBox.Show(“开始搜索…” + searchBox1.textBox1.Text);</li></ul><h3 id="（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）"><a href="#（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）" class="headerlink" title="（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）"></a>（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）</h3><h3 id="（3）复合控件自定义属性"><a href="#（3）复合控件自定义属性" class="headerlink" title="（3）复合控件自定义属性"></a>（3）复合控件自定义属性</h3><ul><li><strong>添加属性：</strong></li></ul><ol><li>在SearchBox逻辑代码中，添加属性访问器<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> SearchText</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">get</span></span><br><span class="line">     &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">set</span></span><br><span class="line">     &#123;</span><br><span class="line">          <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>重新生成解决方案，打开Form3界面设计，在杂项中就可以看到我们自定义的属性SearchText。通过修改值可以直接修改内部的TextBox。其本质都是调用了set、get方法。</li></ol><ul><li><strong>重写属性：</strong></li></ul><ol><li>在SearchBox逻辑代码中，重写UserControl已有的属性，比如Text等<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">     <span class="keyword">get</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">set</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>重新生成解决方案，打开Form3界面设计，原本的属性就成为了我们重写的属性。</li></ol><ul><li>C# Attribute 特性：特性是一种可以被编译器识别的声明性标签，类似于Java的注解<br>a. 语法：[attribute(positional_parameters, name_parameter &#x3D; value, …)]<br>b. 常用特性：<br>  [Browsable(true)]: 控件属性是否在设计器内可见（一般默认为false）<br>  [Category(“Appearance”)]：控件属性显示在哪个类别中。Action(与可用操作相关)、Appearance(与实体的外观相关)、Behavior（与实体的行为相关）、Data（与数据和数据源管理相关）<br>  [DesignerSerializationVisibility()]: 将我们在控件属性上设定的值持久化到代码中，这样我们下次再查看控件的值依然是我们最后一次设定的值。指示一个属性是否串行化和如何串行化，它的值是一个枚举，一共有三种类型Content，Hidden，Visible。</li></ul><h3 id="（4）复合控件自定义事件"><a href="#（4）复合控件自定义事件" class="headerlink" title="（4）复合控件自定义事件"></a>（4）复合控件自定义事件</h3><ul><li>在SearchBox逻辑代码中，添加声明自定义事件。 public event EventHandler SearchEvent;</li><li>重新生成解决方案后，可以在事件-杂项中看到我们自定义的事件 SearchEvent </li><li>在设计界面可以给事件添加&#x2F;实现处理回调方法 onSearch（），配合自定义属性食用</li><li>在复合组件中，将图片的点击事件 链接到 自定义事件上，即点击图片时触发自定义事件。编写图片的Click事件</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PictureBox的点击事件 -&gt; 触发自定义事件SearchEvent的回调方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="comment">//调用事件，固定写法</span></span><br><span class="line">      <span class="keyword">if</span>(SearchEvent != <span class="literal">null</span>)</span><br><span class="line">      &#123;</span><br><span class="line">           SearchEvent.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//简化写法 SearchEvent?.Invoke(this,e);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>一个控件还可以添加多个事件，顺序触发</p><blockquote><p>（1）界面设计</p></blockquote><img src="https://img-blog.csdnimg.cn/4ff3e0f317a443af87bd04026f529b2d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p>（2）SearchBox.cs 逻辑代码</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">SearchBox</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//添加自定义事件</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler SearchEvent;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SearchBox</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//初始化控件（TextBox+PictureBox）</span></span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加新的自定义属性 SearchText</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> SearchText</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 重写属性 Text</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//图片点击事件onClick -&gt; 链接自定义事件SearchEvent</span></span><br><span class="line">        <span class="comment">//注意：SearchEvent的事件处理方法，需要在Form.cs中像基本控件的事件处理一样进行添加才行</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//调用事件，固定写法</span></span><br><span class="line">            <span class="keyword">if</span>(SearchEvent != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                SearchEvent.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//简化写法 SearchEvent?.Invoke(this,e);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>（3）Form3.cs 主窗体逻辑代码</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//设置复合控件 图片的点击事件（public方式）</span></span><br><span class="line">            <span class="comment">//searchBox1.pictureBox1.Click += new EventHandler(searchEvent);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//public方式设置复合控件-子控件点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">searchEvent</span>(<span class="params"><span class="built_in">object</span> sender,EventArgs args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取并展示 文本框的内容</span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;开始搜索...&quot;</span> + searchBox1.textBox1.Text);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//SearchBox的自定义事件实现 SearchEvent -&gt; onSearch</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onSearch</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取并展示 文本框的内容（通过自定义属性/重写属性）</span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;开始搜索...&quot;</span> + searchBox1.SearchText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/916c99fb500a48079e51515cc0a2c8aa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><h1 id="二-控件包装"><a href="#二-控件包装" class="headerlink" title="二.控件包装"></a>二.控件包装</h1><h2 id="1-控件包装基本设计"><a href="#1-控件包装基本设计" class="headerlink" title="1.控件包装基本设计"></a>1.控件包装基本设计</h2><blockquote><p><strong>1.控件包装：</strong><br>（1）定义：控件包装是复合控件的一种特殊形式，其内部只有一个控件<br>（2）目的：对一些基础控件的功能进行拓展和自定义修改，比如TextBox包装后可以修改高度和内边距padding等<br>（3）步骤：<br>        - 新建包装控件类AfTextBox，继承自UserControl，其内部只放置一个TextBox组件，作为对TextBox的包装拓展<br>        - 为了实现可修改TextBox高度宽度的效果，需要设置TextBox的Size随着外部Form的变化而变化 -&gt; onLayout()<br>        - 为了实现可修改TextBox内边距padding的效果，需要设置Form与TextBox的边距来代替文字内边距 -&gt; onLayout()<br>        - 为了无缝实现上述效果，看着是一个TextBox整体，需要设置TextBox和Form背景色相同，并且取消TextBox边框。</p></blockquote><blockquote><p><strong>2.Location属性解释：控件左上角相对于其容器左上角的坐标，单位是像素。</strong><br>（1）对于窗体来说，就是窗口左上角相对于屏幕左上角的坐标；<br>（2）对于一般控件来说，就是控件左上角相对于其容器左上角的坐标，比如说相对于窗体，图片框等。<br>（3）父容器左上角默认(0,0)</p></blockquote><blockquote><p><strong>3.窗口位置调节：</strong><br>        - this.StartPosition &#x3D; FormStartPosition.Manual; &#x2F;&#x2F;窗体的位置由Location属性决定<br>        - this.StartPosition &#x3D; FormStartPosition.CenterParent; &#x2F;&#x2F;窗体在其父窗体中居中<br>        - this.StartPosition &#x3D; FormStartPosition.CenterScreen; &#x2F;&#x2F;窗体在当前显示窗口中居中，尺寸在窗体大小中指定<br>        - this.StartPosition &#x3D; FormStartPosition.WindowsDefaultBounds; &#x2F;&#x2F;窗体定位在windows默认位置，边界也由windows默认决定（默认）<br>        - this.StartPosition &#x3D; FormStartPosition.WindowsDefaultLocation; &#x2F;&#x2F;窗体定位在windows默认位置，尺寸在窗体大小中指定</p></blockquote><p><strong>（1）TextBox包装控件AfTextBox 逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">AfTextBox</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AfTextBox</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//初始化内部控件</span></span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重写布局实现</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs levent</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnLayout(levent);</span><br><span class="line">            <span class="comment">//1.获取子控件</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.Controls.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            Control C = <span class="keyword">this</span>.Controls[<span class="number">0</span>];</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//2.获取父窗口参数</span></span><br><span class="line">            Padding p = <span class="keyword">this</span>.Padding;<span class="comment">//父窗口的边距Padding</span></span><br><span class="line">            <span class="built_in">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;<span class="comment">//子控件相对于容器的初始坐标（左上角） </span></span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.Width, h = <span class="keyword">this</span>.Height;</span><br><span class="line">            w -= (p.Left + p.Right);<span class="comment">//TextBox的宽度 = 容器宽度 - 左右边距</span></span><br><span class="line">            x += p.Left;<span class="comment">//TextBox的相对x = p.Left</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//3.计算文本框的高度，使其显示在中间</span></span><br><span class="line">            <span class="comment">//  （1）PreferredSize：获取可以容纳控件的矩形区域的大小。</span></span><br><span class="line">            <span class="comment">//  （2）Size：获取控件的大小</span></span><br><span class="line">            <span class="built_in">int</span> h2 = C.PreferredSize.Height;</span><br><span class="line">            <span class="keyword">if</span> (h2 &gt; h) h2 = h;</span><br><span class="line">            y = (h - h2) / <span class="number">2</span>;<span class="comment">//TextBox的相对y = (h-h2)/2 高度居中</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//4.设置子控件的位置和尺寸</span></span><br><span class="line">            C.Location = <span class="keyword">new</span> Point(x, y);</span><br><span class="line">            C.Size = <span class="keyword">new</span> Size(w, h2);</span><br><span class="line">            <span class="comment">//5.为什么不调整高度大小：文本框为单行，高度调节无效。只会随着文字格式的大小变化！</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-控件包装单文件开发"><a href="#2-控件包装单文件开发" class="headerlink" title="2.控件包装单文件开发"></a>2.控件包装单文件开发</h2><blockquote><p><strong>2.包装、复合控件单文件开发</strong><br>（1）定义：每次创建UserControl都会自动给我们创建一个相应的designer.cs布局设计文件，将界面和逻辑分开开发。如何将二者合并到一个文件开发呢？<br>（2）步骤：<br>        - 【手动】创建AfTextBox2普通类 class文件，并手动继承UserControl<br>        - 双击打开AfTextBox2.cs可以进入设计界面，拖放控件。会直接给AfTextBox2.cs内自动添加控件布局（不会分开添加了）<br>        - 手动实现构造函数，初始化调用布局 InitializeComponent()<br>        - 添加逻辑代码和事件、属性<br>（3）好处：以后可以直接将单个控件cs文件复制到别的项目里直接使用，而不用分多个了</p></blockquote><blockquote><p><strong>3.包装控件的自定义属性和事件：和复合控件一样（AfTextBox2为例）</strong><br>（1）添加&#x2F;重写自定义属性 Text、BackColor、Front<br>（2）添加自定义事件 ReturnPressed（回车事件）</p></blockquote><p><strong>（1）AfTextBox2包装控件cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">AfTextBox2</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 自动生成布局代码，直接添加到本文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> TextBox edit;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.edit = <span class="keyword">new</span> System.Windows.Forms.TextBox();</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// edit</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.edit.BorderStyle = System.Windows.Forms.BorderStyle.None;</span><br><span class="line">            <span class="comment">//this.edit.Font = new System.Drawing.Font(&quot;宋体&quot;, 16F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));</span></span><br><span class="line">            <span class="keyword">this</span>.edit.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">106</span>, <span class="number">79</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.Name = <span class="string">&quot;edit&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">263</span>, <span class="number">37</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.TabIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.KeyPress += <span class="keyword">new</span> System.Windows.Forms.KeyPressEventHandler(<span class="keyword">this</span>.OnPress);</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// AfTextBox2</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.BackColor = System.Drawing.Color.White;</span><br><span class="line">            <span class="keyword">this</span>.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;</span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.edit);</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;AfTextBox2&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">524</span>, <span class="number">246</span>);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">this</span>.PerformLayout();</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 手动添加构造函数，初始化布局</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AfTextBox2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加逻辑代码，实现组件自适应</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs levent</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnLayout(levent);</span><br><span class="line">            <span class="comment">//1.获取子控件</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.Controls.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            Control C = <span class="keyword">this</span>.Controls[<span class="number">0</span>];</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//2.获取父窗口参数</span></span><br><span class="line">            Padding p = <span class="keyword">this</span>.Padding;<span class="comment">//父窗口的边距Padding</span></span><br><span class="line">            <span class="built_in">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;<span class="comment">//子控件相对于容器的初始坐标（左上角） </span></span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.Width, h = <span class="keyword">this</span>.Height;</span><br><span class="line">            w -= (p.Left + p.Right);<span class="comment">//TextBox的宽度 = 容器宽度 - 左右边距</span></span><br><span class="line">            x += p.Left;<span class="comment">//TextBox的相对x = p.Left</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//3.计算文本框的高度，使其显示在中间</span></span><br><span class="line">            <span class="comment">//  （1）PreferredSize：获取可以容纳控件的矩形区域的大小。</span></span><br><span class="line">            <span class="comment">//  （2）Size：获取控件的大小</span></span><br><span class="line">            <span class="built_in">int</span> h2 = C.PreferredSize.Height;</span><br><span class="line">            <span class="keyword">if</span> (h2 &gt; h) h2 = h;</span><br><span class="line">            y = (h - h2) / <span class="number">2</span>;<span class="comment">//TextBox的相对y = (h-h2)/2 高度居中</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//4.设置子控件的位置和尺寸</span></span><br><span class="line">            C.Location = <span class="keyword">new</span> Point(x, y);</span><br><span class="line">            C.Size = <span class="keyword">new</span> Size(w, h2);</span><br><span class="line">            <span class="comment">//5.为什么不调整高度大小：文本框为单行，高度调节无效。只会随着文字格式的大小变化！</span></span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 重写自定义属性 Text</span></span><br><span class="line"><span class="comment">         *  Browsable：True则属性在设计界面显示可修改，False则属性在设计界面不显示。默认为True</span></span><br><span class="line"><span class="comment">         *  DesignerSerializationVisibility：设置属性的序列化方式，默认为Visible</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> edit.Text;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                edit.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//重写自定义属性 Color</span></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Color BackColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> edit.BackColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//容器和TextBox的颜色一起整体变化</span></span><br><span class="line">                <span class="keyword">base</span>.BackColor = <span class="keyword">value</span>;</span><br><span class="line">                edit.BackColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 注意：Font的设置有些特殊，需要提供初始的默认值</span></span><br><span class="line"><span class="comment">         * **此处仍未解决，无法修改Font字体**</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Font initFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10f</span>);</span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Content)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Font Font</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> initFont;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.initFont = <span class="keyword">value</span>;</span><br><span class="line">                <span class="keyword">this</span>.edit.Font = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加自定义事件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler ReturnPressed;</span><br><span class="line">        <span class="comment">//TextBox的keyPress -&gt; 触发 ReturnPressed事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnPress</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">char</span> ch = e.KeyChar;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;\r&#x27;</span>)<span class="comment">//如果是回车符号</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//回调ReturnPressed事件</span></span><br><span class="line">                ReturnPressed?.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）Form窗体应用</strong></p><img src="https://img-blog.csdnimg.cn/e1d18980478348a2bc9eccc2e60a94b7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form4</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//包装控件的 ReturnPressed 回车触发事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnterPress</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;正在检索...&quot;</span> + afTextBox21.Font);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-对话框"><a href="#三-对话框" class="headerlink" title="三.对话框"></a>三.对话框</h1><h2 id="1-对话框基本概念"><a href="#1-对话框基本概念" class="headerlink" title="1.对话框基本概念"></a>1.对话框基本概念</h2><blockquote><p><strong>1.对话框</strong><br>（1）构建：对话框本质还是一个Form窗体，只不过以对话框的形式显示。所以对话框的构建参照窗体的设计即可<br>（2）使用：新建一个对话框 MyDiglog ，在点击事件中显示对话框 ShowDialog()<br>        MyDialog dialog &#x3D; new MyDialog(); &#x2F;&#x2F;新建窗体<br>        dialog.ShowDialog(); &#x2F;&#x2F;作为对话框弹出在当前界面。注意如果是Show()则是显示窗体，非对话框<br>        dialog.Dispose(); &#x2F;&#x2F;销毁窗体，释放资源<br>（3）运行流程：<br>        - 在调用ShowDialog方法后，会[阻塞]父窗口进程，不再往下执行。表现为子窗口可以活动，而父窗口不行<br>        - 对话框阻塞直到用户关闭对话框，父窗口进程才继续向下执行<br>        - 执行Dispose方法释放对话框资源<br>（4）对话框属性（和窗体Form属性一样）：<br>        - Text：窗体左上角显示文字<br>        - MaximizeBox：最大化按钮（True显示，Flase不显示）<br>        - MinimizeBox：最小化按钮（True显示，Flase不显示）、<br>        - ShowInTaskBar：是否在任务栏显示<br>        - StartPosition：窗体显示位置 WindowsDefaultLocation窗口默认位置、CenterSceen窗口中央、CenterParent父窗口中央等<br>        - FormBorderStyle：边界样式 Sizable可修改、FixedDialog固定对话框大小、FixedSignle固定窗体<br>（5）对话框返回值与数据传递<br>        - 对话框含有属性 DialogResult<br>                DialogResult.OK ：设置DialogResult为OK，窗体会立即关闭，并返回DialogResult.OK值<br>                DialogResult.Cancel：设置DialogResult为Cancel，窗体会立即关闭，并返回DialogResult.Cancel值<br>        - 数据传递：可以将传递数据组件设置为public，在关闭窗口后Dispose之前调用dialog.xxx来获取属性值</p></blockquote><p><strong>（1）对话框界面设计</strong></p><img src="https://img-blog.csdnimg.cn/93cca8454a854ea0a84520ff27d00e9b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p>**（2）对话框逻辑代码（MyDialog.cs） **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MyDialog</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyDialog</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对话框确认按钮</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnClickOk</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//关闭当前对话框，并返回OK</span></span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.OK;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对话框取消按钮</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnClickCancel</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//关闭当前对话框，并返回Cancel</span></span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.Cancel;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）Form窗体逻辑代码</strong></p><blockquote><p><strong>1.两大功能：</strong></p><ul><li>通过点击按钮，创建并展示对话框</li><li>获取对话框返回值，并显示在主窗体界面上</li></ul></blockquote><img src="https://img-blog.csdnimg.cn/ebcb55bcb4184fcab924cc79893a0fd5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form5</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form5</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//点击按钮，触发对话框展示事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">show_Dialog</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MyDialog dialog = <span class="keyword">new</span> MyDialog(); <span class="comment">//新建窗体</span></span><br><span class="line">            DialogResult res =  dialog.ShowDialog(); <span class="comment">//作为对话框弹出在当前界面</span></span><br><span class="line">            <span class="comment">//阻塞当前进程，直到用户关闭对话框</span></span><br><span class="line">            <span class="keyword">if</span>(res == DialogResult.OK)<span class="comment">//表示点击了确定按钮关闭的窗口</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取数据，显示在父界面</span></span><br><span class="line">                <span class="keyword">this</span>.textPanel.Text += (dialog.dlg_text.Text + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            dialog.Dispose(); <span class="comment">//销毁窗体，释放资源</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>2.快捷操作+默认行为：</strong><br>        - 对话框按钮快捷关闭：按钮上带有一个 DialogResult属性：OK、Cancel等都可以设置。其效果和手写代码是一样的，关闭对话框并返回值<br>        - 对话框的AcceptButton属性：当在对话框点击 回车 时会触发的按钮，默认为None<br>        - 对话框的CancelButton属性：当在对话框点击 ESC 时会触发的按钮，默认为None</p></blockquote><h2 id="2-对话框小练习：字体设置器"><a href="#2-对话框小练习：字体设置器" class="headerlink" title="2.对话框小练习：字体设置器"></a>2.对话框小练习：字体设置器</h2><blockquote><p>要求实现一个文本输入器，可以通过点击按钮弹出字体设置对话框，来选择相应的字体和字号。确认后将主窗口的文本输入变为相应的字体样式。</p></blockquote><p>**（1）主窗口界面设计 **</p><img src="https://img-blog.csdnimg.cn/6c63c4ca67af43438a21ad5331ad991d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）对话框界面设计</strong></p><img src="https://img-blog.csdnimg.cn/cf8b676ec38d47689deca1c66e398243.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_19,color_FFFFFF,t_70,g_se,x_16"><p><strong>（3）对话框逻辑代码StyleDialog.cs</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">StyleDialog</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">StyleDialog</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取选择字体类型 public</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> FontType</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">string</span>)<span class="keyword">this</span>.dlg_wordType.SelectedItem;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.dlg_wordType.SelectedItem = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取选择字体大小 public</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> FontSize</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">int</span>)<span class="keyword">this</span>.dlg_wordSize.Value;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.dlg_wordSize.Value = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//按钮点击事件：返回值</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClickOk</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.OK;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClickCancel</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.Cancel;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（4）主窗体逻辑代码Form1.cs</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置按钮点击事件：弹出对话框，并获取返回值</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClickStyle</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            StyleDialog dlg = <span class="keyword">new</span> StyleDialog();</span><br><span class="line">            DialogResult res =  dlg.ShowDialog();</span><br><span class="line">            <span class="keyword">if</span>(res == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取返回值,设置当前字体样式</span></span><br><span class="line">                <span class="built_in">string</span> fontType = dlg.FontType;</span><br><span class="line">                <span class="built_in">int</span> fontSize = dlg.FontSize;</span><br><span class="line">                <span class="keyword">this</span>.text_panel.Font = <span class="keyword">new</span> Font(fontType, fontSize);</span><br><span class="line">            &#125;</span><br><span class="line">            dlg.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-系统对话框"><a href="#四-系统对话框" class="headerlink" title="四.系统对话框"></a>四.系统对话框</h1><blockquote><p><strong>1.系统对话框：WinForm提供了很多内置的系统对话框，比如文件浏览、保存，颜色、字体选择等。</strong><br>（1）OpenFileDialog : 文件打开对话框<br>        - new OpenFileDialog()：新建对话框<br>        - InitialDirectory：设置打开的初始展示路径<br>        - DefaultExt：获取或设置默认显示的文件扩展名。<br>        - Filter：获取或设置当前文件名筛选器字符串。其格式为 “自定义字符串标签|类型列表”<br>                a.单个文件类型：图片|<em>.jpg,</em>.png,<em>.gif<br>                b.多个文件类型：图片|</em>.jpg,<em>.png,</em>.gif|文本|<em>.txt,</em>.doc|所有|<em>.</em><br>        - FileName：获取或设置对话框中选定的文件名称字符串<br>        - FileNames：获取或设置对话框中所有选定的文件名称字符串列表<br>（2）SaveFileDialog : 文件保存对话框（跟OpenFileDialog差不多）<br>（3）FolderBrowserDialog：文件夹选择对话框<br>        - new FolderBrowserDialog()：新建对话框<br>        - InitialDirectory:    获取或设置打开的初始路径<br>        - SelectedPath：获取或设置选择的文件夹路径<br>（4）ColorDialog：颜色选择对话框<br>（5）FontDialog：字体选择对话框</p></blockquote><h2 id="1-系统对话框功能使用"><a href="#1-系统对话框功能使用" class="headerlink" title="1.系统对话框功能使用"></a>1.系统对话框功能使用</h2><blockquote><p>为了展示系统对话框的功能，此处设计一个文件浏览窗口，能够选择、保存文件或文件夹，并将所选定的文件&#x2F;目录路径名称展示到主界面文本框。</p></blockquote><p><strong>（1）界面设计</strong></p><img src="https://img-blog.csdnimg.cn/ddf714a3ba6644c0a5057e75d828a75d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）Form.cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form6</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form6</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//选择文件按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            OpenFileDialog fileDialog = <span class="keyword">new</span> OpenFileDialog(); <span class="comment">//新建文件对话框</span></span><br><span class="line">            fileDialog.InitialDirectory = <span class="string">&quot;D:\\日常材料\\学习资料\\WinForm\\第十二章 系统对话框\\12.1 系统对话框\\项目源码\\FormApp1201\\FormApp1201&quot;</span>; <span class="comment">//设置初始路径</span></span><br><span class="line">            <span class="comment">//fileDialog.SelectedPath = Path.GetFullPath(&quot;.&quot;); </span></span><br><span class="line">            fileDialog.DefaultExt = <span class="string">&quot;.cs&quot;</span>; <span class="comment">//筛选展示 .cs后缀文件</span></span><br><span class="line">            fileDialog.Filter = <span class="string">&quot;代码|*.cs;*.config&quot;</span>; <span class="comment">//设置文件选择器</span></span><br><span class="line">            <span class="keyword">if</span> (fileDialog.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取并设置文件路径名称到主窗体</span></span><br><span class="line">                <span class="built_in">string</span> fileName = fileDialog.FileName;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = fileName;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//保存文件按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SaveFileDialog dlg = <span class="keyword">new</span> SaveFileDialog();</span><br><span class="line">            dlg.FileName = <span class="string">&quot;新的文本文件&quot;</span>;</span><br><span class="line">            dlg.DefaultExt = <span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">            dlg.Filter = <span class="string">&quot;文本|*.txt;*.doc&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            <span class="keyword">if</span> (dlg.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> fileName = dlg.FileName;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = fileName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//选择文件夹按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FolderBrowserDialog dlg = <span class="keyword">new</span> FolderBrowserDialog();</span><br><span class="line">            dlg.SelectedPath = Path.GetFullPath(<span class="string">&quot;.&quot;</span>);<span class="comment">//返回当前文件夹的绝对路径字符串</span></span><br><span class="line">            <span class="keyword">if</span> (dlg.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> path = dlg.SelectedPath;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = path;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/cca83964afdc48ab97332326c7749a58.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="2-系统对话框练习-图片查看器"><a href="#2-系统对话框练习-图片查看器" class="headerlink" title="2.系统对话框练习-图片查看器"></a>2.系统对话框练习-图片查看器</h2><blockquote><p>设计一个图片查看器窗口，可以在主窗体中选择浏览目录路径，选择后将该目录下的所有图片名称加载到主窗口左侧的列表栏，用户通过点击列表栏的图片名称可以切换显示相应的图片在主窗口右侧的图片展示区。</p></blockquote><p><strong>（1）界面设计</strong></p><blockquote><p>主窗体中用到了一个自定义文本框AfTextBox，可以自由拉伸。同时有一个浏览按钮放置在其右侧，可以打开文件目录浏览窗口。主窗体还包括一个列表框，用于显示图片名称列表；除此之外还有一个图片框，用于展示指定路径图片。</p></blockquote><img src="https://img-blog.csdnimg.cn/1039edaa9f9441208c566fb1528d3c4b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2） 自定义对话框AfTextBox单文件开发</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">AfTextBox</span>:<span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> TextBox edit;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.edit = <span class="keyword">new</span> System.Windows.Forms.TextBox();</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// edit</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.edit.BorderStyle = System.Windows.Forms.BorderStyle.None;</span><br><span class="line">            <span class="keyword">this</span>.edit.Font = <span class="keyword">new</span> System.Drawing.Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">12F</span>, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((<span class="built_in">byte</span>)(<span class="number">134</span>)));</span><br><span class="line">            <span class="keyword">this</span>.edit.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">52</span>, <span class="number">52</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.Name = <span class="string">&quot;edit&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">89</span>, <span class="number">19</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.TabIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.KeyPress += <span class="keyword">new</span> System.Windows.Forms.KeyPressEventHandler(<span class="keyword">this</span>.onTextPressed);</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// AfTextBox</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.BackColor = System.Drawing.Color.White;</span><br><span class="line">            <span class="keyword">this</span>.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;</span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.edit);</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;AfTextBox&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">199</span>, <span class="number">105</span>);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">this</span>.PerformLayout();</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AfTextBox</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnLayout(e);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.Controls.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            Control c = <span class="keyword">this</span>.Controls[<span class="number">0</span>];</span><br><span class="line">     </span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.Width, h = <span class="keyword">this</span>.Height;</span><br><span class="line">            <span class="built_in">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">int</span> left = <span class="keyword">this</span>.Padding.Left, right = <span class="keyword">this</span>.Padding.Right;</span><br><span class="line">            w -= (left + right);</span><br><span class="line">            x += left;</span><br><span class="line">            <span class="comment">//PreferredSize获取控件矩形容器框的大小</span></span><br><span class="line">            <span class="comment">//原因是文本框为单行输入，没法调节高度！但是外部矩形容器可以</span></span><br><span class="line">            <span class="built_in">int</span> h2 = c.PreferredSize.Height;</span><br><span class="line">            <span class="keyword">if</span> (h2 &gt; h) h2 = h;</span><br><span class="line">            y  += (h - h2) / <span class="number">2</span>;</span><br><span class="line">     </span><br><span class="line">            c.Location = <span class="keyword">new</span> Point(x, y);</span><br><span class="line">            c.Size = <span class="keyword">new</span> Size(w, h2);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.edit.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.edit.Text;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Color BackColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.edit.BackColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.edit.BackColor = <span class="keyword">value</span>;</span><br><span class="line">                <span class="comment">//此处是base!!!!不是this!!!</span></span><br><span class="line">                <span class="keyword">base</span>.BackColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Color ForeColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> edit.ForeColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                edit.ForeColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> ReadOnly</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.edit.ReadOnly;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.edit.ReadOnly = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler ReturnPressed;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onTextPressed</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">char</span> ch = e.KeyChar;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ReturnPressed?.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）主窗体Form.cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//浏览按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onScanClick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FolderBrowserDialog dlg = <span class="keyword">new</span> FolderBrowserDialog();</span><br><span class="line">            <span class="keyword">if</span>(dlg.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> path = dlg.SelectedPath;</span><br><span class="line">                <span class="keyword">this</span>.afTextbox.Text = path;</span><br><span class="line">                <span class="comment">// 加载图片列表</span></span><br><span class="line">                ShowPictureList(path);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowPictureList</span>(<span class="params"><span class="built_in">string</span> dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 清空显示</span></span><br><span class="line">            listFile.Items.Clear();</span><br><span class="line">            <span class="comment">// 遍历所有的文件，检查文件名后缀</span></span><br><span class="line">            <span class="built_in">string</span>[] files = Directory.GetFiles(dir);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">string</span> f <span class="keyword">in</span> files)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (f.EndsWith(<span class="string">&quot;.jpg&quot;</span>) || f.EndsWith(<span class="string">&quot;.png&quot;</span>) || f.EndsWith(<span class="string">&quot;.jpeg&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 取得文件名</span></span><br><span class="line">                    PictureListItem item = <span class="keyword">new</span> PictureListItem();</span><br><span class="line">                    item.name = Path.GetFileName(f);</span><br><span class="line">                    item.filePath = f;</span><br><span class="line">                    <span class="comment">//Console.WriteLine(&quot;name:&quot; + f + &quot;,path:&quot; + item.filePath);</span></span><br><span class="line">                    <span class="comment">// 加到列表框显示</span></span><br><span class="line">                    <span class="keyword">this</span>.listFile.Items.Add(item);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 默认打开第一个文件显示（手动SetSelect也会触发IndexChanged事件）</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (listFile.Items.Count &gt; <span class="number">0</span>)</span><br><span class="line">                listFile.SetSelected(<span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listFile_SelectedIndexChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            PictureListItem item = (PictureListItem)listFile.SelectedItem;</span><br><span class="line">            <span class="keyword">if</span> (item == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="comment">//加载图片</span></span><br><span class="line">            pathPic.Load(item.filePath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 文件项</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">PictureListItem</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> filePath;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五-菜单栏和工具栏"><a href="#五-菜单栏和工具栏" class="headerlink" title="五.菜单栏和工具栏"></a>五.菜单栏和工具栏</h1><blockquote><p>1.菜单栏 MenuStrip：窗口顶部停靠菜单栏<br>（1）使用：设计界面可视化设计，可以添加菜单项、下拉框、分割线、文本<br>（2）属性：每个Item都可以设置ID、Text、Image（图标）、点击事件Click<br>2.工具栏 ToolStrip：窗口顶部停靠工具栏，一般位于菜单栏下方（图标栏）<br>（1）使用：设计界面可视化设计，可以添加工具按钮、分割线等。一般窗口上方第一排为菜单栏，第二排为工具栏，二者对应<br>（2）属性：每个Item都可以设置ID、Image（图标）、点击事件Click等<br>（3）开发技巧：工具栏与菜单栏一般具有对应关系，每个菜单都有对应的工具图标按钮，二者的点击回调事件可以共用。在事件中点击下拉箭头-&gt;选择菜单栏设置的事件即可<br>3.右键菜单（上下文菜单）： ContextMenuStrip<br>（1）定义：在窗口不同部位右键显示的菜单栏应该具有不同的选项，一般项目中菜单栏和工具栏可能没有，但是右键菜单是一定具有的！<br>（2）使用：<br>        - 在设计界面添加 ContextMenuStrip上下文菜单，并添加菜单项。但此时仅是对上下文菜单进行了定义和声明，右键还不能显示<br>        - 设置界面或者控件的鼠标点击事件MouseUp&#x2F;MouseDown，在事件中展示菜单ContextMenuStrip.show(展示控件,展示位置)<br>        - 进一步，我们希望在listBox中，右键item的时候显示编辑和删除，而右键空白位置只显示添加，才符合我们的逻辑（不同的逻辑展示不同的右键菜单内容）<br>        - 设置菜单项点击事件</p></blockquote><p><strong>（1）界面设计</strong></p><img src="https://img-blog.csdnimg.cn/a7f515adc47e4248bb68407c98c2f04a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）Form.cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form5</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form5</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//工具栏Item 点击事件</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">void</span> 打开ToolStripMenuItem_Click(<span class="built_in">object</span> sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;点击了打开...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//listBox 列表控件 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listBox1_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//如果是鼠标右键点击了，才触发右键菜单</span></span><br><span class="line">            <span class="keyword">if</span>(e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//IndexFromPoint:返回从指定位置处开始的第一个Item索引</span></span><br><span class="line">                <span class="comment">//e.Location:鼠标点击的位置Point</span></span><br><span class="line">                <span class="built_in">int</span> index = listBox1.IndexFromPoint(e.Location);</span><br><span class="line">                <span class="comment">//如果index&gt;=0，则说明右键了某个Item项而不是空白位置</span></span><br><span class="line">                <span class="keyword">if</span> (index &gt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//要显示/允许选择 编辑/删除项</span></span><br><span class="line">                    listBox1.SetSelected(index, <span class="literal">true</span>);<span class="comment">//选中该项</span></span><br><span class="line">                    Item_Edit.Enabled = <span class="literal">true</span>;<span class="comment">//右键菜单项设置允许点击</span></span><br><span class="line">                    Item_Del.Enabled = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//清空选择，不显示/禁用编辑/删除</span></span><br><span class="line">                    listBox1.ClearSelected();<span class="comment">//清空</span></span><br><span class="line">                    Item_Edit.Enabled = <span class="literal">false</span>;<span class="comment">//禁用</span></span><br><span class="line">                    Item_Del.Enabled = <span class="literal">false</span>;</span><br><span class="line">     </span><br><span class="line">                    <span class="comment">//Item_Edit.Visible = false;//直接不显示该项</span></span><br><span class="line">                    <span class="comment">//Item_Del.Visible = false;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.contextMenu.Show(listBox1, e.Location);<span class="comment">//显示右键菜单</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//右键菜单项[添加] 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Item_Add_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;上下文菜单:选择了添加...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六-列表视图控件-ListView"><a href="#六-列表视图控件-ListView" class="headerlink" title="六.列表视图控件 ListView"></a>六.列表视图控件 ListView</h1><h2 id="1-ListView基本使用"><a href="#1-ListView基本使用" class="headerlink" title="1.ListView基本使用"></a>1.ListView基本使用</h2><blockquote><p>1.列表控件ListView：升级版的ListBox，其显示类似于windows的文件夹视图<br>（1）特点：列表显示模式可以切换（详情、大图标、小图标），可以多字段显示，可以设置图标、标签可以编辑，每列可以排序，可以自定义设计<br>（2）控件基本属性：View（显示模式）、Columns（集合，列头名称）、Items（集合，列表中的项）、Items.SubTetms（集合，列表中每项的子项-其他列显示的数据）、LabelEdit（是否允许用户就地编辑标签）、LargeImageList（大图标列表）、SmallImageList（小图标列表）、Sorting（排序方式）等<br>（3）简单使用步骤：<br>        - 在设计界面将ListView拖入，并设置Dock为占满（接下来可以在设计界面进行可视化设计，也可以通过代码来添加设计数据项）<br>        - 代码方式设计ListView（推荐）:<br>                a.设置显示方式<br>                b.设置列名<br>                c.添加数据项<br>                d.设置每个数据项的子项数据<br>        - 推荐使用代码方式添加数据的原因：很多时候我们并不知道要遍历的项有多少，所以不能提前设计好。只能通过代码方式动态添加</p></blockquote><p><strong>（1）ListView基本用法展示</strong> </p><blockquote><p>界面设计非常简单，就是拖入一个ListView控件，并设置Dock为Fill填充满父容器，无其他控件，这里就不再展示设计界面了。基本用法主要展示如何在ListView中使用代码方式添加列名、数据项等。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化ListView控件</span></span><br><span class="line">            InitializeListView();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.设置显示模式为详情模式：显示图标+主项+所有子项</span></span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            <span class="comment">// 设置整行选中（选中某一项的时候选中整行，而不只是主项）</span></span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//2.设置列名Add(列名,宽度[像素值],对齐方式)</span></span><br><span class="line">            <span class="comment">// 宽度值-2表示自动调整宽度</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;文件名&quot;</span>,<span class="number">-2</span>,HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时期&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//3.添加数据项 ListViewItem(数据名称,图标下标)</span></span><br><span class="line">            ListViewItem item1 = <span class="keyword">new</span> ListViewItem(<span class="string">&quot;Java学习指南.pdf&quot;</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">//4.设置子项数据(对应每列的数据)</span></span><br><span class="line">            item1.SubItems.Add(<span class="string">&quot;2020-2-20 12:10&quot;</span>);</span><br><span class="line">            item1.SubItems.Add(<span class="string">&quot;PDF&quot;</span>);</span><br><span class="line">            item1.SubItems.Add(<span class="string">&quot;192 KB&quot;</span>);</span><br><span class="line">            listView1.Items.Add(item1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/ce9968f28aac4cb4af489bbb7fd4b635.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）ListView基本使用小练习：本地文件目录列表展示</strong></p><blockquote><p><strong>2.ListView控件高级使用：本地文件可视化</strong><br>（1）在设计界面，将ListView控件拖入，并设置Dock为填充Fill<br>（2）添加数据项图标的图片资源到Resources<br>（3）在代码中初始化ListView基本配置，包括列名、显示模式、图标列表等。 InitListView()</p></blockquote><img src="https://img-blog.csdnimg.cn/9cfa5f7676af467cae628c8a9339967a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form2</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化ListView控件</span></span><br><span class="line">            InitListView();</span><br><span class="line">            <span class="comment">//加载添加文件数据项</span></span><br><span class="line">            LoadDir(<span class="keyword">new</span> DirectoryInfo(<span class="string">&quot;D:\\&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//设置显示模式为详情模式</span></span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            <span class="comment">//设置整行选中</span></span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//设置列名</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;名称&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时间&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//创建ImageList（提供一些方法，来管理一些列图片资源的列表类），并添加2个小图标</span></span><br><span class="line">            ImageList imgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            imgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">16</span>, <span class="number">16</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_file);<span class="comment">//事先添加到Resources的图标</span></span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_folder);</span><br><span class="line">            <span class="comment">// 设置 SmallImageList 用于显示小图标（适用于小图标、详情、列表模式显示图标）</span></span><br><span class="line">            <span class="comment">// 设置 LargeImageList 用于显示大图标（适用于大图标模式显示图标）</span></span><br><span class="line">            listView1.SmallImageList = imgList;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.遍历本地资源，获取文件或目录</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadDir</span>(<span class="params">DirectoryInfo dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 加载优化：BeginUpdate()+EndUpdate()，该方法指明内部的程序全部执行完后才进行一次总更新，而不是每Add一项就更新一次。（避免频繁刷新）</span></span><br><span class="line">            <span class="comment">// listView1.BeginUpdate();</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 获取[子目录]列表</span></span><br><span class="line">            DirectoryInfo[] subDirs = dir.GetDirectories();</span><br><span class="line">            <span class="keyword">foreach</span> (DirectoryInfo d <span class="keyword">in</span> subDirs)</span><br><span class="line">            &#123;           </span><br><span class="line">                <span class="comment">//如果该目录是隐藏文件，则跳过</span></span><br><span class="line">                <span class="keyword">if</span> ((d.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="comment">//否则就添加到ListVie中显示（目录名称，最新修改时间，数据项类型，文件大小）</span></span><br><span class="line">                AddListItem(d.Name, d.LastWriteTime, <span class="string">&quot;文件夹&quot;</span>, <span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取[子文件]列表</span></span><br><span class="line">            FileInfo[] subFiles = dir.GetFiles();</span><br><span class="line">            <span class="keyword">foreach</span> (FileInfo f <span class="keyword">in</span> subFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//如果该文件是隐藏文件，则跳过</span></span><br><span class="line">                <span class="keyword">if</span> ((f.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">string</span> ext = f.Extension.ToUpper(); <span class="comment">// 获取文件拓展名后缀（.zip、.png、.doc等）</span></span><br><span class="line">                <span class="comment">//否则就添加到ListVie中显示（文件名称，最新修改时间，文件后缀类型，文件大小）</span></span><br><span class="line">                AddListItem(f.Name, f.LastWriteTime, ext, f.Length);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// listView1.EndUpdate();</span></span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3，将文件和目录按照不同类型添加到ListView数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params"><span class="built_in">string</span> label, DateTime time, <span class="built_in">string</span> type, <span class="built_in">long</span> size</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断是文件还是文件夹，使用不同的图标</span></span><br><span class="line">            <span class="built_in">int</span> imageIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!type.Equals(<span class="string">&quot;文件夹&quot;</span>)) imageIndex = <span class="number">1</span>;</span><br><span class="line">     </span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(label, imageIndex);<span class="comment">//imageIndex会去listView下的SmallImageList找图标</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 添加子项 - 时间</span></span><br><span class="line">            item.SubItems.Add(time.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>));</span><br><span class="line">            <span class="comment">// 添加子项 - 类型</span></span><br><span class="line">            item.SubItems.Add(type);</span><br><span class="line">            <span class="comment">// 添加子项 - 文件大小</span></span><br><span class="line">            <span class="built_in">string</span> sizeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (size &lt; <span class="number">0</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span>; <span class="comment">// 文件夹不显示大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span> + size;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000</span> + <span class="string">&quot; KB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000000</span> + <span class="string">&quot; MB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sizeStr = size / <span class="number">1000000000</span> + <span class="string">&quot; GB&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(sizeStr);</span><br><span class="line">     </span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ListView模式切换"><a href="#2-ListView模式切换" class="headerlink" title="2.ListView模式切换"></a>2.ListView模式切换</h2><blockquote><p>3.ListView控件：模式切换（切换详情、列表、大图标、小图标模式显示）<br>（1）设计要求：在上节内容文件目录展示案例的基础上，实现右键菜单切换显示模式<br>（2）开发流程：<br>        - 在设计界面，拖入ListView控件，并设置Dock为充满Fill<br>        - 在代码中初始化ListView控件列名、[大图标列表]、[小图标列表]等（因为大图标模式和小图标模式需要使用两套图标）<br>        - 加载遍历文件和目录，并添加数据项Item<br>        - 在设计界面拖入ContextMenu控件，并设置ListView的MouseUp点击事件，显示右键菜单<br>        - 右键菜单实现切换模式功能</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">            InitListView();</span><br><span class="line">            <span class="comment">//2.载入文件和目录</span></span><br><span class="line">            LoadDir(<span class="keyword">new</span> DirectoryInfo(<span class="string">&quot;D:\\&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//设置列名</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;名称&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时间&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//*创建SmallImageList 小图标列表（用于Detail、SmallIcon等模式里显示小图标）</span></span><br><span class="line">            ImageList smallImgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            smallImgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">16</span>, <span class="number">16</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            smallImgList.Images.Add(Properties.Resources.Icon_file);</span><br><span class="line">            smallImgList.Images.Add(Properties.Resources.Icon_folder);</span><br><span class="line">            listView1.SmallImageList = smallImgList;</span><br><span class="line">            <span class="comment">//*创建LargeImageList 大图标列表（用于LargeIcon模式里显示大图标）</span></span><br><span class="line">            ImageList largeImgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            largeImgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">64</span>, <span class="number">64</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            largeImgList.Images.Add(Properties.Resources.Icon_file2);</span><br><span class="line">            largeImgList.Images.Add(Properties.Resources.Icon_folder2);</span><br><span class="line">            listView1.LargeImageList = largeImgList;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.加载数据项：遍历文件和目录，按照不同类型添加数据项Item及其子项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadDir</span>(<span class="params">DirectoryInfo dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           listView1.BeginUpdate();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 获取[子目录]列表</span></span><br><span class="line">            DirectoryInfo[] subDirs = dir.GetDirectories();</span><br><span class="line">            <span class="keyword">foreach</span> (DirectoryInfo d <span class="keyword">in</span> subDirs)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((d.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                AddListItem(d.Name, d.LastWriteTime, <span class="string">&quot;文件夹&quot;</span>, <span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取[子文件]列表</span></span><br><span class="line">            FileInfo[] subFiles = dir.GetFiles();</span><br><span class="line">            <span class="keyword">foreach</span> (FileInfo f <span class="keyword">in</span> subFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((f.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">string</span> ext = f.Extension.ToUpper();<span class="comment">//文件后缀名</span></span><br><span class="line">                AddListItem(f.Name, f.LastWriteTime, ext, f.Length);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">           listView1.EndUpdate();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3，将文件和目录按照不同类型添加到ListView数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params"><span class="built_in">string</span> label, DateTime time, <span class="built_in">string</span> type, <span class="built_in">long</span> size</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断是文件还是文件夹，使用不同的图标</span></span><br><span class="line">            <span class="built_in">int</span> imageIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!type.Equals(<span class="string">&quot;文件夹&quot;</span>)) imageIndex = <span class="number">1</span>;</span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(label, imageIndex);</span><br><span class="line">            <span class="comment">// 添加子项 - 时间</span></span><br><span class="line">            item.SubItems.Add(time.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>));</span><br><span class="line">            <span class="comment">// 添加子项 - 类型</span></span><br><span class="line">            item.SubItems.Add(type);</span><br><span class="line">            <span class="comment">// 添加子项 - 文件大小</span></span><br><span class="line">            <span class="built_in">string</span> sizeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (size &lt; <span class="number">0</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span>; <span class="comment">// 文件夹不显示大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span> + size;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000</span> + <span class="string">&quot; KB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000000</span> + <span class="string">&quot; MB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sizeStr = size / <span class="number">1000000000</span> + <span class="string">&quot; GB&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(sizeStr);</span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.ListView添加MouseUp点击事件：显示右键菜单（菜单中默认选中当前的显示模式）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                View view = listView1.View;</span><br><span class="line">                <span class="comment">//根据显示模式，设置右键菜单的选中项</span></span><br><span class="line">                menuDetail_Item.Checked = (view == View.Details);</span><br><span class="line">                menuList_Item.Checked = (view == View.List);</span><br><span class="line">                menuLarge_Item.Checked = (view == View.LargeIcon);</span><br><span class="line">                menuSmall_Item.Checked = (view == View.SmallIcon);</span><br><span class="line">                <span class="comment">//显示右键菜单(在鼠标右键位置e.Location)</span></span><br><span class="line">                contextMenuStrip.Show(listView1, e.Location);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.设置右键菜单的点击事件：切换显示模式</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuDetail_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuList_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.List;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuLarge_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.LargeIcon;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuSmall_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.SmallIcon;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/4edbc379dfb7438b85ddbbdf350d4740.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/f7175d415dfb4b61a05844db3246cfdb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="3-ListView数据项列排序"><a href="#3-ListView数据项列排序" class="headerlink" title="3.ListView数据项列排序"></a>3.ListView数据项列排序</h2><blockquote><p><strong>4.ListView的列排序实现：点击每一列可以实现升序&#x2F;降序排序(此处只以第0列为例)</strong><br>（1）编码步骤（在文件目录展示案例的基础上）：<br>        - 添加箭头图标资源，表示升序和降序标识<br>        - 将图标加入SmallImageList，其中Images.Add (key, image ) 表示添加一个图像image，并关联一个key值。后面可以根据key值获取此图片。<br>        - 添加数据项Tag：每个ListView可以关联一个Tag，一般为一个对象。用于排序的时候便于直接使用对象做比较<br>        - 定义比较器MyListItemSorter，实现绑定Tag对象的自定义排序<br>        - 添加列的点击事件：ColumnClick 切换升序&#x2F;降序</p></blockquote><p><strong>（1）自定义Tag对象，封装信息</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 每个列表项关联的Tag数据</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyListItemTag</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> type = <span class="number">0</span>; <span class="comment">//类型：文件夹0, 文件1 </span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> path;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> DateTime time;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">long</span> size = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ext; <span class="comment">// 显示文件后缀/文件夹</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyListItemTag</span>(<span class="params"><span class="built_in">int</span> type, <span class="built_in">string</span> path, <span class="built_in">string</span> name, DateTime time, <span class="built_in">long</span> size, <span class="built_in">string</span> ext</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.type = type;</span><br><span class="line">            <span class="keyword">this</span>.path = path;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.time = time;</span><br><span class="line">            <span class="keyword">this</span>.size = size;</span><br><span class="line">            <span class="keyword">this</span>.ext = ext;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）自定义比较器，实现对象排序（传入两个Tag对象）</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//继承IComparer接口，实现对象比较方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyListItemSorter</span> : <span class="title">IComparer</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> asc = <span class="literal">true</span>;<span class="comment">//是否升序排序</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyListItemSorter</span>(<span class="params"><span class="built_in">bool</span> asc</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.asc = asc;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Compare</span>(<span class="params"><span class="built_in">object</span> x, <span class="built_in">object</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按列排序时，传入的是两个ListViewItem对象</span></span><br><span class="line">            ListViewItem item1 = (ListViewItem)x;</span><br><span class="line">            ListViewItem item2 = (ListViewItem)y;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// Tag: 每一项关联的数据</span></span><br><span class="line">            MyListItemTag tag1 = (MyListItemTag)item1.Tag;</span><br><span class="line">            MyListItemTag tag2 = (MyListItemTag)item2.Tag;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 目录在前, 文件在后</span></span><br><span class="line">            <span class="keyword">if</span> (tag1.type != tag2.type)</span><br><span class="line">                <span class="keyword">return</span> CompareInt(<span class="literal">true</span>, tag1.type, tag2.type);</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 按名字比较</span></span><br><span class="line">            <span class="keyword">return</span> CompareStringIgnoreCase(asc, tag1.name, tag2.name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个 Bool 值的比较</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareBool</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">bool</span> x, <span class="built_in">bool</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> xx = x ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">int</span> yy = y ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> CompareInt(asc, xx, yy);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个 Int 值的比较</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareInt</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">int</span> x, <span class="built_in">int</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (asc)</span><br><span class="line">                <span class="keyword">return</span> x - y;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> y - x;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个String值的比较</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareString</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">string</span> x, <span class="built_in">string</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (asc)</span><br><span class="line">                <span class="keyword">return</span> x.CompareTo(y);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> y.CompareTo(x);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个String值的比较 （不区分大小写)</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareStringIgnoreCase</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">string</span> x, <span class="built_in">string</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> CompareString(asc, x.ToLower(), y.ToLower());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**（3）主窗体Form.cs逻辑代码 **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form4</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 当前默认排序：升序</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> asc = <span class="literal">true</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line">            InitListView();</span><br><span class="line">            LoadDir(<span class="keyword">new</span> DirectoryInfo(<span class="string">&quot;D:\\&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//设置列名</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;名称&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时间&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//创建smallImageList，添加小图标资源</span></span><br><span class="line">            ImageList imgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            imgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">16</span>, <span class="number">16</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_file);</span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_folder);</span><br><span class="line">            listView1.SmallImageList = imgList;</span><br><span class="line">            <span class="comment">// 点击列标题时，指示排序的图标</span></span><br><span class="line">            <span class="comment">// 把图标资源加到 SmallImageList 里，供列标题头部显示</span></span><br><span class="line">            imgList.Images.Add(<span class="string">&quot;Sort_ASC&quot;</span>, Properties.Resources.up);</span><br><span class="line">            imgList.Images.Add(<span class="string">&quot;Sort_DESC&quot;</span>, Properties.Resources.down);</span><br><span class="line">            <span class="comment">//ListView首列图标显示为 key=&quot;&quot;Sort_ASC&quot;</span></span><br><span class="line">            listView1.Columns[<span class="number">0</span>].ImageKey = <span class="string">&quot;Sort_ASC&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.遍历本地资源，获取文件或目录</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadDir</span>(<span class="params">DirectoryInfo dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.BeginUpdate();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 获取[子目录]列表</span></span><br><span class="line">            DirectoryInfo[] subDirs = dir.GetDirectories();</span><br><span class="line">            <span class="keyword">foreach</span> (DirectoryInfo d <span class="keyword">in</span> subDirs)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((d.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="comment">//**将数据打包为Tag对象进行添加</span></span><br><span class="line">                MyListItemTag tag = <span class="keyword">new</span> MyListItemTag(<span class="number">0</span>,d.FullName,d.Name,d.LastWriteTime,<span class="number">-1</span>,<span class="string">&quot;文件夹&quot;</span>);</span><br><span class="line">                AddListItem(tag);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取[子文件]列表</span></span><br><span class="line">            FileInfo[] subFiles = dir.GetFiles();</span><br><span class="line">            <span class="keyword">foreach</span> (FileInfo f <span class="keyword">in</span> subFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((f.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="comment">//**将数据打包为Tag对象进行添加</span></span><br><span class="line">                MyListItemTag tag = <span class="keyword">new</span> MyListItemTag(<span class="number">1</span>, f.FullName, f.Name, f.LastWriteTime, f.Length, f.Extension.ToUpper());</span><br><span class="line">                AddListItem(tag);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">            listView1.EndUpdate();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3，将文件和目录按照不同类型添加到ListView数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params">MyListItemTag tag</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断是文件还是文件夹，使用不同的图标</span></span><br><span class="line">            <span class="built_in">int</span> imageIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!tag.type.Equals(<span class="string">&quot;文件夹&quot;</span>)) imageIndex = <span class="number">1</span>;</span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(tag.name, imageIndex);</span><br><span class="line">            <span class="comment">// **Item关联Tag数据对象（方便我们从Item中获取数据、进行排序等）</span></span><br><span class="line">            item.Tag = tag;</span><br><span class="line">            <span class="comment">// 事件子项</span></span><br><span class="line">            item.SubItems.Add(tag.time.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>));</span><br><span class="line">            <span class="comment">// 后缀名称子项</span></span><br><span class="line">            item.SubItems.Add(tag.ext);</span><br><span class="line">            <span class="comment">// 大小子项</span></span><br><span class="line">            <span class="built_in">long</span> size = tag.size;</span><br><span class="line">            <span class="built_in">string</span> sizeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (size &lt; <span class="number">0</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span>; <span class="comment">// 文件夹不显示大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span> + size;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000</span> + <span class="string">&quot; KB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000000</span> + <span class="string">&quot; MB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sizeStr = size / <span class="number">1000000000</span> + <span class="string">&quot; GB&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(sizeStr);</span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.ListView的列点击事件：切换升序/降序（只针对第0列）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_ColumnClick</span>(<span class="params"><span class="built_in">object</span> sender, ColumnClickEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.Column == <span class="number">0</span>)<span class="comment">//如果点击的是第0列，才触发事件</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//切换当前排序</span></span><br><span class="line">                <span class="keyword">this</span>.asc = !asc;</span><br><span class="line">                <span class="keyword">if</span> (asc)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//设置排序器</span></span><br><span class="line">                    listView1.ListViewItemSorter = <span class="keyword">new</span> MyListItemSorter(<span class="literal">true</span>);</span><br><span class="line">                    listView1.Sort();<span class="comment">//排序</span></span><br><span class="line">                    listView1.Columns[<span class="number">0</span>].ImageKey = <span class="string">&quot;Sort_ASC&quot;</span>;<span class="comment">//切换图标</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    listView1.ListViewItemSorter = <span class="keyword">new</span> MyListItemSorter(<span class="literal">false</span>);</span><br><span class="line">                    listView1.Sort();</span><br><span class="line">                    listView1.Columns[<span class="number">0</span>].ImageKey = <span class="string">&quot;Sort_DESC&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/cadf3f5be4554314919bfe792aa9651b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="4-ListView标签编辑"><a href="#4-ListView标签编辑" class="headerlink" title="4.ListView标签编辑"></a>4.ListView标签编辑</h2><blockquote><p><strong>5.ListView：编辑标签</strong><br>（1）设计ListView显示，并添加数据项<br>（2）在设计界面或代码中设置LabelEdit&#x3D;True，表示允许对数据项标签进行编辑<br>（3）标签编辑的启动方式：<br>        - 在窗口中双击标签，启动编辑<br>        - 使用代码方式，在事件中使用 ListViewItem.BeginEdit() 来启动编辑（比如右键菜单-重命名 事件）：<br>                a.添加右键菜单，新建菜单项-重命名<br>                b.ListView添加MouseUp鼠标点击事件，显示右键菜单，获取右键点中的项<br>                c.右键菜单项添加鼠标点击事件，点击右键菜单-重命名，开启该项的标签编辑<br>                d.编辑验证：在编辑之后&#x2F;之前，进行标签内容的验证（比如不能重复名称，不能包含某些字符等），在ListView中添加事件BeforeLabelEdit&#x2F;AfterLabelEdit，开启对每个数据项的编辑验证（自动在编辑前后触发）<br>（4）<strong>注意：</strong><br>        - 只能对主项进行编辑<br>        - 标签编辑默认不会修改源数据（比如文件显示不会修改真实文件名称），要想同步修改可以设置事件</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form5</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 当前鼠标事件点中的项</span></span><br><span class="line">        <span class="keyword">private</span> ListViewItem mouseClickItem;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form5</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">     </span><br><span class="line">            InitListView();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 初始化添加几项数据</span></span><br><span class="line">            AddListItem(<span class="keyword">new</span> Student(<span class="number">20201001</span>, <span class="string">&quot;shao&quot;</span>, <span class="string">&quot;13810012xxx&quot;</span>));</span><br><span class="line">            AddListItem(<span class="keyword">new</span> Student(<span class="number">20201002</span>, <span class="string">&quot;wang&quot;</span>, <span class="string">&quot;18799122xxx&quot;</span>));</span><br><span class="line">            AddListItem(<span class="keyword">new</span> Student(<span class="number">20201003</span>, <span class="string">&quot;li&quot;</span>, <span class="string">&quot;13490912xxx&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.设计ListView显示，并添加数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//**设置LabelEdit，允许对数据项标签进行编辑</span></span><br><span class="line">            listView1.LabelEdit = <span class="literal">true</span>;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 设置列名</span></span><br><span class="line">            <span class="comment">// 宽度值-2表示自动调整宽度</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;姓名&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;学号&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;手机号&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params">Student stu</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(stu.Name, <span class="number">0</span>);</span><br><span class="line">            item.Tag = stu;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(stu.Id + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            item.SubItems.Add(stu.Phone);</span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.右键显示右键菜单</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取 右键点击的ListViewItem数据项</span></span><br><span class="line">                ListViewItem item = listView1.GetItemAt(e.X, e.Y);</span><br><span class="line">                <span class="keyword">this</span>.mouseClickItem = item;</span><br><span class="line">                <span class="comment">//判断是否可以重命名该项</span></span><br><span class="line">                renameMenu_Item.Enabled = (item != <span class="literal">null</span>);</span><br><span class="line">                <span class="comment">//展示该位置/该项 的 右键菜单</span></span><br><span class="line">                contextMenuStrip1.Show(listView1, e.Location);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3.右键菜单-重命名 点击事件，开启该项的标签编辑</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">renameMenu_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.mouseClickItem.BeginEdit();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.开启列表项的编辑 自动触发事件BeforeLabelEdit</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_BeforeLabelEdit</span>(<span class="params"><span class="built_in">object</span> sender, LabelEditEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//5.结束列表项的编辑 自动触发事件AfterLabelEdit（事件发送器 sender，事件处理对象 e）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_AfterLabelEdit</span>(<span class="params"><span class="built_in">object</span> sender, LabelEditEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取ListView当前编辑项的下标Index</span></span><br><span class="line">            <span class="built_in">int</span> index = e.Item;</span><br><span class="line">            <span class="comment">//获取新编辑的文本</span></span><br><span class="line">            <span class="built_in">string</span> label = e.Label;</span><br><span class="line">            <span class="comment">// 检查名称是否冲突</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; listView1.Items.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (index == i) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (label == listView1.Items[i].Text)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//CancelEdit=True 取消新编辑的内容，恢复原始内容</span></span><br><span class="line">                    e.CancelEdit = <span class="literal">true</span>;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;名字重复&quot;</span>, <span class="string">&quot;提示&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 否则就没有重复名称，接受新的更改</span></span><br><span class="line">            e.CancelEdit = <span class="literal">false</span>; </span><br><span class="line">            <span class="comment">// 同步更新后台数据（对象为引用数据）</span></span><br><span class="line">            Student stu = (Student)listView1.Items[index].Tag;</span><br><span class="line">            stu.Name = label;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/68ab866061144e87b40f61735f4be94d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="七-表格视图控件-DataGridView"><a href="#七-表格视图控件-DataGridView" class="headerlink" title="七.表格视图控件 DataGridView"></a>七.表格视图控件 DataGridView</h1><h2 id="1-表格视图基本用法"><a href="#1-表格视图基本用法" class="headerlink" title="1.表格视图基本用法"></a>1.表格视图基本用法</h2><blockquote><p><strong>1.表格视图 DataGridView 基础: 以单元格表格的形式展示数据和操作</strong><br>（1）在设计界面，拖入DataGridView控件，并设置Dock为填满Fill<br>（2）在设计界面或代码中，设置列名Columns<br>（3）在设计界面或代码中添加数据项，推荐代码添加（动态拓展）<br> <strong>注意：</strong>表格视图的每一单元格应都是可编辑的！</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form6</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form6</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化表格视图布局</span></span><br><span class="line">            InitGridView();</span><br><span class="line">            <span class="comment">//初始化添加数据</span></span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202101</span>, <span class="string">&quot;wx&quot;</span>, <span class="string">&quot;18264886xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202102</span>, <span class="string">&quot;my&quot;</span>, <span class="string">&quot;13012459xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202103</span>, <span class="string">&quot;tom&quot;</span>, <span class="string">&quot;19857138xxx&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.初始化列数、列名</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitGridView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//设置表格显示列数</span></span><br><span class="line">            <span class="keyword">this</span>.dataGridView1.ColumnCount = <span class="number">4</span>;</span><br><span class="line">            <span class="comment">//设置每列的列头名称</span></span><br><span class="line">            dataGridView1.Columns[<span class="number">0</span>].Name = <span class="string">&quot;学号&quot;</span>;</span><br><span class="line">            dataGridView1.Columns[<span class="number">1</span>].Name = <span class="string">&quot;姓名&quot;</span>;</span><br><span class="line">            dataGridView1.Columns[<span class="number">2</span>].Name = <span class="string">&quot;性别&quot;</span>;</span><br><span class="line">            dataGridView1.Columns[<span class="number">3</span>].Name = <span class="string">&quot;手机号&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.添加表格数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddRows</span>(<span class="params">Student stu</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//设置Object数组！代表一行数据</span></span><br><span class="line">            Object[] row =</span><br><span class="line">            &#123;</span><br><span class="line">                stu.Id,stu.Name,<span class="string">&quot;男&quot;</span>,stu.Phone</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">//添加数据行</span></span><br><span class="line">            dataGridView1.Rows.Add(row);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/aea645f491744dc9b926f59164b0548d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="2-表格视图高级用法"><a href="#2-表格视图高级用法" class="headerlink" title="2.表格视图高级用法"></a>2.表格视图高级用法</h2><blockquote><p><strong>2.表格视图 DataGridView 基本操作：属性、增删改查</strong><br>（1）DataGridView 常用属性：<br>        - [杂项] Columns : 设置列相关的列数、列名等<br>        - [外观] ColumnHeadersVisible : 设置列头是否可见（默认为True）<br>        - [外观] RowHeadersVisible : 设置行的头是否可见（默认为True）<br>        - [行为] MultiSelect ： 是否允许多项选择（默认为True）<br>        - [行为] AllowUserToxxx:是否允许用户对单元格进行 增删改查等修改<br>        - [行为] 列还支持点击 升序&#x2F;降序 排序（自动已实现）<br>（2）DataGridView 常用操作：<br>        - 添加一行数据：grid.Rows.Add(Object[]) 或 界面手动添加（需要触发事件，持久化到数据库）<br>        - 获取行数据：<br>                a.索引方式：grid[col,row] 注意是列索引在前，行索引在后<br>                b.函数方式：grid.Rows[i].Cells[j]<br>        - 删除行数据：<br>                a.单行删除：grid.Rows.RemoveAt(int i):删除第i行数据<br>                b.多行删除（ctrl多选）：grid.Rows.Remove(DataGridViewRow row):删除指定的row对象<br><strong>3.表格视图 DataGridView 单元格编辑</strong><br>（1）实现方式：<br>        - 界面直接编辑：DataGridView默认每个单元格都是可以直接编辑的，编辑修改后按下回车即可将修改显示到界面中。<br>        - 添加事件触发编辑：也可以通过添加右键菜单或双击事件来进行编辑,或者弹出对话框编辑。<br>（2）相关属性：ReadOnly<br>        - 设计界面：Columns中，设置某列为ReadOnly&#x3D;True只读，不能被编辑修改；ReadOnly&#x3D;False可编辑<br>        - 代码中：grid.Columns[0].ReadOnly &#x3D; True;<br>（3）单元格编辑事件步骤：<br>        - 设置状态：设置ReadOnly &#x3D; False 可编辑状态（默认为False）<br>        - 启动编辑：界面中点击单元格选中，再点击一次，则启动进入编辑状态<br>        - 编辑后的验证事件：当编辑完成按下回车时，触发 [焦点] CellValidating 单元格验证时发生，CellValidating 执行完成后 触发CellValidated 单元格验证后发生</p></blockquote><p><strong>（1）案例界面设计</strong></p><blockquote><p>设计一个案例，实现对表格视图的基本操作（增删改查），以及编辑事件验证。</p></blockquote><img src="https://img-blog.csdnimg.cn/36157a14d1214736b4fd2d62f2dde7d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）Form.cs主窗体逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form7</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form7</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            InitGridView();</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202101</span>, <span class="string">&quot;wx&quot;</span>, <span class="string">&quot;18264886xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202102</span>, <span class="string">&quot;my&quot;</span>, <span class="string">&quot;13012459xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202103</span>, <span class="string">&quot;tom&quot;</span>, <span class="string">&quot;19857138xxx&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.初始化列数、列名</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitGridView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.grid.ColumnCount = <span class="number">4</span>;</span><br><span class="line">            grid.Columns[<span class="number">0</span>].Name = <span class="string">&quot;学号&quot;</span>;</span><br><span class="line">            grid.Columns[<span class="number">1</span>].Name = <span class="string">&quot;姓名&quot;</span>;</span><br><span class="line">            grid.Columns[<span class="number">2</span>].Name = <span class="string">&quot;性别&quot;</span>;</span><br><span class="line">            grid.Columns[<span class="number">3</span>].Name = <span class="string">&quot;手机号&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.添加表格数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddRows</span>(<span class="params">Student stu</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Object[] row =</span><br><span class="line">            &#123;</span><br><span class="line">                stu.Id,stu.Name,<span class="string">&quot;男&quot;</span>,stu.Phone</span><br><span class="line">            &#125;;</span><br><span class="line">            grid.Rows.Add(row);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3.添加按钮点击事件：添加一行数据</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btn_add_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Object[] row = <span class="keyword">new</span> <span class="built_in">object</span>[<span class="number">4</span>];</span><br><span class="line">            row[<span class="number">0</span>] = <span class="number">202104</span>;</span><br><span class="line">            row[<span class="number">1</span>] = <span class="string">&quot;testUser&quot;</span>;</span><br><span class="line">            row[<span class="number">2</span>] = <span class="string">&quot;女&quot;</span>;</span><br><span class="line">            row[<span class="number">3</span>] = <span class="string">&quot;1928373838&quot;</span>;</span><br><span class="line">            grid.Rows.Add(row);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.获取数据按钮点击事件：获取行数据</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btn_get_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取第0行数据</span></span><br><span class="line">            Object id = grid[<span class="number">0</span>, <span class="number">0</span>].Value;</span><br><span class="line">            Object name = grid[<span class="number">1</span>, <span class="number">0</span>].Value;</span><br><span class="line">            Object sex = grid.Rows[<span class="number">0</span>].Cells[<span class="number">2</span>].Value;</span><br><span class="line">            Object phone = grid.Rows[<span class="number">0</span>].Cells[<span class="number">3</span>].Value;</span><br><span class="line">            <span class="comment">//显示在MessageBox</span></span><br><span class="line">            MessageBox.Show(id + <span class="string">&quot;,&quot;</span> + name + <span class="string">&quot;,&quot;</span> + sex + <span class="string">&quot;,&quot;</span> + phone);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//5.删除按钮点击事件：删除选中行</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btn_del_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//单行删除 删除第0行</span></span><br><span class="line">            <span class="comment">//grid.Rows.RemoveAt(0);</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//多行删除 删除[选中]的所有行</span></span><br><span class="line">            <span class="keyword">foreach</span>(DataGridViewRow row <span class="keyword">in</span> grid.SelectedRows)</span><br><span class="line">            &#123;</span><br><span class="line">                grid.Rows.Remove(row);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//6.编辑验证：单元格验证事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grid_CellValidating</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellValidatingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//e.ColumnIndex 表示 编辑单元格的列索引</span></span><br><span class="line">            <span class="keyword">if</span> (e.ColumnIndex == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//验证姓名的编辑</span></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.ColumnIndex == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//验证性别的编辑</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(e.ColumnIndex == <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//验证手机号的编辑（手机号必须是11位合法数字）</span></span><br><span class="line">                <span class="built_in">string</span> str = e.FormattedValue.ToString();</span><br><span class="line">                <span class="keyword">if</span>(str.Length != <span class="number">11</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;手机号必须为11位&quot;</span>, <span class="string">&quot;Error&quot;</span>);</span><br><span class="line">                    e.Cancel = <span class="literal">true</span>;<span class="comment">//取消编辑事件</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">foreach</span>(<span class="built_in">char</span> ch <span class="keyword">in</span> str)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        MessageBox.Show(<span class="string">&quot;手机号必须为数字&quot;</span>, <span class="string">&quot;Error&quot;</span>);</span><br><span class="line">                        e.Cancel = <span class="literal">true</span>;<span class="comment">//取消编辑事件</span></span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//7.单元格验证完成后执行的事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grid_CellValidated</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/bd9767091c07482fa95af82ecf486132.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="八-综合练习：学生信息管理系统"><a href="#八-综合练习：学生信息管理系统" class="headerlink" title="八.综合练习：学生信息管理系统"></a>八.综合练习：学生信息管理系统</h1><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_40772692/article/details/121901587?spm=1001.2014.3001.5502">WinForm（二） WinForm进阶与复杂控件使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
            <tag> 控件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#开发WinForm之一(入门与基本控件使用)</title>
      <link href="/posts/1279388026.html"/>
      <url>/posts/1279388026.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-Winform入门"><a href="#一-Winform入门" class="headerlink" title="一.Winform入门"></a>一.Winform入门</h1><p><strong>WinForm 是 Windows Form 的简称，是基于 .NET Framework 平台的客户端（PC软件）开发技术，一般使用 C# 编程。</strong></p><blockquote><p>在VS2019中，C# WinForm 编程需要创建「Windows窗体应用程序」项目。Windows 窗体应用程序是 C# 语言中的一个重要应用，也是 C# 语言最常见的应用。<br>使用 C# 语言编写的 Windows 应用程序与 Windows 操作系统的界面类似，每个界面都是由窗体构成的，并且能通过鼠标单击、键盘输入等操作完成相应的功能。<br>WinForm支持可视化设计，简单易上手，并可以接入大量的第三方UI库或自定义控件，给桌面应用开发带来了无限可能。</p></blockquote><h2 id="1-WinForm项目结构"><a href="#1-WinForm项目结构" class="headerlink" title="1.WinForm项目结构"></a>1.WinForm项目结构</h2><p>（1）引用：包括所有的系统库文件的引用依赖<br>（2）App.config：当前项目的配置文件<br>（3）Form1.cs：当前窗体的事件逻辑源码</p><ul><li>Form1.Designer.cs：当前窗体的控件布局源码</li><li>Form1.resx：当前窗体的资源文件（图片、图标、资源等）</li><li>注意：<br>a. Form1.cs和Form1.Designer.cs都定义了Form1类，该类使用了Partial关键词声明，其定义的类可以在多个地方被定义，最后编译的时候会被当作一个类来处理。因此两个文件各司其职，最后合并为一个类编译。<br>b. 要手动实现自定义窗体，可以添加自己的类，然后继承Form类即可</li></ul><p>（4）Program.cs：当前项目程序的主入口Main，启动项目，运行初始窗口</p><img src="https://img-blog.csdnimg.cn/1f6172cf966545a39ed0c66a87505dcb.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Program.cs 入口程序解读</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment">//1.[STAThread]  Attributes语法，修饰Main方法。示应用程序的默认线程模型是单线程单元 (STA)</span></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//2.开启窗口的消息循环，初始化并启动Form1窗口</span></span><br><span class="line">            Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-窗口设计与控件布局"><a href="#2-窗口设计与控件布局" class="headerlink" title="2.窗口设计与控件布局"></a>2.窗口设计与控件布局</h2><p><strong>一、窗体控件布局文件：</strong><br>（1）操作：在设计界面拖拽控件，可以完成界面布局（控件大小、名称、类型、样式等）<br>（2）原理：设计界面自动关联Form1.Designer.cs文件，在InitializeComponent()方法中会自动生成相关代码<br>（3）设计原则：</p><ul><li>Form1.Designer.cs文件：窗体控件布局文件，一般【不需要我们修改】，只要通过设计界面代码就会自动生成。</li><li>Form1.cs文件：窗体事件逻辑代码的实现，一般【需要我们手动书写】，包括触发事件、回调、数据交互、跳转等等</li></ul><p><strong>二、手动添加控件：不通过设计界面，有两种方式：</strong></p><blockquote><p>（1）在Form1.Designer.cs中添加：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> System.Windows.Forms.Button btn_design;<span class="comment">//声明控件</span></span><br><span class="line"> <span class="comment">//默认的控件初始化方法</span></span><br><span class="line"> InitializeComponent():&#123;</span><br><span class="line">     <span class="keyword">this</span>.btn_design = <span class="keyword">new</span> System.Windows.Forms.Button();<span class="comment">//定义控件</span></span><br><span class="line">     <span class="keyword">this</span>.btn_design.Text = <span class="string">&quot;自定义控件&quot;</span>;<span class="comment">//设置Text属性</span></span><br><span class="line">     <span class="keyword">this</span>.btn_design.Location = <span class="keyword">new</span> Point(<span class="number">40</span>,<span class="number">40</span>);<span class="comment">//设置布局位置 Point(x,y)</span></span><br><span class="line">     <span class="keyword">this</span>.btn_design.Size = <span class="keyword">new</span> Size(<span class="number">100</span>,<span class="number">40</span>);<span class="comment">//设置尺寸大小 Size(width,height)</span></span><br><span class="line">     <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.btn_design);<span class="comment">//注册控件到窗体</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>（2）在Form1.cs中添加：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Button btn_design;<span class="comment">//声明控件</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//先调用Designer.cs中的控件初始化方法</span></span><br><span class="line">    InitializeComponent();</span><br><span class="line">    <span class="keyword">this</span>.btn_design = <span class="keyword">new</span> System.Windows.Forms.Button();<span class="comment">//定义控件</span></span><br><span class="line">    <span class="keyword">this</span>.btn_design.Text = <span class="string">&quot;自定义控件&quot;</span>;<span class="comment">//设置Text属性</span></span><br><span class="line">    <span class="keyword">this</span>.btn_design.Location = <span class="keyword">new</span> Point(<span class="number">40</span>,<span class="number">40</span>);<span class="comment">//设置布局位置 Point(x,y)</span></span><br><span class="line">    <span class="keyword">this</span>.btn_design.Size = <span class="keyword">new</span> Size(<span class="number">100</span>,<span class="number">40</span>);<span class="comment">//设置尺寸大小 Size(width,height)</span></span><br><span class="line">    <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.btn_design);<span class="comment">//注册控件到窗体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>（3）注意：</p></blockquote><ol><li>一般我们都使用拖拽添加控件，当然也有特殊情况需要我们手动添加（比如自定义控件）</li><li>窗体GUI中，左上角为原点(0,0)，竖直向下为y轴，水平向右为x轴（宽度表示x轴上长度，高度表示y轴上长度），单位为像素。</li></ol><h2 id="窗口事件"><a href="#窗口事件" class="headerlink" title="窗口事件"></a>窗口事件</h2><p><strong>一、WinForm 自动添加事件处理：</strong><br>（1）操作：在设计界面-控件属性-闪电符号（事件）-添加事件，就会在Form1.cs中自动生成该控件相应方法名称的事件触发函数<br>（2） MessageBox.Show()：显示弹出消息提示框<br>（3）GUI界面下Console.WriteLine不显示，需要使用调试模式</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 4.WinForm事件处理</span></span><br><span class="line"><span class="comment">     *  （1）操作：在设计界面-控件属性-闪电符号（事件）-添加事件，就会自动生成相应方法名称的事件触发函数</span></span><br><span class="line"><span class="comment">     *  （2） MessageBox：显示消息提示框</span></span><br><span class="line"><span class="comment">     *  （3）GUI界面下Console.WriteLine不显示，需要使用调试模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//Button的Click点击事件（自动添加）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showMessage</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/6e19fe7d8fff44ca9197dc8f349330c4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_18,color_FFFFFF,t_70,g_se,x_16"><p><strong>二、手动添加事件处理（以Btn_design为例）：</strong></p><blockquote><p>（1）步骤：</p></blockquote><ul><li>添加按钮控件到布局</li><li>书写事件处理函数，必须符合 void function_name(object param1,EventArgs e){}的形式</li><li>添加注册事件，this.Btn_design.Click +&#x3D; new EventHandler(this.showTip);</li></ul><blockquote><p>（2）注意：事件处理机制用到了委托和事件的C#基础，有时间可以看一下</p></blockquote><p>下一步的学习请前往 WindowsFormApp_demo1（实现一个显示本地时间的APP）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 5.手动添加事件处理（以Btn_design为例）</span></span><br><span class="line"><span class="comment">     *  （1）步骤：</span></span><br><span class="line"><span class="comment">     *      - 添加按钮控件到布局</span></span><br><span class="line"><span class="comment">     *      - 书写事件处理函数，必须符合 void function_name(object param1,EventArgs e)&#123;&#125;的形式</span></span><br><span class="line"><span class="comment">     *      - 添加注册事件，this.Btn_design.Click += new EventHandler(this.showTip);</span></span><br><span class="line"><span class="comment">     *  （2）注意：事件处理机制用到了委托和事件的C#基础，有时间可以看一下</span></span><br><span class="line"><span class="comment">     *  下一步的学习请前往 WindowsFormApp_demo1（实现一个显示时间的APP）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//2.1 注册Click事件为手动添加的函数</span></span><br><span class="line">            <span class="keyword">this</span>.Btn_design.Click += <span class="keyword">new</span> EventHandler(<span class="keyword">this</span>.showTip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.Button的Click点击事件（手动添加）</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showTip</span>(<span class="params">Object sender,EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;手动添加!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/90094321f20041e98fa1f44c666dcb7e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="时间显示器小练习"><a href="#时间显示器小练习" class="headerlink" title="时间显示器小练习"></a>时间显示器小练习</h2><p><strong>设计一个能获取本地时间并显示在文本框的时间查看器，设计思路就是：</strong></p><ul><li>1.在UI设计界面添加一个按钮Button和一个用来显示时间的文本框TextBox</li><li>2.给按钮Button添加点击事件，在事件中获取系统时间，并赋值给TextBox显示</li></ul><blockquote><p>（1）界面设计 </p></blockquote><img src="https://img-blog.csdnimg.cn/cbe1b914c604458a8e3e3ba5527682c9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p>（2）逻辑代码</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//点击事件：获取当前时间赋值给TextBox</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowTime</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> time = DateTime.Now.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.Time_filed.Text = time;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-WinForm布局开发"><a href="#二-WinForm布局开发" class="headerlink" title="二.WinForm布局开发"></a>二.WinForm布局开发</h1><p><strong>常见的WinForm 自动界面布局（设计界面拖拽布局）：</strong></p><blockquote><p><strong>（1）操作：</strong>拖拽控件，放置在UI设计界面上布局<br><strong>（2）技巧：</strong>通过ctrl+多个控件选定，可以在上方工具栏进行细节的对齐微调，比如居中对齐、左对齐等。<br><strong>（3）本质：</strong>每次拖拽添加一个布局控件，就会在窗口相应的Designer.cs设计布局代码文件中的InitializeComponent()方法中自动生成布局代码（比如Location、Size等），来实现布局。<br><strong>（4）存在的问题：</strong>自动布局虽然方便灵活，但是当窗口大小拉伸改变时，布局控件不能实现自动适应，仍会保持原大小，因此自动布局只适用于窗口大小不变的情况</p></blockquote><img src="https://img-blog.csdnimg.cn/3de1a7b7a7d6495da28b3f60518cd52a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="1-手动布局解决自适应问题"><a href="#1-手动布局解决自适应问题" class="headerlink" title="1. 手动布局解决自适应问题"></a>1. 手动布局解决自适应问题</h2><p><strong>WinForm界面手动布局（并解决自适应问题）:</strong></p><blockquote><p>（1）步骤：</p></blockquote><ul><li>通过设计界面拖拽&#x2F;手动注册组件的方式，初始化初始界面布局（此时属于自动布局）</li><li>在Form.cs逻辑代码中重写Form父类的OnLayout方法，在方法内实现手动布局。OnLayout方法会在窗口大小变化时自动被回调调用，来重新设置组件的位置大小等属性实现自适应。<br>a. 调用父类的OnLayout()，不是必须的。<br>b. 获取当前窗口大小 CilentSize(仅客户区，不含标题栏)<br>c. 计算和设置每一个控件新的的大小和位置，实现动态布局</li></ul><blockquote><p>（2）注意：</p></blockquote><ul><li>Size属性指窗口大小（包括工具栏），ClientSize指客户区大小（不包含工具栏）</li><li>本质：OnLayout方法会在窗口大小变化时自动被调用，来设置组件的位置实现自适应<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//重写父类的OnLayout方法，实现手动布局自适应</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs levent</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.调用父类的OnLayout()，不是必须的</span></span><br><span class="line">            <span class="keyword">base</span>.OnLayout(levent);</span><br><span class="line">            <span class="comment">//2.获取当前客户窗口大小 ClientSize</span></span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.ClientSize.Width;</span><br><span class="line">            <span class="built_in">int</span> h = <span class="keyword">this</span>.ClientSize.Height;</span><br><span class="line">            <span class="comment">//3.计算并设置每一个控件的大小和位置</span></span><br><span class="line">            <span class="built_in">int</span> yoff = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">            yoff = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">this</span>.text_box.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, yoff);<span class="comment">//坐标(0,4)</span></span><br><span class="line">            <span class="keyword">this</span>.text_box.Size = <span class="keyword">new</span> Size(w - <span class="number">80</span>, <span class="number">30</span>);<span class="comment">//尺寸(w-80,30)</span></span><br><span class="line">            <span class="keyword">this</span>.btn_click.Location = <span class="keyword">new</span> Point(w - <span class="number">80</span>, yoff);<span class="comment">//坐标(w-80,4)</span></span><br><span class="line">            <span class="keyword">this</span>.btn_click.Size = <span class="keyword">new</span> Size(<span class="number">80</span>, <span class="number">30</span>);<span class="comment">//尺寸(80,30)</span></span><br><span class="line"> </span><br><span class="line">            yoff += <span class="number">30</span>;<span class="comment">//第一行的高度</span></span><br><span class="line">            yoff += <span class="number">4</span>;<span class="comment">//间隔</span></span><br><span class="line">            <span class="keyword">this</span>.panel1.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, yoff);</span><br><span class="line">            <span class="keyword">this</span>.panel1.Size = <span class="keyword">new</span> Size(w, h - yoff - <span class="number">4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><img src="https://img-blog.csdnimg.cn/e27715d3bbbd40cfa4103fb9a05a8c98.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="2-WinForm布局属性"><a href="#2-WinForm布局属性" class="headerlink" title="2.WinForm布局属性"></a>2.WinForm布局属性</h2><p><strong>WinForm布局属性（控件与布局相关的属性，设计界面可见）:</strong></p><blockquote><p>（1）Anchor：固定、锚定（无论窗口怎么变化，控件的相对位置都不变）</p></blockquote><ul><li>含义：固定控件与父窗口的【上下左右边距】不变，实现控件的锚定</li><li>左上角固定：选定 Top,Left（默认）</li><li>顶部固定，水平拉伸：选定 Top,Left,Right</li><li>居中固定：None（取消所有）</li><li><strong>注意：</strong>Anchor效果的好坏取决于控件的初始位置，因为控件的初始位置决定了控件的边距！所以要让控件固定右上角，就要初始设计时就放在右上角！</li></ul><blockquote><p>（2）Dock：停靠属性，将控件停靠在父窗口的一侧或者中央</p></blockquote><ul><li>Top：上，控件停靠在容器上侧，宽度填满容器，高度可以调节</li><li>Bottom：下，控件停靠在容器下侧，宽度填满容器，高度可以调节</li><li>Left：左，控件停靠在容器左侧，高度填满容器，宽度可以调节</li><li>Right：右，控件停靠在容器右侧，高度填满容器，宽度可以调节</li><li>Fill，中，控件填满容器中间剩余部分（所以说与控件添加顺序有关）</li><li>None，无，不使用Dock属性</li><li><strong>注意：</strong><br>  a. 容器之间可以嵌套，使用布局属性（容器就是存放组件的，比如Panel）<br>  b. Dock属性与Anchor属性不能同时使用<br>  c. Dock属性不是固定边距了，就是相对位置填充</li></ul><img src="https://img-blog.csdnimg.cn/ef3d7140e1af44c8b816179fa734e3f1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/7bc6d1da4a8c488798b0cc97379ec311.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><h2 id="3-WinForm布局器"><a href="#3-WinForm布局器" class="headerlink" title="3.WinForm布局器"></a>3.WinForm布局器</h2><p><strong>布局器 LayoutEngine:</strong></p><blockquote><p>（1）含义：布局器就是容器内部组件的默认排列方式，所有的容器都带有一个默认的布局器</p></blockquote><blockquote><p>（2）自定义控件如何加入设计界面：</p></blockquote><ul><li>工具 -&gt; 选项 -&gt; Windows窗体设计器 -&gt; 常规 -&gt; 自动填充工具箱 -&gt; True</li><li>添加自定义的控件类源码到项目下</li><li>生成&#x2F;重新生成结局方案 F7</li><li>重新打开设计界面，在工具箱就可以看到自己的控件</li></ul><blockquote><p>（3）系统提供的布局器-FlowLayoutPanel（流式布局）：</p></blockquote><ul><li>含义：普通的Panel面板容器控件，使用了FlowLayout流式布局，即所有内部组件按照顺序从左到右从上到下依次排列</li><li>FlowLayoutPanel也可以使用Anchor、Dock等属性，因为他也是窗体容器内的一个组件</li><li>控件的选择技巧：多个控件叠加到一起时，可以右键最上层控件，来进行重叠控件的选择<blockquote><p>（4）系统提供的布局器-TableLayoutPanel（表格布局）：</p></blockquote></li><li>含义：普通的Panel面板容器，使用了TableLayout表格布局，即所有内部组件可以放置到不同的表格中（每个表格只能放置一个控件）</li><li>TableLayoutPanel也可以使用Anchor、Dock等属性，因为他也是窗体容器内的一个组件。搭配布局与布局属性，可以实现很多不同的布局效果。</li><li>删除&#x2F;添加行、列：右键表格Panel，可以添加、删除行&#x2F;列</li><li>调整表格大小：表格属性Columns可以通过绝对值、百分比、自动调整等方式来调整单元格的大小<br>  a. 绝对：固定像素值大小<br>  b. 百分比：除去绝对大小后，单元格占剩余大小的百分比<br>  c. 自动调整：根据内部控件的大小生成</li><li>跨行&#x2F;列控件：在控件的ColumnSpan&#x2F;RowSpan调整控件可以跨行&#x2F;跨列布局</li><li>**注意： **TableLayoutPanel 控件每个单元格只能包含一个子控件。<blockquote><p>（5）系统提供的布局工具-默认布局：默认布局可以通过控件拖拽放置，并可以使用Anchor、Dock来调整<br>（6）自定义布局器：用户可以自己设计实现布局器，这属于WinForm高级的内容，后面学习。</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/f795c6a396de4214a0cb84f3349468b9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_19,color_FFFFFF,t_70,g_se,x_16"><h1 id="三-WinForm常用控件"><a href="#三-WinForm常用控件" class="headerlink" title="三.WinForm常用控件"></a>三.WinForm常用控件</h1><p><strong>Winform 组件的使用:</strong></p><blockquote><p>（1）TextBox：输入文本框</p></blockquote><ul><li>常用属性：尺寸Size、单行&#x2F;多行Multiline、密码输入PasswordChar、只读ReadOnly、显示&#x2F;获取文本Text等</li><li>常用事件：KeyPress按下按键（常用于输出完成点击回车，box.Text取输入值，事件e.keyChar取按下哪个键）</li></ul><blockquote><p>（2）CheckBox：复选框</p></blockquote><ul><li>常用属性：尺寸Size、显示文本Text、Checked是否勾选</li><li>常用事件：Click点击事件、CheckedChanged勾选状态改变事件</li></ul><blockquote><p>（3）ComboBox：下拉列表（只能单选）</p></blockquote><ul><li>常用属性：<br>  a. 添加数据项：设计器编辑添加（属性-&gt;数据-&gt;Items，一行表示一个数据项）、程序手工添加（comboBox.Items.Add(“some”);）<br>  b. 其他设置：Size尺寸、Text提示文本等</li><li>常用事件：<br>  a. 获取选中的项：SelectedItem（选中项的值）、SelectedIndex（选中项的索引，-1表示未选中）<br>  b. 选项改变事件：SelectedIndexChanged</li><li>注意：Item可以添加字符串，也可以添加任意object类型（比如自定义对象），对象会以object.toString显示<blockquote><p>（4）ListBox：列表框（展示数据、可单选&#x2F;多选）</p></blockquote></li><li>常用属性：SelectionMode（单选&#x2F;多选模式）<br>  a. 单选模式获取选项：SelectedItem&#x2F;SelectedIndex（选中项的值&#x2F;索引）<br>  b. 多选模式获取选项：SelectedIndices&#x2F;SelectedItems（选中项的索引集合&#x2F;值集合）<br>  c. 添加数据项：设计器编辑添加（属性-&gt;数据-&gt;Items）、程序手工添加（listBox.Items.Add(“some”);）</li><li>常用事件：SelectedIndexChanged（选项改变）</li><li>注意：Item可以添加字符串，也可以添加任意object类型（比如自定义对象），对象会以object.toString显示<blockquote><p>（5）练习：学生信息编辑器实例（本代码）</p></blockquote></li></ul><p><strong>界面展示:</strong></p><img src="https://img-blog.csdnimg.cn/da51f2f5322743398a11ba74a80438b0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_18,color_FFFFFF,t_70,g_se,x_16"><p><strong>实体类 Student（封装信息）</strong></p><p><strong>C# 类的属性与字段:</strong></p><blockquote><p>（1）字段：字段是类的成员变量，用于类内特征的数据存储（静态） 比如private int Id;</p></blockquote><blockquote><p>（2）属性：属性是对字段特征的动态描述，用于向外界提供数据，本质上就是get、set方法。</p></blockquote><ul><li>完整属性用法：<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> sdu_name;<span class="comment">//声明字段</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> StudentName&#123;<span class="comment">//声明属性</span></span><br><span class="line">      <span class="keyword">get</span>&#123; <span class="keyword">return</span> sdu_name; &#125;</span><br><span class="line">      <span class="keyword">set</span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(<span class="keyword">value</span>==<span class="literal">null</span>)sdu_name = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">         sdu_name = <span class="keyword">value</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>get访问器：get访问器必须包含return语句，返回字段‘realValue’。用于获取数据，如果没有get则字段为只写的</li><li>set访问器：set访问器接受它的输入参数–value，并把它赋给字段，value是隐式参数。用于设置数据，如果没有set则字段为只读的<blockquote><p>（3）使用方式：直接使用Class.StudentName来获取和设置数据，就像是直接使用公开的属性一样</p></blockquote></li></ul><blockquote><p>（4）自动属性：简化字段和属性的关系</p></blockquote><ul><li>用法：public 数据类型 属性名{ get; set; }</li><li>*原理：c# 允许只声明属性而不声明后备字段，编译器会创建隐藏的后备字段。并且自动挂接到get,set访问器上。<blockquote><p>（5）<strong>注意：</strong></p></blockquote></li><li>属性也可以不与字段关联，可以当作函数进行复杂计算，比较自由灵活</li><li>属性也可不用显示声明相应的字段，直接用于存贮数据。（自动属性）</li><li>也可以通定义其他set、get函数来实现访问private字段的功能<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//属性访问器</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> SduId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> SduName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> SduSex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> SduPhone</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span>; <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"><span class="built_in">int</span> sduId, <span class="built_in">string</span> sduName, <span class="built_in">bool</span> sduSex, <span class="built_in">string</span> sduPhone</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SduId = sduId;</span><br><span class="line">            SduName = sduName;</span><br><span class="line">            SduSex = sduSex;</span><br><span class="line">            SduPhone = sduPhone;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>逻辑事件代码Form.cs:</strong><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form4</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化数据</span></span><br><span class="line">            LoadData();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 保存按钮触发事件-保存学生信息到本地文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">save_student</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Student student = <span class="keyword">new</span> Student();</span><br><span class="line">            student.SduId =Convert.ToInt32(sdu_Id.Text.Trim()); <span class="comment">//Convert格式转换</span></span><br><span class="line">            student.SduName = sdu_Name.Text.Trim();</span><br><span class="line">            student.SduSex = (sdu_sex.SelectedIndex == <span class="number">1</span>);</span><br><span class="line">            student.SduPhone = sdu_phone.Text.Trim();</span><br><span class="line">            <span class="comment">//以Json格式保存到本地文件</span></span><br><span class="line">            <span class="built_in">string</span> JsonStr = JsonConvert.SerializeObject(student, Formatting.Indented);</span><br><span class="line">            AfTextFile.Write(<span class="string">&quot;student.txt&quot;</span>, JsonStr,AfTextFile.UTF8);</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//读取文件，加载数据</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> JsonStr = AfTextFile.Read(<span class="string">&quot;student.txt&quot;</span>, AfTextFile.UTF8);</span><br><span class="line">            <span class="keyword">if</span> (JsonStr == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">            Student student = JsonConvert.DeserializeObject&lt;Student&gt;(JsonStr);</span><br><span class="line">            sdu_Id.Text = Convert.ToString(student.SduId);</span><br><span class="line">            sdu_Name.Text = student.SduName;</span><br><span class="line">            sdu_sex.SelectedIndex = student.SduSex?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">            sdu_phone.Text = student.SduPhone;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="图片框与项目资源"><a href="#图片框与项目资源" class="headerlink" title="图片框与项目资源"></a>图片框与项目资源</h1><p><strong>图片框与资源:</strong></p><blockquote><p>（1）添加资源来源：</p></blockquote><ul><li>本地文件 ： 本地资源路径，比如”D\Resources\123.jpg”（注意使用Windows路径格式）</li><li>项目资源文件：Properties&#x2F;Resources.resx（项目资源文件夹下）<br>  a. 如何添加项目资源文件：双击Properties&#x2F;Resources.resx-&gt;添加资源-&gt;添加现有文件-&gt;选择本地图片-&gt;重命名（规范化，以后使用时直接调用名字使用资源）<br>  b. 能添加什么类型的资源：字符串、文本文档、图片、视频、音频等<br>  c. 原理：Resources.resx将添加的资源整合到了项目exe当中，因此就算删除源文件也不影响项目运行。在调用资源时，是通过自动生成的方法来获取资源。<br>  d. 优点：将资源统一到项目中来，并且可以通过规范化的命名直接调用资源。<br>  e. 使用：通过 Properties.Resources.资源名称; 来直接调用你的资源，方便快捷</li><li>网络资源：比如”<a href="http://baidu/image/meinv.jpg&quot;">http://baidu/image/meinv.jpg&quot;</a></li></ul><blockquote><p>（2）图片资源加载类：</p></blockquote><ul><li>C# 提供了Image抽象类，作为所有图片资源的总称</li><li>C# 提供了Image抽象类的具体实现类 Bitmap（位图、像素图），来具体加载读取图像。<br>  a. 比如Bitmap img &#x3D; new Bitmap(“D\Resources\123.jpg”);<br>  b. 比如Bitmap img &#x3D; Properties.Resources.img_Conv;</li></ul><blockquote><p>（3）图片框控件：PictureBox</p></blockquote><ul><li>Size、Location属性：尺寸、位置</li><li>Image属性：图片资源（可以通过本地&#x2F;项目资源文件导入）</li><li>SizeMode属性：图片的适应模式（StretchImage拉伸图片和图片框相同尺寸、Zoom缩放等）</li><li>ErrorImage、InitialImage属性：加载失败、加载图片显示之前所显示的图片</li></ul><blockquote><p>（4）图片框控件可视化配置：在设计里拖动PictureBox并配置属性即可。</p></blockquote><blockquote><p>（5）图片框代码手动配置：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Bitmap img = Properties.Resources.img_Conv; <span class="comment">//读取图片资源</span></span><br><span class="line">pictureBox.Image = img;<span class="comment">//手动设置图片框控件 Image来源</span></span><br><span class="line">pictureBox.SizeMode = PictureBoxSizeMode.Zoom;<span class="comment">//手动设置图片格式</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">**添加资源**</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdnimg.cn/cac31a6a17684aa0b51d0a7dd0c04db1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">**图片框控件展示**</span><br><span class="line">&gt;界面设计就是简单的放置了一个PictureBox控件，没有过多的设计。图片来源的设置使用代码方式，原因是在以后开发中图片往往不是固定的，需要动态变化，因此使用代码方式动态设置图片来源是比较推荐的。</span><br><span class="line">```c<span class="meta">#</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form2</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//初始化所有组件</span></span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化PictureBox控件-图片资源</span></span><br><span class="line">            Bitmap img = Properties.Resources.img_Conv;</span><br><span class="line">            pictureBox.Image = img;</span><br><span class="line">            pictureBox.SizeMode = PictureBoxSizeMode.Zoom;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/1b5a51b0d89c4c018b7ebe3cc20afe6d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_40772692/article/details/121865401">WinForm（一） WinForm入门与基本控件使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
            <tag> 控件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#上位机系列之二（使用C#写第一个程序）</title>
      <link href="/posts/1801299827.html"/>
      <url>/posts/1801299827.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、新建程序项目工程"><a href="#一、新建程序项目工程" class="headerlink" title="一、新建程序项目工程"></a>一、新建程序项目工程</h1><ol><li><p>首先选择新建Windows窗体应用(.NET Framework)，然后选择项目保存位置，填写项目名称，这里因为我们不需要用git进行版本管理，所以不用新建GIT存储库；</p></li><li><p>框架是指.net框架，4以及4以下的.NET框架可以在xp上运行，4以上可以在win7&#x2F;8&#x2F;10上运行，鉴于当前大多数操作系统都是win7或win10，选择4.5版本。</p></li></ol><img src="https://s2.51cto.com/images/blog/202106/28/a90862a0d4873dbbab622a2411143913.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><h1 id="二、相应窗体介绍和内部代码分析"><a href="#二、相应窗体介绍和内部代码分析" class="headerlink" title="二、相应窗体介绍和内部代码分析"></a>二、相应窗体介绍和内部代码分析</h1><img src="https://s2.51cto.com/images/blog/202106/28/fe3167f4742f22e0cc7e4e9c9cd3b1be.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><ul><li>这里我们双击窗体界面，这也是VS的特性，双击一个控件，就会进入对应代码文件部分，这些代码全由VS在生成项目时自动生成，下面进行详细的解释：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*filename：Form1.cs*/</span></span><br><span class="line"><span class="comment">//使用命名空间</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户项目工程自定义命名空间HelloWorld</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form</span></span><br><span class="line">    <span class="comment">//partial关键字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//与类同名的构造方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">　　　　　<span class="comment">//用户自定义方法，窗体加载时由Form对象调用</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p><strong>命名空间（namespace）：</strong>在C#中用命名空间将很多类的属性及其方法进行封装供调用，类似C语言中将变量和函数封装成一个个.h文件，调用的时候只需要#include “filepath + filename”就可以使用，比如刚开始时用关键字using声明了一些所需要的系统命名空间（line1-10）;然后采用关键字namespace来自定义一个用户工程所需的命名空间HelloWorld，在我们定义的这个命名空间里就可以定义一些类和方法来进行下一步的实现；</p></li><li><p><strong>类（class）：</strong>C#是一门面向对象的编程语言，所以最基本的就是类和对象，对象的特征是具有属性（C语言中称为变量）和方法（C语言中称为函数），然后我们定义一个类来描述这个对象的特征，注意：这个时候定义的类不是真实存在的，所以不会分配内存空间，当我们用所定义的这个类去创建一个类的对象，这个对象是真实存在的，它会占用内存空间，比如在这个工程中定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form；</p></li><li><p><strong>方法：</strong>前面已经说过，在面向对象编程中是没有变量和函数的，所有的函数都被封装在类中，属于对象的方法，最基本的是类的构造方法，该方法与类名同名，在用类创建一个具体对象时自动调用，不可缺少，比如Form1( )；另外一种是自己定义的用户方法，比如该类中的Form1_Load（）方法，就是在初始化窗口时，通过具体对象Form调用：Form.Form1_Load( )；</p></li><li><p><strong>访问修饰符：</strong>用来控制类、属性、方法的访问权限，常用有5个，默认私有，不能被外部访问；<br>私有的private，公共的public，受保护的protected，内部的internal，受保护内部的protect internal；</p></li></ol><blockquote><p>这里有一个重点，在定义Form1类的时候含有一个关键字partial，这里就不得不说C#语言设计一个重要的特性了，能作为大多数人开发上位机的首选，C#有一个特性就是设计的时候界面与后台分离，但是类名相同，首先看一下工程文件结构：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/919a3688cad1a40f65ceae24689bab55.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><p>可以看到，Form1.cs文件下面包含了另一个Form1.Designer.cs文件，再打开Form1.Designer.cs这个文件，是不是很惊奇，和前面一模一样，再次定义了一个命名空间HelloWorld和Form1类，这个部分类中定义了我们使用的控件、事件委托以及如Dispose方法等。<br>因为这里面的代码都是自动生成的，因此设计成了一个部分类。<br>最关键的一点，这里类也是用partial关键字修饰的，可以看到，Partial是局部类型的意思，允许我们将一个类、结构或接口分成几个部分，分别实现在几个不同的.cs文件中，用partial定义的类可以在多个地方被定义，最后C#编译器编译时会将这些类当作一个类来处理；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*@filename：Form1.Designer.cs */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> System.ComponentModel.IContainer components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;disposing&quot;&gt;</span>如果应释放托管资源，为 true；否则为 false。<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (disposing &amp;&amp; (components != <span class="literal">null</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                components.Dispose();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">base</span>.Dispose(disposing);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Windows 窗体设计器生成的代码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要修改</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 使用代码编辑器修改此方法的内容。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// Form1</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF(<span class="number">6F</span>, <span class="number">12F</span>);</span><br><span class="line">            <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">418</span>, <span class="number">331</span>);</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**Main: **一切程序都有入口主函数main，C#也是如此，在Program.cs文件中定义了Program类，该类中拥有主函数main( )， 在main函数中，第三行代码是一切的开始，调用Form1类的构造函数，创建一个Form对象，一切由此开始，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* @filename： Program.cs */</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            Application.Run(<span class="keyword">new</span> Form1());　　<span class="comment">//调用Form1类的构造函数，创建一个Form对象，一切由此开始</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>再来解释一下最后三个文件：第一个文件主要是应用程序发布时的一些属性设置，版本号，属性，版权之类的，其余两个文件是工具自动生成的一些设置文件，不再过多赘述；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* @filename：Assemblylnfo.cs*/</span></span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.CompilerServices;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有关程序集的一般信息由以下</span></span><br><span class="line"><span class="comment">// 控制。更改这些特性值可修改</span></span><br><span class="line"><span class="comment">// 与程序集关联的信息。</span></span><br><span class="line">[<span class="meta">assembly: AssemblyTitle(<span class="meta-string">&quot;HelloWorld&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyDescription(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyConfiguration(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCompany(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyProduct(<span class="meta-string">&quot;HelloWorld&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCopyright(<span class="meta-string">&quot;Copyright ©  2018&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyTrademark(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCulture(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 ComVisible 设置为 false 会使此程序集中的类型</span></span><br><span class="line"><span class="comment">//对 COM 组件不可见。如果需要从 COM 访问此程序集中的类型</span></span><br><span class="line"><span class="comment">//请将此类型的 ComVisible 特性设置为 true。</span></span><br><span class="line">[<span class="meta">assembly: ComVisible(false)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果此项目向 COM 公开，则下列 GUID 用于类型库的 ID</span></span><br><span class="line">[<span class="meta">assembly: Guid(<span class="meta-string">&quot;094ac56a-7a59-4f32-a2eb-857135be4d2c&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序集的版本信息由下列四个值组成: </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//      主版本</span></span><br><span class="line"><span class="comment">//      次版本</span></span><br><span class="line"><span class="comment">//      生成号</span></span><br><span class="line"><span class="comment">//      修订号</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 可以指定所有值，也可以使用以下所示的 &quot;*&quot; 预置版本号和修订号</span></span><br><span class="line"><span class="comment">// 方法是按如下所示使用“*”: :</span></span><br><span class="line"><span class="comment">// [assembly: AssemblyVersion(&quot;1.0.*&quot;)]</span></span><br><span class="line">[<span class="meta">assembly: AssemblyVersion(<span class="meta-string">&quot;1.0.0.0&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyFileVersion(<span class="meta-string">&quot;1.0.0.0&quot;</span>)</span>]</span><br></pre></td></tr></table></figure><h1 id="三、实现-Hello，World-窗体"><a href="#三、实现-Hello，World-窗体" class="headerlink" title="三、实现 Hello，World 窗体"></a>三、实现 Hello，World 窗体</h1><blockquote><p>下面就正式开始C#程序的设计，首先是界面的实现，可以随意从控件工具箱中拖放控件到窗体中，这里我拖动两个Button和一个TextBox，并在右边设置框中修改每个控价的属性，界面如图：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/b52e21d7a228e978f2fa6fc8f626864c.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><p>这个时候如果查看Form1.cs文件，会发现和之前一样，这里就需要介绍另外几个开发GUI界面的知识点了:</p><blockquote><p>首先，我们想要实现的功能是：<br>当按下Send按钮时，文本框显示^_^Hello，World^_^字样，当按下Clear按钮时，文本框清空；</p></blockquote><p>这属于人机交互，一般人机交互的处理方式有两种：</p><ul><li>第一种是查询处理方式，比如在DOS系统下、Linux系统等命令行下的程序设计。</li><li>第二种是事件处理机制，有了很多的优越性，由传统的查询法耗费CPU一直在检测，变成了事件处理机制下的主动提醒告知，大幅度减轻CPU资源浪费，在事件处理机制中有以下几个概念：<blockquote></blockquote><p><strong>事件源（EventSource）：</strong>描述人机交互中事件的来源，通常是一些控件；<br><strong>事件（ActionEvent）：</strong>事件源产生的交互内容，比如按下按钮；<br><strong>事件处理：</strong>这部分也在C++中被叫做回调函数，当事件发生时用来处理事件；</p></li></ul><p><strong>注：这部分在单片机中也是如此，中断源产生中断，然后进入中断服务函数进行响应；</strong></p><p>清楚了这几个概念后，就来实现我们想要的功能:<br>按下按钮是一个事件，那么，如何编写或者在哪编写这个事件的事件处理函数呢？在VS中很方便，只需要双击这个控件，VS就会自动将该控件的事件处理函数添加进Form1.cs文件，此处我先双击“Send”按钮，可以看到VS自动添加进了 private void button1_Click(object sender, EventArgs e) 这个方法，</p><p>然后在里面编写代码，让文本框显示：这里所有的控件都是一个具体的对象，我们要通过这些对象设置其属性或者调用其方法；<br>同样的道理，双击Clear按钮，添加文本框清空代码，完整代码如下:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户项目工程自定义命名空间HelloWorld</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form</span></span><br><span class="line">    <span class="comment">//partial关键字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//与类同名的构造方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按下Send按钮</span></span><br><span class="line">            textBox1.Text = <span class="string">&quot;^_^Hello,World^_^&quot;</span>;    <span class="comment">//文本框显示    </span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按下Clear按钮</span></span><br><span class="line">            textBox1.Text = <span class="string">&quot;&quot;</span>;                      <span class="comment">//文本框清空</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>至此，大功告成，第一个应用程序创建成功，点击启动按钮看下效果：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/cc36772036eb28b6199c505afcadb933.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_13640625/3021603">C#上位机开发（二）—— Hello，World</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 上位机 </tag>
            
            <tag> 第一个程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#上位机系列之一（了解上位机）</title>
      <link href="/posts/3443688373.html"/>
      <url>/posts/3443688373.html</url>
      
        <content type="html"><![CDATA[<h1 id="为什么需要上位机"><a href="#为什么需要上位机" class="headerlink" title="为什么需要上位机"></a>为什么需要上位机</h1><blockquote><p> 在单片机项目开发中，上位机也是一个很重要的部分，主要用于数据显示（波形、温度等）、用户控制（LED，继电器等），下位机（单片机）与 上位机之间要进行数据通信的两种方式都是基于串口的：</p></blockquote><h1 id="上位机开发类型"><a href="#上位机开发类型" class="headerlink" title="上位机开发类型"></a>上位机开发类型</h1><ul><li><strong>USB转串口</strong> —— 上位机和下位机通过USB转串口连接线直接相连进行数据交互；</li><li><strong>串口转WIFI（ESP8266）</strong> ——  上位机和下位机基于TCP&#x2F;IP协议通过WIFI传输数据；</li><li><strong>串口转蓝牙（HC-06）</strong>—— 不多用，暂不介绍；</li></ul><p>　　</p><h2 id="上位机软软件开发主要包括以下两种："><a href="#上位机软软件开发主要包括以下两种：" class="headerlink" title="上位机软软件开发主要包括以下两种："></a>上位机软软件开发主要包括以下两种：</h2><ol><li><p>Windows上位机（EXE可执行程序）<br>在Windows上，最早用VB语言开发，后来由于C++的发展，采用MFC开发，近几年，微软发布了基于.NET框架的面向对象语言C#，更加稳定安全，再配合微软强大的VS进行开发，效率奇高；<br><strong>另外，如果想要在Linux上跨平台运行，可以选用Qt；如果想要更加丰富好看的数据显示界面，可以选用Labview开发；</strong></p></li><li><p>Android上位机（APP）<br>在Android操作系统上，主要采用Java语言，使用WIFI或者蓝牙基于TCP&#x2F;IP协议传输数据，利用Android Studio开发；</p></li></ol><p><strong>在此，我们主要介绍如何通过VS + C#开发电脑上位机，其它上位机的开发暂且不论。</strong></p><blockquote><p>注：VS下载与安装参考这篇较详细的<a href="https://blog.csdn.net/qq_36556893/article/details/79430133">博客</a></p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_13640625/3021604">C#上位机开发（一）—— 了解上位机</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 上位机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#退出应用程序方法</title>
      <link href="/posts/1995699131.html"/>
      <url>/posts/1995699131.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-退出应用程序的几种方法"><a href="#C-退出应用程序的几种方法" class="headerlink" title="C# 退出应用程序的几种方法"></a>C# 退出应用程序的几种方法</h1><blockquote><p>Process.GetCurrentProcess().Kill(); 这个方法试了报错</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Application.Exit();<span class="comment">//好像只在主线程可以起作用，而且当有线程，或是阻塞方法的情况下，很容易失灵</span></span><br><span class="line"><span class="keyword">this</span>.Close();<span class="comment">//只是关闭当前窗体。</span></span><br><span class="line">Application.ExitThread();<span class="comment">//退出当前线程上的消息循环，并关闭该线程上的所有窗口。 也会失灵</span></span><br><span class="line">Environment.Exit(<span class="number">0</span>); <span class="comment">//前面三种方法都不能很好的退出程序，此方法可以完全退出程序，这个要强制得多。</span></span><br><span class="line">Process.GetCurrentProcess().Kill();<span class="comment">//此方法完全奏效，绝对是完全退出。</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_45499836/article/details/124021582">C# 退出应用程序的几种方法)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 关闭程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#窗体之一（esc退出窗体）</title>
      <link href="/posts/2033967494.html"/>
      <url>/posts/2033967494.html</url>
      
        <content type="html"><![CDATA[<h1 id="直接在当前窗体添加代码"><a href="#直接在当前窗体添加代码" class="headerlink" title="直接在当前窗体添加代码"></a>直接在当前窗体添加代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//esc退出窗体</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="built_in">bool</span> <span class="title">ProcessCmdKey</span>(<span class="params"><span class="keyword">ref</span> System.Windows.Forms.Message msg , System.Windows.Forms.Keys keyData</span>) <span class="comment">//激活回车键</span></span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">  <span class="built_in">int</span> WM_KEYDOWN=<span class="number">256</span>;       </span><br><span class="line">  <span class="built_in">int</span> WM_SYSKEYDOWN = <span class="number">260</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(msg.Msg == WM_KEYDOWN | msg.Msg == WM_SYSKEYDOWN)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">switch</span>(keyData)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">case</span> Keys.Escape:</span><br><span class="line">     <span class="keyword">this</span>.Close();<span class="comment">//csc关闭窗体</span></span><br><span class="line">     <span class="keyword">break</span>;   </span><br><span class="line">   &#125;  </span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.cnblogs.com/mingfei200169/articles/578222.html">c#中快捷键的设置(esc退出窗体)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 窗体 </tag>
            
            <tag> esc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#串口功能之二（serialPort.close()死锁的实例）</title>
      <link href="/posts/674676035.html"/>
      <url>/posts/674676035.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-串口死锁问题描述"><a href="#C-串口死锁问题描述" class="headerlink" title="C#串口死锁问题描述"></a>C#串口死锁问题描述</h1><p>最近在做一个有关高铁模拟仓显示系统的客户端程序，在这个程序中要运用串口serialPort传输数据，因为每次接收数据结束后要更新UI界面，所以就用到了的Invoke，将更新UI的程序代码封装到一个方法中，然后通过Incoke调用，程序跑起来没有任何问题，但是当你执行serialPort.close()是程序就会发生死锁，整个程序卡在那里动都动不了。</p><p>上网查了很多资料，有各种这样的说法，有的说定义一个接收数据的标志，如果在执行关闭程序是进行判断，如果数据接收完了就关闭串口，没有的话继续执行，但是经过亲自测试并没有什么卵用，最后自己研究invoke的时候发现还有Begininvoke，同时也发现了他们之间的不同,begininvoke用于后台更新UI数据无需等待的情况，而invoke用于后台更新UI数据无需要等待的情况，弄明白这两个之间的不同之后才明白原来执行serialPort.close()发生死锁的原因就是invoke在作祟，改成begininvoke就不会出现死锁问题。</p><p><strong>直接上代码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">SerialPort serialPort1 = <span class="keyword">new</span> SerialPort(“COM5”, <span class="number">115200</span>, Parity.None, <span class="number">8</span>, StopBits.One); <span class="comment">//初始化串口设置</span></span><br><span class="line"><span class="comment">//定义委托</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">Displaydelegate</span>(<span class="params"><span class="built_in">byte</span>[] InputBuf</span>)</span>;</span><br><span class="line">Byte[] OutputBuf = <span class="keyword">new</span> Byte[<span class="number">8</span>];</span><br><span class="line"><span class="keyword">public</span> Displaydelegate disp_delegate;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收数据委托</span></span><br><span class="line">disp_delegate = <span class="keyword">new</span> Displaydelegate(DispUI);</span><br><span class="line">serialPort1.DataReceived += <span class="keyword">new</span> SerialDataReceivedEventHandler(Comm_DataReceived);</span><br><span class="line"></span><br><span class="line"><span class="comment">//串口读取数据处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Comm_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">Byte[] InputBuf = <span class="keyword">new</span> Byte[<span class="number">8</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">serialPort1.Read(InputBuf, <span class="number">0</span>,<span class="number">6</span>); <span class="comment">//读取缓冲区的数据,每次读取6个字节的数据</span></span><br><span class="line">System.Threading.Thread.Sleep(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">this</span>.BeginInvoke(disp_delegate, InputBuf);<span class="comment">//disp_delegate是定义的委托事件，在委托事件中调用修改UI的程序</span></span><br><span class="line">&#125;</span><br><span class="line">catch (TimeoutException ex) <span class="comment">//超时处理</span></span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(ex.ToString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新UI界面</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DispUI</span>(<span class="params"><span class="built_in">byte</span>[] InputBuf</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> str = System.Text.Encoding.Default.GetString(InputBuf);</span><br><span class="line"><span class="comment">// Console.WriteLine(str);</span></span><br><span class="line"><span class="built_in">string</span> strW = str.Substring(<span class="number">0</span>, <span class="number">2</span>);<span class="comment">//截取str的子串，从index=0开始截取长度为2的字符串</span></span><br><span class="line"><span class="built_in">int</span> OutStrW = <span class="built_in">int</span>.Parse(strW);</span><br><span class="line"><span class="built_in">string</span> strS = str.Substring(<span class="number">2</span>, <span class="number">2</span>);<span class="comment">//截取str的子串，从index=2开始截取长度为2的字符串</span></span><br><span class="line"><span class="built_in">int</span> OutStrS = <span class="built_in">int</span>.Parse(strS);</span><br><span class="line">OutstrWen = (OutStrW - <span class="number">4</span>).ToString();</span><br><span class="line">textBox8.Text = strW;</span><br><span class="line">textBox9.Text = (OutStrW - <span class="number">4</span>).ToString();</span><br><span class="line">textBox10.Text = strS;</span><br><span class="line">textBox11.Text = (OutStrS - <span class="number">10</span>).ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/129320.htm">C# 串口接收数据中serialPort.close()死锁的实例</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> 前端 </category>
          
          <category> C# </category>
          
          <category> 通讯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 串口通讯 </tag>
            
            <tag> 死锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#串口功能之一（基础知识）</title>
      <link href="/posts/1572787363.html"/>
      <url>/posts/1572787363.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-中的串口通信SerialPort详解"><a href="#C-中的串口通信SerialPort详解" class="headerlink" title="C#中的串口通信SerialPort详解"></a>C#中的串口通信SerialPort详解</h1><blockquote><p>今天这篇文章带大家学习下C#中的串口通讯。在日常的开发工作中，如果工作内容是CS方向的同学应该很容易接触到串口通讯方面的业务需求。那么也就很容易想到C#中SerialPort类，它就是专门来处理串口通讯相关的。</p></blockquote><h2 id="了解什么是串口通讯"><a href="#了解什么是串口通讯" class="headerlink" title="了解什么是串口通讯"></a>了解什么是串口通讯</h2><ul><li>串口通讯是指外设和计算机间通过数据信号线，地线，控制线等，按位进行传输数据的一种通讯方式。<br>这种通讯方式使用的数据线少，在远距离通信中可以节约成本，但其传输速度比并行通讯慢。<br>串口是计算机上一种非常通用的设备通讯协议。大多数计算机包含两个基于RS-232的串口。<br>串口也是仪器仪表设备通用的通讯协议，很多GPIB兼容的设备也带有RS-232口，同时串口通信协议也可以用于获取远程设备采集的数据。</li></ul><blockquote><p>串行接口是一种可以将接受来自CPU的并行数据字符转换为连续的串行数据流发送出去，同时也可将接受的串行数据流转换为并行的数据字符供给CPU的器件。</p></blockquote><ul><li><strong>一般完成这种功能的电路，我们称为串行接口电路。</strong></li></ul><p>串行按位(bit)发送和接收字节，尽管比按字节(byte)的并行通信慢，但是串口可以在使用一根线发送数据的同时用另一根线接收数据。它很简单并且能够实现远距离通信。</p><p><img src="https://img.jbzj.com/file_images/article/202201/2022012514074673.png" alt="img"></p><blockquote><p>这里提一句，我们笔记本的USB口，它不是串口，它是所谓的U口，我们的串口如果需要插入到USB口，那么就需要一个RS-232转U口的转换器才可以。<br>这里需要注意下，一般我们的硬件工程师都会在自己的硬件设备都内置这个小转换设备，很方便。</p></blockquote><h2 id="C-中的串口通讯SerialPort"><a href="#C-中的串口通讯SerialPort" class="headerlink" title="C#中的串口通讯SerialPort"></a>C#中的串口通讯SerialPort</h2><p>从.NET Framework 2.0开始，微软就默认提供了System.IO.Ports.SerialPort类，根据SerialPort类提供的简单操作步骤，可以很容易的完成串口的信息收发程序，从特定的串口中接收到数据也可以进行数据的发送。</p><blockquote><p><strong>关于SerialPort类的应用也很容易，可以根据微软官方的介绍进行使用。</strong></p></blockquote><ul><li>配置SerialPort的名称，端口号，波特率等。</li><li>打开&#x2F;关闭串口</li><li>接收&#x2F;发送数据</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">SerialPort mySerialPort = <span class="keyword">new</span> SerialPort(<span class="string">&quot;COM2&quot;</span>);</span><br><span class="line">mySerialPort.BaudRate = <span class="number">9600</span>;</span><br><span class="line">mySerialPort.Parity=Parity.None;</span><br><span class="line">mySerialPort.StopBits = StopBits.One;</span><br><span class="line">mySerialPort.DataBits = <span class="number">8</span>;</span><br><span class="line">mySerialPort.Handshake = Handshake.Non;</span><br><span class="line"></span><br><span class="line">mySerialPort.DataReceived += <span class="keyword">new</span> SerialDataReceivedEvenHandler(DataReceive_Method);</span><br><span class="line"></span><br><span class="line">mySerialPort.Open();</span><br><span class="line"></span><br><span class="line">mySerialPort.Close();</span><br></pre></td></tr></table></figure><p><strong>发送数据</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO.Ports;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SendSampleData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SerialPort port = <span class="keyword">new</span> SerialPort(</span><br><span class="line">        <span class="string">&quot;COM1&quot;</span>, <span class="number">9600</span>, Parity.None, <span class="number">8</span>, StopBits.One);</span><br><span class="line">    port.Open();</span><br><span class="line">    port.Write(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    port.Write(<span class="keyword">new</span> <span class="built_in">byte</span>[] &#123; <span class="number">0x0A</span>, <span class="number">0xE2</span>, <span class="number">0xFF</span> &#125;, <span class="number">0</span>, <span class="number">3</span>);</span><br><span class="line">    port.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>日常串口的使用多数情况是和线程进行的，一般都是在子线程中做这些耗时和重复的工作，在主线程或者界面只进行数据的展示处理即可。<br>在子线程的处理过程中需要特别处理串口的打开和关闭，要及时关闭串口的状态，防止出现无法捕获的异常错误。</p><h1 id="c-实现简单的串口通讯"><a href="#c-实现简单的串口通讯" class="headerlink" title="c# 实现简单的串口通讯"></a>c# 实现简单的串口通讯</h1><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><ul><li>创建一个WinForm窗体，拉入一些界面元素</li></ul><p><img src="https://img.jbzj.com/file_images/article/202103/202131290050981.png?2021212912" alt="img"></p><p>重点就是，图中用红框标出的，工具箱——组件——SerialPort，做.net串口通讯，这是必备控件</p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><ul><li>设置SerialPort控件属性</li></ul><p>用C#向串口发送数据没什么特别的，就是调用SerialPort的Write方法往串口写数据就行</p><p><strong>但是从串口那里接收数据的方式就比较特别了:</strong></p><ol><li>首先，需要在代码里声明一个特别的事件函数</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">serialPort_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, System.IO.Ports.SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">this</span>.Invoke(<span class="keyword">new</span> EventHandler(UpdateUIText));</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>此函数是用来绑定到SerialPort控件的DataReceived事件</p><p><img src="https://img.jbzj.com/file_images/article/202103/202131290152408.png?2021212921" alt="img"></p><p>顾名思义，这个事件就是在接收到串口返回的数据时触发，里面就一句代码</p><p>对这句代码有兴趣的可以私下再去研究，这里就不赘述了</p><p>总之，这句代码的用途就是用来调动另一个函数，对界面UI元素的值进行更新（当然你也可以在里面执行其他操作）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateUIText</span>(<span class="params"><span class="built_in">object</span> s, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">//必须要阻塞线程一段时间，以免在交易超时的情况下，由于read太快导致读取不完整</span></span><br><span class="line">    System.Threading.Thread.Sleep(<span class="number">500</span>);</span><br><span class="line">    <span class="built_in">string</span> txt = serialPort.ReadExisting();</span><br><span class="line">    txt_Received.Text = txt;</span><br><span class="line">   &#125;</span><br><span class="line">   catch (Exception ex)</span><br><span class="line">   &#123;</span><br><span class="line">    MessageBox.Show(ex.Message.ToString());</span><br><span class="line">   &#125;   </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><blockquote><p>开始写逻辑代码，废话不多说，直接贴上来</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line">namespace WinForm串口通讯</span><br><span class="line">&#123;</span><br><span class="line">    public partial class Form1 : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public Form1()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        private void Form1_Load(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            string[] ports &#x3D; System.IO.Ports.SerialPort.GetPortNames();</span><br><span class="line">            if (ports.Length &#x3D;&#x3D; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;本机没有串口！&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            Array.Sort(ports);</span><br><span class="line">            serialPort.PortName &#x3D; ports[0];&#x2F;&#x2F;串口号COM3</span><br><span class="line">            serialPort.BaudRate &#x3D; 115200;&#x2F;&#x2F;波特率</span><br><span class="line">            serialPort.DataBits &#x3D; 8;&#x2F;&#x2F;数据位</span><br><span class="line">            serialPort.StopBits &#x3D; System.IO.Ports.StopBits.One;&#x2F;&#x2F;停止位</span><br><span class="line">            serialPort.Encoding &#x3D; System.Text.Encoding.GetEncoding(&quot;GB2312&quot;);&#x2F;&#x2F;此行非常重要，解决接收中文乱码的问题</span><br><span class="line"> </span><br><span class="line">            &#x2F;&#x2F; 打开串口</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                serialPort.Open();</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;捕获到异常信息，创建一个新的comm对象，之前的不能用了。  </span><br><span class="line">                serialPort &#x3D; new System.IO.Ports.SerialPort();</span><br><span class="line">                &#x2F;&#x2F;将异常信息传递给用户。  </span><br><span class="line">                MessageBox.Show(ex.Message);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        private void button1_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;          </span><br><span class="line">            string msgOrder &#x3D; txt_Msg.Text;</span><br><span class="line">            &#x2F;&#x2F;MessageBox.Show(msgOrder);</span><br><span class="line">            serialPort.Write(msgOrder);           </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        private void serialPort_DataReceived(object sender, System.IO.Ports.SerialDataReceivedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            this.Invoke(new EventHandler(UpdateUIText));</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        private void UpdateUIText(object s, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;必须要阻塞线程一段时间，以免在交易超时的情况下，由于read太快导致读取不完整</span><br><span class="line">                System.Threading.Thread.Sleep(500);</span><br><span class="line">                string txt &#x3D; serialPort.ReadExisting();</span><br><span class="line">                txt_Received.Text &#x3D; txt;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(ex.Message.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        private void Form1_FormClosing(object sender, FormClosingEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                if (serialPort !&#x3D; null &amp;&amp; serialPort.IsOpen)</span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort.Close();</span><br><span class="line">                    serialPort.Dispose();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;将异常信息传递给用户。  </span><br><span class="line">                MessageBox.Show(ex.Message);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-基于SerialPort类实现串口通讯详解"><a href="#C-基于SerialPort类实现串口通讯详解" class="headerlink" title="C#基于SerialPort类实现串口通讯详解"></a>C#基于SerialPort类实现串口通讯详解</h1><ul><li><strong>本文实例为大家分享了C#基于SerialPort类实现串口通讯的具体代码，供大家参考，具体内容如下</strong></li></ul><p><img src="https://img.jbzj.com/file_images/article/202201/2022131112830821.jpg?2022031112845" alt="img"></p><ul><li><strong>最终效果:</strong></li></ul><p><img src="https://img.jbzj.com/file_images/article/202201/2022131112921913.jpg?2022031112932" alt="img"></p><ul><li><strong>窗体设置：</strong></li></ul><p><img src="https://img.jbzj.com/file_images/article/202201/2022131112943983.jpg?2022031112954" alt="img"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.IO.Ports;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SerialCommunication</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.Threading.SynchronizationContext m_SyncContext = <span class="literal">null</span>;</span><br><span class="line">        SerialPort serialPort = <span class="literal">null</span>;</span><br><span class="line">        ToHexadecimalString toHexadecimalString = <span class="keyword">new</span> ToHexadecimalString();</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            m_SyncContext = SynchronizationContext.Current;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Data initialization</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span>[] ports = SerialPort.GetPortNames();</span><br><span class="line">            SerialPortNumber.Items.AddRange(ports);</span><br><span class="line">            SerialPortNumber.SelectedIndex = SerialPortNumber.Items.Count &gt; <span class="number">0</span> ? <span class="number">0</span> : <span class="number">-1</span>;</span><br><span class="line">            BaudRateCom.Text = <span class="string">&quot;9600&quot;</span>;  <span class="comment">//Set parameters</span></span><br><span class="line">            CheckBitCom.Text = <span class="string">&quot;None&quot;</span>;</span><br><span class="line">            DataBitCom.Text = <span class="string">&quot;8&quot;</span>;</span><br><span class="line">            StopBitCom.Text = <span class="string">&quot;One&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Send data</span></span><br><span class="line">         <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Send_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//Send data and handle exceptions</span></span><br><span class="line">                <span class="built_in">byte</span>[] bytes = <span class="keyword">new</span> <span class="built_in">byte</span>[SendMessage.Text.Length];</span><br><span class="line">                bytes = Encoding.Default.GetBytes(SendMessage.Text);</span><br><span class="line">                serialPort.Write(bytes, <span class="number">0</span>, bytes.Length);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception error)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(error.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">                <span class="comment">// Byte to hexadecimal string </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Clear data</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Clear_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ReceiveMessage.Text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Open_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> portName = SerialPortNumber.Text;</span><br><span class="line">            <span class="built_in">int</span> buadRate = <span class="built_in">int</span>.Parse(BaudRateCom.Text);</span><br><span class="line">            Parity parity = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">switch</span> (CheckBitCom.Text)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;None&quot;</span>:</span><br><span class="line">                    parity = Parity.None; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Odd&quot;</span>:</span><br><span class="line">                    parity = Parity.Odd; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Even&quot;</span>:</span><br><span class="line">                    parity = Parity.Even; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Mark&quot;</span>:</span><br><span class="line">                    parity = Parity.Mark; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Space&quot;</span>:</span><br><span class="line">                    parity = Parity.Space; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">int</span> dataBit = <span class="built_in">int</span>.Parse(DataBitCom.Text);</span><br><span class="line">            StopBits stopBits = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">switch</span> (StopBitCom.Text)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;None&quot;</span>:</span><br><span class="line">                    stopBits = StopBits.None; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;One&quot;</span>:</span><br><span class="line">                    stopBits = StopBits.One; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;Tow&quot;</span>:</span><br><span class="line">                    stopBits = StopBits.Two; <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;OnePointFive&quot;</span>:</span><br><span class="line">                    stopBits = StopBits.OnePointFive; <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (Open.Text == <span class="string">&quot;Open&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort = <span class="keyword">new</span> SerialPort(portName, buadRate, parity, dataBit, stopBits);</span><br><span class="line">                    serialPort.Open();</span><br><span class="line">                    Open.Text = <span class="string">&quot;Close&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (Open.Text == <span class="string">&quot;Close&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort.Close();</span><br><span class="line">                    Open.Text = <span class="string">&quot;Open&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception errror)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(errror.Message);</span><br><span class="line">            &#125;</span><br><span class="line">            serialPort.DataReceived += onDataReceived;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onDataReceived</span>(<span class="params"><span class="built_in">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Byte[] bytes = <span class="keyword">new</span> <span class="built_in">byte</span>[serialPort.BytesToRead];</span><br><span class="line">                serialPort.Read(bytes, <span class="number">0</span>, serialPort.BytesToRead);</span><br><span class="line">                m_SyncContext.Post(<span class="keyword">new</span> SendOrPostCallback((obj) =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    ReceiveMessage.AppendText(Encoding.Default.GetString(bytes));</span><br><span class="line">                &#125;), bytes);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception error)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(error.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C-基于WinForm实现串口通讯"><a href="#C-基于WinForm实现串口通讯" class="headerlink" title="C#基于WinForm实现串口通讯"></a>C#基于WinForm实现串口通讯</h1><p>串口通讯是一种计算机常用的数据传输方式。</p><p>程序运行如下：</p><p><img src="https://img.jbzj.com/file_images/article/202202/2022217150105750.jpg?202211715118" alt="img"></p><p>首先，检查计算机的串口，并获取所有串口信息。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckPort</span>(<span class="params"></span>)<span class="comment">//检查串口是否可用</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            myLog(<span class="number">2</span>, <span class="string">&quot;检测串口开始！&quot;</span>);  <span class="comment">//log记录函数</span></span><br><span class="line">            comboBox1.Items.Clear();<span class="comment">//清除控件中的当前值         </span></span><br><span class="line">            <span class="built_in">string</span>[] a = SerialPort.GetPortNames();</span><br><span class="line">            <span class="keyword">if</span> (a.Length != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; a.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    comboBox1.Items.Add(a[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                comboBox1.SelectedIndex = <span class="number">0</span>;<span class="comment">//??</span></span><br><span class="line">                myLog(<span class="number">2</span>, <span class="string">&quot;检测串口完成&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                myLog(<span class="number">2</span>, <span class="string">&quot;无可用串口...&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SetPort</span>(<span class="params"></span>)<span class="comment">//设置串口</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.PortName = comboBox1.Text.Trim();<span class="comment">//串口名给了串口类</span></span><br><span class="line">                <span class="comment">//波特率   虚拟串口的波特率好像不能修改，但得将其赋为空，不然报错         </span></span><br><span class="line">                <span class="comment">// serialPort1.BaudRate = Convert.ToInt32(comboBox2.Text.ToString().Trim());        </span></span><br><span class="line">                <span class="comment">// 9600;</span></span><br><span class="line">                serialPort1.BaudRate = Convert.ToInt32(<span class="string">&quot;&quot;</span>.Trim());</span><br><span class="line">                <span class="comment">//奇偶效验</span></span><br><span class="line">                <span class="keyword">if</span> (comboBox5.Text.Trim() == <span class="string">&quot;奇校验&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.Parity = Parity.Odd;<span class="comment">//将奇校验位给了sp的协议</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (comboBox5.Text.Trim() == <span class="string">&quot;偶校验&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.Parity = Parity.Even;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.Parity = Parity.None;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//停止位</span></span><br><span class="line">                <span class="keyword">if</span> (comboBox4.Text.Trim() == <span class="string">&quot;1.5&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.StopBits = StopBits.OnePointFive;<span class="comment">//设置停止位有几位</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (comboBox4.Text.Trim() == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.StopBits = StopBits.Two;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.StopBits = StopBits.One;</span><br><span class="line">                &#125;</span><br><span class="line">                serialPort1.DataBits = Convert.ToInt16(comboBox3.Text.ToString().Trim());<span class="comment">//数据位</span></span><br><span class="line">                serialPort1.Encoding = Encoding.UTF8;<span class="comment">//串口通信的编码格式</span></span><br><span class="line">                serialPort1.Open();</span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Log记录</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;aa&quot;&gt;</span>aa=  0为发送  1为接受 2为日常记录<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;mystr&quot;&gt;</span>记录内容<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;IsHint&quot;&gt;</span>true 显示弹框,false 不显示弹框 默认false<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">myLog</span>(<span class="params"><span class="built_in">int</span> aa, <span class="built_in">string</span> mystr, <span class="built_in">bool</span> IsHint = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//log存放路径</span></span><br><span class="line">            <span class="built_in">string</span> myypath = myPath + DateTime.Now.ToString(<span class="string">&quot;yyyyMMdd&quot;</span>) + <span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">            StreamWriter sw = <span class="keyword">new</span> StreamWriter(myypath, <span class="literal">true</span>);</span><br><span class="line">            <span class="built_in">string</span> tempSendstr;</span><br><span class="line">            <span class="keyword">if</span> (aa == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tempSendstr = DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss.fff&quot;</span>) + <span class="string">&quot;  &quot;</span> + serialPort1.PortName + <span class="string">&quot; 发送---&gt;&gt;&gt;  &quot;</span> + mystr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (aa == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tempSendstr = DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss.fff&quot;</span>) + <span class="string">&quot;  &quot;</span> + serialPort1.PortName + <span class="string">&quot; 接收&lt;&lt;&lt;---  &quot;</span> + mystr;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                tempSendstr = DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss.fff&quot;</span>) + <span class="string">&quot;  &quot;</span> + mystr;</span><br><span class="line">            &#125;</span><br><span class="line">            sw.WriteLine(tempSendstr);</span><br><span class="line">            sw.Close();</span><br><span class="line">            <span class="comment">//弹框提示</span></span><br><span class="line">            <span class="keyword">if</span> (IsHint)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(mystr, <span class="string">&quot;提示&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (listBox1.Items.Count &gt;= <span class="number">10</span>) listBox1.Items.Clear();</span><br><span class="line">            listBox1.Items.Add(tempSendstr);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>大部分的笔记本都不带串口的，我们可以在网上下载 Configure Virtual Serial Port Driver，给自己的笔记本添加几对虚拟串口（虚拟串口都是成对且一一匹配的），再用串口调试助手就可以进行调试了。</p></blockquote><p><strong>数据的发送：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &#x2F;&#x2F;发送</span><br><span class="line">private void button3_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            if(!serialPort1.IsOpen)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(&quot;串口未打开，请检查!&quot;);</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            string mystr1 &#x3D; textBox1.Text;</span><br><span class="line">            byte[] a &#x3D; Encoding.UTF8.GetBytes(mystr1);</span><br><span class="line">            string mystr2 &#x3D; Encoding.UTF8.GetString(a);</span><br><span class="line">            serialPort1.Write(mystr2);&#x2F;&#x2F;将数据写入串行端口输出缓冲区</span><br><span class="line">            myLog(0, mystr2);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>数据接收：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;串口接收数据</span><br><span class="line">private void serialPort1_DataReceived(object sender, SerialDataReceivedEventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            Thread.Sleep(100);</span><br><span class="line">            this.Invoke((EventHandler)(delegate &#x2F;&#x2F;异步委托一个线程</span><br><span class="line">            &#123;</span><br><span class="line">                if (serialPort1.BytesToRead &gt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    byte[] a &#x3D; new byte[serialPort1.BytesToRead];&#x2F;&#x2F;读出缓冲区串口通信的字节                                              </span><br><span class="line">                    int readbytes &#x3D; 0;</span><br><span class="line">                    while (serialPort1.Read(a, readbytes, serialPort1.BytesToRead - readbytes) &lt;&#x3D; 0) ;</span><br><span class="line">                    string str &#x3D; UTF8Encoding.UTF8.GetString(a);</span><br><span class="line">                    textBox2.Text &#x3D; str + &quot;\r\n&quot;;</span><br><span class="line">                    myLog(1, str);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是串口之间字符串的发送与接收，如要进行十六进制的传输，只需要在数据发送和接收时将字符串转化成十六进制，再写进缓冲区或读取。</p></blockquote><ul><li>多条信息发送时，可能会出现下面的情况。</li></ul><p><img src="https://img.jbzj.com/file_images/article/202202/2022217150637609.jpg?202211715649" alt="img"></p><ul><li>串口调试助手将三次发送的数据一起读出来了，此时我们只需要在发送时给上一定的延时即可。</li></ul><p><img src="https://img.jbzj.com/file_images/article/202202/2022217150704739.jpg?202211715712" alt="img"></p><p>这样就能实现串口多条信息的发送与接收了。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/235841.htm">C#中的串口通信SerialPort详解</a></li><li><a href="https://www.jb51.net/article/236410.htm">C#基于SerialPort类实现串口通讯详解</a></li><li><a href="https://www.jb51.net/article/237865.htm">C#基于WinForm实现串口通讯</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
          <category> 通讯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
            <tag> .NET </tag>
            
            <tag> 串口通讯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解C#和WinForm</title>
      <link href="/posts/2295543441.html"/>
      <url>/posts/2295543441.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是-C-？"><a href="#什么是-C-？" class="headerlink" title="什么是 C# ？"></a>什么是 C# ？</h1><p>C#是一个现代的、通用的、面向对象的、面向组件、结构化语言C#的构想十分接近C和C++,是一门面向对象的编程语言，与java非常相似。</p><h1 id="C-的特点"><a href="#C-的特点" class="headerlink" title="C#的特点"></a>C#的特点</h1><ul><li><p><strong>简单、安全</strong></p><blockquote><p>在 C++ 和 C 语言中程序员最头疼的问题就是指针问题，在 C# 语言中已经不再使用指针，而且不允许直接读取内存等不安全的操作。它比 C、C++、Java 提供了更多的数据类型，并且每个数据类型都是固定大小的。此外还提供了命名空间来管理 C# 文件，命名空间 相当于一个文件夹，在创建程序时，允许在一个命名空间中创建一个或多个类，方便调用和重用</p></blockquote></li><li><p><strong>面向对象</strong></p></li></ul><p>与其他面向对象语言一样，C# 语言也具有面向对象语言的基本特征，即<code>封装、继承、 多态</code>。</p><blockquote><pre><code>**封装：**就是将代码看作一个整体，例如使用类、方法、接口等。在使用定义好的类、 方法、接口等对象时不必考虑其细节，只需要知道其对象名以及所需要的参数即可，也是一种提升代码安全性的方法。**继承：**是一种体现代码重用性的特性，减少代码的冗余，但在 C# 语言中仅支持单继承。**多态：**不仅体现了代码的重用性，也体现了代码的灵活性，它主要通过继承和实现接口的方式，让类或接口中的成员表现出不同的作用</code></pre></blockquote><ul><li><p><strong>支持跨平台</strong><br>最早的 C# 语言仅能在 Windows 平台上开发并使用，目前最新的 C# 6.0 版本已经能在多个操作系统上使用，例如在 Mac、Linux 等。此外，还能将其应用到手机、PDA 等设备上。</p></li><li><p><strong>开发多种类型的程序</strong><br>C# 语言不仅能开发在控制台下运行的应用程序，也能开发 Windows 窗体应用程序、网站、手机应用等多种应用程序，并且其提供的 Visual Studio 2015 开发工具中也支持多种类型的程序，让开发人员能快速地构建 C# 应用程序</p></li></ul><h1 id="了解C-、-NET、Winform的关系"><a href="#了解C-、-NET、Winform的关系" class="headerlink" title="了解C#、.NET、Winform的关系"></a>了解C#、.NET、Winform的关系</h1><ul><li>.NET 是一个开发平台，而 C# 是一种在 .NET 开发平台上使用的编程语言，目前能在 .NET 平台上使用的开发语言很多，例如 Visual Basic .NET、Python、J#、Visual C++.NET 等。但在 .NET 平台上使用最多的是 C# 语言。</li><li>WinForm 是 Windows Form 的简称，是基于 .NET Framework 平台的客户端（PC软件）开发技术，一般使用 C# 编程。C# WinForm 编程需要创建「Windows窗体应用程序」项目。</li><li>.NET 提供了大量 Windows 风格的控件和事件，我们可以直接拿来使用，上手简单，开发快速。</li></ul><h1 id="快速创建Winform程序"><a href="#快速创建Winform程序" class="headerlink" title="快速创建Winform程序"></a>快速创建Winform程序</h1><blockquote><p>使用VS2017,.NET Framework 4.6.1</p></blockquote><ul><li>一、创建窗体应用程序非常简单，依次选择“文件”一“新建”一“项目”命令，弹出如下图所示的对话框，选择Windows窗体应用程序，修改位置即可。</li></ul><img src="https://img-blog.csdnimg.cn/img_convert/86b77ebdd9cff3f042e4197ec55f491e.png#pic_center"><ul><li>二、通过工具箱中的label标签，button按钮，comboBox下拉按钮，直接在拖拽到窗体中；按钮的单击事件直接双击可以跳到对应的方法中进行代码编辑；还需要修改对应标签属性中的Name，方便后续的编辑；创建完成后出现如下界面</li></ul><img src="https://img-blog.csdnimg.cn/f586b06ae1094573927e288cfe900c0f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>三、点击启动按钮，出现自己编写的窗体界面</li></ul><img src="https://img-blog.csdnimg.cn/b6b0618317904fb4903a2f90ef0f9d43.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><h1 id="Winform菜单和工具栏"><a href="#Winform菜单和工具栏" class="headerlink" title="Winform菜单和工具栏"></a>Winform菜单和工具栏</h1><img src="https://img-blog.csdnimg.cn/4931266cefef42088836a0b8601752c7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_9,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>一、ListBox:列表框</li></ul><img src="https://img-blog.csdnimg.cn/a5cceedc3b244a4088eca5ae68129299.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_16,color_FFFFFF,t_70,g_se,x_16"><ul><li>二、ComboBox:下拉框列表</li></ul><img src="https://img-blog.csdnimg.cn/8577ddc44331479a8b3e3f653d9fb254.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16"><ul><li>三、CheckedListBox:复选框列表</li><li>四、MaskedTextBox:用于输入指定格式的内容，比如电话，邮编等信息，指定格式。</li><li>五、numericUpdown:数字显示框，点击向上或者向下来增加或减少数字的显示</li><li>六、RichTextBox:富文本框</li></ul><img src="https://img-blog.csdnimg.cn/575ec2000b2f42959b326882e3e3fb7f.png"><ul><li>七、MenuStrip:窗体上添加菜单栏控件 MenuStrip，直接点击 MenuStrip ，在右边的 Windows 窗体中就可以显示，输入具体的值时需要有提示字母，可以通过&amp;+字母实现</li><li>八、ToolStrip:和添加菜单栏类似，在工具箱中将 ToolStrip 控件直接拖到 Windows 窗体中即可；如果需要指定图片和文字，可以通过属性中的DisplayStyle设置</li></ul><img src="https://img-blog.csdnimg.cn/175497e93125477b8f8f9f57326ba809.png#pic_center"><ul><li>九、DataGridView:在网格中可以用自定义数据的行和列</li><li>十、事件:可以通过属性中的Click指定不同按钮的相同事件</li></ul><img src="https://img-blog.csdnimg.cn/915a488732164cab97249542371da64f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>十一、容器</li></ul><img src="https://img-blog.csdnimg.cn/e3569f476a854c74af6ad0a295d637df.png#pic_center"><p><strong>在容器中可以放入需要的组件:</strong></p><img src="https://img-blog.csdnimg.cn/24fd881456e8411a9aaf468a5150ca88.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_10,color_FFFFFF,t_70,g_se,x_16"><ul><li>十二、属性<blockquote><p><strong>Anchor</strong>属性可以将内部容器窗体的拉伸大小随外部窗体的改变而改变</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/0ff92359c8aa4fe5882b10091052c2aa.png"><blockquote><p><strong>Dock</strong>属性将控件停靠在窗体的边缘或者填充窗体</p></blockquote><blockquote><p><strong>IsMdiContainer</strong> 将一个窗体设置为主窗体</p></blockquote><img src="https://img-blog.csdnimg.cn/d1f273531aea4affbaa89bd73ffeb9e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_15,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/d1f273531aea4affbaa89bd73ffeb9e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_15,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>ControlBox</strong>是将窗体中的最大最小设置为不可见状态</p></blockquote><img src="https://img-blog.csdnimg.cn/d921658fe4dc4e14b8281fe010b6de73.png"><blockquote><p><strong>AcceptButton</strong>设置为true时用户可以通过回车键确认</p></blockquote><blockquote><p><strong>Show和ShowDialog的区别</strong></p></blockquote><ul><li>show是界面可以同时存在，第一个界面出现，出现第二个界面时可以点击第一个界面，而showDialog时出现第二个界面时无法点击第一个界面，必须关闭第二个界面才能点击第一个界面。</li></ul><h1 id="Form初始化、布局"><a href="#Form初始化、布局" class="headerlink" title="Form初始化、布局"></a>Form初始化、布局</h1><ul><li>form初始化操作时是先执行构造方法中的InitializeComponent()，然后执行load()，包括实例化——属性设置——事件注册——将控件添加到当前窗体的Controls中。</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>参考文章：<br><a href="http://c.biancheng.net/csharp/winform/">C语言中文网</a><br><a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/tour-of-csharp/">C#教程</a></p><ol><li>C#开发窗体应用方便快捷，界面结构整齐。</li><li>控件的使用不仅可以通过拖拽的方式实现，也可以使用代码的方式实现，添加到Controls中，然后编写相应的逻辑代码。</li><li>VS2017快捷键设置：工具——&gt;选项</li></ol><img src="https://img-blog.csdnimg.cn/a423111d12f043dbb6589da4b8765afa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/m0_67729518/article/details/123518389">WinForm学习</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA文件管理之一（访问带密码共享）</title>
      <link href="/posts/2543819108.html"/>
      <url>/posts/2543819108.html</url>
      
        <content type="html"><![CDATA[<h1 id="通过Shell命令访问共享文件"><a href="#通过Shell命令访问共享文件" class="headerlink" title="通过Shell命令访问共享文件"></a>通过Shell命令访问共享文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sub 访问共享文件()</span><br><span class="line">IPName &#x3D; &quot;192.168.0.10&quot;</span><br><span class="line">UserName &#x3D; &quot;user&quot;</span><br><span class="line">Passwd &#x3D; &quot;password&quot;</span><br><span class="line">Shell &quot;net use * &#x2F;delete &#x2F;y&quot;, vbHide</span><br><span class="line">Shell &quot;net use \\&quot; &amp; IPName &amp; &quot; &quot; &amp; Passwd &amp; &quot; &#x2F;user:&quot; &amp; UserName, vbHide</span><br><span class="line">Shell &quot;C:\WINDOWS\explorer.exe \\&quot; &amp; IPName &amp; &quot;\&quot;, vbMaximizedFocus</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h1 id="通过VB-NET登录带密码的电脑"><a href="#通过VB-NET登录带密码的电脑" class="headerlink" title="通过VB.NET登录带密码的电脑"></a>通过VB.NET登录带密码的电脑</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ul><li>很简单只有一句,但是由于shell语句都是异步的所以最好不要放在过程中使用,我一般放在load 里</li></ul><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ul><li>如果想要登录ip地址为192.168.50.193下的共享文件夹</li></ul><blockquote><p>user: 后跟要登陆计算机的登录名 然后空一格写密码<br>第二句是退出登录,一般用在程序关闭的时候.以免计算机一直处于登录状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Shell(&quot;Net use \\192.168.50.193\共享 &#x2F;user:gh 518518&quot;)</span><br><span class="line">Shell(&quot;Net use \\192.168.50.193\共享 &#x2F;delete&quot;)</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/601566725.html">Excel使用VBA读写有用户名及密码的网络文件夹中的文档</a></li><li><a href="https://blog.csdn.net/m0_53168509/article/details/111952385">如何用VB.NET在局域网中登录带密码的电脑</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 共享文件 </tag>
            
            <tag> 密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA数据处理之三(随机数据)</title>
      <link href="/posts/81989925.html"/>
      <url>/posts/81989925.html</url>
      
        <content type="html"><![CDATA[<h1 id="1、用EXCEL生成随机数"><a href="#1、用EXCEL生成随机数" class="headerlink" title="1、用EXCEL生成随机数"></a>1、用EXCEL生成随机数</h1><ul><li>rand()  是 [0,1）,随机到的是小数</li><li>randbetween(a,b)   是  [a,b] ,但是只能是整数</li></ul><blockquote><p>如果想在EXCEL公式用randbetween()随机小数呢？</p><ul><li>随机，randbetween() 只能随机整数，如果是要小数，那就先乘100，随机完之后再除100这样处理</li><li>randbetween(a,b)   是  [a,b]</li><li>RANDBETWEEN(1000<em>G49,1000</em>H49)&#x2F;1000</li></ul></blockquote><h1 id="2、用VBA生成随机数"><a href="#2、用VBA生成随机数" class="headerlink" title="2、用VBA生成随机数"></a>2、用VBA生成随机数</h1><h2 id="方法说明"><a href="#方法说明" class="headerlink" title="方法说明"></a>方法说明</h2><blockquote><p>在VBA里</p></blockquote><ul><li>rnd是[0,1）之间随机左闭右开区间</li></ul><blockquote><p>方法</p></blockquote><ul><li>整数[a,b]随机正确写法为 int(a+(b-a+1)*rnd())</li><li>小数的随机[a,b)  随机正确写法为 (a+(b-a)*rnd()  ’但是右边还是不是闭区间有瑕疵</li><li>这样来说，小数随机，如果要求两边是闭区间，不如用整数随机方法，把小数*1000等变大为整数，最后再除，也是一样得把。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">int(1+[0,1)*(6-1+1))</span><br><span class="line"></span><br><span class="line">&#x3D; int(1+[0,1)*6)</span><br><span class="line"></span><br><span class="line">&#x3D;int(1+[0,6))</span><br><span class="line"></span><br><span class="line">&#x3D;int([1,7))</span><br><span class="line"></span><br><span class="line">&#x3D;[1,6]</span><br><span class="line"></span><br><span class="line">0.1+[0,1)*(0.6-0.1)</span><br><span class="line"></span><br><span class="line">&#x3D;0.1+ [0,1)*0.5</span><br><span class="line"></span><br><span class="line">&#x3D;0.1+[0,0.5)</span><br><span class="line"></span><br><span class="line">&#x3D;[0.1,0.6)</span><br></pre></td></tr></table></figure><ul><li><strong>官方解释:</strong></li></ul><blockquote><p>为了生成某个范围内的随机整数，可使用以下公式：<br>Int((upperbound - lowerbound + 1) * Rnd + lowerbound)<br>这里，upperbound 是随机数范围的上限，而 lowerbound 则是随机数范围的下限。<br>注意 若想得到重复的随机数序列，在使用具有数值参数的 Randomize 之前直接调用具有负参数值的 Rnd。使用具有同样 number 值的 Randomize 是不会得到重复的随机数序列的。</p></blockquote><ul><li>rnd 是左闭右开区间   [0,1)</li><li>如果要生成 a~b之间的随机数，一般是int(a+ (b-a+1)*rnd)</li><li>因为一般都是要在整数之间随机 要用 int()</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li><strong>1、生成1-10的随机数:</strong><blockquote><p>p1 &#x3D; Int(1 + 10* Rnd())            —这里正确，刚好10&#x3D;10-1+1<br>p1 &#x3D; Int(1 + (10-1+1) * Rnd())     –总是正确</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918151600317.png"><ul><li><strong>2、生成 2-9之间的随机数:</strong><blockquote><p>p2 &#x3D; Int( 2 + 9* Rnd() )              –错误的<br>p2 &#x3D; Int(2 + (9-2+1) * Rnd())     —-正确</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918152829586.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5aWU6LeR55qE54qA54mb5YWI55Sf,size_7,color_FFFFFF,t_70,g_se,x_16"><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><ul><li><strong>1、rnd(-1)</strong><blockquote><p>用永远生成相同的随机数<br>相当于固定随机数种子了？这样的应用情景是？</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918155514687.png"><ul><li><strong>2、rnd(0)</strong><blockquote><p>虽然随机序列都一样，但和rnd(-1) 不同<br>每次连续随机，也是一样的随机数种子，总是用上次的<br>但是如果先停止，再重新开始，就是用下一个随机种子，会和以前的不同</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918160010696.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5aWU6LeR55qE54qA54mb5YWI55Sf,size_8,color_FFFFFF,t_70,g_se,x_16"><h1 id="测试随机数的代码"><a href="#测试随机数的代码" class="headerlink" title="测试随机数的代码"></a>测试随机数的代码</h1><p><strong>测试方法：</strong></p><blockquote><p>这个进行了多轮随机<br>p1 &#x3D; Int(1 + (10) * Rnd())   ‘Rnd()分别修改为 rnd(-1)   rnd(0)  rnd(1)  rnd(999) 看效果</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">Private p1</span><br><span class="line">Private s1, s2, s3, s4, s5, s6, s7, s8, s9, s10</span><br><span class="line">Private S</span><br><span class="line"> </span><br><span class="line">Sub tt1()</span><br><span class="line"> </span><br><span class="line">Call intial1</span><br><span class="line"> </span><br><span class="line">S &#x3D; 10000</span><br><span class="line">For i &#x3D; 1 To S</span><br><span class="line">Call RR1</span><br><span class="line">Call SS1</span><br><span class="line">&#39;    Debug.Print p1</span><br><span class="line">Next</span><br><span class="line">        </span><br><span class="line">   Call SS2</span><br><span class="line">End Sub</span><br><span class="line"> </span><br><span class="line">Function intial1() </span><br><span class="line">s1 &#x3D; 0</span><br><span class="line">s2 &#x3D; 0</span><br><span class="line">s3 &#x3D; 0</span><br><span class="line">s4 &#x3D; 0</span><br><span class="line">s5 &#x3D; 0</span><br><span class="line">s6 &#x3D; 0</span><br><span class="line">s7 &#x3D; 0</span><br><span class="line">s8 &#x3D; 0</span><br><span class="line">s9 &#x3D; 0</span><br><span class="line">s10 &#x3D; 0</span><br><span class="line">End Function</span><br><span class="line"> </span><br><span class="line">Function SS2()</span><br><span class="line">  Debug.Print &quot;随到1的平均次数是&#x3D; &quot; &amp; s1 &#x2F; S &amp; &quot; s1&#x3D;&quot; &amp; s1</span><br><span class="line">  Debug.Print &quot;随到2的平均次数是&#x3D; &quot; &amp; s2 &#x2F; S &amp; &quot; s2&#x3D;&quot; &amp; s2</span><br><span class="line">  Debug.Print &quot;随到3的平均次数是&#x3D; &quot; &amp; s3 &#x2F; S &amp; &quot; s3&#x3D;&quot; &amp; s3</span><br><span class="line">  Debug.Print &quot;随到4的平均次数是&#x3D; &quot; &amp; s4 &#x2F; S &amp; &quot; s4&#x3D;&quot; &amp; s4</span><br><span class="line">  Debug.Print &quot;随到5的平均次数是&#x3D; &quot; &amp; s5 &#x2F; S &amp; &quot; s5&#x3D;&quot; &amp; s5</span><br><span class="line">  Debug.Print &quot;随到6的平均次数是&#x3D; &quot; &amp; s6 &#x2F; S &amp; &quot; s6&#x3D;&quot; &amp; s6</span><br><span class="line">  Debug.Print &quot;随到7的平均次数是&#x3D; &quot; &amp; s7 &#x2F; S &amp; &quot; s7&#x3D;&quot; &amp; s7</span><br><span class="line">  Debug.Print &quot;随到8的平均次数是&#x3D; &quot; &amp; s8 &#x2F; S &amp; &quot; s8&#x3D;&quot; &amp; s8</span><br><span class="line">  Debug.Print &quot;随到9的平均次数是&#x3D; &quot; &amp; s9 &#x2F; S &amp; &quot; s9&#x3D;&quot; &amp; s9</span><br><span class="line">  Debug.Print &quot;随到10的平均次数是&#x3D; &quot; &amp; s10 &#x2F; S &amp; &quot; s10&#x3D;&quot; &amp; s10</span><br><span class="line"> </span><br><span class="line">End Function</span><br><span class="line"> </span><br><span class="line">Function RR1()</span><br><span class="line"> </span><br><span class="line">Randomize</span><br><span class="line">p1 &#x3D; Int(1 + (10) * Rnd())   &#39;Rnd()分别修改为 rnd(-1)   rnd(0)  rnd(1)  rnd(999) 看效果</span><br><span class="line">&#39;Debug.Print p1</span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Function SS1()</span><br><span class="line"> </span><br><span class="line">Select Case p1</span><br><span class="line">   Case Is &#x3D; 1</span><br><span class="line">  s1 &#x3D; s1 + 1</span><br><span class="line">   Case Is &#x3D; 2</span><br><span class="line">  s2 &#x3D; s2 + 1</span><br><span class="line">   Case Is &#x3D; 3</span><br><span class="line">  s3 &#x3D; s3 + 1</span><br><span class="line">   Case Is &#x3D; 4</span><br><span class="line">  s4 &#x3D; s4 + 1</span><br><span class="line">   Case Is &#x3D; 5</span><br><span class="line">  s5 &#x3D; s5 + 1</span><br><span class="line">   Case Is &#x3D; 6</span><br><span class="line">  s6 &#x3D; s6 + 1</span><br><span class="line">   Case Is &#x3D; 7</span><br><span class="line">  s7 &#x3D; s7 + 1</span><br><span class="line">   Case Is &#x3D; 8</span><br><span class="line">  s8 &#x3D; s8 + 1</span><br><span class="line">   Case Is &#x3D; 9</span><br><span class="line">  s9 &#x3D; s9 + 1</span><br><span class="line">   Case Is &#x3D; 10</span><br><span class="line">  s10 &#x3D; s10 + 1</span><br><span class="line">End Select</span><br><span class="line"> </span><br><span class="line">End Function</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/xuemanqianshan/article/details/120367890">VBA的随机数生成：整数范围内随机（更好些），小数范围内随机</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 随机数生成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA窗体相关设置汇总</title>
      <link href="/posts/2061956688.html"/>
      <url>/posts/2061956688.html</url>
      
        <content type="html"><![CDATA[<h1 id="VBA去掉窗体的背景图片"><a href="#VBA去掉窗体的背景图片" class="headerlink" title="VBA去掉窗体的背景图片"></a>VBA去掉窗体的背景图片</h1><ul><li>解决办法1：在窗体中属性里找 picture，选中（Bitmap），然后 del 就可以清除</li><li>解决办法2：在代码里添加代码：Me.Picture &#x3D; Nothing</li></ul><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/623726551390256772.html">在VB中怎么去掉窗体的背景图片？</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片 </tag>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA命令按钮设置为透明</title>
      <link href="/posts/2992967553.html"/>
      <url>/posts/2992967553.html</url>
      
        <content type="html"><![CDATA[<h1 id="BackStyle-属性"><a href="#BackStyle-属性" class="headerlink" title="BackStyle 属性"></a>BackStyle 属性</h1><blockquote><p>使用 BackStyle 属性可以指定控件是否透明。Byte 型，可读写。<br>expression.BackStyle<br>expression     必需。返回“应用于”列表中的一个对象的表达式。</p></blockquote><ul><li>BackStyle 属性使用下列设置：</li></ul><table><thead><tr><th><strong>设置</strong></th><th><strong>Visual Basic</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>普通</td><td>1</td><td>（除了<a href="http://www.office-cn.net/t/acvba/html_acprobackstyle.htm">选项组</a>之外，其余控件都默认为该设置）。控件内部的颜色由 <a href="http://www.office-cn.net/t/acvba/html_acprobackcolor.htm">BackColor</a> 属性决定。</td></tr><tr><td>透明</td><td>0</td><td>（选项组的默认设置）。控件是透明的，控件后面的窗体或报表颜色可见。</td></tr></tbody></table><h1 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h1><ul><li>命令按钮不像Label，IMage那样可以简单的设置为透明的属性的，Label，Image这样的控件再做的时候都提供了Backstyle这个属性设置，从而可以很简单的修改它们的透明性质，但是Button这样的命令按钮却没有提供，</li></ul><p><strong>因此想设计一个透明的命令按钮常用的有三种做法:</strong></p><ul><li>1.用标签Label来替代命令按钮来执行命令功能，把它设置为透明的即可，但这种方法的缺点是label是平面的，不好看;</li><li>2.用Image来替代命令按钮来执行命令功能，用它是非常灵活的，效果极好，最常用，因为它本身有个Backstyle属性，从而可以将它设置为透明的，另外做一个或者找一个漂亮的图片加在里边就行了，图片是什么效果的做出来的按钮就是什么效果的;</li><li>3.第3种就有些复杂，不常用，且比较难，就是继承VB提供的按钮，然后自己再他的基础上给你编写Backstyle的属性，也就是做一个控件了，这个实用性就很低了，不过有时间可以试着做一下。</li></ul><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://www.office-cn.net/t/acvba/html_acprobackstyle.htm">BackStyle 属性</a></li><li><a href="https://zhidao.baidu.com/question/544324686.html">VB中的命令按钮怎么设置为透明的？</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 命令按钮 </tag>
            
            <tag> 透明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL语句之一(WHERE条件查询)</title>
      <link href="/posts/3624342376.html"/>
      <url>/posts/3624342376.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>SQL WHERE是SQL的条件查询语句。SQL查询里的条件指定了要返回满足什么标准的信息。条件的值是TRUE或FALSE，从而限制查询中获取的数据。WHERE子句用于给查询添加条件，从而去除用户不需要的数据。WHERE自己本身比较简单，本文更多地介绍WHERE子句与比较运算符、逻辑运算符和通配符这三种方式对检索条件进行过滤。<br>WHERE子句里可以有多个条件，它们之间以操作符 AND 或 OR 连接。</p></blockquote><h1 id="SQL-WHERE-语法"><a href="#SQL-WHERE-语法" class="headerlink" title="SQL WHERE 语法"></a>SQL WHERE 语法</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name operator <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><h1 id="SQL-WHERE-子句比较运算符"><a href="#SQL-WHERE-子句比较运算符" class="headerlink" title="SQL WHERE 子句比较运算符"></a>SQL WHERE 子句比较运算符</h1><blockquote><p><strong>在SQL中，我们可以使用WHERE子句对条件进行筛选，在此之前，你需要了解WHERE子句中的比较运算符。这些比较运算符的含义你可以参见下面这张表格：</strong></p></blockquote><p>|   含义   |  运算符    |<br>| :–: | :–: |<br>|  等于    |   &#x3D;   |<br>|   不等于   |  &lt;&gt;或!&#x3D;    |<br>|   小于   |   &lt;   |<br>|   小于等于（不大于）   |   &lt;&#x3D;或者!&gt;   |<br>|   大于   |  &gt;    |<br>|   大于等于（不小于）   |  &gt;&#x3D;或者!&lt;    |<br>|   不小于   |  !&lt;    |<br>|   在指定的两个数值之间   |   BETWEEN   |<br>|    为空值  |   IS NULL   |</p><ul><li>实际上你能看到，同样的含义可能会有多种表达方式，比如小于等于，可以是（&lt;&#x3D;），也可以是不大于（!&gt;）。同样不等于，可以用（&lt;&gt;），也可以用（!&#x3D;），它们的含义都是相同的，但这些符号的顺序都不能颠倒，比如你不能写（&#x3D;&lt;）。</li></ul><blockquote><p><strong>需要注意的是，你需要查看使用的DBMS是否支持，不同的DBMS支持的运算符可能是不同的，比如Access不支持（!&#x3D;），不等于应该使用（&lt;&gt;）。在MySQL中，不支持（!&gt;）（!&lt;）等。</strong></p></blockquote><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><ul><li>极客教程在<a href="https://geek-docs.com/sql/sql-tutorials/sql-select.html">SQL 查询</a>文章中使用了<a href="https://github.com/eyeandroid/sql_heros_data">heros数据表</a>，我们还是以这张表格做练习。下面我们通过比较运算符对王者荣耀的英雄属性进行条件筛选。</li></ul><blockquote><p>WHERE子句的基本格式是：SELECT ……(列名) FROM ……(表名) WHERE ……(子句条件)</p></blockquote><ol><li>比如我们想要查询所有最大生命值大于6000的英雄：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（41条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-02.png"><ol start="2"><li>想要查询所有最大生命值在5399到6811之间的英雄：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="keyword">BETWEEN</span> <span class="number">5399</span> <span class="keyword">AND</span> <span class="number">6811</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（41条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-03.png"><blockquote><p><strong>需要注意的是hp_max可以取值到最小值和最大值，即5399和6811。</strong></p></blockquote><ol start="3"><li>我们也可以对heros表中的hp_max字段进行空值检查。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果为空，说明heros表中的hp_max字段没有存在空值的数据行。</li></ul><h1 id="SQL-WHERE-子句逻辑运算符"><a href="#SQL-WHERE-子句逻辑运算符" class="headerlink" title="SQL WHERE 子句逻辑运算符"></a>SQL WHERE 子句逻辑运算符</h1><blockquote><p><strong>如果我们存在多个WHERE条件子句，可以使用逻辑运算符：</strong></p></blockquote><p>|   含义   |  逻辑运算符    |<br>| :–: | :–: |<br>|  并且    |   AND   |<br>|   或者   |  OR    |<br>|   在指定条件范围内   |   IN   |<br>|   非（否定）   |  NOT   |</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li>我们还是通过例子来看下这些逻辑运算符的使用，同样采用heros这张表的数据查询。</li></ul><ol><li>假设想要筛选最大生命值大于6000，最大法力大于1700的英雄，然后按照最大生命值和最大法力值之和从高到低进行排序。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span> <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（23条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-05.png"><ol start="2"><li>如果AND和OR同时存在WHERE子句中会是怎样的呢？假设我们想要查询最大生命值加最大法力值大于8000的英雄，或者最大生命值大于6000并且最大法力值大于1700的英雄。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> (hp_max<span class="operator">+</span>mp_max) <span class="operator">&gt;</span> <span class="number">8000</span> <span class="keyword">OR</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span> <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（33条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-06.png"><ul><li>你能看出来相比于上一个条件查询，这次的条件查询多出来了10个英雄，这是因为我们放宽了条件，允许最大生命值+最大法力值大于8000的英雄显示出来。</li></ul><blockquote><p><strong>另外你需要注意到，当WHERE子句中同时存在OR和AND的时候，AND执行的优先级会更高，也就是说SQL会优先处理AND操作符，然后再处理OR操作符。</strong></p></blockquote><ol start="3"><li>如果我们对这条查询语句OR两边的条件增加一个括号，结果会是怎样的呢？<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> ((hp_max<span class="operator">+</span>mp_max) <span class="operator">&gt;</span> <span class="number">8000</span> <span class="keyword">OR</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span>) <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-07.png"><blockquote><p><strong>所以当WHERE子句中同时出现AND和OR操作符的时候，你需要考虑到执行的先后顺序，也就是两个操作符执行的优先级。一般来说()优先级最高，其次优先级是AND，然后是OR。</strong></p></blockquote><ol start="4"><li>如果我想要查询主要定位或者次要定位是法师或是射手的英雄，同时英雄的上线时间不在2016-01-01到2017-01-01之间。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, role_main, role_assist, hp_max, mp_max, birthdate</span><br><span class="line"><span class="keyword">FROM</span> heros </span><br><span class="line"><span class="keyword">WHERE</span> (role_main <span class="keyword">IN</span> (<span class="string">&#x27;法师&#x27;</span>, <span class="string">&#x27;射手&#x27;</span>) <span class="keyword">OR</span> role_assist <span class="keyword">IN</span> (<span class="string">&#x27;法师&#x27;</span>, <span class="string">&#x27;射手&#x27;</span>)) </span><br><span class="line"><span class="keyword">AND</span> <span class="type">DATE</span>(birthdate) <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="string">&#x27;2016-01-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2017-01-01&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max <span class="operator">+</span> mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>你能看到我把WHERE子句分成了两个部分。第一部分是关于主要定位和次要定位的条件过滤，使用的是role_main in (‘法师’, ‘射手’) OR role_assist in (‘法师’, ‘射手’)。这里用到了IN逻辑运算符，同时role_main和role_assist是OR（或）的关系。</p></blockquote><ul><li><p>第二部分是关于上线时间的条件过滤。NOT代表否，因为我们要找到不在2016-01-01到2017-01-01之间的日期，因此用到了NOT BETWEEN ‘2016-01-01’ AND ‘2017-01-01’。同时我们是在对日期类型数据进行检索，所以使用到了DATE函数，将字段birthdate转化为日期类型再进行比较。关于日期的操作，可以参考极客教程提供的。</p></li><li><p>这是运行结果（6条记录）：</p></li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-08.png"><h1 id="SQL-WHERE-子句使用通配符进行过滤"><a href="#SQL-WHERE-子句使用通配符进行过滤" class="headerlink" title="SQL WHERE 子句使用通配符进行过滤"></a>SQL WHERE 子句使用通配符进行过滤</h1><blockquote><p>刚才讲解的条件过滤都是对已知值进行的过滤，还有一种情况是我们要检索文本中包含某个词的所有数据，这里就需要使用通配符。通配符就是我们用来匹配值的一部分的特殊字符。这里我们需要使用到LIKE操作符。</p></blockquote><ol><li>如果我们想要匹配任意字符串出现的任意次数，需要使用（%）通配符。比如我们想要查找英雄名中包含“太”字的英雄都有哪些：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%太%&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（2条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-09.png"><blockquote><p><strong>需要说明的是不同DBMS对通配符的定义不同，在Access中使用的是（*）而不是（%）。另外关于字符串的搜索可能是需要区分大小写的，比如’liu%’就不能匹配上’LIU BEI’。具体是否区分大小写还需要考虑不同的DBMS以及它们的配置。</strong></p></blockquote><ol start="2"><li>如果我们想要匹配单个字符，就需要使用下划线(_)通配符。（%）和（_）的区别在于</li></ol><ul><li>（<code>%</code>）代表一个或多个字符</li><li>（<code>_</code>）只代表一个字符</li></ul><p>比如我们想要查找英雄名除了第一个字以外，包含“太”字的英雄有哪些。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;_%太%&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果（1条记录）：</li></ul><p><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-10.png" alt="SQL WHERE 条件查询"></p><blockquote><p>因为太乙真人的太是第一个字符，而_%太%中的太不是在第一个字符，所以匹配不到“太乙真人”，只可以匹配上“东皇太一”。</p></blockquote><ul><li>同样需要说明的是，在Access中使用（<code>?</code>）来代替（<code>_</code>），而且在DB2中是不支持通配符（<code>_</code>）的，因此你需要在使用的时候查阅相关的DBMS文档。</li></ul><blockquote><p>你能看出来通配符还是很有用的，尤其是在进行字符串匹配的时候。不过在实际操作过程中，我还是建议你尽量少用通配符，因为它需要消耗数据库更长的时间来进行匹配。即使你对LIKE检索的字段进行了索引，索引的价值也可能会失效。如果要让索引生效，那么LIKE后面就不能以（<code>%</code>）开头，比如使用<code>LIKE &#39;%太%&#39;</code>或<code>LIKE &#39;%太&#39;</code>的时候就会对全表进行扫描。如果使用<code>LIKE &#39;太%&#39;</code>，同时检索的字段进行了索引的时候，则不会进行全表扫描。</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://geek-docs.com/sql/sql-tutorials/sql-select-where.html">SQL WHERE 条件查询（极客教程）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程来 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
            <tag> WHERE </tag>
            
            <tag> 条件查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA数据处理之二(日期处理)</title>
      <link href="/posts/2278476872.html"/>
      <url>/posts/2278476872.html</url>
      
        <content type="html"><![CDATA[<h1 id="日期基本处理"><a href="#日期基本处理" class="headerlink" title="日期基本处理"></a>日期基本处理</h1><h2 id="定义一个日期"><a href="#定义一个日期" class="headerlink" title="定义一个日期"></a>定义一个日期</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v_date = <span class="type">Date</span>  <span class="comment">&#x27; 今天，格式为：yyyy-MM-dd</span></span><br><span class="line">v_time = Now   <span class="comment">&#x27; 此时，格式为：yyyy-MM-dd HH:mm:ss</span></span><br><span class="line">v_date2 = #<span class="string">&quot;2021-06-01&quot;</span> <span class="comment">&#x27;指定时间</span></span><br><span class="line">v_date3 = <span class="built_in">CDate</span>(<span class="string">&quot;2021-06-01&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 2022-01-28</span></span><br><span class="line">Format(<span class="type">Date</span>, <span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line"><span class="comment">&#x27; 获取当天的年周数，格式为长格式，例如第一周显示为01</span></span><br><span class="line">v_week_num = WorksheetFunction.WeekNum(<span class="type">Date</span>, vbMonday)</span><br><span class="line">Format(v_week_num, <span class="string">&quot;00&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="日期处理"><a href="#日期处理" class="headerlink" title="日期处理"></a>日期处理</h2><ul><li>对日期进行处理，得到想要的目标日期</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 今天</span></span><br><span class="line">today = <span class="type">Date</span></span><br><span class="line"><span class="comment">&#x27; 昨天</span></span><br><span class="line">yesterday = today - <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 本周一 注：在Excel中，周日是一周的第一天</span></span><br><span class="line">monday = today - Weekday(today) + <span class="number">2</span></span><br><span class="line"><span class="comment">&#x27; 本月第一天</span></span><br><span class="line">monthFirstDay = lastMonday - Day(lastMonday) + <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 本月最后一天</span></span><br><span class="line">targetDate = DateSerial(Year(targetDate), Month(targetDate) + <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment">&#x27; 今天是一年的第几周，以周一作为本周的第一天</span></span><br><span class="line">weekNum = WorksheetFunction.weekNum(today, vbMonday)</span><br></pre></td></tr></table></figure><h2 id="日期比较"><a href="#日期比较" class="headerlink" title="日期比较"></a>日期比较</h2><ul><li>日期是可以直接比较和相减的，相减的间隔为时间的间隔。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 今天</span></span><br><span class="line">today = <span class="type">Date</span></span><br><span class="line"><span class="comment">&#x27; 昨天</span></span><br><span class="line">yesterday = today - <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 日期之间也可以比较和加减</span></span><br><span class="line">today &gt; yesterday  <span class="comment">&#x27; True</span></span><br><span class="line">today - yesterday  <span class="comment">&#x27; 1 ，相隔1一天</span></span><br></pre></td></tr></table></figure><h2 id="计算时间间隔"><a href="#计算时间间隔" class="headerlink" title="计算时间间隔"></a>计算时间间隔</h2><ul><li>DateDiff 函数可以用于计算时间的间隔。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> tt1()</span><br><span class="line">    <span class="keyword">Dim</span> d1, d2 <span class="keyword">As</span> <span class="type">Date</span></span><br><span class="line">    d1 = <span class="literal">#11/21/2021#</span></span><br><span class="line">    d2 = <span class="literal">#12/1/2022#</span></span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; (d2 - d1) &amp; <span class="string">&quot;天&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;d&quot;</span>, d1, d2) &amp; <span class="string">&quot;天&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;m&quot;</span>, d1, d2) &amp; <span class="string">&quot;月&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;yyyy&quot;</span>, d1, d2) &amp; <span class="string">&quot;年&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;q&quot;</span>, d1, d2) &amp; <span class="string">&quot;季&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;w&quot;</span>, d1, d2) &amp; <span class="string">&quot;周&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;h&quot;</span>, d1, d2) &amp; <span class="string">&quot;小时&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;n&quot;</span>, d1, d2) &amp; <span class="string">&quot;分种&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;s&quot;</span>, d1, d2) &amp; <span class="string">&quot;秒&quot;</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="计算耗时"><a href="#计算耗时" class="headerlink" title="计算耗时"></a>计算耗时</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">startTime = Time</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27; 业务数据处理</span></span><br><span class="line">MsgBox (<span class="string">&quot;运行此流程共耗时：&quot;</span> &amp; DateDiff(<span class="string">&quot;s&quot;</span>, startTime, Time) &amp; <span class="string">&quot;秒&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27; 后台打印使用的时间</span></span><br><span class="line">Debug.Print DateDiff(<span class="string">&quot;s&quot;</span>, startTime, Time) &amp; <span class="string">&quot;秒&quot;</span></span><br></pre></td></tr></table></figure><h1 id="vba日期和时间函数汇总和代码"><a href="#vba日期和时间函数汇总和代码" class="headerlink" title="vba日期和时间函数汇总和代码"></a>vba日期和时间函数汇总和代码</h1><h2 id="第一，vba日期和时间函数的基本用法"><a href="#第一，vba日期和时间函数的基本用法" class="headerlink" title="第一，vba日期和时间函数的基本用法"></a>第一，vba日期和时间函数的基本用法</h2><blockquote><p>Excel中vba日期函数和时间函数分别是DATE和TIME。<br>VBA提供了三个无参数函数：Date、Time、Now，分别返回当前电脑系统的日期、时间、日期+时间。<br>下面的代码我们以三个消息框来结合日期和时间函数，分别提示当前的日期、时间。</p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> vba时间和日期函数()</span><br><span class="line">    MsgBox <span class="type">Date</span></span><br><span class="line">    MsgBox Time</span><br><span class="line">    MsgBox Now</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="第二，使用vba日期和时间函数修改系统信息"><a href="#第二，使用vba日期和时间函数修改系统信息" class="headerlink" title="第二，使用vba日期和时间函数修改系统信息"></a>第二，使用vba日期和时间函数修改系统信息</h2><ul><li>下面这段代码将电脑右下角的日期和时间修改为2011年1月1日21:50:00。<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 修改时间和日期()</span><br><span class="line">  Time = <span class="string">&quot;21:50:00&quot;</span></span><br><span class="line">  <span class="type">Date</span> = <span class="string">&quot;2011年1月1日&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒"><a href="#第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒" class="headerlink" title="第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒"></a>第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> SmpYearHour()</span><br><span class="line">    <span class="comment">&#x27;以对话框显示当前日期的年、月、日</span></span><br><span class="line">    MsgBox <span class="string">&quot;当前日期：&quot;</span> &amp; <span class="type">Date</span> &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;年：&quot;</span> &amp; Year(<span class="type">Date</span>) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;月：&quot;</span> &amp; Month(<span class="type">Date</span>) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;日：&quot;</span> &amp; Day(<span class="type">Date</span>)</span><br><span class="line">    <span class="comment">&#x27;以对话框显示当前时间的时、分、秒</span></span><br><span class="line">    MsgBox <span class="string">&quot;当前时间：&quot;</span> &amp; Time &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;时：&quot;</span> &amp; Hour(Time) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;分：&quot;</span> &amp; Minute(Time) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;秒：&quot;</span> &amp; Second(Time)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="第四，其余的vba日期和时间函数列表"><a href="#第四，其余的vba日期和时间函数列表" class="headerlink" title="第四，其余的vba日期和时间函数列表"></a>第四，其余的vba日期和时间函数列表</h2><p>| 函数  |  说明 |<br>| —- | —- |<br>| Timer | 返回一个 Single，代表从午夜开始到现在经过的秒数。     |<br>| TimeSerial(hour, minute, second) | 返回一个 Variant (Date)，包含具有具体时、分、秒的时间。     |<br>| DateDiff(interval, date1, date2[, firstdayofweek[, firstweekofyear]]) | 返回 Variant (Long) 的值，表示两个指定日期间的时间间隔数目。     |<br>| Second(time) | 返回一个 Variant (Integer)，其值为 0 到 59 之间的整数，表示一分钟之中的某个秒。     |<br>| Minute(time) | 返回一个 Variant (Integer)，其值为 0 到 59 之间的整数，表示一小时中的某分钟。     |<br>| Hour(time) | 返回一个 Variant (Integer)，其值为 0 到 23 之间的整数，表示一天之中的某一钟点。     |<br>| Day(date) | 返回一个 Variant (Integer)，其值为 1 到 31 之间的整数，表示一个月中的某一日。     |<br>| Month(date) |  返回一个 Variant (Integer)，其值为 1 到 12 之间的整数，表示一年中的某月。    |<br>| Year(date) |  返回 Variant (Integer)，包含表示年份的整数。    |<br>| Weekday(date, [firstdayofweek]) |  返回一个 Variant (Integer)，包含一个整数，代表某个日期是星期几    |</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/m1090760001/article/details/122464601">VBA实战(10) - 日期处理汇总</a></li><li><a href="https://blog.csdn.net/w57w57w57/article/details/43772081">vba日期和时间函数汇总和代码</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 日期处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA字符串</title>
      <link href="/posts/1296505440.html"/>
      <url>/posts/1296505440.html</url>
      
        <content type="html"><![CDATA[<ul><li>字符串是一个字符序列，可以由字母，数字，特殊字符或全部字符组成。 如果一个变量被包含在双引号””中，则被认为是一个字符串。</li></ul><p><strong>语法：</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable_name = <span class="string">&quot;this is a string&quot;</span></span><br></pre></td></tr></table></figure><p><strong>简单示例：</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;string&quot;</span>   <span class="comment">&#x27; Only Alphabets</span></span><br><span class="line">str2 = <span class="string">&quot;132.45&quot;</span>   <span class="comment">&#x27; Only Numbers</span></span><br><span class="line">str3 = <span class="string">&quot;!@#$;*&quot;</span>  <span class="comment">&#x27; Only Special Characters</span></span><br><span class="line">Str4 = <span class="string">&quot;Asc23@#&quot;</span>  <span class="comment">&#x27; Has all the above</span></span><br></pre></td></tr></table></figure><p><strong>字符串函数:</strong></p><p>预定义的VBA字符串函数可以帮助开发人员非常有效地处理字符串。以下是VBA中支持的字符串的方法。请点击每个方法来详细了解。</p><table><thead><tr><th>编号</th><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><a href="http://www.yiibai.com/vba/vba_instr_function.html">InStr</a></td><td>返回指定子字符串的第一个匹配项。从左到右搜索。</td></tr><tr><td>2</td><td><a href="http://www.yiibai.com/vba/vba_instrrev_function.html">InstrRev</a></td><td>返回指定子字符串的第一个匹配项。从右到左搜索。</td></tr><tr><td>3</td><td><a href="http://www.yiibai.com/vba/vba_lcase_function.html">Lcase</a></td><td>返回指定字符串的小写字母。</td></tr><tr><td>4</td><td><a href="http://www.yiibai.com/vba/vba_ucase_function.html">Ucase</a></td><td>返回指定字符串转为大写字母的形式。</td></tr><tr><td>5</td><td><a href="http://www.yiibai.com/vba/vba_left_function.html">Left</a></td><td>返回在左侧指定数量字符的字符串。</td></tr><tr><td>6</td><td><a href="http://www.yiibai.com/vba/vba_right_function.html">Right</a></td><td>返回在右侧指定数量字符的字符串</td></tr><tr><td>7</td><td><a href="http://www.yiibai.com/vba/vba_mid_function.html">Mid</a></td><td>根据指定的参数从字符串中返回特定数量的字符。</td></tr><tr><td>8</td><td><a href="http://www.yiibai.com/vba/vba_ltrim_function.html">Ltrim</a></td><td>删除指定字符串左侧的空格后返回一个字符串。</td></tr><tr><td>9</td><td><a href="http://www.yiibai.com/vba/vba_rtrim_function.html">Rtrim</a></td><td>删除指定字符串右侧的空格后返回一个字符串。</td></tr><tr><td>10</td><td><a href="http://www.yiibai.com/vba/vba_trim_function.html">Trim</a></td><td>删除开头和结尾空格后返回一个字符串值。</td></tr><tr><td>11</td><td><a href="http://www.yiibai.com/vba/vba_len_function.html">Len</a></td><td>返回给定字符串的长度。</td></tr><tr><td>12</td><td><a href="http://www.yiibai.com/vba/vba_replace_function.html">Replace</a></td><td>用另一个字符串替换字符串后返回字符串。</td></tr><tr><td>13</td><td><a href="http://www.yiibai.com/vba/vba_space_function.html">Space</a></td><td>用指定数量的空格填充字符串。</td></tr><tr><td>14</td><td><a href="http://www.yiibai.com/vba/vba_strcomp_function.html">StrComp</a></td><td>比较两个指定的字符串后返回一个整数值。</td></tr><tr><td>15</td><td><a href="http://www.yiibai.com/vba/vba_string_function.html">String</a></td><td>返回指定次数的字符的字符串。</td></tr><tr><td>16</td><td><a href="http://www.yiibai.com/vba/vba_strreverse_function.html">StrReverse</a></td><td>反转给定字符串的字符序列后，返回一个字符串。</td></tr></tbody></table><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.yiibai.com/vba/vba_strings.html">VBA字符串)</a></li><li><a href="https://www.yiibai.com/vba">VBA教程</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA数据处理之一(字符串)</title>
      <link href="/posts/3177018411.html"/>
      <url>/posts/3177018411.html</url>
      
        <content type="html"><![CDATA[<p>假设有字符串：“world2q3423j;;3254&lt;sflskjdf”<br>现在要获取每个字符到myChars数组，得到这样的结果：</p><p>myChars(1) &#x3D; w<br>myChars(2) &#x3D; o</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> aaa()</span><br><span class="line"><span class="keyword">Dim</span> myChars()</span><br><span class="line">abc = <span class="string">&quot;world2q3423j;;3254&lt;sflskjdf&quot;</span></span><br><span class="line"><span class="keyword">ReDim</span> myChars(<span class="number">1</span> <span class="keyword">To</span> Len(abc))</span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> Len(abc)</span><br><span class="line">myChars(n) = <span class="keyword">Mid</span>(abc, n, <span class="number">1</span>)</span><br><span class="line">Cells(n, <span class="number">1</span>) = myChars(n)</span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/304450382179355164.html">VBA: 如何最好地获取一个字符串里的每个字符？)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA窗体使用图片</title>
      <link href="/posts/2635706068.html"/>
      <url>/posts/2635706068.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>今天学习了一个窗体image控件，发现可以实现客户资料的加载显示功能，目前学到的一个是加载(.jpg)格式类图片，具体我想可以在文件夹中加载一些客户产品图片、客户营业执照、员工照片等强调可视化内容的资料。</strong></p></blockquote><ul><li>显示效果如图：</li></ul><img src="https://pics1.baidu.com/feed/810a19d8bc3eb135a0c6a2ca40babddbfc1f44ee.png?token=af0e2983d672fca858973fc571d10818&s=0020DD1417664F0DC875F850030040F9"><p><strong>代码很简单，只有一句话:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> TextBox1_Change()</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">Image1.Picture = LoadPicture(ThisWorkbook.Path &amp; <span class="string">&quot;\&quot;</span> &amp; TextBox1.<span class="keyword">Text</span> &amp; <span class="string">&quot;.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line">Image1.PictureSizeMode = fmPictureSizeModeZoom</span><br><span class="line"></span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://baijiahao.baidu.com/s?id=1692279467271579081&wfr=spider&for=pc">VBA练习七(窗体图片加载)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片 </tag>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA判断活动窗体</title>
      <link href="/posts/462997477.html"/>
      <url>/posts/462997477.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>其他思路：获得活动窗口句柄，进程外用GetForgroundWindow，进程内用GetActiveWindow</strong></p></blockquote><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> FormIsActive(sName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> VBA.UserForms.Count - <span class="number">1</span></span><br><span class="line">        FormIsActive = UserForms(i).Name = sName</span><br><span class="line">        <span class="keyword">If</span> FormIsActive <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserfrom()</span><br><span class="line">    Userform1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;测试: 运行LoadUserfrom前是否得到False,而运行LoadUserfrom后是否得到True的结果?</span></span><br><span class="line"><span class="keyword">Sub</span> Test()</span><br><span class="line">    MsgBox FormIsActive(<span class="string">&quot;UserForm1&quot;</span>), <span class="number">64</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h1 id="方法二-改进一"><a href="#方法二-改进一" class="headerlink" title="方法二(改进一)"></a>方法二(改进一)</h1><p>Take a look at attached file and play with the three buttons.</p><p>Let me know if you still have question.</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> FormIsActive(sName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UserForms.Count - <span class="number">1</span></span><br><span class="line">        FormIsActive = UserForms(i).Name = sName</span><br><span class="line">        <span class="keyword">If</span> FormIsActive <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserform1()</span><br><span class="line"><span class="keyword">If</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm2 is active so we&#x27;re unloading it NOW!&quot;</span></span><br><span class="line">    Unload UserForm2</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    UserForm1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserform2()</span><br><span class="line">    UserForm2.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> Test()</span><br><span class="line"><span class="keyword">If</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="built_in">And</span> <span class="built_in">Not</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm1 is Active! UserForm2 is not!&quot;</span></span><br><span class="line">   <span class="keyword">ElseIf</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="built_in">And</span> <span class="built_in">Not</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm2 is Active! UserForm1 is not!&quot;</span></span><br><span class="line">   <span class="keyword">ElseIf</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="built_in">And</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm1 and UserForm2 are both Active!&quot;</span></span><br><span class="line">   <span class="keyword">Else</span></span><br><span class="line">    MsgBox <span class="string">&quot;No active userform!&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p><a href="http://www.excelpx.com/forum.php?mod=attachment&aid=MjY0MTMwfDE1NDQzZWFhfDE2NTU4MDEwMjV8MHwyOTUxOTY=">UserForm.zip</a></p><h1 id="最后方法"><a href="#最后方法" class="headerlink" title="最后方法"></a>最后方法</h1><blockquote><p>我现在用一个公共变量，就可以知道是否有窗体是活动</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://www.excelpx.com/thread-295196-1-1.html">【求助】怎样判断一个窗体是否在活动状态？</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 窗体活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA实现进度条显示</title>
      <link href="/posts/585123975.html"/>
      <url>/posts/585123975.html</url>
      
        <content type="html"><![CDATA[<h1 id="窗体中的进度条控件"><a href="#窗体中的进度条控件" class="headerlink" title="窗体中的进度条控件"></a>窗体中的进度条控件</h1><blockquote><p>工具箱默认情况下没有进度条控件，需在“工具”-&gt;“附加控件”里面添加Microsoft ProgressBar Control,version 6.0，即可在工具箱里面看到进度条控件。</p></blockquote><ol><li>添加进度条控件</li></ol><img src="https://img-blog.csdn.net/20160323194238114?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><ol start="2"><li>创建一个窗体UserForm1，添加一个进度条ProgressBar1和一个标签Label1，即可可以完成VBA进度条设计。</li></ol><ul><li>eg：经常在一个循环运算中用到进度条，此时可以将循环运算在窗体UserForm1里面进行，即可将循环变量嵌入到ProgressBar1里面进行精准进度条设计。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Activate()</span><br><span class="line"><span class="keyword">Dim</span> n <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">n = <span class="number">3000</span></span><br><span class="line">ProgressBar1.Min = <span class="number">1</span></span><br><span class="line">ProgressBar1.Max = n</span><br><span class="line">Label1.Caption = <span class="string">&quot;0%&quot;</span></span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> <span class="number">3000</span></span><br><span class="line">ProgressBar1.Value = Str(n)</span><br><span class="line">Label1.Caption = Round(n / ProgressBar1.Max, <span class="number">2</span>) * <span class="number">100</span> &amp; <span class="string">&quot;%&quot;</span></span><br><span class="line">DoEvents</span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line"><span class="comment">&#x27;Unload UserForm1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdn.net/20160323194829476?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"># 在 Excel 下边显示进度条</span><br><span class="line"></span><br><span class="line">- vba处理execl数据时，如果数据量比较大时，execl会执行时间较长，并且不容易看出来已执行的进度。</span><br><span class="line">应用execl的进度条，让执行进度更加一目了然。</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdnimg.cn/0a4482aa87054ba7a8185e3003e937de.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6I-y5pavRmFjZQ==,size_12,color_FFFFFF,t_70,g_se,x_16&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">**进度条代码:**</span><br><span class="line"></span><br><span class="line">```vb</span><br><span class="line"><span class="keyword">Function</span> GetProgress(curValue, maxValue)</span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Single</span>, j <span class="keyword">As</span> <span class="type">Integer</span>, s <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">i = maxValue / <span class="number">20</span></span><br><span class="line">j = curValue / i</span><br><span class="line"> </span><br><span class="line"><span class="keyword">For</span> m = <span class="number">1</span> <span class="keyword">To</span> j</span><br><span class="line">    s = s &amp; <span class="string">&quot;■&quot;</span></span><br><span class="line"><span class="keyword">Next</span> m</span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> <span class="number">20</span> - j</span><br><span class="line">    s = s &amp; <span class="string">&quot;□&quot;</span></span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line">GetProgress = s &amp; FormatNumber(curValue / maxValue * <span class="number">100</span>, <span class="number">2</span>) &amp; <span class="string">&quot;%&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><blockquote><p>调用代码</p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Application.StatusBar = GetProgress(i, maxRow)</span><br></pre></td></tr></table></figure><p>参数可以根据业务情况，自行传入。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/Gordennizaicunzai/article/details/50965964">VBA进度条</a></li><li><a href="https://blog.csdn.net/m0_60196931/article/details/122339473">VBA 处理数据的进度条实现</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 控件 </tag>
            
            <tag> VBA </tag>
            
            <tag> ProgressBar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA 鼠标浮上命令按钮有文字提示(ControlTipText)</title>
      <link href="/posts/3346834382.html"/>
      <url>/posts/3346834382.html</url>
      
        <content type="html"><![CDATA[<p>eg.假设 某一个按钮控件名为 commandbutton1,想做到 鼠标悬停在该控件上时，显示提示，提示内容为该控件的名称，可以用下列语句<br>commandbutton1.controltiptext &#x3D; “按钮名称为commandbutton1”</p><ul><li>以下来自excel的帮助文件</li></ul><hr><p>ControlTipText 属性<br>指定当用户将鼠标指针放在控件上但未按下时所显示的文本。<br>语法<br>object.ControlTipText [&#x3D; String]<br>ControlTipText 属性的语法有以下几个成分：<br>成分<br>object 必需。一个有效对象。<br>String 可选。当用户将鼠标指针放在控件上时所显示的文本。<br>说明<br>ControlTipText 属性可为用户提供有关当前运行的窗体中某一控件的提示。该属性可在设计时间设定，但仅在运行时间由控件显示。<br>ControlTipText 的默认值为空字符串。此时，该控件将无任何提示。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/2011574656656416308.html">excel VBA 鼠标浮上命令按钮有文字提示</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 函数 </tag>
            
            <tag> ControlTipText </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA函数之一(Format格式化字符串)</title>
      <link href="/posts/4237796259.html"/>
      <url>/posts/4237796259.html</url>
      
        <content type="html"><![CDATA[<p>Format(值,格式(可选参数))</p><h1 id="一、数字格式："><a href="#一、数字格式：" class="headerlink" title="一、数字格式："></a>一、数字格式：</h1><ol><li><p>General Number：普通数字，可以用来去掉千位分隔号和无效 0 。<br>如：Format(“1,234,567.80”, “General Number”)&#x3D;”1234567.8”</p></li><li><p>Currency：货币类型，可添加千位分隔号和货币符号，保留两位小数点。<br>如：Format(1234567, “Currency”)&#x3D;”¥1,234,567.00”</p></li><li><p>Fixed：格式为带两位小数的数字。<br>如：Format(“123456”, “Fixed”)&#x3D;123456.00</p></li><li><p>Standard：标准，即带千位分隔号和两位小数。<br>如：Format(“123456”, “Standard”)&#x3D;123,456.00</p></li><li><p>Percent：带两位小数点的百分数。<br>如：Format(“123456”, “Percent”)&#x3D;12345600.00</p></li><li><p>Scientific：科学记数法。<br>如：Format(“1234567”, “Scientific”)&#x3D;1.23E+06</p></li><li><p>Yes&#x2F;No：当数值为非 0 数字时返回 Yes ，否则返回 No 。<br>“如：Format(-3.14, “Yes&#x2F;No”)&#x3D;”Yes”<br>Format(0, “Yes&#x2F;No”)&#x3D;”No”</p></li><li><p>True&#x2F;False：当数值为非 0 数字时返回 True ，否则返回 False 。<br>与第7点类似，这里不再举例。</p></li><li><p>On&#x2F;Off：当数值为非 0 数字时返回 On ，否则返回 Off 。<br>与第7点类似，这里不再举例。</p></li><li><p>“”或省略：返回原值，但去除了小数点前后的无效 0 。<br>如：Format(“0.1030”, “”)&#x3D;”.103”</p></li><li><p>0：占位格式化，不足位时补足 0 。<br>“如：Format(123, “0000”)&#x3D;”0123”<br>Format$(12.3, “0.00”)&#x3D;”12.30”</p></li><li><p>#：占位格式化，不足位时不补足 0 。<br>如：Format(123, “####”)&#x3D;123</p></li><li><p>%：转化为百分数，一个%代表乘以 100 。<br>如：Format(1.23, “0.00%”)&#x3D;123.00%<br>Format(1.23, “0.00%%”)&#x3D;12300.00%%</p></li><li><p>：强制显示某字符。<br>如：Format$(12.34, “RMB .00”)&#x3D;”RMB 12.34”</p></li><li><p>;(分号)：分段显示不同格式<br>比如要把正数显示为“正”，负数显示为“负”，0显示为“零”，参数为”正;负;零”<br>如：Format$(123, “正;负;零”)&#x3D;”正”<br>第1段为正数格式，第2段为负数格式，第3段为0格式。</p></li></ol><h1 id="二、日期和时间格式："><a href="#二、日期和时间格式：" class="headerlink" title="二、日期和时间格式："></a>二、日期和时间格式：</h1><ol><li>固定格式参数<br>General Date：基本类型<br>如：Format(“2010-5-1 9:8:5”, “General Date”)&#x3D;”2010&#x2F;5&#x2F;1 9:08:05”<br>Long Date：操作系统定义的长日期<br>如：Format(“2010-5-1 9:8:5”, “Long Date”)&#x3D;2010年5月1日<br>Medium Date：中日期<br>如：Format(“2010-5-1 9:8:5”, “Medium Date”)&#x3D;10-05-01<br>Short Date：操作系统定义的短日期<br>如：Format(“2010-5-1 9:8:5”, “Short Date”)&#x3D;2010-5-1<br>Long Time：操作系统定义的长时间<br>如：Format(“2010-5-1 9:8:5”, “Long Time”)&#x3D;9:08:05<br>Medium Time:带AM&#x2F;PM(上午&#x2F;下午)的12小时制，不带秒<br>如：Format(“2010-5-1 9:8:5”, “Medium Time”)&#x3D;09:08 上午<br>Short Time：24时制的时间，不带秒<br>如：Format(“2010-5-1 9:8:5”, “Short Time”)&#x3D;09:08</li><li>自定义格式<br>C：格式化为国标的日期和时间<br>如：Format(“2010-5-1 9:8:5”, “c”)&#x3D;2010&#x2F;5&#x2F;1 9:08:05<br>y:一年中的第几天(1-366)<br>如：Format(“2010-5-1 9:8:5”, “y”)&#x3D;121<br>yy：两位数的年份(00-99)<br>如：Format(“2010-5-1 9:8:5”, “yy”)&#x3D;10<br>yyy：上面的 yy 与 y 结合在一起<br>“如：Format(“2010-5-1 9:8:5”, “yyy”)&#x3D;10121<br>Format(“2010-5-1 9:8:5”, “yy年第y天”)&#x3D;10年第121天<br>yyyy：四位数的年份(0100-9999)<br>如：Format(“2010-5-1 9:8:5”, “yyyy”)&#x3D;2010<br>d：一个月中的第几天(1-31)<br>如：Format(“2010-5-1 9:8:5”, “d”)&#x3D;1<br>dd：与 d 相同，但不足两位时补足 0<br>如：Format(“2010-5-1 9:8:5”, “dd”)&#x3D;01<br>ddd：三个英文字母表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “ddd”)&#x3D;”Sat”<br>dddd：英文表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “dddd”)&#x3D;”Saturday”<br>ddddd：显示标准日期<br>如：Format(“2010-5-1 9:8:5”, “ddddd”)&#x3D;2010&#x2F;5&#x2F;1<br>dddddd：长日期<br>如：Format(“2010-5-1 9:8:5”, “dddddd”)&#x3D;2010年5月1日<br>w：一个星期中的第几天(始于周日，周日为1)<br>如：Format(“2010-5-1 9:8:5”, “w”)&#x3D;7<br>ww：一年中的第几周<br>如：Format(“2010-5-1 9:8:5”, “ww”)&#x3D;18<br>m：月份数(当用于时间时，也可以表时为分钟)<br>如：Format(“2010-5-1 9:8:5”, “m”)&#x3D;5<br>mm：当小于10时带前导0的月数(当用于时间时，也可以表示为两位数的分钟数)<br>如：Format(“2010-5-1 9:8:5”, “mm”)&#x3D;05<br>mmm：三个英文字母表示的月份数<br>如：Format(“2010-1-1 9:8:5”, “mmm”)&#x3D;”Jan”<br>mmmm：英文表示的月份数<br>如：Format(“2010-1-1 9:8:5”, “mmmm”)&#x3D;”January”<br>q：一年中的第几季(1-4)<br>如：Format(“2010-5-1 9:8:5”, “q”)&#x3D;2<br>aaa：中文表示的周几<br>如：Format(“2010-5-1 9:8:5”, “aaa”)&#x3D;周六<br>aaaa：中文表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “aaaa”)&#x3D;星期六<br>h：小时数(0-23)<br>如：Format(“2010-5-1 9:8:5”, “h”)&#x3D;9<br>h：两位数表示的小时数<br>如：Format(“2010-5-1 9:8:5”, “hh”)&#x3D;09<br>n：分钟数(0-59)<br>如：Format(“2010-5-1 9:8:5”, “n”)&#x3D;8<br>nn：两位数表示的分钟数(00-59)<br>如：Format(“2010-5-1 9:8:5”, “nn”)&#x3D;08<br>s：秒数(0-59)<br>如：Format(“2010-5-1 9:8:5”, “s”)&#x3D;5<br>ss：两位数表示的秒数(00-59)<br>如：Format(“2010-5-1 9:8:5”, “ss”)&#x3D;05<br>ttttt:标准时间，当小时数小于10时不带0，与 h:mm:ss 或 h:nn:ss 相同<br>如：Format(“2010-5-1 9:8:5”, “ttttt”)&#x3D;9:08:05<br>AM&#x2F;PM：显示当前为AM或PM<br>如：Format(“2010-5-1 11:59:59”, “AM&#x2F;PM”)&#x3D;AM<br>Format(“2010-5-1 12:0:0”, “AM&#x2F;PM”)&#x3D;PM<br>A&#x2F;P：显示当前为A或P<br>与 AM&#x2F;PM 一样，这里不再举例。<br>说明：<br>可以多种格式联合使用，如：<br>Format(“2010-5-1 9:8:5”, “dddddd aaaa”)&#x3D;2010年5月1日 星期六</li></ol><h1 id="三、文本格式"><a href="#三、文本格式" class="headerlink" title="三、文本格式"></a>三、文本格式</h1><p>@：匹配位置插入格式化文本，如：</p><p>在”abcde”前插入文本”X”，代码为：Format(“abcde”, “X@”)&#x3D;Xabcde</p><p>在”abcde”第1位字符后面插入文本”X”，代码为：Format(“abcde”, “@X”)&#x3D;aXbcde</p><p>在”abcde”第2位字符后面插入文本”X”，代码为：Format(“abcde”, “@@X”)&#x3D;abXcde</p><p>在”abcde”第3位字符后面插入文本”X”，代码为：Format(“abcde”, “@@@X”)&#x3D;abcXde</p><p>当点位符@比原文本字符串多时，刚在相应位置上添加空格，如：</p><p>Format(“abc”, “X@@@@”)&#x3D;”X abc”</p><p>Format(“abc”, “X@@@@@”)&#x3D;”X  abc”</p><p>Format(“t”, “@@a@”)&#x3D;”  at”(空格空格at)</p><p>与!配合可从后面截取一段文本，如：</p><p>截取”abcde”后面1个字符文本，代码为：Format(“abcde”, “!@”)&#x3D;e</p><p>截取”abcde”后面2个字符文本，代码为：Format(“abcde”, “!@@”)&#x3D;de</p><p>截取”abcde”后面3个字符文本，代码为：Format(“abcde”, “!@@@”)&#x3D;cde</p><p>截取”abcde”后面两位，并在前面添加”XY”，代码为：Format(“abcde”, “!XY@@”)&#x3D;Xyde</p><p>&amp;：字符占位符，与@基本相同，这里不再赘述。</p><p>如：Format$(“I Love You”, “</p><blockquote><p>：强制将所有字符以大写格式显示。</p></blockquote><p>如：Format$(“I Love You”, “&gt;”)&#x3D;I LOVE YOU</p><p>转自：<a href="http://www.cnblogs.com/zhengyuxin/articles/1932724.html">http://www.cnblogs.com/zhengyuxin/articles/1932724.html</a></p><hr><p>Format[$] ( expr [ , fmt ] )</p><p>format 返回变体型</p><p>format$ 强制返回为文本</p><hr><p>数字类型的格式化</p><hr><p>固定格式参数：</p><p>General Number 普通数字，如可以用来去掉千位分隔号</p><p>format$(“100,123.12”,”General Number”) 返回值 100123.12</p><p>Currency 货币类型，可添加千位分隔号和货币符号</p><p>format$(“100123.12”,”Currency”) 返回值 ￥100,123.12</p><p>Fixed 格式为带两位小数的数字</p><p>format$(“100123”,”Fixed”) 返回值 100123.00</p><p>Standard 标准，即带千位分隔号和两位小数</p><p>format$(“100123”,”Standard”) 返回值 100,123.00</p><p>Percent 百分数</p><p>format$(“100123”,”Percent”) 返回值 10012300.00%</p><p>Scientific 科学记数法</p><p>format$(“100123”,”Scientific”) 返回值 1.00E+05</p><p>Yes&#x2F;No 当值为0时返回 NO,否则返回 YES</p><p>format$(“100123”,”Yes&#x2F;No”) 返回值 Yes</p><p>True&#x2F;False 当值为0时返回 False,否则返回 True</p><p>format$(“100123”,”True&#x2F;False”) 返回值 True</p><p>On&#x2F;Off 当值为0时返回 Off,否则返回 On</p><p>format$(“100123”,”Yes&#x2F;No”) 返回值 On</p><p>自定义格式参数</p><p>“” 不进行格式化 返回值 原值</p><p>0 占位格式化，不足补0</p><p>format$(“100123”,”0000000”) 返回值 0100123</p><h1 id="占位格式化，不足时不补0"><a href="#占位格式化，不足时不补0" class="headerlink" title="占位格式化，不足时不补0"></a>占位格式化，不足时不补0</h1><p>format$(“100123”,”#######”) 返回值 100123</p><p>. 强制显示小数点</p><p>format$(“100123.12”,”.000”) 返回值 100123.120</p><p>% 转化为百分数，一个%代表乘以100</p><p>format$(“10.23”,”0.00%”) 返回值 1023.00%</p><p>format$(“10.23”,”0.00%%”) 返回值 102300.00%%</p><p>, 以千为单位格化</p><p>format$(“10.23”,”,”) 返回值 0</p><p>format$(“10010.23”,”,”) 返回值 10</p><p>format$(“10010.23”,”,0.00”) 返回值 10.01</p><p>E- E+ e- e+ 显示为科学记数(要注意格式语句，否则会和E的其它含义相混)</p><p>Format$(12.5,”0.00E+00”) 返回值 1.25E+01</p><p>$ 强制显示货币符号</p><p>format$(“10.23”,”{threadcontent}.00”) 返回值 ￥10.23</p><ul><li><ul><li>( ) space 按位置显示本样</li></ul></li></ul><p>Format$(“1234.56”,”-(0.00)”) 返回值 -(1234.56)</p><p>转义符,显示出特殊符号</p><p>Format$(“1234.56”,”#.00”) 返回值 #1234.56</p><p>“ABC” 显示双引号 (“ “) 之内的字符串。如在代码中想在 format 中包含一个字符串，必须用 Chr(34) 将文本括起来(34 为双引号 (“))</p><p>Format$(123.45,”TTT”) 返回值 TTT</p><p>注：当双引号中的文本包含特殊的参数符号如e,要使用转义符””，否则会按e的作用显示</p><p>; 类似多目运算符的作用。</p><p>当共有 四 部分时，</p><p>当大于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>当等于0时按第三部分进行格式化，</p><p>当为null值时，按第四部分进行格式化。如：</p><p>Format$(0,”0.00;负数;零;空”) 返回值 零</p><p>当共有 三 部分时，</p><p>当大于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>当等于0时按第三部分进行格式化，如：</p><p>Format$(-10,”0.00;ttt;零”) 返回值 ttt</p><p>当共有 两 部分时，</p><p>当大于或等于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>Format$(-123,”0.00;abc”) 返回值 abc</p><p>Format$(123,”0.00;abc”) 返回值 123.00</p><p>当共有 一 部分时，按分号左边进行格式化</p><hr><p>日期类型的格式化</p><hr><p>注意：在中文操作系统中，系统自动将月份输为如：五月，而非 May</p><p>固定格式参数</p><p>General Date 基本类型</p><p>Format(Date,”YYYY年MM月DD日”)</p><p>‘M 个位月只显示一位，</p><p>‘MM 显示两位月，</p><p>‘MMM显示英文月简称,</p><p>‘MMMM显示英文全名</p><p>Format$(Now,”General Date”) 返回值 2006-5-25 14:56:15</p><p>Long Date 操作系统定义的长日期</p><p>Format$(Now,”Long Date”) 返回值 2006年5月25日</p><p>Medium Date 中日期(yy&#x2F;mmm&#x2F;dd)</p><p>Format$(Now,”Medium Date”) 返回值 06-5月-25</p><p>Short Date 操作系统定义的短日期</p><p>Format$(Now,”Short Date”) 返回值 2006-5-25</p><p>Long Time 操作系统定义的长时间</p><p>Format$(Now,”Long Time”) 返回值 15:06:36</p><p>Medium Time 带AM&#x2F;PM的12小时制，不带秒</p><p>Format$(Now,”Medium Time”) 返回值 03:08 PM</p><p>Short Time 24时制的时间，不带秒</p><p>Format$(Now,”Short Time”) 返回值 15:08</p><p>自定义格式参数</p><p>: 用来标识时间字符的间隔</p><p>Format$(Time(),”hh:nn”) 返回值 15:25</p><p>&#x2F; 用来标识日期字符的间隔</p><p>Format$(now,”yyyy&#x2F;mm&#x2F;dd”) 返回值 2006-05-25</p><p>c 格式化为国标的日期和时间</p><p>Format$(Now,”c”) 返回值 2006-5-25 14:56:15</p><p>y 一年中的第几天</p><p>Format$(Now,”y”) 返回值 145</p><p>d 一个月中的第几天(1-366)</p><p>Format$(Now,”d”) 返回值 25</p><p>dd 当小于10时前面带0的天数(01-31)</p><p>Format$(“2006-1-7”,”dd”) 返回值 07</p><p>ddd 周几</p><p>Format$(Now,”ddd”) 返回值 周四</p><p>dddd 星期几</p><p>Format$(Now,”dddd”) 返回值 星期四</p><p>ddddd 显示标准日期</p><p>Format$(Now,”ddddd”) 返回值 2006-05-25</p><p>dddddd 长日期</p><p>Format$(Now,”dddddd”) 返回值 2006年5月25日</p><p>w 一个星期中的第几天</p><p>Format$(Now,”w”) 返回值 5</p><p>ww 一年中的第几周</p><p>Format$(Now,”ww”) 返回值 21</p><p>m 月数(注：当用于时间时，也可以表时为分钟)</p><p>Format$(Now,”m”) 返回值 5</p><p>Format$(Now,”h:m”) 返回值 16:11</p><p>mm 当小于10时前面带0的月数(注：当用于时间时，也可以表时为带0的分钟)</p><p>Format$(Now,”m”) 返回值 05</p><p>Format$(Now,”hh:mm”) 返回值 16:09</p><p>mmm 月份</p><p>Format$(Now,”mmm”) 返回值 五月</p><p>q 一年中的第几季(1-4)</p><p>Format$(Now,”q”) 返回值 2</p><p>yy 两位数的年份(00-99)</p><p>Format$(Now,”yy”) 返回值 06</p><p>yyyy 四位数的年份(0100-9999)</p><p>Format$(Now,”yyyy”) 返回值 2006</p><p>h 一天中的第N小时(0-23)</p><p>Format$(Now,”h”) 返回值 16</p><p>hh 当小于10时带0的小时数(00-23)</p><p>Format$(“7:30:28”,”hh”) 返回值 07</p><p>n 一小时的分钟数(0-59)</p><p>Format$(“7:30:28”,”n”) 返回值 30</p><p>nn 当小于10时带0的分钟数(00-59)</p><p>Format$(“7:3:28”,”n”) 返回值 03</p><p>s 一分钟中的秒数(0-59)</p><p>Format$(“7:30:8”,”s”) 返回值 8</p><p>ss 当小于10时带0的分钟数(00-59)</p><p>Format$(“7:3:8”,”ss”) 返回值 08</p><p>ttttt 标准时间，小时数当小于10时不带0，与h:mm:ss相同</p><p>Format$(“7:3:28”,”ttttt”) 返回值 7:03:28</p><p>AM&#x2F;PM 显示当前为AM或为PM</p><p>Format$(Now,”AM&#x2F;PM”) 返回值 PM</p><p>A&#x2F;P 显示当前为A或为P</p><p>Format$(Now,”A&#x2F;P”) 返回值 P</p><p>AMPM 对0至2359的数值进行判断是AM还是PM，可以看作是同等于对00:00至23:59的数字进行判断，如1000可以看作是10:00。</p><p>Format$(1000,”AMPM”) 返回值 AM</p><p>联合格式化</p><p>m&#x2F;d&#x2F;yy Format$(Now,”m&#x2F;d&#x2F;yy”) 返回值 5-25-06</p><p>d-mmm-yy Format$(Now,”d-mmm-yy”) 返回值 25-5月-06</p><p>d-mmmm Format$(Now,”d-mmmm”) 返回值 25-五月</p><p>mmmm-yy Format$(Now,”mmmm-yy”) 返回值 五月-06</p><p>hh:mm AM&#x2F;PM Format$(Now,”hh:mm AM&#x2F;PM”) 返回值 04:50 PM</p><p>h:mm:ss a&#x2F;p Format$(Now,”h:mm:ss a&#x2F;p”) 返回值 4:51:38 p</p><p>h:mm Format$(Now,”h:mm”) 返回值 16:51</p><p>h:mm:ss Format$(Now,”h:mm:ss”) 返回值 16:51:38</p><p>m&#x2F;d&#x2F;yy h:mm Format$(Now,”m&#x2F;d&#x2F;yy h:mm”) 返回值 5-25-06 16:54</p><hr><p>文本类型的格式化</p><hr><p>; 当两部分时，则第一部分为非空格式化，第二部分为null值或空值的格式化表达式</p><p>@ 匹配位置插入格式化文本，占位位置不存在时，显示空白(空字符串)</p><p>只有一个@符号时，是在最后面加上格式化文本</p><p>Format$(“CHIN”,”@a”) 返回值 CHINa</p><p>有多个@占位符，是按从右至左匹配，并在相应的位置上显示格式化文本</p><p>Format$(“CHIN”,”@a@@”) 返回值 CHaIN</p><p>当与 ! 配合时，则变为从左至右匹配</p><p>Format$(“CHIN”,”[email&#x3D;!@a]!@a[&#x2F;email]@@”) 返回值 CaHIN</p><p>当占位符比原文本字符串多时，刚在相应位置上添加空格</p><p>Format$(“C”,”@@a@”) 返回值 空白空白aC</p><p>&amp; 字符占位符。除在当占位位置不存在时，不显示外，其余均与@相同</p><p>当占位符比原文本字符串多时，刚在相应位置上添加空格</p><p>Format$(“C”,”&amp;&amp;a&amp;”) 返回值 aC</p><p>&lt; 强制小写。将所有字符以小写格式显示。</p><p>Format$(“I love you”,”</p><blockquote><p>强制大写。将所有字符以大写格式显示。</p></blockquote><p>Format$(“I love you”,”&gt;”) 返回值 I LOVE YOU</p><p>! 强制由左而右填充字符占位符。缺省值是由右而左填充字符占位符。</p><p>Format$(“CHIN”,”[email&#x3D;!@a]!@a[&#x2F;email]@@”) 返回值 CaHIN</p><hr><p>强制使用中文格式的日期时间</p><hr><p>aaaa 星期</p><p>Format$(Now,”aaaa”) 返回值 星期五</p><p>O 中文月份</p><p>Format$(Now,”O”) 返回值 五月</p><p>o 单字节月份</p><p>Format$(Now,”o”) 返回值 5月</p><p>A 中文日期</p><p>Format$(Now,”A”) 返回值 二十六日</p><p>a 单字节日期</p><p>Format$(Now,”a”) 返回值 26日</p><p>E 短中文年份</p><p>Format$(Now,”E”) 返回值 六年</p><p>e 单单字节年份</p><p>Format$(Now,”e”) 返回值 6年</p><p>EE 中文年份</p><p>Format$(Now,”EE”) 返回值 二○○六年</p><p>ee 单字节年份</p><p>Format$(Now,”ee”) 返回值 2006年</p><p>想不到中文日期的问题就这么容易解决</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_36076151/article/details/112054745">vbaformat_VBA 格式化字符串 - Format大全</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 函数 </tag>
            
            <tag> Format </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA控件之一(MultiPage 控件)</title>
      <link href="/posts/3549931295.html"/>
      <url>/posts/3549931295.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用 MultiPage 控件来处理大量可被分为几类排序信息。 MultiPage 控件由组成一个或多个 Page 对象， 每个包含不同组的控件。 以编程方式通过设置 MultiPage 控件的 Value 属性设置活动页。</p></blockquote><h1 id="方式一、如何控制-MultiPage-控件编程"><a href="#方式一、如何控制-MultiPage-控件编程" class="headerlink" title="方式一、如何控制 MultiPage 控件编程"></a>方式一、如何控制 MultiPage 控件编程</h1><p><strong>要添加 MultiPage 控件并控制它通过使用宏, 请按照下列步骤操作：</strong></p><table><thead><tr><th>1.</th><th>启动 Excel, 并打开新空白工作簿。</th></tr></thead><tbody><tr><td>2.</td><td>在 工具 菜单, 指向 宏 , 然后单击 VisualBasic 编辑器 。</td></tr><tr><td>3.</td><td>在 插入 菜单上, 单击要在工作簿中插入 UserForm UserForm 。</td></tr><tr><td>4.</td><td>添加到 UserForm MultiPage 控件。</td></tr><tr><td>5.</td><td>将 Label 控件添加到 Page 1 多页 控件上。</td></tr><tr><td>6.</td><td>将 TextBox 控件添加到 Page 1 多页 控件上。</td></tr><tr><td>7.</td><td>MultiPage 控件, 上单击, Page 2 ， 然后重复步骤 5 和 6 以添加一个 Label 控件和 TextBox 控件。</td></tr><tr><td>8.</td><td>双击要打开代码窗口对 MultiPage 控件 MultiPage 控件。</td></tr><tr><td>9.</td><td>在代码窗口, 为 MultiPage1 Change 事件键入下列代码：</td></tr><tr><td>10.</td><td>在代码窗口, 为 UserForm Initialize 事件键入下列代码：</td></tr><tr><td>11.</td><td>在 运行 菜单上, 单击 运行子过程 &#x2F; 用户窗体 。  Page 1, 上 TextBox 控件中键入 Test 。 当单击 Page 2 选项卡、 TextBox 2 被清除, 和标题为 Label 2 变为项， 在 Page 1 上 TextBox 所做 （” Test “) （” Test “）</td></tr></tbody></table><ul><li>为 MultiPage1 Change 事件键入下列代码:<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> MultiPage1_Change()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="comment">&#x27; If activating Page1...</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">            Label1.Caption = TextBox2.<span class="keyword">Text</span></span><br><span class="line">            TextBox1.<span class="keyword">Text</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="comment">&#x27; If activating Page2...</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">            Label2.Caption = TextBox1.<span class="keyword">Text</span></span><br><span class="line">            TextBox2.<span class="keyword">Text</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li><li>为 UserForm Initialize 事件键入下列代码：<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">            <span class="comment">&#x27; Force Page1 to be active when UserForm is displayed.</span></span><br><span class="line">            MultiPage1.Value = <span class="number">0</span></span><br><span class="line">            Label1.Caption = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="如何通过使用-MultiPage-控件创建一个向导界面"><a href="#如何通过使用-MultiPage-控件创建一个向导界面" class="headerlink" title="如何通过使用 MultiPage 控件创建一个向导界面"></a>如何通过使用 MultiPage 控件创建一个向导界面</h2><p>将任务需要几个增量步骤, 向导界面可能会非常有效。 您可使用 MultiPage 控件以创建一个向导界面代替使用多用户窗体。 本示例操作具有三页 MultiPage 控件。 附加到对 UserForm Initialize 事件过程禁用 Page 2 和 Page3, 并强制 Page 1 的 多页 控件可活动。</p><p><strong>注意</strong> 您通过使用 <strong>Pages</strong> 集合, 索引 <strong>MultiPage</strong> 控件的页面时集合中第一页是零页。 此过程还设置标题的 <strong>CommandButton</strong> 控件并禁用 <strong>&lt; 备份</strong> 按钮。</p><p>注意的功能是分配给 CommandButton 1 控件的 Click 事件过程 “ 后退 “ 按钮 &lt; 是分配给 CommandButton 2 是 Click 事件过程控制功能的下一步 &gt; 按钮。 若要通过使用 <strong>MultiPage</strong> 控件, 创建一个向导界面请按照下列步骤：</p><table><thead><tr><th>1.</th><th>启动 Excel, 并打开新空白工作簿。</th></tr></thead><tbody><tr><td>2.</td><td>在 工具 菜单, 指向 宏 , 然后单击 VisualBasic 编辑器 。</td></tr><tr><td>3.</td><td>在 插入 菜单上, 单击要在工作簿中插入 UserForm UserForm 。</td></tr><tr><td>4.</td><td>添加到 UserForm MultiPage 控件。</td></tr><tr><td>5.</td><td>右键单击, “ Page 1 选项卡， 然后单击要添加到 多页 控件 Page3 新页 。</td></tr><tr><td>6.</td><td>添加一个 CommandButton 控件不位于 多页 控件上 UserForm 上。  重复此步骤可添加一个 UserForm 上二 CommandButton 控件。</td></tr><tr><td>7.</td><td>双击以打开代码窗口对于 UserForm UserForm 。</td></tr><tr><td>8.</td><td>在代码窗口, 为 UserForm Initialize 事件键入下列代码：</td></tr><tr><td>9.</td><td>在 运行 菜单上, 单击 运行子过程 &#x2F; 用户窗体 。</td></tr></tbody></table><p>当您单击下一步 &gt; 激活 Page 2 后退 “ 按钮可, 和 &lt; 当您单击 Next &gt; 第二次, Page3 激活并题注为 CommandButton 2 更改为 “ 完成 “。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27;在代码窗口, 为 UserForm Initialize 事件键入下列代码：</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            <span class="comment">&#x27; The next 2 lines disable Page2 &amp; Page3.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">False</span></span><br><span class="line">            <span class="comment">&#x27; Make Page1 the active page.</span></span><br><span class="line">            .Value = <span class="number">0</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            <span class="comment">&#x27; Set the caption on the CommandButtons.</span></span><br><span class="line">            CommandButton1.Caption = <span class="string">&quot;&lt;Back&quot;</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">False</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Next&gt;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">            <span class="comment">&#x27; Procedure for the &quot;&lt;Back&quot; button</span></span><br><span class="line">            <span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton1_Click()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span>                                 <span class="comment">&#x27; If Page2 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Pages(<span class="number">0</span>).Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Page1.</span></span><br><span class="line">            .Value = MultiPage1.Value - <span class="number">1</span>  <span class="comment">&#x27; Move back 1 page.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span>      <span class="comment">&#x27; Disable Page2.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">False</span>     <span class="comment">&#x27; Disable Back button.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">2</span>                                 <span class="comment">&#x27; If Page3 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Page2.</span></span><br><span class="line">            .Value = MultiPage1.Value - <span class="number">1</span>  <span class="comment">&#x27; Move back 1 page.</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">False</span>      <span class="comment">&#x27; Disable Page3.</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Next&gt;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">            <span class="comment">&#x27; Procedure for the &quot;Next&gt;&quot; button</span></span><br><span class="line">            <span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton2_Click()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="keyword">Case</span> <span class="number">0</span>                                  <span class="comment">&#x27; If Page1 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Value = MultiPage1.Value + <span class="number">1</span>   <span class="comment">&#x27; Move forward 1 page.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">True</span>        <span class="comment">&#x27; Enable Page2.</span></span><br><span class="line">            .Pages(<span class="number">0</span>).Enabled = <span class="literal">False</span>       <span class="comment">&#x27; Disable Page1.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Back button.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span>                                  <span class="comment">&#x27; If Page2 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Value = MultiPage1.Value + <span class="number">1</span>   <span class="comment">&#x27; Move forward 1 page.</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">True</span>        <span class="comment">&#x27; Enable Page3.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span>       <span class="comment">&#x27; Disable Page2.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Finish&quot;</span>   <span class="comment">&#x27; Change Next button to Finish.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">2</span>                                  <span class="comment">&#x27; If Page3 is active...</span></span><br><span class="line">            MsgBox <span class="string">&quot;Finished!&quot;</span>                  <span class="comment">&#x27; User is Finished.</span></span><br><span class="line">            Unload <span class="keyword">Me</span>                           <span class="comment">&#x27; Unload the UserForm.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h1 id="方式二、vba-Page分页控件使用方法介绍"><a href="#方式二、vba-Page分页控件使用方法介绍" class="headerlink" title="方式二、vba Page分页控件使用方法介绍"></a>方式二、vba Page分页控件使用方法介绍</h1><blockquote><p>基本说一下Page使用方法，包括添加分页、删除分页、和设置分页属性等几点比较重要的内容。</p></blockquote><img src="https://pics7.baidu.com/feed/cc11728b4710b912705faeb15852f4049345221d.png?token=c36a6abd99ef68a91642e2b228bb790b"><ul><li>一个表单示例，标题分布以按钮形式来显示，默认为标签形式。</li></ul><h2 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法:"></a>设置方法:</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">With</span> </span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Style = fmTabStyleButtons<span class="comment">&#x27;按钮形式&#x27;.Style = fmTabStyleTabs &#x27;默认为标签形式</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure><ul><li><strong>背景图片设置</strong><blockquote><p>背景图片用loadpicture(＂图片路径＋文件名＂)加载</p></blockquote></li></ul><img src="https://pics3.baidu.com/feed/0b55b319ebc4b7453a545da552531610888215f3.png?token=38556e3bc454b547afa9a1bc9094b262"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Item(<span class="number">1</span>).Picture =_</span><br><span class="line">LoadPicture(ThisWorkbook.Path &amp; <span class="string">&quot;\pic\123.jpg&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong>其中注意一点Item(i),item表示Page页 字母ｉ代表下标或索引值.索引值从0开始,也就是说第一个Page页用item(0)来代表,最后一个用item(pages.count-1)来表示.</strong></p></blockquote><img src="https://pics5.baidu.com/feed/a1ec08fa513d26976f8965acc954bafc4216d81b.png?token=67b7980f1cab07044562d95e4c671f98"><ul><li><strong>改变按钮宽度</strong><blockquote><p>这个功能其实就是设置分布标题大小,用TabFixedWidth设置宽,TabFixedHeight设置高.</p></blockquote></li></ul><img src="https://pics6.baidu.com/feed/5ab5c9ea15ce36d3e51f355aa45c3280e850b1f3.png?token=bebe6e9095c7dfe11b7ec89dea1fabd6"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> </span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.TabFixedWidth = <span class="number">80</span>.TabFixedHeight=<span class="number">28</span></span><br><span class="line">endwith</span><br></pre></td></tr></table></figure><ul><li><strong>新建分页</strong></li></ul><blockquote><p>新建分页也十分简单,一行代码就可以完成. MultiPage1.Pages.Add “分布名”,”标题名”,索引值</p></blockquote><img src="https://pics1.baidu.com/feed/a9d3fd1f4134970aa044a46c0965d9cfa6865df0.png?token=96dba0ed08723058977dcf9210d191f5"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> x <span class="keyword">As</span> Integerx = <span class="keyword">Me</span>.MultiPage1.Pages.Count</span><br><span class="line"><span class="keyword">If</span> x &gt; <span class="number">6</span> <span class="keyword">Then</span> </span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Add <span class="string">&quot;page&quot;</span> &amp; x, <span class="string">&quot;新建 &quot;</span> &amp; x &amp; <span class="string">&quot;#&quot;</span>, x</span><br></pre></td></tr></table></figure><ul><li><strong>删除分页</strong><blockquote><p>删除分页也是一行代码完成的,Me.MultiPage1.Pages.Remove 索引</p></blockquote></li></ul><img src="https://pics5.baidu.com/feed/9825bc315c6034a821d4f4b357bc415309237600.png?token=5599e8d77a6492b808dba31ad0cc1f24"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> Integeri = <span class="keyword">Me</span>.MultiPage1.Pages.Count - <span class="number">1</span><span class="comment">&#x27;取最后一个分布索引号</span></span><br><span class="line"><span class="keyword">If</span> i &lt;= <span class="number">4</span> <span class="keyword">Then</span> </span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span><span class="comment">&#x27;判断是否是删除页 不能把自己删除了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Remove i<span class="comment">&#x27;执行删除分页</span></span><br></pre></td></tr></table></figure><ul><li>结尾<br>其实对分页控件用得不是很熟悉,所以也是边学边做,,有些错误的地方,就难免.<br>同时也希望指出不正确的地方,加以改正.<br>关注江觅学习更多vba编程技术</li></ul><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/liyanwwww/article/details/2653539">VBA控件常规使用–multiPage 控件</a></li><li><a href="https://baijiahao.baidu.com/s?id=1673353087367441194&wfr=spider&for=pc">vba Page分页控件使用方法介绍</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 控件 </tag>
            
            <tag> VBA </tag>
            
            <tag> MultiPage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA窗体最大化最小化按钮实现</title>
      <link href="/posts/24674706.html"/>
      <url>/posts/24674706.html</url>
      
        <content type="html"><![CDATA[<h1 id="先建立窗体"><a href="#先建立窗体" class="headerlink" title="先建立窗体"></a>先建立窗体</h1><p>打开excel，找到开发工具 ，然后点击 Visual Basic进入代码编辑器窗口：</p><img src="https://img-blog.csdnimg.cn/2018120723042229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p>点击插入&gt;&gt;用户窗体，如下图所示：</p><img src="https://img-blog.csdnimg.cn/20181207230608410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p>如果此时运行，得到的效果如下所示，是没有最大化和最小化窗口的：</p><img src="https://img-blog.csdnimg.cn/20181207232333794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><h1 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a>设置方式</h1><p>下面我们就来添加最大化最小化功能的实现。<br>双击窗体，进入代码编辑界面，输入以下代码：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> GetWindowLong <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;GetWindowLongA&quot;</span> (<span class="keyword">ByVal</span> hWnd <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> nIndex <span class="keyword">As</span> <span class="type">Long</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> FindWindow <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;FindWindowA&quot;</span> (<span class="keyword">ByVal</span> lpClassName <span class="keyword">As</span> <span class="type">String</span>, <span class="keyword">ByVal</span> lpWindowName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> SetWindowLong <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;SetWindowLongA&quot;</span> (<span class="keyword">ByVal</span> hWnd <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> nIndex <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> dwNewLong <span class="keyword">As</span> <span class="type">Long</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> GWL_STYLE = (-<span class="number">16</span>)</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_THICKFRAME <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H40000</span> <span class="comment">&#x27;(恢复大小)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_MINIMIZEBOX <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H20000</span> <span class="comment">&#x27;(最小化)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_MAXIMIZEBOX <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H10000</span> <span class="comment">&#x27;(最大化)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">   <span class="keyword">Dim</span> hWndForm <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line">   <span class="keyword">Dim</span> IStyle <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line">   hWndForm = FindWindow(<span class="string">&quot;ThunderDFrame&quot;</span>, <span class="keyword">Me</span>.Caption)</span><br><span class="line">   IStyle = GetWindowLong(hWndForm, GWL_STYLE)</span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_THICKFRAME <span class="comment">&#x27;还原</span></span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_MINIMIZEBOX <span class="comment">&#x27;最小化</span></span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_MAXIMIZEBOX <span class="comment">&#x27;最大化</span></span><br><span class="line">   SetWindowLong hWndForm, GWL_STYLE, IStyle</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将鼠标置于Sub函数内部，按F5按键运行，得到如下效果：</p><img src="https://img-blog.csdnimg.cn/20181207231350402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p><strong>这里需要说明的是，以上代码支持在64位操作系统运行，如果是32位系统，在导入库的时候，应使用下面一段代码:</strong></p><p>与前面一段代码相比，发现唯一的区别在于，Declare后面少了PtrSafe，其原因是：Microsoft 提供了一个 Win32API.txt 文件，其中包含 1,500 个 Declare 语句以及一个用于剪切所需 Declare 语句并将其粘贴到您的代码中的工具。不过，这些语句适用于 32 位系统，必须使用下文讨论的信息将其转换为 64 位。现有 Declare 语句在 64 位 VBA 中不会进行编译，直到使用 PtrSafe 属性将它们标记为对 64 位安全。</p><p>具体可参阅MicroSoft Office 官方资料：<a href="https://docs.microsoft.com/zh-cn/previous-versions/office/ee691831(v=office.14)">32 位和 64 位版本的 Office 2010 之间的兼容性</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/u010280075/article/details/84888744">VBA窗体最大化最小化按钮实现</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
            <tag> 最大最小化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>窗体上按Esc键关闭窗体（VBA）</title>
      <link href="/posts/3269845264.html"/>
      <url>/posts/3269845264.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用ESC关闭"><a href="#使用ESC关闭" class="headerlink" title="使用ESC关闭"></a>使用ESC关闭</h1><ol><li>在窗体上拖一个按钮控件，命名为 btnCancel，然后将按钮属性 Cancel 设为 True</li></ol><img src="http://miao.blog/images/c2fe3ea3a343c737.jpg"><ol start="2"><li>然后双击按钮，在按钮的 click 事件中写入 Me.Hide</li></ol><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> btnCancel_Click()</span><br><span class="line">    <span class="keyword">Me</span>.Hide</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><ol start="3"><li>然后把按钮 Width 和 Height 设置为 0</li></ol><img src="http://miao.blog/images/371969cf39089ad0.jpg"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://miao.blog/article/click-esc-to-close-form">窗体上按Esc键关闭窗体（VBA）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
            <tag> ESC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MsgBox函数的讲解及应用</title>
      <link href="/posts/2953555089.html"/>
      <url>/posts/2953555089.html</url>
      
        <content type="html"><![CDATA[<h1 id="MsgBox函数的讲解及应用"><a href="#MsgBox函数的讲解及应用" class="headerlink" title="MsgBox函数的讲解及应用"></a>MsgBox函数的讲解及应用</h1><blockquote><p><strong>所谓函数，指的是一个Function过程，区别于简单的过程，Function过程是有返回值.</strong><br>Excel VBA中的MsgBox函数可以返回结果，而简单的MsgBox语句不能返回结果。</p></blockquote><ol><li>MsgBox函数<blockquote><p>在对话框中显示消息，等待用户单击按钮，并返回一个整数，指示用户单击的那个按钮</p></blockquote></li></ol><ul><li>一、语法:<br>MsgBox (prompt, [ buttons, ] [ title, ] [ helpfile, context ])</li></ul><p>参数：</p><p>① <strong>prompt 必需项</strong>。 字符串表达式在对话框中显示为消息。 prompt 的最大长度约为 1024 个字符，具体取决于所使用的字符的宽度。如果 prompt 包含两行以上，则可以在每行之间使用回车符 (Chr(13))、换行符 (Chr(10)) 或回车换行符组合 (Chr(13) &amp; Chr(10)) 将其分隔。</p><p>② buttons 可选。 数值表达式，用于指定要显示按钮的数量和类型、要使用的图标样式、默认按钮的标识和消息框的形式的值之和。 如果省略，则 buttons 的默认值为 0。</p><p>③ title可选。 对话框标题栏中显示的字符串表达式。 如果省略 title，则标题栏中将显示应用程序名称。</p><p>④ helpfile 可选。 用于标识帮助文件的字符串表达式，前者用于为对话框提供上下文相关的帮助。 如果提供 helpfile，则也必须提供 context。</p><p>⑤ context 可选。 帮助上下文数值的数值表达式，该数值由帮助作者为相应的帮助主题分配。 如果提供 context，则也必须提供 helpfile。</p><ul><li>二、buttons 参数设置如下：</li></ul><table><thead><tr><th align="left">常量</th><th align="left">值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">vbOKOnly</td><td align="left">0</td><td align="left">仅显示“确定”按钮。</td></tr><tr><td align="left">vbOKCancel</td><td align="left">1</td><td align="left">显示“确定”和“取消”按钮。</td></tr><tr><td align="left">vbAbortRetryIgnore</td><td align="left">2</td><td align="left">显示“中止”、“重试”和“忽略”按钮。</td></tr><tr><td align="left">vbYesNoCancel</td><td align="left">3</td><td align="left">显示“是”、“否”和“取消”按钮。</td></tr><tr><td align="left">vbYesNo</td><td align="left">4</td><td align="left">显示“是”和“否”按钮。</td></tr><tr><td align="left">vbRetryCancel</td><td align="left">5</td><td align="left">显示“重试”和“取消”按钮。</td></tr><tr><td align="left">vbCritical</td><td align="left">16</td><td align="left">显示“关键消息”图标。</td></tr><tr><td align="left">vbQuestion</td><td align="left">32</td><td align="left">显示“警告查询”图标。</td></tr><tr><td align="left">vbExclamation</td><td align="left">48</td><td align="left">显示“警告消息”图标。</td></tr><tr><td align="left">vbInformation</td><td align="left">64</td><td align="left">显示“信息消息”图标。</td></tr><tr><td align="left">vbDefaultButton1</td><td align="left">0</td><td align="left">第一个按钮是默认按钮。</td></tr><tr><td align="left">vbDefaultButton2</td><td align="left">256</td><td align="left">第二个按钮是默认按钮。</td></tr><tr><td align="left">vbDefaultButton3</td><td align="left">512</td><td align="left">第三个按钮是默认按钮。</td></tr><tr><td align="left">vbDefaultButton4</td><td align="left">768</td><td align="left">第四个按钮是默认按钮。</td></tr><tr><td align="left">vbApplicationModal</td><td align="left">0</td><td align="left">应用程序模式；用户在继续在当前应用程序中工 作前必须响应消息框。</td></tr><tr><td align="left">vbSystemModal</td><td align="left">4096</td><td align="left">系统模式；在用户响应消息框前，所有应用程序都挂起。</td></tr><tr><td align="left">vbMsgBoxHelpButton</td><td align="left">16384</td><td align="left">在消息框中添加“帮助”按钮。</td></tr><tr><td align="left">vbMsgBoxSetForeground</td><td align="left">65536</td><td align="left">将消息框窗口指定为前景窗口。</td></tr><tr><td align="left">vbMsgBoxRight</td><td align="left">524288</td><td align="left">文本右对齐。</td></tr><tr><td align="left">vbMsgBoxRtlReading</td><td align="left">1048576</td><td align="left">指定文本在希伯来语和阿拉伯语系统中应从右到左显示。</td></tr></tbody></table><ul><li><p>三、第一组值 (0-5) 表示对话框中显示的按钮的数量和类型；第二组值（16、32、48、64）表示图标样式；第三组值（0、256、512）用于确定默认按钮；第四组值（0、4096）用于确定消息框的形式。添加数字以创建最终 buttons 参数值时，只是用每个组中的其中一个数值。</p></li><li><p>四、关于返回值</p><table><thead><tr><th align="left">常量</th><th align="left">值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">vbOK</td><td align="left">1</td><td align="left">确定</td></tr><tr><td align="left">vbCancel</td><td align="left">2</td><td align="left">Cancel</td></tr><tr><td align="left">vbAbort</td><td align="left">3</td><td align="left">中止</td></tr><tr><td align="left">vbRetry</td><td align="left">4</td><td align="left">重试</td></tr><tr><td align="left">vbIgnore</td><td align="left">5</td><td align="left">忽略</td></tr><tr><td align="left">vbYes</td><td align="left">6</td><td align="left">是</td></tr><tr><td align="left">vbNo</td><td align="left">7</td><td align="left">否</td></tr></tbody></table></li></ul><blockquote><p>如果对话框中显示“取消”按钮，按 ESC 键与单击“取消”具有相同的作用。 如果对话框中包含“帮助”按钮，则会为对话框提供上下文相关帮助。但是，在单击其他按钮中的某个按钮之前不会返回任何值。</p></blockquote><h1 id="MsgBox函数的应用"><a href="#MsgBox函数的应用" class="headerlink" title="MsgBox函数的应用"></a>MsgBox函数的应用</h1><p>为了清空某个工作表，我们可以写一段代码达到我们的目的。但是在运行之前要提供给用户思考的时间，清空后是否有其他的麻烦。我们来看下面的代码：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> mynzC()</span><br><span class="line"></span><br><span class="line">answer = MsgBox(<span class="string">&quot;你是否要清空工作表?&quot;</span>, vbYesNo + vbQuestion, <span class="string">&quot;清空工作表&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> answer = vbYes <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">Cells.ClearContents</span><br><span class="line"></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;do nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>代码截图：</p><img src="https://pic2.zhimg.com/80/v2-7d3c2b5af0e5a4945f146d5a70de44c1_720w.jpg"><p>代码解读：</p><ol><li>answer &#x3D; MsgBox(“你是否要清空工作表?”, vbYesNo + vbQuestion, “清空工作表”)<br>使用括号时，MsgBox函数有三个参数。第一部分用于消息框中的消息。使用第二部分指定要在消息框中显示的按钮和图标。第三部分显示在消息框的标题栏中。</li></ol><ul><li>注意：将光标放在Visual Basic编辑器中的vbYesNo上，然后单击F1查看可以使用的其他按钮和图标。也可以使用相应的值4和32，而不是常量vbYesNo和vbQuestion。</li></ul><ol start="2"><li>If answer &#x3D; vbYes Then</li></ol><p>Cells.ClearContents</p><p>Else</p><p>‘do nothing</p><p>End If</p><p>如果用户单击“是”按钮，Excel VBA将清空工作表。如果用户单击No按钮，则不会发生任何事情。</p><h2 id="代码的运行情况"><a href="#代码的运行情况" class="headerlink" title="代码的运行情况"></a>代码的运行情况</h2><p>我们先在工作表中建立一个运行按钮，并关联上上述的“mynzC”过程，并在工作表中随便录入些数值、符号，之后在点击后会清除。如下图：</p><img src="https://pic1.zhimg.com/80/v2-925d864ca2b368bb98c1a31111b3affc_720w.jpg"><p>我们点击运行，会弹出下面的窗口：</p><img src="https://pic2.zhimg.com/80/v2-3316debf02a83efadb6a296696bb9c9d_720w.jpg"><p>我们选择“是”。</p><img src="https://pic1.zhimg.com/80/v2-c6f4a70ea9606bb084426f185aeb7770_720w.jpg"><p>这个时候的工作表就被清空了。</p><p>今日内容回想：<br>1） MsgBox函数的语法了解吗？<br>2） MsgBox函数在应用时分几部分？<br>3) 清空工作表是那句代码？</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/328608873">MsgBox函数的讲解及应用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 函数 </tag>
            
            <tag> MsgBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在窗体中显示实时系统时钟</title>
      <link href="/posts/2126489867.html"/>
      <url>/posts/2126489867.html</url>
      
        <content type="html"><![CDATA[<h1 id="显示需求"><a href="#显示需求" class="headerlink" title="显示需求"></a>显示需求</h1><blockquote><p><strong>在使用用户窗体设计用户界面时，我们想要在适当的位置显示时钟，方便用户实时查看时间。</strong></p></blockquote><p>效果如图：</p><img src="https://ask.qcloudimg.com/http-save/yehe-5846058/wlpu7276os.gif"><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><h2 id="1-先设置需要显示的模块"><a href="#1-先设置需要显示的模块" class="headerlink" title="1.先设置需要显示的模块"></a>1.先设置需要显示的模块</h2><p>放置了一个文本框控件（保留其默认名称 TextBox1 ），并在其中显示实时时间。</p><h2 id="2-在标准模块中添加代码"><a href="#2-在标准模块中添加代码" class="headerlink" title="2. 在标准模块中添加代码"></a>2. 在标准模块中添加代码</h2><p>设计好用户窗体界面后，在VBE中插入一个<strong>标准模块</strong>，输入下面的代码：</p><blockquote><p><strong>注意：一定要把这个程序放到模块之中，否则 Application.OnTime 这个函数会报错！</strong></p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> StartTimer1()</span><br><span class="line">   Application.OnTime Now + TimeValue(<span class="string">&quot;00:00:01&quot;</span>),<span class="string">&quot;NextTick1&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">Sub</span> NextTick1()</span><br><span class="line">   UserForm1.TextBox1 = Format(Now, <span class="string">&quot;yyyy/mm/dd hh:mm:ss AM/PM&quot;</span>)</span><br><span class="line">   StartTimer1</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">Sub</span> StopTimer1()</span><br><span class="line">    <span class="keyword">On</span> ErrorResume <span class="keyword">Next</span></span><br><span class="line">   Application.OnTime Now + TimeValue(<span class="string">&quot;00:00:01&quot;</span>),<span class="string">&quot;NextTick1&quot;</span>, , <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="3-运行-NextTick1-函数即可"><a href="#3-运行-NextTick1-函数即可" class="headerlink" title="3. 运行 NextTick1 函数即可"></a>3. 运行 NextTick1 函数即可</h2><ul><li>运行NextTick1过程，然后显示用窗体，即可以看到显示实时时间的效果</li></ul><img src="https://ask.qcloudimg.com/http-save/yehe-5846058/gihxhe8vim.jpeg?imageView2/2/w/1620"><ul><li>也可以使用其他合适的控件，如标签控件</li></ul><img src="https://ask.qcloudimg.com/http-save/yehe-5846058/dp4og89mrm.gif"><ul><li>如果要停止时间的实时显示，运行StopTimer1过程即可。</li></ul><p>#其他方法</p><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>方法同上在标准模块中使用Application.OnTime 函数，将Label1.caption更改为我的用户窗体上想要显示的适当标签。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> DisplayCurrentTime()</span><br><span class="line">    <span class="keyword">Dim</span> nextSecond <span class="keyword">As</span> <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    nextSecond = DateAdd(<span class="string">&quot;s&quot;</span>, <span class="number">1</span>, Now())</span><br><span class="line"></span><br><span class="line">    Label1.Caption = Time()</span><br><span class="line"></span><br><span class="line">    Application.OnTime _</span><br><span class="line">        Procedure:=<span class="string">&quot;DisplayCurrentTime&quot;</span>, _</span><br><span class="line">        EarliestTime:=nextSecond</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><blockquote><p><strong>要求：三个文本框分别放置系统时间的 时，分，秒，并随着时间变动而变动</strong></p></blockquote><p>放在模块中的函数：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 时间()</span><br><span class="line"> UserForm1.TextBox1 = Left(Application.WorksheetFunction.<span class="keyword">Text</span>(Now(), <span class="string">&quot;HH:MM&quot;</span>), <span class="number">2</span>)</span><br><span class="line"> UserForm1.TextBox2 = Right(Application.WorksheetFunction.<span class="keyword">Text</span>(Now(), <span class="string">&quot;HH:MM&quot;</span>), <span class="number">2</span>)</span><br><span class="line"> UserForm1.TextBox3 = Right(Application.WorksheetFunction.<span class="keyword">Text</span>(Now(), <span class="string">&quot;MM:SS&quot;</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">Application.OnTime Now() + TimeValue(<span class="string">&quot;00:00:01&quot;</span>), <span class="string">&quot;时间&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> 停止()</span><br><span class="line"> <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">Application.OnTime Now() + TimeValue(<span class="string">&quot;00:00:01&quot;</span>), <span class="string">&quot;时间&quot;</span>, , <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>放在窗体中：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton1_Click()</span><br><span class="line">    <span class="keyword">Call</span> 停止</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton2_Click()</span><br><span class="line"><span class="keyword">Call</span> 时间</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">    <span class="keyword">Call</span> 时间</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>放在启动中：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Workbook_Open()</span><br><span class="line">     UserForm1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/zml3589110/MyImage/master/D:\Cache\PicGo\Github2.jpg"><img src="https://raw.githubusercontent.com/zml3589110/MyImage/master/D:\Cache\PicGo\Github1.gif"><p><a href="https://club.excelhome.net/forum.php?mod=attachment&aid=OTM1NzUzfGY1M2JlZTQ4fDE2NTU3OTQ4NTl8MHw3MjY4NzM=">时钟文件</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://cloud.tencent.com/developer/article/1785946">VBA实战技巧18：在用户窗体中显示时钟</a></li><li><a href="https://www.nuomiphp.com/eplan/4302.html">excel - VBA如何在用户窗体中显示实时时钟？</a></li><li><a href="https://club.excelhome.net/thread-726873-1-1.html">考试题目】在窗体文本框内实时显示系统时间</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 显示 </tag>
            
            <tag> 时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人图床(PicGo + GitHub)</title>
      <link href="/posts/3258321867.html"/>
      <url>/posts/3258321867.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><strong>这个方式来取代 七牛云+Mpic 方案</strong><br>我以前用的 七牛云 + Mpic 的组合，后来由于七牛云测试域名收回，我的图床就废了。以前的好多图片都埋藏在七牛云的服务器上，又气又难过。思考好一段时间，想自己搭服务，但成本有点高，备案的域名 + 服务器一年几百块。对于我这种不靠写字谋生的人而言没有必要，所以就停摆了一段时间。直到今天用 GitHub 搭起了图床，可以说非常开心了。所以跟大家分享一下。</p></blockquote><ul><li>该软件使用手册：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E">https://picgo.github.io/PicGo-Doc/zh/guide/#应用说明</a></li></ul><h1 id="一、下载-x2F-安装"><a href="#一、下载-x2F-安装" class="headerlink" title="一、下载&#x2F;安装"></a>一、下载&#x2F;安装</h1><ol><li>下载链接</li></ol><blockquote><p>PicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多</p></blockquote><p>参考文档提供: Win版下载链接：<a href="https://pan.baidu.com/share/init?surl=7KycPMoqNCnc1cR_yQO8nQ">百度云</a> 密码：PicG</p><p>git地址：<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a></p><img src="https://img-blog.csdnimg.cn/1748132cebc0432a958938d33e8d917b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>下载后一路点安装即可</strong></p><ol start="2"><li>配置<blockquote><p><strong>仅使用 GitHub 做图床，所以 PicGo 设置仅选择GitHub图床</strong></p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/4280cca5c8dd47b799e89332ff72d9ec.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="GitHub-仓库设置"><a href="#GitHub-仓库设置" class="headerlink" title="GitHub 仓库设置"></a>GitHub 仓库设置</h1><blockquote><p><strong>流程：新建 public 仓库 -&gt; 创建 token -&gt; 复制 token 备用</strong></p></blockquote><ol><li>新建仓库</li></ol><p>点击 git 主页右上角的 + 创建 New repository；</p><img src="https://img-blog.csdnimg.cn/be35fc1137e64b09bd62dcaa382926c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>填写仓库信息，例如我就创建了一个 cloudimg 的仓库。这里注意，仓库得设置为 Public 因为后面通过客户端访问算是外部访问，因此无法访问 Private ，这样的话图片传上来之后只能存储不能显示。所以要设置为 Public。</p><p>图一：</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIyNTE0LnBuZw"><p>图二：</p><img src="https://img-blog.csdnimg.cn/7db3e15ac0e5460fa29e1f7e080689f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="2"><li>创建 token 并复制保存</li></ol><p>此时仓库已经建立，点击右上角头像，然后进入设置:</p><img src="https://img-blog.csdnimg.cn/5cef567c46634a14947158625fb5f0f2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>在页面最下找到 Developer settings，点击进入:</p><img src="https://img-blog.csdnimg.cn/b7e9dfe38ee14ebfb8a13c02398e853b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>创建 token:</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIzMzE3LnBuZw?x-oss-process=image/format,png"><p>填 description（也是随心填），勾选复选框 repo ，接着到页面底部 Generate token 就完成了：</p><p>设置一、</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzE1NTIzMTQ5MDc3OTQucG5n?x-oss-process=image/format,png"><p>设置二、</p><img src="https://img-blog.csdnimg.cn/5b38543cd03b4418980b586628222fe7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="3"><li>然后复制生成一串字符 token，这个 token 只出现一次，所以要保存一下（我一般记在微信收藏）</li></ol><blockquote><ul><li>点击生成之后Token只会出现一次，记得保存备用</li></ul></blockquote><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIzOTAxLnBuZw"><h1 id="在PicGo中设置Github图库"><a href="#在PicGo中设置Github图库" class="headerlink" title="在PicGo中设置Github图库"></a>在PicGo中设置Github图库</h1><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjI0NDQzLnBuZw"><ul><li>仓库名 即你的仓库名（你的Github账户名&#x2F;刚才创建的仓库名）</li><li>分支名 默认 master</li><li>Token 就是刚刚从github复制的那一串字符</li><li>存储路径 这个可以填也可以不填，填了的话图片就上传到 git 中 data 这个文件夹</li><li>域名 <a href="https://raw.githubusercontent.com/yefcion/cloudimg/master%E8%BF%99%E4%B8%AA%E8%A6%81%E6%94%B9%E4%B8%80%E4%B8%8B">https://raw.githubusercontent.com/yefcion/cloudimg/master这个要改一下</a> 格式 <a href="https://raw.githubusercontent.com/[username]/[%E4%BB%93%E5%BA%93%E5%90%8D]/master">https://raw.githubusercontent.com/[username]/[仓库名]/master</a></li><li>自定义域名的作用是，在上传图片后成功后，PicGo会将“自定义域名+上传的图片名”生成的访问链接，放到剪切板上<a href="https://raw.githubusercontent.com/%E7%94%A8%E6%88%B7%E5%90%8D/RepositoryName/%E5%88%86%E6%94%AF%E5%90%8D%EF%BC%8C%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E5%8F%AF%E6%8C%89%E6%AD%A4%E5%A1%AB%E5%86%99%E3%80%82">https://raw.githubusercontent.com/用户名/RepositoryName/分支名，，自定义域名可按此填写。</a></li></ul><blockquote><p>**注：这里提供一个加速访问图片的方法：CDN加速，具体原理自行百度（我还不是很懂）<br>将上面的域名改为：<br>原 <a href="https://raw.githubusercontent.com/yefcion/cloudimg/master">https://raw.githubusercontent.com/yefcion/cloudimg/master</a><br>现 <a href="https://cdn.jsdelivr.net/gh/yefcion/cloudimg@master">https://cdn.jsdelivr.net/gh/yefcion/cloudimg@master</a><br>**</p></blockquote><p>然后点确定就可以了。</p><h1 id="接下来就可以正常使用了"><a href="#接下来就可以正常使用了" class="headerlink" title="接下来就可以正常使用了"></a>接下来就可以正常使用了</h1><ul><li><p>我们将图片复制到剪切板中，按我们所设置的快捷键，图片将自动上传到我们Github的仓库中</p></li><li><p>根据自己之前所选择的格式，图片的链接会自动复制到我们的剪切板中，等到图片上传完毕之后，我们直接Ctrl +V就好了</p></li><li><p>然后关于上传的快捷键设置。默认的是 Mac 按键，推荐改成 Ctrl + alt +c。</p></li></ul><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjI0OTM1LnBuZw"><p>Typora软件和PicGo配合起来使用更佳，使用typora写完博客然后直接导入CSDN的编辑器中，真香</p><p><strong>本方案唯一缺点，不能私人。但是考虑到 GitHub 上传的图在列表里没法预览，应该没人会闲着没事翻记录。</strong></p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/yefcion/article/details/88412025">PicGo + GitHub 搭建个人图床工具</a></li><li><a href="https://blog.csdn.net/qq_43367829/article/details/104882071">PicGo+GitHub使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> GitHub </category>
          
          <category> PicGo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> PicGo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode配置KEIL5编译下载</title>
      <link href="/posts/3493436520.html"/>
      <url>/posts/3493436520.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经常使用keil的人都知道keil的使用特别广泛，但是keil的自动补全功能极其难用。VScode功能十分强大，许多大佬为其编写插件供他人使用，利用好这些插件可以大大提高代码编写效率。最近发现了一个VScode可以调用KEIL编程的插件，使用起来非常方便。</p><h1 id="一、安装插件"><a href="#一、安装插件" class="headerlink" title="一、安装插件"></a>一、安装插件</h1><ol><li>点击拓展选项的图标</li></ol><img src="https://i0.hdslb.com/bfs/article/ee3c30d0c52a663e79e077f3abc93b8dc1f4f2a1.png@174w_107h_progressive.webp"><blockquote><p><strong>输入Chinese，进行安装，安装完成后界面就变成中文了。</strong></p></blockquote><img src="https://i0.hdslb.com/bfs/article/8781454b3adba17079f688b931915f584e8d9f46.png@942w_699h_progressive.webp"><ol start="2"><li>VScode中搜索插件Keil Assistant并安装。</li></ol><img src="https://img-blog.csdnimg.cn/20210717213624458.png"><h1 id="二、使用方法"><a href="#二、使用方法" class="headerlink" title="二、使用方法"></a>二、使用方法</h1><blockquote><p>插件下方介绍非常详细，并且都是中文的。</p></blockquote><img src="https://img-blog.csdnimg.cn/20210717213828397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><ol><li>插件设置<blockquote><p>进入插件设置，添加Keil可执行文件的路径</p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/20210717214251906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><blockquote><p>如下图所示第一个是51单片机的路径，第二个选项是MDK的路径（也就是ARM核单片机的路径）</p></blockquote><img src="https://i0.hdslb.com/bfs/article/1372396b3c92e211ab8a538136e310a3b73688cf.png@942w_704h_progressive.webp"><blockquote><p>接下来就是填入路径，找到我们的keil软件选着文件所在位置</p></blockquote><img src="https://i0.hdslb.com/bfs/article/09bc99e665e38b29bb814e5deeb07277b93f6ac5.png@470w_938h_progressive.webp"><p>在安装位置找到 keil 的图标:</p><img src="https://i0.hdslb.com/bfs/article/2aa130c7fed5bebbbd3a922e39fd6e63474844bb.png@942w_548h_progressive.webp"><p>复制他的路径:</p><img src="https://i0.hdslb.com/bfs/article/3e288ef2cef0c3855e558e4890dca034ab682250.png@942w_45h_progressive.webp"><p>填入VScode(注意：要在刚才的路径后面添加UV4.exe的后缀):</p><img src="https://i0.hdslb.com/bfs/article/730c29528eef3c4c9aa5baf7eb9dc60146d553b7.png@939w_483h_progressive.webp"><p>至此Keil Assistant配置完成。注意我在keil 5中安装了51单片机的包，所以路径相同，实测若是安装keil 4如此添加路径是没有用的，所以要用他来写51单片机的需要安装keil 5的51的包。</p><ol start="2"><li>打开工程</li></ol><p>打开资源管理器，会出现KEIL UVISION PROJECT点击后面的打开keil工程按钮，选择你想打开的工程的**.uvprojx**文件。</p><img src="https://img-blog.csdnimg.cn/20210717214649138.png"><p><strong>下方会有编译，下载，重编译按钮。</strong></p><img src="https://img-blog.csdnimg.cn/20210717214748979.png"><h1 id="三、配置工程"><a href="#三、配置工程" class="headerlink" title="三、配置工程"></a>三、配置工程</h1><blockquote><p><strong>VScode打开keil工程会出现工程头文件、变量红色波浪线的情况，通过配置工程，可以解决问题。如果不想改的话，也可以不改。</strong></p></blockquote><ol><li>配置方法</li></ol><p>按ctrl+alt+P在搜索栏中搜索Edit configurations (UI)。</p><img src="https://img-blog.csdnimg.cn/20210717215342533.png"><p>进入配置界面，里面都是中文，仔细阅读可以理解。</p><img src="https://img-blog.csdnimg.cn/20210717215535865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p><strong>利用此插件便可以通过VScode调用KEIL编写代码。<br>最后推荐一个可以提高工程逼格的插件koroFileHeader<br>文件头注释模板，安装步骤同上，文件头内容可在插件配置中更改，并更新最后修改时间。<br>快捷键：ctrl+alt+i</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/2021071722393639.png"><img src="https://img-blog.csdnimg.cn/2021071722394671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><blockquote><p>打开工程后注释乱码怎么解决:<br><strong>调整vscode的编码方式 和你的keil相同 一般为GB2312</strong></p></blockquote><p>VScode作为一款功能强大的文本编辑器它可以用来写任何的语言，有多种拓展可以供你来安装使用。它来写单片机是因为他的代码高亮、跳转、代码自动补全非常好用。比keil不知好用多少倍。但是若你要是调试单片机的话还是建议用keil（术业有专攻）仅仅将VScode作为一个文本编辑器来使用。使用时同时开启VScode和keil。用VScode来写代码，用keil进行调试。不要担心你在VScode中写的代码保存后会自动同步过去的，keil 中也是如此！</p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_44012359/article/details/118862954">VScode调用KEIL-MDK</a></li><li><a href="https://www.bilibili.com/read/cv14597116">VScode 配置 keil 5 环境</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> KEIL </category>
          
          <category> VScode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KEIL5 </tag>
            
            <tag> VScode </tag>
            
            <tag> 环境配置 </tag>
            
            <tag> Keil Assistant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KEIL5安装C51依赖</title>
      <link href="/posts/2938783249.html"/>
      <url>/posts/2938783249.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>**问题描述：从KEIL4升级安装了KEIL5之后找不到 C51 相关设置，想创建89C51的工程却发现找不到89C51的芯片包 **</p></blockquote><h1 id="无法创建的原因"><a href="#无法创建的原因" class="headerlink" title="无法创建的原因"></a>无法创建的原因</h1><p>keil4通常用来开发51单片机项目，而keil5通常用来开发STM32项目，keil5中默认并没有51芯片库，这就导致了keil5创建工程时找不到89C51芯片。就像下图这样只有ARM和STM系列芯片。</p><img src="https://img-blog.csdnimg.cn/20210606213725369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p><strong>真正原因在与keil5没有如下包（Legacy Device Database [no RTE]），如图:</strong></p><img src="https://img-blog.csdnimg.cn/20210606213852524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><blockquote><p><strong>解决思路：使keil5集成51芯片库</strong></p></blockquote><ol><li><p>首先我们找到51芯片库的下载地址，去官网下载即可。<br>下载地址： <a href="https://www.keil.com/download/product/">https://www.keil.com/download/product/</a></p></li><li><p>进入官网后点击C51</p></li></ol><img src="https://img-blog.csdnimg.cn/20210606214158601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p><strong>进去后需要填写一下个人信息，我们看情况填写就行了。</strong></p><ol start="3"><li>点击这个C51V960A.EXE下载安装51芯片库</li></ol><img src="https://img-blog.csdnimg.cn/20210606214424233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><blockquote><p>下载完成后以管理员身份运行，点击 <strong>next</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20210606214650227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"> <p>下一步确认自己keil5的根目录（一般默认是没问题的），Backup打勾后点击next</p><img src="https://img-blog.csdnimg.cn/20210606214813818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>下一步看情况填写:</p><p>&lt;src&#x3D;”<a href="https://img-blog.csdnimg.cn/20210606214844648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70&quot;&gt;">https://img-blog.csdnimg.cn/20210606214844648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70&quot;&gt;</a></p><p>然后点击next等待安装完成即可。注意安装前要关闭当前正在运行的keil5</p><ol start="4"><li>再次打开keil5创建工程</li></ol><p>点击project&gt;New xxxxxx创建工程，下拉菜单就出现了51单片机的芯片库</p><img src="https://img-blog.csdnimg.cn/20210606215219879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>选中后可以直接在搜索框搜索AT89C51，或者找到Microchip展开第一个就是</p><img src="https://img-blog.csdnimg.cn/20210606215423315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>点击OK之后51工程就创建成功了。</p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_43721163/article/details/117637028">KEIL5安装C51依赖，解决KEIL5无法创建C51工程</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> KEIL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KEIL5 </tag>
            
            <tag> C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马自达钥匙技巧等</title>
      <link href="/posts/264219034.html"/>
      <url>/posts/264219034.html</url>
      
        <content type="html"><![CDATA[<h1 id="钥匙中止功能，很多老司机也不一定知道！"><a href="#钥匙中止功能，很多老司机也不一定知道！" class="headerlink" title="钥匙中止功能，很多老司机也不一定知道！"></a>钥匙中止功能，很多老司机也不一定知道！</h1><img src="https://mmbiz.qpic.cn/mmbiz_gif/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bBIxSWp437SeAhZadk5AVNqGdIk9G5BbRTOOsGPjvtVdwIkx2fictbIw/640?wx_fmt=gif&wxfrom=5&wx_lazy=1"><h2 id="钥匙中止功能的作用"><a href="#钥匙中止功能的作用" class="headerlink" title="钥匙中止功能的作用"></a>钥匙中止功能的作用</h2><blockquote><p>当车辆防盗系统检测到钥匙被遗落在车厢或后备箱后，钥匙中止功能会被激活。此时留在车内的钥匙功能会被临时性中止，导致无法启动发动机，从而降低车辆被盗风险。</p></blockquote><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bEcMkYUsGMJ8byhVL7icoo6GkZOUpEwicsZTgP4OcKhlK0Oodf9ofLZibw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><h2 id="钥匙中止功能的触发场景"><a href="#钥匙中止功能的触发场景" class="headerlink" title="钥匙中止功能的触发场景"></a>钥匙中止功能的触发场景</h2><ul><li>带高级遥控功能的钥匙，会在以下两种情况触发钥匙中止功能：<blockquote><p>所有车门被上锁，钥匙留在后备箱内且后备箱门关闭<br>在这种情况下，可以通过按下电子开启装置的方式打开后备箱并取出钥匙，但取出的钥匙功能会暂时停止。</p></blockquote></li></ul><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bfEN7hAic99GsU2CNbVBUqVXZ6RTZJic9ZRvmPibibJjjibzf4us5xuATcfg/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><ul><li>钥匙留在车厢内时，使用另外一把钥匙使所有车门和后备箱上锁<br>在这种情况下，打开车门取出钥匙后，其功能会暂时停止。</li></ul><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bBEc7Iic3WfhCvfUnvGiaoCcSJbFrP0K3Plu3ZQkzn0ga1pAkab1XNCHw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><p><strong>注：以上两种情况发生时，车辆都会发出约 10 秒的蜂鸣声，以通知驾驶员钥匙遗留在车内。</strong></p><h2 id="如何解除钥匙中止功能"><a href="#如何解除钥匙中止功能" class="headerlink" title="如何解除钥匙中止功能"></a>如何解除钥匙中止功能</h2><blockquote><p>取回遗留在车内的钥匙后，只需在车内按下钥匙的开锁按钮便可解除钥匙中止功能，解除后发动机便可启动。</p></blockquote><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34b5N1Xe2eFefyg8GCNLGicvI5SCQzgCKsoJjibicsbz8icwH2wk87UpPaLlQ/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><h1 id="优秀评论："><a href="#优秀评论：" class="headerlink" title="优秀评论："></a>优秀评论：</h1><h2 id="长按开锁键5-6秒，然后四窗就会自动下降"><a href="#长按开锁键5-6秒，然后四窗就会自动下降" class="headerlink" title="长按开锁键5-6秒，然后四窗就会自动下降"></a>长按开锁键5-6秒，然后四窗就会自动下降</h2><p>在生活中，我想大家都遇到过这样一种烦恼，比如车中后排坐了人，然后人都习惯性的下去了，车子也熄火了，准备离开时却发现后排车窗没关。这时又要重新开启车的电源关闭车窗好麻烦啊！<br>但是马自达却又这样的冷门又实用的功能:拿起车钥匙，长按开锁键5-6秒，然后四窗就会自动下降。长按钥匙关闭键5-6秒，然后你会发现四门又奇迹般升上去了。其实还有一个更冷门的功能，有兴趣的试一下:锁-解锁-锁(不用开电源)四门车窗会开一条缝，但是好像没什么卵用。不知道厂家的意图。发现之后，带女朋友或者撩妹子时对着车门用四窗智能升降法再加上马自达的颜值，妹子一定会刮目相看，逼格提升不少呢～</p><h2 id="触摸板点击停放音乐，驾驶位置的钥匙记忆功能"><a href="#触摸板点击停放音乐，驾驶位置的钥匙记忆功能" class="headerlink" title="触摸板点击停放音乐，驾驶位置的钥匙记忆功能"></a>触摸板点击停放音乐，驾驶位置的钥匙记忆功能</h2><p>我都想给大家来个视频教学 给大家展现一下我们小昂的隐藏功能到底有哪些[旺柴]<br>首先就是触控板，设置<del>系统设置</del>触控板~勾选，然后这个触控板就可以单击暂停音乐，双击下一首音乐，方便又好玩[旺柴]<br>还有一个就是钥匙记忆功能，当我们调整到适合自己的驾驶位置跟后视镜后，按住set键，听到滴的一声响后拿出车钥匙按下解锁键，钥匙记忆功能就设置成功了[鼓掌]之后不管位置怎么调，只要我拿着设置过的钥匙解锁打开车门，都会重新调整到我自己的位置上！[旺柴]牛不牛🐮<br>总之 只要夸马自达的我们就是好朋友👬</p><h2 id="中控黑屏重启"><a href="#中控黑屏重启" class="headerlink" title="中控黑屏重启"></a>中控黑屏重启</h2><p>我们都知道有的导航会在使用时突然死机或者黑屏，然后就不知道怎么办，很麻烦！要是在高速死机黑屏真的对于不认识路又靠车上导航的人来说要哭了。马自达针对这个有特殊设计的！在中控台有几个功能键，同时长按音乐键和最右的导航键可以重启。</p><h2 id="保养提醒关闭"><a href="#保养提醒关闭" class="headerlink" title="保养提醒关闭"></a>保养提醒关闭</h2><p>马三车主报道，保养将至的时候只要开车总会跳出来提示，这个时候可以将大圆旋钮往左一掰，就可以取消了，不过不要忘记按时去保养哦[转圈]</p><h2 id="车钥匙控制升降窗户，自动启停不用关"><a href="#车钥匙控制升降窗户，自动启停不用关" class="headerlink" title="车钥匙控制升降窗户，自动启停不用关"></a>车钥匙控制升降窗户，自动启停不用关</h2><p>杠五黑骑士车主报道，分享两个很有用但大多数车主不知道的小技巧。一是车钥匙控制升降窗户。长按钥匙锁车键，可以自动升窗；长按钥匙解锁键，可以自动降窗，升降幅度以按钥匙时长随心控制，夏天散热必备神器，优雅降温！二是自动启停不用关。轻踩刹车刹住后，istop灯闪烁，松开刹车，车停住了，但是不会熄火，如果需要熄火再深踩一脚刹车即可。如果需要直接熄火可以直接重踩刹车。</p><h2 id="安全带高度调节，后排座椅放倒"><a href="#安全带高度调节，后排座椅放倒" class="headerlink" title="安全带高度调节，后排座椅放倒"></a>安全带高度调节，后排座椅放倒</h2><p>1、安全带高度可手动调节。<br>2、按两下锁车键可以寻车。<br>3、长按开锁按键，所有车窗和天窗同时打开。长按锁车按键，所有车窗和天窗关闭。<br>4、钥匙没电时，可以拔出机械钥匙打开车门，把有马自达车标的地方贴在一键启动按钮上，即可识别车钥匙打火。<br>5、汽车行驶中落锁功能可在汽车电脑的设置中设置。<br>6、汽车后排座椅可放倒，可应急使用，以及用来休息。</p><h2 id="儿童锁功能开启方式"><a href="#儿童锁功能开启方式" class="headerlink" title="儿童锁功能开启方式"></a>儿童锁功能开启方式</h2><p>“儿童锁”这个功能设置的非常好，打开此功能后，后排车门只能从车外打开，可以避免发生一些意外，保障后排儿童的安全。具体操作位置在后排副驾一侧的门上，有一个小圆孔，通过旋转孔内的小孔槽，即可开启&#x2F;关闭儿童锁。</p><h2 id="行车落锁功能"><a href="#行车落锁功能" class="headerlink" title="行车落锁功能"></a>行车落锁功能</h2><p>行车落锁🔒 可以进行手工设置和悦联系统设置。<br>下面是手工设置方法哦！<br>自动落锁5种模式先选好其中一个。<br>1：自动车门上锁功能将失效。<br>2：当车速为20km&#x2F;h或更高时速，则所有车门和后舱门将自动上锁。<br>3：出厂设定，当车速为20km&#x2F;h或更高时速，则所有车门和后备舱门将自动上锁。当点火开关从ON切换至OFF位置时，所有车门和后舱门将开锁。<br>4：当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动上锁。<br>5：当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动上锁。当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动开锁。<br>操作方法：<br>1.安全停放车辆所有车门必须关闭状态<br>2.将点火开关切换至on档<br>3.将点火开关切换至on档20秒钟内按住驾驶员车门门锁开关上的锁侧，然后约8秒钟后应听到哗的一声。<br>4.按下车门门锁开锁侧，所按次数与选择功能编号相同即可。<br>5.变更功能设定后三秒钟，将根据所选的功能编号，蜂鸣器响声几次。</p><h2 id="方向盘锁死"><a href="#方向盘锁死" class="headerlink" title="方向盘锁死"></a>方向盘锁死</h2><p>方向盘锁死，点不着火，按发动，灯闪烁后就不再反应。这时，需要将钥匙靠近启动按钮，同时手抓牢方向盘，点击启动的同时稍用力转动方向盘即可解锁。之前昂克赛拉发生过几次，用此方法屡试不爽</p><h2 id="重启系统，倒车静音，显示时间"><a href="#重启系统，倒车静音，显示时间" class="headerlink" title="重启系统，倒车静音，显示时间"></a>重启系统，倒车静音，显示时间</h2><p>MZD CONNECT马自达悦联系统懂你又贴心，自带 “隐形”重启按钮，只要将“音乐键”与“导航键”同时按下3秒，即可优雅的将死机的系统重启，而不必停车熄火再着车这些繁琐举动。<br>贴心的并不仅在重启按钮上，人性化方面也做到了细致的考虑。倒车时如果音响声音过大影响倒车雷达蜂鸣警告音的收听，可在车辆静止状态短按指挥键声音旋钮，使音响静音，不影响倒车雷达蜂鸣警告音的收听。<br>除此之外，悦联系统还可变身成为一台数字时钟，只需长按3秒音量旋钮就会关闭悦联系统，只显示时间。</p><h2 id="遥控钥匙匹配座椅-设置迎宾模式"><a href="#遥控钥匙匹配座椅-设置迎宾模式" class="headerlink" title="遥控钥匙匹配座椅,设置迎宾模式"></a>遥控钥匙匹配座椅,设置迎宾模式</h2><p>遥控钥匙匹配座椅，设置迎宾模式。首先将座椅调至合适上车位置，按遥控钥匙的解锁键，此时座椅默认为遥控钥匙1上车位置，然后将座椅调至合适驾驶位置，按设置并确认1位置，这样就设置了主驾驶迎宾模式。下次开车门主驾座椅就会自动调整到合适上车位置，到了驾驶位后按1，自动调整到驾驶位置。如有不正确，请指教</p><h2 id="马三天窗透气模式"><a href="#马三天窗透气模式" class="headerlink" title="马三天窗透气模式"></a>马三天窗透气模式</h2><p>昨天在抖音刷到马自达的视频，才知道原来马三的天窗按键往前面推是天窗透气的模式[捂脸][捂脸]</p><h2 id="自适应智能大灯"><a href="#自适应智能大灯" class="headerlink" title="自适应智能大灯"></a>自适应智能大灯</h2><p>很贴心的自适应智能大灯<br>细心的马自达车主会发现，大灯会自动调节高度，它会根据坐上的人调节，是不是很智能。如果感觉不到的车主，可以把车开到墙边，坐上人就很明显了。还有不知道你们发现没有，当你在上坡时或者下坡时灯光会根据路段的变化而变化，下坡会把灯光往下聚集，因为在马自达的左后悬挂下有一个接收感应数据的随动传感器，连接部分的是一节球头，当车辆上坡车的重心在车尾，后悬挂下摆臂弹簧弹起，球头杆受感应，纵向角度拉长。由传感器传输数据到ecu再传输到大灯模组控制单元根据数据调整光聚(下坡同理)</p><h2 id="CX5锁车，车尾门电子锁"><a href="#CX5锁车，车尾门电子锁" class="headerlink" title="CX5锁车，车尾门电子锁"></a>CX5锁车，车尾门电子锁</h2><p>1。CX5停车按下一键启动熄火后，发现后面2个车窗没关，不用再按一键启动通电后升玻璃，只要4个车门没有开车门的动作，就可以直接在主驾驶升车窗玻璃，如果乘客已经开车门，下车后长按遥控器锁车键可以自动关闭4门车窗。相反长按解锁键自动降下车窗。<br>2。车尾门开门把手右边10厘米，有个电子锁车按钮(只能锁，不能开)<br>3。后排座椅靠背有2档可调，跑长途坐累了只需要在靠背上端把塑料抠手抬一下即可往后放躺几度，长途更舒适。<br>4。后挡除霜开关即后视镜除霜开关。两者同一个开关，很多新车主不知道。<br>5。大灯高度调节是自动的。点火后，行车电脑会根据当前车重自动调节高低，当然也可以打开机盖用一把十字起，垂直插入大灯后方的圆孔里自己调节。<br>6。车机悦联系统是可以播放无损格式音乐的。自己用音乐app下载FLAC无损格式，再用小程序改后缀名为.MP3，车机即可识别播放，建议用SD卡，可腾个USB接口出来。<br>7。建议车主到当地4S店加装胎压显示模块，右视辅助，电动尾门一脚踢开关。这3个功能非常实用。</p><h2 id="音乐功能"><a href="#音乐功能" class="headerlink" title="音乐功能"></a>音乐功能</h2><p>令天发现了马三的隐藏小功能，当音乐在播放时候轻点一下音乐就会暂停，点俩下就会换下一首！功能虽小但是很实用，驾驶时不用分心了！车行千里，安全第一！为马三点赞！</p><h2 id="放倒后排座椅，钥匙无法开门启动"><a href="#放倒后排座椅，钥匙无法开门启动" class="headerlink" title="放倒后排座椅，钥匙无法开门启动"></a>放倒后排座椅，钥匙无法开门启动</h2><p>次世代马自达3<br>在副驾驶后排位置，找到隐藏开关，扣开顺着箭头的方向掰动按键，这样就能放到后排座椅了。<br>当遥控钥匙无法开门时，用机械钥匙，拉开门把手，一拧门就开了。<br>车辆挂P挡时候再按键的上面有盖子，扣开，用坚硬的物体捅下，就能解锁推车了。</p><h2 id="智能钥匙的功能："><a href="#智能钥匙的功能：" class="headerlink" title="智能钥匙的功能："></a>智能钥匙的功能：</h2><p>1、携带钥匙贴近车辆，触模主驾驶车门把手的感应区，可以智能开启或锁止车门。<br>2、遥控钥匙失灵或电池没电，可以打开隐藏的钥匙手动开锁，进入车内。<br>3、智能钥匙无电，将钥匙贴在方向盘右侧下面带有钥匙标志的感应区，可以启动车辆。<br>4、停车熄火后，长按锁止键，可以一键升窗或落窗。<br>5、长按带有背箱开启标志的按键，可以开启或关闭后备箱。<br>6、携带钥匙靠近车辆，用脚扫扫后导流板下面，可以感应开启后备箱。</p><h2 id="座椅迎宾功能"><a href="#座椅迎宾功能" class="headerlink" title="座椅迎宾功能"></a>座椅迎宾功能</h2><p>座椅迎宾功能!有电动座椅这项功能的车主可以看下说明手册，只要调节好自己的座椅，后视镜，储存激活。如果有人开了你的车，你上车还要调整你舒适的坐姿，这个时候只需要电子钥匙在身边，使用无钥匙进入，打开车门，你会发现座椅和后视镜会自动的在调整，调整到你设置好的坐姿和后视镜角度!</p><h2 id="无钥匙进入功能失灵各种情况"><a href="#无钥匙进入功能失灵各种情况" class="headerlink" title="无钥匙进入功能失灵各种情况"></a>无钥匙进入功能失灵各种情况</h2><p>锁车自动落锁功能需要在中控屏幕设置打开离车落锁功能，注意次时代无钥匙进入需要下车关门，并且出现滴的一声才会自动落锁！<br>分析无钥匙进入功能失灵各种情况：<br>可能会出现自动落锁（下车自动锁车）失灵的操作：<br>0.钥匙进入了省电模式（一般是这个原因的多）-退出即可<br>1.主副驾驶门不是最后一个关闭<br>2.车门，后尾箱没有关闭<br>3.副驾驶上的门把手有人在摸着不放<br>4.雨天门把手湿了<br>5.把手插进门把手里面关门<br>6.钥匙套是金属的<br>7.钥匙距离过远<br>8.拉开车门，短时间内又关车门<br>9.钥匙电量不足<br>可能会出现无钥匙进入（上车自动解锁）失灵的操作:<br>1.钥匙进入了省电模式-退出即可<br>2.上车的时候副驾驶比你先摸门把手<br>3.没有把手插入门把手里面拉<br>4.门把手有水<br>5.钥匙电量不足<br>6.钥匙套是金属的<br>7.钥匙距离过远</p><h2 id="儿童锁"><a href="#儿童锁" class="headerlink" title="儿童锁"></a>儿童锁</h2><p>最实用的功能莫过于左右后车门的儿童锁了，别看只是那一点点的白色小按钮，安全作用不言而喻，孩子玩嗨了，上车下车就会把安全抛之脑后，等红绿灯时也不用担心她们随意下车，很安全的设计！</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://mp.weixin.qq.com/s/I-e1iIVbQKoBonOJr3t7Kg">钥匙中止功能，很多老司机也不一定知道！</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 生活技能 </category>
          
          <category> 马自达 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汽车 </tag>
            
            <tag> 马自达 </tag>
            
            <tag> 生活类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批处理常用命令总结 - 批处理命令简介(转载)</title>
      <link href="/posts/1240814313.html"/>
      <url>/posts/1240814313.html</url>
      
        <content type="html"><![CDATA[<h1 id="批处理常用命令总结-批处理命令简介"><a href="#批处理常用命令总结-批处理命令简介" class="headerlink" title="批处理常用命令总结 - 批处理命令简介"></a>批处理常用命令总结 - 批处理命令简介</h1><h3 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h3><p>打开回显或关闭请求回显功能，或显示消息。如果没有任何参数，echo 命令将显示当前回显设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo [&#123;on|off&#125;] [message]</span><br><span class="line">Sample：@echo off &#x2F; echo hello world</span><br></pre></td></tr></table></figure><p>在实际应用中我们会把这条命令和重定向符号（也称为管道符号，一般用<code>&gt;</code> <code>&gt;&gt;</code> <code>^</code>）结合来实现输入一些命令到特定的文件中。</p><h3 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h3><p>注释命令，类似于在C语言中的<code>/*--------*/</code>，它并不会被执行，只是起一个注释的作用，便于别人阅读和你自己日后修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Rem Message</span><br><span class="line">Sample：@Rem Here is the description.</span><br></pre></td></tr></table></figure><h3 id="pause"><a href="#pause" class="headerlink" title="pause"></a>pause</h3><p>暂停命令。运行 Pause 命令时，将显示下面的消息：<code>Press any key to continue. . .(或：请按任意键继续. . .)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample：</span><br><span class="line">@echo off</span><br><span class="line">:begin</span><br><span class="line">copy G:*.* d：&#x2F;back</span><br><span class="line">echo 请插入另一张光盘...</span><br><span class="line">pause</span><br><span class="line">goto begin</span><br></pre></td></tr></table></figure><p>在这个例子中，驱动器 G 中磁盘上的所有文件均复制到d:&#x2F;back中。显示的注释提示您将另一张光盘盘放入驱动器 G 时，pause 命令会使程序挂起，以便您更换光盘，然后按任意键继续处理。</p><h3 id="call"><a href="#call" class="headerlink" title="call"></a>call</h3><p>从一个批处理程序调用另一个批处理程序，并且不终止父批处理程序。call 命令接受用作调用目标的标签。如果在脚本或批处理文件外使用 Call，它将不会在命令行起作用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">call [[Drive:][Path] FileName ] [:label [arguments]]</span><br><span class="line">参数</span><br><span class="line">[Drive:&#125;[Path] FileName</span><br></pre></td></tr></table></figure><p>指定要调用的批处理程序的位置和名称。</p><h3 id="start-命令"><a href="#start-命令" class="headerlink" title="start 命令"></a>start 命令</h3><p>调用外部程序，所有的DOS命令和命令行程序都可以由start命令来调用。 如：start calc.exe 即可打开Windows的计算器。</p><ul><li><p>常用参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MIN 开始时窗口最小化</span><br><span class="line">SEPARATE 在分开的空间内开始 16 位 Windows 程序</span><br><span class="line">HIGH 在 HIGH 优先级类别开始应用程序</span><br><span class="line">REALTIME 在 REALTIME 优先级类别开始应用程序</span><br><span class="line">WAIT 启动应用程序并等候它结束</span><br><span class="line">parameters 这些为传送到命令&#x2F;程序的参数</span><br></pre></td></tr></table></figure></li></ul><p>执行的应用程序是 32-位 GUI 应用程序时，CMD.EXE 不等应用程序终止就返回命令提示。如果在命令脚本内执行，该新行为则不会发生。</p><h3 id="goto"><a href="#goto" class="headerlink" title="goto"></a>goto</h3><p>跳转命令。程序指针跳转到指定的标签，从标签后的第一条命令开始继续执行批处理程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">goto label （label是参数，指定所要转向的批处理程序中的行。）</span><br><span class="line">Sample：</span><br><span class="line">if &#123;%1&#125;&#x3D;&#x3D;&#123;&#125; goto noparms</span><br><span class="line">if &#123;%2&#125;&#x3D;&#x3D;&#123;&#125; goto noparms（如果这里的if、%1、%2你不明白的话，先跳过去，后面会有详细的解释</span><br><span class="line">。）</span><br><span class="line">@Rem check parameters if null show usage</span><br><span class="line">:noparms</span><br><span class="line">echo Usage: monitor.bat ServerIP PortNumber</span><br><span class="line">goto end</span><br></pre></td></tr></table></figure><p>标签的名字可以随便起，但是最好是有意义的字母啦，字母前加个：用来表示这个字母是标签，goto命令就是根据这个：来寻找下一步跳到到那里。最好有一些说明这样你别人看起来才会理解你的意图啊。</p><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>显示、设置或删除变量。</p><p>显示变量：set 或 set s 前者显示批处理当前已定义的所有变量及其值，后者显示所有以s开头的变量及值。</p><p>设置变量：set aa&#x3D;abcd 此句命令便可向变量aa赋值abcd。</p><p>如果变量aa已被定义，则aa的值被修改为abcd；若aa尚未定义，则此句命令即可定义新的变量aa，同时为变量aa赋予初始值abcd。</p><p>删除变量：set aa&#x3D; 此句命令即可删除变量aa。若变量aa已被定义，则删除变量aa；若aa尚未定义，则此句命令为实质意义。</p><p>需要说明的是，批处理中的变量是不区分类型的，不需要像C语言中的变量那样还要区分int、float、char等。比如执行set aa&#x3D;345后，变量aa的值既可以被视为数字345，也可以被视为字符串345。</p><p>set命令具有扩展功能，如用作交互输入、字符串处理、数值计算等，属于高级命令范畴。</p><h3 id="批处理常用命令及用法大全"><a href="#批处理常用命令及用法大全" class="headerlink" title="批处理常用命令及用法大全"></a>批处理常用命令及用法大全</h3><p>阅读下面文字需要一定的dos基础概念，象：盘符、文件、目录(文件夹)、子目录、根目录、当前目录</p><p>每个命令的完整说明请加 &#x2F;? 参数参考微软的帮助文档可以看到，在 &#x2F;? 帮助里，”命令扩展名”一词会经常出现”命令扩展名”是指相对于win98的dos版本而言，每个命令新增的功能命令测试环境win2000proSP4win98的命令功能太少，就不作研究了。</p><p>注：如果对某一命令还不是很熟悉，可以在命令行窗口下输入：命令名&#x2F;?的方式来获得帮助。</p><p>例如：对dir命令的应用不熟悉，可以在命令行窗口下输入：<code>dir /?</code></p><ul><li><p>echo 和 @回显控制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@                    #关闭单行回显</span><br><span class="line">echo off             #从下一行开始关闭回显</span><br><span class="line">@echo off            #从本行开始关闭回显。一般批处理第一行都是这个</span><br><span class="line">echo on              #从下一行开始打开回显</span><br><span class="line">echo                 #显示当前是 echo off 状态还是 echo on 状态</span><br><span class="line">echo.                #输出一个&quot;回车换行&quot;，一般就是指空白行</span><br><span class="line">echo hello world     #输出hello world</span><br></pre></td></tr></table></figure></li></ul><p>“关闭回显”是指运行批处理文件时，不显示文件里的每条命令，只显示运行结果批处理开始和结束时，系统都会自动打开</p><ul><li>errorlevel程序返回码</li></ul><p>echo %errorlevel%每个命令运行结束，可以用这个命令行格式查看返回码用于判断刚才的命令是否执行成功默认值为0，</p><p>一般命令执行出错会设 errorlevel 为1</p><ul><li><p>dir显示目录中的文件和子目录列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dir                 #显示当前目录中的文件和子目录</span><br><span class="line">dir &#x2F;a              #显示当前目录中的文件和子目录，包括隐藏文件和系统文件</span><br><span class="line">dir c: &#x2F;a:d         #显示 C 盘当前目录中的目录</span><br><span class="line">dir c:&#x2F; &#x2F;a:-d       #显示 C 盘根目录中的文件dir d:&#x2F;mp3 &#x2F;b&#x2F;p     #逐屏显示 d:&#x2F;mp3 目录里的文件，只显示文件名，不显示时间和大小</span><br><span class="line">dir *.exe &#x2F;s        #显示当前目录和子目录里所有的.exe文件其中 * 是通配符，代表所有的文件名，还一个通配符 ? 代表一个</span><br><span class="line">                    #任意字母或汉字如 c*.* 代表以 c 开头的所有文件?.exe 代表所有文件名是一个字母的.exe文件如果指定的目录或文件</span><br><span class="line">                    #不存在，将返回 errorlevel 为1;</span><br><span class="line"></span><br><span class="line"># 每个文件夹的 dir 输出都会有2个子目录 . 和 ... 代表当前目录.. 代表当前目录的上级目录</span><br><span class="line">dir .               #显示当前目录中的文件和子目录</span><br><span class="line">dir ..              #显示当前目录的上级目录中的文件和子目录</span><br></pre></td></tr></table></figure></li></ul><p>其它参数可参考 dir &#x2F;?</p><ul><li><p>cd更改当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd mp3              #进入当前目录中的mp3 目录</span><br><span class="line">cd ..               #进入当前目录中的上级目录</span><br><span class="line">cd&#x2F;                 #进入根目录</span><br><span class="line">cd                  #显示当前目录</span><br><span class="line">cd &#x2F;d d:&#x2F;mp3        #可以同时更改盘符和目录</span><br><span class="line">cd &quot;Documents and Settings&quot;&#x2F;All users文件名带空格，路径前需要加上引号！！如果更改到的目录不存在，则出错返</span><br></pre></td></tr></table></figure></li><li><p>md创建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md abc              #在当前目录里建立子目录 abc</span><br><span class="line">md d:&#x2F;a&#x2F;b&#x2F;c         #如果 d:&#x2F;a 不存在，将会自动创建</span><br></pre></td></tr></table></figure></li><li><p>rd删除目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rd abc              #删除当前目录里的 abc 子目录，要求为空目录</span><br><span class="line">rd &#x2F;s&#x2F;q d:&#x2F;temp     #删除 d:&#x2F;temp 文件夹及其子文件夹和文件，不需要按 Y 确认</span><br></pre></td></tr></table></figure></li><li><p>del删除文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">del d:&#x2F;test.txt     #删除指定文件，不能是隐藏、系统、只读文件</span><br><span class="line">del *.*删除当前目录里的所有文件，不包括隐藏、系统、只读文件，要求按 Y 确认</span><br><span class="line">del &#x2F;q&#x2F;a&#x2F;f d:&#x2F;temp&#x2F;*.*删除 d:&#x2F;temp 文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录</span><br><span class="line">del &#x2F;q&#x2F;a&#x2F;f&#x2F;s d:&#x2F;temp&#x2F;*.*删除 d:&#x2F;temp 及子文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录</span><br></pre></td></tr></table></figure></li><li><p>ren文件重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ren 1.txt 2.bak     #把 1.txt 更名为 2.bak</span><br><span class="line">ren *.txt *.ini     #把当前目录里所有.txt文件改成.ini文件</span><br><span class="line">ren d:&#x2F;temp tmp     #支持对文件夹的重命名</span><br></pre></td></tr></table></figure></li><li><p>cls清屏</p></li><li><p>type显示文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type c:&#x2F;boot.ini    #显示指定文件的内容，程序文件一般会显示乱码</span><br><span class="line">type *.txt          #显示当前目录里所有.txt文件的内容</span><br></pre></td></tr></table></figure></li><li><p>copy拷贝文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">copy c:&#x2F;test.txt d:&#x2F;复制 c:&#x2F;test.txt 文件到 d:&#x2F;</span><br><span class="line">copy c:&#x2F;test.txt d:&#x2F;test.bak复制 c:&#x2F;test.txt 文件到 d:&#x2F; ，并重命名为 test.bak</span><br><span class="line">copy c:&#x2F;*.*复制 c:&#x2F; 所有文件到当前目录，不包括隐藏文件和系统文件不指定目标路径，则默认目标路径为当前目录</span><br><span class="line">copy con test.txt从屏幕上等待输入，按 Ctrl+Z 结束输入，输入内容存为test.txt文件con代表屏幕，prn代表打印机，nul代表空设备</span><br><span class="line">copy 1.txt + 2.txt 3.txt合并 1.txt 和 2.txt 的内容，保存为 3.txt 文件如果不指定 3.txt ，则保存到 1.txt</span><br><span class="line">copy test.txt +复制文件到自己，实际上是修改了文件日期</span><br></pre></td></tr></table></figure></li><li><p>title设置cmd窗口的标题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title 新标题        #可以看到cmd窗口的标题栏变了</span><br></pre></td></tr></table></figure></li><li><p>ver显示系统版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">14 label 和 vol设置卷标</span><br><span class="line">vol                 #显示卷标</span><br><span class="line">label               #显示卷标，同时提示输入新卷标</span><br><span class="line">label c:system      #设置C盘的卷标为 system</span><br></pre></td></tr></table></figure></li><li><p>pause暂停命令</p></li></ul><p>运行该命令时，将显示消息：<code>请按任意键继续 . . .</code>，一般用于看清楚屏幕上显示的内容</p><ul><li>rem 和 ::注释命令</li></ul><p>注释行不执行操作</p><ul><li><p>date 和 time日期和时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">date          #显示当前日期，并提示输入新日期，按&quot;回车&quot;略过输入</span><br><span class="line">date&#x2F;t        #只显示当前日期，不提示输入新日期</span><br><span class="line">time          #显示当前时间，并提示输入新时间，按&quot;回车&quot;略过输入</span><br><span class="line">time&#x2F;t        #只显示当前时间，不提示输入新时间</span><br></pre></td></tr></table></figure></li><li><p>goto 和 :跳转命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:label        #行首为:表示该行是标签行，标签行不执行操作</span><br><span class="line">goto label    #跳转到指定的标签那一行</span><br></pre></td></tr></table></figure></li><li><p>find (外部命令)查找命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find &quot;abc&quot; c:&#x2F;test.txt在 c:&#x2F;test.txt 文件里查找含 abc 字符串的行如果找不到，将设 errorlevel 返回码为1</span><br><span class="line">find &#x2F;i &quot;abc&quot; c:&#x2F;test.txt查找含 abc 的行，忽略大小写</span><br><span class="line">find &#x2F;c &quot;abc&quot; c:&#x2F;test.txt显示含 abc 的行的行数</span><br></pre></td></tr></table></figure></li><li><p>more (外部命令)逐屏显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more c:&#x2F;test.txt    #逐屏显示 c:&#x2F;test.txt 的文件内容</span><br></pre></td></tr></table></figure></li><li><p>tree显示目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree d:&#x2F;            #显示D盘的文件目录结构</span><br></pre></td></tr></table></figure></li><li><p>&amp;顺序执行多条命令，而不管命令是否执行成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c: &amp; cd&#x2F; &amp; dir &#x2F;w相当于把下面3行命令写到1行去了c:cd&#x2F;dir &#x2F;w</span><br></pre></td></tr></table></figure></li><li><p>&amp;&amp;顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f: &amp;&amp; cd&#x2F; &amp;&amp; dir &gt;c:&#x2F;test.txt注意如果f盘不存在，那么后面2条命令将不会执行</span><br><span class="line">find &quot;ok&quot; c:&#x2F;test.txt &amp;&amp; echo 成功如果找到了&quot;ok&quot;字样，就显示&quot;成功&quot;，找不到就不显示</span><br></pre></td></tr></table></figure></li><li><p>||顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find &quot;ok&quot; c:&#x2F;test.txt || echo 不成功如果找不到&quot;ok&quot;字样，就显示&quot;不成功&quot;，找到了就不显示</span><br></pre></td></tr></table></figure></li><li><p>|管道命令</p></li></ul><p>前一个命令的执行结果输出到后一个命令</p><p><code>dir *.* /s/a | find /c &quot;.exe&quot;</code>管道命令表示先执行 dir 命令，对其输出的结果执行后面的 find 命令该命令行结果：</p><p>输出当前文件夹及所有子文件夹里的.exe文件的个数</p><p><code>type c:/test.txt|more</code>这个和 more c:&#x2F;test.txt 的效果是一样的</p><ul><li>&gt; 和 &gt;&gt;输出重定向命令</li></ul><p>&gt; 清除文件中原有的内容后再写入</p><p>&gt;&gt; 追加内容到文件末尾，而不会清除原有的内容主要将本来显示在屏幕上的内容输出到指定文件中指定文件如果不存在，则自动生成该文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo hello world&gt;c:&#x2F;test.txt   生成c:&#x2F;test.txt文件，内容为hello world这个格式在批处理文件里用得很多，可以生成.reg .bat .vbs 等临时文件</span><br><span class="line">type c:&#x2F;test.txt &gt;prn          屏幕上不显示文件内容，转向输出到打印机</span><br><span class="line">echo hello world&gt;con           在屏幕上显示hello world，实际上所有输出都是默认 &gt;con 的</span><br><span class="line">copy c:&#x2F;test.txt f: &gt;nul       拷贝文件，并且不显示&quot;文件复制成功&quot;的提示信息，但如果f盘不存在，还是会显示出错信息</span><br><span class="line">copy c:&#x2F;test.txt f: &gt;nul 2&gt;nul 不显示&quot;文件复制成功&quot;的提示信息，并且f盘不存在的话，也不显示错误提示信息</span><br><span class="line">echo ^^W ^&gt; ^W&gt;c:&#x2F;test.txt     生成的文件内容为 ^W &gt; W^ 和 &gt; 是控制命令，要把它们输出到文件，必须在前面加个 ^符号</span><br></pre></td></tr></table></figure><ul><li><code>&lt;</code> 从文件中获得输入信息，而不是从屏幕上</li></ul><p>一般用于 date time label 等需要等待输入的命令，这样就可以不等待输入直接修改当前日期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo 2005-05-01&gt;temp.txt</span><br><span class="line">date &lt;temp.txt</span><br><span class="line">del temp.txt</span><br></pre></td></tr></table></figure><ul><li>%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %*命令行传递给批处理的参数<ul><li>%0 批处理文件本身</li><li>%1 第一个参数</li><li>%9 第九个参数</li><li>%* 从第一个参数开始的所有参数</li></ul></li></ul><p>在C盘根目录新建test.bat，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo %0</span><br><span class="line">echo %1</span><br><span class="line">echo %2</span><br><span class="line">echo %*</span><br></pre></td></tr></table></figure><p>运行cmd，输入 <code>c:/test.bat &quot;/a&quot; /b /c /d</code>,可以看出每个参数的含意 修改test.bat内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo %1</span><br><span class="line">echo %~1</span><br><span class="line">echo %0</span><br><span class="line">echo %~f0</span><br><span class="line">echo %~d0</span><br><span class="line">echo %~p0</span><br><span class="line">echo %~n0</span><br><span class="line">echo %~x0</span><br><span class="line">echo %~s0</span><br><span class="line">echo %~a0</span><br><span class="line">echo %~t0</span><br><span class="line">echo %~z0</span><br></pre></td></tr></table></figure><p>再运行cmd，输入 <code>c:/test.bat &quot;/a&quot; /b /c /d</code>可以参照 call&#x2F;? 或 for&#x2F;? 看出每个参数的含意，注意这里可以对文件进行日期比较和大小比较：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo load &quot;%%1&quot; &quot;%%2&quot;&gt;c:&#x2F;test.txt</span><br></pre></td></tr></table></figure><p>生成的文件内容为 load “%1” “%2”批处理文件里，用这个格式把命令行参数输出到文件</p><ul><li>set设置变量</li></ul><p>引用变量可在变量名前后加 % ，即 %变量名%</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">set                    #显示目前所有可用的变量，包括系统变量和自定义的变量</span><br><span class="line">echo %SystemDrive%     #显示系统盘盘符。系统变量可以直接引用</span><br><span class="line">set p                  #显示所有以p开头的变量，要是一个也没有就设errorlevel&#x3D;1</span><br><span class="line">set p&#x3D;aa1bb1aa2bb2     #设置变量p，并赋值为 &#x3D; 后面的字符串，即aa1bb1aa2bb2</span><br><span class="line">echo %p%               #显示变量p代表的字符串，即aa1bb1aa2bb2</span><br><span class="line">echo %p:~6%            #显示变量p中第6个字符以后的所有字符，即aa2bb2</span><br><span class="line">echo %p:~6,3%          #显示第6个字符以后的3个字符，即aa2</span><br><span class="line">echo %p:~0,3%          #显示前3个字符，即aa1</span><br><span class="line">echo %p:~-2%           #显示最后面的2个字符，即b2</span><br><span class="line">echo %p:~0,-2%         #显示除了最后2个字符以外的其它字符，即aa1bb1aa2b</span><br><span class="line">echo %p:aa&#x3D;c%          #用c替换变量p中所有的aa，即显示c1bb1c2bb2</span><br><span class="line">echo %p:aa&#x3D;%           #将变量p中的所有aa字符串置换为空，即显示1bb12bb2</span><br><span class="line">echo %p:*bb&#x3D;c%         #第一个bb及其之前的所有字符被替换为c，即显示c1aa2bb2</span><br><span class="line">set p&#x3D;%p:*bb&#x3D;c%        #设置变量p，赋值为 %p:*bb&#x3D;c% ，即c1aa2bb2</span><br><span class="line">set &#x2F;a p&#x3D;39            #设置p为数值型变量，值为39</span><br><span class="line">set &#x2F;a p&#x3D;39&#x2F;10         #支持运算符，有小数时用去尾法，39&#x2F;10&#x3D;3.9，去尾得3，p&#x3D;3set &#x2F;a p&#x3D;p&#x2F;10</span><br><span class="line">                       #用 &#x2F;a 参数时，在 &#x3D; 后面的变量可以不加%直接引用set &#x2F;a p&#x3D;&quot;1&amp;0&quot;</span><br><span class="line">                       #&quot;与&quot;运算，要加引号。其它支持的运算符参见set&#x2F;?</span><br><span class="line">set p&#x3D;                 #取消p变量</span><br><span class="line">set &#x2F;p p&#x3D;              请输入屏幕上显示&quot;请输入&quot;，并会将输入的字符串赋值给变量p注意这条可以用来取代 choice 命令</span><br></pre></td></tr></table></figure><p>注意变量在 if 和 for 的复合语句里是一次性全部替换的，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set p&#x3D;aaa</span><br><span class="line">if %p%&#x3D;&#x3D;aaa (   </span><br><span class="line">echo %p%  </span><br><span class="line">set p&#x3D;bbb   </span><br><span class="line">echo %p%    )</span><br></pre></td></tr></table></figure><p>结果将显示aaaaaa因为在读取 if 语句时已经将所有 %p% 替换为aaa这里的”替换”，在 &#x2F;? 帮助里就是指”扩充”、”环境变量扩充”可以启用”延缓环境变量扩充”，用 ! 来引用变量，即<code>!变量名!</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">SETLOCAL ENABLEDELAYEDEXPANSION</span><br><span class="line">set p&#x3D;aaaif %p%&#x3D;&#x3D;aaa ( </span><br><span class="line">echo %p%   </span><br><span class="line">set p&#x3D;bbb   </span><br><span class="line">echo !p!    )</span><br><span class="line">ENDLOCAL</span><br></pre></td></tr></table></figure><p>结果将显示aaabbb 还有几个动态变量，运行 set 看不到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%CD%                  #代表当前目录的字符串</span><br><span class="line">%DATE%                #当前日期</span><br><span class="line">%TIME%                #当前时间</span><br><span class="line">%RANDOM%              #随机整数，介于0~32767</span><br><span class="line">%ERRORLEVEL%          #当前ERRORLEVEL 值</span><br><span class="line">%CMDEXTVERSION%       #当前命令处理器扩展名版本号</span><br><span class="line">%CMDCMDLINE%          #调用命令处理器的原始命令行可以用echo命令查看每个变量值，如 echo %time%</span><br><span class="line"></span><br><span class="line">注意 %time%精确到毫秒，在批处理需要延时处理时可以用到</span><br></pre></td></tr></table></figure><ul><li><p>start批处理中调用外部程序的命令，否则等外部程序完成后才继续执行剩下的指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">start explorer d:&#x2F;调用图形界面打开D盘</span><br><span class="line">@echo off</span><br><span class="line">cd &#x2F;d %~dp0</span><br><span class="line">regedit &#x2F;s 劲舞团.reg</span><br><span class="line">start patcher.exe</span><br></pre></td></tr></table></figure></li></ul><p>不加 start 命令的话，”劲舞团”运行时，后面会有个黑乎乎的cmd窗口</p><ul><li><p>call批处理中调用另外一个批处理的命令，否则剩下的批处理指令将不会被执行有时有的应用程序用start调用出错的，也可以call调用</p></li><li><p>choice (外部命令)选择命令让用户输入一个字符，从而选择运行不同的命令，返回码errorlevel为1234……</p></li></ul><p>win98里是choice.com，win2000pro里没有，可以从win98里拷过来，win2003里是choice.exe</p><p>choice &#x2F;N &#x2F;C y &#x2F;T 5 &#x2F;D y&gt;nul延时5秒</p><p>下面是个 choice 语句的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem 以下在win2000pro运行通过，从win98里拷的chioce.com文件</span><br><span class="line">choice &#x2F;c:abc aaa,bbb,ccc</span><br><span class="line">if errorlevel 3 goto ccc</span><br><span class="line">if %errorlevel%&#x3D;&#x3D;2 goto bbb</span><br><span class="line">if errorlevel&#x3D;&#x3D;1 goto aaa</span><br><span class="line">rem 必须先判断数值高的返回码rem 可以看到 errorlevel 值的判断有3种写法，有时某种写法不好用，可以用另外的写法</span><br><span class="line">rem 直接运行</span><br><span class="line"></span><br><span class="line">chioce相当于运行</span><br><span class="line">choice &#x2F;c:yn:aaa</span><br><span class="line">echo aaa</span><br><span class="line">goto end</span><br><span class="line">:bbb</span><br><span class="line">echo bbb</span><br><span class="line">goto end</span><br><span class="line">:ccc</span><br><span class="line">echo ccc</span><br><span class="line">goto end</span><br><span class="line">:end</span><br></pre></td></tr></table></figure><ul><li><p>assoc 和 ftype文件关联assoc 设置’文件扩展名’关联，关联到’文件类型’ftype 设置’文件类型’关联，关联到’执行程序和参数’当你双击一个.txt文件时，windows并不是根据.txt直接判断用 notepad.exe 打开而是先判断.txt属于 txtfile ‘文件类型’再调用 txtfile 关联的命令行 txtfile&#x3D;%SystemRoot%&#x2F;system32&#x2F;NOTEPAD.EXE %1可以在”文件夹选项”→”文件类型”里修改这2种关联</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">assoc           #显示所有&#39;文件扩展名&#39;关联</span><br><span class="line">assoc .txt      #显示.txt代表的&#39;文件类型&#39;，结果显示 .txt&#x3D;txtfile</span><br><span class="line">assoc .doc      #显示.doc代表的&#39;文件类型&#39;，结果显示 .doc&#x3D;Word.Document.8</span><br><span class="line">assoc .exe      #显示.exe代表的&#39;文件类型&#39;，结果显示 .exe&#x3D;exefile</span><br><span class="line">ftype           #显示所有&#39;文件类型&#39;关联</span><br><span class="line">ftype exefile   #显示exefile类型关联的命令行，结果显示 exefile&#x3D;&quot;%1&quot; %* assoc .txt&#x3D;Word.Document.8设置.txt为word类型的文档，可以看到.txt文件的图标都变了</span><br><span class="line">assoc .txt&#x3D;txtfile恢复.txt的正确关联 ftype exefile&#x3D;&quot;%1&quot; %*恢复 exefile 的正确关联</span><br></pre></td></tr></table></figure></li></ul><p>如果该关联已经被破坏，可以运行 command.com ，再输入这条命令</p><ul><li><p>pushd 和 popd切换当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">c: &amp; cd&#x2F; &amp; md mp3       #在 C:&#x2F; 建立 mp3 文件夹</span><br><span class="line">md d:&#x2F;mp4               #在 D:&#x2F; 建立 mp4 文件夹</span><br><span class="line">cd &#x2F;d d:&#x2F;mp4            #更改当前目录为 d:&#x2F;mp4</span><br><span class="line">pushd c:&#x2F;mp3            #保存当前目录，并切换当前目录为 c:&#x2F;mp3</span><br><span class="line">popd                    #恢复当前目录为刚才保存的 d:&#x2F;mp4一般用处不大，在当前目录名不确定时，会有点帮助</span><br></pre></td></tr></table></figure></li><li><p>subst (外部命令)映射磁盘。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subst z: &#x2F;&#x2F;server&#x2F;d     #这样输入z:就可以访问&#x2F;&#x2F;server&#x2F;d了</span><br><span class="line">subst z: &#x2F;d             #取消该映射</span><br><span class="line">subst                   #显示目前所有的映</span><br></pre></td></tr></table></figure></li><li><p>xcopy (外部命令)文件拷贝</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcopy d:&#x2F;mp3 e:&#x2F;mp3 &#x2F;s&#x2F;e&#x2F;i&#x2F;y</span><br></pre></td></tr></table></figure><p>复制 d:&#x2F;mp3 文件夹、所有子文件夹和文件到 e:&#x2F;，覆盖已有文件，加 &#x2F;i 表示如果 e:&#x2F; 没有 mp3 文件夹就自动新建一个，否则会有询问</p><ul><li><p>39 一些不常用的内部命令</p><ul><li><code>&gt;&amp;</code> 将一个句柄的输出写入到另一个句柄的输入中</li><li><code>&lt;&amp;</code> 从一个句柄读取输入并将其写入到另一个句柄输出中</li><li>shift 命令行传递给批处理的参数不止9个时，用以切换参数</li><li>color 设置cmd窗口的显示颜色</li><li>pormpt 更改命令提示符号，默认都是 盘符:&#x2F;路径&#x2F;&gt; ，如 c:&#x2F;&gt;</li></ul></li><li><p>format (外部命令)格式化硬盘</p></li></ul><p><code>format c: /q/u/autotest/</code>，q表示快速格式化，&#x2F;autotest表示自动格式化，不需要按 Y 确认，&#x2F;u表示每字节用F6覆盖硬盘数据，使其不可用软件恢复</p><p>format c: &#x2F;c格式化C盘，并检测坏道</p><ul><li><p>fdisk (外部命令)硬盘分区win2000不带该命令win98里的fdisk不支持80G以上大硬盘，winme里的支持fdisk&#x2F;mbr重建硬盘分区表，一般用于清除引导区病毒、还原精灵注意使用该命令不能从硬盘启动，必须软驱或光驱启动后直接运行</p></li><li><p>ping (外部命令)</p></li></ul><p>ping -l 65500 -t 192.168.1.200不停的向192.168.1.200计算机发送大小为65500byte的数据包</p><p>ping -n 10 127.0.0.1&gt;nulping自己10次，可用于批处理延时10秒</p><ul><li><p>SC (外部命令)服务控制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sc create aaa displayname&#x3D; bbb start&#x3D; auto binpath&#x3D; &quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;alg.exe&quot;创建服务，服务名称aaa，显示名称bbb，启动类型:自动可执行文件的路径&quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;alg.exe&quot;</span><br><span class="line">sc description aaa &quot;ccc&quot;更改aaa的描述为ccc</span><br><span class="line">sc config aaa start&#x3D; disabled binpath&#x3D; &quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;svchost.exe -k netsvcs&quot;更改aaa的启动类型:已禁用更改aaa的可执行文件的路径&quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;svchost.exe -k netsvcs&quot;</span><br><span class="line">sc config aaa start&#x3D; demand displayname&#x3D; ddd更改aaa的启动类型:手动更改aaa的显示名称ddd</span><br><span class="line">sc start aaa启动aaa服务</span><br><span class="line">sc stop aaa停止aaa服务</span><br><span class="line">sc delete aaa删除aaa服务</span><br></pre></td></tr></table></figure></li></ul><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html">批处理常用命令总结 - 批处理命令简介</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Virtual box 6.1 0x80004005 错误</title>
      <link href="/posts/939509364.html"/>
      <url>/posts/939509364.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>原本要备份虚拟机系统，中途觉得等时间太久就手动停止运行。然后再想打开运行系统时就提示 不能为虚拟电脑 ubuntu for Tuya 打开一个新任务<br>网上找很多方法，也卸载重装好多次都无果！</p><h1 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h1><blockquote></blockquote><p>不能为虚拟电脑 win2k3_x641 打开一个新任务.<br>The virtual machine ‘win2k3_x641’ has terminated unexpectedly during startup with exit code 1 (0x1).  More details may be available in ‘D:\temp\win2k3_x641\Logs\VBoxHardening.log’.<br>返回 代码: E_FAIL (0x80004005)<br>组件: MachineWrap<br>界面: IMachine {85632c68-b5bb-4316-a900-5eb28d3413df}</p><img src="https://img-blog.csdnimg.cn/20200303175136545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6Z2V5ZQ==,size_16,color_FFFFFF,t_70"><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><blockquote><p><strong>反复对比研究终于解决问题:<br>问题出在启动菜单式按钮,不能直接点击虚拟机界面上的”启动”按钮,而是要选另2个启动方式</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20200303175352644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6Z2V5ZQ==,size_16,color_FFFFFF,t_70"><h1 id="其他参考-网上很多用这种方法（方法无效）"><a href="#其他参考-网上很多用这种方法（方法无效）" class="headerlink" title="其他参考-网上很多用这种方法（方法无效）"></a>其他参考-网上很多用这种方法（方法无效）</h1><p>virtualbox虚拟机拥有丰富的功能，而且性能优异，简单易用。但最近有win8&#x2F;win10系统启动VirtualBox 5.0版本出错提示“不能为虚拟电脑XX打开一个新任务”NtCreateFile(\Device\VBoxDrvStub) failed: 0xc000000034“怎么办呢？大家不要着急，按照下面小编介绍的方法即可轻松解决了。</p><p>具体方法如下:</p><p>1、打开VirtualBox安装文件夹里的\drivers\vboxdrv文件夹（默认位置为：C:\Program Files\Oracle\VirtualBox\drivers\vboxdrv）；</p><p>2、右键VBoxDrv.inf文件；</p><p>3、点击安装；</p><img src="http://www.morefunsoft.com/uploads/allimg/210419/10320060a_0.jpg"><p>4、安装完成后重启VirtualBox即可。</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/lzgeye/article/details/104637611">Virtual box 6.1 0x80004005 错误</a></li><li><a href="http://www.morefunsoft.com/hyxg/237271.html">win8&#x2F;win10启动virtualbox虚拟机提示“不能为虚拟电脑XX打开一个新任务”怎么办</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 问题收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Virtual box </tag>
            
            <tag> 2147500037 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT版本控制(二)之常用命令说明</title>
      <link href="/posts/3836851438.html"/>
      <url>/posts/3836851438.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>QA必备 — git:</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#正常提交代码流程：</span><br><span class="line"> </span><br><span class="line">git status # 检查下工作区有哪些变动</span><br><span class="line"> </span><br><span class="line">git add &lt;file_path&gt; # 将要提交的变动添加到暂存区</span><br><span class="line"> </span><br><span class="line">git commit -m &quot;message&quot; # 将变动内容由暂存区提交到版本库</span><br><span class="line"> </span><br><span class="line">git push origin &lt;remote&gt; # 提交到远程分支</span><br><span class="line"> </span><br><span class="line">#但实际中并非如此顺利，会遇到各种异常，要顺利解决异常，需对git操作熟悉。蓝色表示QA必会。</span><br></pre></td></tr></table></figure><h1 id="git-clone-lt-版本库的网址-gt"><a href="#git-clone-lt-版本库的网址-gt" class="headerlink" title="git clone &lt;版本库的网址&gt;"></a>git clone &lt;版本库的网址&gt;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;git_url&gt;</span><br></pre></td></tr></table></figure><blockquote><p>作用：拷贝一个 Git 仓库到本地，本地目录名称与git 仓库同名。<br>操作：打开页面，单击复制仓库地址，打开终端进入指定目录后，执行git clone命令​​</p></blockquote><h1 id="git-branch-—-分支信息"><a href="#git-branch-—-分支信息" class="headerlink" title="git branch — 分支信息"></a>git branch — 分支信息</h1><h2 id="1、查看分支"><a href="#1、查看分支" class="headerlink" title="1、查看分支"></a>1、查看分支</h2><blockquote><p>作用：查看分支（前面带有*号的是当前分支）</p></blockquote><ul><li><p>查看本地分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></li><li><p>查看远程分支(origin&#x2F;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure></li><li><p>查看所有分支(本地+远程)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h2 id="2、创建本地分支"><a href="#2、创建本地分支" class="headerlink" title="2、创建本地分支"></a>2、创建本地分支</h2><blockquote><p>作用：创建一个新的本地分支</p></blockquote></li><li><p>创建但不切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;name&gt;</span><br></pre></td></tr></table></figure><blockquote><p>创建完的test分支与当前master分支代码一致</p></blockquote></li><li><p>创建且同时切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;name&gt;</span><br></pre></td></tr></table></figure><p>创建完的test_new分支与切换之前的master分支代码一致</p><h2 id="3、重命名本地分支"><a href="#3、重命名本地分支" class="headerlink" title="3、重命名本地分支"></a>3、重命名本地分支</h2></li><li><p>不强制重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m &lt;old&gt; &lt;new&gt;</span><br></pre></td></tr></table></figure></li><li><p>强制重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M &lt;old&gt; &lt;new&gt; # 转换大小写</span><br></pre></td></tr></table></figure><h2 id="4、重命名远程分支"><a href="#4、重命名远程分支" class="headerlink" title="4、重命名远程分支"></a>4、重命名远程分支</h2><blockquote><p>假设将”duoshan_pro“重命名为”master“</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch -m duoshan_pro master # 本地duoshan_pro重命名为master</span><br><span class="line"> </span><br><span class="line">git push origin master:master # 将master推到远端</span><br><span class="line"> </span><br><span class="line">git push origin :duoshan_pro # 删除远端的duoshan_pro</span><br></pre></td></tr></table></figure><h2 id="5、删除本地分支"><a href="#5、删除本地分支" class="headerlink" title="5、删除本地分支"></a>5、删除本地分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;name&gt; # -D 强制删除，</span><br></pre></td></tr></table></figure><h1 id="git-status-—-状态信息"><a href="#git-status-—-状态信息" class="headerlink" title="git status — 状态信息"></a>git status — 状态信息</h1><p>红色表示修完完未追踪，绿色表示修改完已追踪</p><blockquote><p>1）详细状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><blockquote><p>2）精简状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status -s</span><br></pre></td></tr></table></figure><blockquote></blockquote><p>​详细状态 精简状态<br>?? ：新添加未追踪 （新增但未git add）<br>A：新添加到暂存区中的文件前面有标记（新增且已git add）<br>M：该文件被修改了并被放入了暂存区。 （修改且已git add）<br>R：被重命名且已放入暂存区。（修改且已git add）<br>M：该文件被修改了但是还没被放入暂存区（修改但未git add）</p><h1 id="git-add-—-提交到暂存区"><a href="#git-add-—-提交到暂存区" class="headerlink" title="git add — 提交到暂存区"></a>git add — 提交到暂存区</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;file_path&#x2F;path&gt; # &lt;path&gt;可以是目录，也可以是目录下的具体文件</span><br></pre></td></tr></table></figure><blockquote></blockquote><p>​git add .：提交被修改(modified)和新文件(new)和文件，不包括被删除文件(deleted)<br>git add -u：提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)<br>git add -A：# 提交所有变化</p><h1 id="git-commit-—-提交到本地版本库"><a href="#git-commit-—-提交到本地版本库" class="headerlink" title="git commit — 提交到本地版本库"></a>git commit — 提交到本地版本库</h1><p>每次使用git commit 命令后，都会在本地版本库生成一个40位的哈希值，这个哈希值也叫commit-id。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “message”</span><br><span class="line">git commit --amend -m &quot;new message&quot; # 修改提交的描述信息</span><br></pre></td></tr></table></figure><h1 id="git-pull-—-从远端拉取-fetch-代码并合并-merge"><a href="#git-pull-—-从远端拉取-fetch-代码并合并-merge" class="headerlink" title="git pull — 从远端拉取(fetch)代码并合并(merge)"></a>git pull — 从远端拉取(fetch)代码并合并(merge)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; # :前后无空格</span><br></pre></td></tr></table></figure><h2 id="1）建立新的本地分支"><a href="#1）建立新的本地分支" class="headerlink" title="1）建立新的本地分支"></a>1）建立新的本地分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;remote&gt;:&lt;local&gt; # -f 强拉</span><br></pre></td></tr></table></figure><p>如：将远端分支T，拉到本地，且命名为jieqiong（此刻jieqong分支代码与远端分支T一致）</p><p>ps：git branch jieqiong也是建立本地分支，但建立完后的分支与本地所在分支一致</p><h2 id="2）拉取最新代码到本地"><a href="#2）拉取最新代码到本地" class="headerlink" title="2）拉取最新代码到本地"></a>2）拉取最新代码到本地</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;remote&gt; # 如本地已经在当前分支，则本地分支可省略，如出错则，后加-f 强拉</span><br></pre></td></tr></table></figure><p>注：更改分支代码之前，最好先git pull下，否则会发生冲突。</p><p>发生冲突后，将 &lt;&lt;&lt; &#x3D;&#x3D;&#x3D;等行信息删除，重新git add、git commit、git pull、git push等。</p><blockquote><p>（最简单的办法：去远程目标分支找对应的冲突文件，复制到本地对应文件，再git commit）</p></blockquote><h1 id="git-fetch-—-从远端拉取代码到版本库"><a href="#git-fetch-—-从远端拉取代码到版本库" class="headerlink" title="git fetch — 从远端拉取代码到版本库"></a>git fetch — 从远端拉取代码到版本库</h1><blockquote><p>作用：相当于是从远程获取最新版本到本地,不会自动merge。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin develop:tmp &#x2F;&#x2F; 拉取远程develop分支，并放到本地tmp分支上 </span><br><span class="line">git fetch orgin master &#x2F;&#x2F;将远程仓库的master分支下载到本地当前branch中 </span><br><span class="line">git merge — 整合提交</span><br></pre></td></tr></table></figure><blockquote><p>作用：合并指定分支到当前分支，你需要往哪个分支上面合并，就要切换到哪个分支。<br>假设有一个开发分支dev，有一个主干分支master，现在要 把dev分支merge到master分支，保证两个分支都是最新的状态后，执行。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout master </span><br><span class="line">git merge dev </span><br><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line"> # :前后无空格</span><br></pre></td></tr></table></figure><h2 id="1）建立新的远程分支"><a href="#1）建立新的远程分支" class="headerlink" title="1）建立新的远程分支"></a>1）建立新的远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;local&gt;:&lt;remote&gt; </span><br></pre></td></tr></table></figure><p>建立远程分支test：即将本地test推向远端test，有异常则使用-f强制</p><h2 id="2）推送到已有远程分支"><a href="#2）推送到已有远程分支" class="headerlink" title="2）推送到已有远程分支"></a>2）推送到已有远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;test&gt; # 当前所在分支，与欲推送本地分支一致时，可省略本地分支 </span><br></pre></td></tr></table></figure><h2 id="3）删除指定远程分支"><a href="#3）删除指定远程分支" class="headerlink" title="3）删除指定远程分支"></a>3）删除指定远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;test&gt; # 用:号前的空格代替:号后的test分支，代表删除test </span><br><span class="line">git push origin -d &lt;test&gt; # 二者等价，-D表强制删除</span><br></pre></td></tr></table></figure><h1 id="​git-checkout-—-切换分支-x2F-恢复工作区"><a href="#​git-checkout-—-切换分支-x2F-恢复工作区" class="headerlink" title="​git checkout — 切换分支&#x2F;恢复工作区"></a>​git checkout — 切换分支&#x2F;恢复工作区</h1><h2 id="1）切换分支"><a href="#1）切换分支" class="headerlink" title="1）切换分支"></a>1）切换分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch&gt; # 切换已有分支 </span><br><span class="line">git checkout -b &lt;branch&gt; # 新建并切换分支，见 2-（2）节</span><br></pre></td></tr></table></figure><h2 id="2）撤销工作区的修改（未git-add）"><a href="#2）撤销工作区的修改（未git-add）" class="headerlink" title="2）撤销工作区的修改（未git add）"></a>2）撤销工作区的修改（未git add）</h2><p>ps：未执行git add</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- &lt;file&gt; # 放弃在工作区的文件更改 </span><br><span class="line">git checkout . # 放弃所有文件的修改 </span><br></pre></td></tr></table></figure><h1 id="git-reset-—-回退暂存区-x2F-版本库"><a href="#git-reset-—-回退暂存区-x2F-版本库" class="headerlink" title="git reset — 回退暂存区&#x2F;版本库"></a>git reset — 回退暂存区&#x2F;版本库</h1><blockquote><p>适用场景：恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了。</p></blockquote><h2 id="1）撤销暂存区的修改（已git-add）"><a href="#1）撤销暂存区的修改（已git-add）" class="headerlink" title="1）撤销暂存区的修改（已git add）"></a>1）撤销暂存区的修改（已git add）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD &lt;file&gt; # 放弃在缓存中的文件更改，回到git add之前状态 </span><br><span class="line">git reset HEAD . # 放弃所有文件的修改，回到git add之前状态 </span><br></pre></td></tr></table></figure><h2 id="2）撤销版本库的修改（已git-commit）"><a href="#2）撤销版本库的修改（已git-commit）" class="headerlink" title="2）撤销版本库的修改（已git commit）"></a>2）撤销版本库的修改（已git commit）</h2><p>–mixed：git reset (–mixed) HEAD，相当于默认–mixed<br>只动暂存区，不动工作区（修改内容不丢失），原节点和reset节点之间的所有差异都会放到工作目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD^ # 回退到上一个版本 </span><br><span class="line">git reset HEAD^^ # 回退到倒数第二版 </span><br><span class="line">git reset HEAD 版本号 # 版本号通过git log查看 </span><br></pre></td></tr></table></figure><h2 id="3）带参数–hard-x2F-–soft的差别"><a href="#3）带参数–hard-x2F-–soft的差别" class="headerlink" title="3）带参数–hard&#x2F;–soft的差别"></a>3）带参数–hard&#x2F;–soft的差别</h2><p>–soft：暂存区和工作区的内容都保持原样，不会被替换。原节点和reset节点之间的所有差异会放到暂存区中。<br>–hard：暂存区和工作区的内容都会被新指向的commit提交内容所替换；git reset –hard只影响被跟踪的文件，如果工作区有新增的文件，并不会被影响。​</p><h1 id="git-revert-—-反做暂存区-x2F-版本库"><a href="#git-revert-—-反做暂存区-x2F-版本库" class="headerlink" title="git revert — 反做暂存区&#x2F;版本库"></a>git revert — 反做暂存区&#x2F;版本库</h1><blockquote><p>适用场景：想撤销之前的某一版本，但是又想保留该目标版本后面的版本。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert -n 版本号 # 版本号可通过git log查看，或去gitlab 仓库查看可视化</span><br></pre></td></tr></table></figure><p>继续git commit、git push 会生成新的版本号，而又不动到中间的版本。<br><strong>ps：reset与revert的区别</strong></p><img src="https://img-blog.csdnimg.cn/edbdb910f97e4ab59feb66e7b76aefcd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="git-rebase-—-重新设置基线"><a href="#git-rebase-—-重新设置基线" class="headerlink" title="git rebase — 重新设置基线"></a>git rebase — 重新设置基线</h1><p>什么时候用到rebase? 当</p><h2 id="1）git-rebase-branch"><a href="#1）git-rebase-branch" class="headerlink" title="1）git rebase branch"></a>1）git rebase branch</h2><p>git rebase branch-B # rebase的是谁，就修改的是谁<br>两个分支都会有自己不同的发展轨迹：</p><img src="https://img-blog.csdnimg.cn/653b3a9aa9bd403d9eaeb8cd98e94d51.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol><li>git会把在branch-A上的C1之后的C3暂时存储到一个地方。</li></ol><img src="https://img-blog.csdnimg.cn/6f10a777250d413caca8454b91ddb3ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="2"><li>git会整合那些在branch-B（这个我们想要整合的分支）上的还未整合的提交到branch-A 中。</li></ol><img src="https://img-blog.csdnimg.cn/16a0e9ba5871475d8e49df15aca2e3c2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="3"><li>那些在branch-A的新的提交C3，会被重新应用到这个分支上。</li></ol><image src="https://img-blog.csdnimg.cn/86f89772d6a040b68530ee989dc4fddc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>缺陷：rebase 会改写历史记录（C3的源提交由C1变为了C4）。应该只使用 rebase 来清理你的本地工作，千万不要尝试着对那些已经被发布的提交进行这个操作，故：</strong></p></blockquote><ul><li>不要在公共分支使用rebase</li><li>本地和远端对应同一条分支,优先使用rebase，而不是merge</li></ul><h2 id="2）git-rebase-–continue"><a href="#2）git-rebase-–continue" class="headerlink" title="2）git rebase –continue"></a>2）git rebase –continue</h2><p>在rebase的过程中，可能会出现冲突。在这种情况，git会停止rebase并会让你去解决冲突；在解决完冲突后，用”git-add”命令去更新这些内容的索引， 然后，你无需执行 git-commit，只要执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --continue </span><br></pre></td></tr></table></figure><h2 id="3）git-rebase-–abort"><a href="#3）git-rebase-–abort" class="headerlink" title="3）git rebase –abort"></a>3）git rebase –abort</h2><p><strong>在任何时候，你可以用–abort参数来终止rebase的行动，并且分支会回到rebase前的状态。</strong></p><h1 id="git-stash-—-暂存工作区"><a href="#git-stash-—-暂存工作区" class="headerlink" title="git stash — 暂存工作区"></a>git stash — 暂存工作区</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash # 暂存工作区的修改 </span><br><span class="line">git stash pop # 弹出修改内容 </span><br></pre></td></tr></table></figure><h1 id="git-log-—-查看提交历史"><a href="#git-log-—-查看提交历史" class="headerlink" title="git log — 查看提交历史"></a>git log — 查看提交历史</h1><ul><li>建议提前git fetch一下</li></ul><h2 id="1）–stat：增改行数统计"><a href="#1）–stat：增改行数统计" class="headerlink" title="1）–stat：增改行数统计"></a>1）–stat：增改行数统计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --stat # 查看简略统计信息</span><br></pre></td></tr></table></figure><p>–stat 选项在每次提交的下面列出所有被修改过的文件、有多少文件被修改了以及被修改过的文件的哪些行被移除或是添加了。 在每次提交的最后还有一个总结。</p><h2 id="2）–pretty：定制展示格式"><a href="#2）–pretty：定制展示格式" class="headerlink" title="2）–pretty：定制展示格式"></a>2）–pretty：定制展示格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --pretty&#x3D;oneline # 每个提交放在一行显示</span><br></pre></td></tr></table></figure><h2 id="3）-p：展开内容差异"><a href="#3）-p：展开内容差异" class="headerlink" title="3）-p：展开内容差异"></a>3）-p：展开内容差异</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log -p -2 # 展开显示每次提交的内容差异, 用 -2 则仅显示最近的两次更新</span><br></pre></td></tr></table></figure><h1 id="git-diff-—-比较两次修改的差异"><a href="#git-diff-—-比较两次修改的差异" class="headerlink" title="git diff — 比较两次修改的差异"></a>git diff — 比较两次修改的差异</h1><h2 id="1）比较工作区与暂存区"><a href="#1）比较工作区与暂存区" class="headerlink" title="1）比较工作区与暂存区"></a>1）比较工作区与暂存区</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff # git diff 不加参数即默认比较工作区(未git add)与暂存区(git add之后)</span><br><span class="line"> </span><br><span class="line">git diff --stat #查看简单的diff结果</span><br></pre></td></tr></table></figure><h2 id="2）比较暂存区与版本库"><a href="#2）比较暂存区与版本库" class="headerlink" title="2）比较暂存区与版本库"></a>2）比较暂存区与版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached # 对比暂存区(git add 之后)和版本库(git commit 之后)</span><br></pre></td></tr></table></figure><h2 id="3）比较工作区与版本库"><a href="#3）比较工作区与版本库" class="headerlink" title="3）比较工作区与版本库"></a>3）比较工作区与版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD # 对比工作区(未 git add)和版本库(git commit 之后)</span><br></pre></td></tr></table></figure><h2 id="4）比较两个分支上最新提交"><a href="#4）比较两个分支上最新提交" class="headerlink" title="4）比较两个分支上最新提交"></a>4）比较两个分支上最新提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff branch-A branch-B</span><br></pre></td></tr></table></figure><h1 id="5-比较两个历史版本之间的差异"><a href="#5-比较两个历史版本之间的差异" class="headerlink" title="5) 比较两个历史版本之间的差异"></a>5) 比较两个历史版本之间的差异</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff SHA1 SHA2 # SHA为40位的commit_id</span><br></pre></td></tr></table></figure><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol><li><p>打开终端输入：ssh-keygen -t rsa ，按三个回车，密码为空，如下：</p></li><li><p>输入：cat ~&#x2F;.ssh&#x2F;id_rsa.pub，将以ssh-rsa开头的所有序列复制到key框中，点击Add key按钮</p></li></ol><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/mango22_2/article/details/124351063">git版本控制命令</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本控制 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT版本控制(一)之常见命令汇总</title>
      <link href="/posts/1498888733.html"/>
      <url>/posts/1498888733.html</url>
      
        <content type="html"><![CDATA[<h1 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h1><blockquote><p>**利用Git命令实现简单的版本控制，设好存档点，保护好自己写的代码不至于丢失，避免重复写代码的尴尬，并跟踪自己的所有修改变化。 **</p></blockquote><hr><h1 id="主干内容："><a href="#主干内容：" class="headerlink" title="主干内容："></a>主干内容：</h1><h2 id="一、设置git-config-–global-参数"><a href="#一、设置git-config-–global-参数" class="headerlink" title="一、设置git config  –global 参数"></a>一、设置git config  –global 参数</h2><p>有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，一个电脑只需配置一次，当然你也可以对某个仓库指定的不同的用户名和邮箱，需要另外配置，就不多说了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  –-global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config  –-global user.email <span class="string">&quot;用户邮箱&quot;</span></span><br></pre></td></tr></table></figure><h2 id="二、初始化一个仓库-git-init"><a href="#二、初始化一个仓库-git-init" class="headerlink" title="二、初始化一个仓库 git init"></a>二、初始化一个仓库 git init</h2><p>什么是仓库？仓库又名版本库，英文名repository，你可以简单的理解成一个文件夹，这个文件夹里面的所有文件都可以被Git管理起来，每个文件的修改，删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻还可以将文件”还原”。</p><p>选中你的工程文件夹 –&gt; 右键 –&gt; Git Bash Here ，进入Git 命令窗口，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br><span class="line">// <span class="built_in">pwd</span>   //使用该命令可以查看初始化后的仓库绝对路径</span><br></pre></td></tr></table></figure><blockquote><p>这样，就创建好了仓库，并默认在（master）主分支上。</p></blockquote><h2 id="三、把文件添加到仓库中-git-add"><a href="#三、把文件添加到仓库中-git-add" class="headerlink" title="三、把文件添加到仓库中 git add"></a>三、把文件添加到仓库中 git add</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test1.txt   // 可以单个添加</span><br><span class="line">git add .   // 也可以一次添加所有文件</span><br></pre></td></tr></table></figure><h2 id="四、提交到本地仓库-git-commit"><a href="#四、提交到本地仓库-git-commit" class="headerlink" title="四、提交到本地仓库 git commit"></a>四、提交到本地仓库 git commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交信息说明&quot;</span></span><br></pre></td></tr></table></figure><h2 id="五、新建分支并切换到新建分支-git-checkout-b"><a href="#五、新建分支并切换到新建分支-git-checkout-b" class="headerlink" title="五、新建分支并切换到新建分支 git checkout -b"></a>五、新建分支并切换到新建分支 git checkout -b</h2><blockquote><p>可以将主分支保护起来，所有修改都在分支上进行，当调试ok后，再合并分支。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 新的分支名  // 新建分支并切换到新建分支</span><br><span class="line"> </span><br><span class="line">git checkout 分支名  // 切换到指定分支</span><br><span class="line">git branch    // 查看分支 * 后面的分支是当前分支</span><br></pre></td></tr></table></figure><h2 id="六、合并分支-git-merge-branch"><a href="#六、合并分支-git-merge-branch" class="headerlink" title="六、合并分支 git merge branch"></a>六、合并分支 git merge branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge branch 主分支名 分支命  // 合并两个任意分支</span><br></pre></td></tr></table></figure><h2 id="七、删除本地分支-git-branch-d"><a href="#七、删除本地分支-git-branch-d" class="headerlink" title="七、删除本地分支 git branch -d"></a>七、删除本地分支 git branch -d</h2><blockquote><p><strong>合并分支后并不会删除原分支，需要手动删除。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支   // 删除本地分支</span><br></pre></td></tr></table></figure><h2 id="八、连接远程仓库-git-remote-add-origin"><a href="#八、连接远程仓库-git-remote-add-origin" class="headerlink" title="八、连接远程仓库 git remote add origin"></a>八、连接远程仓库 git remote add origin</h2><blockquote><p>远程仓库的作用在于共享代码，协同编程，如果只是版本控制也可不用上传。（主要是本人学艺不精，远程推送第一次还正常，第二次推送总是出现各种冲突）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:用户名/远程仓库名.git   // 使用HHS 加密传输</span><br></pre></td></tr></table></figure><h2 id="九、推送主分支-git-push-u-origin-master"><a href="#九、推送主分支-git-push-u-origin-master" class="headerlink" title="九、推送主分支 git push -u origin master"></a>九、推送主分支 git push -u origin master</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master   // 推送主分支 第一次需要加 -u 后面就不用了</span><br></pre></td></tr></table></figure><h2 id="十、推送任意分支-git-push-origin"><a href="#十、推送任意分支-git-push-origin" class="headerlink" title="十、推送任意分支 git push  origin"></a>十、推送任意分支 git push  origin</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push  origin 分支名  // 推送任意分支</span><br></pre></td></tr></table></figure><h2 id="十一、删除任意远程分支-git-push-origin-："><a href="#十一、删除任意远程分支-git-push-origin-：" class="headerlink" title="十一、删除任意远程分支 git push  origin ："></a>十一、删除任意远程分支 git push  origin ：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push  origin ：分支名  // 删除任意远程分支 （本地分支还在） 注意区别是多了个冒号</span><br></pre></td></tr></table></figure><h2 id="十二、拉取远程分支到本地创建的新分支-git-checkout-b-origin-x2F"><a href="#十二、拉取远程分支到本地创建的新分支-git-checkout-b-origin-x2F" class="headerlink" title="十二、拉取远程分支到本地创建的新分支 git checkout -b   origin&#x2F;"></a>十二、拉取远程分支到本地创建的新分支 git checkout -b   origin&#x2F;</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 本地新建分支名  origin/远程分支名   // 拉取远程分支到本地创建的新分支</span><br></pre></td></tr></table></figure><h2 id="十三、查看本地与远程所有分支-git-branch-a"><a href="#十三、查看本地与远程所有分支-git-branch-a" class="headerlink" title="十三、查看本地与远程所有分支 git branch -a"></a>十三、查看本地与远程所有分支 git branch -a</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a  // 查看本地与远程所有分支 </span><br></pre></td></tr></table></figure><h1 id="辅助内容"><a href="#辅助内容" class="headerlink" title="辅助内容"></a>辅助内容</h1><h2 id="一、获取常用git命令及说明-git-或-git-help"><a href="#一、获取常用git命令及说明-git-或-git-help" class="headerlink" title="一、获取常用git命令及说明  git 或 git help"></a>一、获取常用git命令及说明  git 或 git help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$ git</span><br><span class="line">usage: git [--version] [--<span class="built_in">help</span>] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           [--super-prefix=&lt;path&gt;] [--config-env=&lt;name&gt;=&lt;envvar&gt;]</span><br><span class="line">           &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line"> </span><br><span class="line">These are common Git commands used <span class="keyword">in</span> various situations:</span><br><span class="line"> </span><br><span class="line">start a working area (see also: git <span class="built_in">help</span> tutorial)</span><br><span class="line">   <span class="built_in">clone</span>     Clone a repository into a new directory</span><br><span class="line">   init      Create an empty Git repository or reinitialize an existing one</span><br><span class="line"> </span><br><span class="line">work on the current change (see also: git <span class="built_in">help</span> everyday)</span><br><span class="line">   add       Add file contents to the index</span><br><span class="line">   mv        Move or rename a file, a directory, or a symlink</span><br><span class="line">   restore   Restore working tree files</span><br><span class="line">   rm        Remove files from the working tree and from the index</span><br><span class="line"> </span><br><span class="line">examine the <span class="built_in">history</span> and state (see also: git <span class="built_in">help</span> revisions)</span><br><span class="line">   bisect    Use binary search to find the commit that introduced a bug</span><br><span class="line">   diff      Show changes between commits, commit and working tree, etc</span><br><span class="line">   grep      Print lines matching a pattern</span><br><span class="line">   <span class="built_in">log</span>       Show commit logs</span><br><span class="line">   show      Show various types of objects</span><br><span class="line">   status    Show the working tree status</span><br><span class="line"> </span><br><span class="line">grow, mark and tweak your common <span class="built_in">history</span></span><br><span class="line">   branch    List, create, or delete branches</span><br><span class="line">   commit    Record changes to the repository</span><br><span class="line">   merge     Join two or more development histories together</span><br><span class="line">   rebase    Reapply commits on top of another base tip</span><br><span class="line">   reset     Reset current HEAD to the specified state</span><br><span class="line">   switch    Switch branches</span><br><span class="line">   tag       Create, list, delete or verify a tag object signed with GPG</span><br><span class="line"> </span><br><span class="line">collaborate (see also: git <span class="built_in">help</span> workflows)</span><br><span class="line">   fetch     Download objects and refs from another repository</span><br><span class="line">   pull      Fetch from and integrate with another repository or a <span class="built_in">local</span> branch</span><br><span class="line">   push      Update remote refs along with associated objects</span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;git help -a&#x27;</span> and <span class="string">&#x27;git help -g&#x27;</span> list available subcommands and some</span><br><span class="line">concept guides. See <span class="string">&#x27;git help &lt;command&gt;&#x27;</span> or <span class="string">&#x27;git help &lt;concept&gt;&#x27;</span></span><br><span class="line">to <span class="built_in">read</span> about a specific subcommand or concept.</span><br><span class="line">See <span class="string">&#x27;git help git&#x27;</span> <span class="keyword">for</span> an overview of the system.</span><br></pre></td></tr></table></figure><h2 id="二、显示所有git命令-git-help-a"><a href="#二、显示所有git命令-git-help-a" class="headerlink" title="二、显示所有git命令  git help -a"></a>二、显示所有git命令  git help -a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help -a  &#x2F;&#x2F; 由于内容太多就不展示了</span><br></pre></td></tr></table></figure><h2 id="三、查看单个命令的说明-git-help"><a href="#三、查看单个命令的说明-git-help" class="headerlink" title="三、查看单个命令的说明 git help ***"></a>三、查看单个命令的说明 git help ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help branch  &#x2F;&#x2F; 查看branch 的手册信息</span><br></pre></td></tr></table></figure><h2 id="四、查看文件的区别-git-diff"><a href="#四、查看文件的区别-git-diff" class="headerlink" title="四、查看文件的区别 git diff"></a>四、查看文件的区别 git diff</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff  &#x2F;&#x2F; 查看当前仓库所有文件与上一次存档的区别，只能区别文本信息</span><br><span class="line"> </span><br><span class="line">git diff 文件1 文件2  &#x2F;&#x2F; 查看两个文件的差异，必须在当前目录下</span><br></pre></td></tr></table></figure><h2 id="五、查看日志（所有提交信息）"><a href="#五、查看日志（所有提交信息）" class="headerlink" title="五、查看日志（所有提交信息）"></a>五、查看日志（所有提交信息）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --oneline  &#x2F;&#x2F; 显示简单的提交日志</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_45694843/article/details/124766183">利用Git命令进行版本控制之常见命令汇总</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本控制 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(四)之涂鸦模组WBR3(RTL8720CF)程序下载</title>
      <link href="/posts/716589256.html"/>
      <url>/posts/716589256.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>**先根据 <a href="https://zml3589110.github.io/posts/4014484988.html">涂鸦WIFI基本开发(三)之TuyaOS环境搭建</a> 将环境搭建好 **</p></blockquote><h1 id="WBR-系列模组烧录授权方式"><a href="#WBR-系列模组烧录授权方式" class="headerlink" title="WBR 系列模组烧录授权方式"></a>WBR 系列模组烧录授权方式</h1><p>完成模组 SDK 固件开发后，您需要对模组进行烧录授权以实现连接云服务的能力。根据不同场景的需求，涂鸦提供以下两烧录授权方式:</p><blockquote><ol><li>烧录授权一体方案。该方案通过云模组烧录授权平台进行烧录和授权操作，适用于发布阶段。</li><li>烧录授权分立方案。该方案使用芯片烧录工具进行烧录操作，再使用云模组烧录授权平台授权，适用于开发阶段。</li></ol></blockquote><h2 id="烧录文件"><a href="#烧录文件" class="headerlink" title="烧录文件"></a>烧录文件</h2><p>该型号芯片编译后会生成 4 种如下所示的 .bin 文件。</p><blockquote><ol><li>flash_is.bin：boot + 用户区固件。</li><li>oem_rtl8720cf_light_ty_QIO_1.1.2.bin（生产固件）：boot+用户区固件+检测固件。</li><li>oem_rtl8720cf_light_ty_UA_1.1.2.bin：用户区固件。</li><li>oem_rtl8720cf_light_ty_UG_1.1.2.bin：升级区固件。</li></ol></blockquote><h2 id="适用芯片"><a href="#适用芯片" class="headerlink" title="适用芯片"></a>适用芯片</h2><p>适用于核心芯片为 RTL8720CF 的以下模组。<br>WBR1<br>WBR2<br><a href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy">WBR3</a><br>WBR2L<br>WBR3L</p><h2 id="方式一：烧录授权一体方案"><a href="#方式一：烧录授权一体方案" class="headerlink" title="方式一：烧录授权一体方案"></a>方式一：烧录授权一体方案</h2><p>该方案适用于发布阶段，由于涂鸦模组必要进行授权才能连接涂鸦平台，所以授权步骤无法省略。<br>该方案的总体流程如下：</p><ol><li>上传编译固件到 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 。</li><li>平台成固件 key，并基于固件 key 生成授权码。</li><li>使用云模组烧录授权平台进行烧录授权。</li></ol><h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/babfd04c09194a8e9fd41cb8143e25e8.png"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b7cd54dfa91a4a82a2c19f5301df7dc2.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">RX&#x2F;A13</td><td align="left">TX</td></tr><tr><td align="left">TX&#x2F;A14</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr></tbody></table><h3 id="上传固件"><a href="#上传固件" class="headerlink" title="上传固件"></a>上传固件</h3><ol><li>在 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 产品开发的第三步 硬件开发 中，单击 新增自定义固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/54d650e79d9244599d4115789f7feb1f.png"><ol start="2"><li>填写固件参数后，单击 确认。</li></ol><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left">务必和编译固件的名称一致。</td></tr><tr><td align="left">固件类型</td><td align="left">模组固件。</td></tr><tr><td align="left">其他参数</td><td align="left">根据实际情况或界面帮助填写。</td></tr></tbody></table><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/8a2c3ebe03f14fe78fd38a4cc516d853.png"><ol start="3"><li>在 已生成固件 区域中，选择 上传生产固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20210303/f7ebced38c1b4687ad8c28fc17c40df6.png"><ol start="4"><li>上传固件并单击 确定。</li></ol><ul><li>生产固件：上传文件名中带有 QIO 的 .bin 文件。</li><li>用户区固件：上传文件名中带有 UA 的.bin 文件。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/cd9657d6cd3d4f80b077d71ea08efabe.png"><ol start="5"><li>授权码获取+烧录<br>根据 PID 在平台获取授权码，参考 <a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u">烧录授权</a> 操作步骤章节内容下载安装 云模组烧录授权平台。</li></ol><p>烧录步骤为：</p><ol><li>先给模组断电。</li><li>在云模组烧录授权平台软件中，输入授权码后单击 <strong>运行</strong>。</li><li>烧录成功后，给模组上电。</li></ol><h2 id="方式二：烧录授权分立方案"><a href="#方式二：烧录授权分立方案" class="headerlink" title="方式二：烧录授权分立方案"></a>方式二：烧录授权分立方案</h2><p>该方案适用于开发阶段。该方案的特点是 <strong>授权一次，重复烧录</strong>。假如已经授权过一次，您只需要进行固件 demo 修改烧录，模组即能正常工作。</p><h3 id="硬件准备-1"><a href="#硬件准备-1" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/e45e43a46203480290ee6ba93608f3d9.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">A_0</td><td align="left">VCC3.3V</td></tr><tr><td align="left">LOG_RX</td><td align="left">TX</td></tr><tr><td align="left">LOG_TX</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr><tr><td align="left">RXD</td><td align="left">VCC3.3V</td></tr></tbody></table><p><strong>注意事项</strong></p><ul><li>烧录完成后，需要把 <em><strong>A_0</strong></em> 拔掉，并把用户 <em><strong>RX</strong></em> 接回用户串口的 <em><strong>RX</strong></em>。</li><li>烧录完成后，模组需要重新上电才可以正常使用。</li></ul><h3 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h3><p>下载并运行 <a href="https://images.tuyacn.com/smart/AmebaZ2_PGTool_v1.2.7/AmebaZ2_PGTool_v1.2.7.exe">RTL8720CF 芯片烧录工具</a>。<br>请注意以上红色标记区域：</p><ul><li>Port 参数项需要选择实际使用的串口。</li><li>Flash Pin 参数项需要选择 <code>PIN_B6_B12 </code>。</li><li>烧录过程中失败的话，可适当降低波特率。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/db1bb031375b4ed38811343d801796e3.png"><h3 id="下载说明"><a href="#下载说明" class="headerlink" title="下载说明"></a>下载说明</h3><p><strong>烧录步骤</strong></p><ol><li>先给模组断电。</li><li>打开烧录工具后，单击 <strong>Browse</strong> 后选择 <code>flash_is.bin</code>（boot+用户区固件）文件进行烧录。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/7b7d96c843b743f9b76ef6451f2ccfa0.png" alt="WBR 系列模组烧录授权"></li><li>烧录成功后，给模组上电。</li></ol><p><strong>注意事项</strong><br>需要确定模组在断电上电后是否处于烧录状态。如果没有出现下图所示内容，请检查接线 <strong>A_0</strong> 和 <strong>RX</strong> 是否接地。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/adbf286381bb4116bfb20adb260ea9ba.png" alt="WBR 系列模组烧录授权"></p><p><strong>下载</strong><br>下载截图如下：</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/3ffa912854dd46d5bdf54d3d839e64e6.png" alt="WBR 系列模组烧录授权"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li>在 RTL8720CF 芯片烧录工具上更新固件时，每次都需要单击 <strong>Browse</strong>，不然会出现以下状态。</li></ol><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b51b2e984bf84bb2a8177cf4acd6f892.png" alt="WBR 系列模组烧录授权"></p><ol start="2"><li>烧录后没有效果<blockquote><p><strong>把程序烧录进去后却没运行，那是因为启动分区的问题导致新程序没能正确启动</strong></p></blockquote></li></ol><ul><li>需要将 keep System Data 去掉勾选，保证每次都是从 OTA1区启动</li></ul><hr><h1 id="烧录方式补充说明"><a href="#烧录方式补充说明" class="headerlink" title="烧录方式补充说明"></a>烧录方式补充说明</h1><p>固件开发完成后，需要将固件和授权码烧录到设备内，才可以连接云服务。涂鸦提供多种烧录授权方式供您使用，您可在不同的开发阶段选择合适的烧录授权方式。</p><h2 id="烧录授权方案"><a href="#烧录授权方案" class="headerlink" title="烧录授权方案"></a>烧录授权方案</h2><p>根据不同的开发阶段、芯片类型和生产方式，涂鸦提供三种烧录授权方案，每种方案的详细说明如下：</p><h3 id="烧录授权一体方案"><a href="#烧录授权一体方案" class="headerlink" title="烧录授权一体方案"></a>烧录授权一体方案</h3><p>适用于使用涂鸦标准模组的开发者使用，固件需要维护在涂鸦 IoT 平台（选用涂鸦现有的模组固件或者将自己开发的模组固件上传至涂鸦 IoT 平台），根据生产方式的区别，通常有以下两种形式。</p><ul><li><p><strong>委托涂鸦进行烧录授权</strong></p><p>涂鸦出货已完成烧录授权的模组，您收到模组后可直接使用。</p></li><li><p><strong>自主进行烧录授权</strong></p><p>涂鸦提供云模组烧录工具+授权码+烧录说明+烧录工装制作说明等一系列资料，您可以参考涂鸦提供的资料自行对模组进行烧录授权。</p></li></ul><h3 id="烧录授权分立方案"><a href="#烧录授权分立方案" class="headerlink" title="烧录授权分立方案"></a>烧录授权分立方案</h3><p>适用于调试阶段和非涂鸦标准模组方案，使用芯片烧录工具烧录固件，涂鸦 <strong>云模组烧录授权平台</strong> 工具只用于授权。</p><ul><li><p><strong>调试阶段</strong></p><p>使用芯片烧录工具第一次烧录固件和授权码后，后续代码有更新，只需要重新烧录用户区固件，不会擦除授权码信息，方便调试。</p></li><li><p><strong>非涂鸦标准模组方案</strong></p><p>涂鸦<strong>云模组烧录授权平台</strong>工具不支持非涂鸦标准芯片烧录固件，只能使用原厂工具烧录固件，再使用<strong>涂鸦云模组授权平台</strong>工具进行授权。</p></li></ul><h3 id="产测-SDK-对接方案"><a href="#产测-SDK-对接方案" class="headerlink" title="产测 SDK 对接方案"></a>产测 SDK 对接方案</h3><p>适用于自身有完整的烧录生产体系的开发者，不使用 <strong>涂鸦云模组烧录授权平台</strong> 工具，通过涂鸦产测 SDK 对接自身生产烧录体系进行固件和授权码烧录，方案详细内容参考 <a href="https://developer.tuya.com/cn/docs/iot/smart-production/production-test-solution/production-test-docking-case/typical-production-test-cases/classic-case?id=K96ruma3lcaai">产测对接经典方案</a>。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>以下流程适用于使用涂鸦 <strong>云模组烧录授权码平台</strong> 工具烧录授权&#x2F;只授权方案。</p><h3 id="烧录软件准备"><a href="#烧录软件准备" class="headerlink" title="烧录软件准备"></a>烧录软件准备</h3><p>进入 <a href="https://pms.tuya.com/">涂鸦 PMS 生产工艺管理系统</a>，注册账号并登录，选择 <strong>软件下载</strong>，下载 <strong>生产解决方案</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/content-platform/hestia/1641436307ca840934acd.png" alt="烧录授权"></p><h3 id="烧录硬件环境搭建"><a href="#烧录硬件环境搭建" class="headerlink" title="烧录硬件环境搭建"></a>烧录硬件环境搭建</h3><p>根据芯片&#x2F;模组的烧录方式搭建硬件环境，不同协议的芯片烧录方式不同，通常可以分为以下三类。</p><ul><li><p><strong>Wi-Fi 模组烧录</strong></p><p>通常使用串口方式烧录授权，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">USB 转 TTL 工具</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">TX</td><td align="left">RX</td><td align="left"></td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>BLE 模组烧录</strong></p><p>通常使用芯片烧录器烧录固件 ，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">Telink 烧录器</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">SWS</td><td align="left">SWM</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>Zigbee 模组烧录</strong></p><p>通常使用 J-link 烧录固件，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">J-link 烧录器</td><td align="left">RST</td><td align="left">RESET</td></tr><tr><td align="left">SWDIO</td><td align="left">SWDIO</td><td align="left"></td></tr><tr><td align="left">SWCLK</td><td align="left">SWCLK</td><td align="left"></td></tr><tr><td align="left">3V3</td><td align="left">VCC</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li></ul><h3 id="烧录授权操作流程说明"><a href="#烧录授权操作流程说明" class="headerlink" title="烧录授权操作流程说明"></a>烧录授权操作流程说明</h3><ol><li><p>连接硬件到 PC 并安装相关驱动。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201216/a881e7fc191a44f5af3f027b2f5aa9c8.png" alt="烧录授权"></p></li><li><p>根据烧录授权方案，选择是否使用芯片烧录工具，并对上位机进行配置。</p><ul><li><p>烧录授权分立方案</p><p>a. 打开芯片烧录工具，按照操作说明烧录固件。<br>b. 配置上位机为只授权模式。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/a9b2eac98b8e4f338d1d2dee23ccdfaa.png" alt="烧录授权"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/09007a1f154443638cbc77d505a5c80f.png" alt="烧录授权"></p></li><li><p>烧录授权一体方案</p><p>配置上位机为烧录授权模式。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/38e65b2ab6594914b4c31a5946a71296.png" alt="烧录授权"></p></li></ul></li><li><p>选择串口信息，输入授权码，单击 <strong>运行</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/5e0225b48d4648cfa0e7a0b21e80fc2f.png" alt="烧录授权"></p><p>上位机会显示烧录的进度及结果，如果出现错误，可点击下方 <strong>错误详细</strong> 处查看原因，并根据提示进行内容，整改后重新烧录。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/145f417c572f4273a6d06eeaa6d7ff41.png" alt="烧录授权"></p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/b0fb20892ae145f7a3a46294280c6fa3.png" alt="烧录授权"></p></li></ol><hr><h1 id="烧录授权说明二"><a href="#烧录授权说明二" class="headerlink" title="烧录授权说明二"></a>烧录授权说明二</h1><p>通过涂鸦 IoT 开发平台免开发方案成功生成固件，或使用自定义开发方案生成固件并上传到涂鸦 IoT 开发平台后，下一步需要对模组进行烧录授权。</p><p>本文将详细讲解 3 种不同的烧录授权方式：</p><ul><li><p>自定义开发烧录授权：适用于发布阶段，使用自定义开发方式创建的产品。</p></li><li><p>三明治开发板方式烧录授权：仅适用于涂鸦三明治开发板的烧录授权。</p></li><li><p>使用原厂工具烧录：适用于开发阶段。方案的特点是<strong>授权一次，重复烧录</strong>。</p><p>下文中的生产凭证，授权码和 token 均描述同一事物。</p></li></ul><h2 id="烧录前准备"><a href="#烧录前准备" class="headerlink" title="烧录前准备"></a>烧录前准备</h2><p>烧录授权所需工具如下：</p><ul><li>申请 PMS 账号</li><li>下载「生产解决方案」</li><li>下载 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">BK 原厂烧录工具</a></li><li>一个 USB 转 UART 转换工具</li></ul><h3 id="注册-PMS-账号"><a href="#注册-PMS-账号" class="headerlink" title="注册 PMS 账号"></a>注册 PMS 账号</h3><p>选择个人开发者，按照系统注册指引填写相关信息后，你会收到涂鸦发送的审核成功邮件。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/PMS_1.png" alt="烧录授权"></p><h3 id="下载并安装生产解决方案"><a href="#下载并安装生产解决方案" class="headerlink" title="下载并安装生产解决方案"></a>下载并安装生产解决方案</h3><h4 id="下载生产解决方案"><a href="#下载生产解决方案" class="headerlink" title="下载生产解决方案"></a>下载生产解决方案</h4><p>审核通过后，输入账号和密码登录<a href="https://pms.tuya.com/login">涂鸦 PMS 系统</a>。登录成功后，选择 <strong>知识库管理</strong> &gt; <strong>软件下载</strong> &gt; <strong>生产解决方案</strong>，下载<strong>生产解决方案</strong>。</p><p><img src="https://images.tuyacn.com/content-platform/hestia/16529503994a1e6b5a737.png" alt="烧录授权"></p><h4 id="安装生产解决方案"><a href="#安装生产解决方案" class="headerlink" title="安装生产解决方案"></a>安装生产解决方案</h4><ol><li><p>双击<strong>生产解决方案</strong>安装包，会现下面的警告，单击<strong>更多信息</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_1.png" alt="烧录授权"></p></li><li><p>单击<strong>仍要运行</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_2.png" alt="烧录授权"></p></li><li><p>根据自身需求，设置程序安装的位置，建议不要有中文路径。</p></li><li><p>完成安装后，启动<strong>生产解决方案</strong>，登录账号和密码同涂鸦PMS系统（涂鸦智造）的账号和密码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_3.png" alt="烧录授权"></p></li><li><p>单击<strong>云模组</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/TYPYK_TYDA.png" alt="烧录授权"></p></li><li><p>检查安装情况。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_4.png" alt="烧录授权"></p><ul><li><p>红色框内为黄色，则说明安装成功。可<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#download">下载原厂烧录工具</a>。</p></li><li><p>红色框内全为白色，就需要对软进行如下设置，使它恢复正常。</p><p>(1) 单击 <strong>文件</strong> &gt; <strong>设置</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_5.png" alt="烧录授权"></p><p>(2) 在<strong>基础设置</strong>中，将箭头 ① 指向的<strong>多路选择</strong>的<strong>1*1</strong>选项改为<strong>1*2</strong>，再单击<strong>确认</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_6.png" alt="烧录授权"></p><p><strong>多路选择</strong>改变后，界面如下图所示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_7.png" alt="烧录授权"></p><p>(3) 将多路选择的<strong>1*2</strong>，改回到<strong>1*1</strong>，使两个黄色框变为一个黄色框，设置就完成了。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_8.png" alt="烧录授权"></p></li></ul></li></ol><h3 id="下载原厂烧录工具"><a href="#下载原厂烧录工具" class="headerlink" title="下载原厂烧录工具"></a>下载原厂烧录工具</h3><ul><li>单击 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">bk_writer_gui_V1.6.3</a> 下载 Beken 原厂工具。</li></ul><h2 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h2><p>不同开发板或模组的烧录流程也不一样。如果使用的是涂鸦的三明治开发板，建议通过<strong>云模组</strong>工具进行烧录。</p><h3 id="自定义开发烧录授权"><a href="#自定义开发烧录授权" class="headerlink" title="自定义开发烧录授权"></a>自定义开发烧录授权</h3><p>此方案适用于 <strong>发布阶段</strong> ，使用自定义开发方式创建的产品，需要先将编译好的固件上传到涂鸦 IoT 开发平台，获取生产凭证（token）后，再使用<strong>云模组</strong>工具进行烧录授权。</p><p>涂鸦模组需要完成授权才能连接涂鸦平台，授权完成的模组如果需要烧录开发好的固件或更改后的固件，可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#original">使用原厂工具烧录</a>。</p><h4 id="上传固件-1"><a href="#上传固件-1" class="headerlink" title="上传固件"></a>上传固件</h4><ol><li><p>进入<a href="https://iot.tuya.com/pmg/list">涂鸦 IoT 开发平台</a>，单击已开发的产品，找到<strong>硬件开发</strong>。按照下图指示，单击<strong>新增自定义固件</strong>，再填写相关固件信息。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left"><strong>固件标识名</strong>必须和编译时的 <code>apps</code> 下的工程文件夹的名称保持一致。也就是说，如果这里的固件标识名填写为 <code>wifi_one_light</code> ，那么上传的固件应为 SDK 包中 <code>apps</code> 目录下的 <code>wifi_one_light</code> 文件夹中编译所生成的固件。</td></tr><tr><td align="left">Flash 大小</td><td align="left"><strong>Flash 大小</strong>为 <code>16Mbit</code>，也就是 2M 大小。关于不同模组的 flash 大小，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>。<strong>Note</strong>: 1 byte(字节) &#x3D; 8 bits(位)。 16 Mbit ÷ 8 &#x3D; 2M。</td></tr><tr><td align="left">没有被 ② 的框框圈到的参数</td><td align="left">使用默认设置。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_1.png" alt="烧录授权"></p></li><li><p>相关信息填写完成后，单击<strong>上传固件</strong>，进入下一步，开始上传固件。进行如下操作之后，单击<strong>保存</strong>。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件版本</td><td align="left">需要和编译时输入的版本号对应一致。</td></tr><tr><td align="left">生产固件</td><td align="left">上传包含 <code>QIO</code> 的 bin 文件。</td></tr><tr><td align="left">用户区固件</td><td align="left">上传包含 <code>UA</code> 的 bin 文件。</td></tr><tr><td align="left">升级固件</td><td align="left">上传包含 <code>UG</code> 的 bin 文件。</td></tr><tr><td align="left">运行模式</td><td align="left">运行模式选择 <code>QIO</code> 。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_2.png" alt="烧录授权"></p></li><li><p>单击<strong>进行固件上架</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_3.png" alt="烧录授权"></p></li><li><p>选择<strong>不限范围</strong>，单击<strong>确认上架</strong>。</p><p>选择<strong>不限范围</strong>是方便个人开发者管理产品。如果是公司将要量产的产品，请根据你的实际需求设置允许使用范围。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_4.png" alt="烧录授权"></p></li></ol><h4 id="获取生产凭证（token"><a href="#获取生产凭证（token" class="headerlink" title="获取生产凭证（token)"></a>获取生产凭证（token)</h4><p>将固件上传到涂鸦 IoT 开发平台，成功上架后，就可以免费领取激活码。使用激活码通过<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>单击<strong>免费领取激活码</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_1.png" alt="烧录授权"></p></li><li><p>交付方式选择<strong>生产凭证</strong>，单击<strong>提交订单</strong>。</p><ul><li><strong>生产凭证</strong>: 产测授权工具<strong>烧录授权</strong>功能读取的凭证编码，可自动抓取指定数量的授权码，随固件一起逐个写入设备。需上传生产固件至涂鸦 IoT 开发平台。</li><li><strong>授权码清单</strong>: 写着每一个授权码 UUID 及相关信息的表单，需自行逐个写入设备。</li><li><strong>生产凭证-仅授权</strong>: 产测授权工具<strong>独立授权</strong>功能读取的凭证编码，无需固件，即可对设备进行逐个授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_2.png" alt="烧录授权"></p></li><li><p>单击<strong>去订单列表页看看</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_3.png" alt="烧录授权"></p></li><li><p>确认箭头 ① 所指向信息是否正确。确认无误后，单击箭头 ② 的<strong>下载生产凭证</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_4.png" alt="烧录授权"></p></li><li><p>解压下载好的生产凭证，打开 <code>Token_information.txt</code> 文件，并复制生产凭证。</p></li><li><p>在<strong>云模组</strong>工具中输入生产凭证，并选择工位<strong>烧录授权</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_5.png" alt="烧录授权"></p><p>如果出现<code>获取 token 失败，没有操作权限</code>的错误，请参考<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#token">获取 token 失败，没有操作权限</a>中的解决办法。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p>生产凭证输入完成后，界面如下图所示。在<strong>基础信息</strong>一栏中显示固件的相关信息。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_6.png" alt="烧录授权"></p></li></ol><h4 id="烧录授权"><a href="#烧录授权" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>在<strong>云模组</strong>工具上根据按照箭头的指引，输入生产凭证，选择工位为<strong>烧录授权</strong>，并单击<strong>确定</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_3.png" alt="烧录授权"></p></li><li><p>按照下表通过 USB 转 UART 工具，把三明治开发板与电脑连接起来。</p><table><thead><tr><th align="center">USB 转 UART 引脚</th><th align="center">三明治 SoC 开发板引脚</th></tr></thead><tbody><tr><td align="center"><code>VCC</code></td><td align="center"><code>VCC</code></td></tr><tr><td align="center"><code>GND</code></td><td align="center"><code>GND</code></td></tr><tr><td align="center"><code>TX</code></td><td align="center"><code>RX</code></td></tr><tr><td align="center"><code>RX</code></td><td align="center"><code>TX</code></td></tr></tbody></table></li><li><p>选择烧录的串口，单击<strong>运行</strong>，然后马上给模组断电再上电或按下复位按键使模组重启，开始对模组进行烧录授权操作。</p><ul><li>重启模组时不要直接把串口工具从电脑上拔掉，避免造成烧录失败。建议拔掉再插上模组与串口工具连接的 VCC 和 GND 的杜邦线。</li><li>CBU 的三明治 SoC 开发板自带 CH304 串口芯片。在单击<strong>运行</strong>后，按下开发板上 USB 口复位按键即可重启芯片，开始烧录授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_4.png" alt="烧录授权"></p></li><li><p>（可选）如果在烧录授权过程中出现<strong>进入产测失败</strong>的错误，可能是因为该开发板在上一次烧录授权时已经累计连接到网络超过15分钟，设备此时关闭了产测功能，才导致无法进入产测，出现授权失败的情况。解决办法可参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#enter">进入产测失败</a>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_1.png" alt="烧录授权"></p></li></ol><h3 id="三明治开发板方式烧录授权"><a href="#三明治开发板方式烧录授权" class="headerlink" title="三明治开发板方式烧录授权"></a>三明治开发板方式烧录授权</h3><p>本方法仅适用于涂鸦三明治开发板的烧录授权。</p><p>在涂鸦 IoT 开发平台上使用免开发方案创建的产品只能通过绑定三明治 SoC 主控板，在三明治开发套件中申请授权码的方式申请到生产凭证（token）。如果账号没有绑定过三明治 SoC 主控板，只有涂鸦模组，既不能获取到免开发方案产品的 token ，也不能给模组烧录授权免开发方案的固件。</p><h4 id="绑定三明治开发板"><a href="#绑定三明治开发板" class="headerlink" title="绑定三明治开发板"></a>绑定三明治开发板</h4><p>打开<a href="https://iot.tuya.com/">涂鸦 IoT 开发平台</a>，单击<strong>产品</strong> &gt; <strong>开发者工具</strong> &gt; <strong>三明治开发板</strong> &gt; <strong>绑定开发板</strong>。在弹窗中，输入开发板上的 ID 和密码，即可完成绑定。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bound_sandwich_board_1.png" alt="烧录授权"></p><h4 id="三明治开发板获取-Token"><a href="#三明治开发板获取-Token" class="headerlink" title="三明治开发板获取 Token"></a>三明治开发板获取 Token</h4><p>绑定完成后，根据下方图片指示的顺序进行操作，选择要烧录的产品，单击<strong>申请新的授权码</strong>，便可成功申请到授权码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_1.png" alt="烧录授权"></p><h4 id="烧录授权-1"><a href="#烧录授权-1" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>复制从涂鸦 IoT 开发平台上获取到的授权码后，打开<strong>云模组</strong>工具。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_2.png" alt="烧录授权"></p></li><li><p>烧录授权可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#flash">烧录授权</a> ，进行操作。</p></li></ol><h3 id="使用原厂工具烧录"><a href="#使用原厂工具烧录" class="headerlink" title="使用原厂工具烧录"></a>使用原厂工具烧录</h3><p>此方案适用于开发阶段。方案的特点是 <strong>授权一次，重复烧录</strong>。方案需要确保模组在烧录前已完成授权，且烧录时要注意选择的 flash 区域，避免程序写入位置错误，导致程序无法正常运行。</p><p>在开发过程中，如果每次使用<strong>云模组</strong>工具对模组进行烧录授权，相对来说不太方便。如果模组已经完成授权，使用原厂工具进行烧录授权的方式，不但不会刷掉模组的授权信息，还可以达到 <strong>授权一次，重复烧录</strong> 的效果。</p><h4 id="Beken-平台"><a href="#Beken-平台" class="headerlink" title="Beken 平台"></a>Beken 平台</h4><p>使用此方法只能烧录应用区固件，无法给模组进行授权操作。可以使用该方法给已经授权过的模组进行烧录，避免每次更新代码生成固件后都要上传到涂鸦 IoT 开发平台使用<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>按照下图步骤，在箭头 ① 所指向的烧录对象中，根据实际烧录的模组选择对应的芯片型号，可在<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>查看相关模组规格书，确认模组使用的芯片型号。</p></li><li><p>单击箭头 ② 指向的<strong>浏览</strong>按钮，选择成功编译生成的包含了 <code>UA</code> 字样的 bin 文件（该文件就是应用区固件，这里选择的固件就是<code>wifi_one_light</code>）。</p></li><li><p>在箭头 ③ 和箭头 ④ 指向的<code>起始地址</code>中填入<code>0x00011000</code>，<code>操作长度</code>中填入<code>0x00119000</code>。</p></li><li><p>在箭头 ⑤ 指向的位置选择正确的烧录串口，将箭头 ⑥ 指向的<strong>通讯波特率</strong>调整为最高，可以加快烧录速度。</p></li><li><p>单击箭头 ⑦ 指向的<strong>烧录</strong>，给模组通断电或复位模组使模组重启，开始烧录。烧录完成后，更改后的代码就成功烧录到模组中。你可以不再使用<strong>云模组</strong>工具对该模组再次进行授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bk_writer_download.png" alt="烧录授权"></p></li></ol><h2 id="烧录授权-FAQs"><a href="#烧录授权-FAQs" class="headerlink" title="烧录授权 FAQs"></a>烧录授权 FAQs</h2><h3 id="获取-token-失败，没有操作权限"><a href="#获取-token-失败，没有操作权限" class="headerlink" title="获取 token 失败，没有操作权限"></a>获取 token 失败，没有操作权限</h3><p>输入生产凭证是，出现<code>获取 token 失败：没有操作权限</code>的提示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p><strong>解决办法</strong>：<br>如果出现该错误，需要登录 <a href="https://pms.tuya.com/">PMS 系统</a>，选择<strong>生产管理</strong> &gt; <strong>工单管理</strong> &gt; <strong>生产凭证确认</strong>，输入生产凭证，并单击<strong>确认</strong>。之后，回到<strong>云模组</strong>工具中输入该生产凭证，单击<strong>确认</strong>，即可开始烧录授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/no_operate_rights.png" alt="烧录授权"></p><h3 id="抢总线失败错误"><a href="#抢总线失败错误" class="headerlink" title="抢总线失败错误"></a>抢总线失败错误</h3><p>可能其它软件占用了烧录使用的串口。</p><p><strong>解决办法</strong>：<br>可以将烧录串口工具软件全部关闭，或直接插拔 USB 转 TTL 串口工具。</p><h3 id="获取固件指纹错误"><a href="#获取固件指纹错误" class="headerlink" title="获取固件指纹错误"></a>获取固件指纹错误</h3><p>在仅授权的场景下，会出现<strong>获取固件指纹错误</strong>的情况，如下图显示。错误原因是由于模组内烧录的固件名称或版本号与授权的固件名称或版本号不一致。</p><p><strong>解决办法</strong>：</p><ol><li><p>输入与模组固件名称和版本号一致的生产凭证（token），再进行授权处理。</p></li><li><p>对该模组进行烧录授权处理（非仅授权）。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/error_get_firmware_fingerprint.png" alt="烧录授权"></p></li></ol><h3 id="进入产测失败"><a href="#进入产测失败" class="headerlink" title="进入产测失败"></a>进入产测失败</h3><p>设备累计联网时间超过 15 分钟后，会关闭产测功能。在烧录授权过程中，如果出现<strong>进入产测失败</strong>的错误，并且日志中有 <code>have actived over 15 min, not enter mf_init</code> 字样的日志打印，说明设备关闭了产测功能。</p><p><strong>解决办法</strong>：<br>你需要先擦除 flash 中的相关数据才能授权成功。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_3.png" alt="烧录授权"></p><h4 id="修改代码（通用方式）"><a href="#修改代码（通用方式）" class="headerlink" title="修改代码（通用方式）"></a>修改代码（通用方式）</h4><p>进入产测失败时，可以在 <code>tuya_device.c</code> 文件 <code>pre_device_init()</code> 函数内调用 <code>mf_test_ignore_close_flag() ;</code>函数，忽略产测关闭标志，从而避免因为产测关闭而无法通过授权。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_4.png" alt="烧录授权"></p><h4 id="Beken-系列，使用原厂工具擦除相关数据"><a href="#Beken-系列，使用原厂工具擦除相关数据" class="headerlink" title="Beken 系列，使用原厂工具擦除相关数据"></a>Beken 系列，使用原厂工具擦除相关数据</h4><p>打开 Beken 原厂提供的烧录授权 <code>bk_writer</code> 工具，按照下图步骤将箭头 ① 指向的<strong>烧录对象</strong>选项改为对应的芯片。关于模组芯片型号，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>的相关模组规格书。</p><p>三明治 SoC Beken 平台开发板介绍:</p><ul><li>WB3S: 烧录对象选择 BK7231</li><li>CBU: 烧录对象选择 BK7231N</li><li>起始地址：<code>0x001EE000</code>，操作长度：<code>0x00012000</code>。</li></ul><p>选择开发板烧录串口，单击<strong>擦除 Flash</strong>按钮，重启模块，开始擦除内存数据。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_2.png" alt="烧录授权"></p><hr><blockquote><p><strong>说明：本文是收集参考涂鸦官方文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/qq_38179373/article/details/112202787">涂鸦模组二次开发RTL8720CF</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/burn-and-authorize-wbr-series-modules?id=Ka78imt8pf85p#title-3-%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%9A%E7%83%A7%E5%BD%95%E6%8E%88%E6%9D%83%E4%B8%80%E4%BD%93%E6%96%B9%E6%A1%88">WBR 系列模组烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u#title-5-%E7%83%A7%E5%BD%95%E8%BD%AF%E4%BB%B6%E5%87%86%E5%A4%87">烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2">烧录授权(通用说明)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> rtl8720cf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(三)之TuyaOS环境搭建</title>
      <link href="/posts/4014484988.html"/>
      <url>/posts/4014484988.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、SDK-获取"><a href="#一、SDK-获取" class="headerlink" title="一、SDK 获取"></a>一、SDK 获取</h1><blockquote><p>在 涂鸦 IoT 平台 上完成了产品创建。探后在【硬件开发】页面选择好云模组WBR3后，即可在下载资料中找到对应的 SDK，点击【下载】</p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/332c4f488fd6014646cb96b17786bb7a.png"><p>得到相应压缩包 <font color=red>ty_iot_household_electrical_appliances_sdk_rtl8720cf_ameba_2.3.0</font> 就是本芯片相对应SDK，<br>在 README.md 中有相对应简介说明,SDK 目录结构说明以及使用说明等。</p><blockquote><p><strong>注意：压缩包需要在ubuntu上解压，否则很容易出现文件链接错误</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/c00f6bdb9bf47a2641ca1b40d392bf13.png"><h1 id="二、安装-VirtualBox-虚拟机"><a href="#二、安装-VirtualBox-虚拟机" class="headerlink" title="二、安装 VirtualBox 虚拟机"></a>二、安装 VirtualBox 虚拟机</h1><h2 id="第-1-步：软件下载"><a href="#第-1-步：软件下载" class="headerlink" title="第 1 步：软件下载"></a>第 1 步：软件下载</h2><ol><li>进入<a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a> 官网，单击红色框中  Windows hosts 的链接开始下载 VirtualBox 安装包。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/download_virtual_box.png"><ol start="2"><li>进入<a href="https://ubuntu.com/download/desktop">Ubuntu</a> 官网，下载 Ubuntu 系统镜像。这里下载的是 Ubuntu 20.04 （推荐使用 Ubuntu 18 及以上版本）作为开发编译环境<h2 id="第-2-步：安装-VirtualBox"><a href="#第-2-步：安装-VirtualBox" class="headerlink" title="第 2 步：安装 VirtualBox"></a>第 2 步：安装 VirtualBox</h2>点击安装包后直接按照 VirtualBox 软件的提示步骤即可安装完成。</li><li>双击下载好的 VirtualBox 安装包，出现下图界面，单击下一步。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_1.png"><ol start="2"><li>安装功能和安装位置。安装功能使用默认选项，一般不做改变。安装路径可以按照个人喜好进行设置。设置完成后，单击下一步，继续安装。<blockquote><p>如果你的电脑 C 盘空间足够，选择默认目录安装即可。如果电脑 C 盘空间不太充足或不想安装在 C 盘，单击 ① 箭头指向的浏览按钮，修改安装目录并单击下一步。在选择安装路径时，不建议安装路径中包含中文，避免在将来出现一些意想不到的情况。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_2.png"><ol start="3"><li>单击 下一步，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_3.png"><ol start="4"><li>单击 是，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_4.png"><ol start="5"><li>上述步骤配置完成后，单击 安装 开始安装软件。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_5.png"><ol start="6"><li>等待 VirtualBox 安装完成后，单击 完成，运行 VirtualBox。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_6.png"><h2 id="第-3-步：安装Ubuntu虚拟机"><a href="#第-3-步：安装Ubuntu虚拟机" class="headerlink" title="第 3 步：安装Ubuntu虚拟机"></a>第 3 步：安装Ubuntu虚拟机</h2><ol><li>VirtualBox 安装完成后，单击新建，开始创建虚拟机。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_1.png"><ol start="2"><li>名称输入 Ubuntu，下面的类型和版本会自动填充为对应的选项。这里使用的 Ubuntu 镜像为 Ubuntu20.04，所以类型应为Linux，版本应为Ubuntu（64-bit）。单击文件夹，选择其它，将要创建的虚拟机选择到你想要放的位置。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_2.png"><ol start="3"><li>为新创建的虚拟机分配合适的内存大小。<blockquote><p>根据使用的电脑配置情况进行分配，当然分配的内存大一点，虚拟机也会相对于流畅一点。这里使用的电脑内存大小为 16 GB，在实际分配的时候为它分配 4 GB（4096 MB）的内存大小。后续使用过程中，还可以再次修改内存大小。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_3.png"><ol start="4"><li>为将要创建的虚拟机分配合适的磁盘大小。<blockquote><p>根据自身电脑资源情况进行分配，这里为它分配 50 GB 的磁盘大小。在安装完成后，分配的磁盘空间大小也是可以修改的。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_4.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_6.png"><p>更改创建的磁盘文件所放置的文件夹，为虚拟机创建的磁盘大小设置为50 GB.</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_7.png"><ol start="5"><li>虚拟机的资源分配完成后，就可以开始为虚拟机安装 Ubuntu 系统了。单击箭头 ① 所指向光驱，选择下载完成的 Ubuntu 镜像，再单击箭头 ③ 所指向的启动按钮。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_8.png"><ol start="6"><li>安装 Ubuntu 时，建议语言设置为英文。如果设置为中文，在将来可能出现一些意想不到的问题。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_9.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_10.png"><ol start="7"><li>建议设置为最小安装，取消在安装过程中的下载更新，以加快镜像的安装速度。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_11.png"><ol start="8"><li>选择擦除磁盘并安装 Ubuntu，单击Install Now按钮，开始安装 Ubuntu。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_12.png"><ol start="9"><li>这一步会弹出将会对磁盘分区进行修改的提示，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_13.png"><ol start="10"><li>选择时区，默认为上海。可以不用做修改，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_14.png"><ol start="11"><li>输入用户名和密码，按照自身喜好进行设置就好。<blockquote><p><strong>此处设置的用户名和密码在后续步骤中将会多次用于认证操作。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_15.png"><ol start="12"><li>完成上述步骤后，根据界面提示重启电脑。重启后，软件会提示移除镜像安装光驱，此时单击ENTER。等待 VirtualBox 移除镜像安装光驱后，单击虚拟机并按下回车键等待虚拟机配置完成。<blockquote><p><strong>如果软件没有自动移除光驱镜像，您可以在进行手动移除。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_16.png"><ol start="13"><li>等待虚拟机开机完成后，输入密码即可进入 Ubuntu 的桌面虚拟机。</li></ol><h2 id="第-4-步：-安装增强工具"><a href="#第-4-步：-安装增强工具" class="headerlink" title="第 4 步： 安装增强工具"></a>第 4 步： 安装增强工具</h2><blockquote><p><strong>Ubuntu 安装成功后，为了能够更加方便地使用虚拟机，可以给虚拟机安装增强功能。安装成功后，支持共享粘贴板内容、屏幕自动调整分辨率等功能。</strong></p></blockquote><ol><li>在虚拟机界面，单击设备 &gt; 安装增强工具。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_1.png"><ol start="2"><li>单击Run，开始安装增强功能。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_2.png"><ol start="3"><li>等待软件提示 Press Return to close this window…，按下回车并重启虚拟机。此时，虚拟机的桌面大小会根据窗口大小，调整分辨率。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_3.png"><ol start="4"><li>选择 设备 &gt; 共享粘贴板 &gt; 双向 后，就可以在 Windows 上复制内容并在 Ubuntu 虚拟机中进行粘贴或者反向操作。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_4.png"><h1 id="三、安装编译工具"><a href="#三、安装编译工具" class="headerlink" title="三、安装编译工具"></a>三、安装编译工具</h1><blockquote><p><strong>注意：这里吃过亏，设置配置的编译环境是需要在ubuntu进行，否则会出现文件链接出现错误！因为之前 ESP8266 环境编译太久导致忘记了！环境跟源码是可以分开，在环境搭建好之后可以通过 WIN 共享来放置程序代码！</strong></p></blockquote><p>此时，我们还需要安装一些编译所必备的工具，才可以对涂鸦提供的 SDK 进行编译。<br>本文以 Samba 工具为例进行介绍。Samba 工具使我们能够在 Windows 下修改工程项目，在 Linux 下对修改后的工程进行编译，使用 Samba 工具提供的文件共享，也可以方便我们进行开发。<br>为什么不使用 VirtualBox 提供的共享文件夹功能而使用 Samba 工具来共享文件夹呢？因为 Linux 和 Windows 的文件系统是不一样的，如果使用 VirtualBox 上的共享文件夹，当你在 GitHub 上把 SDK 克隆到 VirtualBox 提供的共享文件夹中时，编译的时候可能会出现编译失败的问题。</p><h2 id="第-1-步：-修改下载源"><a href="#第-1-步：-修改下载源" class="headerlink" title="第 1 步： 修改下载源"></a>第 1 步： 修改下载源</h2><blockquote><p>为了使下载软件的速度更快，在安装软件前，先将下载源修改为国内源，以加快下载软件的速度。</p></blockquote><ol><li>打开 Software&amp;Updates。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_1.png"><ol start="2"><li>单击Download from后的选项框，选择选项框内的<strong>Other…</strong>选项。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_2.png"><ol start="3"><li>单击 Select Best Server，软件将自动为你选择最快的下载源。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_3.png"><ol start="4"><li>等待系统自动选择完成后，单击 Choose Server。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_4.png"><ol start="5"><li>单击 Close 后根据界面提示，再单击 Reload，等待系统刷新缓存完成。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_6.png"><ol start="6"><li>系统刷新缓存完成后，Ubuntu 的软件下载源成功更改为国内源。</li></ol><h2 id="第-2-步：下载编译依赖工具"><a href="#第-2-步：下载编译依赖工具" class="headerlink" title="第 2 步：下载编译依赖工具"></a>第 2 步：下载编译依赖工具</h2><p>在虚拟机中，单击右键并选择 <strong>Open in Terminal</strong> 来打开终端，再依次运行以下命令：</p><blockquote><p><strong>在输入命令后，可能会提醒你输入密码。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get upgrade -y</span><br><span class="line">sudo apt-get install net-tools build-essential wget git python libc6-i386</span><br></pre></td></tr></table></figure><p>至此，编译所需要的工具都已下载完成，可以在 Ubuntu 下编译涂鸦的 SDK 了。</p><h2 id="第-3-步：-安装-Samba"><a href="#第-3-步：-安装-Samba" class="headerlink" title="第 3 步： 安装 Samba"></a>第 3 步： 安装 Samba</h2><blockquote><p>使用 Samba 在 Ubuntu 和 windows 之间进行文件共享。</p></blockquote><ol><li>在安装 Samba 之前，需要设置虚拟机的网络。先关闭虚拟机，然后按照下图中的步骤进行设置。<br>（1）选择 设置 &gt; 网络 &gt; 网卡2。<br>（2）在 网卡2 中选择 启动网络连接，连接方式选择 仅主机(Host-Only)网络。<br>（3）单击 确认 完成设置。</li></ol><blockquote><p><strong>注意：这里我使用的是桥接网卡模式，因为习惯使用这个方式，而且我的虚拟机也没网卡2</strong></p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_1.png"><ol start="2"><li>设置完成后打开虚拟机，输入下列命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><blockquote><p>这个是查看网卡信息</p></blockquote></li></ol><p>输入ifconfig 命令后得到电脑的 IP 地址，如下图显示：</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_2.png"><ol start="3"><li><p>输出下列命令，开始安装 Samba。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install samba cifs-utils samba-common</span><br></pre></td></tr></table></figure></li><li><p>Samba 安装完成后，需要创建 Ubuntu 和 Windows 可以互相访问的共享目录，并将共享目录的权限设置为可读可写可执行，依次执行下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /home/share/samba</span><br><span class="line">sudo chmod 777 -R /home/share/samba</span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，然后对 Samba 的配置进行修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>在文件尾部加入下列字段，然后保存退出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[share] </span><br><span class="line">path = /home/share/samba </span><br><span class="line">available = yes </span><br><span class="line">browseable = yes </span><br><span class="line">public = no</span><br><span class="line">writable = yes</span><br></pre></td></tr></table></figure><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_3.png"></li><li><p>输入下列命令，添加指定用户至 smb 用户组，然后按照提醒设置你 Samba 的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a xxxx <span class="comment">#(xxxx 为当前登录用户名，我这里xxxx就应该是y)</span></span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，重启 Samba：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service smbd restart</span><br></pre></td></tr></table></figure></li><li><p>在 Windows 下，打开我的电脑，根据上面获取到的信息，按照下面图片的格式，将 IP 地址换成你 Ubuntu 虚拟机上的 IP 地址，填写在箭头 ② 的位置。如果忘记了虚拟机的 IP 地址，可以在 Ubuntu 上输入 ifconfig 命令进行查询。</p><blockquote><p><strong>注意：这里建议修改成主机名字而不是IP地址，因网内路由分配是DNS随机分配IP地址，所以下次可能又要重新输入IP<br>例如我的是: yichen-VirtualBox 那么设置连接后为：<br>share (yichen-VirtualBox (yichen-VirtualBox server (Samba, Ubuntu)))</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_4.png"><ol start="9"><li>填入用户名和你设置的 Samba 密码。<blockquote><p><strong>建议勾选记住我的凭证，避免每次打开共享文件夹都要填写账号密码。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_5.png"><ol start="10"><li>至此，Samba 已经安装配置成功。</li></ol><h1 id="四、编译验证"><a href="#四、编译验证" class="headerlink" title="四、编译验证"></a>四、编译验证</h1><p>通过上面的步骤，已经将虚拟机基本设置完成。但为了验证对虚拟机的设置是否成功，我们需要获取涂鸦 SDK 进行编译，以验证我们已成功安装与编译相关的工具。<br>涂鸦 SDK 从涂鸦的 GitHub 仓库拉取和从涂鸦 IoT 开发平台下载。在下面的两种方式中选择一种进行编译验证即可。</p><h2 id="方式一：GitHub-上获取-SDK-进行验证"><a href="#方式一：GitHub-上获取-SDK-进行验证" class="headerlink" title="方式一：GitHub 上获取 SDK 进行验证"></a>方式一：GitHub 上获取 SDK 进行验证</h2><blockquote><p><strong>我在 Github 上找不到 WBR3 类型的 rtl8720cf 芯片，所以使用的是方式二，即开头的下载方式</strong></p></blockquote><p>以 BK7231N 的 SDK 为例进行演示。</p><ol><li>在 Ubuntu 虚拟机下，输入下列命令，获取 bk7231n 的 SDK：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/tuya/tuya-iotos-embeded-sdk-wifi-ble-bk7231n.git</span><br></pre></td></tr></table></figure></li><li>输入下列命令，开始编译 tuya_demo_template：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> tuya-iotos-embeded-sdk-wifi-ble-bk7231n/</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#该编译命令将会在下一部分进行介绍</span></span><br></pre></td></tr></table></figure></li><li>编译成功，则说明上述操作均已成功完成。编译成功如下图所示：</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/build_success.png"><h2 id="方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）"><a href="#方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）" class="headerlink" title="方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）"></a>方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）</h2><p>在<a href="https://iot.tuya.com/">涂鸦IoT 开发平台</a> 上成功创建自定义开发的产品后，在硬件开发中选择 TuyaOS，即可下载该模组的 SDK。</p><blockquote><p>详细步骤，可参考<a href="https://developer.tuya.com/cn/docs/iot/iot-platform?id=Kaytf2hpelxqs#title-5-%E7%AC%AC5%E6%AD%A5%EF%BC%9A%20%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91%E8%AE%BE%E7%BD%AE">产品创建</a> 内容。</p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_SDK_1.png"><p>将下载好的 SDK 复制到 Windows 和 Ubuntu 的共享文件夹中，在 Ubuntu 虚拟机中输入下列命令进行编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">tar -xzvf *.tar.gz <span class="comment">#注意：该命令会将当前目录下所有后缀名为.tar.gz的文件进行解压，建议将*.tar.gz改为你实际要解压的文件的完整名字</span></span><br><span class="line"><span class="built_in">cd</span> ty_iot_sdk_bk7231n_2.3.1</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#输入该命令将会在所需相关资源下载完成后开始编译</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：本文是收集参考涂鸦官方环境搭建文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/sandwich_iot/article/details/124094533?spm=1001.2014.3001.5502">涂鸦蓝牙SDK开发系列教程——3.环境搭建</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/SoC-redevelopment_Windows?id=Kauqrxxka0wv6">环境搭建（Windows）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> ubuntu </tag>
            
            <tag> VirtualBox </tag>
            
            <tag> rtl8720cf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu无法访问github</title>
      <link href="/posts/969895767.html"/>
      <url>/posts/969895767.html</url>
      
        <content type="html"><![CDATA[<h1 id="查询github-com和github-global-ssl-fastly-net的ip地址"><a href="#查询github-com和github-global-ssl-fastly-net的ip地址" class="headerlink" title="查询github.com和github.global.ssl.fastly.net的ip地址"></a>查询github.com和github.global.ssl.fastly.net的ip地址</h1><blockquote><p>**可参考Windows github下拒绝访问的文章<br><a href="https://zml3589110.github.io/posts/774596022.html">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a><br>**</p></blockquote><blockquote><ol><li>地址查询已失效: <a href="https://ipaddress.com/website/github.com">https://ipaddress.com/website/github.com</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/4870f2d39d134a6994170100ccb346b8.png"><blockquote><ol start="2"><li><a href="https://ipaddress.com/website/github.global.ssl.fastly.net">https://ipaddress.com/website/github.global.ssl.fastly.net</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/f30c66da905740a6bb6123d0e82efdfd.png"><h1 id="修改hosts下的配置"><a href="#修改hosts下的配置" class="headerlink" title="修改hosts下的配置"></a>修改hosts下的配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><p><strong>添加如下两句：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">140.82.113.3 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><h1 id="重启network"><a href="#重启network" class="headerlink" title="重启network"></a>重启network</h1><blockquote><p>**注意：在20版本ubuntu没有这种启动方式，需使用 network-manager restart 命令<br>参考：Ubuntu常用命令之ubuntu20.04重启网络方法 **</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li><li><a href="https://blog.51cto.com/u_15242250/2856080">【终极方法，绝对有用】ubuntu 无法访问github.com的解决方法 </a></li><li><a href="https://blog.csdn.net/w09103419/article/details/121562044">Windows&#x2F;Ubuntu无法访问GitHub的解决方式</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu常用命令之ubuntu20.04重启网络方法</title>
      <link href="/posts/471655546.html"/>
      <url>/posts/471655546.html</url>
      
        <content type="html"><![CDATA[<h1 id="网上常用的重启办法会报错"><a href="#网上常用的重启办法会报错" class="headerlink" title="网上常用的重启办法会报错"></a>网上常用的重启办法会报错</h1><blockquote><p>配置完网络ip需要重启一下网络，网上搜了一下，大多用的这条命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 常用命令 </tag>
            
            <tag> network-manager restart </tag>
            
            <tag> 网络重启 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</title>
      <link href="/posts/774596022.html"/>
      <url>/posts/774596022.html</url>
      
        <content type="html"><![CDATA[<h1 id="出现-你的连接不是私密连接-原因"><a href="#出现-你的连接不是私密连接-原因" class="headerlink" title="出现[你的连接不是私密连接]原因"></a>出现[你的连接不是私密连接]原因</h1><blockquote><p>为了更快的访问github网站，一般都会在hosts文件中加入github.com对应的ip地址。<br>但在加入值之后可能会出现下图中的情况</p></blockquote><img src="https://img-blog.csdnimg.cn/20200721225543761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><blockquote><p>查看证书会发现这样一个问题:</p></blockquote><img scr="https://img-blog.csdnimg.cn/20200721225647922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>我查看百度几乎所有解决方案都没有效果，甚至一度怀疑被中间人攻击，到处查找证书的信息。将别人访问github.com的证书导出之后再导入我的证书管理，都无济于事。<br>最后发现问题出在hosts文件中追加的域名和ip地址不对应，我将github.com的ip地址写成了github.global.ssl.fastly.net对应的ip地址。<br>所以，在修改hosts文件时，需要将域名和ip地址对应正确，最好是两个都配置上，甚至github.com可以配置对个ip。这些域名对应的ip可以从<a href="https://www.ipaddress.com/%E5%A4%84%E6%9F%A5%E6%89%BE%E3%80%82">https://www.ipaddress.com/处查找。</a><blockquote><p><strong>主：自己网上方法也试了，只是增加IP地址的话还是不能访问，博主提供的这个网站也已经404，后来直接复制他的结果就解决了</strong></p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/20200721230940576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="2"><li>在搜索框中输入域名即可查看对应的ip<br>github.com对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231258768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="3"><li>github.global.ssl.fastly.net对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231501466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="4"><li>然后将以上两段ip放入hosts文件<br>hosts文件地址为: C:\Windows\System32\drivers\etc<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">199.232.69.194github.global.ssl.fastly.net</span><br><span class="line">140.82.114.4github.com</span><br></pre></td></tr></table></figure></li><li>最后在cmd命令行窗口执行刷新操作即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><h1 id="最后PING看结果"><a href="#最后PING看结果" class="headerlink" title="最后PING看结果"></a>最后PING看结果</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ipconfig /flushdns</span><br><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">已成功刷新 DNS 解析缓存。</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;ping github.com</span><br><span class="line"></span><br><span class="line">正在 Ping github.com [140.82.114.4] 具有 32 字节的数据:</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=232ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=239ms TTL=50</span><br><span class="line"></span><br><span class="line">140.82.114.4 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 231ms，最长 = 239ms，平均 = 233ms</span><br></pre></td></tr></table></figure></li></ol><p>查了很久，原本还会跳转到 Apache 服务上，后边停了就直接失败！最后找到博主这个方法，尝试后正常使用，记录下来以后方便能用上。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_29283569/article/details/107501508">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 问题收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Google Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE项目(一)之制作登录注册系统</title>
      <link href="/posts/2822623721.html"/>
      <url>/posts/2822623721.html</url>
      
        <content type="html"><![CDATA[<h1 id="账号登录部分"><a href="#账号登录部分" class="headerlink" title="账号登录部分"></a>账号登录部分</h1><blockquote><p>VUE HTML登录界面<br><strong>实现账号密码输入</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:60px;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../icon/vlogo.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:20rem;height:auto;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form middle&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名 / 邮箱&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;input type=&quot;password&quot; class=&quot;form-control input100&quot; v-model=&quot;usercode&quot; placeholder=&quot;密码&quot; @keyup.13=&quot;login&quot; /&gt; --&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input v-on:keyup.delete=&quot;confirmDelete&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">v-on:keyup.delete</span>=<span class="string">&quot;login&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123; errorMsg &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;a href=&quot;./registermobile.html&quot; class=&quot;btn btn-default btn100&quot;&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;Gotoregister&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:right;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./findpassword.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>找回密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span>         </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>© vchenzhe<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE JavaScript方法功能<br><strong>实现登录验证和路由跳转</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: <span class="built_in">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    userid:<span class="string">&#x27;33&#x27;</span>,</span><br><span class="line">    usercode:<span class="string">&#x27;55&#x27;</span>,</span><br><span class="line">    errorFlag:<span class="literal">false</span>,</span><br><span class="line">    errorMsg:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">      <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">        thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">          method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">          url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">          data:&#123;        </span><br><span class="line"></span><br><span class="line">            userid:thisvue.userid,</span><br><span class="line">            usercode:thisvue.usercode</span><br><span class="line">          &#125;,</span><br><span class="line"></span><br><span class="line">         &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">              thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">              <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">              thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">              thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">         </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,<span class="comment">// methods</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>PHP 数据处理<br><strong>接收来自 VUE 的数据并对接 mysql</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$myid</span>!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$mycode</span>!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$pwd</span>=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="variable">$pwd</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$conn</span> != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * FROM user_login where user_id=&#x27;<span class="subst">$myid</span>&#x27; or user_mail = &#x27;<span class="subst">$myid</span>&#x27; &quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> =<span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$resArray</span> = mysqli_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span> == <span class="literal">null</span>) &#123;<span class="keyword">goto</span> __ERENO_SSID;&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span>[<span class="string">&quot;user_password&quot;</span>] == <span class="variable">$mycode</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;chenzhe_user_id&#x27;</span>] = <span class="variable">$resArray</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;登陆成功&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">__ERENO_SSID:&#123;&#125;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;用户名或密码输入错误&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="variable">$conn</span>-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;<span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;mysql not connect&#x27;</span>];&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;请输入用户名或密码&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="账号注册部分"><a href="#账号注册部分" class="headerlink" title="账号注册部分"></a>账号注册部分</h1><blockquote><p>VUE HTML注册界面<br><strong>实现数据FORM表格界面输入和检测</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:2rem;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./indexmobile.html&quot;</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag==1&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123;errorMsg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span> <span class="attr">id</span>=<span class="string">&quot;registerForm&quot;</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testUserIdFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span>  <span class="attr">maxlength</span>=<span class="string">16</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testUserId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">maxlength</span>=<span class="string">10</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;昵称&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercodes&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkusercode&quot;</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testmailFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usermail&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usermail&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testmail&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:flex;&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;code&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;验证码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span>  <span class="attr">v-if</span>=<span class="string">&quot;testUserId==0||testpass==false||usermail==&#x27;&#x27;||testmail==false&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80 btn-disabled&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==0&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;testUserId==1&amp;&amp;testpass==true&amp;&amp;usermail!=&#x27;&#x27;&amp;&amp;testmail==true&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getCode&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-disabled btn80&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>已发送(&#123;&#123; clock &#125;&#125;s)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">             </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;register&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;myModalLabel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModalLabel&quot;</span>&gt;</span>消息<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      &#123;&#123; errorMsg &#125;&#125;</span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>  <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>电脑版<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE注册界面 JavaScript方法功能<br><strong>实现注册数据检测和POST数据功能</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;./js/jquery.js&#x27;</span>;<span class="keyword">import</span> <span class="string">&#x27;./css/mobilecommon.css&#x27;</span>;<span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;../node_modules/vue/dist/vue.js&#x27;</span>;$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"></span><br><span class="line">        el:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line"></span><br><span class="line">        data:&#123;</span><br><span class="line"></span><br><span class="line">            errorMsg:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            errorFlag:<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//填写注册信息</span></span><br><span class="line"></span><br><span class="line">            userid:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            username:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercode:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercodes:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usermail:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//验证注册信息</span></span><br><span class="line"></span><br><span class="line">            code:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            btnGetCode:<span class="number">0</span>, <span class="comment">//用于判断当前是否获取了一次验证码，默认是0，获取一次后改成1</span></span><br><span class="line"></span><br><span class="line">            testcode:<span class="number">0</span>, <span class="comment">//用于判断当前是否完成了验证码验证，默认是0，验证通过是1</span></span><br><span class="line"></span><br><span class="line">            clock:<span class="number">60</span>,</span><br><span class="line"></span><br><span class="line">            testUserId:<span class="literal">false</span>,<span class="comment">//检测当前用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">            testpass:<span class="literal">false</span>,<span class="comment">//检测密码安全</span></span><br><span class="line"></span><br><span class="line">            testmail:<span class="literal">false</span>, <span class="comment">//检测邮箱是否被注册过了</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        methods:&#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testUserIdFunc</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检测用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^[a-zA-Z][a-zA-Z0-9]*$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(thisvue.userid)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;用户名必须以英文开头，且只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(thisvue.userid.length&lt;<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;用户名长度须在9-16之间&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;    </span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testUserId.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_id:thisvue.userid                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = res.msg;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">readInfo</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检索密码安全等</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> result = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^(?!\d+$)[\da-zA-Z]+$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usercode.length&lt;<span class="number">9</span>) <span class="comment">//检测长度</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码长度须在9-20个字符，只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(<span class="built_in">this</span>.usercode)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码只能使用英文+数字,且不能为纯数字&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                     </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/*else if(testenglish.test(this.usercode))</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorFlag = 1;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorMsg = &#x27;密码不能为纯数字&#x27;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    result = 0;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#125;*/</span></span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(result==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.testpass = <span class="number">1</span>;<span class="comment">//如果密码验证成功，则通过</span></span><br><span class="line"></span><br><span class="line">                &#125; </span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.verifyCode();</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/register.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:$(<span class="string">&quot;#registerForm&quot;</span>).serialize(),</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;注册失败&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;                </span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">getCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//获取验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.userid==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.username==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercode==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercodes==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usermail==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;请填写全部的信息后获取验证码&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.btnGetCode = <span class="number">1</span>; <span class="comment">//把获取验证码按钮禁用</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> timer1 = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;thisvue.clock=thisvue.clock-<span class="number">1</span>;&#125;,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="built_in">clearInterval</span>(timer1);</span><br><span class="line"></span><br><span class="line">                        thisvue.btnGetCode=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                        thisvue.clock=<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;,<span class="number">60000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//发送邮件</span></span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/sendMail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">async</span>:<span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            address:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;我们发送了一封邮件到你的邮箱，请尽快验证&#x27;</span></span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">verifyCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//验证验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue =<span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.code&gt;<span class="number">100000</span>&amp;&amp;thisvue.code&lt;<span class="number">999999</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/verifyCode.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;<span class="attr">code</span>:thisvue.code&#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testcode=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg=<span class="string">&#x27;验证码不正确，请重新输入&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testmailFunc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usermail!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="built_in">this</span>.usermail.indexOf(<span class="string">&#x27;@&#x27;</span>)!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testmail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_mail:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;此邮箱已被注册,换个邮箱试试吧&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>PHP注册数据功能<br><strong>实现注册数据接收处理</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$_POST</span>[userid];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[usercode]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myname</span> = <span class="variable">$_POST</span>[username];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mymail</span> = <span class="variable">$_POST</span>[usermail];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$gm</span> = <span class="string">&#x27;vchenzhecom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;47.106.190.129:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;52F7cbad94f2&quot;</span>, <span class="string">&quot;personal&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test</span> = <span class="string">&quot;SELECT * FROM user_login WHERE `user_id` = &#x27;<span class="subst">$myid</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$testResult</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$test</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$testResult</span>)==<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$path</span>=<span class="string">&quot;/home/www/htdocs/carelesswhisper/src/img/&quot;</span>.<span class="variable">$myid</span>; <span class="comment">//判断目录存在否，存在给出提示，不存在则创建目录</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$path</span>))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;覆盖用户目录&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="comment">//第三个参数是“true”表示能创建多级目录，iconv防止中文目录乱码</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$res</span>=mkdir(iconv(<span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;GBK&quot;</span>, <span class="variable">$path</span>),<span class="number">0777</span>,<span class="literal">true</span>); </span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;注册成功&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot; INSERT INTO user_login VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$mycode</span>&#x27;,&#x27;<span class="subst">$myname</span>&#x27;,&#x27;<span class="subst">$mymail</span>&#x27;,&#x27;imageFile/image.jpg&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;0&#x27;) &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$gm</span>&#x27;,&#x27;<span class="subst">$myid</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$gm</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"></span><br><span class="line">         </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;此用户名已被使用&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>]=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="后端PHP数据接口参考"><a href="#后端PHP数据接口参考" class="headerlink" title="后端PHP数据接口参考"></a>后端PHP数据接口参考</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>);</span><br><span class="line">    error_reporting(E_ALL &amp; ~E_NOTICE);</span><br><span class="line">    <span class="comment">//header(&quot;Content-type: text/html; charset=gbk&quot;);</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意：</span></span><br><span class="line"><span class="comment">            本php是gbk编码的，因为mysise就是gbk编码没办法</span></span><br><span class="line"><span class="comment">            json_encode()里面的值要先转换为utf-8才能被识别</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="variable">$user</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    <span class="variable">$pass</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line">    <span class="variable">$sise_cookie</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;sise_cookie&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//echo $_POST[&#x27;sise_cookie&#x27;];</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//测试账号110</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>&amp;&amp;<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./user.php&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//登录页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;login&#x27;</span>)&#123;            </span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;number=<span class="subst">$user</span>&amp;pwd=<span class="subst">$pass</span>&quot;</span>;              </span><br><span class="line">        <span class="variable">$scse_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录scse</span></span><br><span class="line">        <span class="variable">$scse_url</span>=<span class="string">&quot;http://my.scse.com.cn/login_pro.asp&quot;</span>;               </span><br><span class="line">        LinkCurl(<span class="variable">$scse_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$scse_cookie</span>);                  </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取管理系统隐藏字段</span></span><br><span class="line">        <span class="variable">$sise_login_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login.jsp&quot;</span>;            </span><br><span class="line">        <span class="variable">$sise_login_html</span>=getCurlCon(<span class="variable">$sise_login_url</span>,<span class="variable">$scse_cookie</span>);</span><br><span class="line">        preg_match(<span class="string">&#x27;/&lt;input type=\&quot;hidden\&quot; name=\&quot;(.*)\&quot;  value=\&quot;(.*)\&quot;&gt;/&#x27;</span>, <span class="variable">$sise_login_html</span>,<span class="variable">$arr</span>);   </span><br><span class="line">        <span class="comment">//print_r($arr);</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录管理系统</span></span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;username=<span class="subst">$user</span>&amp;password=<span class="subst">$pass</span>&amp;<span class="subst">$arr</span>[1]=<span class="subst">$arr</span>[2]&quot;</span>; </span><br><span class="line">        <span class="variable">$sise_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line">        <span class="variable">$sise_login_check_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login_check.jsp&quot;</span>;        </span><br><span class="line">        LinkCurl(<span class="variable">$sise_login_check_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$sise_cookie</span>); </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;((.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*))&lt;\/span&gt;/&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">            <span class="comment">//登录成功后保存用户数据</span></span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]= <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;user&#x27;</span> =&gt; <span class="variable">$user</span>,</span><br><span class="line">                <span class="string">&#x27;pass&#x27;</span> =&gt; <span class="variable">$pass</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//课程表页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;course&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*)&lt;\/span&gt;/U&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        preg_match_all(<span class="string">&quot;/&lt;td width=\&#x27;10%\&#x27; align=\&#x27;left\&#x27; valign=\&#x27;top\&#x27; class=\&#x27;font12\&#x27;&gt;(.*)&lt;\/td&gt;/U&quot;</span>, <span class="variable">$course_html</span>,<span class="variable">$course</span>);</span><br><span class="line">        <span class="variable">$res_course</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">8</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">7</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">7</span>+<span class="number">7</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] == <span class="string">&#x27;&amp;nbsp;&#x27;</span>) <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$k</span>!=<span class="number">5</span> &amp;&amp; <span class="variable">$k</span>!=<span class="number">6</span>) &#123;</span><br><span class="line">                    <span class="variable">$res_course</span>[<span class="variable">$i</span>][<span class="variable">$k</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                &#125;   </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;info&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&quot;stuNum&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">1</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;name&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;grade&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">3</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;major&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">4</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">&quot;course&quot;</span> =&gt; <span class="variable">$res_course</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">        <span class="comment">//print_r($res_course);</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//查找老师页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;teacher&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// gei请求的name查询字符串</span></span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="comment">//获取老师的json数据库</span></span><br><span class="line">        <span class="variable">$data</span> = json_decode(file_get_contents(<span class="string">&quot;./json/teacher.json&quot;</span> ));</span><br><span class="line">        <span class="comment">//老师的信息</span></span><br><span class="line">        <span class="variable">$arr</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//响应数据</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//查询json数据库</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$data</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="variable">$i</span>]-&gt;name == <span class="variable">$name</span>)&#123;</span><br><span class="line">                <span class="variable">$arr</span> = <span class="variable">$data</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断查询数据</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$arr</span>))&#123;</span><br><span class="line">            <span class="comment">//如果工号为三位就前面加个0</span></span><br><span class="line">            <span class="keyword">if</span>(mb_strlen(<span class="variable">$arr</span>-&gt;num) ==<span class="number">3</span> )&#123;</span><br><span class="line">                <span class="variable">$arr</span>-&gt;num = <span class="string">&quot;0&quot;</span>.<span class="variable">$arr</span>-&gt;num;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="variable">$arr</span></span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>()</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//考勤信息页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;attendance&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$main_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_states/student_select_class/main.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$main_html</span>=getCurlCon(<span class="variable">$main_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/window\.location=\&#x27;\.\.\/\.\.\/\.\.\/\.\.\/\.\.\/(.*)\&#x27;\&quot;/Um&#x27;</span>, <span class="variable">$main_html</span>,<span class="variable">$main</span>);</span><br><span class="line">        <span class="variable">$attendance_url</span>=<span class="string">&#x27;http://class.sise.com.cn:7001/&#x27;</span>.<span class="variable">$main</span>[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="variable">$attendance_html</span> = getCurlCon(<span class="variable">$attendance_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        <span class="comment">//print_r($attendance_html);</span></span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td&gt;(.*)(\d+)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$count</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td align=\&quot;center\&quot;&gt;(.*)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$attendance</span>);</span><br><span class="line">        <span class="variable">$res_attendance</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$attendance</span>[<span class="number">1</span>])/<span class="number">3</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">3</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">3</span>+<span class="number">3</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">switch</span> (<span class="variable">$k</span>) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;num&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;name&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="comment">//匹配请假次数</span></span><br><span class="line">                        preg_match_all(<span class="string">&#x27;/\[&lt;a href=\&#x27;(.*)\&#x27;&gt;(.*)&lt;\/a&gt;\]/U&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="variable">$count</span>);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>].<span class="string">&#x27;次&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;                  </span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;                               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;total&quot;</span> =&gt; <span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>],</span><br><span class="line">                <span class="string">&quot;list&quot;</span> =&gt; <span class="variable">$res_attendance</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">LinkCurl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$curlpost</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);                   </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$curlpost</span>);            </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEJAR, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        curl_exec(<span class="variable">$curl</span>);                          </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录后获取页面内容函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCurlCon</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);             </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEFILE, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        <span class="variable">$data</span>=curl_exec(<span class="variable">$curl</span>);    </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.php.cn/php-ask-485509.html">vue加php怎么实现登陆</a></li><li><a href="https://www.mk2048.com/blog/blog_bab1ika2ij2j.html">Vue+php 后端PHP登录接口编写</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> mysql </category>
          
          <category> 前端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> php </tag>
            
            <tag> mysql </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php接收来自POST数据</title>
      <link href="/posts/705713032.html"/>
      <url>/posts/705713032.html</url>
      
        <content type="html"><![CDATA[<h1 id="POST提交过来模式为-Request-Payload-的-json-类型数据"><a href="#POST提交过来模式为-Request-Payload-的-json-类型数据" class="headerlink" title="POST提交过来模式为 Request Payload 的 json 类型数据"></a>POST提交过来模式为 Request Payload 的 json 类型数据</h1><ol><li>从html发送过来的Payload格式为 Request Payload<blockquote><p>内容格式为：{“userid”: “33”,”usercode”: “55”}</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">     <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">     &#123;</span><br><span class="line">       thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">       thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">         method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">         url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">         data:&#123;</span><br><span class="line">           userid:thisvue.userid,</span><br><span class="line">           usercode:thisvue.usercode</span><br><span class="line">         &#125;,</span><br><span class="line">        &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">             thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">             <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">             thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">             thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">        </span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,<span class="comment">// method</span></span><br></pre></td></tr></table></figure></li><li>使用 file_get_contents(‘php:&#x2F;&#x2F;input’); 方式进行接收<blockquote><p>之前尝试使用 $_POST 模式接收 POST 过来的数据，但总得到的数据为空，找了很多方法才发现是类型不对！</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   session_start();</span><br><span class="line">   header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line">   </span><br><span class="line">   <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">   <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br></pre></td></tr></table></figure><h1 id="POST-提交过来模式为-Form-Data-单格式"><a href="#POST-提交过来模式为-Form-Data-单格式" class="headerlink" title="POST 提交过来模式为 Form Data 单格式"></a>POST 提交过来模式为 Form Data 单格式</h1></li></ol><blockquote><p>$_POST 变量预定义的 $_POST 变量用于收集来自 method&#x3D;”post” 的表单中的值。<br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。<br><strong>注释：然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）</strong></p></blockquote><ol><li>从html发送过来的Payload格式为 Form Data<blockquote><p>内容格式为：<br>userid: zm<br>username: zha<br>usercode: zm<br>checkusercode: zml<br>usermail: zhaoming</p></blockquote></li></ol><p><strong>请注意，表单域的名称会自动成为 $_POST 数组中的键</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">  <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line">    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    thisvue.verifyCode();</span><br><span class="line">    <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">      url:<span class="string">&quot;/api/myBlog/axios-register.php&quot;</span>,</span><br><span class="line">      <span class="comment">// type:&#x27;POST&#x27;,</span></span><br><span class="line">      method:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      data:$(<span class="string">&#x27;#registerForm&#x27;</span>).serialize(<span class="built_in">this</span>.serialize),  <span class="comment">//可以发送 FORM 类型数据了</span></span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res.data[<span class="string">&#x27;code&#x27;</span>]==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          alert(<span class="string">&quot;注册成功&quot;</span>)</span><br><span class="line">          <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">          thisvue.errorMsg = <span class="string">&#x27;注册失败:&#x27;</span>+res.data[<span class="string">&#x27;msg&#x27;</span>];</span><br><span class="line">          thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>不能使用 type:’POST’, 要不然接收不到数据<br>要使用 data:$(‘#registerForm’).serialize(this.serialize),<br>而非 data:this.$(“#registerForm”).serialize(),</strong></p></blockquote><ol start="2"><li>使用 $_POST 方式进行接收<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line">header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$myid</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line"><span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$myname</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$mymail</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;usermail&#x27;</span>];</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>注意：括号内使用的是单引号[‘’]而不是[“”]</strong></p></blockquote><h2 id="POST-简单试验说明"><a href="#POST-简单试验说明" class="headerlink" title="$_POST 简单试验说明"></a>$_POST 简单试验说明</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;welcome.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fname&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Age:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fname&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="POST-表单保存-json-文件"><a href="#POST-表单保存-json-文件" class="headerlink" title="$_POST 表单保存 json 文件"></a>$_POST 表单保存 json 文件</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;form.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端-建立一个 form.php 文件</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$userInfo</span> = <span class="variable">$_POST</span>;</span><br><span class="line"><span class="comment">//把获取的用户信息数组编码成json字符串</span></span><br><span class="line"><span class="variable">$json</span> = json_encode(<span class="variable">$userInfo</span>);</span><br><span class="line"><span class="comment">//打开json文件,如果没有json文件则自动创建json文件</span></span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&#x27;form.json&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>);</span><br><span class="line"><span class="comment">//把json字符串$json写入json文件form.json</span></span><br><span class="line">fwrite(<span class="variable">$file</span>,<span class="variable">$json</span>);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>何时使用 method&#x3D;”post”？</strong><br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。<br>然而，由于变量不显示在 URL 中，所以无法把页面加入书签。</p><p><strong>PHP $_REQUEST 变量</strong><br>预定义的 $_REQUEST 变量包含了 $_GET、$_POST 和 $_COOKIE 的内容。</p><p>$_REQUEST 变量可用来收集通过 GET 和 POST 方法发送的表单数据。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.runoob.com/php/php-post.html">菜鸟教程</a></li><li><a href="https://www.cnblogs.com/supermeimei/p/5165735.html">PHP中的$_POST变量</a></li><li><a href="https://www.shuyong.net/chengxu/1116.html">PHP获取前端form数据并保存在json中</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> php </tag>
            
            <tag> 数据库 </tag>
            
            <tag> POST </tag>
            
            <tag> 表单 </tag>
            
            <tag> json </tag>
            
            <tag> $_POST </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE重要功能(一)之route路由跳转</title>
      <link href="/posts/98479763.html"/>
      <url>/posts/98479763.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是路由"><a href="#什么是路由" class="headerlink" title="什么是路由"></a>什么是路由</h1><blockquote><p>路由的本质就是一种对应关系，比如说我们在url地址中输入我们要访问的url地址之后，浏览器要去请求这个url地址对应的资源。<br>那么url地址和真实的资源之间就有一种对应的关系，就是路由。</p></blockquote><p><strong>路由分为前端路由和后端路由:</strong></p><ol><li>后端路由是由服务器端进行实现，并完成资源的分发<br>后端路由性能相对前端路由来说较低，所以，我们接下来主要学习的是前端路由</li><li>前端路由是依靠hash值(锚链接)的变化进行实现<br>前端路由的基本概念：根据不同的事件来显示不同的页面内容，即事件与事件处理函数之间的对应关系<br>前端路由主要做的事情就是监听事件并分发执行事件处理函数</li></ol><h1 id="vue3-安装路由"><a href="#vue3-安装路由" class="headerlink" title="vue3 安装路由"></a>vue3 安装路由</h1><blockquote><p>查看自己项目目录中是否有route文件,安装 route 后会有生成该文件</p></blockquote><img src="https://img-blog.csdnimg.cn/20210619092259367.png"><h2 id="方法一：使用-vue-ui-安装"><a href="#方法一：使用-vue-ui-安装" class="headerlink" title="方法一：使用 vue ui 安装"></a>方法一：使用 vue ui 安装</h2><p><strong>在当前项目文件夹使用cmd命令，然后输入vue ui</strong></p><img src="https://img-blog.csdnimg.cn/20210619092605125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70">打开之后是这个页面<img src="https://img-blog.csdnimg.cn/20210619092805266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><h1 id="route-路由配置和使用"><a href="#route-路由配置和使用" class="headerlink" title="route 路由配置和使用"></a>route 路由配置和使用</h1><blockquote><p><strong>注:需要配置并且引用后才能生效</strong></p></blockquote><h2 id="一、配置-router-文件中的-index-js"><a href="#一、配置-router-文件中的-index-js" class="headerlink" title="一、配置 router 文件中的 index.js"></a>一、配置 router 文件中的 index.js</h2><p>添加相应的路径和名字，参考设置即可<br><img src="https://img-blog.csdnimg.cn/20210619093338656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"></p><h2 id="二、使用-router"><a href="#二、使用-router" class="headerlink" title="二、使用 router"></a>二、使用 router</h2><ol><li>查看 main.js 中查看是否引用了，正常安装后会引用</li></ol><blockquote><p><strong>注：必须要在mount之前挂载</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line">app.use(router)</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">app.mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong>最后在App.vue里面引用一下<router-view/>组件就把环境都弄好了，记得把之前模板自带的东西清理了就好</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-view/&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在 VUE 界面中引用</li></ol><blockquote><p><strong>在 template 中设置 点击事件</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/2021061909374558.png"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;cliec&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在 script 中配置跳转</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20210619094108740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="route-路由进阶使用之传参功能"><a href="#route-路由进阶使用之传参功能" class="headerlink" title="route 路由进阶使用之传参功能"></a>route 路由进阶使用之传参功能</h1><p><strong>安装方法二：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@4 --save</span><br></pre></td></tr></table></figure><h2 id="1、跳转模式-A界面－－▶B界面"><a href="#1、跳转模式-A界面－－▶B界面" class="headerlink" title="1、跳转模式 A界面－－▶B界面"></a><strong>1、跳转模式 A界面－－▶B界面</strong></h2><p>需要配置 router 的文件夹：</p><img src="https://img-blog.csdnimg.cn/20210528160712548.png"><hr><h3 id="一、router-环境配置"><a href="#一、router-环境配置" class="headerlink" title="一、router 环境配置"></a>一、router 环境配置</h3><p><strong>1. 首先我们在文件夹的index.js文件里添加下面的代码：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> A <span class="keyword">from</span> <span class="string">&#x27;../views/A.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    <span class="comment">// &#123; path: &quot;/&quot;, redirect: &quot;/index&quot; &#125;,</span></span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        component: A</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/B&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        component: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span> (<span class="string">&#x27;../views/B.vue&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><blockquote><p>你会惊奇的发现，Vue对象去哪儿了？在2.x中，我们要使用路由是要先import Vue from ‘vue’把Vue引入进来，接着再Vue.use(VueRouter)去初始化使用路由，是的，vue3中已经没有全局的Vue对象了，并且vue-router也变得模块化了，routes引入页面的两种方式没啥改变，倒是history已经模块化了，它有几种方式，我们使用createWebHistory 就好了，就是浏览器URL后面带不带#号小尾巴的区别</p></blockquote><p><strong>2. 然后在main.js文件里修改添加下面的代码：</strong></p><blockquote><p>使用router的话在createApp模块里挂载一下就好了，需要注意的是必须要在mount之前挂载</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line">createApp(App).use(router).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>3. 最后在App.vue里面引用一下<router-view/>组件：</strong></p><blockquote><p>值此就把环境都弄好了，记得把之前模板自带的东西清理了就好</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="二、router-使用"><a href="#二、router-使用" class="headerlink" title="二、router 使用"></a>二、router 使用</h3><p><strong>1. 首先在之前创建的A.vue文件中添加下面代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;goToB&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">//也可以这样写</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// function goToB() &#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   router.push(&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     name: &quot;B&quot;,</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   &#125;);</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2. 然后在B.vue文件中随便添加点东西，能显示就好：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3. 最后我们再回看A文件，在methods中引用：</strong></p><blockquote><p><strong>在A文件中你会发现找不到this.$router.push()，是的，vue3中已经没有全局的路由了，需要使用路由，<br>我需先要引入useRouter模块，接着要在setup函数中定义router，之后再创建一个方法，里面才是我们熟悉的router.push({ name: “B”})，这里不要用this，setup函数中是没有this的，到这里简单的跳转就算完成了。</strong></p></blockquote><p><strong>methods函数里面调用方式：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">test</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToB();</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终效果如下：</p><img src="https://img-blog.csdnimg.cn/20210528181441344.gif"><h2 id="2、重点功能之路由传参"><a href="#2、重点功能之路由传参" class="headerlink" title="2、重点功能之路由传参"></a><strong>2、重点功能之路由传参</strong></h2><blockquote><p>既然在methods函数里可以调用了setup() 里return的方法，那是不是意味着我们可以传点东西过去？</p></blockquote><ol><li><strong>修改 A.vue 文件:</strong></li></ol><blockquote><p>我们可以传参数过去，这样我们就可以把这个自定义的跳转函数封装起来，动态的传入页面名称和参数就好了</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToOtherPage = <span class="function">(<span class="params">page_name, value</span>) =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line">        name: page_name,</span><br><span class="line">        params: &#123;</span><br><span class="line">          value: value,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 定义methods的方法可以直接写在return之前</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="comment">//要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> page_name = <span class="string">&quot;B&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//要传的参数</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> value = <span class="string">&quot;hello vue3&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToOtherPage(page_name, value);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToOtherPage,</span><br><span class="line">      test</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//   methods: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     test() &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       /*</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        * do something...</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        */</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let page_name = &quot;B&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要传的参数</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let value = &quot;hello vue3&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       this.goToOtherPage(page_name, value);</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><strong>修改 B.vue 文件:</strong></li></ol><blockquote><p>接着我们要怎么接受参数咧？搞了那么久，其实配方都是一样的，要接受参数，我需要想引入useRoute ，注意是没有r结尾的，是不是有种很熟悉的味道同志们&#x3D;》this.$route.params，接着也要在setup函数里定义route，接着我们就可以以方法的形式返回params，要使用的话this一下就好了，生命周期函数created、mounted里面都可以直接拿到</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> route = useRoute();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> getParams = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> route.params;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 生命周期写法</span></span></span><br><span class="line"><span class="javascript">    onMounted(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&quot;mounted:&quot;</span> + getParams().value);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      getParams,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="comment">//   created: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(`created:` + JSON.stringify(this.getParams()));</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   mounted: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(&quot;mounted:&quot; + this.getParams().value);</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><img src="https://img-blog.csdnimg.cn/20210528205800430.gif"><h2 id="3、在基础页怎么获取router文件夹中index-js里的数据呢？"><a href="#3、在基础页怎么获取router文件夹中index-js里的数据呢？" class="headerlink" title="3、在基础页怎么获取router文件夹中index.js里的数据呢？"></a><strong>3、在基础页怎么获取router文件夹中index.js里的数据呢？</strong></h2><p><strong>1. vue3.x 带上数据</strong></p><blockquote><p>在vue2.x时，在new实例时可以顺便把数据带上，之后在created或mounted生命周期里直接this.$router.options就可以找到我们传的数据了</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    base: process.env.BASE_URL,</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>那么在vue3.x中，我们可以在创建路由时把数据带上</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>2. 之后我们在setup() 函数中使用路由时接收并返回对应的数据，之后就可以在created或mounted生命周期中使用了</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter();</span><br><span class="line">    <span class="built_in">console</span>.log(router.options);</span><br><span class="line">    <span class="keyword">const</span> myArr = <span class="function">() =&gt;</span> router.options.myArr;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">this</span>.myArr());</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      myArr</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="comment">//   mounted: function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(this.myArr());</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>3. 成功后打印大概是这个样子：</strong></p><img src="https://img-blog.csdnimg.cn/539ea0f067164ab7b5b1604364d0cfe1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA54ix5ZSx5q2M55qE5YmN56uv,size_9,color_FFFFFF,t_70,g_se,x_16"><h1 id="route-路由跳转与方式对比"><a href="#route-路由跳转与方式对比" class="headerlink" title="route 路由跳转与方式对比"></a>route 路由跳转与方式对比</h1><p>vue-router实现路由跳转与参数获取：</p><p><strong>路由跳转和传参：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, reactive, readonly, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter, useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  name: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter(), route = useRoute();</span><br><span class="line">    <span class="keyword">const</span> submitForm = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      formRef.value?.validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          login(&#123; <span class="attr">strategy</span>: <span class="string">&#x27;local&#x27;</span>, ...ruleForm &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 获取参数和路由跳转</span></span><br><span class="line">              <span class="keyword">const</span> redirect: string = route.query &amp;&amp; route.query.redirect;</span><br><span class="line">              <span class="keyword">if</span> (redirect) &#123;</span><br><span class="line">                router.replace(redirect);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                router.push(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">              ...</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         ...</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; ..., submitForm &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>路由跳转三种方法的总结：</strong></p><ol><li>第一种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment">//`在这里插入代码片`</span></span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">`/detail/1`</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意： params 传参相当于是路由的一部分是必须传的东西,经过验证不传页面会跳转到空白页,该方式刷新页面id 不丢失</strong></p></blockquote><ol start="2"><li>第二种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    params: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 可以传也可以不传,不传刷新页面id 会丢失该方式刷新页面id 不丢失</strong></p></blockquote><ol start="3"><li>第三种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    query: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.query.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 不能写，因为写了就是router 的一部分，这样就会匹配不到, 此方式刷新页面id 不丢失</strong></p></blockquote><p><a href="http://localhost:8080/#/detail?id=1">http://localhost:8080/#/detail?id=1</a></p><p><strong>总结： params一旦设置在路由，params就是路由的一部分，如果这个路由有params传参，但是在跳转的时候没有传这个参数，会导致跳转失败或者页面会没有内容。</strong></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/235876.htm">一篇文章带你了解vue路由</a></li><li><a href="https://blog.csdn.net/weixin_52921550/article/details/118046853">vue3.0路由跳转</a></li><li><a href="https://blog.csdn.net/weixin_42063951/article/details/117357542">vue3中怎么使用router路由呢&amp;页面跳转传参怎么搞呢</a></li><li><a href="https://www.jb51.net/article/242793.htm#_lab2_1_1">Vue3使用vue-router如何实现路由跳转与参数获取</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> route </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE问题(二)之按键修饰符KeyboardEvent.keyCode&#39; modifier</title>
      <link href="/posts/3235598376.html"/>
      <url>/posts/3235598376.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>重要参考：</strong><a href="https://v3.cn.vuejs.org/guide/migration/keycode-modifiers.html"><strong>VUE官方迁移策略</strong></a><br>弃用 KeyboardEvent.keyCode</p></blockquote><h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>使用 <input v-on:keyup.13="submit" /> 时出现报错显示 ‘KeyboardEvent.keyCode’ modifier on ‘v-on’ directive</p><h2 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h2><blockquote><p>VUE3版本：</p><ol><li>不再支持使用 keyCodes (即键码) 作为 v-on 修饰符；</li><li>不再支持 config.keyCodes；</li></ol></blockquote><h1 id="VU2-对-keyCodes-说明"><a href="#VU2-对-keyCodes-说明" class="headerlink" title="VU2 对 keyCodes 说明"></a>VU2 对 keyCodes 说明</h1><p><strong>Vue 2.x 中的 keyCodes 修饰符</strong></p><p>在 Vue 2.x 中，允许使用 keyCodes 作为v-on 的修饰符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.13&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.enter&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>上面两种写法，在 Vue 2.x 是等价的。</p></blockquote><p><strong>另外， 我们还可以通过全局的 config.keyCodes 选项来自定义 alias （别名）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  f1: 112&#x2F;&#x2F;快捷键</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.112&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- custom alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.f1&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h1 id="Vue3-弃用-keyCodes-说明"><a href="#Vue3-弃用-keyCodes-说明" class="headerlink" title="Vue3 弃用 keyCodes 说明"></a>Vue3 弃用 keyCodes 说明</h1><p>因为 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/keyCode"><strong>Web 标准已经弃用</strong></a> KeyboardEvent.keyCode<br>所以 Vue 3.x 为了和 Web 标准保持一致也不再支持 keyCodes。<br>Vue 3.x 建议使用按键 alias （别名）作为v-on的修饰符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span><br><span class="line">&lt;input v-on:keyup.delete&#x3D;&quot;confirmDelete&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>因此，这也意味着config.keyCodes也被弃用了</p><h1 id="Vue3-设置快捷键方法"><a href="#Vue3-设置快捷键方法" class="headerlink" title="Vue3 设置快捷键方法"></a>Vue3 设置快捷键方法</h1><blockquote><p>设置快捷键比如 ctrl+s 这种,vue2: @keydown.ctrl.83<br>配置的代码可以写在 main.js 入口文件中，全局统一管理</p></blockquote><p><strong>vue3 不能使用 keyCode，只能使用按键别名。你为 keyCode&#x3D;83 设置别名就行了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  s: 83</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_44869002/article/details/113176050">Vue 3 迁移策略笔记—— 第18节：按键修饰符</a></li><li><a href="https://zhuanlan.zhihu.com/p/113754059">Markdown设置居中和字体颜色</a></li></ol><hr><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> BUG </tag>
            
            <tag> keyCodes </tag>
            
            <tag> v-on </tag>
            
            <tag> web标准 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用组件(一)之Element UI</title>
      <link href="/posts/1511238045.html"/>
      <url>/posts/1511238045.html</url>
      
        <content type="html"><![CDATA[<h1 id="Element-UI安装"><a href="#Element-UI安装" class="headerlink" title="Element UI安装"></a>Element UI安装</h1><p><strong>原来安装的是 element-plus 而不是 Element-ui</strong><br><a href="https://blog.csdn.net/drhrht/article/details/123421598">Element-ui和Element-Plus的区别_Element2和Element3的区别</a></p><ol><li>Icon图标库变化了 </li><li>组件的插槽slot使用变化了:同时可支持多个插槽 </li><li>新增组件 Skeleton-骨架屏&#x2F;Empty-空状态&#x2F;Affix -固钉&#x2F;TimeSelect 时间选择&#x2F;Space 间距</li></ol><hr><p>因需使用 el-table 报错才发现需要安装 Element UI 组件，开始按照网上大多数方法进行，但总报错！因为这些方法是基于VUE2.X版本，而搭建的环境是VUE3！</p><h2 id="VUE3正确安装方法"><a href="#VUE3正确安装方法" class="headerlink" title="VUE3正确安装方法"></a>VUE3正确安装方法</h2><ol><li>下载 Element UI组件<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save element-plus</span><br></pre></td></tr></table></figure><blockquote><p>安装完之后 package.json 文件中的 dependencies 会新增版本内容，说明安装成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">  &quot;axios&quot;: &quot;^0.27.2&quot;,</span><br><span class="line">  &quot;core-js&quot;: &quot;^3.8.3&quot;,</span><br><span class="line">  &quot;element-plus&quot;: &quot;^2.2.0&quot;,</span><br><span class="line">  &quot;table&quot;: &quot;^6.8.0&quot;,</span><br><span class="line">  &quot;vue&quot;: &quot;^3.2.13&quot;,</span><br><span class="line">  &quot;vue-router&quot;: &quot;^4.0.3&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>在 main.js 中引入 Element UI 组件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import ElementPlus from &#39;element-plus&#39;</span><br><span class="line">import &#39;element-plus&#x2F;dist&#x2F;index.css&#39;</span><br><span class="line"></span><br><span class="line">const app &#x3D; createApp(App);</span><br><span class="line">app.use(ElementPlus)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;...</span><br><span class="line">app.mount(&#39;#app&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;createApp(App).use(store).use(router).use(element).mount(&#39;#app&#39;)</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>因vue3 的 dom挂载方式是新创建一个 app 然后调用 mount() 方法插入到页面中<br>所以 app.use(ElementPlus) 设置需要在 app.mount(‘#app’); 挂载之前设置</strong></p></blockquote></li><li>在相应的 vue 文件中测试使用 并 npm run serve 运行测试<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>卸载 element-ui<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall element-ui</span><br></pre></td></tr></table></figure><strong>装过旧版需要卸载，还需要把 main.js 和 package.json 内与 element-plus 相关删除</strong></li></ol><h2 id="旧版常规安装"><a href="#旧版常规安装" class="headerlink" title="旧版常规安装"></a>旧版常规安装</h2><blockquote><p><strong>注意:官方和网上常见的方式为 VUE2.X 旧版本方式</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 1.下载elementui的依赖</span><br><span class="line">    npm i element-ui -S</span><br><span class="line"># 2.指定当前项目中使用elementui</span><br><span class="line">    import ElementUI from &#39;element-ui&#39;;</span><br><span class="line">    import &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;;</span><br><span class="line">  &#x2F;&#x2F;在vue脚手架中使用elementui</span><br><span class="line">    Vue.use(ElementUI);</span><br></pre></td></tr></table></figure><h1 id="Element-UI基本使用-示例"><a href="#Element-UI基本使用-示例" class="headerlink" title="Element UI基本使用(示例)"></a>Element UI基本使用(示例)</h1><blockquote><p><strong>注意：<br>使用element ui的相关组件时需要注意的是 所有组件都是el-组件名称开头<br>属性使用都是直接将属性名&#x3D;属性值方式写在对应的组件标签上</strong></p></blockquote><h2 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h2><ol><li>默认样式按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>简洁按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span>&gt;</span>朴素按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">plain</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">plain</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">plain</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">plain</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">plain</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>圆角按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">round</span>&gt;</span>圆角按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">round</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">round</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">round</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">round</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">round</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>图标按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-search&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-edit&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-check&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-message&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-delete&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>按钮组件的详细使用<br>一、 按钮组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 按钮属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> 属性名=<span class="string">属性值</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">plain</span>=<span class="string">true</span> <span class="attr">round</span> <span class="attr">circle</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-loading&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>三、 按钮组使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button-group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-back&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-right&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Link-文字链接组件"><a href="#Link-文字链接组件" class="headerlink" title="Link 文字链接组件"></a>Link 文字链接组件</h2></li><li>文字链接组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>文字链接组件的属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>  <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> &gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span><span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">disabled</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-platform-eleme&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="Layout-栅格-布局组件的使用"><a href="#Layout-栅格-布局组件的使用" class="headerlink" title="Layout (栅格)布局组件的使用"></a>Layout (栅格)布局组件的使用</h2><blockquote><p><strong>通过基础的 24 分栏，迅速简便地创建布局<br>在element ui中布局组件将页面划分为多个行row,每行最多分为24栏(列)</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在一个布局组件中 是由 row 和 col 组合而成<br>在使用时要区分 row属性 和 col属性</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性的使用<br>一、 行属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">&quot;50&quot;</span> <span class="attr">tag</span>=<span class="string">&quot;span&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用4份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用3份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;9&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用9份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 列属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;9&quot;</span> <span class="attr">:psuh</span>=<span class="string">&quot;3&quot;</span> <span class="attr">xs</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用12分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用6分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Container-布局容器组件"><a href="#Container-布局容器组件" class="headerlink" title="Container 布局容器组件"></a>Container 布局容器组件</h2></li><li>创建布局容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>容器中包含的子元素<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-header</span>&gt;</span>：顶栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-aside</span>&gt;</span>：侧边栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span>：主要区域容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-footer</span>&gt;</span>：底栏容器。</span><br></pre></td></tr></table></figure></li><li>容器的嵌套使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--容器嵌套使用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>水平容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>垂直容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--footer--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Form相关组件"><a href="#Form相关组件" class="headerlink" title="Form相关组件"></a>Form相关组件</h2><h3 id="Radio单选按钮"><a href="#Radio单选按钮" class="headerlink" title="Radio单选按钮"></a>Radio单选按钮</h3></li><li>创建Radio按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--组件创建--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio按钮属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">disabled</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio事件的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123; <span class="comment">//定义的事件处理函数</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.label);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>事件的使用也是和属性使用是一致都是直接写在对应的组件标签上<br>事件在使用时必须使用Vue中绑定时间方式进行使用如 @事件名&#x3D;事件处理函数(绑在在vue组件中对应函数)</strong></p></blockquote><h3 id="radio按钮组"><a href="#radio按钮组" class="headerlink" title="radio按钮组"></a>radio按钮组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;3&quot;</span>&gt;</span>备选项3<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;6&quot;</span>&gt;</span>备选项6<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;9&quot;</span>&gt;</span>备选项9<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        radio: 6</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="checkbox组件"><a href="#checkbox组件" class="headerlink" title="checkbox组件"></a>checkbox组件</h2></li><li>创建checkbox组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">disabled</span> <span class="attr">true-label</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">checked</span> <span class="attr">border</span> <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span><span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>复选框组的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox-group</span> @<span class="attr">change</span>=<span class="string">&quot;bb&quot;</span> <span class="attr">:min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 A&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 B&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 C&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;选中且禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span>,</span></span><br><span class="line">                checkList:[],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checkList);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Input-输入框组件"><a href="#Input-输入框组件" class="headerlink" title="Input 输入框组件"></a>Input 输入框组件</h2></li><li>创建Input组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>常用属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span> <span class="attr">disabled</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;price&quot;</span> <span class="attr">:maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">show-word-limit</span> <span class="attr">:minlength</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">prefix-icon</span>=<span class="string">&quot;el-icon-user-solid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">suffix-icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">show-password</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> @<span class="attr">blur</span>=<span class="string">&quot;aaa&quot;</span> @<span class="attr">focus</span>=<span class="string">&quot;bbb&quot;</span> @<span class="attr">clear</span>=<span class="string">&quot;clears&quot;</span> <span class="attr">clearable</span> @<span class="attr">input</span>=<span class="string">&quot;ccc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;失去焦点&#x27;</span>);</span></span><br><span class="line">                ;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;获取焦点&quot;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">ccc</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;改变:&quot;</span>+value);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">clears</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;清楚&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>方法的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>方法的使用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;focusInputs&quot;</span>&gt;</span>focus方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;blurInputs&quot;</span>&gt;</span>blur方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//调用focus方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">focusInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.focus();</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">           <span class="comment">//调用失去焦点方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">blurInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.blur();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在使用组件的方法时需要在对应的组件中加入 ref&#x3D;”组件别名”<br>在调用方法时直接使用 this.$refs.组件别名.方法名()</strong></p></blockquote></li></ol><h1 id="elementui-使用注意"><a href="#elementui-使用注意" class="headerlink" title="elementui 使用注意"></a><strong>elementui 使用注意</strong></h1><blockquote><p>**注意:在elementui中所有组件 都存在 属性 事件 和方法<br>属性: 直接写在对应的组件标签上 使用方式:属性名&#x3D;属性值<code>方式 事件</code>: 直接使用vue绑定事件方式写在对应的组件标签上 使用方式:&#96;@事件名&#x3D;vue中事件处理函数<br>方法: 1.在对应组件标签上使用 ref&#x3D;组件别名 2. 通过使用this.$refs.组件别名.方法名()进行调用<br>**</p></blockquote><h1 id="相关链接及原文出处"><a href="#相关链接及原文出处" class="headerlink" title="相关链接及原文出处"></a>相关链接及原文出处</h1><ol><li><a href="https://blog.csdn.net/Stars_in_rain/article/details/122363128">vue3 引入element-ui</a></li><li><a href="https://blog.csdn.net/qq_35254085/article/details/116600164">Element UI组件介绍</a></li><li><a href="https://vuex.vuejs.org/zh/index.html">VUE 官方文档</a></li><li><a href="https://element-plus.org/zh-CN/component/button.html">官方VUE3使用 Element UI</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> Element UI </tag>
            
            <tag> el-x </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE问题(一)之spaces and tabs 空格和tab键问题</title>
      <link href="/posts/1689160997.html"/>
      <url>/posts/1689160997.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>新建文章后，复制网上或者原来的代码段过来使用时发现报错 Mixed spaces and tabs no-mixed-spaces-and-tabs</p><blockquote><p><strong>因为大多数代码约定要求使用空格或 tab 进行缩进。因此，一行代码同时混有 tab 缩进和空格缩进，通常是错误的</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>在工程目录下找到 package.json 文件并打开</li><li>在eslintrcr配置项rules里边手动添加规则 ’no-mixed-spaces-and-tabs’并定义为 0(即关闭检查规则)<blockquote><p><strong>“no-mixed-spaces-and-tabs”:0</strong></p><img src="https://img-blog.csdnimg.cn/c6699555819d47cf9a5777137f5a5745.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA56iL5bqP5bCP5pet,size_20,color_FFFFFF,t_70,g_se,x_16"></blockquote></li></ol><p><strong>补充：使用下面的配置可以减少很多语法检查的报错信息，可以配置使用然后重启项目</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&quot;eslintConfig&quot;: &#123;</span><br><span class="line">    &quot;root&quot;: false,</span><br><span class="line">    &quot;env&quot;: &#123;</span><br><span class="line">      &quot;node&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;extends&quot;: [</span><br><span class="line">      &quot;plugin:vue&#x2F;essential&quot;,</span><br><span class="line">      &quot;eslint:recommended&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;parserOptions&quot;: &#123;</span><br><span class="line">      &quot;parser&quot;: &quot;babel-eslint&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;rules&quot;: &#123;</span><br><span class="line">&quot;generator-star-spacing&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-tabs&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-unused-vars&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-console&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-irregular-whitespace&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-debugger&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-mixed-spaces-and-tabs&quot;:0</span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_46167190/article/details/122800825">Vue报错：Mixed spaces and tabs no-mixed-spaces-and-tabs 解决办法</a></li></ol><p>———————————————-<strong>我是分割线</strong>—————————————<br>    <strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> BUG </tag>
            
            <tag> Mixed spaces and tabs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用命令(一)之v-if</title>
      <link href="/posts/289735847.html"/>
      <url>/posts/289735847.html</url>
      
        <content type="html"><![CDATA[<h1 id="v-if指令作用"><a href="#v-if指令作用" class="headerlink" title="v-if指令作用"></a>v-if指令作用</h1><p><strong>根据表达式的真假切换元素的显示状态</strong></p><ol><li>本质是通过操纵dom元素来切换显示状态</li><li>表达式的值为true,元素存在于dom树中，为false,从dom树中移除</li><li>频繁的切换使用v-show,反之使用v-if,前者的切换消耗小<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;切换状态&quot; @click&#x3D;&quot;changeShow&quot;&gt;</span><br><span class="line">&lt;h1 v-show&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h2 v-if&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h3 v-if&#x3D;&quot;temperature&gt;&#x3D;35&quot;&gt;热死了&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"> var app&#x3D;new Vue(&#123;</span><br><span class="line"> el:&quot;#app&quot;,</span><br><span class="line"> data:&#123;</span><br><span class="line"> isshow:false,</span><br><span class="line"> temperature:40</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line"> changeShow:function()&#123;</span><br><span class="line"> this.isshow&#x3D;!this.isshow;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>点击“切换状态”之后：<img src="https://img-blog.csdnimg.cn/20200803101013231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4ODM1MTQw,size_16,color_FFFFFF,t_70"></li></ol><h1 id="v-if常见使用方法详解"><a href="#v-if常见使用方法详解" class="headerlink" title="v-if常见使用方法详解"></a>v-if常见使用方法详解</h1><p>v-if一般有两个场景：<br>1- 多个元素 通过条件判断展示或者隐藏某个元素。或者多个元素<br>2- 进行两个视图之间的切换<br>Vue官方的简单实例:</p><ol><li>实现了 type等于不同值，A，B，C 三个元素的展示情况</li><li>实现了点击按钮两个视图的切换<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line"> &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line"> &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line"> &lt;title&gt;Vue中v-if的常见使用&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.5.17-beta.0&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F;创建一个vue实例</span><br><span class="line"> var app &#x3D; new Vue(&#123;</span><br><span class="line"> el: &#39;#app&#39;,</span><br><span class="line"> data: &#123;</span><br><span class="line">  type:&#39;C&#39;,</span><br><span class="line">  loginType:&#39;username&#39;</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line">  changeloginType()&#123;</span><br><span class="line">  let self &#x3D; this;</span><br><span class="line">  if(self.loginType&#x3D;&#x3D;&#39;username&#39;)&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;&#39;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;username&#39;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:red&quot;&gt;v-if的简单实用&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template&gt;</span><br><span class="line">  &lt;div v-if&#x3D;&quot;type &#x3D;&#x3D; &#39;A&#39;&quot;&gt;</span><br><span class="line">  A</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else-if&#x3D;&quot;type&#x3D;&#x3D;&#39;B&#39;&quot;&gt;</span><br><span class="line">  B</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else&gt;</span><br><span class="line">  C</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:green&quot;&gt;v-if的弹框切换&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template v-if&#x3D;&quot;loginType &#x3D;&#x3D;&#x3D; &#39;username&#39;&quot;&gt;</span><br><span class="line">  &lt;label&gt;用户名：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your username&quot; key&#x3D;&quot;username-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;template v-else&gt;</span><br><span class="line">  &lt;label&gt;密码：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your email address&quot; key&#x3D;&quot;email-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;button @click&#x3D;&quot;changeloginType&quot;&gt;切换状态&lt;&#x2F;button&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>效果图:<img src="https://img.jbzj.com/file_images/article/201809/20180928154104.jpg"><img src="https://img.jbzj.com/file_images/article/201809/20180928154117.jpg"></li></ol><h1 id="通过-v-if-来判断数组是否为空"><a href="#通过-v-if-来判断数组是否为空" class="headerlink" title="通过 v-if 来判断数组是否为空"></a>通过 v-if 来判断数组是否为空</h1><blockquote><p><strong>此方法已经在处理PHP回传 JSON 数据时，对键名解析使用成功</strong></p></blockquote><p>语法为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为空：array &#x3D;&#x3D; undefined ||array &#x3D;&#x3D; null || array.length &lt;&#x3D; 0     (顺序不能调换)</span><br><span class="line">不为空： array !&#x3D;&#x3D;undefined &amp;&amp; array !&#x3D; null  &amp;&amp; array.length &gt; 0   (顺序不能调换)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul v-if&#x3D;&quot;commentList &#x3D;&#x3D; undefined ||commentList &#x3D;&#x3D; null || commentList.length &lt;&#x3D; 0 &quot; &gt;</span><br><span class="line">暂无评论！</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul v-if&#x3D;&quot;commentList !&#x3D; undefined &amp;&amp; commentList !&#x3D; null &amp;&amp; commentList.length &gt; 0 &quot; &gt;</span><br><span class="line">&lt;li class&#x3D;&quot;list-group-item&quot;  v-for&#x3D;&quot;(item,index) in commentList&quot;  &gt;</span><br><span class="line">&lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">&#123;&#123; item.username &#125;&#125; 说：</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;content&quot; &gt;</span><br><span class="line">&#123;&#123; item.content &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_38835140/article/details/107757104">v-if指令</a></li><li><a href="https://www.jb51.net/article/148174.htm">对vue中v-if的常见使用方法详解</a></li><li><a href="https://blog.csdn.net/xiaojin21cen/article/details/118605410">VUE 模板 v-if 判断 数组是否为空</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> v-if </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE获取JSON数据键名</title>
      <link href="/posts/30846541.html"/>
      <url>/posts/30846541.html</url>
      
        <content type="html"><![CDATA[<h1 id="从PHP传过来的JSON数据结构"><a href="#从PHP传过来的JSON数据结构" class="headerlink" title="从PHP传过来的JSON数据结构"></a>从PHP传过来的JSON数据结构</h1><p>VUE接收到的数据如下，此时想要得到键名 <strong>“password”</strong> 和 <strong>“zhaoyichen”</strong> 以及 <strong>“liangzai”</strong> 用来做表格的列名。</p><blockquote><p>网上找很多都没找到合适</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;111&quot;,</span><br><span class="line">zhaoyichen: &quot;333&quot;,</span><br><span class="line">liangzai: &quot;22&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;55&quot;,</span><br><span class="line">zhaoyichen: &quot;66&quot;,</span><br><span class="line">liangzai: &quot;33&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;888&quot;,</span><br><span class="line">zhaoyichen: &quot;3443&quot;,</span><br><span class="line">liangzai: &quot;9088&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;8889&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;66677&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>正常直接 console.log 出来的是里面的数组值</p></blockquote><h1 id="使用-Object-keys-将键值提取出来"><a href="#使用-Object-keys-将键值提取出来" class="headerlink" title="使用 Object.keys 将键值提取出来"></a>使用 Object.keys 将键值提取出来</h1><p>假如改 JSON 数据名为 sites，则 使用 Object.keys(this.sites[0]) 即可读出所有键名</p><blockquote><p>需单独某一个键名，则增加标号即可  Object.keys(this.sites[0])[0]</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(<span class="built_in">this</span>.sites[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure><blockquote><p><strong>也可以在HTML中显示</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> </span><br><span class="line">&#123;&#123;Object.keys(this.sites[0])[0]&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/142380.htm">Vue 获取数组键名的方法</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> JSON </tag>
            
            <tag> 键值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE判断对象是否为空</title>
      <link href="/posts/637024282.html"/>
      <url>/posts/637024282.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>vue.js判断对象是否为空的方法是：将对象转为json，如果为空集合{}，那么该对象就是空对象，如【JSON.stringify(object)&#x3D;&#x3D;’{}’】</p></blockquote><h1 id="判断法一"><a href="#判断法一" class="headerlink" title="判断法一"></a>判断法一</h1><p><strong>将对象转JSON，如果为空集合{} ，那么就是空对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(object)==<span class="string">&#x27;&#123;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="判断法二"><a href="#判断法二" class="headerlink" title="判断法二"></a>判断法二</h1><p><strong>判断对象的长度，如果为零，那就是空对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.keys(object).length==<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.php.cn/vuejs/463861.html">vue.js判断对象是否为空的方法是什么</a></li></ol><hr><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php连接mysql数据库</title>
      <link href="/posts/3217038819.html"/>
      <url>/posts/3217038819.html</url>
      
        <content type="html"><![CDATA[<h1 id="按照-apache-php安装相关-进行安装"><a href="#按照-apache-php安装相关-进行安装" class="headerlink" title="按照[apache php安装相关]进行安装"></a>按照[apache php安装相关]进行安装</h1><p>安装好 apache 和 PHP之后再对 mysql 进行连接读取，确定PHP是否弄好的标志是可以在设定文档下运行 php 文件。<br><a href="http://localhost/myBlog/axios.php">运行本地服务器测试</a><br>刚开始按照网上连接时总报错，总提示找不到 mysqli 插件</p><blockquote><p>Class “mysqli” not found in</p></blockquote><h1 id="解决问题并连接MySql数据库"><a href="#解决问题并连接MySql数据库" class="headerlink" title="解决问题并连接MySql数据库"></a>解决问题并连接MySql数据库</h1><p>根据官网提供的方法<a href="https://www.php.net/manual/zh/mysqli.installation.php">安装配置MySql</a><br>不过因为使用的版本是 PHP8 ，因此不用大改，实际上只需要在 php.ini 文件上打开 extension&#x3D;mysqli 即可！</p><blockquote><p><strong>注意:修改完之后需要重新启动 apache 服务，要不然没作用！！总以为没修改对</strong></p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop Apache2.<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> Apache2.<span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="设置-MySql-连接数据"><a href="#设置-MySql-连接数据" class="headerlink" title="设置 MySql 连接数据"></a>设置 MySql 连接数据</h1><blockquote><p>设置对应的地址和账号密码即可连接:</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$mysqli</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;密码&quot;</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM tb_user&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$mysqli</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc(); <span class="comment">// 从结果集中取得一行作为关联数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* free result set */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span>-&gt;free();</span><br><span class="line">    <span class="comment">/* close connection */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$mysqli</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> apache </tag>
            
            <tag> php </tag>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apache php 安装相关</title>
      <link href="/posts/3845172909.html"/>
      <url>/posts/3845172909.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h1><p><strong>注：本文从[Apache的安装教程]直接复制以便查看，如有侵权请联系删除</strong><br>1、<a href="https://www.apachehaus.com/cgi-bin/download.plx">下载Apache</a><br>点击图中红圈的版本下载：<br><img src="https://img-blog.csdnimg.cn/20190519215843978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><p>下载后，解压文件，把如图这两个文件拿出来放到你的Apache目录下<br><img src="https://img-blog.csdnimg.cn/20190519220058367.png"><br>例如：我的放到D盘,如图:<br><img src="https://img-blog.csdnimg.cn/20190519220202943.png"></p><p>2、修改 httpd.conf 文件<br>在文件夹中查找conf文件夹下边的httpd.conf文件，修改文件为自己的路径(写你自己的路径)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># same ServerRoot for multiple httpd daemons, you will need to change at</span></span><br><span class="line"><span class="comment"># least PidFile.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">Define SRVROOT &quot;D:/Program Files/Apache/Apache24&quot;</span><br><span class="line">ServerRoot &quot;$&#123;SRVROOT&#125;&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>注：还是在此文件中下边，有一个端口号配置：Listen 80 ，如果你的80端口被已经被占用，你自己修改一个没有用的端口号！！！！！</strong></p><p>然后，在你的文件中 bin目录下，用【管理员】身份打开 CMD，输入httpd.exe -k install，如图我的例子：<br><img src="https://img-blog.csdnimg.cn/20190519221143962.png"><br>到这里下载成功了！！</p><p>3、启动Apache服务<br>继续输入命令：net start Apache2.4 ，成功后在页面输入：localhost:你刚写的端口号 就会成功出现如下所示：(还有一种启动方法)<br><img src="https://img-blog.csdnimg.cn/20190519221410964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"><br>第二种启动方法：<br>右键此电脑 -&gt; 管理 ， 然后启动如图所圈的：<br><img src="https://img-blog.csdnimg.cn/20190519221801153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><h1 id="PHP8安装和配置"><a href="#PHP8安装和配置" class="headerlink" title="PHP8安装和配置"></a>PHP8安装和配置</h1><ol><li>官网下载apache24和php8（要线程安全的那个，不然没有.dll文件）</li><li>php8安装完毕后打开安装文件中的php.ini-development改名为php.ini，然后打开这个文件找到 extension_dir&#x3D;“ext”，去掉注释分号，改为extension_dir &#x3D; “D:&#x2F;software&#x2F;php8&#x2F;ext” (php的安装路径&#x2F;ext)</li><li>打开apache的安装路径找到》config》httpd.conf,搜索LoadModule找到这个文中添加模块的区域，在后面追加：这一步是将php加到apache中<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#让Apache载入PHP处理模块</span></span><br><span class="line"><span class="comment">#php安装路径/php8apache2_4.dll</span></span><br><span class="line">LoadModule php_module &quot;D:/Program Files/php8/php8apache2_4.dll&quot; </span><br><span class="line"><span class="comment">#php安装路径</span></span><br><span class="line">PHPIniDir &quot;D:/Program Files/php8&quot;  </span><br><span class="line"><span class="comment">#这个配置表示所有的*.php文件使用php处理</span></span><br><span class="line">AddType application/x-httpd-php .php .phtml</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>添加虚拟目录：<br>还在httpd.conf文件后面加上：<br>先注释掉原来的路径#DocumentRoot “${SRVROOT}&#x2F;htdocs”<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">    DirectoryIndex index.php index.html index.htm default.php default.html default.htm home.php home.html home.htm</span><br><span class="line"><span class="comment">#D:/PHP是自己以后放php项目的地方  并取一个别名</span></span><br><span class="line">Alias /difcipo &quot;D:/Cache/PHP&quot;  </span><br><span class="line">DocumentRoot &quot;D:/Cache/PHP&quot;</span><br><span class="line">&lt;Directory &quot;D:/Cache/PHP&quot;&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride all</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>配置虚拟主机：<br>打开》conf》extra》httpd-vhosts.conf，在文件后面添加<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"><span class="comment">#这个需要和前面的DocumentRoot一致</span></span><br><span class="line">    DocumentRoot &quot;D:/Cache/PHP&quot;  </span><br><span class="line"><span class="comment">#虚拟主机名</span></span><br><span class="line">    ServerName www.abc.com  </span><br><span class="line">    ErrorLog &quot;logs/www.age.com-error.log&quot;</span><br><span class="line">    CustomLog &quot;logs/www.age.com-access.log&quot; common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>打开C:\Windows\System32\drivers\etc\hosts文件(修改HOST文件)，在后面添加 127.0.0.1 <a href="http://www.abc.com/">www.abc.com</a> 配置完毕！启动apache。<img src="https://img-blog.csdnimg.cn/20210114185127506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE4ODY3Nw==,size_16,color_FFFFFF,t_70"></li><li>测试<img src="https://img-blog.csdnimg.cn/20210114185051491.png"></li></ol><p><strong>注：本文从[apache24+php8配置]直接复制以便查看，如有侵权请联系删除</strong></p><h1 id="安装PHP发现的问题"><a href="#安装PHP发现的问题" class="headerlink" title="安装PHP发现的问题"></a>安装PHP发现的问题</h1><p>原参考文章中发现有导入模块错误，主要原因是注释和代码放在了同一行，放到另一行即可</p><p><strong>bin下使用命令 httpd.exe -t 查找问题 例如: D:\Program Files\Apache\Apache24\bin\httpd.exe -t</strong></p><h1 id="安装问题查找方式"><a href="#安装问题查找方式" class="headerlink" title="安装问题查找方式"></a>安装问题查找方式</h1><blockquote><p>apache php无法启动的解决办法：1、使用Apache的配置检查，并根据错误提示，纠正错误；2、注销IIS服务；3、使用命令杀掉强占80端口的进程；4、修改PHP配置php.ini文件。</p></blockquote><p>Apache&#x2F;PHP 无法启动分两种情况：<br>1、Apache无法启动，没加载php也无法启动<br>2、Apache可以启动，但加载php后无法启动<br>第一种情况多数是Apache配置问题，或者80端口被占用<br>第二种多数是PHP编译器的问题：<br>查看Apache错误日志，有类似下面这些内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd.exe: Syntax error on line 63 of D:/Apache2.2/conf/httpd.conf: Cannot load D:/php/php5apache2_4.dll into server: %1 \xb2\xbb\xca\xc7\xd3\xd0\xd0\xa7\xb5\xc4 Win32 \xd3\xa6\xd3\xc3\xb3\xcc\xd0\xf2\xa1\xa3</span><br></pre></td></tr></table></figure><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/sxs7970/article/details/90349009">Apache的安装教程</a><br>2.<a href="https://blog.csdn.net/weixin_42188677/article/details/112610016">apache24+php8配置</a><br>3.<a href="https://www.php.cn/php-ask-462557.html">apache php无法启动的解决办法</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
          <category> Apache </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> 软件安装 </tag>
            
            <tag> apache </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用基础收集</title>
      <link href="/posts/4001256595.html"/>
      <url>/posts/4001256595.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h1 id="常用知识"><a href="#常用知识" class="headerlink" title="常用知识"></a>常用知识</h1><h2 id="Vue-UI创建项目详细步骤"><a href="#Vue-UI创建项目详细步骤" class="headerlink" title="Vue UI创建项目详细步骤"></a><a href="https://www.jb51.net/article/234189.htm">Vue UI创建项目详细步骤</a></h2><p>1.首先要安装最新的Vue CLI<br>在命令行工具里输入一下命令<br>npm install -g @vue&#x2F;cli<br>或者<br>yarn global add @vue&#x2F;cli<br>安装成功后，可用vue -V命令查看已安装的Vue CLI版本<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073438.png"><br>2.在命令行运行 vue ui，就会出现图形化管理<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073439.png"><br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073440.png"><br>在界面上可以看到第一个tab项目，点击创建这个tab ，可以来创建一个新的vue项目<br>3.点击了创建之后可以看到一下内容，可以项目创建一个目录或者选择一个目录，然后选择一种包管理工具：可以使npm，也可以是yarn等<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073541.png"><br>4.点击下一步后，出现预设插件和配置的界面，按照自己的需求选择就可以，此处选择了默认的。<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073542.png"><br>5.点击创建项目后<br>已安装的插件，也可以在右上角点击添加插件安装想要的插件。<br>添加插件页面，也得要点击右下角的安装~<br>再返回到插件就会看到刚才安装的插件了，如下所示：<br>6.最后我们来看下 通过vue ui生成的项目结构<br>运行一下项目，npm run serve</p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><p>1.<a href="https://blog.csdn.net/jayLog/article/details/122743727">vue常用指令</a><br>vue常用指令有：v-once指令、v-show指令、v-if指令、v-else指令、v-else-if指令、v-for指令、v-html指令、v-text指令、v-bind指令、v-on指令、v-model指令等等。</p><h1 id="其他链接"><a href="#其他链接" class="headerlink" title="其他链接"></a>其他链接</h1>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> JavaScript </tag>
            
            <tag> VUE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML网页怎么连接到数据库</title>
      <link href="/posts/2729451999.html"/>
      <url>/posts/2729451999.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><h2 id="HTML不能直接读取数据库"><a href="#HTML不能直接读取数据库" class="headerlink" title="HTML不能直接读取数据库"></a>HTML不能直接读取数据库</h2><p>HTML是无法读取数据库的，HTML是页面前端脚本语言，要想从HTML网页中获取SQL数据库里的数据，需要借助JSP或ASP或PHP或RUBY等语言来实现。 简单的关系可以这样理解： 数据库&lt;—&gt;JSP或ASP或PHP或RUBY等语言&lt;—&gt;HTML</p><img src="/posts/2729451999/5cd67223da8dd675.jpg" class=""><p>网页链接数据库代码如下（PHP编写）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;content-type:text/html;charset=gb2312;&#x27;</span>);<span class="comment">//解决浏览器编码问题</span></span><br><span class="line"><span class="variable">$lnk</span> = mysql_connect(<span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;********&#x27;</span>) <span class="keyword">or</span> <span class="keyword">die</span> (<span class="string">&#x27;连接失败 : &#x27;</span> . mysql_error());<span class="comment">//密码填的是连接数据库的密码</span></span><br><span class="line">mysql_query(<span class="string">&quot;set names gb2312&quot;</span>);<span class="comment">//这就是指定数据库字符集</span></span><br><span class="line"><span class="comment">//选择当前连接数据库为student</span></span><br><span class="line">mysql_select_db(<span class="string">&#x27;book&#x27;</span>, <span class="variable">$lnk</span>);</span><br><span class="line"><span class="comment">//获取查询项和查询关键字的值</span></span><br><span class="line"><span class="variable">$searchitem</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;searchitem&#x27;</span>];</span><br><span class="line"><span class="variable">$searchvalue</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;searchvalue&#x27;</span>];</span><br><span class="line"><span class="comment">/*定义查询语句，如果查询关键字的值不为空，则在SQL语句的Where子句中</span></span><br><span class="line"><span class="comment">指定查询项模糊匹配关键字，否则查询所有记录*/</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$searchvalue</span>!=<span class="string">&quot;&quot;</span>) </span><br><span class="line">  <span class="variable">$myquery</span>=<span class="string">&quot;SELECT * from books where <span class="subst">&#123;$searchitem&#125;</span> like &#x27;%<span class="subst">&#123;$searchvalue&#125;</span>%&#x27;&quot;</span>;  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="variable">$myquery</span>=<span class="string">&quot;SELECT * from books&quot;</span>;   </span><br><span class="line"><span class="comment">//执行查询，生成结果集</span></span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$myquery</span>)<span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;&lt;br&gt;查询表books失败: &quot;</span> . mysql_error());</span><br><span class="line"><span class="comment">//从结果集中取得一行作为关联数组</span></span><br><span class="line"><span class="variable">$row</span>=mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="comment">//循环读取每一行记录</span></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$row</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML-前端怎么连接数据库？"><a href="#HTML-前端怎么连接数据库？" class="headerlink" title="HTML 前端怎么连接数据库？"></a>HTML 前端怎么连接数据库？</h2><p>HTML前端不能连接数据库，如果需要和数据库进行交互，就需要server端技术，可以选择JSP、PHP、ASP.NET等，这些技术可以实现在前台调用后端数据库，也可使用AJAX进行前后端交互。</p><h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><p>JSP（全称JavaServer Pages）是由Sun Microsystems公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、XML或其他格式文档的Web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的HTTP请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。</p><p>JSP将Java代码和特定变动内容嵌入到静态的页面中，实现以静态页面为模板，动态生成其中的部分内容。JSP引入了被称为“JSP动作”的XML标签，用来调用内建功能。另外，可以创建JSP标签库，然后像使用标准HTML或XML标签一样使用它们。标签库能增强功能和服务器性能，而且不受跨平台问题的限制。JSP文件在运行时会被其编译器转换成更原始的Servlet代码。JSP编译器可以把JSP文件编译成用Java代码写的Servlet，然后再由Java编译器来编译成能快速执行的二进制机器码，也可以直接编译成二进制码。</p><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>PHP原始为Personal Home Page的缩写，已经正式更名为 “PHP: Hypertext Preprocessor”。自20世纪90年代国内互联网开始发展到现在，互联网信息几乎覆盖了我们日常活动所有知识范畴，并逐渐成为我们生活、学习、工作中必不可少的一部分。据统计，从2003 年开始，我国的网页规模基本保持了翻番的增长速度，并且呈上升趋势。PHP 语言作为当今最热门的网站程序开发语言，它具有成本低、速度快、可移植性好、 内置丰富的函数库等优点，因此被越来越多的企业应用于网站开发中。但随着互联网的不断更新换代，PHP语言也出现了不少问题。</p><p>根据动态网站要求，PHP语言作为一种语言程序，其专用性逐渐在应用过程中显现，其技术水平的优劣与否将直接影响网站的运行效率。其特点是具有公开的源代码， 在程序设计上与通用型语言，如C语言相似性较高，因此在操作过程中简单易懂，可操作性强。同时，PHP语言具有较高的数据传送处理水平和输出水平，可以广泛应用在Windows系统及各类Web服务器中。如果数据量较大，PHP语言还可以拓宽链接面，与各种数据库相连，缓解数据存储、检索及维护压力。随着技术的发展，PHP 语言搜索引擎还可以量体裁衣，实行个性化服务，如根据客户的喜好进行分类收集储存，极大提高了数据运行效率。</p><h3 id="ASP-NET"><a href="#ASP-NET" class="headerlink" title="ASP.NET"></a>ASP.NET</h3><p>ASP.NET又称为ASP+，不仅仅是ASP的简单升级，而是微软公司推出的新一代脚本语言。ASP.NET基于.NET Framework的Web开发平台，不但吸收了ASP以前版本的最大优点并参照Java、VB语言的开发优势加入了许多新的特色，同时也修正了以前的ASP版本的运行错误。</p><p>ASP.NET具备开发网站应用程序的一切解决方案，包括验证、缓存、状态管理、调试和部署等全部功能。在代码撰写方面特色是将页面逻辑和业务逻辑分开，它分离程序代码与显示的内容，让丰富多彩的网页更容易撰写。同时使程序代码看起来更洁净、更简单。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://www.gxlcms.com/mysql-337548.html">HTML网页怎么连接到数据库？</a><br>2.<a href="https://m.php.cn/article/452911.html">HTML 前端怎么连接数据库？</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> mysql </tag>
            
            <tag> HTML </tag>
            
            <tag> 文章收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5分钟商学院-基础之目录</title>
      <link href="/posts/3753918527.html"/>
      <url>/posts/3753918527.html</url>
      
        <content type="html"><![CDATA[<p>作者：匿名用户<br>链接：<a href="https://www.zhihu.com/question/64174568/answer/1001925349">https://www.zhihu.com/question/64174568/answer/1001925349</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>对不住了，润总~</p><p>首先，来盘点一下，我“追星”花了多少钱。《5分钟商学院基础篇》：199元《实战篇》：199元2018年线下大课4节课通课：10000元往返四个城市飞机片加住宿：3000*4&#x3D;120000元课后见面私董会：10000元刘润推荐买BOSE降噪耳机：2800元刘润推荐买蓝牙手环：600元刘润全套书：大约300元大约花了36000元，当然买东西那个也不是别人强推给我的，只是我相信他说的，买了。所以，我比大部分人有机会评论刘润。首先阐明，我是粉转黑，你们也可以感受一下我的感受。</p><p>刘润是在得到上“发家”的，开了两门年课，大概就是把一本专业书的概念，浓缩成几千字的音频，然后讲出来。<br>当初，冲着《商学院》几个字就去了。这么神圣的商学院，居然能在这儿开课，不得了不得了，加上罗胖一包装，一忽悠，花了199就买了。<br>抓起来听了几课，我艹，不得了，这人简直是商业史上的奇才。我要向他学习，我要追星，我要学到真东西。加之马上开展了线下大课的售卖，我咬咬牙，花了30分钟，就决定了2万块的消费——全年4堂大课+私下见面会。</p><p>追了一圈下来，后悔不已啊！</p><p>接下来就详细说说，我对这个人怎么看。</p><p>先评优点：<br>刘润这个人我认真观察了两年多，从朋友圈、媒体、得到、微博、知识星球等等，我能判断的优点是：<br>1.演讲技巧好<br>2.逻辑思维能力<br>3.深入浅出的叙述能力<br>4.日更公号的勤奋<br>5.社交场上一枝花<br>6.对儿子上心</p><p>好优点说完了，说说缺点。先简述问题，后面慢慢铺开。</p><p>一、做人不谦虚，架子大。</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。</p><p>三、实操匮乏，三句不离微软。从数学系毕业，微软工作几年，就出来做互联网转型专家？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>一、做人不谦虚，架子大。<br>我在花了一万块以后在私董会上面跟刘润见面了。一桌共有10个同学，每人一万，每人五分钟提问，刘润解答。<br>流程是这样，刘润讲完课，由工作人员把私董会成员安排到酒店餐厅的包间集合。所有人到后，刘润开始吃饭。边吃边听，其他同学挨个发言。<br>听完十个同学的问题，我觉得都是比较当务之急，需要深思熟虑解决的。但是，刘润却在几分钟之内就能下判断和诊断。姑且不是结局如何，这种关系每个企业和公司的大事，几分钟就敢给结论？这是极不负责任的表现。<br>对于企业或者是个人，所有的决策，不根据数据、调查得出解决，万一直觉误导了别人，这就不是一万块的买卖了。<br>所以，这个所谓的私董会，就是割韭菜专用的。45分钟，解决了十个同学的问题。厉害吗？<br><img src="https://pic2.zhimg.com/50/v2-7c5a7a969609e8ea8098e7b21a9a3a46_720w.jpg?source=1940ef5c" data-caption="" data-size="small" data-rawwidth="1080" data-rawheight="2160" class="origin_image zh-lightbox-thumb" width="1080" data-original="https://pic1.zhimg.com/v2-7c5a7a969609e8ea8098e7b21a9a3a46_r.jpg?source=1940ef5c"/><br>这是卖家秀，麻烦得到，下次也备注清楚，只有5分钟！跟课程是一样长！<br>第二件事，就是关于张艺兴的视频。他对张艺兴说：“我听说你是我的粉丝”，“让你可以自豪的说出，你喜欢的人是刘润。”<br>我没有看出来什么叫谦虚，什么叫低调，什么叫为人师表。我知道看到了卖课，打广告，借题抬高自己。你们感受一下。<br>向隔壁何帆老师学习吧，“凡是叫人谦虚的学问都是好学问”，“有一天你取得了成就，我会搬个小板凳，做在你面前，认真听你教我。”</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。<br>我几乎看了刘润的每一篇公众号，也听过线下课程，线上课程，甚至朋友圈。至今为止，我没有看到过刘润发布相关的战略研究案例，或者企业咨询得出的结果等等。<br>与之对比的是华与华。华杉也是做咨询的，但是别人的咨询跟刘润的咨询差别有点大。如果你细看华杉的公众号，你会发现，没有那么多扯淡的话，几乎是干货，叫你怎么做，怎么包装，怎么定位，怎么设计，怎么卖！并且还总结出一套非常完善、且能上手的实用方法论。</p><p>这难道不是做企业咨询应该做的事情吗？那么，我斗胆请问刘润老师，做咨询这么久，能否分享一些你做过咨询的成功案例？或者一些实用的方法论？当然，可以用保密协议say NO。</p><p>按照回答张艺兴的路数，应该是知无不言、知无不尽，在这里，我仿佛感觉润总有点词穷。</p><p>三、实操匮乏，三句不离微软。</p><p>从数学系毕业，微软工作几年，就出来做互联网转型专家？微软，这这辈子没有听过这么多次微软。从内部体系，到微软怎么招人，在知乎回答、微博、朋友圈，真的是一直不停的说。我深知你对微软的感情，但是，也暴露了另外一点。就是，你知道的，就一定会说出来。</p><p>刘润是数学系毕业，按照我的记忆，在大课上讲过，毕业后，刚刚参加工作，就跑去微软面试，没想到进了。在微软担任到某分公司的总经理？在微软过后，就创办润米咨询，也就是2013年。我注意观察到，最近几乎所有平台关于刘润的学习，都加上了复旦大学MBA。这事儿也挺蹊跷，大概率是成人MBA。但从近几年的资料看，刘润没有关于任何在复旦大学的线索。（仅为猜忌，肯定不敢学他的曾经的boss）</p><p>那么，从微软出来，就开了咨询公司，为何就成了互联网转型专家？其实我挺纳闷的。当时的微软跟互联网的关系其实也挺浅的，这是众所周知的。</p><p>那么，是否有成功转型的企业呢？是如何转型的呢？又提供了多大的帮助呢？这个“专家”二字是谁说的呢？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>如果各位有机会关注刘润的公众号，大概得到的就是这种句式：企业遇到财务危机怎么办？那我们先来说说，什么是财务危机。 财务危机又分为XX、XX…..</p><p>这样的句式充满整个公众号。你看来看去，是找不到毛病，确实也没说错。然后，发现对你基本没有帮助。用网友的话，叫做正确的废话。</p><p>就拿这篇财务危机的公众号来看，他说有六个办法能够帮助企业获得现金流。哇哦，让我虎躯一震。</p><p>看完全篇，总结了六点：<br>1.找股东借、2.清库存、3.要预付款、4.收应收款、5.延期支付应付款、6.减成本。<br>哎，你说，这个话有问题吗？并没有。有意义吗？哎~ 建议别跟Spencer学，都学坏了，日更一篇，都是些水货。</p><p>关于护城河啊之类的理论，这都不知道说了多少次了。记得“得到”上有怎么办问题，回答的就是护城河理论，答非所问。我刚刚看，罗胖都把首页的这条推荐删了。</p><p>说这么多，我只想真实表达我的感受，也确实把我憋坏了。因为我曾经太信任，刘润对我们却视为韭菜，我惋惜我的两万块钱。</p><p>我记得刘润课上说过一话：“今天对我爱理不理，明天让你高攀不起。” 如果你能看到，这句话，我回送给你。当做我一个梦想吧！哈哈哈哈哈哈</p><p>发布于 2020-02-06 21:24</p>]]></content>
      
      
      <categories>
          
          <category> 商业类 </category>
          
          <category> 刘润 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商业 </tag>
            
            <tag> 5分钟商学院 </tag>
            
            <tag> 目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序(一)之UDP通信</title>
      <link href="/posts/2604964553.html"/>
      <url>/posts/2604964553.html</url>
      
        <content type="html"><![CDATA[<p>前期知识:<a href="https://zml3589110.github.io/posts/497460256.html">网络七层协议(OSI)基础知识</a></p><h1 id="文章代码参考"><a href="#文章代码参考" class="headerlink" title="文章代码参考"></a>文章代码参考</h1><h2 id="微信小程序UDP通信"><a href="#微信小程序UDP通信" class="headerlink" title="微信小程序UDP通信"></a>微信小程序UDP通信</h2><blockquote><p>微信小程序UDP通信及编码转换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Encoder  <span class="keyword">from</span> <span class="string">&#x27;../../util/Encoder.js&#x27;</span></span><br><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"><span class="built_in">this</span>.udp.bind(<span class="number">60000</span>) <span class="comment">//udp绑定本机</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">//连接目标</span></span><br><span class="line"><span class="function"><span class="title">linkUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp.connect(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//发送信息</span></span><br><span class="line"><span class="function"><span class="title">clickUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//utf-8转gbk编码</span></span><br><span class="line"><span class="keyword">var</span> gbkArray = Encoder.hexstrToArray(Encoder.stringToGbkHexstr(<span class="string">&#x27;123哈&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;gbkArray&gt;&gt;&quot;</span> , gbkArray)</span><br><span class="line"><span class="keyword">let</span> gbk = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>()</span><br><span class="line"><span class="built_in">console</span>.log(gbk)</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.write(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">message: gbk</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//监听接收到的数据</span></span><br><span class="line">onUdpMessage: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;收到的信息&#x27;</span>, res);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;onUdpMessage() 接收数据 &#x27;</span> + res.remoteInfo.size + <span class="string">&#x27; 字节：&#x27;</span> + <span class="built_in">JSON</span>.stringify(res, <span class="literal">null</span>, <span class="string">&#x27;\t&#x27;</span>));</span><br><span class="line"><span class="comment">// gbk转utf-8</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(res.message);</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> TextDecoder(<span class="string">&#x27;gbk&#x27;</span>).decode(x);</span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//监听收到的数据</span></span><br><span class="line"><span class="built_in">this</span>.udp.onMessage(<span class="built_in">this</span>.onUdpMessage)</span><br><span class="line"><span class="comment">//监听错误的信息</span></span><br><span class="line"><span class="built_in">this</span>.udp.onError(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"><a href="#关于微信小程序使用UDP实现局域网通讯及UDP模块的封装" class="headerlink" title="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"></a>关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</h2><blockquote><p>封装模块</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPSocket</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection = &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 创建一个UDP实例</span></span><br><span class="line">  <span class="function"><span class="title">establish</span>(<span class="params">monitor</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(monitor);</span><br><span class="line">    <span class="built_in">this</span>.connection = wx.createUDPSocket();</span><br><span class="line">    <span class="comment">// 绑定指定端口</span></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.connection.bind(monitor)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;连接成功&#x27;</span> + port + <span class="string">&#x27;端口&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 监听端口函数</span></span><br><span class="line">  <span class="function"><span class="title">onListening</span>(<span class="params">success, failure, open, cmd, mac</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 开启监听</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onListening(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      open(res)</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 监听回调函数</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onMessage(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下为我对数据的处理，使用到了我的一个tool.js,里面包含了对字节数组的处理</span></span><br><span class="line"><span class="comment">//需要的可以到我的个人博客获取www.meinaodai.top</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 做空包筛查</span></span><br><span class="line">      <span class="keyword">if</span> (res.message) &#123;</span><br><span class="line">        <span class="keyword">var</span> packet = tool.analysis(res.message)</span><br><span class="line">        <span class="comment">// 做数据空包处理</span></span><br><span class="line">        <span class="keyword">if</span> (packet) &#123;</span><br><span class="line">          <span class="comment">// 做数据筛查</span></span><br><span class="line">          <span class="comment">// console.log(tool.Screening(packet, cmd, mac));</span></span><br><span class="line">          success(tool.Screening(packet, cmd, mac))</span><br><span class="line">          <span class="built_in">console</span>.log(packet);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;------------------------&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// debug</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onError(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      failure(err)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 发送消息</span></span><br><span class="line">  <span class="function"><span class="title">send</span>(<span class="params">message</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.send(&#123;</span><br><span class="line">      address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">      port: <span class="number">20015</span>,</span><br><span class="line">      message</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 关闭搜索事件</span></span><br><span class="line">  <span class="function"><span class="title">UDPclose</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.close()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;UDP关闭&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模块引用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UDP = <span class="built_in">require</span>(<span class="string">&quot;./UDP.js&quot;</span>)   </span><br><span class="line">   <span class="comment">// UDP实例创建</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket = <span class="keyword">new</span> UDP.UDPSocket();</span><br><span class="line">    <span class="comment">// 连接端口</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.establish(<span class="number">20016</span>)</span><br><span class="line">    <span class="comment">// 请求设备上报状态</span></span><br><span class="line">    <span class="built_in">this</span>.udpsend()</span><br><span class="line">    <span class="comment">// 开始监听</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.onListening(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// debug</span></span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;, <span class="function"><span class="params">open</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(open);</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">//这两个参数为筛查条件，用于过滤无用或者不合法的信息，不需要的可传空值</span></span><br><span class="line">    <span class="string">&#x27;&#x27;</span>, getApp().globalData.item.mac)</span><br></pre></td></tr></table></figure><h1 id="实际工程测试"><a href="#实际工程测试" class="headerlink" title="实际工程测试"></a>实际工程测试</h1><p>先按照第一篇写时发现找不到 connect 函数，是因为变量问题！修改为全局变量后可以通过 connect 连接端口，但又缺失 hexstrToArray 函数，就没再继续下去。<br>后来找到第二篇参考，并根据参考写相应UDP函数，引用中 getApp().globalData.item.mac 和 tool.analysis(res.message) 均不存在，屏蔽即可，数据能正常收发。<br>再重新分析参考程序，并从官方文档中了解相应函数作用，最后基本按照官方文档提供的几个函数即可完成功能。</p><h2 id="在页面初始中建立实例并绑定端口"><a href="#在页面初始中建立实例并绑定端口" class="headerlink" title="在页面初始中建立实例并绑定端口"></a>在页面初始中建立实例并绑定端口</h2><blockquote><p>也可以使用 connect 模式，使用 bind 可以返回绑定端口<br>使用 onListening 打开监听功能，并通过 onMessage 设置监听数据回调函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.udp.bind(<span class="number">60000</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;端口&#x27;</span> + port + <span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.udp.onListening(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.udp.onMessage(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="设置数据发送"><a href="#设置数据发送" class="headerlink" title="设置数据发送"></a>设置数据发送</h2><blockquote><p>发送数据直接使用 send 函数即可，使用 255.255.255.255 是广播模式<br>即向局域网中所有端口 60000 均发送数据</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">BtnTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;这是一个测试按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.send(&#123;</span><br><span class="line">  address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">  port: <span class="number">60000</span>,</span><br><span class="line">  message: <span class="string">&#x27;hello, how are you&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="待添加部分"><a href="#待添加部分" class="headerlink" title="待添加部分"></a>待添加部分</h2><p>以上只是简单的数据收发，也在局域网中测试实现，不过完整的过程封装应该还需错误回调和关闭等功能。<br>即增加 UDPSocket.onError 和 UDPSocket.close 函数<br>官方所提供的函数如下:<br><strong>UDPSocket wx.createUDPSocket()</strong> 创建一个 UDP Socket 实例</p><blockquote><p>UDPSocket 基础库 2.7.0 开始支持，低版本需做兼容处理。<br>一个 UDP Socket 实例，默认使用 IPv4 协议</p></blockquote><p><strong>方法:</strong></p><table><thead><tr><th align="left">函数名</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><strong>number UDPSocket.bind(number port)</strong></td><td align="left">绑定一个系统随机分配的可用端口，或绑定一个指定的端口号</td></tr><tr><td align="left">UDPSocket.setTTL(number ttl)</td><td align="left">设置 IP_TTL 套接字选项，用于设置一个 IP 数据包传输时允许的最大跳步数</td></tr><tr><td align="left"><strong>UDPSocket.send(Object object)</strong></td><td align="left">向指定的 IP 和 port 发送消息。基础库 2.9.0 起支持广播 (指定地址为 255.255.255.255)</td></tr><tr><td align="left">UDPSocket.connect(Object object)</td><td align="left">预先连接到指定的 IP 和 port，需要配合 write 方法一起使用</td></tr><tr><td align="left">UDPSocket.write()</td><td align="left">用法与 send 方法相同，如果没有预先调用 connect 则与 send 无差异（注意即使调用了 connect 也需要在本接口填入地址和端口参数）</td></tr><tr><td align="left">UDPSocket.close()</td><td align="left">关闭 UDP Socket 实例，相当于销毁。 在关闭之后，UDP Socket 实例不能再发送消息，每次调用 UDPSocket.send 将会触发错误事件，并且 message 事件回调函数也不会再也执行。在 UDPSocket 实例被创建后将被 Native 强引用，保证其不被 GC。在 UDPSocket.close 后将解除对其的强引用，让 UDPSocket 实例遵从 GC</td></tr><tr><td align="left">UDPSocket.onClose(function callback)</td><td align="left">监听关闭事件</td></tr><tr><td align="left">UDPSocket.offClose(function callback)</td><td align="left">取消监听关闭事件</td></tr><tr><td align="left">UDPSocket.onError(function callback)</td><td align="left">监听错误事件</td></tr><tr><td align="left">UDPSocket.offError(function callback)</td><td align="left">取消监听错误事件</td></tr><tr><td align="left"><strong>UDPSocket.onListening(function callback)</strong></td><td align="left">监听开始监听数据包消息的事件</td></tr><tr><td align="left">UDPSocket.offListening(function callback)</td><td align="left">取消监听开始监听数据包消息的事件</td></tr><tr><td align="left"><strong>UDPSocket.onMessage(function callback)</strong></td><td align="left">监听收到消息的事件</td></tr><tr><td align="left">UDPSocket.offMessage(function callback)</td><td align="left">取消监听收到消息的事件</td></tr></tbody></table><p><strong>错误:</strong></p><table><thead><tr><th align="left">错误码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-1</td><td align="left">系统错误</td></tr><tr><td align="left">-2</td><td align="left">socket接口错误，可参考系统的socket错误码</td></tr><tr><td align="left">-3</td><td align="left">发送失败，无接口权限</td></tr><tr><td align="left">1</td><td align="left">发送失败，参数错误，address不合法</td></tr><tr><td align="left">2</td><td align="left">发送失败，参数错误，port不合法</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_50077305/article/details/118813518">微信小程序UDP通信</a><br>2.<a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/wx.createUDPSocket.html">微信官方文档-UDP通信</a><br>3.<a href="https://blog.csdn.net/qq_43318313/article/details/124193217">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</a><br>4.<a href="http://meinaodai.top/">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装的个人博客</a> 所提供的 tool.js 封装了常用函数</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> UDP </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程(一)之网络七层协议(OSI)</title>
      <link href="/posts/497460256.html"/>
      <url>/posts/497460256.html</url>
      
        <content type="html"><![CDATA[<h1 id="网络七层协议-OSI-基础知识"><a href="#网络七层协议-OSI-基础知识" class="headerlink" title="网络七层协议(OSI)基础知识"></a>网络七层协议(OSI)基础知识</h1><p>协议总览图：<br>​<img src="/posts/497460256/1.%E7%BD%91%E7%BB%9C%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE.png" class="" title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>网络中的计算机与终端要想正确地传递信息和数据，必须在数据传输地顺序、数据的格式及内容等方面有一个约定的或规则，这种约定或规则称之为协议。</p></blockquote><table><thead><tr><th align="left">OSI层</th><th align="left">功能</th><th align="left">示例</th><th align="left">网络设备</th></tr></thead><tbody><tr><td align="left">应用层</td><td align="left">电子邮件，文件服务，虚拟终端</td><td align="left">TELNET，HTTP，FTP，NFS，SMTP，TFTP，SNMP，DNS，Telnet等</td><td align="left"></td></tr><tr><td align="left">表示层</td><td align="left">数据格式化，代码转换，数据加密 没有协议</td><td align="left">加密，ASCII等</td><td align="left"></td></tr><tr><td align="left">会话层</td><td align="left">解除或建立与别的接点的联系 没有协议</td><td align="left">RPC，SQL等</td><td align="left"></td></tr><tr><td align="left">传输层</td><td align="left">提供端对端的接口</td><td align="left">TCP，UDP，SPX</td><td align="left">四层交换机、也有工作在四层的路由器</td></tr><tr><td align="left">网络层</td><td align="left">为数据包选择路由</td><td align="left">IP，ICMP，RIP，OSPF，BGP，IGMP，IPX等</td><td align="left">路由器、三层交换机</td></tr><tr><td align="left">数据链路层</td><td align="left">传输有地址的帧以及错误检测功能</td><td align="left">ATM，FDDI，SLIP，CSLIP，PPP，ARP，RARP，MTU等</td><td align="left">网桥、以太网交换机、网卡(物理层和据链路层各一半)</td></tr><tr><td align="left">物理层</td><td align="left">以二进制数据形式在物理媒体上传输数据</td><td align="left">Rj45，802.3，ISO2110，IEEE802，IEEE802.2等</td><td align="left">中继器、集线器、双绞线等</td></tr></tbody></table><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>数据链层图：<br>​<img src="/posts/497460256/2.%E6%95%B0%E6%8D%AE%E9%93%BE%E5%B1%82.png" class="" title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第二层，介于物理层和网络层之间,其最基本的服务是将源自网络层来的数据可靠得传输到相邻节点的目的机网络层<br>在数据链路层中称这种数据块为帧，帧是数据链路层的传送单位，如何控制帧在屋里信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配，以及在两个网络实体之间提供数据链路通路的建立、维持和释放的管理.</p></blockquote><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层在数据链路层提供的两个相邻端点之间的数据帧的传送功能上进一步管理网络中的数据通信，将数据设法从源端经过若干个中间节点传送到目的端，从而向传输层提供最基本的端到端的数据传送服务<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%82.png" class="" title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第三层，介于传输层和数据链路层之间<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%821.png" class="" title="This is an 1.微信小程序UDP通信 image"><br>网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择，连接的建立、保持和终止等，它提供的服务使传输层不需要了解网络中的数据传输和交换技术。</p></blockquote><h1 id="Socket和HTTP"><a href="#Socket和HTTP" class="headerlink" title="Socket和HTTP"></a>Socket和HTTP</h1><p>简单了解OSI之后我们来看一下我们手机与电脑通信，所能够使用的两种数据通信，一种是HTTP请求，一种是Socket通信，HTTP是属于短连接，适合新闻，订票信息等客户端发起请求，每一次请求结束，自动断开连接。而Socket是属于长连接，适合游戏，聊天等实时数据。</p><h2 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h2><p>建立起一个TCP连接需要经过“三次握手”：<br>第一次握手：客户端发送syn包(syn&#x3D;j)到服务器，并进入SYN_SEND状态，等待服务器确认；<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack&#x3D;j+1），同时自己也发送一个SYN包（syn&#x3D;k），即SYN+ACK包，此时服务器进入SYN_RECV状态；<br>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack&#x3D;k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。</p><blockquote><p>握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连 接之前，TCP 连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写 了，就是服务器和客户端交互，最终确定断开）</p></blockquote><h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><p>同时Socket可以支持不同的传输层协议（UDP），那我们平时为什么不使用UDP呢，我们现在来看一下UDP与TCP的区别</p><table><thead><tr><th align="left"></th><th align="left">TCP</th><th align="left">UDP</th></tr></thead><tbody><tr><td align="left">是否面向连接</td><td align="left">面向连接</td><td align="left">面向非连接</td></tr><tr><td align="left">传输可靠性</td><td align="left">可靠</td><td align="left">不可靠</td></tr><tr><td align="left">应用场合</td><td align="left">传输大量数据</td><td align="left">少量数据</td></tr><tr><td align="left">传输速度</td><td align="left">慢</td><td align="left">快</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_48126962/article/details/117074843">网络七层协议</a><br>2.<a href="https://blog.csdn.net/ch1406285246/article/details/55504330">网络七层协议、TCP&#x2F;IP、UDP、HTTP、Socket 个人理解</a></p><blockquote><p>一、我一直以为Http和Tcp是两种不同的，但是地位对等的协议，虽然知道TCP是传输层，而http是应用层今天学习了下，知道了 http是要基于TCP连接基础上的，简单的说，TCP就是单纯建立连接，不涉及任何我们需要请求的实际数据，简单的传输。http是用来收发数据，即实际应用上来的。<br>二、TCP是底层通讯协议，定义的是数据传输和连接方式的规范 HTTP是应用层协议，定义的是传输数据的内容的规范 HTTP协议中的数据是利用TCP协议传输的，所以支持HTTP也就一定支持TCP<br>三、HTTP支持的是www服务而TCP&#x2F;IP是协议它是Internet国际互联网络的基础。TCP&#x2F;IP是网络中使用的基本的通信协议。TCP&#x2F;IP实际上是一组协议，它包括上百个各种功能的协议，如：远程登录、文件传输和电子邮件等，而TCP协议和IP协议是保证数据完整传输的两个基本的重要协议。通常说TCP&#x2F;IP是Internet协议族，而不单单是TCP和IP。</p></blockquote><p>3.<a href="https://zhuanlan.zhihu.com/p/101662799">网络OSI七层模型及各层作用</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> 网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> 网络七层协议 </tag>
            
            <tag> TCP/IP </tag>
            
            <tag> UDP </tag>
            
            <tag> Socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(二)</title>
      <link href="/posts/990256180.html"/>
      <url>/posts/990256180.html</url>
      
        <content type="html"><![CDATA[<h1 id="模块外形及连接方式"><a href="#模块外形及连接方式" class="headerlink" title="模块外形及连接方式"></a>模块外形及连接方式</h1><p>根据提供的资料先进行手工搭线，后续再做图。</p><h2 id="实物外形"><a href="#实物外形" class="headerlink" title="实物外形"></a>实物外形</h2><p>​<img src="/posts/990256180/1.WBR3%E6%A8%A1%E5%9D%97%E5%A4%96%E5%BD%A2.jpg" class="" title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3每个脚位以及硬件相关信息在对应的信息在文档(涂鸦WIFI基本开发(一))有详细说明</p><h2 id="连接原理图"><a href="#连接原理图" class="headerlink" title="连接原理图"></a>连接原理图</h2><p>​<img src="/posts/990256180/2.%E6%B6%82%E9%B8%A6%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E5%9B%BE.png" class="" title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3连接相对简单，基本只需要连接VCC、GND、TXD、RXD四个脚位即可，还有一个信息打印脚位TX为 A_16,测试有信息输出。</p><h2 id="实物连接"><a href="#实物连接" class="headerlink" title="实物连接"></a>实物连接</h2><p>​<img src="/posts/990256180/3.%E5%AE%9E%E9%99%85%E8%BF%9E%E7%BA%BF.jpg" class="" title="This is an 2.涂鸦WIFI基本开发(二) image"><br>根据原理图进行相应连接，需要增加两个电容放在VCC和GND之间做滤波，分别是0.1UF和10UF。</p><h1 id="实验效果"><a href="#实验效果" class="headerlink" title="实验效果"></a>实验效果</h1><p>实验使用的是涂鸦自带调试工具(Tuya Module Debugging Assistant)进行连接，涂鸦调试工具模拟MCU和模块进行通讯，基本正常！<br>​<img src="/posts/990256180/4.%E6%B6%82%E9%B8%A6%E6%A8%A1%E7%BB%84%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B.png" class="" title="This is an 2.涂鸦WIFI基本开发(二) image"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>今天拿到 WBR3 模块后连接测试，使用的是 USB TO TLL 串口工具，工具中的电源有 3.3V、VCC、5V，本着稳妥方法使用的是3.3V电源，然而当一直没能连接。<br>起初根本没有任何反应，串口接收不到任何数据。以为商家发错模块，直到使用 A_16 连接查看串口数据时才发现一直有乱码发过来，也就是说模块是正确，乱码很像乐鑫ESP8266刚启动时发送过来的数据一样。<br>因此才怀疑是不是模块一直复位，也才进一步怀疑电源过低导致芯片无法启动。<br>后来使用万用表点看发现电源才3V，再点看VCC有3.6V，使用这个电源就能正常工作通讯。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://zml3589110.github.io/posts/2486667095.html">涂鸦WIFI基本开发(一)</a><br>2.参考<a href="https://oshwhub.com/OrangePi/wen-shi-du-zhuan-gan-qi-wu-lian-wang-ce-shi">【涂鸦智能】云朵温度监视器</a>查看PCB</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>商业洞察力目录</title>
      <link href="/posts/3924567325.html"/>
      <url>/posts/3924567325.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建模型，一个事物再复杂，也是几个固定要素组成的"><a href="#搭建模型，一个事物再复杂，也是几个固定要素组成的" class="headerlink" title="搭建模型，一个事物再复杂，也是几个固定要素组成的"></a>搭建模型，一个事物再复杂，也是几个固定要素组成的</h1><h2 id="第1章，系统、要素、连接关系"><a href="#第1章，系统、要素、连接关系" class="headerlink" title="第1章，系统、要素、连接关系"></a>第1章，系统、要素、连接关系</h2><h2 id="第2章，变量、因果链、增强回路、调节回路、滞后效应"><a href="#第2章，变量、因果链、增强回路、调节回路、滞后效应" class="headerlink" title="第2章，变量、因果链、增强回路、调节回路、滞后效应"></a>第2章，变量、因果链、增强回路、调节回路、滞后效应</h2><h2 id="第3章，流量、存量"><a href="#第3章，流量、存量" class="headerlink" title="第3章，流量、存量"></a>第3章，流量、存量</h2><h2 id="第4章，因果链"><a href="#第4章，因果链" class="headerlink" title="第4章，因果链"></a>第4章，因果链</h2><h2 id="第5章，增强回路"><a href="#第5章，增强回路" class="headerlink" title="第5章，增强回路"></a>第5章，增强回路</h2><h2 id="第6章，调节回路"><a href="#第6章，调节回路" class="headerlink" title="第6章，调节回路"></a>第6章，调节回路</h2><h2 id="第7章，滞后效应"><a href="#第7章，滞后效应" class="headerlink" title="第7章，滞后效应"></a>第7章，滞后效应</h2><h1 id="第一个训练场，解决难题，像商业顾问一样思考"><a href="#第一个训练场，解决难题，像商业顾问一样思考" class="headerlink" title="第一个训练场，解决难题，像商业顾问一样思考"></a>第一个训练场，解决难题，像商业顾问一样思考</h1><h2 id="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"><a href="#第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业" class="headerlink" title="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"></a>第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业</h2><h2 id="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"><a href="#第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）" class="headerlink" title="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"></a>第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）</h2><h2 id="改变原因"><a href="#改变原因" class="headerlink" title="改变原因"></a>改变原因</h2><h3 id="第10章，还原大前提（失效）"><a href="#第10章，还原大前提（失效）" class="headerlink" title="第10章，还原大前提（失效）"></a>第10章，还原大前提（失效）</h3><h3 id="第11章，突围边界墙（滞涨）"><a href="#第11章，突围边界墙（滞涨）" class="headerlink" title="第11章，突围边界墙（滞涨）"></a>第11章，突围边界墙（滞涨）</h3><h3 id="第12章，安装缓冲器（波动）"><a href="#第12章，安装缓冲器（波动）" class="headerlink" title="第12章，安装缓冲器（波动）"></a>第12章，安装缓冲器（波动）</h3><h3 id="第13章，跨越临界点（突变）"><a href="#第13章，跨越临界点（突变）" class="headerlink" title="第13章，跨越临界点（突变）"></a>第13章，跨越临界点（突变）</h3><h2 id="改变模型"><a href="#改变模型" class="headerlink" title="改变模型"></a>改变模型</h2><h3 id="第14章，改变模型的案例"><a href="#第14章，改变模型的案例" class="headerlink" title="第14章，改变模型的案例"></a>第14章，改变模型的案例</h3><h1 id="第二个训练场是看透人心，个体、群体、集体管理千差万别"><a href="#第二个训练场是看透人心，个体、群体、集体管理千差万别" class="headerlink" title="第二个训练场是看透人心，个体、群体、集体管理千差万别"></a>第二个训练场是看透人心，个体、群体、集体管理千差万别</h1><h2 id="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"><a href="#第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）" class="headerlink" title="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"></a>第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）</h2><h2 id="第16章，群体压力（群体）"><a href="#第16章，群体压力（群体）" class="headerlink" title="第16章，群体压力（群体）"></a>第16章，群体压力（群体）</h2><h2 id="第17章，结构性张力（个人）"><a href="#第17章，结构性张力（个人）" class="headerlink" title="第17章，结构性张力（个人）"></a>第17章，结构性张力（个人）</h2><h2 id="第18章，创业之心（合伙人）"><a href="#第18章，创业之心（合伙人）" class="headerlink" title="第18章，创业之心（合伙人）"></a>第18章，创业之心（合伙人）</h2><h2 id="第19章，改变人心模型的案例"><a href="#第19章，改变人心模型的案例" class="headerlink" title="第19章，改变人心模型的案例"></a>第19章，改变人心模型的案例</h2><h1 id="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"><a href="#第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。" class="headerlink" title="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"></a>第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。</h1><h2 id="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"><a href="#第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。" class="headerlink" title="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"></a>第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。</h2><h3 id="受阻模型：123-公地悲剧、成长上限、成长与投资不足"><a href="#受阻模型：123-公地悲剧、成长上限、成长与投资不足" class="headerlink" title="受阻模型：123 公地悲剧、成长上限、成长与投资不足"></a>受阻模型：123 公地悲剧、成长上限、成长与投资不足</h3><h3 id="失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”"><a href="#失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”" class="headerlink" title="失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”"></a>失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”</h3><p><strong>为什么越急于求成，越一事无成</strong></p><ol><li>舍本逐末基模(Shifting  the Burden)</li></ol><p>A和B两家“婚前培训”，都想融资100万，A拿来请最好的人打磨产品，让新婚夫妻心甘情愿付费学习；B拿来宣传课程社会价值，申请政府补贴，让新婚夫妻免费学。<br>B的商业模型符合典型的“舍本逐末”模型。</p><blockquote><p>舍本逐末的本质：一条根本解的调节回路，因为见效慢，遭遇一条症状解打压的增强回路。最终问题依旧，甚至更严重，直至崩盘。</p></blockquote><ol start="2"><li>饮鸩止渴基模(Fixes that Fail)</li></ol><p><strong>舍本逐末升级版，不同的是，“鸩”这种“症状解”，不是没有营养的“末”，而是杀人于无形的“毒”</strong></p><p>年中，某知识付费平台的销售业绩比预计差不少。销售总监很着急，打算推出“一价全包会员卡”，只需365就能收听所有内容。<br>这个调节回路可以大大提升短期收入，但也会深深伤害长期收入。就不会有人再打算用500、800甚至1000购买单独课程。相当于把未来的收入提前打折兑现。下半年的业绩问题，会因为上半年的吸血，而惨不忍睹</p><blockquote><p>饮鸩止渴的本质：一条短期见效的调节回路，激活了一条长期恶化的增强回路。回光返照之后，灯枯油尽，走向失控。</p></blockquote><p><strong>这个世界上放在我们前面的通常不是正确的选择和错误的选择。而是正确的选择和容易的选择。而容易的选择，常常有毒</strong></p><ol start="3"><li>意外之敌基模(Accidental Adversaries)</li></ol><p>上世纪70年代，宝洁为了打击竞争对手，提高市场占有率，突然大规模打折促销。没想到这一降，让盟友沃尔玛措手不及。低价带来的渠道利润骤减，让沃尔玛无以为继。然后沃尔玛大规模囤积产品，等恢复原价再卖。<br>这样的场景还发生在销售和工程师之间。</p><blockquote><p>意外之敌的本质：改善自己业绩的调节回路，意外激活了一条伤及盟友的增强回路。昔日盟友，反目成仇，最终两败俱伤</p></blockquote><p><strong>最需要学习时空模型组的，是面临艰难选择的创业者。人的天性是选最容易走的路。但是，正确的路，通常艰难；而难走的路，从不拥挤</strong></p><h3 id="通吃模型：7-富者越富"><a href="#通吃模型：7-富者越富" class="headerlink" title="通吃模型：7 富者越富"></a>通吃模型：7 富者越富</h3><h3 id="锁死模型：89-恶性竞争、目标侵蚀"><a href="#锁死模型：89-恶性竞争、目标侵蚀" class="headerlink" title="锁死模型：89 恶性竞争、目标侵蚀"></a>锁死模型：89 恶性竞争、目标侵蚀</h3><h2 id="第21章，公地悲剧、成长上限、成长与投资不足"><a href="#第21章，公地悲剧、成长上限、成长与投资不足" class="headerlink" title="第21章，公地悲剧、成长上限、成长与投资不足"></a>第21章，公地悲剧、成长上限、成长与投资不足</h2><h2 id="第22章，舍本逐末、饮鸩止渴、意外之敌"><a href="#第22章，舍本逐末、饮鸩止渴、意外之敌" class="headerlink" title="第22章，舍本逐末、饮鸩止渴、意外之敌"></a>第22章，舍本逐末、饮鸩止渴、意外之敌</h2><h2 id="第23章，赢家通吃"><a href="#第23章，赢家通吃" class="headerlink" title="第23章，赢家通吃"></a>第23章，赢家通吃</h2><h2 id="第24章，恶性竞争、目标侵蚀"><a href="#第24章，恶性竞争、目标侵蚀" class="headerlink" title="第24章，恶性竞争、目标侵蚀"></a>第24章，恶性竞争、目标侵蚀</h2><h2 id="第25章，案例练习"><a href="#第25章，案例练习" class="headerlink" title="第25章，案例练习"></a>第25章，案例练习</h2><h1 id="第四个训练场，终身练习。破除顽固的三大思想误区。"><a href="#第四个训练场，终身练习。破除顽固的三大思想误区。" class="headerlink" title="第四个训练场，终身练习。破除顽固的三大思想误区。"></a>第四个训练场，终身练习。破除顽固的三大思想误区。</h1><h2 id="第26章，散点思维和公式思维"><a href="#第26章，散点思维和公式思维" class="headerlink" title="第26章，散点思维和公式思维"></a>第26章，散点思维和公式思维</h2><h2 id="第27章，局部思维和层次思维"><a href="#第27章，局部思维和层次思维" class="headerlink" title="第27章，局部思维和层次思维"></a>第27章，局部思维和层次思维</h2><h2 id="第28章，静止思维和演化思维"><a href="#第28章，静止思维和演化思维" class="headerlink" title="第28章，静止思维和演化思维"></a>第28章，静止思维和演化思维</h2><h2 id="第29章，储备模型，建立模型，迁移模型"><a href="#第29章，储备模型，建立模型，迁移模型" class="headerlink" title="第29章，储备模型，建立模型，迁移模型"></a>第29章，储备模型，建立模型，迁移模型</h2><h2 id="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"><a href="#第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限" class="headerlink" title="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"></a>第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限</h2>]]></content>
      
      
      <categories>
          
          <category> 商业类 </category>
          
          <category> 刘润 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商业 </tag>
            
            <tag> 目录 </tag>
            
            <tag> 洞察力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.使用abbrlink生成唯一链接</title>
      <link href="/posts/238727531.html"/>
      <url>/posts/238727531.html</url>
      
        <content type="html"><![CDATA[<p>​文章链接默认是以年、月、日、标题格式来生成，主要是通过修改hexo配置文件_config.yml来完成<br>​</p><p>设置之后发现报错，那是因为没有安装依赖，根据提示安装即可<br>    npm install hexo-abbrlink –save</p><pre><code>官方Sample The generated link will look like the following:crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>安装好之后重新生成文章时，md文件的Front-matter 内会增加abbrlink 字段,值为生成的ID，<br>这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址,<br>换句话说,就是本篇文章有了自己的专属链接。有了专属链接，找百度收录也就简单的多了</p><p>本文参考文章:</p><a class="btn-beautify block" href="https://zhuanlan.zhihu.com/p/112318081"   title="利用Hexo-abbrlink插件生成唯一文章链接"><i class="far fa-hand-point-right"></i><span>利用Hexo-abbrlink插件生成唯一文章链接</span></a>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO技术 </tag>
            
            <tag> abbrlink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(一)</title>
      <link href="/posts/2486667095.html"/>
      <url>/posts/2486667095.html</url>
      
        <content type="html"><![CDATA[<h1 id="因需将产品联网处理"><a href="#因需将产品联网处理" class="headerlink" title="因需将产品联网处理"></a>因需将产品联网处理</h1><p>​虽然一直在研究乐鑫esp8266，但发现接入云服务还需自己付费使用，因此就考虑找能免费对接网络的模块，很久以前玩过司南物联芯片，本想购入，但却发现主页都进不去，只好作罢。后来又找汉枫模块和涂鸦模块。</p><a class="btn-beautify block" href="http://www.hi-flying.com/index.php?route=product/category&path=135"   title="汉枫模块"><i class="far fa-hand-point-right"></i><span>汉枫模块</span></a><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/MQTT-protocol?id=Kb65nphxrj8f1"   title="涂鸦模块"><i class="far fa-hand-point-right"></i><span>涂鸦模块</span></a><p>汉枫看起来挺麻烦，加之比象花费太大时间！就选择涂鸦模块，因为涂鸦网站资料相对较多，也提供相对详细SDK，通过串口UART连接即可，根据说明，只要将其SDK-C导入到工程就可以使用。</p><h1 id="模块选择"><a href="#模块选择" class="headerlink" title="模块选择"></a>模块选择</h1><p>选择的是WBR3模块</p><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy"   title="WBR3模块说明"><i class="far fa-hand-point-right"></i><span>WBR3模块说明</span></a><p>WBR3 是由涂鸦智能开发的一款低功耗嵌入式 Wi-Fi 加蓝牙模组。它由一个高集成度的无线射频芯片W701-VA2-CG构成，内置了 Wi-Fi 网络协议栈和丰富的库函数</p><ul><li>内置低功耗 KM4 MCU，可以兼作应用处理器</li><li>主频 100MHz</li><li>工作电压：3V-3.6V</li><li>外设：9×GPIOs, 1×UART, 1×Log_Tx</li><li>Wi-Fi&#x2F;蓝牙连通性<ul><li>802.11 B&#x2F;G&#x2F;N20</li><li>通道 <a href="mailto:&#49;&#45;&#x31;&#x34;&#64;&#x32;&#x2e;&#52;&#71;&#72;&#x7a;">&#49;&#45;&#x31;&#x34;&#64;&#x32;&#x2e;&#52;&#71;&#72;&#x7a;</a>(CH1-11 for US&#x2F;CA, CH1-13 for EU&#x2F;CN)</li><li>支持 WEP&#x2F;WPA&#x2F;WPA2&#x2F;WPA2 PSK（AES） 安全模式</li><li>支持 Bluetooth 4.2 Low Energy</li><li>802.11b 模式下 +20dBm 的输出功率</li><li>支持 SmartConfig 功能，包括 Android 和 iOS 设备</li><li>板载 PCB Onboard 天线</li><li>通过 CE、FCC 认证</li><li>工作温度：-20℃ to 85℃</li></ul></li></ul><h3 id="尺寸封装"><a href="#尺寸封装" class="headerlink" title="尺寸封装"></a>尺寸封装</h3><ul><li>WBR3 共有 2 排引脚（2×8），引脚间距为 2mm。</li><li>WBR3 尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×2.9±0.15 mm (H)。WBR3尺寸图如下图所示<img src="/posts/2486667095/1.WBR3%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class="" title="This is an 1.涂鸦WIFI基本开发(一) image">1.WBR3脚位图</li></ul><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote><h2 id="电气参数"><a href="#电气参数" class="headerlink" title="电气参数"></a>电气参数</h2><h3 id="绝对电气参数"><a href="#绝对电气参数" class="headerlink" title="绝对电气参数"></a>绝对电气参数</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ts</td><td align="left">存储温度</td><td align="left">-40</td><td align="left">105</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">供电电压</td><td align="left">-0.3</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">静电释放电压（人体模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">2</td><td align="left">KV</td></tr><tr><td align="left">静电释放电压（机器模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">0.5</td><td align="left">KV</td></tr></tbody></table><h3 id="工作条件"><a href="#工作条件" class="headerlink" title="工作条件"></a>工作条件</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">典型值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ta</td><td align="left">工作温度</td><td align="left">-20</td><td align="left">-</td><td align="left">85</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">工作电压</td><td align="left">3.0</td><td align="left">-</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">VIL</td><td align="left">I&#x2F;O低电平输入</td><td align="left">-</td><td align="left">-</td><td align="left">0.8</td><td align="left">V</td></tr><tr><td align="left">VIH</td><td align="left">I&#x2F;O高电平输入</td><td align="left">2.0</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">VOL</td><td align="left">I&#x2F;O低电平输出</td><td align="left">-</td><td align="left">-</td><td align="left">0.4</td><td align="left">V</td></tr><tr><td align="left">VOH</td><td align="left">I&#x2F;O高电平输出</td><td align="left">2.4</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">Imax</td><td align="left">I&#x2F;O驱动电流</td><td align="left">-</td><td align="left">-</td><td align="left">16</td><td align="left">mA</td></tr><tr><td align="left">Cpad</td><td align="left">输入引脚电容</td><td align="left">-</td><td align="left">2</td><td align="left">-</td><td align="left">pF</td></tr></tbody></table><h3 id="射频功耗"><a href="#射频功耗" class="headerlink" title="射频功耗"></a>射频功耗</h3><ul><li><p>TX 连续发送时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">功率</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">17dBm</td><td align="left">217</td><td align="left">268</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">18dBm</td><td align="left">231</td><td align="left">283</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">15dBm</td><td align="left">159</td><td align="left">188</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">17.5dBm</td><td align="left">177</td><td align="left">213</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">13dBm</td><td align="left">145</td><td align="left">167</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">16.5dBm</td><td align="left">165</td><td align="left">193</td><td align="left">mA</td></tr></tbody></table></li><li><p>RX 连续接收时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11B 11M</td><td align="left">63</td><td align="left">65</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11G 54M</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11N HT20 MCS7</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr></tbody></table></li></ul><h2 id="射频参数"><a href="#射频参数" class="headerlink" title="射频参数"></a>射频参数</h2><h3 id="基本射频特性"><a href="#基本射频特性" class="headerlink" title="基本射频特性"></a>基本射频特性</h3><table><thead><tr><th align="left">参数项</th><th align="left">详细说明</th></tr></thead><tbody><tr><td align="left">频率范围</td><td align="left">2.400~2.4835GHz</td></tr><tr><td align="left">Wi-Fi标准</td><td align="left">IEEE 802.11b&#x2F;g&#x2F;n(通道 1-14)</td></tr><tr><td align="left">蓝牙标准</td><td align="left">蓝牙4.2</td></tr><tr><td align="left">数据传输速率</td><td align="left">11b:1,2,5.5, 11 (Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11g:6,9,12,18,24,36,48,54(Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11n:HT20 MCS0~7</td></tr><tr><td align="left">天线类型</td><td align="left">PCB 天线，增益2.5dBi</td></tr></tbody></table><h2 id="天线信息"><a href="#天线信息" class="headerlink" title="天线信息"></a>天线信息</h2><h3 id="天线类型"><a href="#天线类型" class="headerlink" title="天线类型"></a>天线类型</h3><p>只有 PCB 板载天线接入方式，天线增益 2.5dBi。</p><h3 id="降低天线干扰"><a href="#降低天线干扰" class="headerlink" title="降低天线干扰"></a>降低天线干扰</h3><p>在 Wi-Fi 模组上使用 PCB 板载天线时，为确保 Wi-Fi 性能的最优化，建议模组天线部分和其他金属件距离至少在 15mm 以上。</p><h2 id="封装信息及生产指导"><a href="#封装信息及生产指导" class="headerlink" title="封装信息及生产指导"></a>封装信息及生产指导</h2><h3 id="机械尺寸"><a href="#机械尺寸" class="headerlink" title="机械尺寸"></a>机械尺寸</h3><p>WBR3的PCB机械尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×0.8±0.1 mm (H)。WBR3的机械尺寸如下图所示。</p><img src="/posts/2486667095/3.%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class="" title="This is an 1.涂鸦WIFI基本开发(一) image">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> WIFI </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql重置密码</title>
      <link href="/posts/643139453.html"/>
      <url>/posts/643139453.html</url>
      
        <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>因为最近在研究 VUE连接 PHP和mysql，而之前安装过mysql后忘记密码，遂找办法重置密码！</p><h1 id="验证可行步骤"><a href="#验证可行步骤" class="headerlink" title="验证可行步骤"></a>验证可行步骤</h1><ol><li><p>打开命令窗口cmd，输入命令：net stop mysql，停止MySQL服务 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li><p>开启跳过密码验证登录的MySQL服务<br>输入命令  mysqld –console –skip-grant-tables –shared-memory </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --console --skip-grant-tables --shared-memory </span><br></pre></td></tr></table></figure></li><li><p>再打开一个新的cmd，无密码登录MySQL，输入登录命令：mysql -u root -p</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>密码置为空，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br><span class="line"></span><br><span class="line">  update user set authentication_string&#x3D;&#39;&#39; where user&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure> <img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121131355851-1940142196.png"></li><li><p>退出mysql，执行命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure></li><li><p>关闭以-console –skip-grant-tables –shared-memory 启动的MySQL服务，</p></li><li><p>打开命令框，输入：net start mysql  启动MySQL服务，一管理员的身份运行cmd。</p></li><li><p>步骤4密码已经置空，所以无密码状态登录MySQL，输入登录命令：mysql -u root -p</p></li><li><p>利用上一篇博客中更改密码的命令，成功修改密码，如下图：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;新密码&#39;;</span><br></pre></td></tr></table></figure><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132058721-318719011.png">10. 验证更改后密码正确登录<p>输入quit，退出当前登录，输入登录命令：mysql -u root -p<br><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132340755-1605186062.png"></p><p>输入密码，成功登录，到此，重置密码结束。</p><h1 id="文章来源"><a href="#文章来源" class="headerlink" title="文章来源"></a>文章来源</h1><ol><li><a href="https://www.cnblogs.com/wsl-/p/10688292.html">mysql重置密码</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程来 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
            <tag> 重置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat脚本相关技巧</title>
      <link href="/posts/387550601.html"/>
      <url>/posts/387550601.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>批处理文件<br>（Batch File，简称 BAT文件）是一种在DOS 下最常用的可执行文件，也称为批处理脚本，是对某对象进行批量的处理，批处理文件的扩展名为bat。</strong></p></blockquote><h1 id="当前盘符-x2F-当前bat路径"><a href="#当前盘符-x2F-当前bat路径" class="headerlink" title="当前盘符&#x2F;当前bat路径"></a><a href="https://blog.csdn.net/wumingxiao001bei/article/details/107859035">当前盘符&#x2F;当前bat路径</a></h1><h2 id="bat脚本显示当前盘符、当前路径、当前bat脚本路径"><a href="#bat脚本显示当前盘符、当前路径、当前bat脚本路径" class="headerlink" title="bat脚本显示当前盘符、当前路径、当前bat脚本路径"></a>bat脚本显示当前盘符、当前路径、当前bat脚本路径</h2><p>当前盘符 %<del>d0、当前路径 %cd%、当前执行命令行 %0、当前bat文件路径 %</del>dp0、当前bat文件短路径 %~dp0<br>编写代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">::关闭<span class="built_in">echo</span>回显</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::当前盘符</span><br><span class="line"><span class="built_in">echo</span> current pan : %~d0</span><br><span class="line"></span><br><span class="line">::当前路径</span><br><span class="line"><span class="built_in">echo</span> current path : %<span class="built_in">cd</span>%</span><br><span class="line"></span><br><span class="line">::当前执行命令行</span><br><span class="line"><span class="built_in">echo</span> current cmd : %0</span><br><span class="line"></span><br><span class="line">::当前bat文件路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::当前bat文件短路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::暂停bat脚本</span><br><span class="line">Pause</span><br></pre></td></tr></table></figure><p>测试效果:</p><img src="https://img-blog.csdnimg.cn/20200807113746849.png"><h1 id="bat脚本运行完后删除自身"><a href="#bat脚本运行完后删除自身" class="headerlink" title="bat脚本运行完后删除自身"></a><a href="https://blog.csdn.net/LIMY_hm/article/details/109628444">bat脚本运行完后删除自身</a></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rem 批处理运行完后删除自身</span><br><span class="line">del %0 </span><br><span class="line"></span><br><span class="line">rem 若批处理中有变更自身名字，则需要用到管道</span><br><span class="line">rem del %0 | move *.* d:\ </span><br></pre></td></tr></table></figure><h2 id="使用bat批处理删除文件夹和文件"><a href="#使用bat批处理删除文件夹和文件" class="headerlink" title="使用bat批处理删除文件夹和文件"></a>使用bat批处理删除文件夹和文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rd /s/q C:\Users\Administrator\Desktop\新建文件夹\mp3</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h2 id="windows-bat批量创建文件夹与文件"><a href="#windows-bat批量创建文件夹与文件" class="headerlink" title="windows bat批量创建文件夹与文件"></a><a href="https://www.csdn.net/tags/MtTaEg4sNDM1MjM4LWJsb2cO0O0O.html">windows bat批量创建文件夹与文件</a></h2><ol><li>一、新建bat文件 批量创建.bat<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /f %%i <span class="keyword">in</span> (</span><br><span class="line">nameList.txt</span><br><span class="line">) <span class="keyword">do</span> mkdir %%i &amp;&amp; copy muban.docx %%i\%%i.docx</span><br><span class="line"></span><br><span class="line">::  <span class="keyword">do</span> mkdir %%i &amp;&amp; copy muban.docx %%i\%%i.docx &amp;&amp; start %%i\%%i.docx</span><br><span class="line"></span><br><span class="line">::pause</span><br></pre></td></tr></table></figure></li><li>二、创建文件 nameList.txt<br>把文件夹名字粘贴到 nameList.txt</li><li>三、创建空文件 muban.docx<br>备注： 批量创建.bat  、  nameList.txt    、 muban.docx位于同一目录。</li></ol><h2 id="Windows批处理-cmd-x2F-bat-快速新建文件夹"><a href="#Windows批处理-cmd-x2F-bat-快速新建文件夹" class="headerlink" title="Windows批处理(cmd&#x2F;bat)快速新建文件夹"></a><a href="https://blog.csdn.net/weixin_42985452/article/details/113789487">Windows批处理(cmd&#x2F;bat)快速新建文件夹</a></h2><blockquote><p>在进行毕业设计时，随着每日的任务不同，需要新建不同文件夹来区分任务，但手敲新建重命名太过繁琐，经过资料的查找，找到了在windows系统下bat文件的快速新建文件夹的方法，效果展示如下：</p></blockquote><img src="https://img-blog.csdnimg.cn/20210211125405922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjk4NTQ1Mg==,size_16,color_FFFFFF,t_70"><h3 id="本次批处理用到的命令"><a href="#本次批处理用到的命令" class="headerlink" title="本次批处理用到的命令"></a>本次批处理用到的命令</h3><ul><li>echo<blockquote><p>打开回显或关闭请求回显功能，或显示消息。如果没有任何参数，echo 命令将显示当前回显设置。</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> on  <span class="comment">#从下一行开始打开回显</span></span><br><span class="line"><span class="built_in">echo</span> off <span class="comment">#从下一行开始关闭回显</span></span><br><span class="line">@<span class="built_in">echo</span> off            <span class="comment">#从本行开始关闭回显</span></span><br><span class="line"><span class="built_in">echo</span> hello world     <span class="comment">#输出hello world</span></span><br></pre></td></tr></table></figure><ul><li><p>pause</p><blockquote><p>暂停命令：<br>将显示下面的消息：请按任意键继续. .</p></blockquote></li><li><p>set</p><blockquote><p>显示、设置或删除变量。<br>显示变量：set 或 set s 前者显示批处理当前已定义的所有变量及其值，后者显示所有以s开头的变量及值。<br>设置变量：set aa&#x3D;abcd 此句命令便可向变量aa赋值abcd。<br>如果变量aa已被定义，则aa的值被修改为abcd；若aa尚未定义，则此句命令即可定义新的变量aa，同时为变量aa赋予初始值abcd。<br>删除变量：set aa&#x3D; 此句命令即可删除变量aa。若变量aa已被定义，则删除变量aa；若aa尚未定义，则此句命令为实质意义。<br>需要说明的是，批处理中的变量是不区分类型的，不需要像C语言中的变量那样还要区分int、float、char等。比如执行set aa&#x3D;345后，变量aa的值既可以被视为数字345，也可以被视为字符串345。</p></blockquote></li><li><p>md</p><blockquote><p>创建文件夹</p></blockquote></li><li><p>%</p><blockquote><p>命令行传递给批处理的参数<br>%0 批处理文件本身<br>%1 第一个参数<br>%9 第九个参数<br>%* 从第一个参数开始的所有参数</p></blockquote></li><li><p>date 和 time</p><blockquote><p>日期和时间<br>date #显示当前日期，并提示输入新日期，按”回车”略过输入<br>date&#x2F;t #只显示当前日期，不提示输入新日期<br>time #显示当前时间，并提示输入新时间，按”回车”略过输入<br>time&#x2F;t #只显示当前时间，不提示输入新时间</p></blockquote></li></ul><p><strong>这里只展示了本次任务中我们需要的指令，更多指令请见：</strong><br><a href="https://www.cnblogs.com/dongzhuangdian">小德cyj</a><br><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html">批处理常用命令总结 - 批处理命令简介</a></p><ul><li>例：<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> test=abcdefghi#设置变量test，并赋值为 = 后面的字符串，即abcdefghij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test%</span> #显示变量test代表的字符串，即abcdefghij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~6%</span> #显示变量test中第<span class="number">6</span>个字符以后的所有字符，即ghij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~6,3%</span> #显示第<span class="number">6</span>个字符以后的<span class="number">3</span>个字符，即ghi</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~0,3%</span> #显示前<span class="number">3</span>个字符，即abc</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~-2%</span> #显示最后面的<span class="number">2</span>个字符，即ij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~0,-2%</span> #显示除了最后<span class="number">2</span>个字符以外的其它字符，即abcdefgh</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>代码：<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">#关闭显示</span><br><span class="line"><span class="built_in">set</span> dd=<span class="variable">%date:~8,2%</span>  </span><br><span class="line">#dd=日期</span><br><span class="line"><span class="built_in">set</span> mm=<span class="variable">%date:~5,2%</span></span><br><span class="line">#mm=月份</span><br><span class="line"><span class="built_in">set</span> yy=<span class="variable">%date:~0,4%</span></span><br><span class="line">#yy=年份</span><br><span class="line"><span class="built_in">set</span> Tmm=<span class="variable">%TIME:~3,2%</span></span><br><span class="line">#Tmm=分钟</span><br><span class="line"><span class="built_in">set</span> Thh=<span class="variable">%TIME:~0,2%</span></span><br><span class="line">#Thh=小时</span><br><span class="line"><span class="built_in">set</span> folder=&quot;Graduation_project-<span class="variable">%yy%</span>-<span class="variable">%mm%</span>-<span class="variable">%dd%</span>-<span class="variable">%Thh%</span>.<span class="variable">%Tmm%</span>&quot;</span><br><span class="line">#folder=Graduation_project-年-月-日-时-分</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line">#创建文件夹</span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line">#暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br></pre></td></tr></table></figure></li></ul><h3 id="新建dat文件"><a href="#新建dat文件" class="headerlink" title="新建dat文件"></a>新建dat文件</h3><ol><li>新建一个txt文档</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313779.png"><ol start="2"><li>把我们的代码复制进去</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjk4NTQ1Mg==,size_16,color_FFFFFF,t_70"><ol start="3"><li>另存为.bat后缀文件</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313870.png"><img src="https://img-blog.csdnimg.cn/20210211135313906.png"><ol start="4"><li>完成</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313867.png"><blockquote><p>如果你想更好的区分文件夹的不同任务，那么我们可以自动在新建文件夹时创建一个readme.txt方便我们进行进度的记录</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#在之前的代码最后加入</span><br><span class="line"><span class="built_in">cd</span>  <span class="variable">%folder%</span></span><br><span class="line"><span class="built_in">echo</span> Summary：&gt;&gt; readme.txt</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210211140103717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjk4NTQ1Mg==,size_16,color_FFFFFF,t_70"><ul><li>按照文件个数进行顺序命名：<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">dir</span> /b ^| <span class="built_in">find</span> /v /c &quot;&amp;#@&quot;&#x27;) <span class="keyword">do</span> (</span><br><span class="line">  <span class="built_in">set</span> count=<span class="variable">%%a</span></span><br><span class="line">)</span><br><span class="line">#读取当前文件夹的文件及文件夹个数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%count%</span></span><br><span class="line">#打印出来</span><br><span class="line"><span class="built_in">set</span> folder=&quot;meeting-<span class="variable">%count%</span>&quot;</span><br><span class="line">#文件夹命名</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line">#新建文件夹</span><br></pre></td></tr></table></figure></li></ul><img src="https://img-blog.csdnimg.cn/2d45079444ee44f58a571fad4e665f8e.png">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图标异常处理</title>
      <link href="/posts/2606890055.html"/>
      <url>/posts/2606890055.html</url>
      
        <content type="html"><![CDATA[<h1 id="异常原因"><a href="#异常原因" class="headerlink" title="异常原因"></a>异常原因</h1><p>原本想安装 xampp8.0.0.1 软件拿来做简单服务搭建，安装结束后发现 navicat 和 Postman 这两个程序图标异常<br>怀疑是安装这个程序的 mysql 篡改了内容，卸载后删除相应文件就可以了</p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ol><li><p>运行 %localappdata%<br>自动打开了 C:\Users\Administrator\AppData\Local 文件夹</p></li><li><p>删除文件 IconCach.db</p></li><li><p>组合键Ctrl+Shift+Esc 打开任务管理器<br>选择 Windows 资源管理–&gt;重新启动即可</p></li></ol><p><a href="http://www.360doc.com/content/22/0404/21/47597997_1024856093.shtml">桌面图标异常怎么办？</a></p>]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 桌面图标异常 </tag>
            
            <tag> xampp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>433无线遥控使用说明</title>
      <link href="/posts/253476467.html"/>
      <url>/posts/253476467.html</url>
      
        <content type="html"><![CDATA[<h1 id="产品实物图说明"><a href="#产品实物图说明" class="headerlink" title="产品实物图说明"></a>产品实物图说明</h1><p>(图: 1.00安装git-vim-make程序)</p><img src="/posts/253476467/aaa.jpg" class="" title="This is an 433无线遥控 image"><img src="/posts/253476467/0.0%E4%BA%A7%E5%93%81%E5%9B%BE%E6%A6%82%E8%A7%88.jpg" class="" title="This is an 433无线遥控 image"> <h1 id="使用步骤说明"><a href="#使用步骤说明" class="headerlink" title="使用步骤说明"></a>使用步骤说明</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个标籤外挂。</p><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button" style="">Click  </button><span class="hide-content">闪</span></span></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>block独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style="">查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案</p></div></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><details class="toggle" ><summary class="toggle-button" style="">Butterfly安装方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><a class="btn-beautify block" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/"   title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>主题中的图片都是默认以块级元素显示，如果你想以内联元素显示，可以使用这个标签外挂。</p><p>你看我长得漂亮不</p><p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>高亮所需的文字</p><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>可在任何界面插入类似友情链接列表效果</p><p>内容格式与友情链接界面一样，支持 yml 格式</p><div class="flink"><div class="flink-name">友情链接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="JerryC" />              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日毕">今日事,今日毕</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror='this.onerror=null;this.src="/img/friend_404.gif"' alt="Hexo" />              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、简单且强大的网誌框架">快速、简单且强大的网誌框架</div>            </a>          </div></div></div>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java学习标签 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO打开 related_posts 推荐功能时出现编译异常</title>
      <link href="/posts/2738849392.html"/>
      <url>/posts/2738849392.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>因为刚开始写文章并未出现tags标签重合，所以并未触发推荐功能！直到昨天写一篇有重复tags标签后就发现一直报错，首先还是网上百度查找问题。<br>一通操作下来，都只能找到 related_posts 打开说明和设置方式，最后还是得通过故障自己解决！<br>问题定位如图：</p><h2 id="1-最初点-post-pug"><a href="#1-最初点-post-pug" class="headerlink" title="1.最初点 post.pug"></a>1.最初点 post.pug</h2><pre><code>hexo-theme-butterfly\layout\post.pug:27</code></pre><p>即说明是在文件 post.pug 中的函数 related_posts 出了异常，</p><blockquote><p>25|       include includes&#x2F;pagination.pug<br>    26|     if theme.related_post &amp;&amp; theme.related_post.enable<br>  –27|       !&#x3D; related_posts(page,site.posts)<br>    28|<br>    29|     if page.comments !&#x3D;&#x3D; false &amp;&amp; theme.comments &amp;&amp; theme.comments.use<br>    30|       - var commentsJsLoad &#x3D; true</p></blockquote><h2 id="2-根本问题点-this-escape-html-is-not-a-function"><a href="#2-根本问题点-this-escape-html-is-not-a-function" class="headerlink" title="2.根本问题点 this.escape_html is not a function"></a>2.根本问题点 this.escape_html is not a function</h2><p>最后问题为 related_post.js 文件下的 escape_html 函数</p><blockquote><p>使用escapeHTML，将字符串转为 &lt;script&gt;alert(2);&lt;&#x2F;script&gt;此时，浏览器将能正确解析，因为浏览器接收到实体字符后，转成对应的尖括号等<br>在 hexo-theme-butterfly\scripts\helpers\related_post.js 中的 escape_html 并未定义，因此有推荐数据进来时就报错，本来想自己增加 escape_html 函数，但又报 related_posts is not a function 错误，只好作罢！</p></blockquote><h2 id="3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）"><a href="#3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）" class="headerlink" title="3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）"></a>3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）</h2><p>既然返回的标题是字符串型，那就直接使用字符串测试后发现确实能通过，最后就去掉 escape_html 而直接使用。<br>按照说明，应该是浏览器字符串转换相关，后续看会不会因此报出什么故障了！<br>问题解决如图：</p><h1 id="参考到好的文章"><a href="#参考到好的文章" class="headerlink" title="参考到好的文章"></a>参考到好的文章</h1><p>一、<a href="https://www.cainiaoxueyuan.com/bc/1607.html">Hexo主题开发谈：制作过程如何避坑和一些经验</a><br>1.安装了hexo-browsersync之后也不能实现修改pug文件之后刷新出修改后的结果。只能实现自动刷新，但是刷新了之后还是修改前的页面。所以我找了一种办法使其能够达到预期的刷新并修改的效果，可以参考这个issue里最下面我的回答：<br>在你的node_modules文件夹里找到hexo-renderer-jade的文件夹，然后将里面lib&#x2F;pug.js（jade同理）的其中一行代码注释掉：<br>&#x2F;&#x2F; pugRender.compile &#x3D; pugCompile<br>我初步看了一下应该是跟预编译有关系。<br>2. hexo-server模式下，中文文章渲染不全。可以参考这个相关issue。解决办法是在站点的（而不是主题的）_config.yml里添加如下配置：<br>server:<br>    compress: true # 开启压缩<br>3. hexo默认的highlight渲染在未指定代码类型的时候会很慢，为了规范我们的文章书写以及提高渲染速度，我们应该在站点的配置文件里加上：<br>highlight:<br> auto_detect: false<br>并在写文章的时候，代码块的声明区域边上直接带上代码类型，比如：<code>js，这样就正常了</code></p><p>二、<a href="https://blog.csdn.net/qq_33058239/article/details/78727888">转义分为escapeHTML和unescapeHTML，先看两个函数的实现。</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>escapeHTML 转义html脚本 &lt; &gt; &amp; &quot; &#x27; </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">a</span></span> - </span></span><br><span class="line"><span class="comment"> *            字符串 </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line">escapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&quot;&quot;</span><span class="string">&quot;).replace(/&#x27;/g, &quot;</span><span class="string">&#x27;&quot;);;  </span></span><br><span class="line"><span class="string">&#125;,  </span></span><br><span class="line"><span class="string">/** </span></span><br><span class="line"><span class="string"> * @function unescapeHTML 还原html脚本 &lt; &gt; &amp; &quot; &#x27;</span> </span><br><span class="line"> * @param a - </span><br><span class="line"> *            字符串 </span><br><span class="line"> */  </span><br><span class="line">unescapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&quot;&#x27;</span>).replace(<span class="regexp">/&#x27;/g</span>, <span class="string">&quot;&#x27;&quot;</span>);  </span><br><span class="line">&#125;, </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 推荐文章 </tag>
            
            <tag> escape_html </tag>
            
            <tag> related_posts </tag>
            
            <tag> escapeHTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO本地服务正常，发布github后排版异常</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<p>使用的是 hexo+butterfly主题</p><p>在本地打开服务器时一切都很正常，一旦推送到github之后排版错乱起来！</p><p>原本很奇怪，以为是主题导致，查了很多都未发现问题！</p><p>最后删除 .deploy_git 后重建缓冲推送就正常了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>比参考文章好的是，这里能显示图片！</p><p>参考以下文档:<br><a href="https://blog.csdn.net/Wlittlestar/article/details/123964059?spm=1001.2014.3001.5501">BUG记录| hexo博客本地预览正常，但发布后不显示主题</a></p>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> HEXO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Esp8266做socket实验(TcpServer TcpClient UdpServer Udpclient)</title>
      <link href="/posts/32911666.html"/>
      <url>/posts/32911666.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境:"></a>实验环境:</h1><ol><li>虚拟机:VirtualBox6.0</li><li>Ubuntu系统: ubuntu-20.04.1-desktop-amd64</li><li>ESP8266: NodeMCU开发板</li><li>SDK:V3.4</li><li>使用乐鑫SDK提供examples实验使用</li></ol><h1 id="0、补充：编译完成后下载出现ttyUSB0找不到的问题"><a href="#0、补充：编译完成后下载出现ttyUSB0找不到的问题" class="headerlink" title="@0、补充：编译完成后下载出现ttyUSB0找不到的问题:"></a>@0、补充：编译完成后下载出现ttyUSB0找不到的问题:</h1><p>(图0.00找不到ttyUSB0)<br> <img src="/posts/32911666/0.00%E6%89%BE%E4%B8%8D%E5%88%B0ttyUSB0.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>这样需要设置好虚拟机和Ubuntu，然后插拔USB重新挂载：<br>（图0.10Ubuntu设置USB）<br> <img src="/posts/32911666/0.10Ubuntu%E8%AE%BE%E7%BD%AEUSB.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图0.11拔插USB显示连接上USB）<br> <img src="/posts/32911666/0.11%E6%8B%94%E6%8F%92USB%E6%98%BE%E7%A4%BA%E8%BF%9E%E6%8E%A5%E4%B8%8AUSB.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>最后使用命令使Ubuntu挂载USB0:<br>1.sudo usermod -a -G dialout $USER<br>2.sudo chmod -R 777 &#x2F;dev&#x2F;ttyUSB0<br>（图0.12可以正常下载和窗口监视）<br> <img src="/posts/32911666/0.12%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%AA%97%E5%8F%A3%E7%9B%91%E8%A7%86.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 分割线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887"><a href="#1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887" class="headerlink" title="@1、Socket预备知识:  https://blog.csdn.net/pashanhu6402/article/details/96428887"></a>@1、Socket预备知识:  <a href="https://blog.csdn.net/pashanhu6402/article/details/96428887">https://blog.csdn.net/pashanhu6402/article/details/96428887</a></h1><p>（图1.00Socket在网络中的结构）<br> <img src="/posts/32911666/1.00Socket%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E7%BB%93%E6%9E%84.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><h1 id="2、TcpServer和-TcpClient"><a href="#2、TcpServer和-TcpClient" class="headerlink" title="@2、TcpServer和 TcpClient"></a>@2、TcpServer和 TcpClient</h1><p>（图2.00TCP协议结构流程图）<br> <img src="/posts/32911666/2.00TCP%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84%E6%B5%81%E7%A8%8B%E5%9B%BE.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"><br>TcpServer和 TcpClient流程基本相同，不过TcpServer相对来说多了些流程。复制到工作目录下边。<br>（图2.10复制Tcp_Server文件到实验目录）<br> <img src="/posts/32911666/2.10%E5%A4%8D%E5%88%B6Tcp_Server%E6%96%87%E4%BB%B6%E5%88%B0%E5%AE%9E%E9%AA%8C%E7%9B%AE%E5%BD%95.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>打开Tcp_Server.c文件修改app_main为TcpServer_init,使用CONFIG_EXAMPLE_IPV4而非IPV6。<br>（图2.11修改app_main方便调用）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A8.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.11修改app_main方便调用1）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A81.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.12设置端口且使用IPV4）<br> <img src="/posts/32911666/2.12%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E4%B8%94%E4%BD%BF%E7%94%A8IPV4.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>在app_main函数中调用TcpServer_init完成TcpServer功能<br>（图2.13调用TcpServer功能）<br> <img src="/posts/32911666/2.13%E8%B0%83%E7%94%A8TcpServer%E5%8A%9F%E8%83%BD.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>下载即可使用<br>@2、tcpclient功能设置与tcpserver基本相同！<br>@3、udpclient功能设置和udpserver操作也基本相同！！！</p><p>技术总结：<br>@一、注意USB0的挂载问题！<br>@二、要复制components文件到实验目录，否则会找不到protocol_examples_common.h头文件！<br>（图3.13网络连接头文件）<br> <img src="/posts/32911666/3.13%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E5%A4%B4%E6%96%87%E4%BB%B6.png" class="" title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>乐鑫Esp8266_RTOS_SDK最新SDK_IDF编译环境搭建</title>
      <link href="/posts/2171885577.html"/>
      <url>/posts/2171885577.html</url>
      
        <content type="html"><![CDATA[<h1 id="零、安装Ubuntu"><a href="#零、安装Ubuntu" class="headerlink" title="零、安装Ubuntu"></a>零、安装Ubuntu</h1><p>续上集:《安装Ubuntu并设置共享和Xshell》安装好Ubuntu系统后就可以开始着手搭建ESP8266编译环境，不过过程并不美好，个中滋味及其坎坷只有受过毒打的人才能体会！！！真的比在Windows安装安信可环境麻烦N多倍。(想想之后可能要安装ESP32开发环境，誒，打工人！)<br>从上篇文章搭好到现在完成SDK_IDF的hello_world编译完成，竟然花了将近20天时间！！虽然都是零星使用上班和晚上下班回去做，但跨度也是有些长，其中各种被蹂躏真不是滋味！！！</p><p>@0、补充：上集补充:在安装好之后，发现每次都需要挂载share共享文件夹，很麻烦，因此就想办法每次开机后直接挂载，因此就有以下补充: </p><ol><li>sudo vim &#x2F;etc&#x2F;fstab</li><li>share &#x2F;mnt&#x2F;share vboxsf defaults 0 0<br>（图:0.0共享文件自动加载） <img src="/posts/2171885577/0.0%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 我是分鸽线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</li></ol><hr><h1 id="一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件"><a href="#一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件" class="headerlink" title="@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件"></a>@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件</h1><h2 id="1-安装git、vim、make软件"><a href="#1-安装git、vim、make软件" class="headerlink" title="1.  安装git、vim、make软件:"></a>1.  安装git、vim、make软件:</h2><p>sudo apt install git vim make<br>(图: 1.00安装git-vim-make程序)</p><img src="/posts/2171885577/1.00%E5%AE%89%E8%A3%85git-vim-make%E7%A8%8B%E5%BA%8F.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-安装乐鑫所需相关软件"><a href="#2-安装乐鑫所需相关软件" class="headerlink" title="2.  安装乐鑫所需相关软件:"></a>2.  安装乐鑫所需相关软件:</h2><p>sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python3 python3-serial<br>(图:1.10安装乐鑫所需软件)</p><img src="/posts/2171885577/1.10%E5%AE%89%E8%A3%85%E4%B9%90%E9%91%AB%E6%89%80%E9%9C%80%E8%BD%AF%E4%BB%B6.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p> 此时若报故障: (“选中 ‘python-is-python2’ 而非 ‘python’”,则要需要把Python3修改成默认,因为我已设置过，所以可以直接下载通过,算是第一个坑吧！)<br>这是由于Ubuntu所安装默认的Python为Python2，把它修改默认为Python3即可<br>查看本机安装的Python版本:<br>sudo ln -s &#x2F;usr&#x2F;bin&#x2F;python3.8 &#x2F;usr&#x2F;bin&#x2F;python<br>（图: 1.11查看本机安装的Python）</p><img src="/posts/2171885577/1.11%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BA%E5%AE%89%E8%A3%85%E7%9A%84Python.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！"><a href="#3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！" class="headerlink" title="3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)"></a>3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)</h2><p>sudo apt-get install python3-pip<br>(图:1.12通过Python安装pip软件)</p><img src="/posts/2171885577/1.12%E9%80%9A%E8%BF%87Python%E5%AE%89%E8%A3%85pip%E8%BD%AF%E4%BB%B6.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h3 id="以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"><a href="#以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！" class="headerlink" title="以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"></a>以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！</h3><h1 id="二、下载ESP8266最新SDK和Tool编译链工具"><a href="#二、下载ESP8266最新SDK和Tool编译链工具" class="headerlink" title="@二、下载ESP8266最新SDK和Tool编译链工具"></a>@二、下载ESP8266最新SDK和Tool编译链工具</h1><h2 id="1-下载ESP8266的SDK"><a href="#1-下载ESP8266的SDK" class="headerlink" title="1.  下载ESP8266的SDK"></a>1.  下载ESP8266的SDK</h2><p>去官网下载适合自己开发的SDK(必须3.0及以上),官网有说明！我下的是最新版本。一定一定一定一定要加–recursive拉取所有字模块，否则根本编译不了，而且还不知啥问题！！！这一步不知掉了多少次坑！</p><p>方法一(最好但下载速度最慢):去GitHub下载SDK,可以出门办个事，因为时间实在是太太太漫长了……………(如果会科学上网应该好很多，不过没去研究它！有更好办法的小伙伴希望能交流一下哦)<br> git clone –recursive <a href="https://github.com/espressif/ESP8266_RTOS_SDK.git">https://github.com/espressif/ESP8266_RTOS_SDK.git</a><br>(图: 2.10从GitHub上下载相应SDK)</p><img src="/posts/2171885577/2.10%E4%BB%8EGitHub%E4%B8%8A%E4%B8%8B%E8%BD%BD%E7%9B%B8%E5%BA%94SDK.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二(拉下来总会异常):去Gittee码云上下载SDK，官方放一份到码云，但直–recursive拉取时总出现账户登录，试了很多次就放弃了！虽然下载速度很诱人，但……<br>方法三(下载别人已经打包好的文件)：网上找了些，但还是编译不通过！到时候我也贴出自己从GitHub下载好的SDK出来。<br>（图: 2.13打包好的SDK和编译链工具）</p><img src="/posts/2171885577/2.13%E6%89%93%E5%8C%85%E5%A5%BD%E7%9A%84SDK%E5%92%8C%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-下载编译链工具"><a href="#2-下载编译链工具" class="headerlink" title="2.  下载编译链工具"></a>2.  下载编译链工具</h2><p>方法一(我只找到最新的5.2.0版本)：到乐鑫官网下载编译工具链<br>方法二:网上其他人提供编译链工具，很多都是5.2.0工具。<br>方法三(我在使用):在SDK目录下有README.md,它提供了合适的编译工具链(图: 2.23从README下载正确版本编译链工具)</p><p>使用wget下载适合系统编译链工具(也可从其他地方下载，建议还是从本环境下载，因为其他地方下载不知道又会出什么幺蛾子，这苦也吃过了！)<br>wget <a href="https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz">https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz</a><br>(图: 2.23使用wget下载编译链工具到当前目录)</p><img src="/posts/2171885577/2.23%E4%BD%BF%E7%94%A8wget%E4%B8%8B%E8%BD%BD%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7%E5%88%B0%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>使用tar解压编译工具链<br>sudo tar zxvf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz<br>(图: 2.24解压编译工具链)</p><img src="/posts/2171885577/2.24%E8%A7%A3%E5%8E%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h1 id="三、设置工具链PATH和SDK的PATH并检查其合法性"><a href="#三、设置工具链PATH和SDK的PATH并检查其合法性" class="headerlink" title="@三、设置工具链PATH和SDK的PATH并检查其合法性"></a>@三、设置工具链PATH和SDK的PATH并检查其合法性</h1><h2 id="1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH"><a href="#1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH" class="headerlink" title="1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):"></a>1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):</h2><p>打开~&#x2F;.bashrc文件: sudo vim ~&#x2F;.bashrc在末尾并添加这两个PATH<br>export PATH&#x3D;$PATH:$HOME&#x2F;esp8266&#x2F;xtensa-lx106-elf&#x2F;bin<br>export IDF_PATH&#x3D;”$HOME&#x2F;esp8266&#x2F;ESP8266_RTOS_SDK”<br> 最后wq保存退出, 注销并重新登录或者直接使用命令source  ~&#x2F;.bashrc使环境更新(图: 3.11更新PATH环境)</p><img src="/posts/2171885577/3.11%E6%9B%B4%E6%96%B0PATH%E7%8E%AF%E5%A2%83.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="2-检查PATH环境合法性"><a href="#2-检查PATH环境合法性" class="headerlink" title="2.  检查PATH环境合法性"></a>2.  检查PATH环境合法性</h2><p>检查编译工具链(图: 3.20检查编译工具链PATH): echo $PATH<br> 检查SDK(图: 3.21检查SDK的PATH): echo $IDF_PATH</p><img src="/posts/2171885577/3.21%E6%A3%80%E6%9F%A5SDK%E7%9A%84PATH.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0"><a href="#3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0" class="headerlink" title="3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0"></a>3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0</h2><p>xtensa-lx106-elf-gcc -v</p><img src="/posts/2171885577/3.30%E6%9F%A5%E7%9C%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE%E7%89%88%E6%9C%AC%E5%8F%B7.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><p>小坑总结:至此，Ubuntu环境编译搭建基本告一段落！1、编译工具链下载要匹配，我就有好多次下载的是5.2.0版本工具链来编译最新SDK导致各种莫名其妙问题！2、设置PATH一定要做好，不一定非要用我这个办法，网上也有很多，不过经过多次测试后还是觉得这种方式好一些！！</p><h1 id="四、编译hello工程文件"><a href="#四、编译hello工程文件" class="headerlink" title="@四、编译hello工程文件"></a>@四、编译hello工程文件</h1><p>走到这一步你是否已经觉得胜利女神在向你招手了吗？是否觉得万无一失了呢？反正当初我是这么觉得的！不过遭受N多次毒打之后，现在没到程序烧录并跑起来前都不会掉以轻心！<br>为什么说到这一步还是很多问题呢？因为网上很多很多教程到这一步就基本成功，但^&#x3D;^不知为啥，到这一步后编译make还是出现各种缺失问题！以前是SDK或者编译工具链问题，之后就应该不会，然而网上这方面资料又寥寥无几！<br>直到经过好多好多好多次重装Ubuntu重新搭建编译环境，基本在绝望的边缘后！某天中午偶然去看官方文档，发现他们在新SDK架构上引入了install.sh机制,才解决了问题!<br>方法一:安装所需的Python软件包(我自己安装好也还是编译不通过)，网上很多方法就是这个，requirements.txt文件是在SDK根目录下，包含所需环境软件:<br>python -m pip install –user -r $IDF_PATH&#x2F;requirements.txt<br>（图: 4.10安装Python所需要环境程序）</p><img src="/posts/2171885577/4.10%E5%AE%89%E8%A3%85Python%E6%89%80%E9%9C%80%E8%A6%81%E7%8E%AF%E5%A2%83%E7%A8%8B%E5%BA%8F.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二:进入SDK根目录,运行(这相当于一键配置,我是用这个方法配置成功了),其实这个方法也十分十分漫长，网络不好可能还要很多次安装!这其实也挺看运气的！<br>.&#x2F;install.sh<br>（图: 4.11使用install自动安装环境软件）</p><img src="/posts/2171885577/4.11%E4%BD%BF%E7%94%A8install%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E8%BD%AF%E4%BB%B6.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后进入hello_world文件进行make编译,第一次编译时间比较长,以后就快了！其它往后相关操作网上有很多人写好资料了！<br>cd $IDF_PATH&#x2F;examples&#x2F;get-started&#x2F;hello_world<br>（图: 4.12对hello_world编译make结果0）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C0.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果1）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C1.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果2）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C2.png" class="" title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后就是make falsh烧录以及make monitor进行串口监听了！</p><hr><p>技术总结：<br>@一、下载的SDK_IDF必须要完整！必须要包含子模块！！<br>@二、编译工具链一定要匹配所使用的SDK！<br>@三、该安装的环境软件一个都不能少，在哪儿报错就得先处理好它！<br>@四、需要耐心和细心！需要耐心和细心！！需要耐心和细心！！！</p><hr><p>相关链接：<br><a href="http://qizhuqukanhai_1.gitee.io/myblog/">个人博客</a><br><a href="https://blog.csdn.net/zml3589110/article/details/109319118">CDSN</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> ESP8266 </category>
          
          <category> 乐鑫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> ESP8266 </tag>
            
            <tag> 物联网 </tag>
            
            <tag> linux </tag>
            
            <tag> 乐鑫 </tag>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Ubuntu并设置共享和Xshell</title>
      <link href="/posts/3271392839.html"/>
      <url>/posts/3271392839.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装Ubuntu"><a href="#一、安装Ubuntu" class="headerlink" title="一、安装Ubuntu"></a>一、安装Ubuntu</h1><p>先到官网下载Ubuntu安装镜像文件(本次下载的是ubuntu-20.04.1-desktop-amd64.iso) ,使用Oracle VM VirtualBox虚拟机,配置如下:</p><p>一直一键下一步就安装好了！<br>安装好之后使用sudo apt update来更新Ubuntu系统</p><p>经过漫长更新等待… …(大约半个钟,理论上应该取决于网络环境)后更新完毕！</p><hr><h1 id="二、安装Xshell的SSH客户端服务功能"><a href="#二、安装Xshell的SSH客户端服务功能" class="headerlink" title="二、安装Xshell的SSH客户端服务功能"></a>二、安装Xshell的SSH客户端服务功能</h1><p>  更新完系统后执行sudo apt install ssh命令进行Ubuntu端安装,这个安装快很多很多…</p><p>安装完成后</p><p>然后安装net-tool工具sudo apt install net-tools进行安装</p><p>最后把虚拟机的网卡连接方式设置成桥接网卡模式:</p><p>最后使用指令ifconfig指令查询本机网卡地址,用于SSH连接:</p><hr><h1 id="三、转到Xshell进行连接-填入相应的IP地址"><a href="#三、转到Xshell进行连接-填入相应的IP地址" class="headerlink" title="三、转到Xshell进行连接:填入相应的IP地址"></a>三、转到Xshell进行连接:填入相应的IP地址</h1><p>点击连接后即可进行连接:</p><hr><h1 id="四、安装虚拟机和Windows文件共享"><a href="#四、安装虚拟机和Windows文件共享" class="headerlink" title="四、安装虚拟机和Windows文件共享"></a>四、安装虚拟机和Windows文件共享</h1><h2 id="4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可"><a href="#4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可" class="headerlink" title="4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可"></a>4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可</h2><p>然后设置设备—共享文件夹—选择自动挂载和固定分配—然后确定(此时Windows和Ubuntu已经实现共享)</p><p>一切顺利的话，打开Ubuntu的media文件夹会出现以下共享文件(sf_share)</p><h2 id="4-2-验证共享功能"><a href="#4-2-验证共享功能" class="headerlink" title="4-2:验证共享功能:"></a>4-2:验证共享功能:</h2><p>打开刚刚连接好的Xshell并打开mnt文件夹并新建共享映射文件夹share(可以自己定义)<br>cd &#x2F;mnt&#x2F;<br>sudo mkdir share</p><p>最后建立并挂载映射关系sudo mount -t vboxsf share share&#x2F;</p><p>即可查看管理Windows下共享的文件！</p><hr><hr><p>技术总结：<br>@一:下载安装基本没难度，根据提示一般都能完成！<br>@二：若是纯净系统也基本能装得上。<br>@三：根据Xshell使用说明填写即可。<br>@四：之前不是纯净系统时，安装增强功能总失败，然后新系统就不存在该问题！还要注意共享模式的设置！</p><hr><p>相关链接：<br><a href="https://blog.csdn.net/zml3589110/article/details/108954649">CDSN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tupian</title>
      <link href="/posts/3935749953.html"/>
      <url>/posts/3935749953.html</url>
      
        <content type="html"><![CDATA[<img src="/posts/3935749953/aaa.jpg" class="" title="aaa"><p>写博客时适当的添加图片是很有效率的一种做法，也会让别人更容易明白你想表达的意思。</p><p>如果你的博客也是通过Hexo框架建立的，在使用初期你可能也遇到过和我相似的问题：在一个.md文件中添加的图片并没有在预览中显示出来，下面分享一种解决此问题的方法：</p><p>修改博客配置。<br>下载插件。<br>修改博客配置<br>修改博客根目录中_config.yml文件的配置项post_asset_folder为true：</p><p>post_asset_folder: true</p><p>完成此设置后，当你通过hexo new 文件名新建博客后，会产生一个和文件同名的文件夹。</p><p>image.png<br>下载插件<br>在博客根目录中下使用npm安装插件：</p><p>npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save</p><p>示例<br>当文章需要添加图片时，将需要添加的图片放入同名的文件夹中，同时通过相对路径索引到该图片。</p><p>例如我在上方修改博客配置中展示的那张图片的md源码为：</p><p>*[·-·]:<img src="/./%E8%A7%A3%E5%86%B3Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/1580801930220.png" alt="示例"><br>使用命令hexo s开启服务，若无报错在本地可以看到图片在博客中正确显示。</p><p>作者：Gsdxiaohei<br>链接：<a href="https://www.jianshu.com/p/ea78bdd0551f">https://www.jianshu.com/p/ea78bdd0551f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>*[·-·]:注释内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>这是我的第一个Blog尝试</title>
      <link href="/posts/911816538.html"/>
      <url>/posts/911816538.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><h1 id="Reward"><a href="#Reward" class="headerlink" title="Reward"></a>Reward</h1><p>#reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！<br>wechatpay: <a href="http://p3dm71oa7.bkt.clouddn.com/wcpay.png">http://p3dm71oa7.bkt.clouddn.com/wcpay.png</a><br>alipay: <a href="http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg">http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg</a><br>#bitcoin: &#x2F;images&#x2F;bitcoin.png</p><p>#<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">=========================== 常用指令收集 ======================================</span><br><span class="line">//***挑选了常用指令***</span><br><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate<span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy<span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">一步到位</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br><span class="line">===============================================================================</span><br></pre></td></tr></table></figure><p>它来自:<a href="https://blog.csdn.net/qq_26975307/article/details/62447489">Server</a></p><p>以下是正文</p><!--more--><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line">全是静态文件，访问速度快；</span><br><span class="line">免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">等等；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 首次 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="/posts/3846156473.html"/>
      <url>/posts/3846156473.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><p>以下是正文</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li></ol><a id="more"></a><ol start="4"><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等；</li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
