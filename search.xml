<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>涂鸦WIFI基本开发(四)之涂鸦模组WBR3(RTL8720CF)程序下载</title>
      <link href="/posts/716589256.html"/>
      <url>/posts/716589256.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>**先根据 <a href="https://zml3589110.github.io/posts/4014484988.html">涂鸦WIFI基本开发(三)之TuyaOS环境搭建</a> 将环境搭建好 **</p></blockquote><h1 id="WBR-系列模组烧录授权方式"><a href="#WBR-系列模组烧录授权方式" class="headerlink" title="WBR 系列模组烧录授权方式"></a>WBR 系列模组烧录授权方式</h1><p>完成模组 SDK 固件开发后，您需要对模组进行烧录授权以实现连接云服务的能力。根据不同场景的需求，涂鸦提供以下两烧录授权方式:</p><blockquote><ol><li>烧录授权一体方案。该方案通过云模组烧录授权平台进行烧录和授权操作，适用于发布阶段。</li><li>烧录授权分立方案。该方案使用芯片烧录工具进行烧录操作，再使用云模组烧录授权平台授权，适用于开发阶段。</li></ol></blockquote><h2 id="烧录文件"><a href="#烧录文件" class="headerlink" title="烧录文件"></a>烧录文件</h2><p>该型号芯片编译后会生成 4 种如下所示的 .bin 文件。</p><blockquote><ol><li>flash_is.bin：boot + 用户区固件。</li><li>oem_rtl8720cf_light_ty_QIO_1.1.2.bin（生产固件）：boot+用户区固件+检测固件。</li><li>oem_rtl8720cf_light_ty_UA_1.1.2.bin：用户区固件。</li><li>oem_rtl8720cf_light_ty_UG_1.1.2.bin：升级区固件。</li></ol></blockquote><h2 id="适用芯片"><a href="#适用芯片" class="headerlink" title="适用芯片"></a>适用芯片</h2><p>适用于核心芯片为 RTL8720CF 的以下模组。<br>WBR1<br>WBR2<br><a href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy">WBR3</a><br>WBR2L<br>WBR3L</p><h2 id="方式一：烧录授权一体方案"><a href="#方式一：烧录授权一体方案" class="headerlink" title="方式一：烧录授权一体方案"></a>方式一：烧录授权一体方案</h2><p>该方案适用于发布阶段，由于涂鸦模组必要进行授权才能连接涂鸦平台，所以授权步骤无法省略。<br>该方案的总体流程如下：</p><ol><li>上传编译固件到 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 。</li><li>平台成固件 key，并基于固件 key 生成授权码。</li><li>使用云模组烧录授权平台进行烧录授权。</li></ol><h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/babfd04c09194a8e9fd41cb8143e25e8.png"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b7cd54dfa91a4a82a2c19f5301df7dc2.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">RX&#x2F;A13</td><td align="left">TX</td></tr><tr><td align="left">TX&#x2F;A14</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr></tbody></table><h3 id="上传固件"><a href="#上传固件" class="headerlink" title="上传固件"></a>上传固件</h3><ol><li>在 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 产品开发的第三步 硬件开发 中，单击 新增自定义固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/54d650e79d9244599d4115789f7feb1f.png"><ol start="2"><li>填写固件参数后，单击 确认。</li></ol><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left">务必和编译固件的名称一致。</td></tr><tr><td align="left">固件类型</td><td align="left">模组固件。</td></tr><tr><td align="left">其他参数</td><td align="left">根据实际情况或界面帮助填写。</td></tr></tbody></table><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/8a2c3ebe03f14fe78fd38a4cc516d853.png"><ol start="3"><li>在 已生成固件 区域中，选择 上传生产固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20210303/f7ebced38c1b4687ad8c28fc17c40df6.png"><ol start="4"><li>上传固件并单击 确定。</li></ol><ul><li>生产固件：上传文件名中带有 QIO 的 .bin 文件。</li><li>用户区固件：上传文件名中带有 UA 的.bin 文件。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/cd9657d6cd3d4f80b077d71ea08efabe.png"><ol start="5"><li>授权码获取+烧录<br>根据 PID 在平台获取授权码，参考 <a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u">烧录授权</a> 操作步骤章节内容下载安装 云模组烧录授权平台。</li></ol><p>烧录步骤为：</p><ol><li>先给模组断电。</li><li>在云模组烧录授权平台软件中，输入授权码后单击 <strong>运行</strong>。</li><li>烧录成功后，给模组上电。</li></ol><h2 id="方式二：烧录授权分立方案"><a href="#方式二：烧录授权分立方案" class="headerlink" title="方式二：烧录授权分立方案"></a>方式二：烧录授权分立方案</h2><p>该方案适用于开发阶段。该方案的特点是 <strong>授权一次，重复烧录</strong>。假如已经授权过一次，您只需要进行固件 demo 修改烧录，模组即能正常工作。</p><h3 id="硬件准备-1"><a href="#硬件准备-1" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/e45e43a46203480290ee6ba93608f3d9.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">A_0</td><td align="left">VCC3.3V</td></tr><tr><td align="left">LOG_RX</td><td align="left">TX</td></tr><tr><td align="left">LOG_TX</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr><tr><td align="left">RXD</td><td align="left">VCC3.3V</td></tr></tbody></table><p><strong>注意事项</strong></p><ul><li>烧录完成后，需要把 <em><strong>A_0</strong></em> 拔掉，并把用户 <em><strong>RX</strong></em> 接回用户串口的 <em><strong>RX</strong></em>。</li><li>烧录完成后，模组需要重新上电才可以正常使用。</li></ul><h3 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h3><p>下载并运行 <a href="https://images.tuyacn.com/smart/AmebaZ2_PGTool_v1.2.7/AmebaZ2_PGTool_v1.2.7.exe">RTL8720CF 芯片烧录工具</a>。<br>请注意以上红色标记区域：</p><ul><li>Port 参数项需要选择实际使用的串口。</li><li>Flash Pin 参数项需要选择 <code>PIN_B6_B12 </code>。</li><li>烧录过程中失败的话，可适当降低波特率。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/db1bb031375b4ed38811343d801796e3.png"><h3 id="下载说明"><a href="#下载说明" class="headerlink" title="下载说明"></a>下载说明</h3><p><strong>烧录步骤</strong></p><ol><li>先给模组断电。</li><li>打开烧录工具后，单击 <strong>Browse</strong> 后选择 <code>flash_is.bin</code>（boot+用户区固件）文件进行烧录。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/7b7d96c843b743f9b76ef6451f2ccfa0.png" alt="WBR 系列模组烧录授权"></li><li>烧录成功后，给模组上电。</li></ol><p><strong>注意事项</strong><br>需要确定模组在断电上电后是否处于烧录状态。如果没有出现下图所示内容，请检查接线 <strong>A_0</strong> 和 <strong>RX</strong> 是否接地。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/adbf286381bb4116bfb20adb260ea9ba.png" alt="WBR 系列模组烧录授权"></p><p><strong>下载</strong><br>下载截图如下：</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/3ffa912854dd46d5bdf54d3d839e64e6.png" alt="WBR 系列模组烧录授权"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>在 RTL8720CF 芯片烧录工具上更新固件时，每次都需要单击 <strong>Browse</strong>，不然会出现以下状态。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b51b2e984bf84bb2a8177cf4acd6f892.png" alt="WBR 系列模组烧录授权"></p><hr><h1 id="烧录方式补充说明"><a href="#烧录方式补充说明" class="headerlink" title="烧录方式补充说明"></a>烧录方式补充说明</h1><p>固件开发完成后，需要将固件和授权码烧录到设备内，才可以连接云服务。涂鸦提供多种烧录授权方式供您使用，您可在不同的开发阶段选择合适的烧录授权方式。</p><h2 id="烧录授权方案"><a href="#烧录授权方案" class="headerlink" title="烧录授权方案"></a>烧录授权方案</h2><p>根据不同的开发阶段、芯片类型和生产方式，涂鸦提供三种烧录授权方案，每种方案的详细说明如下：</p><h3 id="烧录授权一体方案"><a href="#烧录授权一体方案" class="headerlink" title="烧录授权一体方案"></a>烧录授权一体方案</h3><p>适用于使用涂鸦标准模组的开发者使用，固件需要维护在涂鸦 IoT 平台（选用涂鸦现有的模组固件或者将自己开发的模组固件上传至涂鸦 IoT 平台），根据生产方式的区别，通常有以下两种形式。</p><ul><li><p><strong>委托涂鸦进行烧录授权</strong></p><p>涂鸦出货已完成烧录授权的模组，您收到模组后可直接使用。</p></li><li><p><strong>自主进行烧录授权</strong></p><p>涂鸦提供云模组烧录工具+授权码+烧录说明+烧录工装制作说明等一系列资料，您可以参考涂鸦提供的资料自行对模组进行烧录授权。</p></li></ul><h3 id="烧录授权分立方案"><a href="#烧录授权分立方案" class="headerlink" title="烧录授权分立方案"></a>烧录授权分立方案</h3><p>适用于调试阶段和非涂鸦标准模组方案，使用芯片烧录工具烧录固件，涂鸦 <strong>云模组烧录授权平台</strong> 工具只用于授权。</p><ul><li><p><strong>调试阶段</strong></p><p>使用芯片烧录工具第一次烧录固件和授权码后，后续代码有更新，只需要重新烧录用户区固件，不会擦除授权码信息，方便调试。</p></li><li><p><strong>非涂鸦标准模组方案</strong></p><p>涂鸦<strong>云模组烧录授权平台</strong>工具不支持非涂鸦标准芯片烧录固件，只能使用原厂工具烧录固件，再使用<strong>涂鸦云模组授权平台</strong>工具进行授权。</p></li></ul><h3 id="产测-SDK-对接方案"><a href="#产测-SDK-对接方案" class="headerlink" title="产测 SDK 对接方案"></a>产测 SDK 对接方案</h3><p>适用于自身有完整的烧录生产体系的开发者，不使用 <strong>涂鸦云模组烧录授权平台</strong> 工具，通过涂鸦产测 SDK 对接自身生产烧录体系进行固件和授权码烧录，方案详细内容参考 <a href="https://developer.tuya.com/cn/docs/iot/smart-production/production-test-solution/production-test-docking-case/typical-production-test-cases/classic-case?id=K96ruma3lcaai">产测对接经典方案</a>。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>以下流程适用于使用涂鸦 <strong>云模组烧录授权码平台</strong> 工具烧录授权&#x2F;只授权方案。</p><h3 id="烧录软件准备"><a href="#烧录软件准备" class="headerlink" title="烧录软件准备"></a>烧录软件准备</h3><p>进入 <a href="https://pms.tuya.com/">涂鸦 PMS 生产工艺管理系统</a>，注册账号并登录，选择 <strong>软件下载</strong>，下载 <strong>生产解决方案</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/content-platform/hestia/1641436307ca840934acd.png" alt="烧录授权"></p><h3 id="烧录硬件环境搭建"><a href="#烧录硬件环境搭建" class="headerlink" title="烧录硬件环境搭建"></a>烧录硬件环境搭建</h3><p>根据芯片&#x2F;模组的烧录方式搭建硬件环境，不同协议的芯片烧录方式不同，通常可以分为以下三类。</p><ul><li><p><strong>Wi-Fi 模组烧录</strong></p><p>通常使用串口方式烧录授权，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">USB 转 TTL 工具</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">TX</td><td align="left">RX</td><td align="left"></td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>BLE 模组烧录</strong></p><p>通常使用芯片烧录器烧录固件 ，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">Telink 烧录器</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">SWS</td><td align="left">SWM</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>Zigbee 模组烧录</strong></p><p>通常使用 J-link 烧录固件，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">J-link 烧录器</td><td align="left">RST</td><td align="left">RESET</td></tr><tr><td align="left">SWDIO</td><td align="left">SWDIO</td><td align="left"></td></tr><tr><td align="left">SWCLK</td><td align="left">SWCLK</td><td align="left"></td></tr><tr><td align="left">3V3</td><td align="left">VCC</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li></ul><h3 id="烧录授权操作流程说明"><a href="#烧录授权操作流程说明" class="headerlink" title="烧录授权操作流程说明"></a>烧录授权操作流程说明</h3><ol><li><p>连接硬件到 PC 并安装相关驱动。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201216/a881e7fc191a44f5af3f027b2f5aa9c8.png" alt="烧录授权"></p></li><li><p>根据烧录授权方案，选择是否使用芯片烧录工具，并对上位机进行配置。</p><ul><li><p>烧录授权分立方案</p><p>a. 打开芯片烧录工具，按照操作说明烧录固件。<br>b. 配置上位机为只授权模式。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/a9b2eac98b8e4f338d1d2dee23ccdfaa.png" alt="烧录授权"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/09007a1f154443638cbc77d505a5c80f.png" alt="烧录授权"></p></li><li><p>烧录授权一体方案</p><p>配置上位机为烧录授权模式。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/38e65b2ab6594914b4c31a5946a71296.png" alt="烧录授权"></p></li></ul></li><li><p>选择串口信息，输入授权码，单击 <strong>运行</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/5e0225b48d4648cfa0e7a0b21e80fc2f.png" alt="烧录授权"></p><p>上位机会显示烧录的进度及结果，如果出现错误，可点击下方 <strong>错误详细</strong> 处查看原因，并根据提示进行内容，整改后重新烧录。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/145f417c572f4273a6d06eeaa6d7ff41.png" alt="烧录授权"></p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/b0fb20892ae145f7a3a46294280c6fa3.png" alt="烧录授权"></p></li></ol><hr><h1 id="烧录授权说明二"><a href="#烧录授权说明二" class="headerlink" title="烧录授权说明二"></a>烧录授权说明二</h1><p>通过涂鸦 IoT 开发平台免开发方案成功生成固件，或使用自定义开发方案生成固件并上传到涂鸦 IoT 开发平台后，下一步需要对模组进行烧录授权。</p><p>本文将详细讲解 3 种不同的烧录授权方式：</p><ul><li><p>自定义开发烧录授权：适用于发布阶段，使用自定义开发方式创建的产品。</p></li><li><p>三明治开发板方式烧录授权：仅适用于涂鸦三明治开发板的烧录授权。</p></li><li><p>使用原厂工具烧录：适用于开发阶段。方案的特点是<strong>授权一次，重复烧录</strong>。</p><p>下文中的生产凭证，授权码和 token 均描述同一事物。</p></li></ul><h2 id="烧录前准备"><a href="#烧录前准备" class="headerlink" title="烧录前准备"></a>烧录前准备</h2><p>烧录授权所需工具如下：</p><ul><li>申请 PMS 账号</li><li>下载「生产解决方案」</li><li>下载 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">BK 原厂烧录工具</a></li><li>一个 USB 转 UART 转换工具</li></ul><h3 id="注册-PMS-账号"><a href="#注册-PMS-账号" class="headerlink" title="注册 PMS 账号"></a>注册 PMS 账号</h3><p>选择个人开发者，按照系统注册指引填写相关信息后，你会收到涂鸦发送的审核成功邮件。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/PMS_1.png" alt="烧录授权"></p><h3 id="下载并安装生产解决方案"><a href="#下载并安装生产解决方案" class="headerlink" title="下载并安装生产解决方案"></a>下载并安装生产解决方案</h3><h4 id="下载生产解决方案"><a href="#下载生产解决方案" class="headerlink" title="下载生产解决方案"></a>下载生产解决方案</h4><p>审核通过后，输入账号和密码登录<a href="https://pms.tuya.com/login">涂鸦 PMS 系统</a>。登录成功后，选择 <strong>知识库管理</strong> &gt; <strong>软件下载</strong> &gt; <strong>生产解决方案</strong>，下载<strong>生产解决方案</strong>。</p><p><img src="https://images.tuyacn.com/content-platform/hestia/16529503994a1e6b5a737.png" alt="烧录授权"></p><h4 id="安装生产解决方案"><a href="#安装生产解决方案" class="headerlink" title="安装生产解决方案"></a>安装生产解决方案</h4><ol><li><p>双击<strong>生产解决方案</strong>安装包，会现下面的警告，单击<strong>更多信息</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_1.png" alt="烧录授权"></p></li><li><p>单击<strong>仍要运行</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_2.png" alt="烧录授权"></p></li><li><p>根据自身需求，设置程序安装的位置，建议不要有中文路径。</p></li><li><p>完成安装后，启动<strong>生产解决方案</strong>，登录账号和密码同涂鸦PMS系统（涂鸦智造）的账号和密码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_3.png" alt="烧录授权"></p></li><li><p>单击<strong>云模组</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/TYPYK_TYDA.png" alt="烧录授权"></p></li><li><p>检查安装情况。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_4.png" alt="烧录授权"></p><ul><li><p>红色框内为黄色，则说明安装成功。可<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#download">下载原厂烧录工具</a>。</p></li><li><p>红色框内全为白色，就需要对软进行如下设置，使它恢复正常。</p><p>(1) 单击 <strong>文件</strong> &gt; <strong>设置</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_5.png" alt="烧录授权"></p><p>(2) 在<strong>基础设置</strong>中，将箭头 ① 指向的<strong>多路选择</strong>的<strong>1*1</strong>选项改为<strong>1*2</strong>，再单击<strong>确认</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_6.png" alt="烧录授权"></p><p><strong>多路选择</strong>改变后，界面如下图所示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_7.png" alt="烧录授权"></p><p>(3) 将多路选择的<strong>1*2</strong>，改回到<strong>1*1</strong>，使两个黄色框变为一个黄色框，设置就完成了。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_8.png" alt="烧录授权"></p></li></ul></li></ol><h3 id="下载原厂烧录工具"><a href="#下载原厂烧录工具" class="headerlink" title="下载原厂烧录工具"></a>下载原厂烧录工具</h3><ul><li>单击 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">bk_writer_gui_V1.6.3</a> 下载 Beken 原厂工具。</li></ul><h2 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h2><p>不同开发板或模组的烧录流程也不一样。如果使用的是涂鸦的三明治开发板，建议通过<strong>云模组</strong>工具进行烧录。</p><h3 id="自定义开发烧录授权"><a href="#自定义开发烧录授权" class="headerlink" title="自定义开发烧录授权"></a>自定义开发烧录授权</h3><p>此方案适用于 <strong>发布阶段</strong> ，使用自定义开发方式创建的产品，需要先将编译好的固件上传到涂鸦 IoT 开发平台，获取生产凭证（token）后，再使用<strong>云模组</strong>工具进行烧录授权。</p><p>涂鸦模组需要完成授权才能连接涂鸦平台，授权完成的模组如果需要烧录开发好的固件或更改后的固件，可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#original">使用原厂工具烧录</a>。</p><h4 id="上传固件-1"><a href="#上传固件-1" class="headerlink" title="上传固件"></a>上传固件</h4><ol><li><p>进入<a href="https://iot.tuya.com/pmg/list">涂鸦 IoT 开发平台</a>，单击已开发的产品，找到<strong>硬件开发</strong>。按照下图指示，单击<strong>新增自定义固件</strong>，再填写相关固件信息。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left"><strong>固件标识名</strong>必须和编译时的 <code>apps</code> 下的工程文件夹的名称保持一致。也就是说，如果这里的固件标识名填写为 <code>wifi_one_light</code> ，那么上传的固件应为 SDK 包中 <code>apps</code> 目录下的 <code>wifi_one_light</code> 文件夹中编译所生成的固件。</td></tr><tr><td align="left">Flash 大小</td><td align="left"><strong>Flash 大小</strong>为 <code>16Mbit</code>，也就是 2M 大小。关于不同模组的 flash 大小，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>。<strong>Note</strong>: 1 byte(字节) &#x3D; 8 bits(位)。 16 Mbit ÷ 8 &#x3D; 2M。</td></tr><tr><td align="left">没有被 ② 的框框圈到的参数</td><td align="left">使用默认设置。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_1.png" alt="烧录授权"></p></li><li><p>相关信息填写完成后，单击<strong>上传固件</strong>，进入下一步，开始上传固件。进行如下操作之后，单击<strong>保存</strong>。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件版本</td><td align="left">需要和编译时输入的版本号对应一致。</td></tr><tr><td align="left">生产固件</td><td align="left">上传包含 <code>QIO</code> 的 bin 文件。</td></tr><tr><td align="left">用户区固件</td><td align="left">上传包含 <code>UA</code> 的 bin 文件。</td></tr><tr><td align="left">升级固件</td><td align="left">上传包含 <code>UG</code> 的 bin 文件。</td></tr><tr><td align="left">运行模式</td><td align="left">运行模式选择 <code>QIO</code> 。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_2.png" alt="烧录授权"></p></li><li><p>单击<strong>进行固件上架</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_3.png" alt="烧录授权"></p></li><li><p>选择<strong>不限范围</strong>，单击<strong>确认上架</strong>。</p><p>选择<strong>不限范围</strong>是方便个人开发者管理产品。如果是公司将要量产的产品，请根据你的实际需求设置允许使用范围。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_4.png" alt="烧录授权"></p></li></ol><h4 id="获取生产凭证（token"><a href="#获取生产凭证（token" class="headerlink" title="获取生产凭证（token)"></a>获取生产凭证（token)</h4><p>将固件上传到涂鸦 IoT 开发平台，成功上架后，就可以免费领取激活码。使用激活码通过<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>单击<strong>免费领取激活码</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_1.png" alt="烧录授权"></p></li><li><p>交付方式选择<strong>生产凭证</strong>，单击<strong>提交订单</strong>。</p><ul><li><strong>生产凭证</strong>: 产测授权工具<strong>烧录授权</strong>功能读取的凭证编码，可自动抓取指定数量的授权码，随固件一起逐个写入设备。需上传生产固件至涂鸦 IoT 开发平台。</li><li><strong>授权码清单</strong>: 写着每一个授权码 UUID 及相关信息的表单，需自行逐个写入设备。</li><li><strong>生产凭证-仅授权</strong>: 产测授权工具<strong>独立授权</strong>功能读取的凭证编码，无需固件，即可对设备进行逐个授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_2.png" alt="烧录授权"></p></li><li><p>单击<strong>去订单列表页看看</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_3.png" alt="烧录授权"></p></li><li><p>确认箭头 ① 所指向信息是否正确。确认无误后，单击箭头 ② 的<strong>下载生产凭证</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_4.png" alt="烧录授权"></p></li><li><p>解压下载好的生产凭证，打开 <code>Token_information.txt</code> 文件，并复制生产凭证。</p></li><li><p>在<strong>云模组</strong>工具中输入生产凭证，并选择工位<strong>烧录授权</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_5.png" alt="烧录授权"></p><p>如果出现<code>获取 token 失败，没有操作权限</code>的错误，请参考<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#token">获取 token 失败，没有操作权限</a>中的解决办法。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p>生产凭证输入完成后，界面如下图所示。在<strong>基础信息</strong>一栏中显示固件的相关信息。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_6.png" alt="烧录授权"></p></li></ol><h4 id="烧录授权"><a href="#烧录授权" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>在<strong>云模组</strong>工具上根据按照箭头的指引，输入生产凭证，选择工位为<strong>烧录授权</strong>，并单击<strong>确定</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_3.png" alt="烧录授权"></p></li><li><p>按照下表通过 USB 转 UART 工具，把三明治开发板与电脑连接起来。</p><table><thead><tr><th align="center">USB 转 UART 引脚</th><th align="center">三明治 SoC 开发板引脚</th></tr></thead><tbody><tr><td align="center"><code>VCC</code></td><td align="center"><code>VCC</code></td></tr><tr><td align="center"><code>GND</code></td><td align="center"><code>GND</code></td></tr><tr><td align="center"><code>TX</code></td><td align="center"><code>RX</code></td></tr><tr><td align="center"><code>RX</code></td><td align="center"><code>TX</code></td></tr></tbody></table></li><li><p>选择烧录的串口，单击<strong>运行</strong>，然后马上给模组断电再上电或按下复位按键使模组重启，开始对模组进行烧录授权操作。</p><ul><li>重启模组时不要直接把串口工具从电脑上拔掉，避免造成烧录失败。建议拔掉再插上模组与串口工具连接的 VCC 和 GND 的杜邦线。</li><li>CBU 的三明治 SoC 开发板自带 CH304 串口芯片。在单击<strong>运行</strong>后，按下开发板上 USB 口复位按键即可重启芯片，开始烧录授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_4.png" alt="烧录授权"></p></li><li><p>（可选）如果在烧录授权过程中出现<strong>进入产测失败</strong>的错误，可能是因为该开发板在上一次烧录授权时已经累计连接到网络超过15分钟，设备此时关闭了产测功能，才导致无法进入产测，出现授权失败的情况。解决办法可参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#enter">进入产测失败</a>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_1.png" alt="烧录授权"></p></li></ol><h3 id="三明治开发板方式烧录授权"><a href="#三明治开发板方式烧录授权" class="headerlink" title="三明治开发板方式烧录授权"></a>三明治开发板方式烧录授权</h3><p>本方法仅适用于涂鸦三明治开发板的烧录授权。</p><p>在涂鸦 IoT 开发平台上使用免开发方案创建的产品只能通过绑定三明治 SoC 主控板，在三明治开发套件中申请授权码的方式申请到生产凭证（token）。如果账号没有绑定过三明治 SoC 主控板，只有涂鸦模组，既不能获取到免开发方案产品的 token ，也不能给模组烧录授权免开发方案的固件。</p><h4 id="绑定三明治开发板"><a href="#绑定三明治开发板" class="headerlink" title="绑定三明治开发板"></a>绑定三明治开发板</h4><p>打开<a href="https://iot.tuya.com/">涂鸦 IoT 开发平台</a>，单击<strong>产品</strong> &gt; <strong>开发者工具</strong> &gt; <strong>三明治开发板</strong> &gt; <strong>绑定开发板</strong>。在弹窗中，输入开发板上的 ID 和密码，即可完成绑定。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bound_sandwich_board_1.png" alt="烧录授权"></p><h4 id="三明治开发板获取-Token"><a href="#三明治开发板获取-Token" class="headerlink" title="三明治开发板获取 Token"></a>三明治开发板获取 Token</h4><p>绑定完成后，根据下方图片指示的顺序进行操作，选择要烧录的产品，单击<strong>申请新的授权码</strong>，便可成功申请到授权码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_1.png" alt="烧录授权"></p><h4 id="烧录授权-1"><a href="#烧录授权-1" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>复制从涂鸦 IoT 开发平台上获取到的授权码后，打开<strong>云模组</strong>工具。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_2.png" alt="烧录授权"></p></li><li><p>烧录授权可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#flash">烧录授权</a> ，进行操作。</p></li></ol><h3 id="使用原厂工具烧录"><a href="#使用原厂工具烧录" class="headerlink" title="使用原厂工具烧录"></a>使用原厂工具烧录</h3><p>此方案适用于开发阶段。方案的特点是 <strong>授权一次，重复烧录</strong>。方案需要确保模组在烧录前已完成授权，且烧录时要注意选择的 flash 区域，避免程序写入位置错误，导致程序无法正常运行。</p><p>在开发过程中，如果每次使用<strong>云模组</strong>工具对模组进行烧录授权，相对来说不太方便。如果模组已经完成授权，使用原厂工具进行烧录授权的方式，不但不会刷掉模组的授权信息，还可以达到 <strong>授权一次，重复烧录</strong> 的效果。</p><h4 id="Beken-平台"><a href="#Beken-平台" class="headerlink" title="Beken 平台"></a>Beken 平台</h4><p>使用此方法只能烧录应用区固件，无法给模组进行授权操作。可以使用该方法给已经授权过的模组进行烧录，避免每次更新代码生成固件后都要上传到涂鸦 IoT 开发平台使用<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>按照下图步骤，在箭头 ① 所指向的烧录对象中，根据实际烧录的模组选择对应的芯片型号，可在<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>查看相关模组规格书，确认模组使用的芯片型号。</p></li><li><p>单击箭头 ② 指向的<strong>浏览</strong>按钮，选择成功编译生成的包含了 <code>UA</code> 字样的 bin 文件（该文件就是应用区固件，这里选择的固件就是<code>wifi_one_light</code>）。</p></li><li><p>在箭头 ③ 和箭头 ④ 指向的<code>起始地址</code>中填入<code>0x00011000</code>，<code>操作长度</code>中填入<code>0x00119000</code>。</p></li><li><p>在箭头 ⑤ 指向的位置选择正确的烧录串口，将箭头 ⑥ 指向的<strong>通讯波特率</strong>调整为最高，可以加快烧录速度。</p></li><li><p>单击箭头 ⑦ 指向的<strong>烧录</strong>，给模组通断电或复位模组使模组重启，开始烧录。烧录完成后，更改后的代码就成功烧录到模组中。你可以不再使用<strong>云模组</strong>工具对该模组再次进行授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bk_writer_download.png" alt="烧录授权"></p></li></ol><h2 id="烧录授权-FAQs"><a href="#烧录授权-FAQs" class="headerlink" title="烧录授权 FAQs"></a>烧录授权 FAQs</h2><h3 id="获取-token-失败，没有操作权限"><a href="#获取-token-失败，没有操作权限" class="headerlink" title="获取 token 失败，没有操作权限"></a>获取 token 失败，没有操作权限</h3><p>输入生产凭证是，出现<code>获取 token 失败：没有操作权限</code>的提示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p><strong>解决办法</strong>：<br>如果出现该错误，需要登录 <a href="https://pms.tuya.com/">PMS 系统</a>，选择<strong>生产管理</strong> &gt; <strong>工单管理</strong> &gt; <strong>生产凭证确认</strong>，输入生产凭证，并单击<strong>确认</strong>。之后，回到<strong>云模组</strong>工具中输入该生产凭证，单击<strong>确认</strong>，即可开始烧录授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/no_operate_rights.png" alt="烧录授权"></p><h3 id="抢总线失败错误"><a href="#抢总线失败错误" class="headerlink" title="抢总线失败错误"></a>抢总线失败错误</h3><p>可能其它软件占用了烧录使用的串口。</p><p><strong>解决办法</strong>：<br>可以将烧录串口工具软件全部关闭，或直接插拔 USB 转 TTL 串口工具。</p><h3 id="获取固件指纹错误"><a href="#获取固件指纹错误" class="headerlink" title="获取固件指纹错误"></a>获取固件指纹错误</h3><p>在仅授权的场景下，会出现<strong>获取固件指纹错误</strong>的情况，如下图显示。错误原因是由于模组内烧录的固件名称或版本号与授权的固件名称或版本号不一致。</p><p><strong>解决办法</strong>：</p><ol><li><p>输入与模组固件名称和版本号一致的生产凭证（token），再进行授权处理。</p></li><li><p>对该模组进行烧录授权处理（非仅授权）。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/error_get_firmware_fingerprint.png" alt="烧录授权"></p></li></ol><h3 id="进入产测失败"><a href="#进入产测失败" class="headerlink" title="进入产测失败"></a>进入产测失败</h3><p>设备累计联网时间超过 15 分钟后，会关闭产测功能。在烧录授权过程中，如果出现<strong>进入产测失败</strong>的错误，并且日志中有 <code>have actived over 15 min, not enter mf_init</code> 字样的日志打印，说明设备关闭了产测功能。</p><p><strong>解决办法</strong>：<br>你需要先擦除 flash 中的相关数据才能授权成功。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_3.png" alt="烧录授权"></p><h4 id="修改代码（通用方式）"><a href="#修改代码（通用方式）" class="headerlink" title="修改代码（通用方式）"></a>修改代码（通用方式）</h4><p>进入产测失败时，可以在 <code>tuya_device.c</code> 文件 <code>pre_device_init()</code> 函数内调用 <code>mf_test_ignore_close_flag() ;</code>函数，忽略产测关闭标志，从而避免因为产测关闭而无法通过授权。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_4.png" alt="烧录授权"></p><h4 id="Beken-系列，使用原厂工具擦除相关数据"><a href="#Beken-系列，使用原厂工具擦除相关数据" class="headerlink" title="Beken 系列，使用原厂工具擦除相关数据"></a>Beken 系列，使用原厂工具擦除相关数据</h4><p>打开 Beken 原厂提供的烧录授权 <code>bk_writer</code> 工具，按照下图步骤将箭头 ① 指向的<strong>烧录对象</strong>选项改为对应的芯片。关于模组芯片型号，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>的相关模组规格书。</p><p>三明治 SoC Beken 平台开发板介绍:</p><ul><li>WB3S: 烧录对象选择 BK7231</li><li>CBU: 烧录对象选择 BK7231N</li><li>起始地址：<code>0x001EE000</code>，操作长度：<code>0x00012000</code>。</li></ul><p>选择开发板烧录串口，单击<strong>擦除 Flash</strong>按钮，重启模块，开始擦除内存数据。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_2.png" alt="烧录授权"></p><hr><blockquote><p><strong>说明：本文是收集参考涂鸦官方文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/qq_38179373/article/details/112202787">涂鸦模组二次开发RTL8720CF</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/burn-and-authorize-wbr-series-modules?id=Ka78imt8pf85p#title-3-%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%9A%E7%83%A7%E5%BD%95%E6%8E%88%E6%9D%83%E4%B8%80%E4%BD%93%E6%96%B9%E6%A1%88">WBR 系列模组烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u#title-5-%E7%83%A7%E5%BD%95%E8%BD%AF%E4%BB%B6%E5%87%86%E5%A4%87">烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2">烧录授权(通用说明)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> rtl8720cf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(三)之TuyaOS环境搭建</title>
      <link href="/posts/4014484988.html"/>
      <url>/posts/4014484988.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、SDK-获取"><a href="#一、SDK-获取" class="headerlink" title="一、SDK 获取"></a>一、SDK 获取</h1><blockquote><p>在 涂鸦 IoT 平台 上完成了产品创建。探后在【硬件开发】页面选择好云模组WBR3后，即可在下载资料中找到对应的 SDK，点击【下载】</p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/332c4f488fd6014646cb96b17786bb7a.png"><p>得到相应压缩包 <font color="red">ty_iot_household_electrical_appliances_sdk_rtl8720cf_ameba_2.3.0</font> 就是本芯片相对应SDK，<br>在 README.md 中有相对应简介说明,SDK 目录结构说明以及使用说明等。</p><blockquote><p><strong>注意：压缩包需要在ubuntu上解压，否则很容易出现文件链接错误</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/c00f6bdb9bf47a2641ca1b40d392bf13.png"><h1 id="二、安装-VirtualBox-虚拟机"><a href="#二、安装-VirtualBox-虚拟机" class="headerlink" title="二、安装 VirtualBox 虚拟机"></a>二、安装 VirtualBox 虚拟机</h1><h2 id="第-1-步：软件下载"><a href="#第-1-步：软件下载" class="headerlink" title="第 1 步：软件下载"></a>第 1 步：软件下载</h2><ol><li>进入<a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a> 官网，单击红色框中  Windows hosts 的链接开始下载 VirtualBox 安装包。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/download_virtual_box.png"><ol start="2"><li>进入<a href="https://ubuntu.com/download/desktop">Ubuntu</a> 官网，下载 Ubuntu 系统镜像。这里下载的是 Ubuntu 20.04 （推荐使用 Ubuntu 18 及以上版本）作为开发编译环境<h2 id="第-2-步：安装-VirtualBox"><a href="#第-2-步：安装-VirtualBox" class="headerlink" title="第 2 步：安装 VirtualBox"></a>第 2 步：安装 VirtualBox</h2>点击安装包后直接按照 VirtualBox 软件的提示步骤即可安装完成。</li><li>双击下载好的 VirtualBox 安装包，出现下图界面，单击下一步。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_1.png"><ol start="2"><li>安装功能和安装位置。安装功能使用默认选项，一般不做改变。安装路径可以按照个人喜好进行设置。设置完成后，单击下一步，继续安装。<blockquote><p>如果你的电脑 C 盘空间足够，选择默认目录安装即可。如果电脑 C 盘空间不太充足或不想安装在 C 盘，单击 ① 箭头指向的浏览按钮，修改安装目录并单击下一步。在选择安装路径时，不建议安装路径中包含中文，避免在将来出现一些意想不到的情况。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_2.png"><ol start="3"><li>单击 下一步，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_3.png"><ol start="4"><li>单击 是，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_4.png"><ol start="5"><li>上述步骤配置完成后，单击 安装 开始安装软件。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_5.png"><ol start="6"><li>等待 VirtualBox 安装完成后，单击 完成，运行 VirtualBox。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_6.png"><h2 id="第-3-步：安装Ubuntu虚拟机"><a href="#第-3-步：安装Ubuntu虚拟机" class="headerlink" title="第 3 步：安装Ubuntu虚拟机"></a>第 3 步：安装Ubuntu虚拟机</h2><ol><li>VirtualBox 安装完成后，单击新建，开始创建虚拟机。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_1.png"><ol start="2"><li>名称输入 Ubuntu，下面的类型和版本会自动填充为对应的选项。这里使用的 Ubuntu 镜像为 Ubuntu20.04，所以类型应为Linux，版本应为Ubuntu（64-bit）。单击文件夹，选择其它，将要创建的虚拟机选择到你想要放的位置。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_2.png"><ol start="3"><li>为新创建的虚拟机分配合适的内存大小。<blockquote><p>根据使用的电脑配置情况进行分配，当然分配的内存大一点，虚拟机也会相对于流畅一点。这里使用的电脑内存大小为 16 GB，在实际分配的时候为它分配 4 GB（4096 MB）的内存大小。后续使用过程中，还可以再次修改内存大小。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_3.png"><ol start="4"><li>为将要创建的虚拟机分配合适的磁盘大小。<blockquote><p>根据自身电脑资源情况进行分配，这里为它分配 50 GB 的磁盘大小。在安装完成后，分配的磁盘空间大小也是可以修改的。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_4.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_6.png"><p>更改创建的磁盘文件所放置的文件夹，为虚拟机创建的磁盘大小设置为50 GB.</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_7.png"><ol start="5"><li>虚拟机的资源分配完成后，就可以开始为虚拟机安装 Ubuntu 系统了。单击箭头 ① 所指向光驱，选择下载完成的 Ubuntu 镜像，再单击箭头 ③ 所指向的启动按钮。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_8.png"><ol start="6"><li>安装 Ubuntu 时，建议语言设置为英文。如果设置为中文，在将来可能出现一些意想不到的问题。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_9.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_10.png"><ol start="7"><li>建议设置为最小安装，取消在安装过程中的下载更新，以加快镜像的安装速度。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_11.png"><ol start="8"><li>选择擦除磁盘并安装 Ubuntu，单击Install Now按钮，开始安装 Ubuntu。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_12.png"><ol start="9"><li>这一步会弹出将会对磁盘分区进行修改的提示，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_13.png"><ol start="10"><li>选择时区，默认为上海。可以不用做修改，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_14.png"><ol start="11"><li>输入用户名和密码，按照自身喜好进行设置就好。<blockquote><p><strong>此处设置的用户名和密码在后续步骤中将会多次用于认证操作。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_15.png"><ol start="12"><li>完成上述步骤后，根据界面提示重启电脑。重启后，软件会提示移除镜像安装光驱，此时单击ENTER。等待 VirtualBox 移除镜像安装光驱后，单击虚拟机并按下回车键等待虚拟机配置完成。<blockquote><p><strong>如果软件没有自动移除光驱镜像，您可以在进行手动移除。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_16.png"><ol start="13"><li>等待虚拟机开机完成后，输入密码即可进入 Ubuntu 的桌面虚拟机。</li></ol><h2 id="第-4-步：-安装增强工具"><a href="#第-4-步：-安装增强工具" class="headerlink" title="第 4 步： 安装增强工具"></a>第 4 步： 安装增强工具</h2><blockquote><p><strong>Ubuntu 安装成功后，为了能够更加方便地使用虚拟机，可以给虚拟机安装增强功能。安装成功后，支持共享粘贴板内容、屏幕自动调整分辨率等功能。</strong></p></blockquote><ol><li>在虚拟机界面，单击设备 &gt; 安装增强工具。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_1.png"><ol start="2"><li>单击Run，开始安装增强功能。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_2.png"><ol start="3"><li>等待软件提示 Press Return to close this window…，按下回车并重启虚拟机。此时，虚拟机的桌面大小会根据窗口大小，调整分辨率。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_3.png"><ol start="4"><li>选择 设备 &gt; 共享粘贴板 &gt; 双向 后，就可以在 Windows 上复制内容并在 Ubuntu 虚拟机中进行粘贴或者反向操作。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_4.png"><h1 id="三、安装编译工具"><a href="#三、安装编译工具" class="headerlink" title="三、安装编译工具"></a>三、安装编译工具</h1><blockquote><p><strong>注意：这里吃过亏，设置配置的编译环境是需要在ubuntu进行，否则会出现文件链接出现错误！因为之前 ESP8266 环境编译太久导致忘记了！环境跟源码是可以分开，在环境搭建好之后可以通过 WIN 共享来放置程序代码！</strong></p></blockquote><p>此时，我们还需要安装一些编译所必备的工具，才可以对涂鸦提供的 SDK 进行编译。<br>本文以 Samba 工具为例进行介绍。Samba 工具使我们能够在 Windows 下修改工程项目，在 Linux 下对修改后的工程进行编译，使用 Samba 工具提供的文件共享，也可以方便我们进行开发。<br>为什么不使用 VirtualBox 提供的共享文件夹功能而使用 Samba 工具来共享文件夹呢？因为 Linux 和 Windows 的文件系统是不一样的，如果使用 VirtualBox 上的共享文件夹，当你在 GitHub 上把 SDK 克隆到 VirtualBox 提供的共享文件夹中时，编译的时候可能会出现编译失败的问题。</p><h2 id="第-1-步：-修改下载源"><a href="#第-1-步：-修改下载源" class="headerlink" title="第 1 步： 修改下载源"></a>第 1 步： 修改下载源</h2><blockquote><p>为了使下载软件的速度更快，在安装软件前，先将下载源修改为国内源，以加快下载软件的速度。</p></blockquote><ol><li>打开 Software&amp;Updates。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_1.png"><ol start="2"><li>单击Download from后的选项框，选择选项框内的<strong>Other…</strong>选项。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_2.png"><ol start="3"><li>单击 Select Best Server，软件将自动为你选择最快的下载源。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_3.png"><ol start="4"><li>等待系统自动选择完成后，单击 Choose Server。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_4.png"><ol start="5"><li>单击 Close 后根据界面提示，再单击 Reload，等待系统刷新缓存完成。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_6.png"><ol start="6"><li>系统刷新缓存完成后，Ubuntu 的软件下载源成功更改为国内源。</li></ol><h2 id="第-2-步：下载编译依赖工具"><a href="#第-2-步：下载编译依赖工具" class="headerlink" title="第 2 步：下载编译依赖工具"></a>第 2 步：下载编译依赖工具</h2><p>在虚拟机中，单击右键并选择 <strong>Open in Terminal</strong> 来打开终端，再依次运行以下命令：</p><blockquote><p><strong>在输入命令后，可能会提醒你输入密码。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get upgrade -y</span><br><span class="line">sudo apt-get install net-tools build-essential wget git python libc6-i386</span><br></pre></td></tr></table></figure><p>至此，编译所需要的工具都已下载完成，可以在 Ubuntu 下编译涂鸦的 SDK 了。</p><h2 id="第-3-步：-安装-Samba"><a href="#第-3-步：-安装-Samba" class="headerlink" title="第 3 步： 安装 Samba"></a>第 3 步： 安装 Samba</h2><blockquote><p>使用 Samba 在 Ubuntu 和 windows 之间进行文件共享。</p></blockquote><ol><li>在安装 Samba 之前，需要设置虚拟机的网络。先关闭虚拟机，然后按照下图中的步骤进行设置。<br>（1）选择 设置 &gt; 网络 &gt; 网卡2。<br>（2）在 网卡2 中选择 启动网络连接，连接方式选择 仅主机(Host-Only)网络。<br>（3）单击 确认 完成设置。</li></ol><blockquote><p><strong>注意：这里我使用的是桥接网卡模式，因为习惯使用这个方式，而且我的虚拟机也没网卡2</strong></p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_1.png"><ol start="2"><li>设置完成后打开虚拟机，输入下列命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><blockquote><p>这个是查看网卡信息</p></blockquote></li></ol><p>输入ifconfig 命令后得到电脑的 IP 地址，如下图显示：</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_2.png"><ol start="3"><li><p>输出下列命令，开始安装 Samba。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install samba cifs-utils samba-common</span><br></pre></td></tr></table></figure></li><li><p>Samba 安装完成后，需要创建 Ubuntu 和 Windows 可以互相访问的共享目录，并将共享目录的权限设置为可读可写可执行，依次执行下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /home/share/samba</span><br><span class="line">sudo chmod 777 -R /home/share/samba</span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，然后对 Samba 的配置进行修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>在文件尾部加入下列字段，然后保存退出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[share] </span><br><span class="line">path = /home/share/samba </span><br><span class="line">available = yes </span><br><span class="line">browseable = yes </span><br><span class="line">public = no</span><br><span class="line">writable = yes</span><br></pre></td></tr></table></figure><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_3.png"></li><li><p>输入下列命令，添加指定用户至 smb 用户组，然后按照提醒设置你 Samba 的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a xxxx <span class="comment">#(xxxx 为当前登录用户名，我这里xxxx就应该是y)</span></span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，重启 Samba：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service smbd restart</span><br></pre></td></tr></table></figure></li><li><p>在 Windows 下，打开我的电脑，根据上面获取到的信息，按照下面图片的格式，将 IP 地址换成你 Ubuntu 虚拟机上的 IP 地址，填写在箭头 ② 的位置。如果忘记了虚拟机的 IP 地址，可以在 Ubuntu 上输入 ifconfig 命令进行查询。</p><blockquote><p><strong>注意：这里建议修改成主机名字而不是IP地址，因网内路由分配是DNS随机分配IP地址，所以下次可能又要重新输入IP<br>例如我的是: yichen-VirtualBox 那么设置连接后为：<br>share (yichen-VirtualBox (yichen-VirtualBox server (Samba, Ubuntu)))</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_4.png"><ol start="9"><li>填入用户名和你设置的 Samba 密码。<blockquote><p><strong>建议勾选记住我的凭证，避免每次打开共享文件夹都要填写账号密码。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_5.png"><ol start="10"><li>至此，Samba 已经安装配置成功。</li></ol><h1 id="四、编译验证"><a href="#四、编译验证" class="headerlink" title="四、编译验证"></a>四、编译验证</h1><p>通过上面的步骤，已经将虚拟机基本设置完成。但为了验证对虚拟机的设置是否成功，我们需要获取涂鸦 SDK 进行编译，以验证我们已成功安装与编译相关的工具。<br>涂鸦 SDK 从涂鸦的 GitHub 仓库拉取和从涂鸦 IoT 开发平台下载。在下面的两种方式中选择一种进行编译验证即可。</p><h2 id="方式一：GitHub-上获取-SDK-进行验证"><a href="#方式一：GitHub-上获取-SDK-进行验证" class="headerlink" title="方式一：GitHub 上获取 SDK 进行验证"></a>方式一：GitHub 上获取 SDK 进行验证</h2><blockquote><p><strong>我在 Github 上找不到 WBR3 类型的 rtl8720cf 芯片，所以使用的是方式二，即开头的下载方式</strong></p></blockquote><p>以 BK7231N 的 SDK 为例进行演示。</p><ol><li>在 Ubuntu 虚拟机下，输入下列命令，获取 bk7231n 的 SDK：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/tuya/tuya-iotos-embeded-sdk-wifi-ble-bk7231n.git</span><br></pre></td></tr></table></figure></li><li>输入下列命令，开始编译 tuya_demo_template：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> tuya-iotos-embeded-sdk-wifi-ble-bk7231n/</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#该编译命令将会在下一部分进行介绍</span></span><br></pre></td></tr></table></figure></li><li>编译成功，则说明上述操作均已成功完成。编译成功如下图所示：</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/build_success.png"><h2 id="方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）"><a href="#方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）" class="headerlink" title="方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）"></a>方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）</h2><p>在<a href="https://iot.tuya.com/">涂鸦IoT 开发平台</a> 上成功创建自定义开发的产品后，在硬件开发中选择 TuyaOS，即可下载该模组的 SDK。</p><blockquote><p>详细步骤，可参考<a href="https://developer.tuya.com/cn/docs/iot/iot-platform?id=Kaytf2hpelxqs#title-5-%E7%AC%AC5%E6%AD%A5%EF%BC%9A%20%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91%E8%AE%BE%E7%BD%AE">产品创建</a> 内容。</p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_SDK_1.png"><p>将下载好的 SDK 复制到 Windows 和 Ubuntu 的共享文件夹中，在 Ubuntu 虚拟机中输入下列命令进行编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">tar -xzvf *.tar.gz <span class="comment">#注意：该命令会将当前目录下所有后缀名为.tar.gz的文件进行解压，建议将*.tar.gz改为你实际要解压的文件的完整名字</span></span><br><span class="line"><span class="built_in">cd</span> ty_iot_sdk_bk7231n_2.3.1</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#输入该命令将会在所需相关资源下载完成后开始编译</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：本文是收集参考涂鸦官方环境搭建文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/sandwich_iot/article/details/124094533?spm=1001.2014.3001.5502">涂鸦蓝牙SDK开发系列教程——3.环境搭建</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/SoC-redevelopment_Windows?id=Kauqrxxka0wv6">环境搭建（Windows）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> ubuntu </tag>
            
            <tag> VirtualBox </tag>
            
            <tag> rtl8720cf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu无法访问github</title>
      <link href="/posts/969895767.html"/>
      <url>/posts/969895767.html</url>
      
        <content type="html"><![CDATA[<h1 id="查询github-com和github-global-ssl-fastly-net的ip地址"><a href="#查询github-com和github-global-ssl-fastly-net的ip地址" class="headerlink" title="查询github.com和github.global.ssl.fastly.net的ip地址"></a>查询github.com和github.global.ssl.fastly.net的ip地址</h1><blockquote><p>**可参考Windows github下拒绝访问的文章<br><a href="https://zml3589110.github.io/posts/774596022.html">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a><br>**</p></blockquote><blockquote><ol><li>地址查询已失效: <a href="https://ipaddress.com/website/github.com">https://ipaddress.com/website/github.com</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/4870f2d39d134a6994170100ccb346b8.png"><blockquote><ol start="2"><li><a href="https://ipaddress.com/website/github.global.ssl.fastly.net">https://ipaddress.com/website/github.global.ssl.fastly.net</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/f30c66da905740a6bb6123d0e82efdfd.png"><h1 id="修改hosts下的配置"><a href="#修改hosts下的配置" class="headerlink" title="修改hosts下的配置"></a>修改hosts下的配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><p><strong>添加如下两句：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">140.82.113.3 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><h1 id="重启network"><a href="#重启network" class="headerlink" title="重启network"></a>重启network</h1><blockquote><p>**注意：在20版本ubuntu没有这种启动方式，需使用 network-manager restart 命令<br>参考：Ubuntu常用命令之ubuntu20.04重启网络方法 **</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li><li><a href="https://blog.51cto.com/u_15242250/2856080">【终极方法，绝对有用】ubuntu 无法访问github.com的解决方法 </a></li><li><a href="https://blog.csdn.net/w09103419/article/details/121562044">Windows&#x2F;Ubuntu无法访问GitHub的解决方式</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu常用命令之ubuntu20.04重启网络方法</title>
      <link href="/posts/471655546.html"/>
      <url>/posts/471655546.html</url>
      
        <content type="html"><![CDATA[<h1 id="网上常用的重启办法会报错"><a href="#网上常用的重启办法会报错" class="headerlink" title="网上常用的重启办法会报错"></a>网上常用的重启办法会报错</h1><blockquote><p>配置完网络ip需要重启一下网络，网上搜了一下，大多用的这条命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 常用命令 </tag>
            
            <tag> network-manager restart </tag>
            
            <tag> 网络重启 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</title>
      <link href="/posts/774596022.html"/>
      <url>/posts/774596022.html</url>
      
        <content type="html"><![CDATA[<h1 id="出现-你的连接不是私密连接-原因"><a href="#出现-你的连接不是私密连接-原因" class="headerlink" title="出现[你的连接不是私密连接]原因"></a>出现[你的连接不是私密连接]原因</h1><blockquote><p>为了更快的访问github网站，一般都会在hosts文件中加入github.com对应的ip地址。<br>但在加入值之后可能会出现下图中的情况</p></blockquote><img src="https://img-blog.csdnimg.cn/20200721225543761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><blockquote><p>查看证书会发现这样一个问题:</p></blockquote><img scr="https://img-blog.csdnimg.cn/20200721225647922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>我查看百度几乎所有解决方案都没有效果，甚至一度怀疑被中间人攻击，到处查找证书的信息。将别人访问github.com的证书导出之后再导入我的证书管理，都无济于事。<br>最后发现问题出在hosts文件中追加的域名和ip地址不对应，我将github.com的ip地址写成了github.global.ssl.fastly.net对应的ip地址。<br>所以，在修改hosts文件时，需要将域名和ip地址对应正确，最好是两个都配置上，甚至github.com可以配置对个ip。这些域名对应的ip可以从<a href="https://www.ipaddress.com/%E5%A4%84%E6%9F%A5%E6%89%BE%E3%80%82">https://www.ipaddress.com/处查找。</a><blockquote><p><strong>主：自己网上方法也试了，只是增加IP地址的话还是不能访问，博主提供的这个网站也已经404，后来直接复制他的结果就解决了</strong></p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/20200721230940576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="2"><li>在搜索框中输入域名即可查看对应的ip<br>github.com对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231258768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="3"><li>github.global.ssl.fastly.net对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231501466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="4"><li>然后将以上两段ip放入hosts文件<br>hosts文件地址为: C:\Windows\System32\drivers\etc<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">199.232.69.194github.global.ssl.fastly.net</span><br><span class="line">140.82.114.4github.com</span><br></pre></td></tr></table></figure></li><li>最后在cmd命令行窗口执行刷新操作即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><h1 id="最后PING看结果"><a href="#最后PING看结果" class="headerlink" title="最后PING看结果"></a>最后PING看结果</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ipconfig /flushdns</span><br><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">已成功刷新 DNS 解析缓存。</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;ping github.com</span><br><span class="line"></span><br><span class="line">正在 Ping github.com [140.82.114.4] 具有 32 字节的数据:</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=232ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=239ms TTL=50</span><br><span class="line"></span><br><span class="line">140.82.114.4 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 231ms，最长 = 239ms，平均 = 233ms</span><br></pre></td></tr></table></figure></li></ol><p>查了很久，原本还会跳转到 Apache 服务上，后边停了就直接失败！最后找到博主这个方法，尝试后正常使用，记录下来以后方便能用上。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_29283569/article/details/107501508">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 问题收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Google Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE项目(一)之制作登录注册系统</title>
      <link href="/posts/2822623721.html"/>
      <url>/posts/2822623721.html</url>
      
        <content type="html"><![CDATA[<h1 id="账号登录部分"><a href="#账号登录部分" class="headerlink" title="账号登录部分"></a>账号登录部分</h1><blockquote><p>VUE HTML登录界面<br><strong>实现账号密码输入</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:60px;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../icon/vlogo.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:20rem;height:auto;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form middle&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名 / 邮箱&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;input type=&quot;password&quot; class=&quot;form-control input100&quot; v-model=&quot;usercode&quot; placeholder=&quot;密码&quot; @keyup.13=&quot;login&quot; /&gt; --&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input v-on:keyup.delete=&quot;confirmDelete&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">v-on:keyup.delete</span>=<span class="string">&quot;login&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123; errorMsg &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;a href=&quot;./registermobile.html&quot; class=&quot;btn btn-default btn100&quot;&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;Gotoregister&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:right;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./findpassword.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>找回密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span>         </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>© vchenzhe<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE JavaScript方法功能<br><strong>实现登录验证和路由跳转</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: <span class="built_in">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    userid:<span class="string">&#x27;33&#x27;</span>,</span><br><span class="line">    usercode:<span class="string">&#x27;55&#x27;</span>,</span><br><span class="line">    errorFlag:<span class="literal">false</span>,</span><br><span class="line">    errorMsg:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">      <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">        thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">          method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">          url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">          data:&#123;        </span><br><span class="line"></span><br><span class="line">            userid:thisvue.userid,</span><br><span class="line">            usercode:thisvue.usercode</span><br><span class="line">          &#125;,</span><br><span class="line"></span><br><span class="line">         &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">              thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">              <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">              thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">              thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">         </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,<span class="comment">// methods</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>PHP 数据处理<br><strong>接收来自 VUE 的数据并对接 mysql</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$myid</span>!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$mycode</span>!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$pwd</span>=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="variable">$pwd</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$conn</span> != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * FROM user_login where user_id=&#x27;<span class="subst">$myid</span>&#x27; or user_mail = &#x27;<span class="subst">$myid</span>&#x27; &quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> =<span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$resArray</span> = mysqli_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span> == <span class="literal">null</span>) &#123;<span class="keyword">goto</span> __ERENO_SSID;&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span>[<span class="string">&quot;user_password&quot;</span>] == <span class="variable">$mycode</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;chenzhe_user_id&#x27;</span>] = <span class="variable">$resArray</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;登陆成功&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">__ERENO_SSID:&#123;&#125;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;用户名或密码输入错误&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="variable">$conn</span>-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;<span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;mysql not connect&#x27;</span>];&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;请输入用户名或密码&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="账号注册部分"><a href="#账号注册部分" class="headerlink" title="账号注册部分"></a>账号注册部分</h1><blockquote><p>VUE HTML注册界面<br><strong>实现数据FORM表格界面输入和检测</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:2rem;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./indexmobile.html&quot;</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag==1&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123;errorMsg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span> <span class="attr">id</span>=<span class="string">&quot;registerForm&quot;</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testUserIdFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span>  <span class="attr">maxlength</span>=<span class="string">16</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testUserId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">maxlength</span>=<span class="string">10</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;昵称&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercodes&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkusercode&quot;</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testmailFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usermail&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usermail&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testmail&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:flex;&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;code&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;验证码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span>  <span class="attr">v-if</span>=<span class="string">&quot;testUserId==0||testpass==false||usermail==&#x27;&#x27;||testmail==false&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80 btn-disabled&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==0&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;testUserId==1&amp;&amp;testpass==true&amp;&amp;usermail!=&#x27;&#x27;&amp;&amp;testmail==true&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getCode&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-disabled btn80&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>已发送(&#123;&#123; clock &#125;&#125;s)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">             </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;register&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;myModalLabel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModalLabel&quot;</span>&gt;</span>消息<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      &#123;&#123; errorMsg &#125;&#125;</span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>  <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>电脑版<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE注册界面 JavaScript方法功能<br><strong>实现注册数据检测和POST数据功能</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;./js/jquery.js&#x27;</span>;<span class="keyword">import</span> <span class="string">&#x27;./css/mobilecommon.css&#x27;</span>;<span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;../node_modules/vue/dist/vue.js&#x27;</span>;$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"></span><br><span class="line">        el:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line"></span><br><span class="line">        data:&#123;</span><br><span class="line"></span><br><span class="line">            errorMsg:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            errorFlag:<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//填写注册信息</span></span><br><span class="line"></span><br><span class="line">            userid:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            username:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercode:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercodes:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usermail:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//验证注册信息</span></span><br><span class="line"></span><br><span class="line">            code:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            btnGetCode:<span class="number">0</span>, <span class="comment">//用于判断当前是否获取了一次验证码，默认是0，获取一次后改成1</span></span><br><span class="line"></span><br><span class="line">            testcode:<span class="number">0</span>, <span class="comment">//用于判断当前是否完成了验证码验证，默认是0，验证通过是1</span></span><br><span class="line"></span><br><span class="line">            clock:<span class="number">60</span>,</span><br><span class="line"></span><br><span class="line">            testUserId:<span class="literal">false</span>,<span class="comment">//检测当前用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">            testpass:<span class="literal">false</span>,<span class="comment">//检测密码安全</span></span><br><span class="line"></span><br><span class="line">            testmail:<span class="literal">false</span>, <span class="comment">//检测邮箱是否被注册过了</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        methods:&#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testUserIdFunc</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检测用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^[a-zA-Z][a-zA-Z0-9]*$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(thisvue.userid)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;用户名必须以英文开头，且只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(thisvue.userid.length&lt;<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;用户名长度须在9-16之间&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;    </span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testUserId.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_id:thisvue.userid                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = res.msg;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">readInfo</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检索密码安全等</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> result = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^(?!\d+$)[\da-zA-Z]+$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usercode.length&lt;<span class="number">9</span>) <span class="comment">//检测长度</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码长度须在9-20个字符，只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(<span class="built_in">this</span>.usercode)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码只能使用英文+数字,且不能为纯数字&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                     </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/*else if(testenglish.test(this.usercode))</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorFlag = 1;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorMsg = &#x27;密码不能为纯数字&#x27;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    result = 0;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#125;*/</span></span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(result==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.testpass = <span class="number">1</span>;<span class="comment">//如果密码验证成功，则通过</span></span><br><span class="line"></span><br><span class="line">                &#125; </span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.verifyCode();</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/register.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:$(<span class="string">&quot;#registerForm&quot;</span>).serialize(),</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;注册失败&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;                </span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">getCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//获取验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.userid==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.username==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercode==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercodes==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usermail==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;请填写全部的信息后获取验证码&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.btnGetCode = <span class="number">1</span>; <span class="comment">//把获取验证码按钮禁用</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> timer1 = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;thisvue.clock=thisvue.clock-<span class="number">1</span>;&#125;,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="built_in">clearInterval</span>(timer1);</span><br><span class="line"></span><br><span class="line">                        thisvue.btnGetCode=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                        thisvue.clock=<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;,<span class="number">60000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//发送邮件</span></span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/sendMail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">async</span>:<span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            address:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;我们发送了一封邮件到你的邮箱，请尽快验证&#x27;</span></span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">verifyCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//验证验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue =<span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.code&gt;<span class="number">100000</span>&amp;&amp;thisvue.code&lt;<span class="number">999999</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/verifyCode.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;<span class="attr">code</span>:thisvue.code&#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testcode=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg=<span class="string">&#x27;验证码不正确，请重新输入&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testmailFunc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usermail!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="built_in">this</span>.usermail.indexOf(<span class="string">&#x27;@&#x27;</span>)!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testmail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_mail:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;此邮箱已被注册,换个邮箱试试吧&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>PHP注册数据功能<br><strong>实现注册数据接收处理</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$_POST</span>[userid];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[usercode]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myname</span> = <span class="variable">$_POST</span>[username];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mymail</span> = <span class="variable">$_POST</span>[usermail];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$gm</span> = <span class="string">&#x27;vchenzhecom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;47.106.190.129:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;52F7cbad94f2&quot;</span>, <span class="string">&quot;personal&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test</span> = <span class="string">&quot;SELECT * FROM user_login WHERE `user_id` = &#x27;<span class="subst">$myid</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$testResult</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$test</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$testResult</span>)==<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$path</span>=<span class="string">&quot;/home/www/htdocs/carelesswhisper/src/img/&quot;</span>.<span class="variable">$myid</span>; <span class="comment">//判断目录存在否，存在给出提示，不存在则创建目录</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$path</span>))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;覆盖用户目录&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="comment">//第三个参数是“true”表示能创建多级目录，iconv防止中文目录乱码</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$res</span>=mkdir(iconv(<span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;GBK&quot;</span>, <span class="variable">$path</span>),<span class="number">0777</span>,<span class="literal">true</span>); </span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;注册成功&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot; INSERT INTO user_login VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$mycode</span>&#x27;,&#x27;<span class="subst">$myname</span>&#x27;,&#x27;<span class="subst">$mymail</span>&#x27;,&#x27;imageFile/image.jpg&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;0&#x27;) &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$gm</span>&#x27;,&#x27;<span class="subst">$myid</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$gm</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"></span><br><span class="line">         </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;此用户名已被使用&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>]=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="后端PHP数据接口参考"><a href="#后端PHP数据接口参考" class="headerlink" title="后端PHP数据接口参考"></a>后端PHP数据接口参考</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>);</span><br><span class="line">    error_reporting(E_ALL &amp; ~E_NOTICE);</span><br><span class="line">    <span class="comment">//header(&quot;Content-type: text/html; charset=gbk&quot;);</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意：</span></span><br><span class="line"><span class="comment">            本php是gbk编码的，因为mysise就是gbk编码没办法</span></span><br><span class="line"><span class="comment">            json_encode()里面的值要先转换为utf-8才能被识别</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="variable">$user</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    <span class="variable">$pass</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line">    <span class="variable">$sise_cookie</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;sise_cookie&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//echo $_POST[&#x27;sise_cookie&#x27;];</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//测试账号110</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>&amp;&amp;<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./user.php&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//登录页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;login&#x27;</span>)&#123;            </span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;number=<span class="subst">$user</span>&amp;pwd=<span class="subst">$pass</span>&quot;</span>;              </span><br><span class="line">        <span class="variable">$scse_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录scse</span></span><br><span class="line">        <span class="variable">$scse_url</span>=<span class="string">&quot;http://my.scse.com.cn/login_pro.asp&quot;</span>;               </span><br><span class="line">        LinkCurl(<span class="variable">$scse_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$scse_cookie</span>);                  </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取管理系统隐藏字段</span></span><br><span class="line">        <span class="variable">$sise_login_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login.jsp&quot;</span>;            </span><br><span class="line">        <span class="variable">$sise_login_html</span>=getCurlCon(<span class="variable">$sise_login_url</span>,<span class="variable">$scse_cookie</span>);</span><br><span class="line">        preg_match(<span class="string">&#x27;/&lt;input type=\&quot;hidden\&quot; name=\&quot;(.*)\&quot;  value=\&quot;(.*)\&quot;&gt;/&#x27;</span>, <span class="variable">$sise_login_html</span>,<span class="variable">$arr</span>);   </span><br><span class="line">        <span class="comment">//print_r($arr);</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录管理系统</span></span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;username=<span class="subst">$user</span>&amp;password=<span class="subst">$pass</span>&amp;<span class="subst">$arr</span>[1]=<span class="subst">$arr</span>[2]&quot;</span>; </span><br><span class="line">        <span class="variable">$sise_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line">        <span class="variable">$sise_login_check_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login_check.jsp&quot;</span>;        </span><br><span class="line">        LinkCurl(<span class="variable">$sise_login_check_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$sise_cookie</span>); </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;((.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*))&lt;\/span&gt;/&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">            <span class="comment">//登录成功后保存用户数据</span></span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]= <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;user&#x27;</span> =&gt; <span class="variable">$user</span>,</span><br><span class="line">                <span class="string">&#x27;pass&#x27;</span> =&gt; <span class="variable">$pass</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//课程表页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;course&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*)&lt;\/span&gt;/U&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        preg_match_all(<span class="string">&quot;/&lt;td width=\&#x27;10%\&#x27; align=\&#x27;left\&#x27; valign=\&#x27;top\&#x27; class=\&#x27;font12\&#x27;&gt;(.*)&lt;\/td&gt;/U&quot;</span>, <span class="variable">$course_html</span>,<span class="variable">$course</span>);</span><br><span class="line">        <span class="variable">$res_course</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">8</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">7</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">7</span>+<span class="number">7</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] == <span class="string">&#x27;&amp;nbsp;&#x27;</span>) <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$k</span>!=<span class="number">5</span> &amp;&amp; <span class="variable">$k</span>!=<span class="number">6</span>) &#123;</span><br><span class="line">                    <span class="variable">$res_course</span>[<span class="variable">$i</span>][<span class="variable">$k</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                &#125;   </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;info&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&quot;stuNum&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">1</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;name&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;grade&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">3</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;major&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">4</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">&quot;course&quot;</span> =&gt; <span class="variable">$res_course</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">        <span class="comment">//print_r($res_course);</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//查找老师页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;teacher&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// gei请求的name查询字符串</span></span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="comment">//获取老师的json数据库</span></span><br><span class="line">        <span class="variable">$data</span> = json_decode(file_get_contents(<span class="string">&quot;./json/teacher.json&quot;</span> ));</span><br><span class="line">        <span class="comment">//老师的信息</span></span><br><span class="line">        <span class="variable">$arr</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//响应数据</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//查询json数据库</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$data</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="variable">$i</span>]-&gt;name == <span class="variable">$name</span>)&#123;</span><br><span class="line">                <span class="variable">$arr</span> = <span class="variable">$data</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断查询数据</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$arr</span>))&#123;</span><br><span class="line">            <span class="comment">//如果工号为三位就前面加个0</span></span><br><span class="line">            <span class="keyword">if</span>(mb_strlen(<span class="variable">$arr</span>-&gt;num) ==<span class="number">3</span> )&#123;</span><br><span class="line">                <span class="variable">$arr</span>-&gt;num = <span class="string">&quot;0&quot;</span>.<span class="variable">$arr</span>-&gt;num;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="variable">$arr</span></span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>()</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//考勤信息页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;attendance&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$main_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_states/student_select_class/main.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$main_html</span>=getCurlCon(<span class="variable">$main_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/window\.location=\&#x27;\.\.\/\.\.\/\.\.\/\.\.\/\.\.\/(.*)\&#x27;\&quot;/Um&#x27;</span>, <span class="variable">$main_html</span>,<span class="variable">$main</span>);</span><br><span class="line">        <span class="variable">$attendance_url</span>=<span class="string">&#x27;http://class.sise.com.cn:7001/&#x27;</span>.<span class="variable">$main</span>[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="variable">$attendance_html</span> = getCurlCon(<span class="variable">$attendance_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        <span class="comment">//print_r($attendance_html);</span></span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td&gt;(.*)(\d+)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$count</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td align=\&quot;center\&quot;&gt;(.*)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$attendance</span>);</span><br><span class="line">        <span class="variable">$res_attendance</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$attendance</span>[<span class="number">1</span>])/<span class="number">3</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">3</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">3</span>+<span class="number">3</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">switch</span> (<span class="variable">$k</span>) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;num&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;name&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="comment">//匹配请假次数</span></span><br><span class="line">                        preg_match_all(<span class="string">&#x27;/\[&lt;a href=\&#x27;(.*)\&#x27;&gt;(.*)&lt;\/a&gt;\]/U&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="variable">$count</span>);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>].<span class="string">&#x27;次&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;                  </span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;                               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;total&quot;</span> =&gt; <span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>],</span><br><span class="line">                <span class="string">&quot;list&quot;</span> =&gt; <span class="variable">$res_attendance</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">LinkCurl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$curlpost</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);                   </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$curlpost</span>);            </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEJAR, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        curl_exec(<span class="variable">$curl</span>);                          </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录后获取页面内容函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCurlCon</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);             </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEFILE, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        <span class="variable">$data</span>=curl_exec(<span class="variable">$curl</span>);    </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.php.cn/php-ask-485509.html">vue加php怎么实现登陆</a></li><li><a href="https://www.mk2048.com/blog/blog_bab1ika2ij2j.html">Vue+php 后端PHP登录接口编写</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
          <category> mysql </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> php </tag>
            
            <tag> mysql </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php接收来自POST数据</title>
      <link href="/posts/705713032.html"/>
      <url>/posts/705713032.html</url>
      
        <content type="html"><![CDATA[<h1 id="POST提交过来模式为-Request-Payload-的-json-类型数据"><a href="#POST提交过来模式为-Request-Payload-的-json-类型数据" class="headerlink" title="POST提交过来模式为 Request Payload 的 json 类型数据"></a>POST提交过来模式为 Request Payload 的 json 类型数据</h1><ol><li>从html发送过来的Payload格式为 Request Payload<blockquote><p>内容格式为：{“userid”: “33”,”usercode”: “55”}</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">     <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">     &#123;</span><br><span class="line">       thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">       thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">         method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">         url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">         data:&#123;</span><br><span class="line">           userid:thisvue.userid,</span><br><span class="line">           usercode:thisvue.usercode</span><br><span class="line">         &#125;,</span><br><span class="line">        &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">             thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">             <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">             thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">             thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">        </span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,<span class="comment">// method</span></span><br></pre></td></tr></table></figure></li><li>使用 file_get_contents(‘php:&#x2F;&#x2F;input’); 方式进行接收<blockquote><p>之前尝试使用 $_POST 模式接收 POST 过来的数据，但总得到的数据为空，找了很多方法才发现是类型不对！</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   session_start();</span><br><span class="line">   header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line">   </span><br><span class="line">   <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">   <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br></pre></td></tr></table></figure><h1 id="POST-提交过来模式为-Form-Data-单格式"><a href="#POST-提交过来模式为-Form-Data-单格式" class="headerlink" title="POST 提交过来模式为 Form Data 单格式"></a>POST 提交过来模式为 Form Data 单格式</h1></li></ol><blockquote><p>$_POST 变量预定义的 $_POST 变量用于收集来自 method&#x3D;”post” 的表单中的值。<br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。<br><strong>注释：然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）</strong></p></blockquote><ol><li>从html发送过来的Payload格式为 Form Data<blockquote><p>内容格式为：<br>userid: zm<br>username: zha<br>usercode: zm<br>checkusercode: zml<br>usermail: zhaoming</p></blockquote></li></ol><p><strong>请注意，表单域的名称会自动成为 $_POST 数组中的键</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">  <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line">    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    thisvue.verifyCode();</span><br><span class="line">    <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">      url:<span class="string">&quot;/api/myBlog/axios-register.php&quot;</span>,</span><br><span class="line">      <span class="comment">// type:&#x27;POST&#x27;,</span></span><br><span class="line">      method:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      data:$(<span class="string">&#x27;#registerForm&#x27;</span>).serialize(<span class="built_in">this</span>.serialize),  <span class="comment">//可以发送 FORM 类型数据了</span></span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res.data[<span class="string">&#x27;code&#x27;</span>]==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          alert(<span class="string">&quot;注册成功&quot;</span>)</span><br><span class="line">          <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">          thisvue.errorMsg = <span class="string">&#x27;注册失败:&#x27;</span>+res.data[<span class="string">&#x27;msg&#x27;</span>];</span><br><span class="line">          thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>不能使用 type:’POST’, 要不然接收不到数据<br>要使用 data:$(‘#registerForm’).serialize(this.serialize),<br>而非 data:this.$(“#registerForm”).serialize(),</strong></p></blockquote><ol start="2"><li>使用 $_POST 方式进行接收<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line">header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$myid</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line"><span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$myname</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$mymail</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;usermail&#x27;</span>];</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>注意：括号内使用的是单引号[‘’]而不是[“”]</strong></p></blockquote><h2 id="POST-简单试验说明"><a href="#POST-简单试验说明" class="headerlink" title="$_POST 简单试验说明"></a>$_POST 简单试验说明</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;welcome.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fname&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Age:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fname&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="POST-表单保存-json-文件"><a href="#POST-表单保存-json-文件" class="headerlink" title="$_POST 表单保存 json 文件"></a>$_POST 表单保存 json 文件</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;form.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端-建立一个 form.php 文件</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$userInfo</span> = <span class="variable">$_POST</span>;</span><br><span class="line"><span class="comment">//把获取的用户信息数组编码成json字符串</span></span><br><span class="line"><span class="variable">$json</span> = json_encode(<span class="variable">$userInfo</span>);</span><br><span class="line"><span class="comment">//打开json文件,如果没有json文件则自动创建json文件</span></span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&#x27;form.json&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>);</span><br><span class="line"><span class="comment">//把json字符串$json写入json文件form.json</span></span><br><span class="line">fwrite(<span class="variable">$file</span>,<span class="variable">$json</span>);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>何时使用 method&#x3D;”post”？</strong><br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。<br>然而，由于变量不显示在 URL 中，所以无法把页面加入书签。</p><p><strong>PHP $_REQUEST 变量</strong><br>预定义的 $_REQUEST 变量包含了 $_GET、$_POST 和 $_COOKIE 的内容。</p><p>$_REQUEST 变量可用来收集通过 GET 和 POST 方法发送的表单数据。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.runoob.com/php/php-post.html">菜鸟教程</a></li><li><a href="https://www.cnblogs.com/supermeimei/p/5165735.html">PHP中的$_POST变量</a></li><li><a href="https://www.shuyong.net/chengxu/1116.html">PHP获取前端form数据并保存在json中</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> php </tag>
            
            <tag> 数据库 </tag>
            
            <tag> POST </tag>
            
            <tag> 表单 </tag>
            
            <tag> json </tag>
            
            <tag> $_POST </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE重要功能(一)之route路由跳转</title>
      <link href="/posts/98479763.html"/>
      <url>/posts/98479763.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是路由"><a href="#什么是路由" class="headerlink" title="什么是路由"></a>什么是路由</h1><blockquote><p>路由的本质就是一种对应关系，比如说我们在url地址中输入我们要访问的url地址之后，浏览器要去请求这个url地址对应的资源。<br>那么url地址和真实的资源之间就有一种对应的关系，就是路由。</p></blockquote><p><strong>路由分为前端路由和后端路由:</strong></p><ol><li>后端路由是由服务器端进行实现，并完成资源的分发<br>后端路由性能相对前端路由来说较低，所以，我们接下来主要学习的是前端路由</li><li>前端路由是依靠hash值(锚链接)的变化进行实现<br>前端路由的基本概念：根据不同的事件来显示不同的页面内容，即事件与事件处理函数之间的对应关系<br>前端路由主要做的事情就是监听事件并分发执行事件处理函数</li></ol><h1 id="vue3-安装路由"><a href="#vue3-安装路由" class="headerlink" title="vue3 安装路由"></a>vue3 安装路由</h1><blockquote><p>查看自己项目目录中是否有route文件,安装 route 后会有生成该文件</p></blockquote><img src="https://img-blog.csdnimg.cn/20210619092259367.png"><h2 id="方法一：使用-vue-ui-安装"><a href="#方法一：使用-vue-ui-安装" class="headerlink" title="方法一：使用 vue ui 安装"></a>方法一：使用 vue ui 安装</h2><p><strong>在当前项目文件夹使用cmd命令，然后输入vue ui</strong></p><img src="https://img-blog.csdnimg.cn/20210619092605125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70">打开之后是这个页面<img src="https://img-blog.csdnimg.cn/20210619092805266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><h1 id="route-路由配置和使用"><a href="#route-路由配置和使用" class="headerlink" title="route 路由配置和使用"></a>route 路由配置和使用</h1><blockquote><p><strong>注:需要配置并且引用后才能生效</strong></p></blockquote><h2 id="一、配置-router-文件中的-index-js"><a href="#一、配置-router-文件中的-index-js" class="headerlink" title="一、配置 router 文件中的 index.js"></a>一、配置 router 文件中的 index.js</h2><p>添加相应的路径和名字，参考设置即可<br><img src="https://img-blog.csdnimg.cn/20210619093338656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"></p><h2 id="二、使用-router"><a href="#二、使用-router" class="headerlink" title="二、使用 router"></a>二、使用 router</h2><ol><li>查看 main.js 中查看是否引用了，正常安装后会引用</li></ol><blockquote><p><strong>注：必须要在mount之前挂载</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line">app.use(router)</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">app.mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong>最后在App.vue里面引用一下<router-view>组件就把环境都弄好了，记得把之前模板自带的东西清理了就好</router-view></strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-view/&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在 VUE 界面中引用</li></ol><blockquote><p><strong>在 template 中设置 点击事件</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/2021061909374558.png"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;cliec&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在 script 中配置跳转</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20210619094108740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="route-路由进阶使用之传参功能"><a href="#route-路由进阶使用之传参功能" class="headerlink" title="route 路由进阶使用之传参功能"></a>route 路由进阶使用之传参功能</h1><p><strong>安装方法二：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@4 --save</span><br></pre></td></tr></table></figure><h2 id="1、跳转模式-A界面－－▶B界面"><a href="#1、跳转模式-A界面－－▶B界面" class="headerlink" title="1、跳转模式 A界面－－▶B界面"></a><strong>1、跳转模式 A界面－－▶B界面</strong></h2><p>需要配置 router 的文件夹：</p><img src="https://img-blog.csdnimg.cn/20210528160712548.png"><hr><h3 id="一、router-环境配置"><a href="#一、router-环境配置" class="headerlink" title="一、router 环境配置"></a>一、router 环境配置</h3><p><strong>1. 首先我们在文件夹的index.js文件里添加下面的代码：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> A <span class="keyword">from</span> <span class="string">&#x27;../views/A.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    <span class="comment">// &#123; path: &quot;/&quot;, redirect: &quot;/index&quot; &#125;,</span></span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        component: A</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/B&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        component: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span> (<span class="string">&#x27;../views/B.vue&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><blockquote><p>你会惊奇的发现，Vue对象去哪儿了？在2.x中，我们要使用路由是要先import Vue from ‘vue’把Vue引入进来，接着再Vue.use(VueRouter)去初始化使用路由，是的，vue3中已经没有全局的Vue对象了，并且vue-router也变得模块化了，routes引入页面的两种方式没啥改变，倒是history已经模块化了，它有几种方式，我们使用createWebHistory 就好了，就是浏览器URL后面带不带#号小尾巴的区别</p></blockquote><p><strong>2. 然后在main.js文件里修改添加下面的代码：</strong></p><blockquote><p>使用router的话在createApp模块里挂载一下就好了，需要注意的是必须要在mount之前挂载</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line">createApp(App).use(router).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>3. 最后在App.vue里面引用一下<router-view>组件：</router-view></strong></p><blockquote><p>值此就把环境都弄好了，记得把之前模板自带的东西清理了就好</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="二、router-使用"><a href="#二、router-使用" class="headerlink" title="二、router 使用"></a>二、router 使用</h3><p><strong>1. 首先在之前创建的A.vue文件中添加下面代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;goToB&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">//也可以这样写</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// function goToB() &#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   router.push(&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     name: &quot;B&quot;,</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   &#125;);</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2. 然后在B.vue文件中随便添加点东西，能显示就好：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3. 最后我们再回看A文件，在methods中引用：</strong></p><blockquote><p><strong>在A文件中你会发现找不到this.$router.push()，是的，vue3中已经没有全局的路由了，需要使用路由，<br>我需先要引入useRouter模块，接着要在setup函数中定义router，之后再创建一个方法，里面才是我们熟悉的router.push({ name: “B”})，这里不要用this，setup函数中是没有this的，到这里简单的跳转就算完成了。</strong></p></blockquote><p><strong>methods函数里面调用方式：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">test</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToB();</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终效果如下：</p><img src="https://img-blog.csdnimg.cn/20210528181441344.gif"><h2 id="2、重点功能之路由传参"><a href="#2、重点功能之路由传参" class="headerlink" title="2、重点功能之路由传参"></a><strong>2、重点功能之路由传参</strong></h2><blockquote><p>既然在methods函数里可以调用了setup() 里return的方法，那是不是意味着我们可以传点东西过去？</p></blockquote><ol><li><strong>修改 A.vue 文件:</strong></li></ol><blockquote><p>我们可以传参数过去，这样我们就可以把这个自定义的跳转函数封装起来，动态的传入页面名称和参数就好了</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToOtherPage = <span class="function">(<span class="params">page_name, value</span>) =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line">        name: page_name,</span><br><span class="line">        params: &#123;</span><br><span class="line">          value: value,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 定义methods的方法可以直接写在return之前</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="comment">//要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> page_name = <span class="string">&quot;B&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//要传的参数</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> value = <span class="string">&quot;hello vue3&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToOtherPage(page_name, value);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToOtherPage,</span><br><span class="line">      test</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//   methods: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     test() &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       /*</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        * do something...</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        */</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let page_name = &quot;B&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要传的参数</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let value = &quot;hello vue3&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       this.goToOtherPage(page_name, value);</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><strong>修改 B.vue 文件:</strong></li></ol><blockquote><p>接着我们要怎么接受参数咧？搞了那么久，其实配方都是一样的，要接受参数，我需要想引入useRoute ，注意是没有r结尾的，是不是有种很熟悉的味道同志们&#x3D;》this.$route.params，接着也要在setup函数里定义route，接着我们就可以以方法的形式返回params，要使用的话this一下就好了，生命周期函数created、mounted里面都可以直接拿到</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> route = useRoute();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> getParams = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> route.params;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 生命周期写法</span></span></span><br><span class="line"><span class="javascript">    onMounted(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&quot;mounted:&quot;</span> + getParams().value);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      getParams,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="comment">//   created: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(`created:` + JSON.stringify(this.getParams()));</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   mounted: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(&quot;mounted:&quot; + this.getParams().value);</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><img src="https://img-blog.csdnimg.cn/20210528205800430.gif"><h2 id="3、在基础页怎么获取router文件夹中index-js里的数据呢？"><a href="#3、在基础页怎么获取router文件夹中index-js里的数据呢？" class="headerlink" title="3、在基础页怎么获取router文件夹中index.js里的数据呢？"></a><strong>3、在基础页怎么获取router文件夹中index.js里的数据呢？</strong></h2><p><strong>1. vue3.x 带上数据</strong></p><blockquote><p>在vue2.x时，在new实例时可以顺便把数据带上，之后在created或mounted生命周期里直接this.$router.options就可以找到我们传的数据了</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    base: process.env.BASE_URL,</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>那么在vue3.x中，我们可以在创建路由时把数据带上</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>2. 之后我们在setup() 函数中使用路由时接收并返回对应的数据，之后就可以在created或mounted生命周期中使用了</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter();</span><br><span class="line">    <span class="built_in">console</span>.log(router.options);</span><br><span class="line">    <span class="keyword">const</span> myArr = <span class="function">() =&gt;</span> router.options.myArr;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">this</span>.myArr());</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      myArr</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="comment">//   mounted: function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(this.myArr());</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>3. 成功后打印大概是这个样子：</strong></p><img src="https://img-blog.csdnimg.cn/539ea0f067164ab7b5b1604364d0cfe1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA54ix5ZSx5q2M55qE5YmN56uv,size_9,color_FFFFFF,t_70,g_se,x_16"><h1 id="route-路由跳转与方式对比"><a href="#route-路由跳转与方式对比" class="headerlink" title="route 路由跳转与方式对比"></a>route 路由跳转与方式对比</h1><p>vue-router实现路由跳转与参数获取：</p><p><strong>路由跳转和传参：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, reactive, readonly, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter, useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  name: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter(), route = useRoute();</span><br><span class="line">    <span class="keyword">const</span> submitForm = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      formRef.value?.validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          login(&#123; <span class="attr">strategy</span>: <span class="string">&#x27;local&#x27;</span>, ...ruleForm &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 获取参数和路由跳转</span></span><br><span class="line">              <span class="keyword">const</span> redirect: string = route.query &amp;&amp; route.query.redirect;</span><br><span class="line">              <span class="keyword">if</span> (redirect) &#123;</span><br><span class="line">                router.replace(redirect);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                router.push(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">              ...</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         ...</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; ..., submitForm &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>路由跳转三种方法的总结：</strong></p><ol><li>第一种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment">//`在这里插入代码片`</span></span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">`/detail/1`</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意： params 传参相当于是路由的一部分是必须传的东西,经过验证不传页面会跳转到空白页,该方式刷新页面id 不丢失</strong></p></blockquote><ol start="2"><li>第二种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    params: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 可以传也可以不传,不传刷新页面id 会丢失该方式刷新页面id 不丢失</strong></p></blockquote><ol start="3"><li>第三种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    query: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.query.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 不能写，因为写了就是router 的一部分，这样就会匹配不到, 此方式刷新页面id 不丢失</strong></p></blockquote><p><a href="http://localhost:8080/#/detail?id=1">http://localhost:8080/#/detail?id=1</a></p><p><strong>总结： params一旦设置在路由，params就是路由的一部分，如果这个路由有params传参，但是在跳转的时候没有传这个参数，会导致跳转失败或者页面会没有内容。</strong></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/235876.htm">一篇文章带你了解vue路由</a></li><li><a href="https://blog.csdn.net/weixin_52921550/article/details/118046853">vue3.0路由跳转</a></li><li><a href="https://blog.csdn.net/weixin_42063951/article/details/117357542">vue3中怎么使用router路由呢&amp;页面跳转传参怎么搞呢</a></li><li><a href="https://www.jb51.net/article/242793.htm#_lab2_1_1">Vue3使用vue-router如何实现路由跳转与参数获取</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> route </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE问题(二)之按键修饰符KeyboardEvent.keyCode&#39; modifier</title>
      <link href="/posts/3235598376.html"/>
      <url>/posts/3235598376.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>重要参考：</strong><a href="https://v3.cn.vuejs.org/guide/migration/keycode-modifiers.html"><strong>VUE官方迁移策略</strong></a><br>弃用 KeyboardEvent.keyCode</p></blockquote><h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>使用 <input v-on:keyup.13="submit"> 时出现报错显示 ‘KeyboardEvent.keyCode’ modifier on ‘v-on’ directive</p><h2 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h2><blockquote><p>VUE3版本：</p><ol><li>不再支持使用 keyCodes (即键码) 作为 v-on 修饰符；</li><li>不再支持 config.keyCodes；</li></ol></blockquote><h1 id="VU2-对-keyCodes-说明"><a href="#VU2-对-keyCodes-说明" class="headerlink" title="VU2 对 keyCodes 说明"></a>VU2 对 keyCodes 说明</h1><p><strong>Vue 2.x 中的 keyCodes 修饰符</strong></p><p>在 Vue 2.x 中，允许使用 keyCodes 作为v-on 的修饰符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.13&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.enter&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>上面两种写法，在 Vue 2.x 是等价的。</p></blockquote><p><strong>另外， 我们还可以通过全局的 config.keyCodes 选项来自定义 alias （别名）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  f1: 112&#x2F;&#x2F;快捷键</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.112&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- custom alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.f1&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h1 id="Vue3-弃用-keyCodes-说明"><a href="#Vue3-弃用-keyCodes-说明" class="headerlink" title="Vue3 弃用 keyCodes 说明"></a>Vue3 弃用 keyCodes 说明</h1><p>因为 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/keyCode"><strong>Web 标准已经弃用</strong></a> KeyboardEvent.keyCode<br>所以 Vue 3.x 为了和 Web 标准保持一致也不再支持 keyCodes。<br>Vue 3.x 建议使用按键 alias （别名）作为v-on的修饰符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span><br><span class="line">&lt;input v-on:keyup.delete&#x3D;&quot;confirmDelete&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>因此，这也意味着config.keyCodes也被弃用了</p><h1 id="Vue3-设置快捷键方法"><a href="#Vue3-设置快捷键方法" class="headerlink" title="Vue3 设置快捷键方法"></a>Vue3 设置快捷键方法</h1><blockquote><p>设置快捷键比如 ctrl+s 这种,vue2: @keydown.ctrl.83<br>配置的代码可以写在 main.js 入口文件中，全局统一管理</p></blockquote><p><strong>vue3 不能使用 keyCode，只能使用按键别名。你为 keyCode&#x3D;83 设置别名就行了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  s: 83</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_44869002/article/details/113176050">Vue 3 迁移策略笔记—— 第18节：按键修饰符</a></li><li><a href="https://zhuanlan.zhihu.com/p/113754059">Markdown设置居中和字体颜色</a></li></ol><hr><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> BUG </tag>
            
            <tag> keyCodes </tag>
            
            <tag> v-on </tag>
            
            <tag> web标准 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用组件(一)之Element UI</title>
      <link href="/posts/1511238045.html"/>
      <url>/posts/1511238045.html</url>
      
        <content type="html"><![CDATA[<h1 id="Element-UI安装"><a href="#Element-UI安装" class="headerlink" title="Element UI安装"></a>Element UI安装</h1><p><strong>原来安装的是 element-plus 而不是 Element-ui</strong><br><a href="https://blog.csdn.net/drhrht/article/details/123421598">Element-ui和Element-Plus的区别_Element2和Element3的区别</a></p><ol><li>Icon图标库变化了 </li><li>组件的插槽slot使用变化了:同时可支持多个插槽 </li><li>新增组件 Skeleton-骨架屏&#x2F;Empty-空状态&#x2F;Affix -固钉&#x2F;TimeSelect 时间选择&#x2F;Space 间距</li></ol><hr><p>因需使用 el-table 报错才发现需要安装 Element UI 组件，开始按照网上大多数方法进行，但总报错！因为这些方法是基于VUE2.X版本，而搭建的环境是VUE3！</p><h2 id="VUE3正确安装方法"><a href="#VUE3正确安装方法" class="headerlink" title="VUE3正确安装方法"></a>VUE3正确安装方法</h2><ol><li>下载 Element UI组件<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save element-plus</span><br></pre></td></tr></table></figure><blockquote><p>安装完之后 package.json 文件中的 dependencies 会新增版本内容，说明安装成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">  &quot;axios&quot;: &quot;^0.27.2&quot;,</span><br><span class="line">  &quot;core-js&quot;: &quot;^3.8.3&quot;,</span><br><span class="line">  &quot;element-plus&quot;: &quot;^2.2.0&quot;,</span><br><span class="line">  &quot;table&quot;: &quot;^6.8.0&quot;,</span><br><span class="line">  &quot;vue&quot;: &quot;^3.2.13&quot;,</span><br><span class="line">  &quot;vue-router&quot;: &quot;^4.0.3&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>在 main.js 中引入 Element UI 组件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import ElementPlus from &#39;element-plus&#39;</span><br><span class="line">import &#39;element-plus&#x2F;dist&#x2F;index.css&#39;</span><br><span class="line"></span><br><span class="line">const app &#x3D; createApp(App);</span><br><span class="line">app.use(ElementPlus)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;...</span><br><span class="line">app.mount(&#39;#app&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;createApp(App).use(store).use(router).use(element).mount(&#39;#app&#39;)</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>因vue3 的 dom挂载方式是新创建一个 app 然后调用 mount() 方法插入到页面中<br>所以 app.use(ElementPlus) 设置需要在 app.mount(‘#app’); 挂载之前设置</strong></p></blockquote></li><li>在相应的 vue 文件中测试使用 并 npm run serve 运行测试<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>卸载 element-ui<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall element-ui</span><br></pre></td></tr></table></figure><strong>装过旧版需要卸载，还需要把 main.js 和 package.json 内与 element-plus 相关删除</strong></li></ol><h2 id="旧版常规安装"><a href="#旧版常规安装" class="headerlink" title="旧版常规安装"></a>旧版常规安装</h2><blockquote><p><strong>注意:官方和网上常见的方式为 VUE2.X 旧版本方式</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 1.下载elementui的依赖</span><br><span class="line">    npm i element-ui -S</span><br><span class="line"># 2.指定当前项目中使用elementui</span><br><span class="line">    import ElementUI from &#39;element-ui&#39;;</span><br><span class="line">    import &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;;</span><br><span class="line">  &#x2F;&#x2F;在vue脚手架中使用elementui</span><br><span class="line">    Vue.use(ElementUI);</span><br></pre></td></tr></table></figure><h1 id="Element-UI基本使用-示例"><a href="#Element-UI基本使用-示例" class="headerlink" title="Element UI基本使用(示例)"></a>Element UI基本使用(示例)</h1><blockquote><p><strong>注意：<br>使用element ui的相关组件时需要注意的是 所有组件都是el-组件名称开头<br>属性使用都是直接将属性名&#x3D;属性值方式写在对应的组件标签上</strong></p></blockquote><h2 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h2><ol><li>默认样式按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>简洁按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span>&gt;</span>朴素按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">plain</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">plain</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">plain</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">plain</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">plain</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>圆角按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">round</span>&gt;</span>圆角按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">round</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">round</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">round</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">round</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">round</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>图标按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-search&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-edit&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-check&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-message&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-delete&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>按钮组件的详细使用<br>一、 按钮组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 按钮属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> 属性名=<span class="string">属性值</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">plain</span>=<span class="string">true</span> <span class="attr">round</span> <span class="attr">circle</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-loading&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>三、 按钮组使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button-group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-back&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-right&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Link-文字链接组件"><a href="#Link-文字链接组件" class="headerlink" title="Link 文字链接组件"></a>Link 文字链接组件</h2></li><li>文字链接组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>文字链接组件的属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>  <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> &gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span><span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">disabled</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-platform-eleme&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="Layout-栅格-布局组件的使用"><a href="#Layout-栅格-布局组件的使用" class="headerlink" title="Layout (栅格)布局组件的使用"></a>Layout (栅格)布局组件的使用</h2><blockquote><p><strong>通过基础的 24 分栏，迅速简便地创建布局<br>在element ui中布局组件将页面划分为多个行row,每行最多分为24栏(列)</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在一个布局组件中 是由 row 和 col 组合而成<br>在使用时要区分 row属性 和 col属性</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性的使用<br>一、 行属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">&quot;50&quot;</span> <span class="attr">tag</span>=<span class="string">&quot;span&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用4份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用3份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;9&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用9份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 列属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;9&quot;</span> <span class="attr">:psuh</span>=<span class="string">&quot;3&quot;</span> <span class="attr">xs</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用12分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用6分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Container-布局容器组件"><a href="#Container-布局容器组件" class="headerlink" title="Container 布局容器组件"></a>Container 布局容器组件</h2></li><li>创建布局容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>容器中包含的子元素<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-header</span>&gt;</span>：顶栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-aside</span>&gt;</span>：侧边栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span>：主要区域容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-footer</span>&gt;</span>：底栏容器。</span><br></pre></td></tr></table></figure></li><li>容器的嵌套使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--容器嵌套使用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>水平容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>垂直容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--footer--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Form相关组件"><a href="#Form相关组件" class="headerlink" title="Form相关组件"></a>Form相关组件</h2><h3 id="Radio单选按钮"><a href="#Radio单选按钮" class="headerlink" title="Radio单选按钮"></a>Radio单选按钮</h3></li><li>创建Radio按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--组件创建--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio按钮属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">disabled</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio事件的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123; <span class="comment">//定义的事件处理函数</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.label);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>事件的使用也是和属性使用是一致都是直接写在对应的组件标签上<br>事件在使用时必须使用Vue中绑定时间方式进行使用如 @事件名&#x3D;事件处理函数(绑在在vue组件中对应函数)</strong></p></blockquote><h3 id="radio按钮组"><a href="#radio按钮组" class="headerlink" title="radio按钮组"></a>radio按钮组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;3&quot;</span>&gt;</span>备选项3<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;6&quot;</span>&gt;</span>备选项6<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;9&quot;</span>&gt;</span>备选项9<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        radio: 6</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="checkbox组件"><a href="#checkbox组件" class="headerlink" title="checkbox组件"></a>checkbox组件</h2></li><li>创建checkbox组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">disabled</span> <span class="attr">true-label</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">checked</span> <span class="attr">border</span> <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span><span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>复选框组的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox-group</span> @<span class="attr">change</span>=<span class="string">&quot;bb&quot;</span> <span class="attr">:min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 A&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 B&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 C&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;选中且禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span>,</span></span><br><span class="line">                checkList:[],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checkList);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Input-输入框组件"><a href="#Input-输入框组件" class="headerlink" title="Input 输入框组件"></a>Input 输入框组件</h2></li><li>创建Input组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>常用属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span> <span class="attr">disabled</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;price&quot;</span> <span class="attr">:maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">show-word-limit</span> <span class="attr">:minlength</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">prefix-icon</span>=<span class="string">&quot;el-icon-user-solid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">suffix-icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">show-password</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> @<span class="attr">blur</span>=<span class="string">&quot;aaa&quot;</span> @<span class="attr">focus</span>=<span class="string">&quot;bbb&quot;</span> @<span class="attr">clear</span>=<span class="string">&quot;clears&quot;</span> <span class="attr">clearable</span> @<span class="attr">input</span>=<span class="string">&quot;ccc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;失去焦点&#x27;</span>);</span></span><br><span class="line">                ;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;获取焦点&quot;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">ccc</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;改变:&quot;</span>+value);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">clears</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;清楚&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>方法的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>方法的使用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;focusInputs&quot;</span>&gt;</span>focus方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;blurInputs&quot;</span>&gt;</span>blur方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//调用focus方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">focusInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.focus();</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">           <span class="comment">//调用失去焦点方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">blurInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.blur();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在使用组件的方法时需要在对应的组件中加入 ref&#x3D;”组件别名”<br>在调用方法时直接使用 this.$refs.组件别名.方法名()</strong></p></blockquote></li></ol><h1 id="elementui-使用注意"><a href="#elementui-使用注意" class="headerlink" title="elementui 使用注意"></a><strong>elementui 使用注意</strong></h1><blockquote><p>**注意:在elementui中所有组件 都存在 属性 事件 和方法<br>属性: 直接写在对应的组件标签上 使用方式:属性名&#x3D;属性值<code>方式 事件</code>: 直接使用vue绑定事件方式写在对应的组件标签上 使用方式:&#96;@事件名&#x3D;vue中事件处理函数<br>方法: 1.在对应组件标签上使用 ref&#x3D;组件别名 2. 通过使用this.$refs.组件别名.方法名()进行调用<br>**</p></blockquote><h1 id="相关链接及原文出处"><a href="#相关链接及原文出处" class="headerlink" title="相关链接及原文出处"></a>相关链接及原文出处</h1><ol><li><a href="https://blog.csdn.net/Stars_in_rain/article/details/122363128">vue3 引入element-ui</a></li><li><a href="https://blog.csdn.net/qq_35254085/article/details/116600164">Element UI组件介绍</a></li><li><a href="https://vuex.vuejs.org/zh/index.html">VUE 官方文档</a></li><li><a href="https://element-plus.org/zh-CN/component/button.html">官方VUE3使用 Element UI</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Element UI </tag>
            
            <tag> el-x </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE问题(一)之spaces and tabs 空格和tab键问题</title>
      <link href="/posts/1689160997.html"/>
      <url>/posts/1689160997.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>新建文章后，复制网上或者原来的代码段过来使用时发现报错 Mixed spaces and tabs no-mixed-spaces-and-tabs</p><blockquote><p><strong>因为大多数代码约定要求使用空格或 tab 进行缩进。因此，一行代码同时混有 tab 缩进和空格缩进，通常是错误的</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>在工程目录下找到 package.json 文件并打开</li><li>在eslintrcr配置项rules里边手动添加规则 ’no-mixed-spaces-and-tabs’并定义为 0(即关闭检查规则)<blockquote><p><strong>“no-mixed-spaces-and-tabs”:0</strong></p><img src="https://img-blog.csdnimg.cn/c6699555819d47cf9a5777137f5a5745.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA56iL5bqP5bCP5pet,size_20,color_FFFFFF,t_70,g_se,x_16"></blockquote></li></ol><p><strong>补充：使用下面的配置可以减少很多语法检查的报错信息，可以配置使用然后重启项目</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&quot;eslintConfig&quot;: &#123;</span><br><span class="line">    &quot;root&quot;: false,</span><br><span class="line">    &quot;env&quot;: &#123;</span><br><span class="line">      &quot;node&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;extends&quot;: [</span><br><span class="line">      &quot;plugin:vue&#x2F;essential&quot;,</span><br><span class="line">      &quot;eslint:recommended&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;parserOptions&quot;: &#123;</span><br><span class="line">      &quot;parser&quot;: &quot;babel-eslint&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;rules&quot;: &#123;</span><br><span class="line">&quot;generator-star-spacing&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-tabs&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-unused-vars&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-console&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-irregular-whitespace&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-debugger&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-mixed-spaces-and-tabs&quot;:0</span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_46167190/article/details/122800825">Vue报错：Mixed spaces and tabs no-mixed-spaces-and-tabs 解决办法</a></li></ol><p>———————————————-<strong>我是分割线</strong>—————————————<br>    <strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> BUG </tag>
            
            <tag> Mixed spaces and tabs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用命令(一)之v-if</title>
      <link href="/posts/289735847.html"/>
      <url>/posts/289735847.html</url>
      
        <content type="html"><![CDATA[<h1 id="v-if指令作用"><a href="#v-if指令作用" class="headerlink" title="v-if指令作用"></a>v-if指令作用</h1><p><strong>根据表达式的真假切换元素的显示状态</strong></p><ol><li>本质是通过操纵dom元素来切换显示状态</li><li>表达式的值为true,元素存在于dom树中，为false,从dom树中移除</li><li>频繁的切换使用v-show,反之使用v-if,前者的切换消耗小<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;切换状态&quot; @click&#x3D;&quot;changeShow&quot;&gt;</span><br><span class="line">&lt;h1 v-show&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h2 v-if&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h3 v-if&#x3D;&quot;temperature&gt;&#x3D;35&quot;&gt;热死了&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"> var app&#x3D;new Vue(&#123;</span><br><span class="line"> el:&quot;#app&quot;,</span><br><span class="line"> data:&#123;</span><br><span class="line"> isshow:false,</span><br><span class="line"> temperature:40</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line"> changeShow:function()&#123;</span><br><span class="line"> this.isshow&#x3D;!this.isshow;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>点击“切换状态”之后：<img src="https://img-blog.csdnimg.cn/20200803101013231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4ODM1MTQw,size_16,color_FFFFFF,t_70"></li></ol><h1 id="v-if常见使用方法详解"><a href="#v-if常见使用方法详解" class="headerlink" title="v-if常见使用方法详解"></a>v-if常见使用方法详解</h1><p>v-if一般有两个场景：<br>1- 多个元素 通过条件判断展示或者隐藏某个元素。或者多个元素<br>2- 进行两个视图之间的切换<br>Vue官方的简单实例:</p><ol><li>实现了 type等于不同值，A，B，C 三个元素的展示情况</li><li>实现了点击按钮两个视图的切换<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line"> &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line"> &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line"> &lt;title&gt;Vue中v-if的常见使用&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.5.17-beta.0&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F;创建一个vue实例</span><br><span class="line"> var app &#x3D; new Vue(&#123;</span><br><span class="line"> el: &#39;#app&#39;,</span><br><span class="line"> data: &#123;</span><br><span class="line">  type:&#39;C&#39;,</span><br><span class="line">  loginType:&#39;username&#39;</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line">  changeloginType()&#123;</span><br><span class="line">  let self &#x3D; this;</span><br><span class="line">  if(self.loginType&#x3D;&#x3D;&#39;username&#39;)&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;&#39;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;username&#39;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:red&quot;&gt;v-if的简单实用&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template&gt;</span><br><span class="line">  &lt;div v-if&#x3D;&quot;type &#x3D;&#x3D; &#39;A&#39;&quot;&gt;</span><br><span class="line">  A</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else-if&#x3D;&quot;type&#x3D;&#x3D;&#39;B&#39;&quot;&gt;</span><br><span class="line">  B</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else&gt;</span><br><span class="line">  C</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:green&quot;&gt;v-if的弹框切换&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template v-if&#x3D;&quot;loginType &#x3D;&#x3D;&#x3D; &#39;username&#39;&quot;&gt;</span><br><span class="line">  &lt;label&gt;用户名：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your username&quot; key&#x3D;&quot;username-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;template v-else&gt;</span><br><span class="line">  &lt;label&gt;密码：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your email address&quot; key&#x3D;&quot;email-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;button @click&#x3D;&quot;changeloginType&quot;&gt;切换状态&lt;&#x2F;button&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>效果图:<img src="https://img.jbzj.com/file_images/article/201809/20180928154104.jpg"><img src="https://img.jbzj.com/file_images/article/201809/20180928154117.jpg"></li></ol><h1 id="通过-v-if-来判断数组是否为空"><a href="#通过-v-if-来判断数组是否为空" class="headerlink" title="通过 v-if 来判断数组是否为空"></a>通过 v-if 来判断数组是否为空</h1><blockquote><p><strong>此方法已经在处理PHP回传 JSON 数据时，对键名解析使用成功</strong></p></blockquote><p>语法为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为空：array &#x3D;&#x3D; undefined ||array &#x3D;&#x3D; null || array.length &lt;&#x3D; 0     (顺序不能调换)</span><br><span class="line">不为空： array !&#x3D;&#x3D;undefined &amp;&amp; array !&#x3D; null  &amp;&amp; array.length &gt; 0   (顺序不能调换)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul v-if&#x3D;&quot;commentList &#x3D;&#x3D; undefined ||commentList &#x3D;&#x3D; null || commentList.length &lt;&#x3D; 0 &quot; &gt;</span><br><span class="line">暂无评论！</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul v-if&#x3D;&quot;commentList !&#x3D; undefined &amp;&amp; commentList !&#x3D; null &amp;&amp; commentList.length &gt; 0 &quot; &gt;</span><br><span class="line">&lt;li class&#x3D;&quot;list-group-item&quot;  v-for&#x3D;&quot;(item,index) in commentList&quot;  &gt;</span><br><span class="line">&lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">&#123;&#123; item.username &#125;&#125; 说：</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;content&quot; &gt;</span><br><span class="line">&#123;&#123; item.content &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_38835140/article/details/107757104">v-if指令</a></li><li><a href="https://www.jb51.net/article/148174.htm">对vue中v-if的常见使用方法详解</a></li><li><a href="https://blog.csdn.net/xiaojin21cen/article/details/118605410">VUE 模板 v-if 判断 数组是否为空</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> v-if </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE获取JSON数据键名</title>
      <link href="/posts/30846541.html"/>
      <url>/posts/30846541.html</url>
      
        <content type="html"><![CDATA[<h1 id="从PHP传过来的JSON数据结构"><a href="#从PHP传过来的JSON数据结构" class="headerlink" title="从PHP传过来的JSON数据结构"></a>从PHP传过来的JSON数据结构</h1><p>VUE接收到的数据如下，此时想要得到键名 <strong>“password”</strong> 和 <strong>“zhaoyichen”</strong> 以及 <strong>“liangzai”</strong> 用来做表格的列名。</p><blockquote><p>网上找很多都没找到合适</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;111&quot;,</span><br><span class="line">zhaoyichen: &quot;333&quot;,</span><br><span class="line">liangzai: &quot;22&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;55&quot;,</span><br><span class="line">zhaoyichen: &quot;66&quot;,</span><br><span class="line">liangzai: &quot;33&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;888&quot;,</span><br><span class="line">zhaoyichen: &quot;3443&quot;,</span><br><span class="line">liangzai: &quot;9088&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;8889&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;66677&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>正常直接 console.log 出来的是里面的数组值</p></blockquote><h1 id="使用-Object-keys-将键值提取出来"><a href="#使用-Object-keys-将键值提取出来" class="headerlink" title="使用 Object.keys 将键值提取出来"></a>使用 Object.keys 将键值提取出来</h1><p>假如改 JSON 数据名为 sites，则 使用 Object.keys(this.sites[0]) 即可读出所有键名</p><blockquote><p>需单独某一个键名，则增加标号即可  Object.keys(this.sites[0])[0]</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(<span class="built_in">this</span>.sites[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure><blockquote><p><strong>也可以在HTML中显示</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> </span><br><span class="line">&#123;&#123;Object.keys(this.sites[0])[0]&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/142380.htm">Vue 获取数组键名的方法</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> JSON </tag>
            
            <tag> 键值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE判断对象是否为空</title>
      <link href="/posts/637024282.html"/>
      <url>/posts/637024282.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>vue.js判断对象是否为空的方法是：将对象转为json，如果为空集合{}，那么该对象就是空对象，如【JSON.stringify(object)&#x3D;&#x3D;’{}’】</p></blockquote><h1 id="判断法一"><a href="#判断法一" class="headerlink" title="判断法一"></a>判断法一</h1><p><strong>将对象转JSON，如果为空集合{} ，那么就是空对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(object)==<span class="string">&#x27;&#123;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="判断法二"><a href="#判断法二" class="headerlink" title="判断法二"></a>判断法二</h1><p><strong>判断对象的长度，如果为零，那就是空对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.keys(object).length==<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.php.cn/vuejs/463861.html">vue.js判断对象是否为空的方法是什么</a></li></ol><hr><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php连接mysql数据库</title>
      <link href="/posts/3217038819.html"/>
      <url>/posts/3217038819.html</url>
      
        <content type="html"><![CDATA[<h1 id="按照-apache-php安装相关-进行安装"><a href="#按照-apache-php安装相关-进行安装" class="headerlink" title="按照[apache php安装相关]进行安装"></a>按照[apache php安装相关]进行安装</h1><p>安装好 apache 和 PHP之后再对 mysql 进行连接读取，确定PHP是否弄好的标志是可以在设定文档下运行 php 文件。<br><a href="http://localhost/myBlog/axios.php">运行本地服务器测试</a><br>刚开始按照网上连接时总报错，总提示找不到 mysqli 插件</p><blockquote><p>Class “mysqli” not found in</p></blockquote><h1 id="解决问题并连接MySql数据库"><a href="#解决问题并连接MySql数据库" class="headerlink" title="解决问题并连接MySql数据库"></a>解决问题并连接MySql数据库</h1><p>根据官网提供的方法<a href="https://www.php.net/manual/zh/mysqli.installation.php">安装配置MySql</a><br>不过因为使用的版本是 PHP8 ，因此不用大改，实际上只需要在 php.ini 文件上打开 extension&#x3D;mysqli 即可！</p><blockquote><p><strong>注意:修改完之后需要重新启动 apache 服务，要不然没作用！！总以为没修改对</strong></p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop Apache2.<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> Apache2.<span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="设置-MySql-连接数据"><a href="#设置-MySql-连接数据" class="headerlink" title="设置 MySql 连接数据"></a>设置 MySql 连接数据</h1><blockquote><p>设置对应的地址和账号密码即可连接:</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$mysqli</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;密码&quot;</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM tb_user&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$mysqli</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc(); <span class="comment">// 从结果集中取得一行作为关联数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* free result set */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span>-&gt;free();</span><br><span class="line">    <span class="comment">/* close connection */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$mysqli</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> apache </tag>
            
            <tag> php </tag>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apache php 安装相关</title>
      <link href="/posts/3845172909.html"/>
      <url>/posts/3845172909.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h1><p><strong>注：本文从[Apache的安装教程]直接复制以便查看，如有侵权请联系删除</strong><br>1、<a href="https://www.apachehaus.com/cgi-bin/download.plx">下载Apache</a><br>点击图中红圈的版本下载：<br><img src="https://img-blog.csdnimg.cn/20190519215843978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><p>下载后，解压文件，把如图这两个文件拿出来放到你的Apache目录下<br><img src="https://img-blog.csdnimg.cn/20190519220058367.png"><br>例如：我的放到D盘,如图:<br><img src="https://img-blog.csdnimg.cn/20190519220202943.png"></p><p>2、修改 httpd.conf 文件<br>在文件夹中查找conf文件夹下边的httpd.conf文件，修改文件为自己的路径(写你自己的路径)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># same ServerRoot for multiple httpd daemons, you will need to change at</span></span><br><span class="line"><span class="comment"># least PidFile.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">Define SRVROOT &quot;D:/Program Files/Apache/Apache24&quot;</span><br><span class="line">ServerRoot &quot;$&#123;SRVROOT&#125;&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>注：还是在此文件中下边，有一个端口号配置：Listen 80 ，如果你的80端口被已经被占用，你自己修改一个没有用的端口号！！！！！</strong></p><p>然后，在你的文件中 bin目录下，用【管理员】身份打开 CMD，输入httpd.exe -k install，如图我的例子：<br><img src="https://img-blog.csdnimg.cn/20190519221143962.png"><br>到这里下载成功了！！</p><p>3、启动Apache服务<br>继续输入命令：net start Apache2.4 ，成功后在页面输入：localhost:你刚写的端口号 就会成功出现如下所示：(还有一种启动方法)<br><img src="https://img-blog.csdnimg.cn/20190519221410964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"><br>第二种启动方法：<br>右键此电脑 -&gt; 管理 ， 然后启动如图所圈的：<br><img src="https://img-blog.csdnimg.cn/20190519221801153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><h1 id="PHP8安装和配置"><a href="#PHP8安装和配置" class="headerlink" title="PHP8安装和配置"></a>PHP8安装和配置</h1><ol><li>官网下载apache24和php8（要线程安全的那个，不然没有.dll文件）</li><li>php8安装完毕后打开安装文件中的php.ini-development改名为php.ini，然后打开这个文件找到 extension_dir&#x3D;“ext”，去掉注释分号，改为extension_dir &#x3D; “D:&#x2F;software&#x2F;php8&#x2F;ext” (php的安装路径&#x2F;ext)</li><li>打开apache的安装路径找到》config》httpd.conf,搜索LoadModule找到这个文中添加模块的区域，在后面追加：这一步是将php加到apache中<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#让Apache载入PHP处理模块</span></span><br><span class="line"><span class="comment">#php安装路径/php8apache2_4.dll</span></span><br><span class="line">LoadModule php_module &quot;D:/Program Files/php8/php8apache2_4.dll&quot; </span><br><span class="line"><span class="comment">#php安装路径</span></span><br><span class="line">PHPIniDir &quot;D:/Program Files/php8&quot;  </span><br><span class="line"><span class="comment">#这个配置表示所有的*.php文件使用php处理</span></span><br><span class="line">AddType application/x-httpd-php .php .phtml</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>添加虚拟目录：<br>还在httpd.conf文件后面加上：<br>先注释掉原来的路径#DocumentRoot “${SRVROOT}&#x2F;htdocs”<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">    DirectoryIndex index.php index.html index.htm default.php default.html default.htm home.php home.html home.htm</span><br><span class="line"><span class="comment">#D:/PHP是自己以后放php项目的地方  并取一个别名</span></span><br><span class="line">Alias /difcipo &quot;D:/Cache/PHP&quot;  </span><br><span class="line">DocumentRoot &quot;D:/Cache/PHP&quot;</span><br><span class="line">&lt;Directory &quot;D:/Cache/PHP&quot;&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride all</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>配置虚拟主机：<br>打开》conf》extra》httpd-vhosts.conf，在文件后面添加<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"><span class="comment">#这个需要和前面的DocumentRoot一致</span></span><br><span class="line">    DocumentRoot &quot;D:/Cache/PHP&quot;  </span><br><span class="line"><span class="comment">#虚拟主机名</span></span><br><span class="line">    ServerName www.abc.com  </span><br><span class="line">    ErrorLog &quot;logs/www.age.com-error.log&quot;</span><br><span class="line">    CustomLog &quot;logs/www.age.com-access.log&quot; common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>打开C:\Windows\System32\drivers\etc\hosts文件(修改HOST文件)，在后面添加 127.0.0.1 <a href="http://www.abc.com/">www.abc.com</a> 配置完毕！启动apache。<img src="https://img-blog.csdnimg.cn/20210114185127506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE4ODY3Nw==,size_16,color_FFFFFF,t_70"></li><li>测试<img src="https://img-blog.csdnimg.cn/20210114185051491.png"></li></ol><p><strong>注：本文从[apache24+php8配置]直接复制以便查看，如有侵权请联系删除</strong></p><h1 id="安装PHP发现的问题"><a href="#安装PHP发现的问题" class="headerlink" title="安装PHP发现的问题"></a>安装PHP发现的问题</h1><p>原参考文章中发现有导入模块错误，主要原因是注释和代码放在了同一行，放到另一行即可</p><p><strong>bin下使用命令 httpd.exe -t 查找问题 例如: D:\Program Files\Apache\Apache24\bin\httpd.exe -t</strong></p><h1 id="安装问题查找方式"><a href="#安装问题查找方式" class="headerlink" title="安装问题查找方式"></a>安装问题查找方式</h1><blockquote><p>apache php无法启动的解决办法：1、使用Apache的配置检查，并根据错误提示，纠正错误；2、注销IIS服务；3、使用命令杀掉强占80端口的进程；4、修改PHP配置php.ini文件。</p></blockquote><p>Apache&#x2F;PHP 无法启动分两种情况：<br>1、Apache无法启动，没加载php也无法启动<br>2、Apache可以启动，但加载php后无法启动<br>第一种情况多数是Apache配置问题，或者80端口被占用<br>第二种多数是PHP编译器的问题：<br>查看Apache错误日志，有类似下面这些内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd.exe: Syntax error on line 63 of D:/Apache2.2/conf/httpd.conf: Cannot load D:/php/php5apache2_4.dll into server: %1 \xb2\xbb\xca\xc7\xd3\xd0\xd0\xa7\xb5\xc4 Win32 \xd3\xa6\xd3\xc3\xb3\xcc\xd0\xf2\xa1\xa3</span><br></pre></td></tr></table></figure><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/sxs7970/article/details/90349009">Apache的安装教程</a><br>2.<a href="https://blog.csdn.net/weixin_42188677/article/details/112610016">apache24+php8配置</a><br>3.<a href="https://www.php.cn/php-ask-462557.html">apache php无法启动的解决办法</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
          <category> Apache </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> 软件安装 </tag>
            
            <tag> apache </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用基础收集</title>
      <link href="/posts/4001256595.html"/>
      <url>/posts/4001256595.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h1 id="常用知识"><a href="#常用知识" class="headerlink" title="常用知识"></a>常用知识</h1><h2 id="Vue-UI创建项目详细步骤"><a href="#Vue-UI创建项目详细步骤" class="headerlink" title="Vue UI创建项目详细步骤"></a><a href="https://www.jb51.net/article/234189.htm">Vue UI创建项目详细步骤</a></h2><p>1.首先要安装最新的Vue CLI<br>在命令行工具里输入一下命令<br>npm install -g @vue&#x2F;cli<br>或者<br>yarn global add @vue&#x2F;cli<br>安装成功后，可用vue -V命令查看已安装的Vue CLI版本<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073438.png"><br>2.在命令行运行 vue ui，就会出现图形化管理<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073439.png"><br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073440.png"><br>在界面上可以看到第一个tab项目，点击创建这个tab ，可以来创建一个新的vue项目<br>3.点击了创建之后可以看到一下内容，可以项目创建一个目录或者选择一个目录，然后选择一种包管理工具：可以使npm，也可以是yarn等<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073541.png"><br>4.点击下一步后，出现预设插件和配置的界面，按照自己的需求选择就可以，此处选择了默认的。<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073542.png"><br>5.点击创建项目后<br>已安装的插件，也可以在右上角点击添加插件安装想要的插件。<br>添加插件页面，也得要点击右下角的安装~<br>再返回到插件就会看到刚才安装的插件了，如下所示：<br>6.最后我们来看下 通过vue ui生成的项目结构<br>运行一下项目，npm run serve</p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><p>1.<a href="https://blog.csdn.net/jayLog/article/details/122743727">vue常用指令</a><br>vue常用指令有：v-once指令、v-show指令、v-if指令、v-else指令、v-else-if指令、v-for指令、v-html指令、v-text指令、v-bind指令、v-on指令、v-model指令等等。</p><h1 id="其他链接"><a href="#其他链接" class="headerlink" title="其他链接"></a>其他链接</h1>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML网页怎么连接到数据库</title>
      <link href="/posts/2729451999.html"/>
      <url>/posts/2729451999.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><h2 id="HTML不能直接读取数据库"><a href="#HTML不能直接读取数据库" class="headerlink" title="HTML不能直接读取数据库"></a>HTML不能直接读取数据库</h2><p>HTML是无法读取数据库的，HTML是页面前端脚本语言，要想从HTML网页中获取SQL数据库里的数据，需要借助JSP或ASP或PHP或RUBY等语言来实现。 简单的关系可以这样理解： 数据库&lt;—&gt;JSP或ASP或PHP或RUBY等语言&lt;—&gt;HTML<br><img src="https://img.gxlcms.com//Uploads-s/new/2019-09-30-201930/5cd67223da8dd675.jpg"></p><p>网页链接数据库代码如下（PHP编写）：</p><?phpheader('content-type:text/html;charset=gb2312;');//解决浏览器编码问题$lnk = mysql_connect('localhost', 'root', '********') or die ('连接失败 : ' . mysql_error());//密码填的是连接数据库的密码mysql_query("set names gb2312");//这就是指定数据库字符集//选择当前连接数据库为studentmysql_select_db('book', $lnk);//获取查询项和查询关键字的值$searchitem=$_POST['searchitem'];$searchvalue=$_POST['searchvalue'];/*定义查询语句，如果查询关键字的值不为空，则在SQL语句的Where子句中指定查询项模糊匹配关键字，否则查询所有记录*/if($searchvalue!="")   $myquery="SELECT * from books where {$searchitem} like '%{$searchvalue}%'";  else  $myquery="SELECT * from books";   //执行查询，生成结果集$result = mysql_query($myquery)or die("<br>查询表books失败: " . mysql_error());//从结果集中取得一行作为关联数组$row=mysql_fetch_array($result);//循环读取每一行记录while ($row){}?><h2 id="HTML-前端怎么连接数据库？"><a href="#HTML-前端怎么连接数据库？" class="headerlink" title="HTML 前端怎么连接数据库？"></a>HTML 前端怎么连接数据库？</h2><p>HTML前端不能连接数据库，如果需要和数据库进行交互，就需要server端技术，可以选择JSP、PHP、ASP.NET等，这些技术可以实现在前台调用后端数据库，也可使用AJAX进行前后端交互。</p><h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><p>JSP（全称JavaServer Pages）是由Sun Microsystems公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、XML或其他格式文档的Web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的HTTP请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。</p><p>JSP将Java代码和特定变动内容嵌入到静态的页面中，实现以静态页面为模板，动态生成其中的部分内容。JSP引入了被称为“JSP动作”的XML标签，用来调用内建功能。另外，可以创建JSP标签库，然后像使用标准HTML或XML标签一样使用它们。标签库能增强功能和服务器性能，而且不受跨平台问题的限制。JSP文件在运行时会被其编译器转换成更原始的Servlet代码。JSP编译器可以把JSP文件编译成用Java代码写的Servlet，然后再由Java编译器来编译成能快速执行的二进制机器码，也可以直接编译成二进制码。</p><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>PHP原始为Personal Home Page的缩写，已经正式更名为 “PHP: Hypertext Preprocessor”。自20世纪90年代国内互联网开始发展到现在，互联网信息几乎覆盖了我们日常活动所有知识范畴，并逐渐成为我们生活、学习、工作中必不可少的一部分。据统计，从2003 年开始，我国的网页规模基本保持了翻番的增长速度，并且呈上升趋势。PHP 语言作为当今最热门的网站程序开发语言，它具有成本低、速度快、可移植性好、 内置丰富的函数库等优点，因此被越来越多的企业应用于网站开发中。但随着互联网的不断更新换代，PHP语言也出现了不少问题。</p><p>根据动态网站要求，PHP语言作为一种语言程序，其专用性逐渐在应用过程中显现，其技术水平的优劣与否将直接影响网站的运行效率。其特点是具有公开的源代码， 在程序设计上与通用型语言，如C语言相似性较高，因此在操作过程中简单易懂，可操作性强。同时，PHP语言具有较高的数据传送处理水平和输出水平，可以广泛应用在Windows系统及各类Web服务器中。如果数据量较大，PHP语言还可以拓宽链接面，与各种数据库相连，缓解数据存储、检索及维护压力。随着技术的发展，PHP 语言搜索引擎还可以量体裁衣，实行个性化服务，如根据客户的喜好进行分类收集储存，极大提高了数据运行效率。</p><h3 id="ASP-NET"><a href="#ASP-NET" class="headerlink" title="ASP.NET"></a>ASP.NET</h3><p>ASP.NET又称为ASP+，不仅仅是ASP的简单升级，而是微软公司推出的新一代脚本语言。ASP.NET基于.NET Framework的Web开发平台，不但吸收了ASP以前版本的最大优点并参照Java、VB语言的开发优势加入了许多新的特色，同时也修正了以前的ASP版本的运行错误。</p><p>ASP.NET具备开发网站应用程序的一切解决方案，包括验证、缓存、状态管理、调试和部署等全部功能。在代码撰写方面特色是将页面逻辑和业务逻辑分开，它分离程序代码与显示的内容，让丰富多彩的网页更容易撰写。同时使程序代码看起来更洁净、更简单。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://www.gxlcms.com/mysql-337548.html">HTML网页怎么连接到数据库？</a><br>2.<a href="https://m.php.cn/article/452911.html">HTML 前端怎么连接数据库？</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> mysql </tag>
            
            <tag> HTML </tag>
            
            <tag> 文章收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5分钟商学院-基础之目录</title>
      <link href="/posts/3753918527.html"/>
      <url>/posts/3753918527.html</url>
      
        <content type="html"><![CDATA[<p>作者：匿名用户<br>链接：<a href="https://www.zhihu.com/question/64174568/answer/1001925349">https://www.zhihu.com/question/64174568/answer/1001925349</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>对不住了，润总~</p><p>首先，来盘点一下，我“追星”花了多少钱。《5分钟商学院基础篇》：199元《实战篇》：199元2018年线下大课4节课通课：10000元往返四个城市飞机片加住宿：3000*4&#x3D;120000元课后见面私董会：10000元刘润推荐买BOSE降噪耳机：2800元刘润推荐买蓝牙手环：600元刘润全套书：大约300元大约花了36000元，当然买东西那个也不是别人强推给我的，只是我相信他说的，买了。所以，我比大部分人有机会评论刘润。首先阐明，我是粉转黑，你们也可以感受一下我的感受。</p><p>刘润是在得到上“发家”的，开了两门年课，大概就是把一本专业书的概念，浓缩成几千字的音频，然后讲出来。<br>当初，冲着《商学院》几个字就去了。这么神圣的商学院，居然能在这儿开课，不得了不得了，加上罗胖一包装，一忽悠，花了199就买了。<br>抓起来听了几课，我艹，不得了，这人简直是商业史上的奇才。我要向他学习，我要追星，我要学到真东西。加之马上开展了线下大课的售卖，我咬咬牙，花了30分钟，就决定了2万块的消费——全年4堂大课+私下见面会。</p><p>追了一圈下来，后悔不已啊！</p><p>接下来就详细说说，我对这个人怎么看。</p><p>先评优点：<br>刘润这个人我认真观察了两年多，从朋友圈、媒体、得到、微博、知识星球等等，我能判断的优点是：<br>1.演讲技巧好<br>2.逻辑思维能力<br>3.深入浅出的叙述能力<br>4.日更公号的勤奋<br>5.社交场上一枝花<br>6.对儿子上心</p><p>好优点说完了，说说缺点。先简述问题，后面慢慢铺开。</p><p>一、做人不谦虚，架子大。</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。</p><p>三、实操匮乏，三句不离微软。从数学系毕业，微软工作几年，就出来做互联网转型专家？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>一、做人不谦虚，架子大。<br>我在花了一万块以后在私董会上面跟刘润见面了。一桌共有10个同学，每人一万，每人五分钟提问，刘润解答。<br>流程是这样，刘润讲完课，由工作人员把私董会成员安排到酒店餐厅的包间集合。所有人到后，刘润开始吃饭。边吃边听，其他同学挨个发言。<br>听完十个同学的问题，我觉得都是比较当务之急，需要深思熟虑解决的。但是，刘润却在几分钟之内就能下判断和诊断。姑且不是结局如何，这种关系每个企业和公司的大事，几分钟就敢给结论？这是极不负责任的表现。<br>对于企业或者是个人，所有的决策，不根据数据、调查得出解决，万一直觉误导了别人，这就不是一万块的买卖了。<br>所以，这个所谓的私董会，就是割韭菜专用的。45分钟，解决了十个同学的问题。厉害吗？<br><img src="https://pic2.zhimg.com/50/v2-7c5a7a969609e8ea8098e7b21a9a3a46_720w.jpg?source=1940ef5c" data-caption data-size="small" data-rawwidth="1080" data-rawheight="2160" class="origin_image zh-lightbox-thumb" width="1080" data-original="https://pic1.zhimg.com/v2-7c5a7a969609e8ea8098e7b21a9a3a46_r.jpg?source=1940ef5c"><br>这是卖家秀，麻烦得到，下次也备注清楚，只有5分钟！跟课程是一样长！<br>第二件事，就是关于张艺兴的视频。他对张艺兴说：“我听说你是我的粉丝”，“让你可以自豪的说出，你喜欢的人是刘润。”<br>我没有看出来什么叫谦虚，什么叫低调，什么叫为人师表。我知道看到了卖课，打广告，借题抬高自己。你们感受一下。<br>向隔壁何帆老师学习吧，“凡是叫人谦虚的学问都是好学问”，“有一天你取得了成就，我会搬个小板凳，做在你面前，认真听你教我。”</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。<br>我几乎看了刘润的每一篇公众号，也听过线下课程，线上课程，甚至朋友圈。至今为止，我没有看到过刘润发布相关的战略研究案例，或者企业咨询得出的结果等等。<br>与之对比的是华与华。华杉也是做咨询的，但是别人的咨询跟刘润的咨询差别有点大。如果你细看华杉的公众号，你会发现，没有那么多扯淡的话，几乎是干货，叫你怎么做，怎么包装，怎么定位，怎么设计，怎么卖！并且还总结出一套非常完善、且能上手的实用方法论。</p><p>这难道不是做企业咨询应该做的事情吗？那么，我斗胆请问刘润老师，做咨询这么久，能否分享一些你做过咨询的成功案例？或者一些实用的方法论？当然，可以用保密协议say NO。</p><p>按照回答张艺兴的路数，应该是知无不言、知无不尽，在这里，我仿佛感觉润总有点词穷。</p><p>三、实操匮乏，三句不离微软。</p><p>从数学系毕业，微软工作几年，就出来做互联网转型专家？微软，这这辈子没有听过这么多次微软。从内部体系，到微软怎么招人，在知乎回答、微博、朋友圈，真的是一直不停的说。我深知你对微软的感情，但是，也暴露了另外一点。就是，你知道的，就一定会说出来。</p><p>刘润是数学系毕业，按照我的记忆，在大课上讲过，毕业后，刚刚参加工作，就跑去微软面试，没想到进了。在微软担任到某分公司的总经理？在微软过后，就创办润米咨询，也就是2013年。我注意观察到，最近几乎所有平台关于刘润的学习，都加上了复旦大学MBA。这事儿也挺蹊跷，大概率是成人MBA。但从近几年的资料看，刘润没有关于任何在复旦大学的线索。（仅为猜忌，肯定不敢学他的曾经的boss）</p><p>那么，从微软出来，就开了咨询公司，为何就成了互联网转型专家？其实我挺纳闷的。当时的微软跟互联网的关系其实也挺浅的，这是众所周知的。</p><p>那么，是否有成功转型的企业呢？是如何转型的呢？又提供了多大的帮助呢？这个“专家”二字是谁说的呢？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>如果各位有机会关注刘润的公众号，大概得到的就是这种句式：企业遇到财务危机怎么办？那我们先来说说，什么是财务危机。 财务危机又分为XX、XX…..</p><p>这样的句式充满整个公众号。你看来看去，是找不到毛病，确实也没说错。然后，发现对你基本没有帮助。用网友的话，叫做正确的废话。</p><p>就拿这篇财务危机的公众号来看，他说有六个办法能够帮助企业获得现金流。哇哦，让我虎躯一震。</p><p>看完全篇，总结了六点：<br>1.找股东借、2.清库存、3.要预付款、4.收应收款、5.延期支付应付款、6.减成本。<br>哎，你说，这个话有问题吗？并没有。有意义吗？哎~ 建议别跟Spencer学，都学坏了，日更一篇，都是些水货。</p><p>关于护城河啊之类的理论，这都不知道说了多少次了。记得“得到”上有怎么办问题，回答的就是护城河理论，答非所问。我刚刚看，罗胖都把首页的这条推荐删了。</p><p>说这么多，我只想真实表达我的感受，也确实把我憋坏了。因为我曾经太信任，刘润对我们却视为韭菜，我惋惜我的两万块钱。</p><p>我记得刘润课上说过一话：“今天对我爱理不理，明天让你高攀不起。” 如果你能看到，这句话，我回送给你。当做我一个梦想吧！哈哈哈哈哈哈</p><p>发布于 2020-02-06 21:24</p>]]></content>
      
      
      <categories>
          
          <category> 商业类 </category>
          
          <category> 刘润 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商业 </tag>
            
            <tag> 5分钟商学院 </tag>
            
            <tag> 目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序(一)之UDP通信</title>
      <link href="/posts/2604964553.html"/>
      <url>/posts/2604964553.html</url>
      
        <content type="html"><![CDATA[<p>前期知识:<a href="https://zml3589110.github.io/posts/497460256.html">网络七层协议(OSI)基础知识</a></p><h1 id="文章代码参考"><a href="#文章代码参考" class="headerlink" title="文章代码参考"></a>文章代码参考</h1><h2 id="微信小程序UDP通信"><a href="#微信小程序UDP通信" class="headerlink" title="微信小程序UDP通信"></a>微信小程序UDP通信</h2><blockquote><p>微信小程序UDP通信及编码转换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Encoder  <span class="keyword">from</span> <span class="string">&#x27;../../util/Encoder.js&#x27;</span></span><br><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"><span class="built_in">this</span>.udp.bind(<span class="number">60000</span>) <span class="comment">//udp绑定本机</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">//连接目标</span></span><br><span class="line"><span class="function"><span class="title">linkUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp.connect(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//发送信息</span></span><br><span class="line"><span class="function"><span class="title">clickUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//utf-8转gbk编码</span></span><br><span class="line"><span class="keyword">var</span> gbkArray = Encoder.hexstrToArray(Encoder.stringToGbkHexstr(<span class="string">&#x27;123哈&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;gbkArray&gt;&gt;&quot;</span> , gbkArray)</span><br><span class="line"><span class="keyword">let</span> gbk = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>()</span><br><span class="line"><span class="built_in">console</span>.log(gbk)</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.write(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">message: gbk</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//监听接收到的数据</span></span><br><span class="line">onUdpMessage: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;收到的信息&#x27;</span>, res);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;onUdpMessage() 接收数据 &#x27;</span> + res.remoteInfo.size + <span class="string">&#x27; 字节：&#x27;</span> + <span class="built_in">JSON</span>.stringify(res, <span class="literal">null</span>, <span class="string">&#x27;\t&#x27;</span>));</span><br><span class="line"><span class="comment">// gbk转utf-8</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(res.message);</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> TextDecoder(<span class="string">&#x27;gbk&#x27;</span>).decode(x);</span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//监听收到的数据</span></span><br><span class="line"><span class="built_in">this</span>.udp.onMessage(<span class="built_in">this</span>.onUdpMessage)</span><br><span class="line"><span class="comment">//监听错误的信息</span></span><br><span class="line"><span class="built_in">this</span>.udp.onError(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"><a href="#关于微信小程序使用UDP实现局域网通讯及UDP模块的封装" class="headerlink" title="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"></a>关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</h2><blockquote><p>封装模块</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPSocket</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection = &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 创建一个UDP实例</span></span><br><span class="line">  <span class="function"><span class="title">establish</span>(<span class="params">monitor</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(monitor);</span><br><span class="line">    <span class="built_in">this</span>.connection = wx.createUDPSocket();</span><br><span class="line">    <span class="comment">// 绑定指定端口</span></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.connection.bind(monitor)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;连接成功&#x27;</span> + port + <span class="string">&#x27;端口&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 监听端口函数</span></span><br><span class="line">  <span class="function"><span class="title">onListening</span>(<span class="params">success, failure, open, cmd, mac</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 开启监听</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onListening(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      open(res)</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 监听回调函数</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onMessage(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下为我对数据的处理，使用到了我的一个tool.js,里面包含了对字节数组的处理</span></span><br><span class="line"><span class="comment">//需要的可以到我的个人博客获取www.meinaodai.top</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 做空包筛查</span></span><br><span class="line">      <span class="keyword">if</span> (res.message) &#123;</span><br><span class="line">        <span class="keyword">var</span> packet = tool.analysis(res.message)</span><br><span class="line">        <span class="comment">// 做数据空包处理</span></span><br><span class="line">        <span class="keyword">if</span> (packet) &#123;</span><br><span class="line">          <span class="comment">// 做数据筛查</span></span><br><span class="line">          <span class="comment">// console.log(tool.Screening(packet, cmd, mac));</span></span><br><span class="line">          success(tool.Screening(packet, cmd, mac))</span><br><span class="line">          <span class="built_in">console</span>.log(packet);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;------------------------&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// debug</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onError(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      failure(err)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 发送消息</span></span><br><span class="line">  <span class="function"><span class="title">send</span>(<span class="params">message</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.send(&#123;</span><br><span class="line">      address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">      port: <span class="number">20015</span>,</span><br><span class="line">      message</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 关闭搜索事件</span></span><br><span class="line">  <span class="function"><span class="title">UDPclose</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.close()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;UDP关闭&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模块引用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UDP = <span class="built_in">require</span>(<span class="string">&quot;./UDP.js&quot;</span>)   </span><br><span class="line">   <span class="comment">// UDP实例创建</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket = <span class="keyword">new</span> UDP.UDPSocket();</span><br><span class="line">    <span class="comment">// 连接端口</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.establish(<span class="number">20016</span>)</span><br><span class="line">    <span class="comment">// 请求设备上报状态</span></span><br><span class="line">    <span class="built_in">this</span>.udpsend()</span><br><span class="line">    <span class="comment">// 开始监听</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.onListening(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// debug</span></span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;, <span class="function"><span class="params">open</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(open);</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">//这两个参数为筛查条件，用于过滤无用或者不合法的信息，不需要的可传空值</span></span><br><span class="line">    <span class="string">&#x27;&#x27;</span>, getApp().globalData.item.mac)</span><br></pre></td></tr></table></figure><h1 id="实际工程测试"><a href="#实际工程测试" class="headerlink" title="实际工程测试"></a>实际工程测试</h1><p>先按照第一篇写时发现找不到 connect 函数，是因为变量问题！修改为全局变量后可以通过 connect 连接端口，但又缺失 hexstrToArray 函数，就没再继续下去。<br>后来找到第二篇参考，并根据参考写相应UDP函数，引用中 getApp().globalData.item.mac 和 tool.analysis(res.message) 均不存在，屏蔽即可，数据能正常收发。<br>再重新分析参考程序，并从官方文档中了解相应函数作用，最后基本按照官方文档提供的几个函数即可完成功能。</p><h2 id="在页面初始中建立实例并绑定端口"><a href="#在页面初始中建立实例并绑定端口" class="headerlink" title="在页面初始中建立实例并绑定端口"></a>在页面初始中建立实例并绑定端口</h2><blockquote><p>也可以使用 connect 模式，使用 bind 可以返回绑定端口<br>使用 onListening 打开监听功能，并通过 onMessage 设置监听数据回调函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.udp.bind(<span class="number">60000</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;端口&#x27;</span> + port + <span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.udp.onListening(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.udp.onMessage(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="设置数据发送"><a href="#设置数据发送" class="headerlink" title="设置数据发送"></a>设置数据发送</h2><blockquote><p>发送数据直接使用 send 函数即可，使用 255.255.255.255 是广播模式<br>即向局域网中所有端口 60000 均发送数据</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">BtnTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;这是一个测试按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.send(&#123;</span><br><span class="line">  address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">  port: <span class="number">60000</span>,</span><br><span class="line">  message: <span class="string">&#x27;hello, how are you&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="待添加部分"><a href="#待添加部分" class="headerlink" title="待添加部分"></a>待添加部分</h2><p>以上只是简单的数据收发，也在局域网中测试实现，不过完整的过程封装应该还需错误回调和关闭等功能。<br>即增加 UDPSocket.onError 和 UDPSocket.close 函数<br>官方所提供的函数如下:<br><strong>UDPSocket wx.createUDPSocket()</strong> 创建一个 UDP Socket 实例</p><blockquote><p>UDPSocket 基础库 2.7.0 开始支持，低版本需做兼容处理。<br>一个 UDP Socket 实例，默认使用 IPv4 协议</p></blockquote><p><strong>方法:</strong></p><table><thead><tr><th align="left">函数名</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><strong>number UDPSocket.bind(number port)</strong></td><td align="left">绑定一个系统随机分配的可用端口，或绑定一个指定的端口号</td></tr><tr><td align="left">UDPSocket.setTTL(number ttl)</td><td align="left">设置 IP_TTL 套接字选项，用于设置一个 IP 数据包传输时允许的最大跳步数</td></tr><tr><td align="left"><strong>UDPSocket.send(Object object)</strong></td><td align="left">向指定的 IP 和 port 发送消息。基础库 2.9.0 起支持广播 (指定地址为 255.255.255.255)</td></tr><tr><td align="left">UDPSocket.connect(Object object)</td><td align="left">预先连接到指定的 IP 和 port，需要配合 write 方法一起使用</td></tr><tr><td align="left">UDPSocket.write()</td><td align="left">用法与 send 方法相同，如果没有预先调用 connect 则与 send 无差异（注意即使调用了 connect 也需要在本接口填入地址和端口参数）</td></tr><tr><td align="left">UDPSocket.close()</td><td align="left">关闭 UDP Socket 实例，相当于销毁。 在关闭之后，UDP Socket 实例不能再发送消息，每次调用 UDPSocket.send 将会触发错误事件，并且 message 事件回调函数也不会再也执行。在 UDPSocket 实例被创建后将被 Native 强引用，保证其不被 GC。在 UDPSocket.close 后将解除对其的强引用，让 UDPSocket 实例遵从 GC</td></tr><tr><td align="left">UDPSocket.onClose(function callback)</td><td align="left">监听关闭事件</td></tr><tr><td align="left">UDPSocket.offClose(function callback)</td><td align="left">取消监听关闭事件</td></tr><tr><td align="left">UDPSocket.onError(function callback)</td><td align="left">监听错误事件</td></tr><tr><td align="left">UDPSocket.offError(function callback)</td><td align="left">取消监听错误事件</td></tr><tr><td align="left"><strong>UDPSocket.onListening(function callback)</strong></td><td align="left">监听开始监听数据包消息的事件</td></tr><tr><td align="left">UDPSocket.offListening(function callback)</td><td align="left">取消监听开始监听数据包消息的事件</td></tr><tr><td align="left"><strong>UDPSocket.onMessage(function callback)</strong></td><td align="left">监听收到消息的事件</td></tr><tr><td align="left">UDPSocket.offMessage(function callback)</td><td align="left">取消监听收到消息的事件</td></tr></tbody></table><p><strong>错误:</strong></p><table><thead><tr><th align="left">错误码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-1</td><td align="left">系统错误</td></tr><tr><td align="left">-2</td><td align="left">socket接口错误，可参考系统的socket错误码</td></tr><tr><td align="left">-3</td><td align="left">发送失败，无接口权限</td></tr><tr><td align="left">1</td><td align="left">发送失败，参数错误，address不合法</td></tr><tr><td align="left">2</td><td align="left">发送失败，参数错误，port不合法</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_50077305/article/details/118813518">微信小程序UDP通信</a><br>2.<a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/wx.createUDPSocket.html">微信官方文档-UDP通信</a><br>3.<a href="https://blog.csdn.net/qq_43318313/article/details/124193217">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</a><br>4.<a href="http://meinaodai.top/">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装的个人博客</a> 所提供的 tool.js 封装了常用函数</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> UDP </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程(一)之网络七层协议(OSI)</title>
      <link href="/posts/497460256.html"/>
      <url>/posts/497460256.html</url>
      
        <content type="html"><![CDATA[<h1 id="网络七层协议-OSI-基础知识"><a href="#网络七层协议-OSI-基础知识" class="headerlink" title="网络七层协议(OSI)基础知识"></a>网络七层协议(OSI)基础知识</h1><p>协议总览图：<br>​<img src="/posts/497460256/1.%E7%BD%91%E7%BB%9C%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>网络中的计算机与终端要想正确地传递信息和数据，必须在数据传输地顺序、数据的格式及内容等方面有一个约定的或规则，这种约定或规则称之为协议。</p></blockquote><table><thead><tr><th align="left">OSI层</th><th align="left">功能</th><th align="left">示例</th><th align="left">网络设备</th></tr></thead><tbody><tr><td align="left">应用层</td><td align="left">电子邮件，文件服务，虚拟终端</td><td align="left">TELNET，HTTP，FTP，NFS，SMTP，TFTP，SNMP，DNS，Telnet等</td><td align="left"></td></tr><tr><td align="left">表示层</td><td align="left">数据格式化，代码转换，数据加密 没有协议</td><td align="left">加密，ASCII等</td><td align="left"></td></tr><tr><td align="left">会话层</td><td align="left">解除或建立与别的接点的联系 没有协议</td><td align="left">RPC，SQL等</td><td align="left"></td></tr><tr><td align="left">传输层</td><td align="left">提供端对端的接口</td><td align="left">TCP，UDP，SPX</td><td align="left">四层交换机、也有工作在四层的路由器</td></tr><tr><td align="left">网络层</td><td align="left">为数据包选择路由</td><td align="left">IP，ICMP，RIP，OSPF，BGP，IGMP，IPX等</td><td align="left">路由器、三层交换机</td></tr><tr><td align="left">数据链路层</td><td align="left">传输有地址的帧以及错误检测功能</td><td align="left">ATM，FDDI，SLIP，CSLIP，PPP，ARP，RARP，MTU等</td><td align="left">网桥、以太网交换机、网卡(物理层和据链路层各一半)</td></tr><tr><td align="left">物理层</td><td align="left">以二进制数据形式在物理媒体上传输数据</td><td align="left">Rj45，802.3，ISO2110，IEEE802，IEEE802.2等</td><td align="left">中继器、集线器、双绞线等</td></tr></tbody></table><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>数据链层图：<br>​<img src="/posts/497460256/2.%E6%95%B0%E6%8D%AE%E9%93%BE%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第二层，介于物理层和网络层之间,其最基本的服务是将源自网络层来的数据可靠得传输到相邻节点的目的机网络层<br>在数据链路层中称这种数据块为帧，帧是数据链路层的传送单位，如何控制帧在屋里信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配，以及在两个网络实体之间提供数据链路通路的建立、维持和释放的管理.</p></blockquote><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层在数据链路层提供的两个相邻端点之间的数据帧的传送功能上进一步管理网络中的数据通信，将数据设法从源端经过若干个中间节点传送到目的端，从而向传输层提供最基本的端到端的数据传送服务<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第三层，介于传输层和数据链路层之间<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%821.png" class title="This is an 1.微信小程序UDP通信 image"><br>网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择，连接的建立、保持和终止等，它提供的服务使传输层不需要了解网络中的数据传输和交换技术。</p></blockquote><h1 id="Socket和HTTP"><a href="#Socket和HTTP" class="headerlink" title="Socket和HTTP"></a>Socket和HTTP</h1><p>简单了解OSI之后我们来看一下我们手机与电脑通信，所能够使用的两种数据通信，一种是HTTP请求，一种是Socket通信，HTTP是属于短连接，适合新闻，订票信息等客户端发起请求，每一次请求结束，自动断开连接。而Socket是属于长连接，适合游戏，聊天等实时数据。</p><h2 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h2><p>建立起一个TCP连接需要经过“三次握手”：<br>第一次握手：客户端发送syn包(syn&#x3D;j)到服务器，并进入SYN_SEND状态，等待服务器确认；<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack&#x3D;j+1），同时自己也发送一个SYN包（syn&#x3D;k），即SYN+ACK包，此时服务器进入SYN_RECV状态；<br>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack&#x3D;k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。</p><blockquote><p>握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连 接之前，TCP 连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写 了，就是服务器和客户端交互，最终确定断开）</p></blockquote><h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><p>同时Socket可以支持不同的传输层协议（UDP），那我们平时为什么不使用UDP呢，我们现在来看一下UDP与TCP的区别</p><table><thead><tr><th align="left"></th><th align="left">TCP</th><th align="left">UDP</th></tr></thead><tbody><tr><td align="left">是否面向连接</td><td align="left">面向连接</td><td align="left">面向非连接</td></tr><tr><td align="left">传输可靠性</td><td align="left">可靠</td><td align="left">不可靠</td></tr><tr><td align="left">应用场合</td><td align="left">传输大量数据</td><td align="left">少量数据</td></tr><tr><td align="left">传输速度</td><td align="left">慢</td><td align="left">快</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_48126962/article/details/117074843">网络七层协议</a><br>2.<a href="https://blog.csdn.net/ch1406285246/article/details/55504330">网络七层协议、TCP&#x2F;IP、UDP、HTTP、Socket 个人理解</a></p><blockquote><p>一、我一直以为Http和Tcp是两种不同的，但是地位对等的协议，虽然知道TCP是传输层，而http是应用层今天学习了下，知道了 http是要基于TCP连接基础上的，简单的说，TCP就是单纯建立连接，不涉及任何我们需要请求的实际数据，简单的传输。http是用来收发数据，即实际应用上来的。<br>二、TCP是底层通讯协议，定义的是数据传输和连接方式的规范 HTTP是应用层协议，定义的是传输数据的内容的规范 HTTP协议中的数据是利用TCP协议传输的，所以支持HTTP也就一定支持TCP<br>三、HTTP支持的是www服务而TCP&#x2F;IP是协议它是Internet国际互联网络的基础。TCP&#x2F;IP是网络中使用的基本的通信协议。TCP&#x2F;IP实际上是一组协议，它包括上百个各种功能的协议，如：远程登录、文件传输和电子邮件等，而TCP协议和IP协议是保证数据完整传输的两个基本的重要协议。通常说TCP&#x2F;IP是Internet协议族，而不单单是TCP和IP。</p></blockquote><p>3.<a href="https://zhuanlan.zhihu.com/p/101662799">网络OSI七层模型及各层作用</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> 网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> 网络七层协议 </tag>
            
            <tag> TCP/IP </tag>
            
            <tag> UDP </tag>
            
            <tag> Socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(二)</title>
      <link href="/posts/990256180.html"/>
      <url>/posts/990256180.html</url>
      
        <content type="html"><![CDATA[<h1 id="模块外形及连接方式"><a href="#模块外形及连接方式" class="headerlink" title="模块外形及连接方式"></a>模块外形及连接方式</h1><p>根据提供的资料先进行手工搭线，后续再做图。</p><h2 id="实物外形"><a href="#实物外形" class="headerlink" title="实物外形"></a>实物外形</h2><p>​<img src="/posts/990256180/1.WBR3%E6%A8%A1%E5%9D%97%E5%A4%96%E5%BD%A2.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3每个脚位以及硬件相关信息在对应的信息在文档(涂鸦WIFI基本开发(一))有详细说明</p><h2 id="连接原理图"><a href="#连接原理图" class="headerlink" title="连接原理图"></a>连接原理图</h2><p>​<img src="/posts/990256180/2.%E6%B6%82%E9%B8%A6%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E5%9B%BE.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3连接相对简单，基本只需要连接VCC、GND、TXD、RXD四个脚位即可，还有一个信息打印脚位TX为 A_16,测试有信息输出。</p><h2 id="实物连接"><a href="#实物连接" class="headerlink" title="实物连接"></a>实物连接</h2><p>​<img src="/posts/990256180/3.%E5%AE%9E%E9%99%85%E8%BF%9E%E7%BA%BF.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>根据原理图进行相应连接，需要增加两个电容放在VCC和GND之间做滤波，分别是0.1UF和10UF。</p><h1 id="实验效果"><a href="#实验效果" class="headerlink" title="实验效果"></a>实验效果</h1><p>实验使用的是涂鸦自带调试工具(Tuya Module Debugging Assistant)进行连接，涂鸦调试工具模拟MCU和模块进行通讯，基本正常！<br>​<img src="/posts/990256180/4.%E6%B6%82%E9%B8%A6%E6%A8%A1%E7%BB%84%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>今天拿到 WBR3 模块后连接测试，使用的是 USB TO TLL 串口工具，工具中的电源有 3.3V、VCC、5V，本着稳妥方法使用的是3.3V电源，然而当一直没能连接。<br>起初根本没有任何反应，串口接收不到任何数据。以为商家发错模块，直到使用 A_16 连接查看串口数据时才发现一直有乱码发过来，也就是说模块是正确，乱码很像乐鑫ESP8266刚启动时发送过来的数据一样。<br>因此才怀疑是不是模块一直复位，也才进一步怀疑电源过低导致芯片无法启动。<br>后来使用万用表点看发现电源才3V，再点看VCC有3.6V，使用这个电源就能正常工作通讯。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://zml3589110.github.io/posts/2486667095.html">涂鸦WIFI基本开发(一)</a><br>2.参考<a href="https://oshwhub.com/OrangePi/wen-shi-du-zhuan-gan-qi-wu-lian-wang-ce-shi">【涂鸦智能】云朵温度监视器</a>查看PCB</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小熊派鸿蒙系统环境搭建</title>
      <link href="/posts/1932715036.html"/>
      <url>/posts/1932715036.html</url>
      
        <content type="html"><![CDATA[<h1 id="系统环境选择"><a href="#系统环境选择" class="headerlink" title="系统环境选择"></a>系统环境选择</h1><p>​</p><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIFI </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 鸿蒙 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 小熊派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>商业洞察力目录</title>
      <link href="/posts/3924567325.html"/>
      <url>/posts/3924567325.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建模型，一个事物再复杂，也是几个固定要素组成的"><a href="#搭建模型，一个事物再复杂，也是几个固定要素组成的" class="headerlink" title="搭建模型，一个事物再复杂，也是几个固定要素组成的"></a>搭建模型，一个事物再复杂，也是几个固定要素组成的</h1><h2 id="第1章，系统、要素、连接关系"><a href="#第1章，系统、要素、连接关系" class="headerlink" title="第1章，系统、要素、连接关系"></a>第1章，系统、要素、连接关系</h2><h2 id="第2章，变量、因果链、增强回路、调节回路、滞后效应"><a href="#第2章，变量、因果链、增强回路、调节回路、滞后效应" class="headerlink" title="第2章，变量、因果链、增强回路、调节回路、滞后效应"></a>第2章，变量、因果链、增强回路、调节回路、滞后效应</h2><h2 id="第3章，流量、存量"><a href="#第3章，流量、存量" class="headerlink" title="第3章，流量、存量"></a>第3章，流量、存量</h2><h2 id="第4章，因果链"><a href="#第4章，因果链" class="headerlink" title="第4章，因果链"></a>第4章，因果链</h2><h2 id="第5章，增强回路"><a href="#第5章，增强回路" class="headerlink" title="第5章，增强回路"></a>第5章，增强回路</h2><h2 id="第6章，调节回路"><a href="#第6章，调节回路" class="headerlink" title="第6章，调节回路"></a>第6章，调节回路</h2><h2 id="第7章，滞后效应"><a href="#第7章，滞后效应" class="headerlink" title="第7章，滞后效应"></a>第7章，滞后效应</h2><h1 id="第一个训练场，解决难题，像商业顾问一样思考"><a href="#第一个训练场，解决难题，像商业顾问一样思考" class="headerlink" title="第一个训练场，解决难题，像商业顾问一样思考"></a>第一个训练场，解决难题，像商业顾问一样思考</h1><h2 id="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"><a href="#第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业" class="headerlink" title="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"></a>第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业</h2><h2 id="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"><a href="#第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）" class="headerlink" title="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"></a>第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）</h2><h2 id="改变原因"><a href="#改变原因" class="headerlink" title="改变原因"></a>改变原因</h2><h3 id="第10章，还原大前提（失效）"><a href="#第10章，还原大前提（失效）" class="headerlink" title="第10章，还原大前提（失效）"></a>第10章，还原大前提（失效）</h3><h3 id="第11章，突围边界墙（滞涨）"><a href="#第11章，突围边界墙（滞涨）" class="headerlink" title="第11章，突围边界墙（滞涨）"></a>第11章，突围边界墙（滞涨）</h3><h3 id="第12章，安装缓冲器（波动）"><a href="#第12章，安装缓冲器（波动）" class="headerlink" title="第12章，安装缓冲器（波动）"></a>第12章，安装缓冲器（波动）</h3><h3 id="第13章，跨越临界点（突变）"><a href="#第13章，跨越临界点（突变）" class="headerlink" title="第13章，跨越临界点（突变）"></a>第13章，跨越临界点（突变）</h3><h2 id="改变模型"><a href="#改变模型" class="headerlink" title="改变模型"></a>改变模型</h2><h3 id="第14章，改变模型的案例"><a href="#第14章，改变模型的案例" class="headerlink" title="第14章，改变模型的案例"></a>第14章，改变模型的案例</h3><h1 id="第二个训练场是看透人心，个体、群体、集体管理千差万别"><a href="#第二个训练场是看透人心，个体、群体、集体管理千差万别" class="headerlink" title="第二个训练场是看透人心，个体、群体、集体管理千差万别"></a>第二个训练场是看透人心，个体、群体、集体管理千差万别</h1><h2 id="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"><a href="#第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）" class="headerlink" title="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"></a>第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）</h2><h2 id="第16章，群体压力（群体）"><a href="#第16章，群体压力（群体）" class="headerlink" title="第16章，群体压力（群体）"></a>第16章，群体压力（群体）</h2><h2 id="第17章，结构性张力（个人）"><a href="#第17章，结构性张力（个人）" class="headerlink" title="第17章，结构性张力（个人）"></a>第17章，结构性张力（个人）</h2><h2 id="第18章，创业之心（合伙人）"><a href="#第18章，创业之心（合伙人）" class="headerlink" title="第18章，创业之心（合伙人）"></a>第18章，创业之心（合伙人）</h2><h2 id="第19章，改变人心模型的案例"><a href="#第19章，改变人心模型的案例" class="headerlink" title="第19章，改变人心模型的案例"></a>第19章，改变人心模型的案例</h2><h1 id="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"><a href="#第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。" class="headerlink" title="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"></a>第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。</h1><h2 id="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"><a href="#第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。" class="headerlink" title="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"></a>第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。</h2><h3 id="受阻模型：123-公地悲剧、成长上限、成长与投资不足"><a href="#受阻模型：123-公地悲剧、成长上限、成长与投资不足" class="headerlink" title="受阻模型：123 公地悲剧、成长上限、成长与投资不足"></a>受阻模型：123 公地悲剧、成长上限、成长与投资不足</h3><h3 id="失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”"><a href="#失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”" class="headerlink" title="失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”"></a>失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”</h3><p><strong>为什么越急于求成，越一事无成</strong></p><ol><li>舍本逐末基模(Shifting  the Burden)</li></ol><p>A和B两家“婚前培训”，都想融资100万，A拿来请最好的人打磨产品，让新婚夫妻心甘情愿付费学习；B拿来宣传课程社会价值，申请政府补贴，让新婚夫妻免费学。<br>B的商业模型符合典型的“舍本逐末”模型。</p><blockquote><p>舍本逐末的本质：一条根本解的调节回路，因为见效慢，遭遇一条症状解打压的增强回路。最终问题依旧，甚至更严重，直至崩盘。</p></blockquote><ol start="2"><li>饮鸩止渴基模(Fixes that Fail)</li></ol><p><strong>舍本逐末升级版，不同的是，“鸩”这种“症状解”，不是没有营养的“末”，而是杀人于无形的“毒”</strong></p><p>年中，某知识付费平台的销售业绩比预计差不少。销售总监很着急，打算推出“一价全包会员卡”，只需365就能收听所有内容。<br>这个调节回路可以大大提升短期收入，但也会深深伤害长期收入。就不会有人再打算用500、800甚至1000购买单独课程。相当于把未来的收入提前打折兑现。下半年的业绩问题，会因为上半年的吸血，而惨不忍睹</p><blockquote><p>饮鸩止渴的本质：一条短期见效的调节回路，激活了一条长期恶化的增强回路。回光返照之后，灯枯油尽，走向失控。</p></blockquote><p><strong>这个世界上放在我们前面的通常不是正确的选择和错误的选择。而是正确的选择和容易的选择。而容易的选择，常常有毒</strong></p><ol start="3"><li>意外之敌基模(Accidental Adversaries)</li></ol><p>上世纪70年代，宝洁为了打击竞争对手，提高市场占有率，突然大规模打折促销。没想到这一降，让盟友沃尔玛措手不及。低价带来的渠道利润骤减，让沃尔玛无以为继。然后沃尔玛大规模囤积产品，等恢复原价再卖。<br>这样的场景还发生在销售和工程师之间。</p><blockquote><p>意外之敌的本质：改善自己业绩的调节回路，意外激活了一条伤及盟友的增强回路。昔日盟友，反目成仇，最终两败俱伤</p></blockquote><p><strong>最需要学习时空模型组的，是面临艰难选择的创业者。人的天性是选最容易走的路。但是，正确的路，通常艰难；而难走的路，从不拥挤</strong></p><h3 id="通吃模型：7-富者越富"><a href="#通吃模型：7-富者越富" class="headerlink" title="通吃模型：7 富者越富"></a>通吃模型：7 富者越富</h3><h3 id="锁死模型：89-恶性竞争、目标侵蚀"><a href="#锁死模型：89-恶性竞争、目标侵蚀" class="headerlink" title="锁死模型：89 恶性竞争、目标侵蚀"></a>锁死模型：89 恶性竞争、目标侵蚀</h3><h2 id="第21章，公地悲剧、成长上限、成长与投资不足"><a href="#第21章，公地悲剧、成长上限、成长与投资不足" class="headerlink" title="第21章，公地悲剧、成长上限、成长与投资不足"></a>第21章，公地悲剧、成长上限、成长与投资不足</h2><h2 id="第22章，舍本逐末、饮鸩止渴、意外之敌"><a href="#第22章，舍本逐末、饮鸩止渴、意外之敌" class="headerlink" title="第22章，舍本逐末、饮鸩止渴、意外之敌"></a>第22章，舍本逐末、饮鸩止渴、意外之敌</h2><h2 id="第23章，赢家通吃"><a href="#第23章，赢家通吃" class="headerlink" title="第23章，赢家通吃"></a>第23章，赢家通吃</h2><h2 id="第24章，恶性竞争、目标侵蚀"><a href="#第24章，恶性竞争、目标侵蚀" class="headerlink" title="第24章，恶性竞争、目标侵蚀"></a>第24章，恶性竞争、目标侵蚀</h2><h2 id="第25章，案例练习"><a href="#第25章，案例练习" class="headerlink" title="第25章，案例练习"></a>第25章，案例练习</h2><h1 id="第四个训练场，终身练习。破除顽固的三大思想误区。"><a href="#第四个训练场，终身练习。破除顽固的三大思想误区。" class="headerlink" title="第四个训练场，终身练习。破除顽固的三大思想误区。"></a>第四个训练场，终身练习。破除顽固的三大思想误区。</h1><h2 id="第26章，散点思维和公式思维"><a href="#第26章，散点思维和公式思维" class="headerlink" title="第26章，散点思维和公式思维"></a>第26章，散点思维和公式思维</h2><h2 id="第27章，局部思维和层次思维"><a href="#第27章，局部思维和层次思维" class="headerlink" title="第27章，局部思维和层次思维"></a>第27章，局部思维和层次思维</h2><h2 id="第28章，静止思维和演化思维"><a href="#第28章，静止思维和演化思维" class="headerlink" title="第28章，静止思维和演化思维"></a>第28章，静止思维和演化思维</h2><h2 id="第29章，储备模型，建立模型，迁移模型"><a href="#第29章，储备模型，建立模型，迁移模型" class="headerlink" title="第29章，储备模型，建立模型，迁移模型"></a>第29章，储备模型，建立模型，迁移模型</h2><h2 id="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"><a href="#第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限" class="headerlink" title="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"></a>第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限</h2>]]></content>
      
      
      <categories>
          
          <category> 商业类 </category>
          
          <category> 刘润 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商业 </tag>
            
            <tag> 目录 </tag>
            
            <tag> 洞察力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.使用abbrlink生成唯一链接</title>
      <link href="/posts/238727531.html"/>
      <url>/posts/238727531.html</url>
      
        <content type="html"><![CDATA[<p>​文章链接默认是以年、月、日、标题格式来生成，主要是通过修改hexo配置文件_config.yml来完成<br>​<img src="/posts/238727531/1.%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE.png" class title="This is an 1.使用abbrlink生成唯一链接 image"></p><p>设置之后发现报错，那是因为没有安装依赖，根据提示安装即可<br>    npm install hexo-abbrlink –save</p><pre><code>官方Sample The generated link will look like the following:crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>安装好之后重新生成文章时，md文件的Front-matter 内会增加abbrlink 字段,值为生成的ID，<br>这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址,<br>换句话说,就是本篇文章有了自己的专属链接。有了专属链接，找百度收录也就简单的多了</p><p>本文参考文章:</p><a class="btn-beautify block" href="https://zhuanlan.zhihu.com/p/112318081" title="利用Hexo-abbrlink插件生成唯一文章链接"><i class="far fa-hand-point-right"></i><span>利用Hexo-abbrlink插件生成唯一文章链接</span></a>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO技术 </tag>
            
            <tag> abbrlink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(一)</title>
      <link href="/posts/2486667095.html"/>
      <url>/posts/2486667095.html</url>
      
        <content type="html"><![CDATA[<h1 id="因需将产品联网处理"><a href="#因需将产品联网处理" class="headerlink" title="因需将产品联网处理"></a>因需将产品联网处理</h1><p>​虽然一直在研究乐鑫esp8266，但发现接入云服务还需自己付费使用，因此就考虑找能免费对接网络的模块，很久以前玩过司南物联芯片，本想购入，但却发现主页都进不去，只好作罢。后来又找汉枫模块和涂鸦模块。</p><a class="btn-beautify block" href="http://www.hi-flying.com/index.php?route=product/category&path=135" title="汉枫模块"><i class="far fa-hand-point-right"></i><span>汉枫模块</span></a><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/MQTT-protocol?id=Kb65nphxrj8f1" title="涂鸦模块"><i class="far fa-hand-point-right"></i><span>涂鸦模块</span></a><p>汉枫看起来挺麻烦，加之比象花费太大时间！就选择涂鸦模块，因为涂鸦网站资料相对较多，也提供相对详细SDK，通过串口UART连接即可，根据说明，只要将其SDK-C导入到工程就可以使用。</p><h1 id="模块选择"><a href="#模块选择" class="headerlink" title="模块选择"></a>模块选择</h1><p>选择的是WBR3模块</p><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy" title="WBR3模块说明"><i class="far fa-hand-point-right"></i><span>WBR3模块说明</span></a><p>WBR3 是由涂鸦智能开发的一款低功耗嵌入式 Wi-Fi 加蓝牙模组。它由一个高集成度的无线射频芯片W701-VA2-CG构成，内置了 Wi-Fi 网络协议栈和丰富的库函数</p><ul><li>内置低功耗 KM4 MCU，可以兼作应用处理器</li><li>主频 100MHz</li><li>工作电压：3V-3.6V</li><li>外设：9×GPIOs, 1×UART, 1×Log_Tx</li><li>Wi-Fi&#x2F;蓝牙连通性<ul><li>802.11 B&#x2F;G&#x2F;N20</li><li>通道 <a href="mailto:&#x31;&#45;&#49;&#52;&#x40;&#x32;&#46;&#x34;&#71;&#72;&#x7a;">&#x31;&#45;&#49;&#52;&#x40;&#x32;&#46;&#x34;&#71;&#72;&#x7a;</a>(CH1-11 for US&#x2F;CA, CH1-13 for EU&#x2F;CN)</li><li>支持 WEP&#x2F;WPA&#x2F;WPA2&#x2F;WPA2 PSK（AES） 安全模式</li><li>支持 Bluetooth 4.2 Low Energy</li><li>802.11b 模式下 +20dBm 的输出功率</li><li>支持 SmartConfig 功能，包括 Android 和 iOS 设备</li><li>板载 PCB Onboard 天线</li><li>通过 CE、FCC 认证</li><li>工作温度：-20℃ to 85℃</li></ul></li></ul><h3 id="尺寸封装"><a href="#尺寸封装" class="headerlink" title="尺寸封装"></a>尺寸封装</h3><ul><li>WBR3 共有 2 排引脚（2×8），引脚间距为 2mm。</li><li>WBR3 尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×2.9±0.15 mm (H)。WBR3尺寸图如下图所示<img src="/posts/2486667095/1.WBR3%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">1.WBR3脚位图</li></ul><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote><h2 id="电气参数"><a href="#电气参数" class="headerlink" title="电气参数"></a>电气参数</h2><h3 id="绝对电气参数"><a href="#绝对电气参数" class="headerlink" title="绝对电气参数"></a>绝对电气参数</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ts</td><td align="left">存储温度</td><td align="left">-40</td><td align="left">105</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">供电电压</td><td align="left">-0.3</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">静电释放电压（人体模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">2</td><td align="left">KV</td></tr><tr><td align="left">静电释放电压（机器模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">0.5</td><td align="left">KV</td></tr></tbody></table><h3 id="工作条件"><a href="#工作条件" class="headerlink" title="工作条件"></a>工作条件</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">典型值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ta</td><td align="left">工作温度</td><td align="left">-20</td><td align="left">-</td><td align="left">85</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">工作电压</td><td align="left">3.0</td><td align="left">-</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">VIL</td><td align="left">I&#x2F;O低电平输入</td><td align="left">-</td><td align="left">-</td><td align="left">0.8</td><td align="left">V</td></tr><tr><td align="left">VIH</td><td align="left">I&#x2F;O高电平输入</td><td align="left">2.0</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">VOL</td><td align="left">I&#x2F;O低电平输出</td><td align="left">-</td><td align="left">-</td><td align="left">0.4</td><td align="left">V</td></tr><tr><td align="left">VOH</td><td align="left">I&#x2F;O高电平输出</td><td align="left">2.4</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">Imax</td><td align="left">I&#x2F;O驱动电流</td><td align="left">-</td><td align="left">-</td><td align="left">16</td><td align="left">mA</td></tr><tr><td align="left">Cpad</td><td align="left">输入引脚电容</td><td align="left">-</td><td align="left">2</td><td align="left">-</td><td align="left">pF</td></tr></tbody></table><h3 id="射频功耗"><a href="#射频功耗" class="headerlink" title="射频功耗"></a>射频功耗</h3><ul><li><p>TX 连续发送时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">功率</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">17dBm</td><td align="left">217</td><td align="left">268</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">18dBm</td><td align="left">231</td><td align="left">283</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">15dBm</td><td align="left">159</td><td align="left">188</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">17.5dBm</td><td align="left">177</td><td align="left">213</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">13dBm</td><td align="left">145</td><td align="left">167</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">16.5dBm</td><td align="left">165</td><td align="left">193</td><td align="left">mA</td></tr></tbody></table></li><li><p>RX 连续接收时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11B 11M</td><td align="left">63</td><td align="left">65</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11G 54M</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11N HT20 MCS7</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr></tbody></table></li></ul><h2 id="射频参数"><a href="#射频参数" class="headerlink" title="射频参数"></a>射频参数</h2><h3 id="基本射频特性"><a href="#基本射频特性" class="headerlink" title="基本射频特性"></a>基本射频特性</h3><table><thead><tr><th align="left">参数项</th><th align="left">详细说明</th></tr></thead><tbody><tr><td align="left">频率范围</td><td align="left">2.400~2.4835GHz</td></tr><tr><td align="left">Wi-Fi标准</td><td align="left">IEEE 802.11b&#x2F;g&#x2F;n(通道 1-14)</td></tr><tr><td align="left">蓝牙标准</td><td align="left">蓝牙4.2</td></tr><tr><td align="left">数据传输速率</td><td align="left">11b:1,2,5.5, 11 (Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11g:6,9,12,18,24,36,48,54(Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11n:HT20 MCS0~7</td></tr><tr><td align="left">天线类型</td><td align="left">PCB 天线，增益2.5dBi</td></tr></tbody></table><h2 id="天线信息"><a href="#天线信息" class="headerlink" title="天线信息"></a>天线信息</h2><h3 id="天线类型"><a href="#天线类型" class="headerlink" title="天线类型"></a>天线类型</h3><p>只有 PCB 板载天线接入方式，天线增益 2.5dBi。</p><h3 id="降低天线干扰"><a href="#降低天线干扰" class="headerlink" title="降低天线干扰"></a>降低天线干扰</h3><p>在 Wi-Fi 模组上使用 PCB 板载天线时，为确保 Wi-Fi 性能的最优化，建议模组天线部分和其他金属件距离至少在 15mm 以上。</p><h2 id="封装信息及生产指导"><a href="#封装信息及生产指导" class="headerlink" title="封装信息及生产指导"></a>封装信息及生产指导</h2><h3 id="机械尺寸"><a href="#机械尺寸" class="headerlink" title="机械尺寸"></a>机械尺寸</h3><p>WBR3的PCB机械尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×0.8±0.1 mm (H)。WBR3的机械尺寸如下图所示。</p><img src="/posts/2486667095/3.%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIFI </tag>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql重置密码</title>
      <link href="/posts/643139453.html"/>
      <url>/posts/643139453.html</url>
      
        <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>因为最近在研究 VUE连接 PHP和mysql，而之前安装过mysql后忘记密码，遂找办法重置密码！</p><h1 id="验证可行步骤"><a href="#验证可行步骤" class="headerlink" title="验证可行步骤"></a>验证可行步骤</h1><ol><li><p>打开命令窗口cmd，输入命令：net stop mysql，停止MySQL服务 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li><p>开启跳过密码验证登录的MySQL服务<br>输入命令  mysqld –console –skip-grant-tables –shared-memory </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --console --skip-grant-tables --shared-memory </span><br></pre></td></tr></table></figure></li><li><p>再打开一个新的cmd，无密码登录MySQL，输入登录命令：mysql -u root -p</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>密码置为空，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br><span class="line"></span><br><span class="line">  update user set authentication_string&#x3D;&#39;&#39; where user&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure> <img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121131355851-1940142196.png"></li><li><p>退出mysql，执行命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure></li><li><p>关闭以-console –skip-grant-tables –shared-memory 启动的MySQL服务，</p></li><li><p>打开命令框，输入：net start mysql  启动MySQL服务，一管理员的身份运行cmd。</p></li><li><p>步骤4密码已经置空，所以无密码状态登录MySQL，输入登录命令：mysql -u root -p</p></li><li><p>利用上一篇博客中更改密码的命令，成功修改密码，如下图：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;新密码&#39;;</span><br></pre></td></tr></table></figure><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132058721-318719011.png">10. 验证更改后密码正确登录<p>输入quit，退出当前登录，输入登录命令：mysql -u root -p<br><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132340755-1605186062.png"></p><p>输入密码，成功登录，到此，重置密码结束。</p><h1 id="文章来源"><a href="#文章来源" class="headerlink" title="文章来源"></a>文章来源</h1><ol><li><a href="https://www.cnblogs.com/wsl-/p/10688292.html">mysql重置密码</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程来 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
            <tag> 重置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat脚本相关技巧</title>
      <link href="/posts/387550601.html"/>
      <url>/posts/387550601.html</url>
      
        <content type="html"><![CDATA[<h1 id="当前盘符-x2F-当前bat路径"><a href="#当前盘符-x2F-当前bat路径" class="headerlink" title="当前盘符&#x2F;当前bat路径"></a><a href="https://blog.csdn.net/wumingxiao001bei/article/details/107859035">当前盘符&#x2F;当前bat路径</a></h1><h2 id="bat脚本显示当前盘符、当前路径、当前bat脚本路径"><a href="#bat脚本显示当前盘符、当前路径、当前bat脚本路径" class="headerlink" title="bat脚本显示当前盘符、当前路径、当前bat脚本路径"></a>bat脚本显示当前盘符、当前路径、当前bat脚本路径</h2><p>当前盘符 %<del>d0、当前路径 %cd%、当前执行命令行 %0、当前bat文件路径 %</del>dp0、当前bat文件短路径 %~dp0<br>编写代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">::关闭<span class="built_in">echo</span>回显</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::当前盘符</span><br><span class="line"><span class="built_in">echo</span> current pan : %~d0</span><br><span class="line"></span><br><span class="line">::当前路径</span><br><span class="line"><span class="built_in">echo</span> current path : %<span class="built_in">cd</span>%</span><br><span class="line"></span><br><span class="line">::当前执行命令行</span><br><span class="line"><span class="built_in">echo</span> current cmd : %0</span><br><span class="line"></span><br><span class="line">::当前bat文件路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::当前bat文件短路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::暂停bat脚本</span><br><span class="line">Pause</span><br></pre></td></tr></table></figure><p>测试效果:<br><img src="https://img-blog.csdnimg.cn/20200807113746849.png"></p>]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图标异常处理</title>
      <link href="/posts/2606890055.html"/>
      <url>/posts/2606890055.html</url>
      
        <content type="html"><![CDATA[<h1 id="异常原因"><a href="#异常原因" class="headerlink" title="异常原因"></a>异常原因</h1><p>原本想安装 xampp8.0.0.1 软件拿来做简单服务搭建，安装结束后发现 navicat 和 Postman 这两个程序图标异常<br>怀疑是安装这个程序的 mysql 篡改了内容，卸载后删除相应文件就可以了</p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ol><li><p>运行 %localappdata%<br>自动打开了 C:\Users\Administrator\AppData\Local 文件夹</p></li><li><p>删除文件 IconCach.db</p></li><li><p>组合键Ctrl+Shift+Esc 打开任务管理器<br>选择 Windows 资源管理–&gt;重新启动即可</p></li></ol><p><a href="http://www.360doc.com/content/22/0404/21/47597997_1024856093.shtml">桌面图标异常怎么办？</a></p>]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 桌面图标异常 </tag>
            
            <tag> xampp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收集好网站</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<p>配置美化相关</p><p>hexo个人博客搭建（二）butterfly主题配置: <a href="https://blog.csdn.net/YR_112233/article/details/122778691">Link</a></p><p>图片显示相关<br>Hexo + Typora + 开发Hexo插件 解决图片路径不一致: <a href="https://moeci.com/posts/hexo-typora/">Link</a><br>Hexo引用显示本地图片: <a href="https://www.xilixili.net/2019/03/26/hexo-markdown-use-images/">Link</a><br>Hexo butterfly 自定义文章封面 &amp;&amp; 主页顶部图片更改: <a href="https://blog.csdn.net/qq_43857095/article/details/108306164">Link</a></p><p>部署相关<br>Hexo 部署到 Gitee: <a href="https://blog.csdn.net/qq_38157825/article/details/112783631">Link</a><br>Hexo阶段三 – 将Hexo部署到github: <a href="https://blog.csdn.net/Night__breeze/article/details/117607049">Link</a></p><p>导航栏相关<br>Hexo 修改导航栏、标签、分类、归档图标，一分钟搞定: <a href="https://blog.csdn.net/h_kaka/article/details/119655493">Link</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题使用笔记</title>
      <link href="/posts/59422436.html"/>
      <url>/posts/59422436.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 安装文档(三) 主题配置-1</a><br>目录</p><ol><li>语言 2. 网站资料 3. 导航菜单</li><li>代码 4.1. 代码高亮主题 4.2. 代码复製 4.3. 代码框展开&#x2F;关闭 4.4. 代码换行 4.5. 代码高度限制</li><li>社交图标 6. 主页文章节选(自动节选和文章页description) 7. 顶部图 8. 文章置顶</li><li>文章封面 10. 文章页相关配置 10.1. 文章meta显示 10.2. 文章版权 10.3. 文章打赏<br>10.4. TOC 10.4.1. 为特定的文章配置 10.5. 相关文章 10.6. 文章锚点 10.7. 文章过期提醒<br>10.8. 文章编辑按钮 10.9. 文章分页按钮</li><li>头像 12. 图片描述 13. 复製相关配置 14. Footer 设置<br>14.1. 博客年份 14.2. 页脚自定义文本</li><li>右下角按钮 15.1. 简繁转换 15.2. 夜间模式 15.3. 閲读模式 15.4. 按钮排序</li><li>侧边栏设置 16.1. 侧边排版 16.2. 访问人数 busuanzi (UV 和 PV) 16.3. 运行时间<br>16.4. 最新评论 16.5. 自定义添加栏目</li><li>标籤外挂（Tag Plugins） 17.1. Note (Bootstrap Callout) 17.2. Gallery相册图库<br>17.3. Gallery相册 17.4. tag-hide 17.5. mermaid 17.6. Tabs 17.7. Button<br>17.8. inlineImg 17.9. label 17.10. timeline 17.11. flink</li></ol><p><a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 安装文档(四) 主题配置-2</a><br>目录</p><ol><li>评论 2. 在綫聊天 3. 分享 4. 搜索系统 5. 网站验证 6. 分析统计 7. 广告</li><li>Math 数学 9. 美化&#x2F;特效 9.1. 自定义主题色 9.2. 网站背景 9.3. footer 背景<br>9.4. 打字效果 9.5. 背景特效 9.6. 鼠标点击效果 9.7. 页面美化 9.8. 自定义字体和字体大小<br>9.8.1. 全局字体 9.8.2. Blog 标题字体 9.9. 网站副标题<br>9.10. 主页top_img显示大小 9.11. 页面加载动画preloader</li><li>PWA 11. 字数统计 12. 图片大图查看模式 13. Snackbar 弹窗 </li><li>其它配置 14.1. CSS 前缀 14.2. Open Graph 14.3. Instantpage<br>14.4. Pangu 15. Pjax 16. Inject 17. CDN</li></ol><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>433无线遥控使用说明</title>
      <link href="/posts/253476467.html"/>
      <url>/posts/253476467.html</url>
      
        <content type="html"><![CDATA[<h1 id="产品实物图说明"><a href="#产品实物图说明" class="headerlink" title="产品实物图说明"></a>产品实物图说明</h1><p>(图: 1.00安装git-vim-make程序)</p><img src="/posts/253476467/aaa.jpg" class title="This is an 433无线遥控 image"><img src="/posts/253476467/0.0%E4%BA%A7%E5%93%81%E5%9B%BE%E6%A6%82%E8%A7%88.jpg" class title="This is an 433无线遥控 image"> <h1 id="使用步骤说明"><a href="#使用步骤说明" class="headerlink" title="使用步骤说明"></a>使用步骤说明</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个标籤外挂。</p><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button" style>Click  </button><span class="hide-content">闪</span></span></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>block独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style>查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案</p></div></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><details class="toggle"><summary class="toggle-button" style>Butterfly安装方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><a class="btn-beautify block" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>主题中的图片都是默认以块级元素显示，如果你想以内联元素显示，可以使用这个标签外挂。</p><p>你看我长得漂亮不</p><p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>高亮所需的文字</p><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>可在任何界面插入类似友情链接列表效果</p><p>内容格式与友情链接界面一样，支持 yml 格式</p><div class="flink"><div class="flink-name">友情链接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="JerryC">              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日毕">今日事,今日毕</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="Hexo">              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、简单且强大的网誌框架">快速、简单且强大的网誌框架</div>            </a>          </div></div></div>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java学习标签 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO打开 related_posts 推荐功能时出现编译异常</title>
      <link href="/posts/2738849392.html"/>
      <url>/posts/2738849392.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>因为刚开始写文章并未出现tags标签重合，所以并未触发推荐功能！直到昨天写一篇有重复tags标签后就发现一直报错，首先还是网上百度查找问题。<br>一通操作下来，都只能找到 related_posts 打开说明和设置方式，最后还是得通过故障自己解决！<br>问题定位如图：</p><img src="/posts/2738849392/1.%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D.png" class title="This is an 1.HEXO打开推荐功能时出现编译异常 image"><h2 id="1-最初点-post-pug"><a href="#1-最初点-post-pug" class="headerlink" title="1.最初点 post.pug"></a>1.最初点 post.pug</h2><pre><code>hexo-theme-butterfly\layout\post.pug:27</code></pre><p>即说明是在文件 post.pug 中的函数 related_posts 出了异常，</p><blockquote><p>25|       include includes&#x2F;pagination.pug<br>    26|     if theme.related_post &amp;&amp; theme.related_post.enable<br>  –27|       !&#x3D; related_posts(page,site.posts)<br>    28|<br>    29|     if page.comments !&#x3D;&#x3D; false &amp;&amp; theme.comments &amp;&amp; theme.comments.use<br>    30|       - var commentsJsLoad &#x3D; true</p></blockquote><h2 id="2-根本问题点-this-escape-html-is-not-a-function"><a href="#2-根本问题点-this-escape-html-is-not-a-function" class="headerlink" title="2.根本问题点 this.escape_html is not a function"></a>2.根本问题点 this.escape_html is not a function</h2><p>最后问题为 related_post.js 文件下的 escape_html 函数</p><blockquote><p>使用escapeHTML，将字符串转为 &lt;script&gt;alert(2);&lt;&#x2F;script&gt;此时，浏览器将能正确解析，因为浏览器接收到实体字符后，转成对应的尖括号等<br>在 hexo-theme-butterfly\scripts\helpers\related_post.js 中的 escape_html 并未定义，因此有推荐数据进来时就报错，本来想自己增加 escape_html 函数，但又报 related_posts is not a function 错误，只好作罢！</p></blockquote><h2 id="3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）"><a href="#3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）" class="headerlink" title="3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）"></a>3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）</h2><p>既然返回的标题是字符串型，那就直接使用字符串测试后发现确实能通过，最后就去掉 escape_html 而直接使用。<br>按照说明，应该是浏览器字符串转换相关，后续看会不会因此报出什么故障了！<br>问题解决如图：</p><img src="/posts/2738849392/2.%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.png" class title="This is an 1.HEXO打开推荐功能时出现编译异常 image"><h1 id="参考到好的文章"><a href="#参考到好的文章" class="headerlink" title="参考到好的文章"></a>参考到好的文章</h1><p>一、<a href="https://www.cainiaoxueyuan.com/bc/1607.html">Hexo主题开发谈：制作过程如何避坑和一些经验</a><br>1.安装了hexo-browsersync之后也不能实现修改pug文件之后刷新出修改后的结果。只能实现自动刷新，但是刷新了之后还是修改前的页面。所以我找了一种办法使其能够达到预期的刷新并修改的效果，可以参考这个issue里最下面我的回答：<br>在你的node_modules文件夹里找到hexo-renderer-jade的文件夹，然后将里面lib&#x2F;pug.js（jade同理）的其中一行代码注释掉：<br>&#x2F;&#x2F; pugRender.compile &#x3D; pugCompile<br>我初步看了一下应该是跟预编译有关系。<br>2. hexo-server模式下，中文文章渲染不全。可以参考这个相关issue。解决办法是在站点的（而不是主题的）_config.yml里添加如下配置：<br>server:<br>    compress: true # 开启压缩<br>3. hexo默认的highlight渲染在未指定代码类型的时候会很慢，为了规范我们的文章书写以及提高渲染速度，我们应该在站点的配置文件里加上：<br>highlight:<br> auto_detect: false<br>并在写文章的时候，代码块的声明区域边上直接带上代码类型，比如：<code>js，这样就正常了</code></p><p>二、<a href="https://blog.csdn.net/qq_33058239/article/details/78727888">转义分为escapeHTML和unescapeHTML，先看两个函数的实现。</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>escapeHTML 转义html脚本 &lt; &gt; &amp; &quot; &#x27; </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">a</span></span> - </span></span><br><span class="line"><span class="comment"> *            字符串 </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line">escapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&quot;&quot;</span><span class="string">&quot;).replace(/&#x27;/g, &quot;</span><span class="string">&#x27;&quot;);;  </span></span><br><span class="line"><span class="string">&#125;,  </span></span><br><span class="line"><span class="string">/** </span></span><br><span class="line"><span class="string"> * @function unescapeHTML 还原html脚本 &lt; &gt; &amp; &quot; &#x27;</span> </span><br><span class="line"> * @param a - </span><br><span class="line"> *            字符串 </span><br><span class="line"> */  </span><br><span class="line">unescapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&quot;&#x27;</span>).replace(<span class="regexp">/&#x27;/g</span>, <span class="string">&quot;&#x27;&quot;</span>);  </span><br><span class="line">&#125;, </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 推荐文章 </tag>
            
            <tag> escape_html </tag>
            
            <tag> related_posts </tag>
            
            <tag> escapeHTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO本地服务正常，发布github后排版异常</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<img src="/posts/2614359431/%E5%B0%81%E9%9D%A2.jpeg" class title="This is an HEXO本地服务正常，发布github后排版异常 image"><p>使用的是 hexo+butterfly主题</p><p>在本地打开服务器时一切都很正常，一旦推送到github之后排版错乱起来！</p><p>原本很奇怪，以为是主题导致，查了很多都未发现问题！</p><p>最后删除 .deploy_git 后重建缓冲推送就正常了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>比参考文章好的是，这里能显示图片！</p><p>参考以下文档:<br><a href="https://blog.csdn.net/Wlittlestar/article/details/123964059?spm=1001.2014.3001.5501">BUG记录| hexo博客本地预览正常，但发布后不显示主题</a></p>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Esp8266做socket实验(TcpServer TcpClient UdpServer Udpclient)</title>
      <link href="/posts/32911666.html"/>
      <url>/posts/32911666.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境:"></a>实验环境:</h1><ol><li>虚拟机:VirtualBox6.0</li><li>Ubuntu系统: ubuntu-20.04.1-desktop-amd64</li><li>ESP8266: NodeMCU开发板</li><li>SDK:V3.4</li><li>使用乐鑫SDK提供examples实验使用</li></ol><h1 id="0、补充：编译完成后下载出现ttyUSB0找不到的问题"><a href="#0、补充：编译完成后下载出现ttyUSB0找不到的问题" class="headerlink" title="@0、补充：编译完成后下载出现ttyUSB0找不到的问题:"></a>@0、补充：编译完成后下载出现ttyUSB0找不到的问题:</h1><p>(图0.00找不到ttyUSB0)<br> <img src="/posts/32911666/0.00%E6%89%BE%E4%B8%8D%E5%88%B0ttyUSB0.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>这样需要设置好虚拟机和Ubuntu，然后插拔USB重新挂载：<br>（图0.10Ubuntu设置USB）<br> <img src="/posts/32911666/0.10Ubuntu%E8%AE%BE%E7%BD%AEUSB.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图0.11拔插USB显示连接上USB）<br> <img src="/posts/32911666/0.11%E6%8B%94%E6%8F%92USB%E6%98%BE%E7%A4%BA%E8%BF%9E%E6%8E%A5%E4%B8%8AUSB.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>最后使用命令使Ubuntu挂载USB0:<br>1.sudo usermod -a -G dialout $USER<br>2.sudo chmod -R 777 &#x2F;dev&#x2F;ttyUSB0<br>（图0.12可以正常下载和窗口监视）<br> <img src="/posts/32911666/0.12%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%AA%97%E5%8F%A3%E7%9B%91%E8%A7%86.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 分割线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887"><a href="#1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887" class="headerlink" title="@1、Socket预备知识:  https://blog.csdn.net/pashanhu6402/article/details/96428887"></a>@1、Socket预备知识:  <a href="https://blog.csdn.net/pashanhu6402/article/details/96428887">https://blog.csdn.net/pashanhu6402/article/details/96428887</a></h1><p>（图1.00Socket在网络中的结构）<br> <img src="/posts/32911666/1.00Socket%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E7%BB%93%E6%9E%84.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><h1 id="2、TcpServer和-TcpClient"><a href="#2、TcpServer和-TcpClient" class="headerlink" title="@2、TcpServer和 TcpClient"></a>@2、TcpServer和 TcpClient</h1><p>（图2.00TCP协议结构流程图）<br> <img src="/posts/32911666/2.00TCP%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84%E6%B5%81%E7%A8%8B%E5%9B%BE.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"><br>TcpServer和 TcpClient流程基本相同，不过TcpServer相对来说多了些流程。复制到工作目录下边。<br>（图2.10复制Tcp_Server文件到实验目录）<br> <img src="/posts/32911666/2.10%E5%A4%8D%E5%88%B6Tcp_Server%E6%96%87%E4%BB%B6%E5%88%B0%E5%AE%9E%E9%AA%8C%E7%9B%AE%E5%BD%95.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>打开Tcp_Server.c文件修改app_main为TcpServer_init,使用CONFIG_EXAMPLE_IPV4而非IPV6。<br>（图2.11修改app_main方便调用）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A8.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.11修改app_main方便调用1）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A81.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.12设置端口且使用IPV4）<br> <img src="/posts/32911666/2.12%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E4%B8%94%E4%BD%BF%E7%94%A8IPV4.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>在app_main函数中调用TcpServer_init完成TcpServer功能<br>（图2.13调用TcpServer功能）<br> <img src="/posts/32911666/2.13%E8%B0%83%E7%94%A8TcpServer%E5%8A%9F%E8%83%BD.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>下载即可使用<br>@2、tcpclient功能设置与tcpserver基本相同！<br>@3、udpclient功能设置和udpserver操作也基本相同！！！</p><p>技术总结：<br>@一、注意USB0的挂载问题！<br>@二、要复制components文件到实验目录，否则会找不到protocol_examples_common.h头文件！<br>（图3.13网络连接头文件）<br> <img src="/posts/32911666/3.13%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E5%A4%B4%E6%96%87%E4%BB%B6.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>乐鑫Esp8266_RTOS_SDK最新SDK_IDF编译环境搭建</title>
      <link href="/posts/2171885577.html"/>
      <url>/posts/2171885577.html</url>
      
        <content type="html"><![CDATA[<h1 id="零、安装Ubuntu"><a href="#零、安装Ubuntu" class="headerlink" title="零、安装Ubuntu"></a>零、安装Ubuntu</h1><p>续上集:《安装Ubuntu并设置共享和Xshell》安装好Ubuntu系统后就可以开始着手搭建ESP8266编译环境，不过过程并不美好，个中滋味及其坎坷只有受过毒打的人才能体会！！！真的比在Windows安装安信可环境麻烦N多倍。(想想之后可能要安装ESP32开发环境，誒，打工人！)<br>从上篇文章搭好到现在完成SDK_IDF的hello_world编译完成，竟然花了将近20天时间！！虽然都是零星使用上班和晚上下班回去做，但跨度也是有些长，其中各种被蹂躏真不是滋味！！！</p><p>@0、补充：上集补充:在安装好之后，发现每次都需要挂载share共享文件夹，很麻烦，因此就想办法每次开机后直接挂载，因此就有以下补充: </p><ol><li>sudo vim &#x2F;etc&#x2F;fstab</li><li>share &#x2F;mnt&#x2F;share vboxsf defaults 0 0<br>（图:0.0共享文件自动加载） <img src="/posts/2171885577/0.0%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 我是分鸽线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</li></ol><hr><h1 id="一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件"><a href="#一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件" class="headerlink" title="@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件"></a>@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件</h1><h2 id="1-安装git、vim、make软件"><a href="#1-安装git、vim、make软件" class="headerlink" title="1.  安装git、vim、make软件:"></a>1.  安装git、vim、make软件:</h2><p>sudo apt install git vim make<br>(图: 1.00安装git-vim-make程序)</p><img src="/posts/2171885577/1.00%E5%AE%89%E8%A3%85git-vim-make%E7%A8%8B%E5%BA%8F.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-安装乐鑫所需相关软件"><a href="#2-安装乐鑫所需相关软件" class="headerlink" title="2.  安装乐鑫所需相关软件:"></a>2.  安装乐鑫所需相关软件:</h2><p>sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python3 python3-serial<br>(图:1.10安装乐鑫所需软件)</p><img src="/posts/2171885577/1.10%E5%AE%89%E8%A3%85%E4%B9%90%E9%91%AB%E6%89%80%E9%9C%80%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p> 此时若报故障: (“选中 ‘python-is-python2’ 而非 ‘python’”,则要需要把Python3修改成默认,因为我已设置过，所以可以直接下载通过,算是第一个坑吧！)<br>这是由于Ubuntu所安装默认的Python为Python2，把它修改默认为Python3即可<br>查看本机安装的Python版本:<br>sudo ln -s &#x2F;usr&#x2F;bin&#x2F;python3.8 &#x2F;usr&#x2F;bin&#x2F;python<br>（图: 1.11查看本机安装的Python）</p><img src="/posts/2171885577/1.11%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BA%E5%AE%89%E8%A3%85%E7%9A%84Python.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！"><a href="#3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！" class="headerlink" title="3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)"></a>3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)</h2><p>sudo apt-get install python3-pip<br>(图:1.12通过Python安装pip软件)</p><img src="/posts/2171885577/1.12%E9%80%9A%E8%BF%87Python%E5%AE%89%E8%A3%85pip%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h3 id="以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"><a href="#以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！" class="headerlink" title="以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"></a>以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！</h3><h1 id="二、下载ESP8266最新SDK和Tool编译链工具"><a href="#二、下载ESP8266最新SDK和Tool编译链工具" class="headerlink" title="@二、下载ESP8266最新SDK和Tool编译链工具"></a>@二、下载ESP8266最新SDK和Tool编译链工具</h1><h2 id="1-下载ESP8266的SDK"><a href="#1-下载ESP8266的SDK" class="headerlink" title="1.  下载ESP8266的SDK"></a>1.  下载ESP8266的SDK</h2><p>去官网下载适合自己开发的SDK(必须3.0及以上),官网有说明！我下的是最新版本。一定一定一定一定要加–recursive拉取所有字模块，否则根本编译不了，而且还不知啥问题！！！这一步不知掉了多少次坑！</p><p>方法一(最好但下载速度最慢):去GitHub下载SDK,可以出门办个事，因为时间实在是太太太漫长了……………(如果会科学上网应该好很多，不过没去研究它！有更好办法的小伙伴希望能交流一下哦)<br> git clone –recursive <a href="https://github.com/espressif/ESP8266_RTOS_SDK.git">https://github.com/espressif/ESP8266_RTOS_SDK.git</a><br>(图: 2.10从GitHub上下载相应SDK)</p><img src="/posts/2171885577/2.10%E4%BB%8EGitHub%E4%B8%8A%E4%B8%8B%E8%BD%BD%E7%9B%B8%E5%BA%94SDK.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二(拉下来总会异常):去Gittee码云上下载SDK，官方放一份到码云，但直–recursive拉取时总出现账户登录，试了很多次就放弃了！虽然下载速度很诱人，但……<br>方法三(下载别人已经打包好的文件)：网上找了些，但还是编译不通过！到时候我也贴出自己从GitHub下载好的SDK出来。<br>（图: 2.13打包好的SDK和编译链工具）</p><img src="/posts/2171885577/2.13%E6%89%93%E5%8C%85%E5%A5%BD%E7%9A%84SDK%E5%92%8C%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-下载编译链工具"><a href="#2-下载编译链工具" class="headerlink" title="2.  下载编译链工具"></a>2.  下载编译链工具</h2><p>方法一(我只找到最新的5.2.0版本)：到乐鑫官网下载编译工具链<br>方法二:网上其他人提供编译链工具，很多都是5.2.0工具。<br>方法三(我在使用):在SDK目录下有README.md,它提供了合适的编译工具链(图: 2.23从README下载正确版本编译链工具)</p><p>使用wget下载适合系统编译链工具(也可从其他地方下载，建议还是从本环境下载，因为其他地方下载不知道又会出什么幺蛾子，这苦也吃过了！)<br>wget <a href="https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz">https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz</a><br>(图: 2.23使用wget下载编译链工具到当前目录)</p><img src="/posts/2171885577/2.23%E4%BD%BF%E7%94%A8wget%E4%B8%8B%E8%BD%BD%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7%E5%88%B0%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>使用tar解压编译工具链<br>sudo tar zxvf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz<br>(图: 2.24解压编译工具链)</p><img src="/posts/2171885577/2.24%E8%A7%A3%E5%8E%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h1 id="三、设置工具链PATH和SDK的PATH并检查其合法性"><a href="#三、设置工具链PATH和SDK的PATH并检查其合法性" class="headerlink" title="@三、设置工具链PATH和SDK的PATH并检查其合法性"></a>@三、设置工具链PATH和SDK的PATH并检查其合法性</h1><h2 id="1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH"><a href="#1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH" class="headerlink" title="1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):"></a>1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):</h2><p>打开~&#x2F;.bashrc文件: sudo vim ~&#x2F;.bashrc在末尾并添加这两个PATH<br>export PATH&#x3D;$PATH:$HOME&#x2F;esp8266&#x2F;xtensa-lx106-elf&#x2F;bin<br>export IDF_PATH&#x3D;”$HOME&#x2F;esp8266&#x2F;ESP8266_RTOS_SDK”<br> 最后wq保存退出, 注销并重新登录或者直接使用命令source  ~&#x2F;.bashrc使环境更新(图: 3.11更新PATH环境)</p><img src="/posts/2171885577/3.11%E6%9B%B4%E6%96%B0PATH%E7%8E%AF%E5%A2%83.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="2-检查PATH环境合法性"><a href="#2-检查PATH环境合法性" class="headerlink" title="2.  检查PATH环境合法性"></a>2.  检查PATH环境合法性</h2><p>检查编译工具链(图: 3.20检查编译工具链PATH): echo $PATH<br> 检查SDK(图: 3.21检查SDK的PATH): echo $IDF_PATH</p><img src="/posts/2171885577/3.21%E6%A3%80%E6%9F%A5SDK%E7%9A%84PATH.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0"><a href="#3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0" class="headerlink" title="3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0"></a>3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0</h2><p>xtensa-lx106-elf-gcc -v</p><img src="/posts/2171885577/3.30%E6%9F%A5%E7%9C%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE%E7%89%88%E6%9C%AC%E5%8F%B7.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><p>小坑总结:至此，Ubuntu环境编译搭建基本告一段落！1、编译工具链下载要匹配，我就有好多次下载的是5.2.0版本工具链来编译最新SDK导致各种莫名其妙问题！2、设置PATH一定要做好，不一定非要用我这个办法，网上也有很多，不过经过多次测试后还是觉得这种方式好一些！！</p><h1 id="四、编译hello工程文件"><a href="#四、编译hello工程文件" class="headerlink" title="@四、编译hello工程文件"></a>@四、编译hello工程文件</h1><p>走到这一步你是否已经觉得胜利女神在向你招手了吗？是否觉得万无一失了呢？反正当初我是这么觉得的！不过遭受N多次毒打之后，现在没到程序烧录并跑起来前都不会掉以轻心！<br>为什么说到这一步还是很多问题呢？因为网上很多很多教程到这一步就基本成功，但^&#x3D;^不知为啥，到这一步后编译make还是出现各种缺失问题！以前是SDK或者编译工具链问题，之后就应该不会，然而网上这方面资料又寥寥无几！<br>直到经过好多好多好多次重装Ubuntu重新搭建编译环境，基本在绝望的边缘后！某天中午偶然去看官方文档，发现他们在新SDK架构上引入了install.sh机制,才解决了问题!<br>方法一:安装所需的Python软件包(我自己安装好也还是编译不通过)，网上很多方法就是这个，requirements.txt文件是在SDK根目录下，包含所需环境软件:<br>python -m pip install –user -r $IDF_PATH&#x2F;requirements.txt<br>（图: 4.10安装Python所需要环境程序）</p><img src="/posts/2171885577/4.10%E5%AE%89%E8%A3%85Python%E6%89%80%E9%9C%80%E8%A6%81%E7%8E%AF%E5%A2%83%E7%A8%8B%E5%BA%8F.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二:进入SDK根目录,运行(这相当于一键配置,我是用这个方法配置成功了),其实这个方法也十分十分漫长，网络不好可能还要很多次安装!这其实也挺看运气的！<br>.&#x2F;install.sh<br>（图: 4.11使用install自动安装环境软件）</p><img src="/posts/2171885577/4.11%E4%BD%BF%E7%94%A8install%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后进入hello_world文件进行make编译,第一次编译时间比较长,以后就快了！其它往后相关操作网上有很多人写好资料了！<br>cd $IDF_PATH&#x2F;examples&#x2F;get-started&#x2F;hello_world<br>（图: 4.12对hello_world编译make结果0）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C0.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果1）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C1.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果2）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C2.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后就是make falsh烧录以及make monitor进行串口监听了！</p><hr><p>技术总结：<br>@一、下载的SDK_IDF必须要完整！必须要包含子模块！！<br>@二、编译工具链一定要匹配所使用的SDK！<br>@三、该安装的环境软件一个都不能少，在哪儿报错就得先处理好它！<br>@四、需要耐心和细心！需要耐心和细心！！需要耐心和细心！！！</p><hr><p>相关链接：<br><a href="http://qizhuqukanhai_1.gitee.io/myblog/">个人博客</a><br><a href="https://blog.csdn.net/zml3589110/article/details/109319118">CDSN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安装Ubuntu并设置共享和Xshell</title>
      <link href="/posts/3271392839.html"/>
      <url>/posts/3271392839.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装Ubuntu"><a href="#一、安装Ubuntu" class="headerlink" title="一、安装Ubuntu"></a>一、安装Ubuntu</h1><p>先到官网下载Ubuntu安装镜像文件(本次下载的是ubuntu-20.04.1-desktop-amd64.iso) ,使用Oracle VM VirtualBox虚拟机,配置如下:</p><img src="/posts/3271392839/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>一直一键下一步就安装好了！<br>安装好之后使用sudo apt update来更新Ubuntu系统</p><img src="/posts/3271392839/update%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>经过漫长更新等待… …(大约半个钟,理论上应该取决于网络环境)后更新完毕！</p><img src="/posts/3271392839/update%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E5%AE%8C%E6%88%90.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="二、安装Xshell的SSH客户端服务功能"><a href="#二、安装Xshell的SSH客户端服务功能" class="headerlink" title="二、安装Xshell的SSH客户端服务功能"></a>二、安装Xshell的SSH客户端服务功能</h1><p>  更新完系统后执行sudo apt install ssh命令进行Ubuntu端安装,这个安装快很多很多…</p><img src="/posts/3271392839/%E5%AE%89%E8%A3%85shell%E6%9C%8D%E5%8A%A1.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>安装完成后</p><img src="/posts/3271392839/shell%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>然后安装net-tool工具sudo apt install net-tools进行安装</p><img src="/posts/3271392839/%E5%AE%89%E8%A3%85shell%E7%9A%84net%E5%B7%A5%E5%85%B7.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后把虚拟机的网卡连接方式设置成桥接网卡模式:</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E6%88%90%E6%A1%A5%E6%8E%A5%E7%BD%91%E5%8D%A1.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后使用指令ifconfig指令查询本机网卡地址,用于SSH连接:</p><img src="/posts/3271392839/%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BAIP%E5%9C%B0%E5%9D%80.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="三、转到Xshell进行连接-填入相应的IP地址"><a href="#三、转到Xshell进行连接-填入相应的IP地址" class="headerlink" title="三、转到Xshell进行连接:填入相应的IP地址"></a>三、转到Xshell进行连接:填入相应的IP地址</h1><img src="/posts/3271392839/%E5%9C%A8xshell%E4%B8%8A%E8%AE%BE%E7%BD%AEIP%E5%9C%B0%E5%9D%80.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>点击连接后即可进行连接:</p><img src="/posts/3271392839/xshell%E4%B8%8A%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="四、安装虚拟机和Windows文件共享"><a href="#四、安装虚拟机和Windows文件共享" class="headerlink" title="四、安装虚拟机和Windows文件共享"></a>四、安装虚拟机和Windows文件共享</h1><h2 id="4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可"><a href="#4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可" class="headerlink" title="4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可"></a>4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可</h2><img src="/posts/3271392839/%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>然后设置设备—共享文件夹—选择自动挂载和固定分配—然后确定(此时Windows和Ubuntu已经实现共享)</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>一切顺利的话，打开Ubuntu的media文件夹会出现以下共享文件(sf_share)</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><h2 id="4-2-验证共享功能"><a href="#4-2-验证共享功能" class="headerlink" title="4-2:验证共享功能:"></a>4-2:验证共享功能:</h2><p>打开刚刚连接好的Xshell并打开mnt文件夹并新建共享映射文件夹share(可以自己定义)<br>cd &#x2F;mnt&#x2F;<br>sudo mkdir share</p><img src="/posts/3271392839/%E6%98%A0%E5%B0%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后建立并挂载映射关系sudo mount -t vboxsf share share&#x2F;</p><img src="/posts/3271392839/%E6%98%A0%E5%B0%84%E5%BB%BA%E7%AB%8B%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>即可查看管理Windows下共享的文件！</p><hr><hr><p>技术总结：<br>@一:下载安装基本没难度，根据提示一般都能完成！<br>@二：若是纯净系统也基本能装得上。<br>@三：根据Xshell使用说明填写即可。<br>@四：之前不是纯净系统时，安装增强功能总失败，然后新系统就不存在该问题！还要注意共享模式的设置！</p><hr><p>相关链接：<br><a href="https://blog.csdn.net/zml3589110/article/details/108954649">CDSN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tupian</title>
      <link href="/posts/3935749953.html"/>
      <url>/posts/3935749953.html</url>
      
        <content type="html"><![CDATA[<img src="/posts/3935749953/aaa.jpg" class title="This is an tupian image"><p>写博客时适当的添加图片是很有效率的一种做法，也会让别人更容易明白你想表达的意思。</p><p>如果你的博客也是通过Hexo框架建立的，在使用初期你可能也遇到过和我相似的问题：在一个.md文件中添加的图片并没有在预览中显示出来，下面分享一种解决此问题的方法：</p><p>修改博客配置。<br>下载插件。<br>修改博客配置<br>修改博客根目录中_config.yml文件的配置项post_asset_folder为true：</p><p>post_asset_folder: true</p><p>完成此设置后，当你通过hexo new 文件名新建博客后，会产生一个和文件同名的文件夹。</p><p>image.png<br>下载插件<br>在博客根目录中下使用npm安装插件：</p><p>npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save</p><p>示例<br>当文章需要添加图片时，将需要添加的图片放入同名的文件夹中，同时通过相对路径索引到该图片。</p><p>例如我在上方修改博客配置中展示的那张图片的md源码为：</p><p>*[·-·]:<img src="/./%E8%A7%A3%E5%86%B3Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/1580801930220.png" alt="示例"><br>使用命令hexo s开启服务，若无报错在本地可以看到图片在博客中正确显示。</p><p>作者：Gsdxiaohei<br>链接：<a href="https://www.jianshu.com/p/ea78bdd0551f">https://www.jianshu.com/p/ea78bdd0551f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>*[·-·]:注释内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710.html"/>
      <url>/posts/1243066710.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>这是我的第一个Blog尝试</title>
      <link href="/posts/911816538.html"/>
      <url>/posts/911816538.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><h1 id="Reward"><a href="#Reward" class="headerlink" title="Reward"></a>Reward</h1><p>#reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！<br>wechatpay: <a href="http://p3dm71oa7.bkt.clouddn.com/wcpay.png">http://p3dm71oa7.bkt.clouddn.com/wcpay.png</a><br>alipay: <a href="http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg">http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg</a><br>#bitcoin: &#x2F;images&#x2F;bitcoin.png</p><p>#<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">=========================== 常用指令收集 ======================================</span><br><span class="line">//***挑选了常用指令***</span><br><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate<span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy<span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">一步到位</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br><span class="line">===============================================================================</span><br></pre></td></tr></table></figure><p>它来自:<a href="https://blog.csdn.net/qq_26975307/article/details/62447489">Server</a></p><p>以下是正文</p><!--more--><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line">全是静态文件，访问速度快；</span><br><span class="line">免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">等等；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 首次 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="/posts/3846156473.html"/>
      <url>/posts/3846156473.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><p>以下是正文</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li></ol><a id="more"></a><ol start="4"><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等；</li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
