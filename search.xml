<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C#窗体之三（窗口跳转 后关闭上一个窗口）</title>
      <link href="/posts/3802822928.html"/>
      <url>/posts/3802822928.html</url>
      
        <content type="html"><![CDATA[<h1 id="方法一：（这个方法未测试通过）"><a href="#方法一：（这个方法未测试通过）" class="headerlink" title="方法一：（这个方法未测试通过）"></a>方法一：（这个方法未测试通过）</h1><p>关闭子窗体后</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">form2.Closed += (ss,ee)=&gt; &#123; <span class="keyword">this</span>.Close(); &#125;;</span><br><span class="line"><span class="comment">//或Application.OpenForms集合找到要关闭的窗口，再Close：</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> Application.OpenForms)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> (item <span class="keyword">is</span> Form1) item.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方法二：（可行）"><a href="#方法二：（可行）" class="headerlink" title="方法二：（可行）"></a>方法二：（可行）</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B new_form = <span class="keyword">new</span> B();</span><br><span class="line">new_form.owner = <span class="keyword">this</span>;</span><br><span class="line"><span class="keyword">this</span>.hide();</span><br><span class="line">new_form.showdialog();</span><br><span class="line">Application.ExitThread();</span><br></pre></td></tr></table></figure><blockquote><p>Application.ExitThread();是退出当前线程。<br>首先默认情况下我们的程序是单线程的，<br>this.hide();后把当前窗体隐藏起来了，然后new_form.showdialog();模态弹出新窗口。<br>这个时候线程不会继续执行（被阻塞了），<br>直到我们关闭了新弹出来的模态窗口后，程序才会继续执行Application.ExitThread();此时线程关闭，所有一切都关闭了，隐藏的窗口也关闭了。</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://t.zoukankan.com/huanhuan86-p-2920303.html">C# winForm 窗口跳转 后关闭上一个窗口的方法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 窗体 </tag>
            
            <tag> 跳转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>窗体之二（进行多窗口切换：使用Panel）</title>
      <link href="/posts/4052716721.html"/>
      <url>/posts/4052716721.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-添加相应功能"><a href="#一-添加相应功能" class="headerlink" title="一.添加相应功能"></a>一.添加相应功能</h1><ol><li><strong>先在解决方案资源器中右键添加“用户控件”</strong></li></ol><img src="https://img-blog.csdnimg.cn/dd2e5d2b3ec04910b33d211464c8cb60.png"><ol start="2"><li>或者在项目中选择添加窗体控件或者窗体功能</li></ol><h1 id="二、在添加的控件中添加自己想要的UI"><a href="#二、在添加的控件中添加自己想要的UI" class="headerlink" title="二、在添加的控件中添加自己想要的UI"></a>二、在添加的控件中添加自己想要的UI</h1><img src="https://img-blog.csdnimg.cn/62886d235d204ac98cc1df5353747437.png"><h1 id="三、在主窗体中添加Panel并且设置相应调用关系"><a href="#三、在主窗体中添加Panel并且设置相应调用关系" class="headerlink" title="三、在主窗体中添加Panel并且设置相应调用关系"></a>三、在主窗体中添加Panel并且设置相应调用关系</h1><img src="https://img-blog.csdnimg.cn/9d737593fc264bc4924b6525f2140832.png"><p><strong>1. 在左侧的学生用户2双击跳转到代码，添加如下:</strong></p><img src="https://img-blog.csdnimg.cn/90087727998d49e78d51e6fbefe6fefd.png"><p><strong>2. 声明变量：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> UserControl1 f1; <span class="comment">//创建用户控件一变量</span></span><br><span class="line"><span class="keyword">public</span> UserControl2 f2; <span class="comment">//创建用户控件一变量</span></span><br></pre></td></tr></table></figure><p><strong>3. 定义相应变量：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1 = <span class="keyword">new</span> UserControl1();    <span class="comment">//实例化f1</span></span><br><span class="line">f2 = <span class="keyword">new</span> UserControl2();    <span class="comment">//实例化f1</span></span><br></pre></td></tr></table></figure><p><strong>4. 在按键事件中调用窗体的实现代码：</strong></p><img src="https://img-blog.csdnimg.cn/235b70edf18a4b5b870e3a2777c2f8ee.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f1.Show();   <span class="comment">//将窗体一进行显示</span></span><br><span class="line">panel2.Controls.Clear();    <span class="comment">//清空原容器上的控件</span></span><br><span class="line">panel2.Controls.Add(f1);    <span class="comment">//将窗体一加入容器panel2</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_35230125/article/details/125268494">C#实现多窗口切换：Panel详细教程（亲测）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 控件 </tag>
            
            <tag> 窗体 </tag>
            
            <tag> Panel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#语法之一（基础语法）</title>
      <link href="/posts/1833294516.html"/>
      <url>/posts/1833294516.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-C-程序结构"><a href="#一-C-程序结构" class="headerlink" title="一.C# 程序结构"></a>一.C# 程序结构</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//类的定义</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Rectangle</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//（1）属性</span></span><br><span class="line">        <span class="built_in">double</span> length;</span><br><span class="line">        <span class="built_in">double</span> width;</span><br><span class="line">        <span class="comment">//（2）方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Acceptdetails</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.length = <span class="number">4.5</span>;</span><br><span class="line">            <span class="keyword">this</span>.width = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getArea</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.length * <span class="keyword">this</span>.width;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Length: &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Width: &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Area: &#123;0&#125;&quot;</span>, getArea());</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//Main函数是程序的主入口</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Rectangle rectangle = <span class="keyword">new</span> Rectangle();</span><br><span class="line">            rectangle.Acceptdetails();</span><br><span class="line">            rectangle.Display();</span><br><span class="line">            <span class="comment">//阻塞窗口</span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>1.using的使用：</strong><br>  （1）含义：使用命名空间，类似于Java的Import<br>  （2）注意：using 关键字用于在程序中包含命名空间。一个程序可以包含多个 using 语句。<br><strong>2.namespace的使用：</strong><br>  （1）namespace声明本类的命名空间为netBasic_learning，其他地方可以通过using netBasic_learning来使用此处的类和方法<br>  （2）一个namespace内可以包含多个类<br><strong>3.Main函数的阻塞：</strong><br>  （1）Console.ReadLine() : 最后一行 Console.ReadLine(); 是针对 VS.NET 用户的。这使得程序会等待一个回车的动作，防止程序从 Visual Studio .NET 启动时屏幕会快速运行并关闭。即防止黑窗口一闪而过，阻塞一下。同时ReadLine()方法还可以用于读取程序输入。       （2）Console.ReadKey() : 其作用同上。<br><strong>4.总结：</strong><br>     1.C#语法基本与Java差不多，都是面向对象的语言。只不过C#主要面向桌面应用开发，Java主要面向Web应用开发<br>     2.C#与 Java 不同的是，文件名可以不同于类的名称。</p></blockquote><h1 id="二-C-数据类型与变量"><a href="#二-C-数据类型与变量" class="headerlink" title="二.C# 数据类型与变量"></a>二.C# 数据类型与变量</h1><h2 id="1-基本数据类型"><a href="#1-基本数据类型" class="headerlink" title="1.基本数据类型"></a>1.基本数据类型</h2><img src="https://img-blog.csdnimg.cn/b8fc58f805c149df8ffe75202099732a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_dataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.基本数据类型：分配存储空间，存放数据</span></span><br><span class="line">            <span class="built_in">int</span> Int_number = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">double</span> Double_number = <span class="number">3.14</span>;</span><br><span class="line">            <span class="built_in">bool</span> Bool_number = <span class="literal">true</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Int: &#123;0&#125;,Double: &#123;1&#125;,Bool: &#123;2&#125;&quot;</span>, Int_number,Double_number,Bool_number);<span class="comment">//自动换行</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-引用类型"><a href="#2-引用类型" class="headerlink" title="2.引用类型"></a>2.引用类型</h2><blockquote><p>引用类型不包含存储在变量中的实际数据，但它们包含对变量的引用。换句话说，它们指的是一个内存位置。使用多个变量时，引用类型可以指向一个内存位置。如果内存位置的数据是由一个变量改变的，其他变量会自动反映这种值的变化。内置的 引用类型有：object、string和我们自定义的类Class。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_dataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//引用数据类型：存放数据的引用地址，即别名(Object、String、class)</span></span><br><span class="line">            String str = <span class="string">&quot;Hello World！&quot;</span>;</span><br><span class="line">            String str_origin = <span class="string">&quot;Hello\nWorld!&quot;</span>;<span class="comment">//转义字符</span></span><br><span class="line">            String str_change = <span class="string">@&quot;Hello\nWorld!&quot;</span>;<span class="comment">//原样输出 @ = &quot;\\&quot;</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String str: &#123;0&#125;&quot;</span>, str);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String str_origin: &#123;0&#125;&quot;</span>, str_origin);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String str_change: &#123;0&#125;&quot;</span>, str_change);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-数据类型转换"><a href="#3-数据类型转换" class="headerlink" title="3.数据类型转换"></a>3.数据类型转换</h2><blockquote><p><strong>一.数据类型转换</strong><br><strong>(1)隐式类型转换：</strong>安全转换，不会造成数据丢失。比如从派生类转换为基类，小范围类型-&gt;大范围类型int-&gt;long，float-&gt;double，在一些计算中会自动转换发生<br><strong>(2)显式类型转换：</strong>不安全转换，可能会造成数据丢失。比如double-&gt;int<br><strong>(3)内置的类型转换方法：</strong>int.Parse()、ToString()等</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_dataType</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params">String[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//数据类型转换</span></span><br><span class="line">            <span class="comment">//  (1)隐式类型转换：安全转换，不会造成数据丢失。比如从派生类转换为基类，小范围类型-&gt;大范围类型int-&gt;long，float-&gt;double，在一些计算中会自动转换发生</span></span><br><span class="line">            <span class="comment">//  (2)显式类型转换：不安全转换，可能会造成数据丢失。比如double-&gt;int</span></span><br><span class="line">            <span class="built_in">double</span> a = <span class="number">3.1415</span>;</span><br><span class="line">            <span class="built_in">int</span> b = (<span class="built_in">int</span>)a;<span class="comment">//向下取整，丢失精度</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Double-&gt;Int: &#123;0&#125;&quot;</span>, b);</span><br><span class="line">            <span class="comment">//  (3)内置的类型转换方法</span></span><br><span class="line">            <span class="built_in">string</span> num = <span class="string">&quot;66&quot;</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Int -&gt; String: &#123;0&#125;&quot;</span>,a.ToString());</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;String -&gt; Int: &#123;0&#125;&quot;</span>, <span class="built_in">int</span>.Parse(num));</span><br><span class="line">            <span class="comment">//4.常量：const ，运行期间不能被修改</span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-字符串string类型"><a href="#4-字符串string类型" class="headerlink" title="4.字符串string类型"></a>4.字符串string类型</h2><blockquote><p><strong>一.字符串：使用 string 关键字来声明一个字符串变量。string 关键字是 System.String 类的别名。</strong><br>        <strong>1.字符串构建：</strong><br>                - “”：string str &#x3D; “hello world!”;<br>                - +：string str &#x3D; a + b;(字符串拼接)<br>        <strong>2.字符串常用方法：</strong><br>             - public static int Compare( string strA, string strB ):比较两个指定的 string 对象(按ASCII)，并返回一个表示它们在排列顺序中相对位置的整数。<br>             - public static string Concat( string str0, string str1 )：连接两个 string 对象。相当于+<br>             - public bool Contains( string value )：判断字符串是否包含字串value<br>             - public bool EndsWith( string value )：判断 string 对象是否以value结尾。<br>             - public bool StartsWith( string value )：判断字符串实例的开头是否匹配指定的字符串。<br>             - public bool Equals( string value )：判断当前的 string 对象是否与指定的 string 对象具有相同的值。<br>             - public static string Format( string format, Object arg0 )：把指定字符串中一个或多个格式项替换为指定对象的字符串表示形式。<br>             - public int IndexOf( string value&#x2F;char ch )：返回指定字符串在该实例中第一次出现的索引，索引从 0 开始。<br>             - public int LastIndexOf( string value&#x2F;char value ):返回指定字符串在该实例中最后一次出现的索引，索引从 0 开始。<br>             - public string Insert( int startIndex, string value )：返回一个新的字符串，其中，指定的字符串被插入在当前 string 对象的指定索引位置。<br>             - public static string Join( string separator, string[] value )：连接一个字符串数组中的所有元素，使用指定的分隔符分隔每个元素。<br>             - public string Remove( int startIndex )：移除当前实例中的所有字符，从指定位置开始，一直到最后一个位置为止，并返回字符串。<br>             - public string Replace( string oldValue, string newValue )：把当前 string 对象中，所有指定的字符串替换为另一个指定的字符串，并返回新的字符串。<br>             - public string[] Split( params char[] separator )：返回一个字符串数组，包含当前的 string 对象中的子字符串，子字符串是使用指定的 Unicode 字符数组中的元素进行分隔的。<br>             - public char[] ToCharArray()：返回一个带有当前 string 对象中所有字符的 Unicode 字符数组。<br>             - public string ToLower()&#x2F;ToUpper()&#x2F;Trim()</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_string</span></span><br><span class="line">    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mains</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//  （1）字符串构建：</span></span><br><span class="line">            <span class="built_in">string</span> a_str = <span class="string">&quot;Hello,&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> b_str = <span class="string">&quot;World!,Write the code,change the world.&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> strs = a_str + b_str;</span><br><span class="line">            Console.WriteLine(strs);</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             *（2）字符串方法、操作（重点）：</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">//2.字符串比较</span></span><br><span class="line">            <span class="built_in">string</span> c_str = <span class="string">&quot;Hello,&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(a_str == c_str)<span class="comment">//==在引用数据里，比较的是地址。因此两个数据相同的变量可能是“不相等的”。</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//但是此处是相等的，原因是string是常量，地址也相同。</span></span><br><span class="line">                Console.WriteLine(<span class="string">&quot;== 比较符号：a_str 与 c_str 相同&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (a_str.Equals(c_str))<span class="comment">//Equals比较的是数值大小是否相同，推荐！</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Equals 比较函数：a_str 与 c_str 相同&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">int</span> res = String.Compare(a_str, b_str);<span class="comment">//a_str&lt;b_str是比较&lt;0；a_str=b_str是=0；a_str&gt;b_str是&gt;0</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;排序结果： &#123;0&#125;&quot;</span>,res);</span><br><span class="line">            <span class="comment">//2.字符串包含</span></span><br><span class="line">            <span class="keyword">if</span> (strs.Contains(<span class="string">&quot;World&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;&#123;0&#125;包含&#123;1&#125;&quot;</span>, strs,<span class="string">&quot;World&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//3.字串获取</span></span><br><span class="line">            <span class="built_in">string</span> child_str = strs.Substring(<span class="number">15</span>);</span><br><span class="line">            Console.WriteLine(child_str);</span><br><span class="line">            <span class="comment">//4.字符串合并</span></span><br><span class="line">            <span class="built_in">string</span>[] str_arrays = &#123; <span class="string">&quot;hello&quot;</span>, <span class="string">&quot;world&quot;</span>, <span class="string">&quot;i&#x27;m&quot;</span>, <span class="string">&quot;OK&quot;</span> &#125;;</span><br><span class="line">            <span class="built_in">string</span> join_str = String.Join(<span class="string">&quot;-&quot;</span>, str_arrays);</span><br><span class="line">            Console.WriteLine(join_str);</span><br><span class="line">            <span class="comment">//5.字符串分割</span></span><br><span class="line">            <span class="built_in">string</span>[] str_list = join_str.Split(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">string</span> factor <span class="keyword">in</span> str_list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(factor);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//6.字符串格式化</span></span><br><span class="line"> </span><br><span class="line">            Console.ReadKey();</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-C-计算与条件、循环"><a href="#三-C-计算与条件、循环" class="headerlink" title="三.C#计算与条件、循环"></a>三.C#计算与条件、循环</h1><h2 id="1-计算语句"><a href="#1-计算语句" class="headerlink" title="1.计算语句"></a>1.计算语句</h2><blockquote><p>1.算术运算符：+、-、<em>、&#x2F;、%、++、–<br>2.关系运算符：&#x3D;&#x3D;、!&#x3D;、&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;<br>3.逻辑运算符：&amp;&amp;、||、!<br>4.位运算：&amp;(与，全1才1)、|(或，一1即1)、^(异或，相异即1)、&lt;&lt;(左移，右补0)、&gt;&gt;(右移，左补0)<br>5.赋值运算符：+&#x3D;、-&#x3D;、&#x2F;&#x3D;、%&#x3D;、&amp;&#x3D;、&lt;&lt;&#x3D;<br>6.其他运算符：<br>        （1）?: 三元表达式 a&#x3D;&#x3D;1?xxx:yyy<br>        （2）&amp; 取地址<br>        （3）</em> 指针<br>        （4）sizeof、typeof、is</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//算术运算</span></span><br><span class="line">            <span class="built_in">double</span> y = <span class="number">5</span> / <span class="number">2</span>; <span class="comment">//如果/法都为整数，则运算结果也为整数（向下取整）</span></span><br><span class="line">            <span class="built_in">double</span> y_2 = <span class="number">5.0</span>/<span class="number">2</span>;<span class="comment">//如果/法有一个为浮点数，则运算结果自动向大类型转换</span></span><br><span class="line">            Console.WriteLine(y);</span><br><span class="line">            Console.WriteLine(y_2);</span><br><span class="line">            <span class="comment">//总结：运算与Java差不多-。-</span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-条件选择"><a href="#2-条件选择" class="headerlink" title="2.条件选择"></a>2.条件选择</h2><blockquote><p><strong>一.条件判断：</strong><br>      （1）if…else if…else<br>      （2）switch(Expression){<br>                     case condition1:<br>                          break;<br>                      case condition2:<br>                        break;<br>                      default:<br>               }</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">double</span> y = <span class="number">5</span> / <span class="number">2</span>; <span class="comment">//如果/法都为整数，则运算结果也为整数（向下取整）</span></span><br><span class="line">            <span class="comment">//条件判断：</span></span><br><span class="line">            <span class="keyword">if</span> (y&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;y &gt; 0&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;y = 0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;y &lt; 0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-循环分支"><a href="#3-循环分支" class="headerlink" title="3.循环分支"></a>3.循环分支</h2><blockquote><p><strong>一.循环语句</strong><br>       (1)  for：for(初始化，判断，循环操作){循环语句}、foreach()<br>       (2)  while：只要给定的条件为真，会重复执行一个目标语句。先判断再执行<br>       (3) do..while：在循环的尾部检查它的条件。会确保至少执行一次循环。<br>       (4) 循环控制语句：break跳出循环，continue直接继续循环</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_calculate</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//循环语句</span></span><br><span class="line">            <span class="comment">//  (1)for：for(初始化，判断，循环操作)&#123;循环语句&#125;</span></span><br><span class="line">            <span class="comment">//  (2)while：只要给定的条件为真，会重复执行一个目标语句。先判断再执行</span></span><br><span class="line">            <span class="comment">// （3）do..while：在循环的尾部检查它的条件。会确保至少执行一次循环。</span></span><br><span class="line">            <span class="comment">//  (4)循环控制语句：break跳出循环，continue直接继续循环</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(i);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-C-数组"><a href="#四-C-数组" class="headerlink" title="四.C# 数组"></a>四.C# 数组</h1><h2 id="1-可空类型"><a href="#1-可空类型" class="headerlink" title="1.可空类型"></a>1.可空类型</h2><blockquote><p>1.可空类型（null）:可空类型可以表示其基础值类型正常范围内的值，再加上一个 null 值。<br>        (1)声明可空类型：<br>            - 基本数据：? 单问号用于对 int、double、bool 等无法直接赋值为 null 的数据类型进行 null 的赋值。比如：int? num1 &#x3D; null;<br>            - 类与对象：直接声明<br>        (2)null合并运算符(??)：判断如果第一个操作数的值为 null，则运算符返回第二个操作数的值，否则返回第一个操作数的值。<br>            - 使用：a &#x3D; b ?? c<br>            - 本质：a &#x3D; (b&#x3D;&#x3D;null)?c:b</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_Arrays</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.可空类型（null）:可空类型可以表示其基础值类型正常范围内的值，再加上一个 null 值。</span></span><br><span class="line">            <span class="comment">//  (1)声明可空类型：</span></span><br><span class="line">            <span class="built_in">int</span>? num1 = <span class="literal">null</span>;<span class="comment">//可空int类型取空值</span></span><br><span class="line">            <span class="built_in">int</span>? num2 = <span class="number">66</span>;<span class="comment">//可空int类型不取空值</span></span><br><span class="line">            <span class="built_in">double</span>? num3 = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">double</span>? num4 = <span class="number">3.1415</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;显示可空类型的值： &#123;0&#125;, &#123;1&#125;, &#123;2&#125;, &#123;3&#125;&quot;</span>,num1, num2, num3, num4);</span><br><span class="line">            <span class="keyword">if</span>(num1 == <span class="literal">null</span>)<span class="comment">//空值判断</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Int数据num1为空值&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Rectangle rect = <span class="literal">null</span>;<span class="comment">//类&amp;对象空值声明 </span></span><br><span class="line">            <span class="keyword">if</span>(rect == <span class="literal">null</span>)<span class="comment">//类&amp;对象空值判断</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Rectangle类对象rect为空&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//  (2)null合并运算符(??)：判断如果第一个操作数的值为 null，则运算符返回第二个操作数的值，否则返回第一个操作数的值。</span></span><br><span class="line">            <span class="built_in">double</span>? b = <span class="literal">null</span>;</span><br><span class="line">            <span class="built_in">double</span>? c = <span class="number">3.1415</span>;</span><br><span class="line">            <span class="built_in">double</span>? a = b ?? c;<span class="comment">//b如果为空则返回c</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a 的值： &#123;0&#125;&quot;</span>, a);</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-数组"><a href="#2-数组" class="headerlink" title="2.数组"></a>2.数组</h2><blockquote><p>1.数组：数组是一个存储【相同类型元素】的固定大小的顺序集合<br>       （1）声明数组：double[] arrays; 声明一个数组不会在内存中初始化数组。<br>       （2）初始化数组：double[] balance &#x3D; new double[10];数组是一个引用类型，所以您需要使用 new 关键字来创建数组的实例。<br>       （3）数组赋值：<br>            - 索引赋值： balance[0] &#x3D; 3.14;<br>            - 声明数组的同时给数组赋值： double[] balance &#x3D; { 2340.0, 4523.69, 3421.0};<br>            - 创建并初始化一个数组： int [] marks &#x3D; new int[5]  { 99,  98, 92, 97, 95};<br>            - 省略数组的大小：int [] marks &#x3D; new int[]  { 99,  98, 92, 97, 95};<br>            - 赋值一个数组变量到另一个目标数组变量中。在这种情况下，目标和源会指向相同的内存位置(引用)：int[] score  &#x3D; marks;<br>       （4）数据访问、遍历：[]下标访问+for、foreach循环<br>       （5）多维数组：int[,] a;声明二维数组，int[, ,] a;声明三维数组<br>       （6）交错数组：交错数组是数组的数组。交错数组是一维数组，每个元素是一个数组<br>            - 声明：int [][] scores;int数组的一维数组，声明一个数组不会在内存中创建数组<br>            - 初始化：int[][] scores &#x3D; new int[5][];含有五个元素<br>            - 初始化赋值：int[][] scores &#x3D; new int[2][]{new int[]{92,93,94},new int[]{85,66,87,88}};<br>            - 访问：scores[i][j] 取第i个子数组的第j个元素（类似于二维数组）</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_Arrays</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.数组：数组是一个存储【相同类型元素】的固定大小的顺序集合</span></span><br><span class="line">            <span class="comment">//  （1）声明数组：double[] arrays; 声明一个数组不会在内存中初始化数组。</span></span><br><span class="line">            <span class="comment">//  （2）初始化数组：double[] balance = new double[10];数组是一个引用类型，所以您需要使用 new 关键字来创建数组的实例。</span></span><br><span class="line">            <span class="comment">//  （3）数组赋值：</span></span><br><span class="line">            <span class="comment">//      - 索引赋值： balance[0] = 3.14;</span></span><br><span class="line">            <span class="comment">//      - 声明数组的同时给数组赋值： double[] balance = &#123; 2340.0, 4523.69, 3421.0&#125;;</span></span><br><span class="line">            <span class="comment">//      - 创建并初始化一个数组： int [] marks = new int[5]  &#123; 99,  98, 92, 97, 95&#125;;</span></span><br><span class="line">            <span class="comment">//      - 省略数组的大小：int [] marks = new int[]  &#123; 99,  98, 92, 97, 95&#125;;</span></span><br><span class="line">            <span class="comment">//      - 赋值一个数组变量到另一个目标数组变量中。在这种情况下，目标和源会指向相同的内存位置(引用)：int[] score  = marks;</span></span><br><span class="line">            <span class="comment">//  （4）数据访问、遍历：[]下标访问+for、foreach循环</span></span><br><span class="line">            <span class="built_in">int</span>[] List = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; List.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                List[i] = i*<span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="keyword">foreach</span>(<span class="built_in">int</span> j <span class="keyword">in</span> List)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Element = &#123;0&#125;&quot;</span>,j);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//   （4）多维数组：int[,] a;声明二维数组，int[, ,] a;声明三维数组</span></span><br><span class="line">            <span class="built_in">int</span>[,] matrix = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>, <span class="number">4</span>];<span class="comment">//初始化3x4的二维数组</span></span><br><span class="line">            <span class="built_in">int</span>[,] matrix_2 = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>, <span class="number">4</span>]&#123;<span class="comment">//初始化并赋值</span></span><br><span class="line">                &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> &#125;, <span class="comment">//初始化第0行</span></span><br><span class="line">                &#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;, <span class="comment">//初始化第1行</span></span><br><span class="line">                &#123;<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>&#125; <span class="comment">//初始化第2行</span></span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; matrix_2.GetLength(<span class="number">0</span>); i++)<span class="comment">//循环遍历多维数组</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; matrix_2.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;矩阵(&#123;0&#125;,&#123;1&#125;)的值为&#123;2&#125;&quot;</span>, i,j, matrix_2[i,j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//  （5）交错数组：交错数组是数组的数组。交错数组是一维数组，每个元素是一个数组</span></span><br><span class="line">            <span class="comment">//      - 声明：int [][] scores;int数组的一维数组，声明一个数组不会在内存中创建数组</span></span><br><span class="line">            <span class="comment">//      - 初始化：int[][] scores = new int[5][];含有五个元素</span></span><br><span class="line">            <span class="comment">//      - 初始化赋值：int[][] scores = new int[2][]&#123;new int[]&#123;92,93,94&#125;,new int[]&#123;85,66,87,88&#125;&#125;;</span></span><br><span class="line">            <span class="comment">//      - 访问：scores[i][j] 取第i个子数组的第j个元素（类似于二维数组）</span></span><br><span class="line">            <span class="built_in">int</span>[][] scores = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>][];</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; scores.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i &lt;= <span class="number">2</span>) scores[i] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>];</span><br><span class="line">                <span class="keyword">else</span> scores[i] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; scores[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    scores[i][j] = i * j + <span class="number">6</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; scores.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; scores[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;子数组&#123;0&#125;下标&#123;1&#125;的值为&#123;2&#125;&quot;</span>, i, j, scores[i][j]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>（7）Array 类：Array 类是 C# 中所有数组的基类，提供了很多属性和方法</strong><br>            - Array.Clear:根据元素的类型，设置数组中某个范围的元素为零、为 false 或者为 null。<br>            - Array.IndexOf(Array, Object):搜索指定的对象，返回整个[一维数组]中第一次出现的索引。<br>            - Array.Reverse(Array):逆转整个一维数组中元素的顺序。<br>            - Array.Sort(Array):使用数组的每个元素的 IComparable 实现来排序整个一维数组中的元素。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Basic_Arrays</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//  （6）Array 类：Array 类是 C# 中所有数组的基类，提供了很多属性和方法</span></span><br><span class="line">            <span class="comment">//      - Array.Clear:根据元素的类型，设置数组中某个范围的元素为零、为 false 或者为 null。</span></span><br><span class="line">            <span class="comment">//      - Array.IndexOf(Array, Object):搜索指定的对象，返回整个[一维数组]中第一次出现的索引。</span></span><br><span class="line">            <span class="comment">//      - Array.Reverse(Array):逆转整个一维数组中元素的顺序。</span></span><br><span class="line">            <span class="comment">//      - Array.Sort(Array):使用数组的每个元素的 IComparable 实现来排序整个一维数组中的元素。</span></span><br><span class="line">            <span class="built_in">int</span>[] list = &#123; <span class="number">34</span>, <span class="number">72</span>, <span class="number">13</span>, <span class="number">44</span>, <span class="number">25</span>, <span class="number">30</span>, <span class="number">10</span> &#125;;</span><br><span class="line">            Console.Write(<span class="string">&quot;原始数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);<span class="comment">//不换行输出</span></span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();<span class="comment">//输出换行</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 逆转数组</span></span><br><span class="line">            Array.Reverse(list);<span class="comment">//改变原数组</span></span><br><span class="line">            Console.Write(<span class="string">&quot;逆转数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 排序数组</span></span><br><span class="line">            Array.Sort(list);<span class="comment">//改变原数组，默认由小到大</span></span><br><span class="line">            Console.Write(<span class="string">&quot;排序数组： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五-列表与字典"><a href="#五-列表与字典" class="headerlink" title="五.列表与字典"></a>五.列表与字典</h1><h2 id="1-列表ArrayList"><a href="#1-列表ArrayList" class="headerlink" title="1.列表ArrayList"></a>1.列表ArrayList</h2><blockquote><p><strong>1.ArrayList：动态数组列表集合，类似于Java的List<Object></Object></strong><br>    （1）初始化：ArrayList是一个类&#x2F;对象，需要使用new关键字初始化，且不需要指定大小（动态扩展） ArrayList array &#x3D; new ArrayList();<br>    （2）特点：<br>          - 长度动态扩展，无需人为指定；<br>          - 存储数据时使用Object类型，故可以同时存储多种不同的数据（int、double、class、string）<br>          - 不是类型安全的，可能出现类型匹配错误；存在频繁的装箱拆箱操作，性能低下<br>    （3）使用：<br>          - Item[Int32]    获取或设置指定索引处的元素。<br>          - Count    获取 ArrayList 中实际包含的元素个数。<br>          - public virtual int Add( object value ); 在 ArrayList 的末尾添加一个对象。<br>          - public virtual void Clear(); 从 ArrayList 中移除所有的元素。<br>          - public virtual void Insert( int index, object value ); 在 ArrayList 的指定索引处，插入一个元素。<br>          - public virtual void Remove( object obj ); 从 ArrayList 中移除第一次出现的指定对象。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.ArrayList：动态数组列表集合，类似于Java的List&lt;Object&gt;</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ArrayList_Use</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mains</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ArrayList arrayList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            arrayList.Add(<span class="number">2</span>);</span><br><span class="line">            arrayList.Add(<span class="number">3.1415</span>);</span><br><span class="line">            arrayList.Add(<span class="string">&quot;hello world&quot;</span>);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList 长度： &quot;</span> + arrayList.Count);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList[0]： &quot;</span> + arrayList[<span class="number">0</span>]);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList[1]： &quot;</span> + arrayList[<span class="number">1</span>]);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ArrayList[2]： &quot;</span> + arrayList[<span class="number">2</span>]);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-列表List"><a href="#2-列表List" class="headerlink" title="2.列表List"></a>2.列表List</h2><blockquote><p><strong>2.List：List也是一种动态列表集合，类似于ArrayList，但必须提供泛型</strong><br>    （1）定义：为了解决ArrayList的类型不安全，C#提供了List列表，List列表声明时必须提供泛型，即List内存放的数据必须都是该泛型的数据。<br>    （2）初始化：List<int> list &#x3D; new List<int>();<br>    （3）本质：List其实就是在ArrayList基础上，添加了类型限制，以后都推荐使用List<br>    （4）使用：与ArrayList类似，注意泛型也可以是自定义的类，List也可以存放对象！</int></int></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.List：List也是一种动态列表集合，类似于ArrayList，但必须提供泛型</span></span><br><span class="line">    <span class="comment">//  （1）定义：为了解决ArrayList的类型不安全，C#提供了List列表，List列表声明时必须提供泛型，即List内存放的数据必须都是该泛型的数据。</span></span><br><span class="line">    <span class="comment">//  （2）初始化：List&lt;int&gt; list = new List&lt;int&gt;();</span></span><br><span class="line">    <span class="comment">//  （3）本质：List其实就是在ArrayList基础上，添加了类型限制，以后都推荐使用List</span></span><br><span class="line">    <span class="comment">//  （4）使用：与ArrayList类似，注意泛型也可以是自定义的类，List也可以存放对象！</span></span><br><span class="line">   <span class="keyword">class</span> <span class="title">List_Use</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mains</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            List&lt;<span class="built_in">int</span>&gt; list = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                list.Add(i + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (list[i] % <span class="number">2</span>!=<span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    list[i] *= <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">int</span> val <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(val + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            list.Clear();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;清空后长度 ： &quot;</span> + list.Count);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-字典Dictionary"><a href="#3-字典Dictionary" class="headerlink" title="3.字典Dictionary"></a>3.字典Dictionary</h2><blockquote><p><strong>3.Dictionary：Dictionary是由键值对组成的字典类型，类似于Java的Map</strong><br>    （1）初始化：Dictionary也是对象，需要使用new关键字。同时在初始化时需要指定键值对的泛型 Dictionary&lt;string,int&gt; dir &#x3D; new Dictionary&lt;string,int&gt;();<br>    （2）特点：<br>          - Dictionary里面的每一个元素都是一个键值对(由二个元素组成：键和值)，可以通过 Dictionary[key]来取值<br>          - Dictionary里面键必须是唯一的,而值不需要唯一的<br>    （3）使用：<br>          - Count        获取包含在 Dictionary&lt;TKey, TValue&gt; 中的键&#x2F;值对的数目。<br>          - Keys         获取包含 Dictionary&lt;TKey, TValue&gt; 中的键的集合。<br>          - Values 获取包含 Dictionary&lt;TKey, TValue&gt; 中的值的集合。<br>          - Add                 将指定的键和值添加到字典中。<br>          - Clear 从 Dictionary&lt;TKey, TValue&gt; 中移除所有的键和值。<br>          - ContainsKey 确定 Dictionary&lt;TKey, TValue&gt; 是否包含指定的键。<br>          - GetEnumerator       返回循环访问 Dictionary&lt;TKey, TValue&gt; 的枚举器<br>          - Remove              从 Dictionary&lt;TKey, TValue&gt; 中移除所指定的键的值。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//3.Dictionary：Dictionary是由键值对组成的字典类型，类似于Java的Map</span></span><br><span class="line">    <span class="comment">//  （1）初始化：Dictionary也是对象，需要使用new关键字。同时在初始化时需要指定键值对的泛型 Dictionary&lt;string,int&gt; dir = new Dictionary&lt;string,int&gt;();</span></span><br><span class="line">    <span class="comment">//  （2）特点：</span></span><br><span class="line">    <span class="comment">//      - Dictionary里面的每一个元素都是一个键值对(由二个元素组成：键和值)，可以通过 Dictionary[key]来取值</span></span><br><span class="line">    <span class="comment">//      - Dictionary里面键必须是唯一的,而值不需要唯一的</span></span><br><span class="line">    <span class="comment">//  （3）使用：</span></span><br><span class="line">    <span class="comment">//      - Count        获取包含在 Dictionary&lt;TKey, TValue&gt; 中的键/值对的数目。</span></span><br><span class="line">    <span class="comment">//      - Keys         获取包含 Dictionary&lt;TKey, TValue&gt; 中的键的集合。</span></span><br><span class="line">    <span class="comment">//      - Values 获取包含 Dictionary&lt;TKey, TValue&gt; 中的值的集合。</span></span><br><span class="line">    <span class="comment">//      - Add                 将指定的键和值添加到字典中。</span></span><br><span class="line">    <span class="comment">//      - Clear 从 Dictionary&lt;TKey, TValue&gt; 中移除所有的键和值。</span></span><br><span class="line">    <span class="comment">//      - ContainsKey 确定 Dictionary&lt;TKey, TValue&gt; 是否包含指定的键。</span></span><br><span class="line">    <span class="comment">//      - GetEnumerator       返回循环访问 Dictionary&lt;TKey, TValue&gt; 的枚举器</span></span><br><span class="line">    <span class="comment">//      - Remove              从 Dictionary&lt;TKey, TValue&gt; 中移除所指定的键的值。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Dictionary</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; dictionary = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;();</span><br><span class="line">            dictionary.Add(<span class="string">&quot;wangxin&quot;</span>, <span class="number">99</span>);<span class="comment">//Add赋值，Add赋值不能添加key重复的项</span></span><br><span class="line">            dictionary[<span class="string">&quot;shayuan&quot;</span>] = <span class="number">100</span>;<span class="comment">//=赋值，=赋值可以添加key重复项，会覆盖原始数据</span></span><br><span class="line">            <span class="keyword">if</span> (dictionary.ContainsKey(<span class="string">&quot;wangxin&quot;</span>))<span class="comment">//是否包含key</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Dictionary 长度： &quot;</span> + dictionary.Count);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;wangxin is &#123;0&#125;&quot;</span>, dictionary[<span class="string">&quot;wangxin&quot;</span>]);</span><br><span class="line">                dictionary.Remove(<span class="string">&quot;wangxin&quot;</span>);<span class="comment">//删除key</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (dictionary.ContainsKey(<span class="string">&quot;shayuan&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Dictionary 长度： &quot;</span> + dictionary.Count);</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;shayuan is &#123;0&#125;&quot;</span>, dictionary[<span class="string">&quot;shayuan&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//Console.WriteLine(&quot;wangxin is &#123;0&#125;&quot;, dictionary[&quot;wangxin&quot;]);//访问不存在的数据会报异常</span></span><br><span class="line">            <span class="keyword">if</span> (!dictionary.ContainsKey(<span class="string">&quot;wangxin&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;wangxin is removed!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//遍历Dictionary</span></span><br><span class="line">            <span class="comment">//遍历key</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> key <span class="keyword">in</span> dictionary.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Key = &#123;0&#125;&quot;</span>, key);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//遍历value</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> <span class="keyword">value</span> <span class="keyword">in</span> dictionary.Values)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;value = &#123;0&#125;&quot;</span>, <span class="keyword">value</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//遍历字典</span></span><br><span class="line">            <span class="keyword">foreach</span> (KeyValuePair&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; kvp <span class="keyword">in</span> dictionary)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Key = &#123;0&#125;, Value = &#123;1&#125;&quot;</span>, kvp.Key, kvp.Value);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//添加存在的元素 try...catch..处理异常</span></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                dictionary.Add(<span class="string">&quot;txt&quot;</span>, <span class="number">99</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (ArgumentException)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;An element with Key = \&quot;txt\&quot; already exists.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六-类与继承"><a href="#六-类与继承" class="headerlink" title="六.类与继承"></a>六.类与继承</h1><h2 id="1-类的基本概念"><a href="#1-类的基本概念" class="headerlink" title="1.类的基本概念"></a>1.类的基本概念</h2><blockquote><p><strong>1.类的封装</strong><br>    （1）访问修饰符：类的默认访问标识符是 internal，成员的默认访问标识符是 private。<br>          - public：所有对象都可以访问；<br>          - private：对象本身在对象内部可以访问；<br>          - protected：只有该类对象及其子类对象可以访问<br>          - internal：同一个程序集的对象可以访问；可以被定义在该成员所定义的【应用程序内】的任何类或方法访问。<br>          - protected internal：访问限于当前程序集或派生自包含类的类型。（protected和internal的并集）<br>    （2）方法：类的行为，主要是方法参数的传递方式<br>          - 值传递：这种方式复制参数的实际值给函数的形式参数，实参和形参使用的是两个不同内存中的值。在这种情况下，当形参的值发生改变时，不会影响实参的值<br>          - 引用传递(ref)：这种方式复制参数的内存位置的引用给形式参数。这意味着，当形参的值发生改变时，同时也改变实参的值。<br>          - 输出参数(out)：这种方式可以返回多个值。传 out 定义的参数进去的时候这个参数在函数内部必须初始化。否则是不能进行编译的。<br>          - 数组传值：可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。<br><strong>注意：</strong>ref 和 out 都是传递数据的地址，正因为传了地址，才能对源数据进行修改。</p></blockquote><blockquote><p><strong>2.类的基本参数</strong><br>    （1）构造函数：初始化对象时自动执行，默认提供一个无参构造 Object(){}<br>    （2）析构函数：销毁对象时自动执行 ~Object(){}<br>    （3）静态成员变量： static 关键字把类成员定义为静态的，静态成员变量属于类，可以在任意地方初始化和使用<br>    （4）静态成员函数：static 关键字把类成员定义为静态的，静态成员变量属于类，静态成员函数只能访问静态变量</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.类的封装</span></span><br><span class="line">    <span class="comment">//  （1）访问修饰符：类的默认访问标识符是 internal，成员的默认访问标识符是 private。</span></span><br><span class="line">    <span class="comment">//      - public：所有对象都可以访问；</span></span><br><span class="line">    <span class="comment">//      - private：对象本身在对象内部可以访问；</span></span><br><span class="line">    <span class="comment">//      - protected：只有该类对象及其子类对象可以访问</span></span><br><span class="line">    <span class="comment">//      - internal：同一个程序集的对象可以访问；可以被定义在该成员所定义的【应用程序内】的任何类或方法访问。</span></span><br><span class="line">    <span class="comment">//      - protected internal：访问限于当前程序集或派生自包含类的类型。（protected和internal的并集）</span></span><br><span class="line">    <span class="comment">//  （2）方法：类的行为，主要是方法参数的传递方式</span></span><br><span class="line">    <span class="comment">//      - 值传递：这种方式复制参数的实际值给函数的形式参数，实参和形参使用的是两个不同内存中的值。在这种情况下，当形参的值发生改变时，不会影响实参的值</span></span><br><span class="line">    <span class="comment">//      - 引用传递(ref)：这种方式复制参数的内存位置的引用给形式参数。这意味着，当形参的值发生改变时，同时也改变实参的值。</span></span><br><span class="line">    <span class="comment">//      - 输出参数(out)：这种方式可以返回多个值。传 out 定义的参数进去的时候这个参数在函数内部必须初始化。否则是不能进行编译的。</span></span><br><span class="line">    <span class="comment">//      - 数组传值：可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。</span></span><br><span class="line">    <span class="comment">//  注意：ref 和 out 都是传递数据的地址，正因为传了地址，才能对源数据进行修改。</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">A</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _a;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> _b;</span><br><span class="line">        <span class="comment">//值传递</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sum</span>(<span class="params"><span class="built_in">int</span> a,<span class="built_in">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a += b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;值传递函数内求和 a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//引用传递</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sum</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">int</span> a,<span class="keyword">ref</span> <span class="built_in">int</span> b</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            a += b;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递函数内求和 a = &#123;0&#125;&quot;</span>, a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出参数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sum</span>(<span class="params"><span class="built_in">int</span> a,<span class="built_in">int</span> b,<span class="keyword">out</span> <span class="built_in">int</span> c</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            c = a + b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//类/对象传递(对象传值 = 引用传值)</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span>(<span class="params">A obj</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> temp = obj._a;</span><br><span class="line">            obj._a = obj._b;</span><br><span class="line">            obj._b = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//数组传值</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sumAndClear</span>(<span class="params"><span class="built_in">int</span>[] arrays</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arrays.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                sum += arrays[i];</span><br><span class="line">                arrays[i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;数组求和sum = &#123;0&#125;&quot;</span>, sum);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            A a_obj = <span class="keyword">new</span> A();</span><br><span class="line">            <span class="comment">//值传递</span></span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">3</span>, b = <span class="number">4</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;值传递求和前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a,b);</span><br><span class="line">            a_obj.sum(a, b);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;值传递求和后初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            <span class="comment">//引用传递</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递求和前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            a_obj.sum(<span class="keyword">ref</span> a, <span class="keyword">ref</span> b);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递求和后初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            <span class="comment">//输出参数</span></span><br><span class="line">            <span class="built_in">int</span> res;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;输出参数求和前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a, b);</span><br><span class="line">            a_obj.sum( a, b,<span class="keyword">out</span> res);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;引用传递求和后初始数据a = &#123;0&#125;,b = &#123;1&#125;,res = &#123;2&#125;&quot;</span>, a, b,res);</span><br><span class="line">            <span class="comment">//对象传递</span></span><br><span class="line">            a_obj._a = <span class="number">3</span>;</span><br><span class="line">            a_obj._b = <span class="number">4</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;对象传递交换前初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a_obj._a, a_obj._b);</span><br><span class="line">            a_obj.swap(a_obj);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;对象传递交换后初始数据a = &#123;0&#125;,b = &#123;1&#125;&quot;</span>, a_obj._a, a_obj._b);</span><br><span class="line">            <span class="comment">//数组传递</span></span><br><span class="line">            <span class="built_in">int</span>[] arr = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span> &#125;;</span><br><span class="line">            Console.Write(<span class="string">&quot;数组传值前： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">int</span> fac <span class="keyword">in</span> arr) Console.Write(fac + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            a_obj.sumAndClear(arr);</span><br><span class="line">            Console.Write(<span class="string">&quot;数组传值后： &quot;</span>);</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> fac <span class="keyword">in</span> arr) Console.Write(fac + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.类的基本参数</span></span><br><span class="line">    <span class="comment">//  （1）构造函数：初始化对象时自动执行，默认提供一个无参构造 Object()&#123;&#125;</span></span><br><span class="line">    <span class="comment">//  （2）析构函数：销毁对象时自动执行 ~Object()&#123;&#125;</span></span><br><span class="line">    <span class="comment">//  （3）静态成员变量： static 关键字把类成员定义为静态的，静态成员变量属于类，可以在任意地方初始化和使用</span></span><br><span class="line">    <span class="comment">//  （4）静态成员函数：static 关键字把类成员定义为静态的，静态成员变量属于类，静态成员函数只能访问静态变量</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">B</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">double</span> val;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">B</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            val = <span class="number">0</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;第&#123;0&#125;个B，无参构造函数Val = &#123;1&#125;&quot;</span>,cnt,val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">B</span>(<span class="params"><span class="built_in">double</span> _val = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            val = _val;</span><br><span class="line">            cnt++;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;第&#123;0&#125;个B，有参构造函数Val = &#123;1&#125;&quot;</span>, cnt,val);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">getVal</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">getCntOfB</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> cnt;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        ~B()</span><br><span class="line">        &#123;</span><br><span class="line">            cnt--;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;析构函数执行&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            B b_1 = <span class="keyword">new</span> B();</span><br><span class="line">            Console.WriteLine(b_1.getVal());</span><br><span class="line">            B b_2 = <span class="keyword">new</span> B(<span class="number">3.14</span>);</span><br><span class="line">            Console.WriteLine(b_2.getVal());</span><br><span class="line">            Console.WriteLine(B.getCntOfB());</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-类的继承"><a href="#2-类的继承" class="headerlink" title="2.类的继承"></a>2.类的继承</h2><blockquote><p><strong>3.类的继承 Child:Parent</strong><br>    （1）C#只支持单继承，但可以通过接口来实现多继承<br>    （2）派生类继承了基类的public、protected、internal成员变量和成员方法。<br>    （3）若不指明，创建子类对象调用子类的构造函数时，会默认首先调用父类的无参构造函数</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//3.类的继承 Child:Parent</span></span><br><span class="line">    <span class="comment">//  （1）C#只支持单继承，但可以通过接口来实现多继承</span></span><br><span class="line">    <span class="comment">//  （2）派生类继承了基类的public、protected、internal成员变量和成员方法。</span></span><br><span class="line">    <span class="comment">//  （3）若不指明，创建子类对象调用子类的构造函数时，会默认首先调用父类的无参构造函数</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Shape</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">double</span> length;</span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">double</span> width;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Shape</span>(<span class="params"><span class="built_in">double</span> len,<span class="built_in">double</span> wid</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            length = len;</span><br><span class="line">            width = wid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetArea</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> length * width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;长度： &#123;0&#125;&quot;</span>, length);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;宽度： &#123;0&#125;&quot;</span>, width);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;面积： &#123;0&#125;&quot;</span>, GetArea());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Cube</span>:<span class="title">Shape</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">double</span> height;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Cube</span>(<span class="params"><span class="built_in">double</span> len,<span class="built_in">double</span> wid,<span class="built_in">double</span> hei</span>): <span class="title">base</span>(<span class="params">len, wid</span>)<span class="comment">//base(x,y)初始化父类参数，先于子类执行</span></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            height = hei;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">double</span> <span class="title">GetVolume</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> height * GetArea();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.Display();<span class="comment">//通过base来指代当前对象的父类</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;体积： &#123;0&#125;&quot;</span>, GetVolume());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Cube cube = <span class="keyword">new</span> Cube(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">            cube.Display();<span class="comment">//调用子类的覆盖方法</span></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七-多-态"><a href="#七-多-态" class="headerlink" title="七.多 态"></a>七.多 态</h1><blockquote><p><strong>1.多态：多态是根据不同的场景同一个行为具有多个不同表现形式或形态的能力。</strong><br>    （1）静态多态：函数的响应是在编译时发生的。<br>          - 函数重载：对相同的函数名有多个定义。可以是参数列表中的参数类型不同，也可以是参数个数不同。不能重载只有返回类型不同的函数声明。<br>          - 运算符重载：可以重定义或重载 C# 中内置的运算符。通过关键字 operator 后跟运算符的符号来定义的，同时包含 public 和 static 修饰符。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//1.多态：多态是根据不同的场景同一个行为具有多个不同表现形式或形态的能力。</span></span><br><span class="line">    <span class="comment">//  （1）静态多态：函数的响应是在编译时发生的。</span></span><br><span class="line">    <span class="comment">//      - 函数重载：对相同的函数名有多个定义。可以是参数列表中的参数类型不同，也可以是参数个数不同。不能重载只有返回类型不同的函数声明。</span></span><br><span class="line">    <span class="comment">//      - 运算符重载：可以重定义或重载 C# 中内置的运算符。通过关键字 operator 后跟运算符的符号来定义的，同时包含 public 和 static 修饰符。</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Vector</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> x;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> y;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Vector</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            x = <span class="number">0</span>;</span><br><span class="line">            y = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Vector</span>(<span class="params"><span class="built_in">int</span> _x,<span class="built_in">int</span> _y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            x = _x;</span><br><span class="line">            y = _y;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getX</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">getY</span>(<span class="params"></span>)</span> &#123; <span class="keyword">return</span> y;&#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setX</span>(<span class="params"><span class="built_in">int</span> x</span>)</span> &#123; <span class="keyword">this</span>.x = x; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setY</span>(<span class="params"><span class="built_in">int</span> y</span>)</span> &#123; <span class="keyword">this</span>.y = y; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Vector(&#123;0&#125;,&#123;1&#125;)&quot;</span>, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 重载 + 运算符来把两个 Vector 对象相加(可以直接访问private)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> Vector <span class="keyword">operator</span> +(Vector a, Vector b)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector C = <span class="keyword">new</span> Vector();</span><br><span class="line">            C.x = a.x + b.x;</span><br><span class="line">            C.y = a.y + b.y;</span><br><span class="line">            <span class="keyword">return</span> C;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 重载 - 运算符来把两个 Vector 对象相减(可以直接访问private)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> Vector <span class="keyword">operator</span> -(Vector a, Vector b)</span><br><span class="line">        &#123;</span><br><span class="line">            Vector C = <span class="keyword">new</span> Vector();</span><br><span class="line">            C.x = a.x - b.x;</span><br><span class="line">            C.y = a.y - b.y;</span><br><span class="line">            <span class="keyword">return</span> C;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 重载 * 运算符来把两个 Vector 对象相乘(可以直接访问private)</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="keyword">operator</span> *(Vector a, Vector b)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> a.x * b.x + a.y * b.y;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Vector a = <span class="keyword">new</span> Vector(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">            Vector b = <span class="keyword">new</span> Vector(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="comment">//+法</span></span><br><span class="line">            Vector c = a + b;</span><br><span class="line">            c.Display();</span><br><span class="line">            <span class="comment">//-法</span></span><br><span class="line">            c = a - b;</span><br><span class="line">            c.Display();</span><br><span class="line">            <span class="comment">//*法</span></span><br><span class="line">            <span class="built_in">int</span> res = a * b;</span><br><span class="line">            Console.WriteLine(res);</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>（2）动态多态：函数的响应是在运行时发生的。</strong><br>        - 虚方法（virtual ）：定义子类可以重写覆盖父类的方法，对虚方法的调用是在运行时发生的。子类需要使用override声明<br>              + 父类定义虚方法，子类可以实现重写父类虚方法，也可以不实现重写。如果重写了，那么创建子类对象后，不管是父类指针还是子类，调用虚方法都会执行子类的覆盖。<br>              + 父类定义虚方法，必须要有父类的实现，在父类中是一个普通函数。<br>        - 抽象（abstract ）：抽象abstract关键字可以作用在方法上，也可以作用在类上。子类需要使用override声明<br>              + 父类抽象方法没有实现，只有声明。子类必须实现父类的抽象方法<br>              + 类内任何一个方法是抽象的，则该类必须被声明为抽象类。即抽象方法只能在抽象类中定义<br>              + 抽象类不能被实例化，但可以指向子类实例。子类若不实现抽象方法则也会变成抽象类。<br>        - 总结：简单说，抽象方法是需要子类去实现的。虚方法是已经实现了的，可以被子类覆盖，也可以不覆盖，取决于需求。抽象方法和虚方法都可以供派生类重写。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//动态多态：函数的响应是在运行时发生的。</span></span><br><span class="line">    <span class="comment">//      - 虚方法（virtual ）：定义子类可以重写覆盖父类的方法，对虚方法的调用是在运行时发生的。子类需要使用override声明</span></span><br><span class="line">    <span class="comment">//          + 父类定义虚方法，子类可以实现重写父类虚方法，也可以不实现重写。如果重写了，那么创建子类对象后，不管是父类指针还是子类，调用虚方法都会执行子类的覆盖。</span></span><br><span class="line">    <span class="comment">//          + 父类定义虚方法，必须要有父类的实现，在父类中是一个普通函数。</span></span><br><span class="line">    <span class="comment">//      - 抽象（abstract ）：抽象abstract关键字可以作用在方法上，也可以作用在类上。子类需要使用override声明</span></span><br><span class="line">    <span class="comment">//          + 父类抽象方法没有实现，只有声明。子类必须实现父类的抽象方法</span></span><br><span class="line">    <span class="comment">//          + 类内任何一个方法是抽象的，则该类必须被声明为抽象类。即抽象方法只能在抽象类中定义</span></span><br><span class="line">    <span class="comment">//          + 抽象类不能被实例化，但可以指向子类实例。子类若不实现抽象方法则也会变成抽象类。</span></span><br><span class="line">    <span class="comment">//      - 总结：简单说，抽象方法是需要子类去实现的。虚方法是已经实现了的，可以被子类覆盖，也可以不覆盖，取决于需求。抽象方法和虚方法都可以供派生类重写。</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//抽象类：包含至少一个抽象方法，但是不仅仅包含抽象方法</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Animal</span>(<span class="params"><span class="built_in">string</span> _name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            name = _name;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//抽象方法：叫</span></span><br><span class="line">        <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span>(<span class="params"></span>)</span>;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//虚方法</span></span><br><span class="line">        <span class="function"><span class="keyword">virtual</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;&#123;0&#125; is eating&quot;</span>,name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Dog</span> : <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Dog</span>(<span class="params"><span class="built_in">string</span> name</span>):<span class="title">base</span>(<span class="params">name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实现抽象类</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">shout</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Dog &#123;0&#125; is wangwang&quot;</span>,name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//覆盖重写虚函数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.eat();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Dog &#123;0&#125; is eat bone&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="keyword">class</span> <span class="title">Cat</span> : <span class="title">Animal</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Cat</span>(<span class="params"><span class="built_in">string</span> name</span>) : <span class="title">base</span>(<span class="params">name</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实现抽象类</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">shout</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Cat &#123;0&#125; is miaomiao&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//覆盖重写虚函数</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">eat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.eat();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;A Cat &#123;0&#125; is eat fish&quot;</span>, name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Animal[] animals = <span class="keyword">new</span> Animal[<span class="number">2</span>] &#123; <span class="keyword">new</span> Dog(<span class="string">&quot;tom&quot;</span>), <span class="keyword">new</span> Cat(<span class="string">&quot;marry&quot;</span>) &#125;;</span><br><span class="line">            <span class="keyword">foreach</span>(Animal animal <span class="keyword">in</span> animals)</span><br><span class="line">            &#123;</span><br><span class="line">                animal.shout();</span><br><span class="line">                animal.eat();</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>2.接口（interface）：接口类似于抽象类，但接口内所有方法都是抽象的</strong><br>      （1）接口不能实例化，继承接口必须实现所有抽象方法（不用声明override），接口可以指向子类（多态）<br>      （2）接口默认声明为public<br>      （3）接口可以多继承，解决 C# 里面类可以同时继承多个基类的问题。<br>      （4）接口可以继承接口</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">netBasic_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//2.接口（interface）：接口类似于抽象类，但接口内所有方法都是抽象的</span></span><br><span class="line">    <span class="comment">//  （1）接口不能实例化，继承接口必须实现所有抽象方法（不用声明override），接口可以指向子类（多态）</span></span><br><span class="line">    <span class="comment">//  （2）接口默认声明为public</span></span><br><span class="line">    <span class="comment">//  （3）接口可以多继承，解决 C# 里面类可以同时继承多个基类的问题。</span></span><br><span class="line">    <span class="comment">//  （4）接口可以继承接口</span></span><br><span class="line">    <span class="keyword">interface</span> <span class="title">Parent</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">disPlay</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">Child</span> : <span class="title">Parent</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">disPlay</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;child is display!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_40772692/article/details/121818727">C#（一） C# 基础语法一文通</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#开发WinForm之二(进阶与复杂控件使用)</title>
      <link href="/posts/126044072.html"/>
      <url>/posts/126044072.html</url>
      
        <content type="html"><![CDATA[<h1 id="复合控件"><a href="#复合控件" class="headerlink" title="复合控件"></a>复合控件</h1><blockquote><p><strong>1.控件的使用综述：在WinForm中使用控件主要包括以下几种情况:</strong><br>（1）标准控件：直接使用winform自带的控件，比如button、textBox等。我们只需要修改属性，添加事件即可。<br>（2）复合控件：将一些标准控件组合起来，实现复杂功能。需要定义 class YourControl:UserControl{ }<br>（3）扩展控件：拓展或者改变一些标准控件的功能。需要继承于标准控件，class YourButton:Button { }<br>（4）自定义控件：完全自定义一个控件，定义属性、方法、样式等。需要继承于Control（Control是所有控件的基类），class YourControl:Control { }<br> <strong>注意：</strong>我们之前学习了标准控件的使用，所以这节课我们就学习一下复合控件如何定义和使用，循序渐进。</p></blockquote><blockquote><p><strong>2.复合控件：实现一个搜索框控件（组合文本框与图片框）:</strong><br>（1）定义：复合控件又称为用户控件，专门用来将标准控件进行组合，其继承自 UserControl<br>（2）定义复合控件：<br>    - 右键解决方案-&gt;添加 用户控件窗体(UserControl)，命名为SearchBox。会自动生成一个SearchBox类，继承自 UserControl<br>    - 双击 SearchBox.cs文件，可以打开设计界面，像窗口一样设计符合组件的样式<br>            a. 拖上去一个textBox文本框作为搜索框<br>            b. 拖上去一个图片框，设置图片为搜索图标<br>            c. 使用表格布局，将二者组合到一起，并调整大小和位置（Anchor、Dock、表格比例等）<br>            d.保存后，重新生成解决方案，再点击界面中的工具箱即可看到我们自己的复合控件<br>（3）复合控件的摆放和原理<br>     - 在界面中可以直接拖拽符合控件，并且复合控件作为一个整体也具有Size、Location、事件等等常规属性。<br>     - 复合控件本质上就是一个窗体！复合控件中的组件和窗体中的组件一样，在初始化时放置到窗体上。     </p></blockquote><h2 id="复合控件SearchBox可视化设计"><a href="#复合控件SearchBox可视化设计" class="headerlink" title="复合控件SearchBox可视化设计"></a>复合控件SearchBox可视化设计</h2><blockquote><p>在SearchBox.cs窗体设计界面中，对复合控件进行可视化样式设计，其步骤如下：<br>添加一个TableLayoutPanel表格布局容器，保留一行两列。并设置其Dock为Fill填满整个父窗口，然后设置两列表格大小比例为7:3。（用来放置文本框和图片框按钮）<br>添加一个TextBox到第一个单元格，并设置其Anchor为左右边距固定（可以随父窗口拉伸而拉伸）<br>添加一个pictureBox到第二个单元格，并设置其Dock为Fill填满单元格，添加图片资源-搜索图标<br><strong>注意：</strong>现在只是设计好了SearchBox的样式，但是还没有设计其属性访问和事件处理，比如复合控件如何获取文本框的值？如何获取&#x2F;设置图片框的点击事件？复合控件如何当作一个整体来用？</p></blockquote><img src="https://img-blog.csdnimg.cn/599cb97399b948b1a8c722e5a889cf18.png"><h2 id="复合控件的属性访问和事件处理"><a href="#复合控件的属性访问和事件处理" class="headerlink" title="复合控件的属性访问和事件处理"></a>复合控件的属性访问和事件处理</h2><p>**复合控件的访问和事件处理：我们有时需要获取复合控件内子控件的数据、或者给复合控件的某个位置（图片、按钮）设置事件 **</p><h3 id="（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可"><a href="#（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可" class="headerlink" title="（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可"></a>（1）设置public直接访问（最简单，最直接，最不常用）：将复合控件内的子控件成员全部设置为public，直接访问即可</h3><ul><li>在复合控件设计界面内选择每个子控件，设置其 Modifiers 属性为 public （默认为private）</li><li>然后在复合控件源码中，相关的子控件就会自动变为 public 访问修饰的，我们可以直接使用 [复合控件.子控件.属性] 来访问</li><li>给SearchBox的搜索图片设置点击事件：searchBox1.pictureBox1.Click +&#x3D; new EventHandler(searchEvent);</li><li>获取文本框搜索内容：MessageBox.Show(“开始搜索…” + searchBox1.textBox1.Text);</li></ul><h3 id="（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）"><a href="#（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）" class="headerlink" title="（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）"></a>（2）在复合控件内设置事件和获取数据，就可以像窗口一样直接使用子组件了（没试过）</h3><h3 id="（3）复合控件自定义属性"><a href="#（3）复合控件自定义属性" class="headerlink" title="（3）复合控件自定义属性"></a>（3）复合控件自定义属性</h3><ul><li><strong>添加属性：</strong></li></ul><ol><li>在SearchBox逻辑代码中，添加属性访问器<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> SearchText</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">get</span></span><br><span class="line">     &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">set</span></span><br><span class="line">     &#123;</span><br><span class="line">          <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>重新生成解决方案，打开Form3界面设计，在杂项中就可以看到我们自定义的属性SearchText。通过修改值可以直接修改内部的TextBox。其本质都是调用了set、get方法。</li></ol><ul><li><strong>重写属性：</strong></li></ul><ol><li>在SearchBox逻辑代码中，重写UserControl已有的属性，比如Text等<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">     <span class="keyword">get</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">set</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>重新生成解决方案，打开Form3界面设计，原本的属性就成为了我们重写的属性。</li></ol><ul><li>C# Attribute 特性：特性是一种可以被编译器识别的声明性标签，类似于Java的注解<br>a. 语法：[attribute(positional_parameters, name_parameter &#x3D; value, …)]<br>b. 常用特性：<br>  [Browsable(true)]: 控件属性是否在设计器内可见（一般默认为false）<br>  [Category(“Appearance”)]：控件属性显示在哪个类别中。Action(与可用操作相关)、Appearance(与实体的外观相关)、Behavior（与实体的行为相关）、Data（与数据和数据源管理相关）<br>  [DesignerSerializationVisibility()]: 将我们在控件属性上设定的值持久化到代码中，这样我们下次再查看控件的值依然是我们最后一次设定的值。指示一个属性是否串行化和如何串行化，它的值是一个枚举，一共有三种类型Content，Hidden，Visible。</li></ul><h3 id="（4）复合控件自定义事件"><a href="#（4）复合控件自定义事件" class="headerlink" title="（4）复合控件自定义事件"></a>（4）复合控件自定义事件</h3><ul><li>在SearchBox逻辑代码中，添加声明自定义事件。 public event EventHandler SearchEvent;</li><li>重新生成解决方案后，可以在事件-杂项中看到我们自定义的事件 SearchEvent </li><li>在设计界面可以给事件添加&#x2F;实现处理回调方法 onSearch（），配合自定义属性食用</li><li>在复合组件中，将图片的点击事件 链接到 自定义事件上，即点击图片时触发自定义事件。编写图片的Click事件</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PictureBox的点击事件 -&gt; 触发自定义事件SearchEvent的回调方法</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="comment">//调用事件，固定写法</span></span><br><span class="line">      <span class="keyword">if</span>(SearchEvent != <span class="literal">null</span>)</span><br><span class="line">      &#123;</span><br><span class="line">           SearchEvent.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//简化写法 SearchEvent?.Invoke(this,e);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>一个控件还可以添加多个事件，顺序触发</p><blockquote><p>（1）界面设计</p></blockquote><img src="https://img-blog.csdnimg.cn/4ff3e0f317a443af87bd04026f529b2d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p>（2）SearchBox.cs 逻辑代码</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">SearchBox</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//添加自定义事件</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler SearchEvent;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SearchBox</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//初始化控件（TextBox+PictureBox）</span></span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加新的自定义属性 SearchText</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> SearchText</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 重写属性 Text</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.textBox1.Text;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//图片点击事件onClick -&gt; 链接自定义事件SearchEvent</span></span><br><span class="line">        <span class="comment">//注意：SearchEvent的事件处理方法，需要在Form.cs中像基本控件的事件处理一样进行添加才行</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//调用事件，固定写法</span></span><br><span class="line">            <span class="keyword">if</span>(SearchEvent != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                SearchEvent.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//简化写法 SearchEvent?.Invoke(this,e);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>（3）Form3.cs 主窗体逻辑代码</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//设置复合控件 图片的点击事件（public方式）</span></span><br><span class="line">            <span class="comment">//searchBox1.pictureBox1.Click += new EventHandler(searchEvent);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//public方式设置复合控件-子控件点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">searchEvent</span>(<span class="params"><span class="built_in">object</span> sender,EventArgs args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取并展示 文本框的内容</span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;开始搜索...&quot;</span> + searchBox1.textBox1.Text);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//SearchBox的自定义事件实现 SearchEvent -&gt; onSearch</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onSearch</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取并展示 文本框的内容（通过自定义属性/重写属性）</span></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;开始搜索...&quot;</span> + searchBox1.SearchText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/916c99fb500a48079e51515cc0a2c8aa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><h1 id="二-控件包装"><a href="#二-控件包装" class="headerlink" title="二.控件包装"></a>二.控件包装</h1><h2 id="1-控件包装基本设计"><a href="#1-控件包装基本设计" class="headerlink" title="1.控件包装基本设计"></a>1.控件包装基本设计</h2><blockquote><p><strong>1.控件包装：</strong><br>（1）定义：控件包装是复合控件的一种特殊形式，其内部只有一个控件<br>（2）目的：对一些基础控件的功能进行拓展和自定义修改，比如TextBox包装后可以修改高度和内边距padding等<br>（3）步骤：<br>        - 新建包装控件类AfTextBox，继承自UserControl，其内部只放置一个TextBox组件，作为对TextBox的包装拓展<br>        - 为了实现可修改TextBox高度宽度的效果，需要设置TextBox的Size随着外部Form的变化而变化 -&gt; onLayout()<br>        - 为了实现可修改TextBox内边距padding的效果，需要设置Form与TextBox的边距来代替文字内边距 -&gt; onLayout()<br>        - 为了无缝实现上述效果，看着是一个TextBox整体，需要设置TextBox和Form背景色相同，并且取消TextBox边框。</p></blockquote><blockquote><p><strong>2.Location属性解释：控件左上角相对于其容器左上角的坐标，单位是像素。</strong><br>（1）对于窗体来说，就是窗口左上角相对于屏幕左上角的坐标；<br>（2）对于一般控件来说，就是控件左上角相对于其容器左上角的坐标，比如说相对于窗体，图片框等。<br>（3）父容器左上角默认(0,0)</p></blockquote><blockquote><p><strong>3.窗口位置调节：</strong><br>        - this.StartPosition &#x3D; FormStartPosition.Manual; &#x2F;&#x2F;窗体的位置由Location属性决定<br>        - this.StartPosition &#x3D; FormStartPosition.CenterParent; &#x2F;&#x2F;窗体在其父窗体中居中<br>        - this.StartPosition &#x3D; FormStartPosition.CenterScreen; &#x2F;&#x2F;窗体在当前显示窗口中居中，尺寸在窗体大小中指定<br>        - this.StartPosition &#x3D; FormStartPosition.WindowsDefaultBounds; &#x2F;&#x2F;窗体定位在windows默认位置，边界也由windows默认决定（默认）<br>        - this.StartPosition &#x3D; FormStartPosition.WindowsDefaultLocation; &#x2F;&#x2F;窗体定位在windows默认位置，尺寸在窗体大小中指定</p></blockquote><p><strong>（1）TextBox包装控件AfTextBox 逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">AfTextBox</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AfTextBox</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//初始化内部控件</span></span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重写布局实现</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs levent</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnLayout(levent);</span><br><span class="line">            <span class="comment">//1.获取子控件</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.Controls.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            Control C = <span class="keyword">this</span>.Controls[<span class="number">0</span>];</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//2.获取父窗口参数</span></span><br><span class="line">            Padding p = <span class="keyword">this</span>.Padding;<span class="comment">//父窗口的边距Padding</span></span><br><span class="line">            <span class="built_in">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;<span class="comment">//子控件相对于容器的初始坐标（左上角） </span></span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.Width, h = <span class="keyword">this</span>.Height;</span><br><span class="line">            w -= (p.Left + p.Right);<span class="comment">//TextBox的宽度 = 容器宽度 - 左右边距</span></span><br><span class="line">            x += p.Left;<span class="comment">//TextBox的相对x = p.Left</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//3.计算文本框的高度，使其显示在中间</span></span><br><span class="line">            <span class="comment">//  （1）PreferredSize：获取可以容纳控件的矩形区域的大小。</span></span><br><span class="line">            <span class="comment">//  （2）Size：获取控件的大小</span></span><br><span class="line">            <span class="built_in">int</span> h2 = C.PreferredSize.Height;</span><br><span class="line">            <span class="keyword">if</span> (h2 &gt; h) h2 = h;</span><br><span class="line">            y = (h - h2) / <span class="number">2</span>;<span class="comment">//TextBox的相对y = (h-h2)/2 高度居中</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//4.设置子控件的位置和尺寸</span></span><br><span class="line">            C.Location = <span class="keyword">new</span> Point(x, y);</span><br><span class="line">            C.Size = <span class="keyword">new</span> Size(w, h2);</span><br><span class="line">            <span class="comment">//5.为什么不调整高度大小：文本框为单行，高度调节无效。只会随着文字格式的大小变化！</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-控件包装单文件开发"><a href="#2-控件包装单文件开发" class="headerlink" title="2.控件包装单文件开发"></a>2.控件包装单文件开发</h2><blockquote><p><strong>2.包装、复合控件单文件开发</strong><br>（1）定义：每次创建UserControl都会自动给我们创建一个相应的designer.cs布局设计文件，将界面和逻辑分开开发。如何将二者合并到一个文件开发呢？<br>（2）步骤：<br>        - 【手动】创建AfTextBox2普通类 class文件，并手动继承UserControl<br>        - 双击打开AfTextBox2.cs可以进入设计界面，拖放控件。会直接给AfTextBox2.cs内自动添加控件布局（不会分开添加了）<br>        - 手动实现构造函数，初始化调用布局 InitializeComponent()<br>        - 添加逻辑代码和事件、属性<br>（3）好处：以后可以直接将单个控件cs文件复制到别的项目里直接使用，而不用分多个了</p></blockquote><blockquote><p><strong>3.包装控件的自定义属性和事件：和复合控件一样（AfTextBox2为例）</strong><br>（1）添加&#x2F;重写自定义属性 Text、BackColor、Front<br>（2）添加自定义事件 ReturnPressed（回车事件）</p></blockquote><p><strong>（1）AfTextBox2包装控件cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">AfTextBox2</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 自动生成布局代码，直接添加到本文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> TextBox edit;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.edit = <span class="keyword">new</span> System.Windows.Forms.TextBox();</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// edit</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.edit.BorderStyle = System.Windows.Forms.BorderStyle.None;</span><br><span class="line">            <span class="comment">//this.edit.Font = new System.Drawing.Font(&quot;宋体&quot;, 16F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(134)));</span></span><br><span class="line">            <span class="keyword">this</span>.edit.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">106</span>, <span class="number">79</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.Name = <span class="string">&quot;edit&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">263</span>, <span class="number">37</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.TabIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.KeyPress += <span class="keyword">new</span> System.Windows.Forms.KeyPressEventHandler(<span class="keyword">this</span>.OnPress);</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// AfTextBox2</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.BackColor = System.Drawing.Color.White;</span><br><span class="line">            <span class="keyword">this</span>.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;</span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.edit);</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;AfTextBox2&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">524</span>, <span class="number">246</span>);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">this</span>.PerformLayout();</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 手动添加构造函数，初始化布局</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AfTextBox2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加逻辑代码，实现组件自适应</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs levent</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnLayout(levent);</span><br><span class="line">            <span class="comment">//1.获取子控件</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.Controls.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            Control C = <span class="keyword">this</span>.Controls[<span class="number">0</span>];</span><br><span class="line">     </span><br><span class="line">            <span class="comment">//2.获取父窗口参数</span></span><br><span class="line">            Padding p = <span class="keyword">this</span>.Padding;<span class="comment">//父窗口的边距Padding</span></span><br><span class="line">            <span class="built_in">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;<span class="comment">//子控件相对于容器的初始坐标（左上角） </span></span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.Width, h = <span class="keyword">this</span>.Height;</span><br><span class="line">            w -= (p.Left + p.Right);<span class="comment">//TextBox的宽度 = 容器宽度 - 左右边距</span></span><br><span class="line">            x += p.Left;<span class="comment">//TextBox的相对x = p.Left</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//3.计算文本框的高度，使其显示在中间</span></span><br><span class="line">            <span class="comment">//  （1）PreferredSize：获取可以容纳控件的矩形区域的大小。</span></span><br><span class="line">            <span class="comment">//  （2）Size：获取控件的大小</span></span><br><span class="line">            <span class="built_in">int</span> h2 = C.PreferredSize.Height;</span><br><span class="line">            <span class="keyword">if</span> (h2 &gt; h) h2 = h;</span><br><span class="line">            y = (h - h2) / <span class="number">2</span>;<span class="comment">//TextBox的相对y = (h-h2)/2 高度居中</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//4.设置子控件的位置和尺寸</span></span><br><span class="line">            C.Location = <span class="keyword">new</span> Point(x, y);</span><br><span class="line">            C.Size = <span class="keyword">new</span> Size(w, h2);</span><br><span class="line">            <span class="comment">//5.为什么不调整高度大小：文本框为单行，高度调节无效。只会随着文字格式的大小变化！</span></span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 重写自定义属性 Text</span></span><br><span class="line"><span class="comment">         *  Browsable：True则属性在设计界面显示可修改，False则属性在设计界面不显示。默认为True</span></span><br><span class="line"><span class="comment">         *  DesignerSerializationVisibility：设置属性的序列化方式，默认为Visible</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> edit.Text;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                edit.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//重写自定义属性 Color</span></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Color BackColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> edit.BackColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//容器和TextBox的颜色一起整体变化</span></span><br><span class="line">                <span class="keyword">base</span>.BackColor = <span class="keyword">value</span>;</span><br><span class="line">                edit.BackColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 注意：Font的设置有些特殊，需要提供初始的默认值</span></span><br><span class="line"><span class="comment">         * **此处仍未解决，无法修改Font字体**</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> Font initFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10f</span>);</span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Content)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Font Font</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> initFont;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.initFont = <span class="keyword">value</span>;</span><br><span class="line">                <span class="keyword">this</span>.edit.Font = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 添加自定义事件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler ReturnPressed;</span><br><span class="line">        <span class="comment">//TextBox的keyPress -&gt; 触发 ReturnPressed事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnPress</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">char</span> ch = e.KeyChar;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;\r&#x27;</span>)<span class="comment">//如果是回车符号</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//回调ReturnPressed事件</span></span><br><span class="line">                ReturnPressed?.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）Form窗体应用</strong></p><img src="https://img-blog.csdnimg.cn/e1d18980478348a2bc9eccc2e60a94b7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form4</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//包装控件的 ReturnPressed 回车触发事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnEnterPress</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;正在检索...&quot;</span> + afTextBox21.Font);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三-对话框"><a href="#三-对话框" class="headerlink" title="三.对话框"></a>三.对话框</h1><h2 id="1-对话框基本概念"><a href="#1-对话框基本概念" class="headerlink" title="1.对话框基本概念"></a>1.对话框基本概念</h2><blockquote><p><strong>1.对话框</strong><br>（1）构建：对话框本质还是一个Form窗体，只不过以对话框的形式显示。所以对话框的构建参照窗体的设计即可<br>（2）使用：新建一个对话框 MyDiglog ，在点击事件中显示对话框 ShowDialog()<br>        MyDialog dialog &#x3D; new MyDialog(); &#x2F;&#x2F;新建窗体<br>        dialog.ShowDialog(); &#x2F;&#x2F;作为对话框弹出在当前界面。注意如果是Show()则是显示窗体，非对话框<br>        dialog.Dispose(); &#x2F;&#x2F;销毁窗体，释放资源<br>（3）运行流程：<br>        - 在调用ShowDialog方法后，会[阻塞]父窗口进程，不再往下执行。表现为子窗口可以活动，而父窗口不行<br>        - 对话框阻塞直到用户关闭对话框，父窗口进程才继续向下执行<br>        - 执行Dispose方法释放对话框资源<br>（4）对话框属性（和窗体Form属性一样）：<br>        - Text：窗体左上角显示文字<br>        - MaximizeBox：最大化按钮（True显示，Flase不显示）<br>        - MinimizeBox：最小化按钮（True显示，Flase不显示）、<br>        - ShowInTaskBar：是否在任务栏显示<br>        - StartPosition：窗体显示位置 WindowsDefaultLocation窗口默认位置、CenterSceen窗口中央、CenterParent父窗口中央等<br>        - FormBorderStyle：边界样式 Sizable可修改、FixedDialog固定对话框大小、FixedSignle固定窗体<br>（5）对话框返回值与数据传递<br>        - 对话框含有属性 DialogResult<br>                DialogResult.OK ：设置DialogResult为OK，窗体会立即关闭，并返回DialogResult.OK值<br>                DialogResult.Cancel：设置DialogResult为Cancel，窗体会立即关闭，并返回DialogResult.Cancel值<br>        - 数据传递：可以将传递数据组件设置为public，在关闭窗口后Dispose之前调用dialog.xxx来获取属性值</p></blockquote><p><strong>（1）对话框界面设计</strong></p><img src="https://img-blog.csdnimg.cn/93cca8454a854ea0a84520ff27d00e9b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p>**（2）对话框逻辑代码（MyDialog.cs） **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MyDialog</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyDialog</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对话框确认按钮</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnClickOk</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//关闭当前对话框，并返回OK</span></span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.OK;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对话框取消按钮</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnClickCancel</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//关闭当前对话框，并返回Cancel</span></span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.Cancel;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）Form窗体逻辑代码</strong></p><blockquote><p><strong>1.两大功能：</strong></p><ul><li>通过点击按钮，创建并展示对话框</li><li>获取对话框返回值，并显示在主窗体界面上</li></ul></blockquote><img src="https://img-blog.csdnimg.cn/ebcb55bcb4184fcab924cc79893a0fd5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form5</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form5</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//点击按钮，触发对话框展示事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">show_Dialog</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MyDialog dialog = <span class="keyword">new</span> MyDialog(); <span class="comment">//新建窗体</span></span><br><span class="line">            DialogResult res =  dialog.ShowDialog(); <span class="comment">//作为对话框弹出在当前界面</span></span><br><span class="line">            <span class="comment">//阻塞当前进程，直到用户关闭对话框</span></span><br><span class="line">            <span class="keyword">if</span>(res == DialogResult.OK)<span class="comment">//表示点击了确定按钮关闭的窗口</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取数据，显示在父界面</span></span><br><span class="line">                <span class="keyword">this</span>.textPanel.Text += (dialog.dlg_text.Text + <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            dialog.Dispose(); <span class="comment">//销毁窗体，释放资源</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>2.快捷操作+默认行为：</strong><br>        - 对话框按钮快捷关闭：按钮上带有一个 DialogResult属性：OK、Cancel等都可以设置。其效果和手写代码是一样的，关闭对话框并返回值<br>        - 对话框的AcceptButton属性：当在对话框点击 回车 时会触发的按钮，默认为None<br>        - 对话框的CancelButton属性：当在对话框点击 ESC 时会触发的按钮，默认为None</p></blockquote><h2 id="2-对话框小练习：字体设置器"><a href="#2-对话框小练习：字体设置器" class="headerlink" title="2.对话框小练习：字体设置器"></a>2.对话框小练习：字体设置器</h2><blockquote><p>要求实现一个文本输入器，可以通过点击按钮弹出字体设置对话框，来选择相应的字体和字号。确认后将主窗口的文本输入变为相应的字体样式。</p></blockquote><p>**（1）主窗口界面设计 **</p><img src="https://img-blog.csdnimg.cn/6c63c4ca67af43438a21ad5331ad991d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）对话框界面设计</strong></p><img src="https://img-blog.csdnimg.cn/cf8b676ec38d47689deca1c66e398243.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_19,color_FFFFFF,t_70,g_se,x_16"><p><strong>（3）对话框逻辑代码StyleDialog.cs</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">StyleDialog</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">StyleDialog</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取选择字体类型 public</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> FontType</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">string</span>)<span class="keyword">this</span>.dlg_wordType.SelectedItem;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.dlg_wordType.SelectedItem = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取选择字体大小 public</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> FontSize</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> (<span class="built_in">int</span>)<span class="keyword">this</span>.dlg_wordSize.Value;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.dlg_wordSize.Value = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//按钮点击事件：返回值</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClickOk</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.OK;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClickCancel</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.Cancel;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（4）主窗体逻辑代码Form1.cs</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置按钮点击事件：弹出对话框，并获取返回值</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onClickStyle</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            StyleDialog dlg = <span class="keyword">new</span> StyleDialog();</span><br><span class="line">            DialogResult res =  dlg.ShowDialog();</span><br><span class="line">            <span class="keyword">if</span>(res == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取返回值,设置当前字体样式</span></span><br><span class="line">                <span class="built_in">string</span> fontType = dlg.FontType;</span><br><span class="line">                <span class="built_in">int</span> fontSize = dlg.FontSize;</span><br><span class="line">                <span class="keyword">this</span>.text_panel.Font = <span class="keyword">new</span> Font(fontType, fontSize);</span><br><span class="line">            &#125;</span><br><span class="line">            dlg.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四-系统对话框"><a href="#四-系统对话框" class="headerlink" title="四.系统对话框"></a>四.系统对话框</h1><blockquote><p><strong>1.系统对话框：WinForm提供了很多内置的系统对话框，比如文件浏览、保存，颜色、字体选择等。</strong><br>（1）OpenFileDialog : 文件打开对话框<br>        - new OpenFileDialog()：新建对话框<br>        - InitialDirectory：设置打开的初始展示路径<br>        - DefaultExt：获取或设置默认显示的文件扩展名。<br>        - Filter：获取或设置当前文件名筛选器字符串。其格式为 “自定义字符串标签|类型列表”<br>                a.单个文件类型：图片|<em>.jpg,</em>.png,<em>.gif<br>                b.多个文件类型：图片|</em>.jpg,<em>.png,</em>.gif|文本|<em>.txt,</em>.doc|所有|<em>.</em><br>        - FileName：获取或设置对话框中选定的文件名称字符串<br>        - FileNames：获取或设置对话框中所有选定的文件名称字符串列表<br>（2）SaveFileDialog : 文件保存对话框（跟OpenFileDialog差不多）<br>（3）FolderBrowserDialog：文件夹选择对话框<br>        - new FolderBrowserDialog()：新建对话框<br>        - InitialDirectory:    获取或设置打开的初始路径<br>        - SelectedPath：获取或设置选择的文件夹路径<br>（4）ColorDialog：颜色选择对话框<br>（5）FontDialog：字体选择对话框</p></blockquote><h2 id="1-系统对话框功能使用"><a href="#1-系统对话框功能使用" class="headerlink" title="1.系统对话框功能使用"></a>1.系统对话框功能使用</h2><blockquote><p>为了展示系统对话框的功能，此处设计一个文件浏览窗口，能够选择、保存文件或文件夹，并将所选定的文件&#x2F;目录路径名称展示到主界面文本框。</p></blockquote><p><strong>（1）界面设计</strong></p><img src="https://img-blog.csdnimg.cn/ddf714a3ba6644c0a5057e75d828a75d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）Form.cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form6</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form6</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//选择文件按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            OpenFileDialog fileDialog = <span class="keyword">new</span> OpenFileDialog(); <span class="comment">//新建文件对话框</span></span><br><span class="line">            fileDialog.InitialDirectory = <span class="string">&quot;D:\\日常材料\\学习资料\\WinForm\\第十二章 系统对话框\\12.1 系统对话框\\项目源码\\FormApp1201\\FormApp1201&quot;</span>; <span class="comment">//设置初始路径</span></span><br><span class="line">            <span class="comment">//fileDialog.SelectedPath = Path.GetFullPath(&quot;.&quot;); </span></span><br><span class="line">            fileDialog.DefaultExt = <span class="string">&quot;.cs&quot;</span>; <span class="comment">//筛选展示 .cs后缀文件</span></span><br><span class="line">            fileDialog.Filter = <span class="string">&quot;代码|*.cs;*.config&quot;</span>; <span class="comment">//设置文件选择器</span></span><br><span class="line">            <span class="keyword">if</span> (fileDialog.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取并设置文件路径名称到主窗体</span></span><br><span class="line">                <span class="built_in">string</span> fileName = fileDialog.FileName;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = fileName;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//保存文件按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SaveFileDialog dlg = <span class="keyword">new</span> SaveFileDialog();</span><br><span class="line">            dlg.FileName = <span class="string">&quot;新的文本文件&quot;</span>;</span><br><span class="line">            dlg.DefaultExt = <span class="string">&quot;.txt&quot;</span>;</span><br><span class="line">            dlg.Filter = <span class="string">&quot;文本|*.txt;*.doc&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            <span class="keyword">if</span> (dlg.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> fileName = dlg.FileName;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = fileName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//选择文件夹按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FolderBrowserDialog dlg = <span class="keyword">new</span> FolderBrowserDialog();</span><br><span class="line">            dlg.SelectedPath = Path.GetFullPath(<span class="string">&quot;.&quot;</span>);<span class="comment">//返回当前文件夹的绝对路径字符串</span></span><br><span class="line">            <span class="keyword">if</span> (dlg.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> path = dlg.SelectedPath;</span><br><span class="line">                <span class="keyword">this</span>.textBox1.Text = path;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/cca83964afdc48ab97332326c7749a58.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="2-系统对话框练习-图片查看器"><a href="#2-系统对话框练习-图片查看器" class="headerlink" title="2.系统对话框练习-图片查看器"></a>2.系统对话框练习-图片查看器</h2><blockquote><p>设计一个图片查看器窗口，可以在主窗体中选择浏览目录路径，选择后将该目录下的所有图片名称加载到主窗口左侧的列表栏，用户通过点击列表栏的图片名称可以切换显示相应的图片在主窗口右侧的图片展示区。</p></blockquote><p><strong>（1）界面设计</strong></p><blockquote><p>主窗体中用到了一个自定义文本框AfTextBox，可以自由拉伸。同时有一个浏览按钮放置在其右侧，可以打开文件目录浏览窗口。主窗体还包括一个列表框，用于显示图片名称列表；除此之外还有一个图片框，用于展示指定路径图片。</p></blockquote><img src="https://img-blog.csdnimg.cn/1039edaa9f9441208c566fb1528d3c4b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2） 自定义对话框AfTextBox单文件开发</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">AfTextBox</span>:<span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> TextBox edit;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.edit = <span class="keyword">new</span> System.Windows.Forms.TextBox();</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// edit</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.edit.BorderStyle = System.Windows.Forms.BorderStyle.None;</span><br><span class="line">            <span class="keyword">this</span>.edit.Font = <span class="keyword">new</span> System.Drawing.Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">12F</span>, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((<span class="built_in">byte</span>)(<span class="number">134</span>)));</span><br><span class="line">            <span class="keyword">this</span>.edit.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">52</span>, <span class="number">52</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.Name = <span class="string">&quot;edit&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">89</span>, <span class="number">19</span>);</span><br><span class="line">            <span class="keyword">this</span>.edit.TabIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">this</span>.edit.KeyPress += <span class="keyword">new</span> System.Windows.Forms.KeyPressEventHandler(<span class="keyword">this</span>.onTextPressed);</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// AfTextBox</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.BackColor = System.Drawing.Color.White;</span><br><span class="line">            <span class="keyword">this</span>.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;</span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.edit);</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;AfTextBox&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">199</span>, <span class="number">105</span>);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">this</span>.PerformLayout();</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AfTextBox</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnLayout(e);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.Controls.Count == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">            Control c = <span class="keyword">this</span>.Controls[<span class="number">0</span>];</span><br><span class="line">     </span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.Width, h = <span class="keyword">this</span>.Height;</span><br><span class="line">            <span class="built_in">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">int</span> left = <span class="keyword">this</span>.Padding.Left, right = <span class="keyword">this</span>.Padding.Right;</span><br><span class="line">            w -= (left + right);</span><br><span class="line">            x += left;</span><br><span class="line">            <span class="comment">//PreferredSize获取控件矩形容器框的大小</span></span><br><span class="line">            <span class="comment">//原因是文本框为单行输入，没法调节高度！但是外部矩形容器可以</span></span><br><span class="line">            <span class="built_in">int</span> h2 = c.PreferredSize.Height;</span><br><span class="line">            <span class="keyword">if</span> (h2 &gt; h) h2 = h;</span><br><span class="line">            y  += (h - h2) / <span class="number">2</span>;</span><br><span class="line">     </span><br><span class="line">            c.Location = <span class="keyword">new</span> Point(x, y);</span><br><span class="line">            c.Size = <span class="keyword">new</span> Size(w, h2);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> Text &#123;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.edit.Text = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.edit.Text;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Color BackColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.edit.BackColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.edit.BackColor = <span class="keyword">value</span>;</span><br><span class="line">                <span class="comment">//此处是base!!!!不是this!!!</span></span><br><span class="line">                <span class="keyword">base</span>.BackColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">override</span> Color ForeColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> edit.ForeColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                edit.ForeColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        [<span class="meta">Browsable(true)</span>]</span><br><span class="line">        [<span class="meta">DesignerSerializationVisibility(DesignerSerializationVisibility.Visible)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> ReadOnly</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.edit.ReadOnly;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.edit.ReadOnly = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> EventHandler ReturnPressed;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onTextPressed</span>(<span class="params"><span class="built_in">object</span> sender, KeyPressEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">char</span> ch = e.KeyChar;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;\r&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ReturnPressed?.Invoke(<span class="keyword">this</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）主窗体Form.cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//浏览按钮 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">onScanClick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FolderBrowserDialog dlg = <span class="keyword">new</span> FolderBrowserDialog();</span><br><span class="line">            <span class="keyword">if</span>(dlg.ShowDialog() == DialogResult.OK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> path = dlg.SelectedPath;</span><br><span class="line">                <span class="keyword">this</span>.afTextbox.Text = path;</span><br><span class="line">                <span class="comment">// 加载图片列表</span></span><br><span class="line">                ShowPictureList(path);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowPictureList</span>(<span class="params"><span class="built_in">string</span> dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 清空显示</span></span><br><span class="line">            listFile.Items.Clear();</span><br><span class="line">            <span class="comment">// 遍历所有的文件，检查文件名后缀</span></span><br><span class="line">            <span class="built_in">string</span>[] files = Directory.GetFiles(dir);</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="built_in">string</span> f <span class="keyword">in</span> files)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (f.EndsWith(<span class="string">&quot;.jpg&quot;</span>) || f.EndsWith(<span class="string">&quot;.png&quot;</span>) || f.EndsWith(<span class="string">&quot;.jpeg&quot;</span>))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 取得文件名</span></span><br><span class="line">                    PictureListItem item = <span class="keyword">new</span> PictureListItem();</span><br><span class="line">                    item.name = Path.GetFileName(f);</span><br><span class="line">                    item.filePath = f;</span><br><span class="line">                    <span class="comment">//Console.WriteLine(&quot;name:&quot; + f + &quot;,path:&quot; + item.filePath);</span></span><br><span class="line">                    <span class="comment">// 加到列表框显示</span></span><br><span class="line">                    <span class="keyword">this</span>.listFile.Items.Add(item);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 默认打开第一个文件显示（手动SetSelect也会触发IndexChanged事件）</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (listFile.Items.Count &gt; <span class="number">0</span>)</span><br><span class="line">                listFile.SetSelected(<span class="number">0</span>, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listFile_SelectedIndexChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            PictureListItem item = (PictureListItem)listFile.SelectedItem;</span><br><span class="line">            <span class="keyword">if</span> (item == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="comment">//加载图片</span></span><br><span class="line">            pathPic.Load(item.filePath);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// 文件项</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">PictureListItem</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> filePath;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> name;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五-菜单栏和工具栏"><a href="#五-菜单栏和工具栏" class="headerlink" title="五.菜单栏和工具栏"></a>五.菜单栏和工具栏</h1><blockquote><p>1.菜单栏 MenuStrip：窗口顶部停靠菜单栏<br>（1）使用：设计界面可视化设计，可以添加菜单项、下拉框、分割线、文本<br>（2）属性：每个Item都可以设置ID、Text、Image（图标）、点击事件Click<br>2.工具栏 ToolStrip：窗口顶部停靠工具栏，一般位于菜单栏下方（图标栏）<br>（1）使用：设计界面可视化设计，可以添加工具按钮、分割线等。一般窗口上方第一排为菜单栏，第二排为工具栏，二者对应<br>（2）属性：每个Item都可以设置ID、Image（图标）、点击事件Click等<br>（3）开发技巧：工具栏与菜单栏一般具有对应关系，每个菜单都有对应的工具图标按钮，二者的点击回调事件可以共用。在事件中点击下拉箭头-&gt;选择菜单栏设置的事件即可<br>3.右键菜单（上下文菜单）： ContextMenuStrip<br>（1）定义：在窗口不同部位右键显示的菜单栏应该具有不同的选项，一般项目中菜单栏和工具栏可能没有，但是右键菜单是一定具有的！<br>（2）使用：<br>        - 在设计界面添加 ContextMenuStrip上下文菜单，并添加菜单项。但此时仅是对上下文菜单进行了定义和声明，右键还不能显示<br>        - 设置界面或者控件的鼠标点击事件MouseUp&#x2F;MouseDown，在事件中展示菜单ContextMenuStrip.show(展示控件,展示位置)<br>        - 进一步，我们希望在listBox中，右键item的时候显示编辑和删除，而右键空白位置只显示添加，才符合我们的逻辑（不同的逻辑展示不同的右键菜单内容）<br>        - 设置菜单项点击事件</p></blockquote><p><strong>（1）界面设计</strong></p><img src="https://img-blog.csdnimg.cn/a7f515adc47e4248bb68407c98c2f04a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）Form.cs逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form5</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form5</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//工具栏Item 点击事件</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">void</span> 打开ToolStripMenuItem_Click(<span class="built_in">object</span> sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;点击了打开...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//listBox 列表控件 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listBox1_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//如果是鼠标右键点击了，才触发右键菜单</span></span><br><span class="line">            <span class="keyword">if</span>(e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//IndexFromPoint:返回从指定位置处开始的第一个Item索引</span></span><br><span class="line">                <span class="comment">//e.Location:鼠标点击的位置Point</span></span><br><span class="line">                <span class="built_in">int</span> index = listBox1.IndexFromPoint(e.Location);</span><br><span class="line">                <span class="comment">//如果index&gt;=0，则说明右键了某个Item项而不是空白位置</span></span><br><span class="line">                <span class="keyword">if</span> (index &gt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//要显示/允许选择 编辑/删除项</span></span><br><span class="line">                    listBox1.SetSelected(index, <span class="literal">true</span>);<span class="comment">//选中该项</span></span><br><span class="line">                    Item_Edit.Enabled = <span class="literal">true</span>;<span class="comment">//右键菜单项设置允许点击</span></span><br><span class="line">                    Item_Del.Enabled = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//清空选择，不显示/禁用编辑/删除</span></span><br><span class="line">                    listBox1.ClearSelected();<span class="comment">//清空</span></span><br><span class="line">                    Item_Edit.Enabled = <span class="literal">false</span>;<span class="comment">//禁用</span></span><br><span class="line">                    Item_Del.Enabled = <span class="literal">false</span>;</span><br><span class="line">     </span><br><span class="line">                    <span class="comment">//Item_Edit.Visible = false;//直接不显示该项</span></span><br><span class="line">                    <span class="comment">//Item_Del.Visible = false;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">this</span>.contextMenu.Show(listBox1, e.Location);<span class="comment">//显示右键菜单</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//右键菜单项[添加] 点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Item_Add_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;上下文菜单:选择了添加...&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六-列表视图控件-ListView"><a href="#六-列表视图控件-ListView" class="headerlink" title="六.列表视图控件 ListView"></a>六.列表视图控件 ListView</h1><h2 id="1-ListView基本使用"><a href="#1-ListView基本使用" class="headerlink" title="1.ListView基本使用"></a>1.ListView基本使用</h2><blockquote><p>1.列表控件ListView：升级版的ListBox，其显示类似于windows的文件夹视图<br>（1）特点：列表显示模式可以切换（详情、大图标、小图标），可以多字段显示，可以设置图标、标签可以编辑，每列可以排序，可以自定义设计<br>（2）控件基本属性：View（显示模式）、Columns（集合，列头名称）、Items（集合，列表中的项）、Items.SubTetms（集合，列表中每项的子项-其他列显示的数据）、LabelEdit（是否允许用户就地编辑标签）、LargeImageList（大图标列表）、SmallImageList（小图标列表）、Sorting（排序方式）等<br>（3）简单使用步骤：<br>        - 在设计界面将ListView拖入，并设置Dock为占满（接下来可以在设计界面进行可视化设计，也可以通过代码来添加设计数据项）<br>        - 代码方式设计ListView（推荐）:<br>                a.设置显示方式<br>                b.设置列名<br>                c.添加数据项<br>                d.设置每个数据项的子项数据<br>        - 推荐使用代码方式添加数据的原因：很多时候我们并不知道要遍历的项有多少，所以不能提前设计好。只能通过代码方式动态添加</p></blockquote><p><strong>（1）ListView基本用法展示</strong> </p><blockquote><p>界面设计非常简单，就是拖入一个ListView控件，并设置Dock为Fill填充满父容器，无其他控件，这里就不再展示设计界面了。基本用法主要展示如何在ListView中使用代码方式添加列名、数据项等。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化ListView控件</span></span><br><span class="line">            InitializeListView();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.设置显示模式为详情模式：显示图标+主项+所有子项</span></span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            <span class="comment">// 设置整行选中（选中某一项的时候选中整行，而不只是主项）</span></span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//2.设置列名Add(列名,宽度[像素值],对齐方式)</span></span><br><span class="line">            <span class="comment">// 宽度值-2表示自动调整宽度</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;文件名&quot;</span>,<span class="number">-2</span>,HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时期&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//3.添加数据项 ListViewItem(数据名称,图标下标)</span></span><br><span class="line">            ListViewItem item1 = <span class="keyword">new</span> ListViewItem(<span class="string">&quot;Java学习指南.pdf&quot;</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="comment">//4.设置子项数据(对应每列的数据)</span></span><br><span class="line">            item1.SubItems.Add(<span class="string">&quot;2020-2-20 12:10&quot;</span>);</span><br><span class="line">            item1.SubItems.Add(<span class="string">&quot;PDF&quot;</span>);</span><br><span class="line">            item1.SubItems.Add(<span class="string">&quot;192 KB&quot;</span>);</span><br><span class="line">            listView1.Items.Add(item1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/ce9968f28aac4cb4af489bbb7fd4b635.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）ListView基本使用小练习：本地文件目录列表展示</strong></p><blockquote><p><strong>2.ListView控件高级使用：本地文件可视化</strong><br>（1）在设计界面，将ListView控件拖入，并设置Dock为填充Fill<br>（2）添加数据项图标的图片资源到Resources<br>（3）在代码中初始化ListView基本配置，包括列名、显示模式、图标列表等。 InitListView()</p></blockquote><img src="https://img-blog.csdnimg.cn/9cfa5f7676af467cae628c8a9339967a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form2</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化ListView控件</span></span><br><span class="line">            InitListView();</span><br><span class="line">            <span class="comment">//加载添加文件数据项</span></span><br><span class="line">            LoadDir(<span class="keyword">new</span> DirectoryInfo(<span class="string">&quot;D:\\&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//设置显示模式为详情模式</span></span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            <span class="comment">//设置整行选中</span></span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//设置列名</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;名称&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时间&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//创建ImageList（提供一些方法，来管理一些列图片资源的列表类），并添加2个小图标</span></span><br><span class="line">            ImageList imgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            imgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">16</span>, <span class="number">16</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_file);<span class="comment">//事先添加到Resources的图标</span></span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_folder);</span><br><span class="line">            <span class="comment">// 设置 SmallImageList 用于显示小图标（适用于小图标、详情、列表模式显示图标）</span></span><br><span class="line">            <span class="comment">// 设置 LargeImageList 用于显示大图标（适用于大图标模式显示图标）</span></span><br><span class="line">            listView1.SmallImageList = imgList;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.遍历本地资源，获取文件或目录</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadDir</span>(<span class="params">DirectoryInfo dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 加载优化：BeginUpdate()+EndUpdate()，该方法指明内部的程序全部执行完后才进行一次总更新，而不是每Add一项就更新一次。（避免频繁刷新）</span></span><br><span class="line">            <span class="comment">// listView1.BeginUpdate();</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 获取[子目录]列表</span></span><br><span class="line">            DirectoryInfo[] subDirs = dir.GetDirectories();</span><br><span class="line">            <span class="keyword">foreach</span> (DirectoryInfo d <span class="keyword">in</span> subDirs)</span><br><span class="line">            &#123;           </span><br><span class="line">                <span class="comment">//如果该目录是隐藏文件，则跳过</span></span><br><span class="line">                <span class="keyword">if</span> ((d.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="comment">//否则就添加到ListVie中显示（目录名称，最新修改时间，数据项类型，文件大小）</span></span><br><span class="line">                AddListItem(d.Name, d.LastWriteTime, <span class="string">&quot;文件夹&quot;</span>, <span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取[子文件]列表</span></span><br><span class="line">            FileInfo[] subFiles = dir.GetFiles();</span><br><span class="line">            <span class="keyword">foreach</span> (FileInfo f <span class="keyword">in</span> subFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//如果该文件是隐藏文件，则跳过</span></span><br><span class="line">                <span class="keyword">if</span> ((f.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">string</span> ext = f.Extension.ToUpper(); <span class="comment">// 获取文件拓展名后缀（.zip、.png、.doc等）</span></span><br><span class="line">                <span class="comment">//否则就添加到ListVie中显示（文件名称，最新修改时间，文件后缀类型，文件大小）</span></span><br><span class="line">                AddListItem(f.Name, f.LastWriteTime, ext, f.Length);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// listView1.EndUpdate();</span></span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3，将文件和目录按照不同类型添加到ListView数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params"><span class="built_in">string</span> label, DateTime time, <span class="built_in">string</span> type, <span class="built_in">long</span> size</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断是文件还是文件夹，使用不同的图标</span></span><br><span class="line">            <span class="built_in">int</span> imageIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!type.Equals(<span class="string">&quot;文件夹&quot;</span>)) imageIndex = <span class="number">1</span>;</span><br><span class="line">     </span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(label, imageIndex);<span class="comment">//imageIndex会去listView下的SmallImageList找图标</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 添加子项 - 时间</span></span><br><span class="line">            item.SubItems.Add(time.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>));</span><br><span class="line">            <span class="comment">// 添加子项 - 类型</span></span><br><span class="line">            item.SubItems.Add(type);</span><br><span class="line">            <span class="comment">// 添加子项 - 文件大小</span></span><br><span class="line">            <span class="built_in">string</span> sizeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (size &lt; <span class="number">0</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span>; <span class="comment">// 文件夹不显示大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span> + size;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000</span> + <span class="string">&quot; KB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000000</span> + <span class="string">&quot; MB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sizeStr = size / <span class="number">1000000000</span> + <span class="string">&quot; GB&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(sizeStr);</span><br><span class="line">     </span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-ListView模式切换"><a href="#2-ListView模式切换" class="headerlink" title="2.ListView模式切换"></a>2.ListView模式切换</h2><blockquote><p>3.ListView控件：模式切换（切换详情、列表、大图标、小图标模式显示）<br>（1）设计要求：在上节内容文件目录展示案例的基础上，实现右键菜单切换显示模式<br>（2）开发流程：<br>        - 在设计界面，拖入ListView控件，并设置Dock为充满Fill<br>        - 在代码中初始化ListView控件列名、[大图标列表]、[小图标列表]等（因为大图标模式和小图标模式需要使用两套图标）<br>        - 加载遍历文件和目录，并添加数据项Item<br>        - 在设计界面拖入ContextMenu控件，并设置ListView的MouseUp点击事件，显示右键菜单<br>        - 右键菜单实现切换模式功能</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">            InitListView();</span><br><span class="line">            <span class="comment">//2.载入文件和目录</span></span><br><span class="line">            LoadDir(<span class="keyword">new</span> DirectoryInfo(<span class="string">&quot;D:\\&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//设置列名</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;名称&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时间&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//*创建SmallImageList 小图标列表（用于Detail、SmallIcon等模式里显示小图标）</span></span><br><span class="line">            ImageList smallImgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            smallImgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">16</span>, <span class="number">16</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            smallImgList.Images.Add(Properties.Resources.Icon_file);</span><br><span class="line">            smallImgList.Images.Add(Properties.Resources.Icon_folder);</span><br><span class="line">            listView1.SmallImageList = smallImgList;</span><br><span class="line">            <span class="comment">//*创建LargeImageList 大图标列表（用于LargeIcon模式里显示大图标）</span></span><br><span class="line">            ImageList largeImgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            largeImgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">64</span>, <span class="number">64</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            largeImgList.Images.Add(Properties.Resources.Icon_file2);</span><br><span class="line">            largeImgList.Images.Add(Properties.Resources.Icon_folder2);</span><br><span class="line">            listView1.LargeImageList = largeImgList;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.加载数据项：遍历文件和目录，按照不同类型添加数据项Item及其子项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadDir</span>(<span class="params">DirectoryInfo dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           listView1.BeginUpdate();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 获取[子目录]列表</span></span><br><span class="line">            DirectoryInfo[] subDirs = dir.GetDirectories();</span><br><span class="line">            <span class="keyword">foreach</span> (DirectoryInfo d <span class="keyword">in</span> subDirs)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((d.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                AddListItem(d.Name, d.LastWriteTime, <span class="string">&quot;文件夹&quot;</span>, <span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取[子文件]列表</span></span><br><span class="line">            FileInfo[] subFiles = dir.GetFiles();</span><br><span class="line">            <span class="keyword">foreach</span> (FileInfo f <span class="keyword">in</span> subFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((f.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">string</span> ext = f.Extension.ToUpper();<span class="comment">//文件后缀名</span></span><br><span class="line">                AddListItem(f.Name, f.LastWriteTime, ext, f.Length);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">           listView1.EndUpdate();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3，将文件和目录按照不同类型添加到ListView数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params"><span class="built_in">string</span> label, DateTime time, <span class="built_in">string</span> type, <span class="built_in">long</span> size</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断是文件还是文件夹，使用不同的图标</span></span><br><span class="line">            <span class="built_in">int</span> imageIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!type.Equals(<span class="string">&quot;文件夹&quot;</span>)) imageIndex = <span class="number">1</span>;</span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(label, imageIndex);</span><br><span class="line">            <span class="comment">// 添加子项 - 时间</span></span><br><span class="line">            item.SubItems.Add(time.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>));</span><br><span class="line">            <span class="comment">// 添加子项 - 类型</span></span><br><span class="line">            item.SubItems.Add(type);</span><br><span class="line">            <span class="comment">// 添加子项 - 文件大小</span></span><br><span class="line">            <span class="built_in">string</span> sizeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (size &lt; <span class="number">0</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span>; <span class="comment">// 文件夹不显示大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span> + size;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000</span> + <span class="string">&quot; KB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000000</span> + <span class="string">&quot; MB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sizeStr = size / <span class="number">1000000000</span> + <span class="string">&quot; GB&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(sizeStr);</span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.ListView添加MouseUp点击事件：显示右键菜单（菜单中默认选中当前的显示模式）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                View view = listView1.View;</span><br><span class="line">                <span class="comment">//根据显示模式，设置右键菜单的选中项</span></span><br><span class="line">                menuDetail_Item.Checked = (view == View.Details);</span><br><span class="line">                menuList_Item.Checked = (view == View.List);</span><br><span class="line">                menuLarge_Item.Checked = (view == View.LargeIcon);</span><br><span class="line">                menuSmall_Item.Checked = (view == View.SmallIcon);</span><br><span class="line">                <span class="comment">//显示右键菜单(在鼠标右键位置e.Location)</span></span><br><span class="line">                contextMenuStrip.Show(listView1, e.Location);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.设置右键菜单的点击事件：切换显示模式</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuDetail_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuList_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.List;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuLarge_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.LargeIcon;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">menuSmall_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.SmallIcon;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/4edbc379dfb7438b85ddbbdf350d4740.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/f7175d415dfb4b61a05844db3246cfdb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="3-ListView数据项列排序"><a href="#3-ListView数据项列排序" class="headerlink" title="3.ListView数据项列排序"></a>3.ListView数据项列排序</h2><blockquote><p><strong>4.ListView的列排序实现：点击每一列可以实现升序&#x2F;降序排序(此处只以第0列为例)</strong><br>（1）编码步骤（在文件目录展示案例的基础上）：<br>        - 添加箭头图标资源，表示升序和降序标识<br>        - 将图标加入SmallImageList，其中Images.Add (key, image ) 表示添加一个图像image，并关联一个key值。后面可以根据key值获取此图片。<br>        - 添加数据项Tag：每个ListView可以关联一个Tag，一般为一个对象。用于排序的时候便于直接使用对象做比较<br>        - 定义比较器MyListItemSorter，实现绑定Tag对象的自定义排序<br>        - 添加列的点击事件：ColumnClick 切换升序&#x2F;降序</p></blockquote><p><strong>（1）自定义Tag对象，封装信息</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 每个列表项关联的Tag数据</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title">MyListItemTag</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> type = <span class="number">0</span>; <span class="comment">//类型：文件夹0, 文件1 </span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> path;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> DateTime time;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">long</span> size = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ext; <span class="comment">// 显示文件后缀/文件夹</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyListItemTag</span>(<span class="params"><span class="built_in">int</span> type, <span class="built_in">string</span> path, <span class="built_in">string</span> name, DateTime time, <span class="built_in">long</span> size, <span class="built_in">string</span> ext</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.type = type;</span><br><span class="line">            <span class="keyword">this</span>.path = path;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.time = time;</span><br><span class="line">            <span class="keyword">this</span>.size = size;</span><br><span class="line">            <span class="keyword">this</span>.ext = ext;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）自定义比较器，实现对象排序（传入两个Tag对象）</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//继承IComparer接口，实现对象比较方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyListItemSorter</span> : <span class="title">IComparer</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> asc = <span class="literal">true</span>;<span class="comment">//是否升序排序</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyListItemSorter</span>(<span class="params"><span class="built_in">bool</span> asc</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.asc = asc;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">Compare</span>(<span class="params"><span class="built_in">object</span> x, <span class="built_in">object</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按列排序时，传入的是两个ListViewItem对象</span></span><br><span class="line">            ListViewItem item1 = (ListViewItem)x;</span><br><span class="line">            ListViewItem item2 = (ListViewItem)y;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// Tag: 每一项关联的数据</span></span><br><span class="line">            MyListItemTag tag1 = (MyListItemTag)item1.Tag;</span><br><span class="line">            MyListItemTag tag2 = (MyListItemTag)item2.Tag;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 目录在前, 文件在后</span></span><br><span class="line">            <span class="keyword">if</span> (tag1.type != tag2.type)</span><br><span class="line">                <span class="keyword">return</span> CompareInt(<span class="literal">true</span>, tag1.type, tag2.type);</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 按名字比较</span></span><br><span class="line">            <span class="keyword">return</span> CompareStringIgnoreCase(asc, tag1.name, tag2.name);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个 Bool 值的比较</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareBool</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">bool</span> x, <span class="built_in">bool</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> xx = x ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">int</span> yy = y ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> CompareInt(asc, xx, yy);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个 Int 值的比较</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareInt</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">int</span> x, <span class="built_in">int</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (asc)</span><br><span class="line">                <span class="keyword">return</span> x - y;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> y - x;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个String值的比较</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareString</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">string</span> x, <span class="built_in">string</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (asc)</span><br><span class="line">                <span class="keyword">return</span> x.CompareTo(y);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> y.CompareTo(x);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">// 两个String值的比较 （不区分大小写)</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">CompareStringIgnoreCase</span>(<span class="params"><span class="built_in">bool</span> asc, <span class="built_in">string</span> x, <span class="built_in">string</span> y</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> CompareString(asc, x.ToLower(), y.ToLower());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**（3）主窗体Form.cs逻辑代码 **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form4</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 当前默认排序：升序</span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> asc = <span class="literal">true</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line">            InitListView();</span><br><span class="line">            LoadDir(<span class="keyword">new</span> DirectoryInfo(<span class="string">&quot;D:\\&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.初始化ListView控件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//设置列名</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;名称&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;修改时间&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;类型&quot;</span>, <span class="number">100</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;大小&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">            <span class="comment">//创建smallImageList，添加小图标资源</span></span><br><span class="line">            ImageList imgList = <span class="keyword">new</span> ImageList();</span><br><span class="line">            imgList.ImageSize = <span class="keyword">new</span> Size(<span class="number">16</span>, <span class="number">16</span>);<span class="comment">//设置列表中图片的大小</span></span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_file);</span><br><span class="line">            imgList.Images.Add(Properties.Resources.Icon_folder);</span><br><span class="line">            listView1.SmallImageList = imgList;</span><br><span class="line">            <span class="comment">// 点击列标题时，指示排序的图标</span></span><br><span class="line">            <span class="comment">// 把图标资源加到 SmallImageList 里，供列标题头部显示</span></span><br><span class="line">            imgList.Images.Add(<span class="string">&quot;Sort_ASC&quot;</span>, Properties.Resources.up);</span><br><span class="line">            imgList.Images.Add(<span class="string">&quot;Sort_DESC&quot;</span>, Properties.Resources.down);</span><br><span class="line">            <span class="comment">//ListView首列图标显示为 key=&quot;&quot;Sort_ASC&quot;</span></span><br><span class="line">            listView1.Columns[<span class="number">0</span>].ImageKey = <span class="string">&quot;Sort_ASC&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.遍历本地资源，获取文件或目录</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadDir</span>(<span class="params">DirectoryInfo dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.BeginUpdate();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 获取[子目录]列表</span></span><br><span class="line">            DirectoryInfo[] subDirs = dir.GetDirectories();</span><br><span class="line">            <span class="keyword">foreach</span> (DirectoryInfo d <span class="keyword">in</span> subDirs)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((d.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="comment">//**将数据打包为Tag对象进行添加</span></span><br><span class="line">                MyListItemTag tag = <span class="keyword">new</span> MyListItemTag(<span class="number">0</span>,d.FullName,d.Name,d.LastWriteTime,<span class="number">-1</span>,<span class="string">&quot;文件夹&quot;</span>);</span><br><span class="line">                AddListItem(tag);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 获取[子文件]列表</span></span><br><span class="line">            FileInfo[] subFiles = dir.GetFiles();</span><br><span class="line">            <span class="keyword">foreach</span> (FileInfo f <span class="keyword">in</span> subFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((f.Attributes &amp; FileAttributes.Hidden) &gt; <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="comment">//**将数据打包为Tag对象进行添加</span></span><br><span class="line">                MyListItemTag tag = <span class="keyword">new</span> MyListItemTag(<span class="number">1</span>, f.FullName, f.Name, f.LastWriteTime, f.Length, f.Extension.ToUpper());</span><br><span class="line">                AddListItem(tag);</span><br><span class="line">            &#125;</span><br><span class="line">     </span><br><span class="line">            listView1.EndUpdate();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3，将文件和目录按照不同类型添加到ListView数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params">MyListItemTag tag</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 判断是文件还是文件夹，使用不同的图标</span></span><br><span class="line">            <span class="built_in">int</span> imageIndex = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (!tag.type.Equals(<span class="string">&quot;文件夹&quot;</span>)) imageIndex = <span class="number">1</span>;</span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(tag.name, imageIndex);</span><br><span class="line">            <span class="comment">// **Item关联Tag数据对象（方便我们从Item中获取数据、进行排序等）</span></span><br><span class="line">            item.Tag = tag;</span><br><span class="line">            <span class="comment">// 事件子项</span></span><br><span class="line">            item.SubItems.Add(tag.time.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>));</span><br><span class="line">            <span class="comment">// 后缀名称子项</span></span><br><span class="line">            item.SubItems.Add(tag.ext);</span><br><span class="line">            <span class="comment">// 大小子项</span></span><br><span class="line">            <span class="built_in">long</span> size = tag.size;</span><br><span class="line">            <span class="built_in">string</span> sizeStr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (size &lt; <span class="number">0</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span>; <span class="comment">// 文件夹不显示大小</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000</span>)</span><br><span class="line">                sizeStr = <span class="string">&quot;&quot;</span> + size;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000</span> + <span class="string">&quot; KB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (size &lt; <span class="number">1000000000</span>)</span><br><span class="line">                sizeStr = size / <span class="number">1000000</span> + <span class="string">&quot; MB&quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                sizeStr = size / <span class="number">1000000000</span> + <span class="string">&quot; GB&quot;</span>;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(sizeStr);</span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.ListView的列点击事件：切换升序/降序（只针对第0列）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_ColumnClick</span>(<span class="params"><span class="built_in">object</span> sender, ColumnClickEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e.Column == <span class="number">0</span>)<span class="comment">//如果点击的是第0列，才触发事件</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//切换当前排序</span></span><br><span class="line">                <span class="keyword">this</span>.asc = !asc;</span><br><span class="line">                <span class="keyword">if</span> (asc)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//设置排序器</span></span><br><span class="line">                    listView1.ListViewItemSorter = <span class="keyword">new</span> MyListItemSorter(<span class="literal">true</span>);</span><br><span class="line">                    listView1.Sort();<span class="comment">//排序</span></span><br><span class="line">                    listView1.Columns[<span class="number">0</span>].ImageKey = <span class="string">&quot;Sort_ASC&quot;</span>;<span class="comment">//切换图标</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    listView1.ListViewItemSorter = <span class="keyword">new</span> MyListItemSorter(<span class="literal">false</span>);</span><br><span class="line">                    listView1.Sort();</span><br><span class="line">                    listView1.Columns[<span class="number">0</span>].ImageKey = <span class="string">&quot;Sort_DESC&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/cadf3f5be4554314919bfe792aa9651b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="4-ListView标签编辑"><a href="#4-ListView标签编辑" class="headerlink" title="4.ListView标签编辑"></a>4.ListView标签编辑</h2><blockquote><p><strong>5.ListView：编辑标签</strong><br>（1）设计ListView显示，并添加数据项<br>（2）在设计界面或代码中设置LabelEdit&#x3D;True，表示允许对数据项标签进行编辑<br>（3）标签编辑的启动方式：<br>        - 在窗口中双击标签，启动编辑<br>        - 使用代码方式，在事件中使用 ListViewItem.BeginEdit() 来启动编辑（比如右键菜单-重命名 事件）：<br>                a.添加右键菜单，新建菜单项-重命名<br>                b.ListView添加MouseUp鼠标点击事件，显示右键菜单，获取右键点中的项<br>                c.右键菜单项添加鼠标点击事件，点击右键菜单-重命名，开启该项的标签编辑<br>                d.编辑验证：在编辑之后&#x2F;之前，进行标签内容的验证（比如不能重复名称，不能包含某些字符等），在ListView中添加事件BeforeLabelEdit&#x2F;AfterLabelEdit，开启对每个数据项的编辑验证（自动在编辑前后触发）<br>（4）<strong>注意：</strong><br>        - 只能对主项进行编辑<br>        - 标签编辑默认不会修改源数据（比如文件显示不会修改真实文件名称），要想同步修改可以设置事件</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form5</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 当前鼠标事件点中的项</span></span><br><span class="line">        <span class="keyword">private</span> ListViewItem mouseClickItem;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form5</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">     </span><br><span class="line">            InitListView();</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 初始化添加几项数据</span></span><br><span class="line">            AddListItem(<span class="keyword">new</span> Student(<span class="number">20201001</span>, <span class="string">&quot;shao&quot;</span>, <span class="string">&quot;13810012xxx&quot;</span>));</span><br><span class="line">            AddListItem(<span class="keyword">new</span> Student(<span class="number">20201002</span>, <span class="string">&quot;wang&quot;</span>, <span class="string">&quot;18799122xxx&quot;</span>));</span><br><span class="line">            AddListItem(<span class="keyword">new</span> Student(<span class="number">20201003</span>, <span class="string">&quot;li&quot;</span>, <span class="string">&quot;13490912xxx&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//1.设计ListView显示，并添加数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitListView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            listView1.View = View.Details;</span><br><span class="line">            listView1.FullRowSelect = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//**设置LabelEdit，允许对数据项标签进行编辑</span></span><br><span class="line">            listView1.LabelEdit = <span class="literal">true</span>;</span><br><span class="line">     </span><br><span class="line">            <span class="comment">// 设置列名</span></span><br><span class="line">            <span class="comment">// 宽度值-2表示自动调整宽度</span></span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;姓名&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;学号&quot;</span>, <span class="number">150</span>, HorizontalAlignment.Left);</span><br><span class="line">            listView1.Columns.Add(<span class="string">&quot;手机号&quot;</span>, <span class="number">-2</span>, HorizontalAlignment.Left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddListItem</span>(<span class="params">Student stu</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ListViewItem item = <span class="keyword">new</span> ListViewItem(stu.Name, <span class="number">0</span>);</span><br><span class="line">            item.Tag = stu;</span><br><span class="line">     </span><br><span class="line">            item.SubItems.Add(stu.Id + <span class="string">&quot;&quot;</span>);</span><br><span class="line">            item.SubItems.Add(stu.Phone);</span><br><span class="line">            listView1.Items.Add(item);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//2.右键显示右键菜单</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//获取 右键点击的ListViewItem数据项</span></span><br><span class="line">                ListViewItem item = listView1.GetItemAt(e.X, e.Y);</span><br><span class="line">                <span class="keyword">this</span>.mouseClickItem = item;</span><br><span class="line">                <span class="comment">//判断是否可以重命名该项</span></span><br><span class="line">                renameMenu_Item.Enabled = (item != <span class="literal">null</span>);</span><br><span class="line">                <span class="comment">//展示该位置/该项 的 右键菜单</span></span><br><span class="line">                contextMenuStrip1.Show(listView1, e.Location);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3.右键菜单-重命名 点击事件，开启该项的标签编辑</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">renameMenu_Item_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.mouseClickItem.BeginEdit();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.开启列表项的编辑 自动触发事件BeforeLabelEdit</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_BeforeLabelEdit</span>(<span class="params"><span class="built_in">object</span> sender, LabelEditEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//5.结束列表项的编辑 自动触发事件AfterLabelEdit（事件发送器 sender，事件处理对象 e）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">listView1_AfterLabelEdit</span>(<span class="params"><span class="built_in">object</span> sender, LabelEditEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取ListView当前编辑项的下标Index</span></span><br><span class="line">            <span class="built_in">int</span> index = e.Item;</span><br><span class="line">            <span class="comment">//获取新编辑的文本</span></span><br><span class="line">            <span class="built_in">string</span> label = e.Label;</span><br><span class="line">            <span class="comment">// 检查名称是否冲突</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; listView1.Items.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (index == i) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span> (label == listView1.Items[i].Text)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//CancelEdit=True 取消新编辑的内容，恢复原始内容</span></span><br><span class="line">                    e.CancelEdit = <span class="literal">true</span>;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;名字重复&quot;</span>, <span class="string">&quot;提示&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 否则就没有重复名称，接受新的更改</span></span><br><span class="line">            e.CancelEdit = <span class="literal">false</span>; </span><br><span class="line">            <span class="comment">// 同步更新后台数据（对象为引用数据）</span></span><br><span class="line">            Student stu = (Student)listView1.Items[index].Tag;</span><br><span class="line">            stu.Name = label;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/68ab866061144e87b40f61735f4be94d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="七-表格视图控件-DataGridView"><a href="#七-表格视图控件-DataGridView" class="headerlink" title="七.表格视图控件 DataGridView"></a>七.表格视图控件 DataGridView</h1><h2 id="1-表格视图基本用法"><a href="#1-表格视图基本用法" class="headerlink" title="1.表格视图基本用法"></a>1.表格视图基本用法</h2><blockquote><p><strong>1.表格视图 DataGridView 基础: 以单元格表格的形式展示数据和操作</strong><br>（1）在设计界面，拖入DataGridView控件，并设置Dock为填满Fill<br>（2）在设计界面或代码中，设置列名Columns<br>（3）在设计界面或代码中添加数据项，推荐代码添加（动态拓展）<br> <strong>注意：</strong>表格视图的每一单元格应都是可编辑的！</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form6</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form6</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化表格视图布局</span></span><br><span class="line">            InitGridView();</span><br><span class="line">            <span class="comment">//初始化添加数据</span></span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202101</span>, <span class="string">&quot;wx&quot;</span>, <span class="string">&quot;18264886xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202102</span>, <span class="string">&quot;my&quot;</span>, <span class="string">&quot;13012459xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202103</span>, <span class="string">&quot;tom&quot;</span>, <span class="string">&quot;19857138xxx&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.初始化列数、列名</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitGridView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//设置表格显示列数</span></span><br><span class="line">            <span class="keyword">this</span>.dataGridView1.ColumnCount = <span class="number">4</span>;</span><br><span class="line">            <span class="comment">//设置每列的列头名称</span></span><br><span class="line">            dataGridView1.Columns[<span class="number">0</span>].Name = <span class="string">&quot;学号&quot;</span>;</span><br><span class="line">            dataGridView1.Columns[<span class="number">1</span>].Name = <span class="string">&quot;姓名&quot;</span>;</span><br><span class="line">            dataGridView1.Columns[<span class="number">2</span>].Name = <span class="string">&quot;性别&quot;</span>;</span><br><span class="line">            dataGridView1.Columns[<span class="number">3</span>].Name = <span class="string">&quot;手机号&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.添加表格数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddRows</span>(<span class="params">Student stu</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//设置Object数组！代表一行数据</span></span><br><span class="line">            Object[] row =</span><br><span class="line">            &#123;</span><br><span class="line">                stu.Id,stu.Name,<span class="string">&quot;男&quot;</span>,stu.Phone</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="comment">//添加数据行</span></span><br><span class="line">            dataGridView1.Rows.Add(row);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/aea645f491744dc9b926f59164b0548d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="2-表格视图高级用法"><a href="#2-表格视图高级用法" class="headerlink" title="2.表格视图高级用法"></a>2.表格视图高级用法</h2><blockquote><p><strong>2.表格视图 DataGridView 基本操作：属性、增删改查</strong><br>（1）DataGridView 常用属性：<br>        - [杂项] Columns : 设置列相关的列数、列名等<br>        - [外观] ColumnHeadersVisible : 设置列头是否可见（默认为True）<br>        - [外观] RowHeadersVisible : 设置行的头是否可见（默认为True）<br>        - [行为] MultiSelect ： 是否允许多项选择（默认为True）<br>        - [行为] AllowUserToxxx:是否允许用户对单元格进行 增删改查等修改<br>        - [行为] 列还支持点击 升序&#x2F;降序 排序（自动已实现）<br>（2）DataGridView 常用操作：<br>        - 添加一行数据：grid.Rows.Add(Object[]) 或 界面手动添加（需要触发事件，持久化到数据库）<br>        - 获取行数据：<br>                a.索引方式：grid[col,row] 注意是列索引在前，行索引在后<br>                b.函数方式：grid.Rows[i].Cells[j]<br>        - 删除行数据：<br>                a.单行删除：grid.Rows.RemoveAt(int i):删除第i行数据<br>                b.多行删除（ctrl多选）：grid.Rows.Remove(DataGridViewRow row):删除指定的row对象<br><strong>3.表格视图 DataGridView 单元格编辑</strong><br>（1）实现方式：<br>        - 界面直接编辑：DataGridView默认每个单元格都是可以直接编辑的，编辑修改后按下回车即可将修改显示到界面中。<br>        - 添加事件触发编辑：也可以通过添加右键菜单或双击事件来进行编辑,或者弹出对话框编辑。<br>（2）相关属性：ReadOnly<br>        - 设计界面：Columns中，设置某列为ReadOnly&#x3D;True只读，不能被编辑修改；ReadOnly&#x3D;False可编辑<br>        - 代码中：grid.Columns[0].ReadOnly &#x3D; True;<br>（3）单元格编辑事件步骤：<br>        - 设置状态：设置ReadOnly &#x3D; False 可编辑状态（默认为False）<br>        - 启动编辑：界面中点击单元格选中，再点击一次，则启动进入编辑状态<br>        - 编辑后的验证事件：当编辑完成按下回车时，触发 [焦点] CellValidating 单元格验证时发生，CellValidating 执行完成后 触发CellValidated 单元格验证后发生</p></blockquote><p><strong>（1）案例界面设计</strong></p><blockquote><p>设计一个案例，实现对表格视图的基本操作（增删改查），以及编辑事件验证。</p></blockquote><img src="https://img-blog.csdnimg.cn/36157a14d1214736b4fd2d62f2dde7d2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>（2）Form.cs主窗体逻辑代码</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form7</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form7</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            InitGridView();</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202101</span>, <span class="string">&quot;wx&quot;</span>, <span class="string">&quot;18264886xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202102</span>, <span class="string">&quot;my&quot;</span>, <span class="string">&quot;13012459xxx&quot;</span>));</span><br><span class="line">            AddRows(<span class="keyword">new</span> Student(<span class="number">202103</span>, <span class="string">&quot;tom&quot;</span>, <span class="string">&quot;19857138xxx&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.初始化列数、列名</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitGridView</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.grid.ColumnCount = <span class="number">4</span>;</span><br><span class="line">            grid.Columns[<span class="number">0</span>].Name = <span class="string">&quot;学号&quot;</span>;</span><br><span class="line">            grid.Columns[<span class="number">1</span>].Name = <span class="string">&quot;姓名&quot;</span>;</span><br><span class="line">            grid.Columns[<span class="number">2</span>].Name = <span class="string">&quot;性别&quot;</span>;</span><br><span class="line">            grid.Columns[<span class="number">3</span>].Name = <span class="string">&quot;手机号&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.添加表格数据项</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddRows</span>(<span class="params">Student stu</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Object[] row =</span><br><span class="line">            &#123;</span><br><span class="line">                stu.Id,stu.Name,<span class="string">&quot;男&quot;</span>,stu.Phone</span><br><span class="line">            &#125;;</span><br><span class="line">            grid.Rows.Add(row);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//3.添加按钮点击事件：添加一行数据</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btn_add_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Object[] row = <span class="keyword">new</span> <span class="built_in">object</span>[<span class="number">4</span>];</span><br><span class="line">            row[<span class="number">0</span>] = <span class="number">202104</span>;</span><br><span class="line">            row[<span class="number">1</span>] = <span class="string">&quot;testUser&quot;</span>;</span><br><span class="line">            row[<span class="number">2</span>] = <span class="string">&quot;女&quot;</span>;</span><br><span class="line">            row[<span class="number">3</span>] = <span class="string">&quot;1928373838&quot;</span>;</span><br><span class="line">            grid.Rows.Add(row);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//4.获取数据按钮点击事件：获取行数据</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btn_get_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取第0行数据</span></span><br><span class="line">            Object id = grid[<span class="number">0</span>, <span class="number">0</span>].Value;</span><br><span class="line">            Object name = grid[<span class="number">1</span>, <span class="number">0</span>].Value;</span><br><span class="line">            Object sex = grid.Rows[<span class="number">0</span>].Cells[<span class="number">2</span>].Value;</span><br><span class="line">            Object phone = grid.Rows[<span class="number">0</span>].Cells[<span class="number">3</span>].Value;</span><br><span class="line">            <span class="comment">//显示在MessageBox</span></span><br><span class="line">            MessageBox.Show(id + <span class="string">&quot;,&quot;</span> + name + <span class="string">&quot;,&quot;</span> + sex + <span class="string">&quot;,&quot;</span> + phone);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//5.删除按钮点击事件：删除选中行</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btn_del_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//单行删除 删除第0行</span></span><br><span class="line">            <span class="comment">//grid.Rows.RemoveAt(0);</span></span><br><span class="line">     </span><br><span class="line">            <span class="comment">//多行删除 删除[选中]的所有行</span></span><br><span class="line">            <span class="keyword">foreach</span>(DataGridViewRow row <span class="keyword">in</span> grid.SelectedRows)</span><br><span class="line">            &#123;</span><br><span class="line">                grid.Rows.Remove(row);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//6.编辑验证：单元格验证事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grid_CellValidating</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellValidatingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//e.ColumnIndex 表示 编辑单元格的列索引</span></span><br><span class="line">            <span class="keyword">if</span> (e.ColumnIndex == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//验证姓名的编辑</span></span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (e.ColumnIndex == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//验证性别的编辑</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(e.ColumnIndex == <span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//验证手机号的编辑（手机号必须是11位合法数字）</span></span><br><span class="line">                <span class="built_in">string</span> str = e.FormattedValue.ToString();</span><br><span class="line">                <span class="keyword">if</span>(str.Length != <span class="number">11</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;手机号必须为11位&quot;</span>, <span class="string">&quot;Error&quot;</span>);</span><br><span class="line">                    e.Cancel = <span class="literal">true</span>;<span class="comment">//取消编辑事件</span></span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">foreach</span>(<span class="built_in">char</span> ch <span class="keyword">in</span> str)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        MessageBox.Show(<span class="string">&quot;手机号必须为数字&quot;</span>, <span class="string">&quot;Error&quot;</span>);</span><br><span class="line">                        e.Cancel = <span class="literal">true</span>;<span class="comment">//取消编辑事件</span></span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//7.单元格验证完成后执行的事件</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grid_CellValidated</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/bd9767091c07482fa95af82ecf486132.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="八-综合练习：学生信息管理系统"><a href="#八-综合练习：学生信息管理系统" class="headerlink" title="八.综合练习：学生信息管理系统"></a>八.综合练习：学生信息管理系统</h1><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_40772692/article/details/121901587?spm=1001.2014.3001.5502">WinForm（二） WinForm进阶与复杂控件使用</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
            <tag> 控件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#开发WinForm之一(入门与基本控件使用)</title>
      <link href="/posts/1279388026.html"/>
      <url>/posts/1279388026.html</url>
      
        <content type="html"><![CDATA[<h1 id="一-Winform入门"><a href="#一-Winform入门" class="headerlink" title="一.Winform入门"></a>一.Winform入门</h1><p><strong>WinForm 是 Windows Form 的简称，是基于 .NET Framework 平台的客户端（PC软件）开发技术，一般使用 C# 编程。</strong></p><blockquote><p>在VS2019中，C# WinForm 编程需要创建「Windows窗体应用程序」项目。Windows 窗体应用程序是 C# 语言中的一个重要应用，也是 C# 语言最常见的应用。<br>使用 C# 语言编写的 Windows 应用程序与 Windows 操作系统的界面类似，每个界面都是由窗体构成的，并且能通过鼠标单击、键盘输入等操作完成相应的功能。<br>WinForm支持可视化设计，简单易上手，并可以接入大量的第三方UI库或自定义控件，给桌面应用开发带来了无限可能。</p></blockquote><h2 id="1-WinForm项目结构"><a href="#1-WinForm项目结构" class="headerlink" title="1.WinForm项目结构"></a>1.WinForm项目结构</h2><p>（1）引用：包括所有的系统库文件的引用依赖<br>（2）App.config：当前项目的配置文件<br>（3）Form1.cs：当前窗体的事件逻辑源码</p><ul><li>Form1.Designer.cs：当前窗体的控件布局源码</li><li>Form1.resx：当前窗体的资源文件（图片、图标、资源等）</li><li>注意：<br>a. Form1.cs和Form1.Designer.cs都定义了Form1类，该类使用了Partial关键词声明，其定义的类可以在多个地方被定义，最后编译的时候会被当作一个类来处理。因此两个文件各司其职，最后合并为一个类编译。<br>b. 要手动实现自定义窗体，可以添加自己的类，然后继承Form类即可</li></ul><p>（4）Program.cs：当前项目程序的主入口Main，启动项目，运行初始窗口</p><img src="https://img-blog.csdnimg.cn/1f6172cf966545a39ed0c66a87505dcb.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Program.cs 入口程序解读</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment">//1.[STAThread]  Attributes语法，修饰Main方法。示应用程序的默认线程模型是单线程单元 (STA)</span></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//2.开启窗口的消息循环，初始化并启动Form1窗口</span></span><br><span class="line">            Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-窗口设计与控件布局"><a href="#2-窗口设计与控件布局" class="headerlink" title="2.窗口设计与控件布局"></a>2.窗口设计与控件布局</h2><p><strong>一、窗体控件布局文件：</strong><br>（1）操作：在设计界面拖拽控件，可以完成界面布局（控件大小、名称、类型、样式等）<br>（2）原理：设计界面自动关联Form1.Designer.cs文件，在InitializeComponent()方法中会自动生成相关代码<br>（3）设计原则：</p><ul><li>Form1.Designer.cs文件：窗体控件布局文件，一般【不需要我们修改】，只要通过设计界面代码就会自动生成。</li><li>Form1.cs文件：窗体事件逻辑代码的实现，一般【需要我们手动书写】，包括触发事件、回调、数据交互、跳转等等</li></ul><p><strong>二、手动添加控件：不通过设计界面，有两种方式：</strong></p><blockquote><p>（1）在Form1.Designer.cs中添加：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> System.Windows.Forms.Button btn_design;<span class="comment">//声明控件</span></span><br><span class="line"> <span class="comment">//默认的控件初始化方法</span></span><br><span class="line"> InitializeComponent():&#123;</span><br><span class="line">     <span class="keyword">this</span>.btn_design = <span class="keyword">new</span> System.Windows.Forms.Button();<span class="comment">//定义控件</span></span><br><span class="line">     <span class="keyword">this</span>.btn_design.Text = <span class="string">&quot;自定义控件&quot;</span>;<span class="comment">//设置Text属性</span></span><br><span class="line">     <span class="keyword">this</span>.btn_design.Location = <span class="keyword">new</span> Point(<span class="number">40</span>,<span class="number">40</span>);<span class="comment">//设置布局位置 Point(x,y)</span></span><br><span class="line">     <span class="keyword">this</span>.btn_design.Size = <span class="keyword">new</span> Size(<span class="number">100</span>,<span class="number">40</span>);<span class="comment">//设置尺寸大小 Size(width,height)</span></span><br><span class="line">     <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.btn_design);<span class="comment">//注册控件到窗体</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>（2）在Form1.cs中添加：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Button btn_design;<span class="comment">//声明控件</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//先调用Designer.cs中的控件初始化方法</span></span><br><span class="line">    InitializeComponent();</span><br><span class="line">    <span class="keyword">this</span>.btn_design = <span class="keyword">new</span> System.Windows.Forms.Button();<span class="comment">//定义控件</span></span><br><span class="line">    <span class="keyword">this</span>.btn_design.Text = <span class="string">&quot;自定义控件&quot;</span>;<span class="comment">//设置Text属性</span></span><br><span class="line">    <span class="keyword">this</span>.btn_design.Location = <span class="keyword">new</span> Point(<span class="number">40</span>,<span class="number">40</span>);<span class="comment">//设置布局位置 Point(x,y)</span></span><br><span class="line">    <span class="keyword">this</span>.btn_design.Size = <span class="keyword">new</span> Size(<span class="number">100</span>,<span class="number">40</span>);<span class="comment">//设置尺寸大小 Size(width,height)</span></span><br><span class="line">    <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.btn_design);<span class="comment">//注册控件到窗体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>（3）注意：</p></blockquote><ol><li>一般我们都使用拖拽添加控件，当然也有特殊情况需要我们手动添加（比如自定义控件）</li><li>窗体GUI中，左上角为原点(0,0)，竖直向下为y轴，水平向右为x轴（宽度表示x轴上长度，高度表示y轴上长度），单位为像素。</li></ol><h2 id="窗口事件"><a href="#窗口事件" class="headerlink" title="窗口事件"></a>窗口事件</h2><p><strong>一、WinForm 自动添加事件处理：</strong><br>（1）操作：在设计界面-控件属性-闪电符号（事件）-添加事件，就会在Form1.cs中自动生成该控件相应方法名称的事件触发函数<br>（2） MessageBox.Show()：显示弹出消息提示框<br>（3）GUI界面下Console.WriteLine不显示，需要使用调试模式</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 4.WinForm事件处理</span></span><br><span class="line"><span class="comment">     *  （1）操作：在设计界面-控件属性-闪电符号（事件）-添加事件，就会自动生成相应方法名称的事件触发函数</span></span><br><span class="line"><span class="comment">     *  （2） MessageBox：显示消息提示框</span></span><br><span class="line"><span class="comment">     *  （3）GUI界面下Console.WriteLine不显示，需要使用调试模式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//Button的Click点击事件（自动添加）</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showMessage</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/6e19fe7d8fff44ca9197dc8f349330c4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_18,color_FFFFFF,t_70,g_se,x_16"><p><strong>二、手动添加事件处理（以Btn_design为例）：</strong></p><blockquote><p>（1）步骤：</p></blockquote><ul><li>添加按钮控件到布局</li><li>书写事件处理函数，必须符合 void function_name(object param1,EventArgs e){}的形式</li><li>添加注册事件，this.Btn_design.Click +&#x3D; new EventHandler(this.showTip);</li></ul><blockquote><p>（2）注意：事件处理机制用到了委托和事件的C#基础，有时间可以看一下</p></blockquote><p>下一步的学习请前往 WindowsFormApp_demo1（实现一个显示本地时间的APP）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 5.手动添加事件处理（以Btn_design为例）</span></span><br><span class="line"><span class="comment">     *  （1）步骤：</span></span><br><span class="line"><span class="comment">     *      - 添加按钮控件到布局</span></span><br><span class="line"><span class="comment">     *      - 书写事件处理函数，必须符合 void function_name(object param1,EventArgs e)&#123;&#125;的形式</span></span><br><span class="line"><span class="comment">     *      - 添加注册事件，this.Btn_design.Click += new EventHandler(this.showTip);</span></span><br><span class="line"><span class="comment">     *  （2）注意：事件处理机制用到了委托和事件的C#基础，有时间可以看一下</span></span><br><span class="line"><span class="comment">     *  下一步的学习请前往 WindowsFormApp_demo1（实现一个显示时间的APP）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//2.1 注册Click事件为手动添加的函数</span></span><br><span class="line">            <span class="keyword">this</span>.Btn_design.Click += <span class="keyword">new</span> EventHandler(<span class="keyword">this</span>.showTip);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.Button的Click点击事件（手动添加）</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showTip</span>(<span class="params">Object sender,EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;手动添加!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/90094321f20041e98fa1f44c666dcb7e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="时间显示器小练习"><a href="#时间显示器小练习" class="headerlink" title="时间显示器小练习"></a>时间显示器小练习</h2><p><strong>设计一个能获取本地时间并显示在文本框的时间查看器，设计思路就是：</strong></p><ul><li>1.在UI设计界面添加一个按钮Button和一个用来显示时间的文本框TextBox</li><li>2.给按钮Button添加点击事件，在事件中获取系统时间，并赋值给TextBox显示</li></ul><blockquote><p>（1）界面设计 </p></blockquote><img src="https://img-blog.csdnimg.cn/cbe1b914c604458a8e3e3ba5527682c9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p>（2）逻辑代码</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_Demo1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//点击事件：获取当前时间赋值给TextBox</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowTime</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> time = DateTime.Now.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.Time_filed.Text = time;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二-WinForm布局开发"><a href="#二-WinForm布局开发" class="headerlink" title="二.WinForm布局开发"></a>二.WinForm布局开发</h1><p><strong>常见的WinForm 自动界面布局（设计界面拖拽布局）：</strong></p><blockquote><p><strong>（1）操作：</strong>拖拽控件，放置在UI设计界面上布局<br><strong>（2）技巧：</strong>通过ctrl+多个控件选定，可以在上方工具栏进行细节的对齐微调，比如居中对齐、左对齐等。<br><strong>（3）本质：</strong>每次拖拽添加一个布局控件，就会在窗口相应的Designer.cs设计布局代码文件中的InitializeComponent()方法中自动生成布局代码（比如Location、Size等），来实现布局。<br><strong>（4）存在的问题：</strong>自动布局虽然方便灵活，但是当窗口大小拉伸改变时，布局控件不能实现自动适应，仍会保持原大小，因此自动布局只适用于窗口大小不变的情况</p></blockquote><img src="https://img-blog.csdnimg.cn/3de1a7b7a7d6495da28b3f60518cd52a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="1-手动布局解决自适应问题"><a href="#1-手动布局解决自适应问题" class="headerlink" title="1. 手动布局解决自适应问题"></a>1. 手动布局解决自适应问题</h2><p><strong>WinForm界面手动布局（并解决自适应问题）:</strong></p><blockquote><p>（1）步骤：</p></blockquote><ul><li>通过设计界面拖拽&#x2F;手动注册组件的方式，初始化初始界面布局（此时属于自动布局）</li><li>在Form.cs逻辑代码中重写Form父类的OnLayout方法，在方法内实现手动布局。OnLayout方法会在窗口大小变化时自动被回调调用，来重新设置组件的位置大小等属性实现自适应。<br>a. 调用父类的OnLayout()，不是必须的。<br>b. 获取当前窗口大小 CilentSize(仅客户区，不含标题栏)<br>c. 计算和设置每一个控件新的的大小和位置，实现动态布局</li></ul><blockquote><p>（2）注意：</p></blockquote><ul><li>Size属性指窗口大小（包括工具栏），ClientSize指客户区大小（不包含工具栏）</li><li>本质：OnLayout方法会在窗口大小变化时自动被调用，来设置组件的位置实现自适应<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//重写父类的OnLayout方法，实现手动布局自适应</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnLayout</span>(<span class="params">LayoutEventArgs levent</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//1.调用父类的OnLayout()，不是必须的</span></span><br><span class="line">            <span class="keyword">base</span>.OnLayout(levent);</span><br><span class="line">            <span class="comment">//2.获取当前客户窗口大小 ClientSize</span></span><br><span class="line">            <span class="built_in">int</span> w = <span class="keyword">this</span>.ClientSize.Width;</span><br><span class="line">            <span class="built_in">int</span> h = <span class="keyword">this</span>.ClientSize.Height;</span><br><span class="line">            <span class="comment">//3.计算并设置每一个控件的大小和位置</span></span><br><span class="line">            <span class="built_in">int</span> yoff = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">            yoff = <span class="number">4</span>;</span><br><span class="line">            <span class="keyword">this</span>.text_box.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, yoff);<span class="comment">//坐标(0,4)</span></span><br><span class="line">            <span class="keyword">this</span>.text_box.Size = <span class="keyword">new</span> Size(w - <span class="number">80</span>, <span class="number">30</span>);<span class="comment">//尺寸(w-80,30)</span></span><br><span class="line">            <span class="keyword">this</span>.btn_click.Location = <span class="keyword">new</span> Point(w - <span class="number">80</span>, yoff);<span class="comment">//坐标(w-80,4)</span></span><br><span class="line">            <span class="keyword">this</span>.btn_click.Size = <span class="keyword">new</span> Size(<span class="number">80</span>, <span class="number">30</span>);<span class="comment">//尺寸(80,30)</span></span><br><span class="line"> </span><br><span class="line">            yoff += <span class="number">30</span>;<span class="comment">//第一行的高度</span></span><br><span class="line">            yoff += <span class="number">4</span>;<span class="comment">//间隔</span></span><br><span class="line">            <span class="keyword">this</span>.panel1.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, yoff);</span><br><span class="line">            <span class="keyword">this</span>.panel1.Size = <span class="keyword">new</span> Size(w, h - yoff - <span class="number">4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><img src="https://img-blog.csdnimg.cn/e27715d3bbbd40cfa4103fb9a05a8c98.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><h2 id="2-WinForm布局属性"><a href="#2-WinForm布局属性" class="headerlink" title="2.WinForm布局属性"></a>2.WinForm布局属性</h2><p><strong>WinForm布局属性（控件与布局相关的属性，设计界面可见）:</strong></p><blockquote><p>（1）Anchor：固定、锚定（无论窗口怎么变化，控件的相对位置都不变）</p></blockquote><ul><li>含义：固定控件与父窗口的【上下左右边距】不变，实现控件的锚定</li><li>左上角固定：选定 Top,Left（默认）</li><li>顶部固定，水平拉伸：选定 Top,Left,Right</li><li>居中固定：None（取消所有）</li><li><strong>注意：</strong>Anchor效果的好坏取决于控件的初始位置，因为控件的初始位置决定了控件的边距！所以要让控件固定右上角，就要初始设计时就放在右上角！</li></ul><blockquote><p>（2）Dock：停靠属性，将控件停靠在父窗口的一侧或者中央</p></blockquote><ul><li>Top：上，控件停靠在容器上侧，宽度填满容器，高度可以调节</li><li>Bottom：下，控件停靠在容器下侧，宽度填满容器，高度可以调节</li><li>Left：左，控件停靠在容器左侧，高度填满容器，宽度可以调节</li><li>Right：右，控件停靠在容器右侧，高度填满容器，宽度可以调节</li><li>Fill，中，控件填满容器中间剩余部分（所以说与控件添加顺序有关）</li><li>None，无，不使用Dock属性</li><li><strong>注意：</strong><br>  a. 容器之间可以嵌套，使用布局属性（容器就是存放组件的，比如Panel）<br>  b. Dock属性与Anchor属性不能同时使用<br>  c. Dock属性不是固定边距了，就是相对位置填充</li></ul><img src="https://img-blog.csdnimg.cn/ef3d7140e1af44c8b816179fa734e3f1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/7bc6d1da4a8c488798b0cc97379ec311.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_17,color_FFFFFF,t_70,g_se,x_16"><h2 id="3-WinForm布局器"><a href="#3-WinForm布局器" class="headerlink" title="3.WinForm布局器"></a>3.WinForm布局器</h2><p><strong>布局器 LayoutEngine:</strong></p><blockquote><p>（1）含义：布局器就是容器内部组件的默认排列方式，所有的容器都带有一个默认的布局器</p></blockquote><blockquote><p>（2）自定义控件如何加入设计界面：</p></blockquote><ul><li>工具 -&gt; 选项 -&gt; Windows窗体设计器 -&gt; 常规 -&gt; 自动填充工具箱 -&gt; True</li><li>添加自定义的控件类源码到项目下</li><li>生成&#x2F;重新生成结局方案 F7</li><li>重新打开设计界面，在工具箱就可以看到自己的控件</li></ul><blockquote><p>（3）系统提供的布局器-FlowLayoutPanel（流式布局）：</p></blockquote><ul><li>含义：普通的Panel面板容器控件，使用了FlowLayout流式布局，即所有内部组件按照顺序从左到右从上到下依次排列</li><li>FlowLayoutPanel也可以使用Anchor、Dock等属性，因为他也是窗体容器内的一个组件</li><li>控件的选择技巧：多个控件叠加到一起时，可以右键最上层控件，来进行重叠控件的选择<blockquote><p>（4）系统提供的布局器-TableLayoutPanel（表格布局）：</p></blockquote></li><li>含义：普通的Panel面板容器，使用了TableLayout表格布局，即所有内部组件可以放置到不同的表格中（每个表格只能放置一个控件）</li><li>TableLayoutPanel也可以使用Anchor、Dock等属性，因为他也是窗体容器内的一个组件。搭配布局与布局属性，可以实现很多不同的布局效果。</li><li>删除&#x2F;添加行、列：右键表格Panel，可以添加、删除行&#x2F;列</li><li>调整表格大小：表格属性Columns可以通过绝对值、百分比、自动调整等方式来调整单元格的大小<br>  a. 绝对：固定像素值大小<br>  b. 百分比：除去绝对大小后，单元格占剩余大小的百分比<br>  c. 自动调整：根据内部控件的大小生成</li><li>跨行&#x2F;列控件：在控件的ColumnSpan&#x2F;RowSpan调整控件可以跨行&#x2F;跨列布局</li><li>**注意： **TableLayoutPanel 控件每个单元格只能包含一个子控件。<blockquote><p>（5）系统提供的布局工具-默认布局：默认布局可以通过控件拖拽放置，并可以使用Anchor、Dock来调整<br>（6）自定义布局器：用户可以自己设计实现布局器，这属于WinForm高级的内容，后面学习。</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/f795c6a396de4214a0cb84f3349468b9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_19,color_FFFFFF,t_70,g_se,x_16"><h1 id="三-WinForm常用控件"><a href="#三-WinForm常用控件" class="headerlink" title="三.WinForm常用控件"></a>三.WinForm常用控件</h1><p><strong>Winform 组件的使用:</strong></p><blockquote><p>（1）TextBox：输入文本框</p></blockquote><ul><li>常用属性：尺寸Size、单行&#x2F;多行Multiline、密码输入PasswordChar、只读ReadOnly、显示&#x2F;获取文本Text等</li><li>常用事件：KeyPress按下按键（常用于输出完成点击回车，box.Text取输入值，事件e.keyChar取按下哪个键）</li></ul><blockquote><p>（2）CheckBox：复选框</p></blockquote><ul><li>常用属性：尺寸Size、显示文本Text、Checked是否勾选</li><li>常用事件：Click点击事件、CheckedChanged勾选状态改变事件</li></ul><blockquote><p>（3）ComboBox：下拉列表（只能单选）</p></blockquote><ul><li>常用属性：<br>  a. 添加数据项：设计器编辑添加（属性-&gt;数据-&gt;Items，一行表示一个数据项）、程序手工添加（comboBox.Items.Add(“some”);）<br>  b. 其他设置：Size尺寸、Text提示文本等</li><li>常用事件：<br>  a. 获取选中的项：SelectedItem（选中项的值）、SelectedIndex（选中项的索引，-1表示未选中）<br>  b. 选项改变事件：SelectedIndexChanged</li><li>注意：Item可以添加字符串，也可以添加任意object类型（比如自定义对象），对象会以object.toString显示<blockquote><p>（4）ListBox：列表框（展示数据、可单选&#x2F;多选）</p></blockquote></li><li>常用属性：SelectionMode（单选&#x2F;多选模式）<br>  a. 单选模式获取选项：SelectedItem&#x2F;SelectedIndex（选中项的值&#x2F;索引）<br>  b. 多选模式获取选项：SelectedIndices&#x2F;SelectedItems（选中项的索引集合&#x2F;值集合）<br>  c. 添加数据项：设计器编辑添加（属性-&gt;数据-&gt;Items）、程序手工添加（listBox.Items.Add(“some”);）</li><li>常用事件：SelectedIndexChanged（选项改变）</li><li>注意：Item可以添加字符串，也可以添加任意object类型（比如自定义对象），对象会以object.toString显示<blockquote><p>（5）练习：学生信息编辑器实例（本代码）</p></blockquote></li></ul><p><strong>界面展示:</strong></p><img src="https://img-blog.csdnimg.cn/da51f2f5322743398a11ba74a80438b0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_18,color_FFFFFF,t_70,g_se,x_16"><p><strong>实体类 Student（封装信息）</strong></p><p><strong>C# 类的属性与字段:</strong></p><blockquote><p>（1）字段：字段是类的成员变量，用于类内特征的数据存储（静态） 比如private int Id;</p></blockquote><blockquote><p>（2）属性：属性是对字段特征的动态描述，用于向外界提供数据，本质上就是get、set方法。</p></blockquote><ul><li>完整属性用法：<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="built_in">string</span> sdu_name;<span class="comment">//声明字段</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> StudentName&#123;<span class="comment">//声明属性</span></span><br><span class="line">      <span class="keyword">get</span>&#123; <span class="keyword">return</span> sdu_name; &#125;</span><br><span class="line">      <span class="keyword">set</span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(<span class="keyword">value</span>==<span class="literal">null</span>)sdu_name = <span class="string">&quot;admin&quot;</span>;</span><br><span class="line">         sdu_name = <span class="keyword">value</span>;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>get访问器：get访问器必须包含return语句，返回字段‘realValue’。用于获取数据，如果没有get则字段为只写的</li><li>set访问器：set访问器接受它的输入参数–value，并把它赋给字段，value是隐式参数。用于设置数据，如果没有set则字段为只读的<blockquote><p>（3）使用方式：直接使用Class.StudentName来获取和设置数据，就像是直接使用公开的属性一样</p></blockquote></li></ul><blockquote><p>（4）自动属性：简化字段和属性的关系</p></blockquote><ul><li>用法：public 数据类型 属性名{ get; set; }</li><li>*原理：c# 允许只声明属性而不声明后备字段，编译器会创建隐藏的后备字段。并且自动挂接到get,set访问器上。<blockquote><p>（5）<strong>注意：</strong></p></blockquote></li><li>属性也可以不与字段关联，可以当作函数进行复杂计算，比较自由灵活</li><li>属性也可不用显示声明相应的字段，直接用于存贮数据。（自动属性）</li><li>也可以通定义其他set、get函数来实现访问private字段的功能<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//属性访问器</span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> SduId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> SduName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> SduSex &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> SduPhone</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span>; <span class="keyword">set</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"><span class="built_in">int</span> sduId, <span class="built_in">string</span> sduName, <span class="built_in">bool</span> sduSex, <span class="built_in">string</span> sduPhone</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            SduId = sduId;</span><br><span class="line">            SduName = sduName;</span><br><span class="line">            SduSex = sduSex;</span><br><span class="line">            SduPhone = sduPhone;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><strong>逻辑事件代码Form.cs:</strong><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form4</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form4</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化数据</span></span><br><span class="line">            LoadData();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 保存按钮触发事件-保存学生信息到本地文件</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">save_student</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Student student = <span class="keyword">new</span> Student();</span><br><span class="line">            student.SduId =Convert.ToInt32(sdu_Id.Text.Trim()); <span class="comment">//Convert格式转换</span></span><br><span class="line">            student.SduName = sdu_Name.Text.Trim();</span><br><span class="line">            student.SduSex = (sdu_sex.SelectedIndex == <span class="number">1</span>);</span><br><span class="line">            student.SduPhone = sdu_phone.Text.Trim();</span><br><span class="line">            <span class="comment">//以Json格式保存到本地文件</span></span><br><span class="line">            <span class="built_in">string</span> JsonStr = JsonConvert.SerializeObject(student, Formatting.Indented);</span><br><span class="line">            AfTextFile.Write(<span class="string">&quot;student.txt&quot;</span>, JsonStr,AfTextFile.UTF8);</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;操作成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//读取文件，加载数据</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LoadData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">string</span> JsonStr = AfTextFile.Read(<span class="string">&quot;student.txt&quot;</span>, AfTextFile.UTF8);</span><br><span class="line">            <span class="keyword">if</span> (JsonStr == <span class="literal">null</span>) <span class="keyword">return</span>;</span><br><span class="line">            Student student = JsonConvert.DeserializeObject&lt;Student&gt;(JsonStr);</span><br><span class="line">            sdu_Id.Text = Convert.ToString(student.SduId);</span><br><span class="line">            sdu_Name.Text = student.SduName;</span><br><span class="line">            sdu_sex.SelectedIndex = student.SduSex?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">            sdu_phone.Text = student.SduPhone;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="图片框与项目资源"><a href="#图片框与项目资源" class="headerlink" title="图片框与项目资源"></a>图片框与项目资源</h1><p><strong>图片框与资源:</strong></p><blockquote><p>（1）添加资源来源：</p></blockquote><ul><li>本地文件 ： 本地资源路径，比如”D\Resources\123.jpg”（注意使用Windows路径格式）</li><li>项目资源文件：Properties&#x2F;Resources.resx（项目资源文件夹下）<br>  a. 如何添加项目资源文件：双击Properties&#x2F;Resources.resx-&gt;添加资源-&gt;添加现有文件-&gt;选择本地图片-&gt;重命名（规范化，以后使用时直接调用名字使用资源）<br>  b. 能添加什么类型的资源：字符串、文本文档、图片、视频、音频等<br>  c. 原理：Resources.resx将添加的资源整合到了项目exe当中，因此就算删除源文件也不影响项目运行。在调用资源时，是通过自动生成的方法来获取资源。<br>  d. 优点：将资源统一到项目中来，并且可以通过规范化的命名直接调用资源。<br>  e. 使用：通过 Properties.Resources.资源名称; 来直接调用你的资源，方便快捷</li><li>网络资源：比如”<a href="http://baidu/image/meinv.jpg&quot;">http://baidu/image/meinv.jpg&quot;</a></li></ul><blockquote><p>（2）图片资源加载类：</p></blockquote><ul><li>C# 提供了Image抽象类，作为所有图片资源的总称</li><li>C# 提供了Image抽象类的具体实现类 Bitmap（位图、像素图），来具体加载读取图像。<br>  a. 比如Bitmap img &#x3D; new Bitmap(“D\Resources\123.jpg”);<br>  b. 比如Bitmap img &#x3D; Properties.Resources.img_Conv;</li></ul><blockquote><p>（3）图片框控件：PictureBox</p></blockquote><ul><li>Size、Location属性：尺寸、位置</li><li>Image属性：图片资源（可以通过本地&#x2F;项目资源文件导入）</li><li>SizeMode属性：图片的适应模式（StretchImage拉伸图片和图片框相同尺寸、Zoom缩放等）</li><li>ErrorImage、InitialImage属性：加载失败、加载图片显示之前所显示的图片</li></ul><blockquote><p>（4）图片框控件可视化配置：在设计里拖动PictureBox并配置属性即可。</p></blockquote><blockquote><p>（5）图片框代码手动配置：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Bitmap img = Properties.Resources.img_Conv; <span class="comment">//读取图片资源</span></span><br><span class="line">pictureBox.Image = img;<span class="comment">//手动设置图片框控件 Image来源</span></span><br><span class="line">pictureBox.SizeMode = PictureBoxSizeMode.Zoom;<span class="comment">//手动设置图片格式</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">**添加资源**</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdnimg.cn/cac31a6a17684aa0b51d0a7dd0c04db1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">**图片框控件展示**</span><br><span class="line">&gt;界面设计就是简单的放置了一个PictureBox控件，没有过多的设计。图片来源的设置使用代码方式，原因是在以后开发中图片往往不是固定的，需要动态变化，因此使用代码方式动态设置图片来源是比较推荐的。</span><br><span class="line">```c<span class="meta">#</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp_learning</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form2</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//初始化所有组件</span></span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">//初始化PictureBox控件-图片资源</span></span><br><span class="line">            Bitmap img = Properties.Resources.img_Conv;</span><br><span class="line">            pictureBox.Image = img;</span><br><span class="line">            pictureBox.SizeMode = PictureBoxSizeMode.Zoom;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/1b5a51b0d89c4c018b7ebe3cc20afe6d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6Zi_6Zi_6Zi_5a6J,size_20,color_FFFFFF,t_70,g_se,x_16"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_40772692/article/details/121865401">WinForm（一） WinForm入门与基本控件使用</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
            <tag> 控件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#上位机系列之二（使用C#写第一个程序）</title>
      <link href="/posts/1801299827.html"/>
      <url>/posts/1801299827.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、新建程序项目工程"><a href="#一、新建程序项目工程" class="headerlink" title="一、新建程序项目工程"></a>一、新建程序项目工程</h1><ol><li><p>首先选择新建Windows窗体应用(.NET Framework)，然后选择项目保存位置，填写项目名称，这里因为我们不需要用git进行版本管理，所以不用新建GIT存储库；</p></li><li><p>框架是指.net框架，4以及4以下的.NET框架可以在xp上运行，4以上可以在win7&#x2F;8&#x2F;10上运行，鉴于当前大多数操作系统都是win7或win10，选择4.5版本。</p></li></ol><img src="https://s2.51cto.com/images/blog/202106/28/a90862a0d4873dbbab622a2411143913.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><h1 id="二、相应窗体介绍和内部代码分析"><a href="#二、相应窗体介绍和内部代码分析" class="headerlink" title="二、相应窗体介绍和内部代码分析"></a>二、相应窗体介绍和内部代码分析</h1><img src="https://s2.51cto.com/images/blog/202106/28/fe3167f4742f22e0cc7e4e9c9cd3b1be.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><ul><li>这里我们双击窗体界面，这也是VS的特性，双击一个控件，就会进入对应代码文件部分，这些代码全由VS在生成项目时自动生成，下面进行详细的解释：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*filename：Form1.cs*/</span></span><br><span class="line"><span class="comment">//使用命名空间</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户项目工程自定义命名空间HelloWorld</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form</span></span><br><span class="line">    <span class="comment">//partial关键字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//与类同名的构造方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">　　　　　<span class="comment">//用户自定义方法，窗体加载时由Form对象调用</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p><strong>命名空间（namespace）：</strong>在C#中用命名空间将很多类的属性及其方法进行封装供调用，类似C语言中将变量和函数封装成一个个.h文件，调用的时候只需要#include “filepath + filename”就可以使用，比如刚开始时用关键字using声明了一些所需要的系统命名空间（line1-10）;然后采用关键字namespace来自定义一个用户工程所需的命名空间HelloWorld，在我们定义的这个命名空间里就可以定义一些类和方法来进行下一步的实现；</p></li><li><p><strong>类（class）：</strong>C#是一门面向对象的编程语言，所以最基本的就是类和对象，对象的特征是具有属性（C语言中称为变量）和方法（C语言中称为函数），然后我们定义一个类来描述这个对象的特征，注意：这个时候定义的类不是真实存在的，所以不会分配内存空间，当我们用所定义的这个类去创建一个类的对象，这个对象是真实存在的，它会占用内存空间，比如在这个工程中定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form；</p></li><li><p><strong>方法：</strong>前面已经说过，在面向对象编程中是没有变量和函数的，所有的函数都被封装在类中，属于对象的方法，最基本的是类的构造方法，该方法与类名同名，在用类创建一个具体对象时自动调用，不可缺少，比如Form1( )；另外一种是自己定义的用户方法，比如该类中的Form1_Load（）方法，就是在初始化窗口时，通过具体对象Form调用：Form.Form1_Load( )；</p></li><li><p><strong>访问修饰符：</strong>用来控制类、属性、方法的访问权限，常用有5个，默认私有，不能被外部访问；<br>私有的private，公共的public，受保护的protected，内部的internal，受保护内部的protect internal；</p></li></ol><blockquote><p>这里有一个重点，在定义Form1类的时候含有一个关键字partial，这里就不得不说C#语言设计一个重要的特性了，能作为大多数人开发上位机的首选，C#有一个特性就是设计的时候界面与后台分离，但是类名相同，首先看一下工程文件结构：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/919a3688cad1a40f65ceae24689bab55.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><p>可以看到，Form1.cs文件下面包含了另一个Form1.Designer.cs文件，再打开Form1.Designer.cs这个文件，是不是很惊奇，和前面一模一样，再次定义了一个命名空间HelloWorld和Form1类，这个部分类中定义了我们使用的控件、事件委托以及如Dispose方法等。<br>因为这里面的代码都是自动生成的，因此设计成了一个部分类。<br>最关键的一点，这里类也是用partial关键字修饰的，可以看到，Partial是局部类型的意思，允许我们将一个类、结构或接口分成几个部分，分别实现在几个不同的.cs文件中，用partial定义的类可以在多个地方被定义，最后C#编译器编译时会将这些类当作一个类来处理；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*@filename：Form1.Designer.cs */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> System.ComponentModel.IContainer components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;disposing&quot;&gt;</span>如果应释放托管资源，为 true；否则为 false。<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (disposing &amp;&amp; (components != <span class="literal">null</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                components.Dispose();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">base</span>.Dispose(disposing);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Windows 窗体设计器生成的代码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要修改</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 使用代码编辑器修改此方法的内容。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// Form1</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF(<span class="number">6F</span>, <span class="number">12F</span>);</span><br><span class="line">            <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">418</span>, <span class="number">331</span>);</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**Main: **一切程序都有入口主函数main，C#也是如此，在Program.cs文件中定义了Program类，该类中拥有主函数main( )， 在main函数中，第三行代码是一切的开始，调用Form1类的构造函数，创建一个Form对象，一切由此开始，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* @filename： Program.cs */</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            Application.Run(<span class="keyword">new</span> Form1());　　<span class="comment">//调用Form1类的构造函数，创建一个Form对象，一切由此开始</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>再来解释一下最后三个文件：第一个文件主要是应用程序发布时的一些属性设置，版本号，属性，版权之类的，其余两个文件是工具自动生成的一些设置文件，不再过多赘述；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* @filename：Assemblylnfo.cs*/</span></span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.CompilerServices;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有关程序集的一般信息由以下</span></span><br><span class="line"><span class="comment">// 控制。更改这些特性值可修改</span></span><br><span class="line"><span class="comment">// 与程序集关联的信息。</span></span><br><span class="line">[<span class="meta">assembly: AssemblyTitle(<span class="meta-string">&quot;HelloWorld&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyDescription(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyConfiguration(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCompany(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyProduct(<span class="meta-string">&quot;HelloWorld&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCopyright(<span class="meta-string">&quot;Copyright ©  2018&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyTrademark(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCulture(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 ComVisible 设置为 false 会使此程序集中的类型</span></span><br><span class="line"><span class="comment">//对 COM 组件不可见。如果需要从 COM 访问此程序集中的类型</span></span><br><span class="line"><span class="comment">//请将此类型的 ComVisible 特性设置为 true。</span></span><br><span class="line">[<span class="meta">assembly: ComVisible(false)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果此项目向 COM 公开，则下列 GUID 用于类型库的 ID</span></span><br><span class="line">[<span class="meta">assembly: Guid(<span class="meta-string">&quot;094ac56a-7a59-4f32-a2eb-857135be4d2c&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序集的版本信息由下列四个值组成: </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//      主版本</span></span><br><span class="line"><span class="comment">//      次版本</span></span><br><span class="line"><span class="comment">//      生成号</span></span><br><span class="line"><span class="comment">//      修订号</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 可以指定所有值，也可以使用以下所示的 &quot;*&quot; 预置版本号和修订号</span></span><br><span class="line"><span class="comment">// 方法是按如下所示使用“*”: :</span></span><br><span class="line"><span class="comment">// [assembly: AssemblyVersion(&quot;1.0.*&quot;)]</span></span><br><span class="line">[<span class="meta">assembly: AssemblyVersion(<span class="meta-string">&quot;1.0.0.0&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyFileVersion(<span class="meta-string">&quot;1.0.0.0&quot;</span>)</span>]</span><br></pre></td></tr></table></figure><h1 id="三、实现-Hello，World-窗体"><a href="#三、实现-Hello，World-窗体" class="headerlink" title="三、实现 Hello，World 窗体"></a>三、实现 Hello，World 窗体</h1><blockquote><p>下面就正式开始C#程序的设计，首先是界面的实现，可以随意从控件工具箱中拖放控件到窗体中，这里我拖动两个Button和一个TextBox，并在右边设置框中修改每个控价的属性，界面如图：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/b52e21d7a228e978f2fa6fc8f626864c.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><p>这个时候如果查看Form1.cs文件，会发现和之前一样，这里就需要介绍另外几个开发GUI界面的知识点了:</p><blockquote><p>首先，我们想要实现的功能是：<br>当按下Send按钮时，文本框显示^_^Hello，World^_^字样，当按下Clear按钮时，文本框清空；</p></blockquote><p>这属于人机交互，一般人机交互的处理方式有两种：</p><ul><li>第一种是查询处理方式，比如在DOS系统下、Linux系统等命令行下的程序设计。</li><li>第二种是事件处理机制，有了很多的优越性，由传统的查询法耗费CPU一直在检测，变成了事件处理机制下的主动提醒告知，大幅度减轻CPU资源浪费，在事件处理机制中有以下几个概念：<blockquote></blockquote><p><strong>事件源（EventSource）：</strong>描述人机交互中事件的来源，通常是一些控件；<br><strong>事件（ActionEvent）：</strong>事件源产生的交互内容，比如按下按钮；<br><strong>事件处理：</strong>这部分也在C++中被叫做回调函数，当事件发生时用来处理事件；</p></li></ul><p><strong>注：这部分在单片机中也是如此，中断源产生中断，然后进入中断服务函数进行响应；</strong></p><p>清楚了这几个概念后，就来实现我们想要的功能:<br>按下按钮是一个事件，那么，如何编写或者在哪编写这个事件的事件处理函数呢？在VS中很方便，只需要双击这个控件，VS就会自动将该控件的事件处理函数添加进Form1.cs文件，此处我先双击“Send”按钮，可以看到VS自动添加进了 private void button1_Click(object sender, EventArgs e) 这个方法，</p><p>然后在里面编写代码，让文本框显示：这里所有的控件都是一个具体的对象，我们要通过这些对象设置其属性或者调用其方法；<br>同样的道理，双击Clear按钮，添加文本框清空代码，完整代码如下:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户项目工程自定义命名空间HelloWorld</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form</span></span><br><span class="line">    <span class="comment">//partial关键字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//与类同名的构造方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按下Send按钮</span></span><br><span class="line">            textBox1.Text = <span class="string">&quot;^_^Hello,World^_^&quot;</span>;    <span class="comment">//文本框显示    </span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按下Clear按钮</span></span><br><span class="line">            textBox1.Text = <span class="string">&quot;&quot;</span>;                      <span class="comment">//文本框清空</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>至此，大功告成，第一个应用程序创建成功，点击启动按钮看下效果：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/cc36772036eb28b6199c505afcadb933.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_13640625/3021603">C#上位机开发（二）—— Hello，World</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 上位机 </tag>
            
            <tag> 第一个程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#上位机系列之一（了解上位机）</title>
      <link href="/posts/3443688373.html"/>
      <url>/posts/3443688373.html</url>
      
        <content type="html"><![CDATA[<h1 id="为什么需要上位机"><a href="#为什么需要上位机" class="headerlink" title="为什么需要上位机"></a>为什么需要上位机</h1><blockquote><p> 在单片机项目开发中，上位机也是一个很重要的部分，主要用于数据显示（波形、温度等）、用户控制（LED，继电器等），下位机（单片机）与 上位机之间要进行数据通信的两种方式都是基于串口的：</p></blockquote><h1 id="上位机开发类型"><a href="#上位机开发类型" class="headerlink" title="上位机开发类型"></a>上位机开发类型</h1><ul><li><strong>USB转串口</strong> —— 上位机和下位机通过USB转串口连接线直接相连进行数据交互；</li><li><strong>串口转WIFI（ESP8266）</strong> ——  上位机和下位机基于TCP&#x2F;IP协议通过WIFI传输数据；</li><li><strong>串口转蓝牙（HC-06）</strong>—— 不多用，暂不介绍；</li></ul><p>　　</p><h2 id="上位机软软件开发主要包括以下两种："><a href="#上位机软软件开发主要包括以下两种：" class="headerlink" title="上位机软软件开发主要包括以下两种："></a>上位机软软件开发主要包括以下两种：</h2><ol><li><p>Windows上位机（EXE可执行程序）<br>在Windows上，最早用VB语言开发，后来由于C++的发展，采用MFC开发，近几年，微软发布了基于.NET框架的面向对象语言C#，更加稳定安全，再配合微软强大的VS进行开发，效率奇高；<br><strong>另外，如果想要在Linux上跨平台运行，可以选用Qt；如果想要更加丰富好看的数据显示界面，可以选用Labview开发；</strong></p></li><li><p>Android上位机（APP）<br>在Android操作系统上，主要采用Java语言，使用WIFI或者蓝牙基于TCP&#x2F;IP协议传输数据，利用Android Studio开发；</p></li></ol><p><strong>在此，我们主要介绍如何通过VS + C#开发电脑上位机，其它上位机的开发暂且不论。</strong></p><blockquote><p>注：VS下载与安装参考这篇较详细的<a href="https://blog.csdn.net/qq_36556893/article/details/79430133">博客</a></p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_13640625/3021604">C#上位机开发（一）—— 了解上位机</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 上位机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#退出应用程序方法</title>
      <link href="/posts/1995699131.html"/>
      <url>/posts/1995699131.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-退出应用程序的几种方法"><a href="#C-退出应用程序的几种方法" class="headerlink" title="C# 退出应用程序的几种方法"></a>C# 退出应用程序的几种方法</h1><blockquote><p>Process.GetCurrentProcess().Kill(); 这个方法试了报错</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Application.Exit();<span class="comment">//好像只在主线程可以起作用，而且当有线程，或是阻塞方法的情况下，很容易失灵</span></span><br><span class="line"><span class="keyword">this</span>.Close();<span class="comment">//只是关闭当前窗体。</span></span><br><span class="line">Application.ExitThread();<span class="comment">//退出当前线程上的消息循环，并关闭该线程上的所有窗口。 也会失灵</span></span><br><span class="line">Environment.Exit(<span class="number">0</span>); <span class="comment">//前面三种方法都不能很好的退出程序，此方法可以完全退出程序，这个要强制得多。</span></span><br><span class="line">Process.GetCurrentProcess().Kill();<span class="comment">//此方法完全奏效，绝对是完全退出。</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_45499836/article/details/124021582">C# 退出应用程序的几种方法)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 关闭程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C#窗体之一（esc退出窗体）</title>
      <link href="/posts/2033967494.html"/>
      <url>/posts/2033967494.html</url>
      
        <content type="html"><![CDATA[<h1 id="直接在当前窗体添加代码"><a href="#直接在当前窗体添加代码" class="headerlink" title="直接在当前窗体添加代码"></a>直接在当前窗体添加代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//esc退出窗体</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="built_in">bool</span> <span class="title">ProcessCmdKey</span>(<span class="params"><span class="keyword">ref</span> System.Windows.Forms.Message msg , System.Windows.Forms.Keys keyData</span>) <span class="comment">//激活回车键</span></span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">  <span class="built_in">int</span> WM_KEYDOWN=<span class="number">256</span>;       </span><br><span class="line">  <span class="built_in">int</span> WM_SYSKEYDOWN = <span class="number">260</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(msg.Msg == WM_KEYDOWN | msg.Msg == WM_SYSKEYDOWN)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">switch</span>(keyData)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">case</span> Keys.Escape:</span><br><span class="line">     <span class="keyword">this</span>.Close();<span class="comment">//csc关闭窗体</span></span><br><span class="line">     <span class="keyword">break</span>;   </span><br><span class="line">   &#125;  </span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.cnblogs.com/mingfei200169/articles/578222.html">c#中快捷键的设置(esc退出窗体)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> 窗体 </tag>
            
            <tag> esc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解C#和WinForm</title>
      <link href="/posts/2295543441.html"/>
      <url>/posts/2295543441.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是-C-？"><a href="#什么是-C-？" class="headerlink" title="什么是 C# ？"></a>什么是 C# ？</h1><p>C#是一个现代的、通用的、面向对象的、面向组件、结构化语言C#的构想十分接近C和C++,是一门面向对象的编程语言，与java非常相似。</p><h1 id="C-的特点"><a href="#C-的特点" class="headerlink" title="C#的特点"></a>C#的特点</h1><ul><li><p><strong>简单、安全</strong></p><blockquote><p>在 C++ 和 C 语言中程序员最头疼的问题就是指针问题，在 C# 语言中已经不再使用指针，而且不允许直接读取内存等不安全的操作。它比 C、C++、Java 提供了更多的数据类型，并且每个数据类型都是固定大小的。此外还提供了命名空间来管理 C# 文件，命名空间 相当于一个文件夹，在创建程序时，允许在一个命名空间中创建一个或多个类，方便调用和重用</p></blockquote></li><li><p><strong>面向对象</strong></p></li></ul><p>与其他面向对象语言一样，C# 语言也具有面向对象语言的基本特征，即<code>封装、继承、 多态</code>。</p><blockquote><pre><code>**封装：**就是将代码看作一个整体，例如使用类、方法、接口等。在使用定义好的类、 方法、接口等对象时不必考虑其细节，只需要知道其对象名以及所需要的参数即可，也是一种提升代码安全性的方法。**继承：**是一种体现代码重用性的特性，减少代码的冗余，但在 C# 语言中仅支持单继承。**多态：**不仅体现了代码的重用性，也体现了代码的灵活性，它主要通过继承和实现接口的方式，让类或接口中的成员表现出不同的作用</code></pre></blockquote><ul><li><p><strong>支持跨平台</strong><br>最早的 C# 语言仅能在 Windows 平台上开发并使用，目前最新的 C# 6.0 版本已经能在多个操作系统上使用，例如在 Mac、Linux 等。此外，还能将其应用到手机、PDA 等设备上。</p></li><li><p><strong>开发多种类型的程序</strong><br>C# 语言不仅能开发在控制台下运行的应用程序，也能开发 Windows 窗体应用程序、网站、手机应用等多种应用程序，并且其提供的 Visual Studio 2015 开发工具中也支持多种类型的程序，让开发人员能快速地构建 C# 应用程序</p></li></ul><h1 id="了解C-、-NET、Winform的关系"><a href="#了解C-、-NET、Winform的关系" class="headerlink" title="了解C#、.NET、Winform的关系"></a>了解C#、.NET、Winform的关系</h1><ul><li>.NET 是一个开发平台，而 C# 是一种在 .NET 开发平台上使用的编程语言，目前能在 .NET 平台上使用的开发语言很多，例如 Visual Basic .NET、Python、J#、Visual C++.NET 等。但在 .NET 平台上使用最多的是 C# 语言。</li><li>WinForm 是 Windows Form 的简称，是基于 .NET Framework 平台的客户端（PC软件）开发技术，一般使用 C# 编程。C# WinForm 编程需要创建「Windows窗体应用程序」项目。</li><li>.NET 提供了大量 Windows 风格的控件和事件，我们可以直接拿来使用，上手简单，开发快速。</li></ul><h1 id="快速创建Winform程序"><a href="#快速创建Winform程序" class="headerlink" title="快速创建Winform程序"></a>快速创建Winform程序</h1><blockquote><p>使用VS2017,.NET Framework 4.6.1</p></blockquote><ul><li>一、创建窗体应用程序非常简单，依次选择“文件”一“新建”一“项目”命令，弹出如下图所示的对话框，选择Windows窗体应用程序，修改位置即可。</li></ul><img src="https://img-blog.csdnimg.cn/img_convert/86b77ebdd9cff3f042e4197ec55f491e.png#pic_center"><ul><li>二、通过工具箱中的label标签，button按钮，comboBox下拉按钮，直接在拖拽到窗体中；按钮的单击事件直接双击可以跳到对应的方法中进行代码编辑；还需要修改对应标签属性中的Name，方便后续的编辑；创建完成后出现如下界面</li></ul><img src="https://img-blog.csdnimg.cn/f586b06ae1094573927e288cfe900c0f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>三、点击启动按钮，出现自己编写的窗体界面</li></ul><img src="https://img-blog.csdnimg.cn/b6b0618317904fb4903a2f90ef0f9d43.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><h1 id="Winform菜单和工具栏"><a href="#Winform菜单和工具栏" class="headerlink" title="Winform菜单和工具栏"></a>Winform菜单和工具栏</h1><img src="https://img-blog.csdnimg.cn/4931266cefef42088836a0b8601752c7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_9,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>一、ListBox:列表框</li></ul><img src="https://img-blog.csdnimg.cn/a5cceedc3b244a4088eca5ae68129299.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_16,color_FFFFFF,t_70,g_se,x_16"><ul><li>二、ComboBox:下拉框列表</li></ul><img src="https://img-blog.csdnimg.cn/8577ddc44331479a8b3e3f653d9fb254.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16"><ul><li>三、CheckedListBox:复选框列表</li><li>四、MaskedTextBox:用于输入指定格式的内容，比如电话，邮编等信息，指定格式。</li><li>五、numericUpdown:数字显示框，点击向上或者向下来增加或减少数字的显示</li><li>六、RichTextBox:富文本框</li></ul><img src="https://img-blog.csdnimg.cn/575ec2000b2f42959b326882e3e3fb7f.png"><ul><li>七、MenuStrip:窗体上添加菜单栏控件 MenuStrip，直接点击 MenuStrip ，在右边的 Windows 窗体中就可以显示，输入具体的值时需要有提示字母，可以通过&amp;+字母实现</li><li>八、ToolStrip:和添加菜单栏类似，在工具箱中将 ToolStrip 控件直接拖到 Windows 窗体中即可；如果需要指定图片和文字，可以通过属性中的DisplayStyle设置</li></ul><img src="https://img-blog.csdnimg.cn/175497e93125477b8f8f9f57326ba809.png#pic_center"><ul><li>九、DataGridView:在网格中可以用自定义数据的行和列</li><li>十、事件:可以通过属性中的Click指定不同按钮的相同事件</li></ul><img src="https://img-blog.csdnimg.cn/915a488732164cab97249542371da64f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>十一、容器</li></ul><img src="https://img-blog.csdnimg.cn/e3569f476a854c74af6ad0a295d637df.png#pic_center"><p><strong>在容器中可以放入需要的组件:</strong></p><img src="https://img-blog.csdnimg.cn/24fd881456e8411a9aaf468a5150ca88.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_10,color_FFFFFF,t_70,g_se,x_16"><ul><li>十二、属性<blockquote><p><strong>Anchor</strong>属性可以将内部容器窗体的拉伸大小随外部窗体的改变而改变</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/0ff92359c8aa4fe5882b10091052c2aa.png"><blockquote><p><strong>Dock</strong>属性将控件停靠在窗体的边缘或者填充窗体</p></blockquote><blockquote><p><strong>IsMdiContainer</strong> 将一个窗体设置为主窗体</p></blockquote><img src="https://img-blog.csdnimg.cn/d1f273531aea4affbaa89bd73ffeb9e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_15,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/d1f273531aea4affbaa89bd73ffeb9e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_15,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>ControlBox</strong>是将窗体中的最大最小设置为不可见状态</p></blockquote><img src="https://img-blog.csdnimg.cn/d921658fe4dc4e14b8281fe010b6de73.png"><blockquote><p><strong>AcceptButton</strong>设置为true时用户可以通过回车键确认</p></blockquote><blockquote><p><strong>Show和ShowDialog的区别</strong></p></blockquote><ul><li>show是界面可以同时存在，第一个界面出现，出现第二个界面时可以点击第一个界面，而showDialog时出现第二个界面时无法点击第一个界面，必须关闭第二个界面才能点击第一个界面。</li></ul><h1 id="Form初始化、布局"><a href="#Form初始化、布局" class="headerlink" title="Form初始化、布局"></a>Form初始化、布局</h1><ul><li>form初始化操作时是先执行构造方法中的InitializeComponent()，然后执行load()，包括实例化——属性设置——事件注册——将控件添加到当前窗体的Controls中。</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>参考文章：<br><a href="http://c.biancheng.net/csharp/winform/">C语言中文网</a><br><a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/tour-of-csharp/">C#教程</a></p><ol><li>C#开发窗体应用方便快捷，界面结构整齐。</li><li>控件的使用不仅可以通过拖拽的方式实现，也可以使用代码的方式实现，添加到Controls中，然后编写相应的逻辑代码。</li><li>VS2017快捷键设置：工具——&gt;选项</li></ol><img src="https://img-blog.csdnimg.cn/a423111d12f043dbb6589da4b8765afa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/m0_67729518/article/details/123518389">WinForm学习</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> C# </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
            <tag> .NET </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA文件管理之一（访问带密码共享）</title>
      <link href="/posts/2543819108.html"/>
      <url>/posts/2543819108.html</url>
      
        <content type="html"><![CDATA[<h1 id="通过Shell命令访问共享文件"><a href="#通过Shell命令访问共享文件" class="headerlink" title="通过Shell命令访问共享文件"></a>通过Shell命令访问共享文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sub 访问共享文件()</span><br><span class="line">IPName &#x3D; &quot;192.168.0.10&quot;</span><br><span class="line">UserName &#x3D; &quot;user&quot;</span><br><span class="line">Passwd &#x3D; &quot;password&quot;</span><br><span class="line">Shell &quot;net use * &#x2F;delete &#x2F;y&quot;, vbHide</span><br><span class="line">Shell &quot;net use \\&quot; &amp; IPName &amp; &quot; &quot; &amp; Passwd &amp; &quot; &#x2F;user:&quot; &amp; UserName, vbHide</span><br><span class="line">Shell &quot;C:\WINDOWS\explorer.exe \\&quot; &amp; IPName &amp; &quot;\&quot;, vbMaximizedFocus</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h1 id="通过VB-NET登录带密码的电脑"><a href="#通过VB-NET登录带密码的电脑" class="headerlink" title="通过VB.NET登录带密码的电脑"></a>通过VB.NET登录带密码的电脑</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ul><li>很简单只有一句,但是由于shell语句都是异步的所以最好不要放在过程中使用,我一般放在load 里</li></ul><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ul><li>如果想要登录ip地址为192.168.50.193下的共享文件夹</li></ul><blockquote><p>user: 后跟要登陆计算机的登录名 然后空一格写密码<br>第二句是退出登录,一般用在程序关闭的时候.以免计算机一直处于登录状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Shell(&quot;Net use \\192.168.50.193\共享 &#x2F;user:gh 518518&quot;)</span><br><span class="line">Shell(&quot;Net use \\192.168.50.193\共享 &#x2F;delete&quot;)</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/601566725.html">Excel使用VBA读写有用户名及密码的网络文件夹中的文档</a></li><li><a href="https://blog.csdn.net/m0_53168509/article/details/111952385">如何用VB.NET在局域网中登录带密码的电脑</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 文件管理 </tag>
            
            <tag> 共享文件 </tag>
            
            <tag> 密码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA数据处理之三(随机数据)</title>
      <link href="/posts/81989925.html"/>
      <url>/posts/81989925.html</url>
      
        <content type="html"><![CDATA[<h1 id="1、用EXCEL生成随机数"><a href="#1、用EXCEL生成随机数" class="headerlink" title="1、用EXCEL生成随机数"></a>1、用EXCEL生成随机数</h1><ul><li>rand()  是 [0,1）,随机到的是小数</li><li>randbetween(a,b)   是  [a,b] ,但是只能是整数</li></ul><blockquote><p>如果想在EXCEL公式用randbetween()随机小数呢？</p><ul><li>随机，randbetween() 只能随机整数，如果是要小数，那就先乘100，随机完之后再除100这样处理</li><li>randbetween(a,b)   是  [a,b]</li><li>RANDBETWEEN(1000<em>G49,1000</em>H49)&#x2F;1000</li></ul></blockquote><h1 id="2、用VBA生成随机数"><a href="#2、用VBA生成随机数" class="headerlink" title="2、用VBA生成随机数"></a>2、用VBA生成随机数</h1><h2 id="方法说明"><a href="#方法说明" class="headerlink" title="方法说明"></a>方法说明</h2><blockquote><p>在VBA里</p></blockquote><ul><li>rnd是[0,1）之间随机左闭右开区间</li></ul><blockquote><p>方法</p></blockquote><ul><li>整数[a,b]随机正确写法为 int(a+(b-a+1)*rnd())</li><li>小数的随机[a,b)  随机正确写法为 (a+(b-a)*rnd()  ’但是右边还是不是闭区间有瑕疵</li><li>这样来说，小数随机，如果要求两边是闭区间，不如用整数随机方法，把小数*1000等变大为整数，最后再除，也是一样得把。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">int(1+[0,1)*(6-1+1))</span><br><span class="line"></span><br><span class="line">&#x3D; int(1+[0,1)*6)</span><br><span class="line"></span><br><span class="line">&#x3D;int(1+[0,6))</span><br><span class="line"></span><br><span class="line">&#x3D;int([1,7))</span><br><span class="line"></span><br><span class="line">&#x3D;[1,6]</span><br><span class="line"></span><br><span class="line">0.1+[0,1)*(0.6-0.1)</span><br><span class="line"></span><br><span class="line">&#x3D;0.1+ [0,1)*0.5</span><br><span class="line"></span><br><span class="line">&#x3D;0.1+[0,0.5)</span><br><span class="line"></span><br><span class="line">&#x3D;[0.1,0.6)</span><br></pre></td></tr></table></figure><ul><li><strong>官方解释:</strong></li></ul><blockquote><p>为了生成某个范围内的随机整数，可使用以下公式：<br>Int((upperbound - lowerbound + 1) * Rnd + lowerbound)<br>这里，upperbound 是随机数范围的上限，而 lowerbound 则是随机数范围的下限。<br>注意 若想得到重复的随机数序列，在使用具有数值参数的 Randomize 之前直接调用具有负参数值的 Rnd。使用具有同样 number 值的 Randomize 是不会得到重复的随机数序列的。</p></blockquote><ul><li>rnd 是左闭右开区间   [0,1)</li><li>如果要生成 a~b之间的随机数，一般是int(a+ (b-a+1)*rnd)</li><li>因为一般都是要在整数之间随机 要用 int()</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li><strong>1、生成1-10的随机数:</strong><blockquote><p>p1 &#x3D; Int(1 + 10* Rnd())            —这里正确，刚好10&#x3D;10-1+1<br>p1 &#x3D; Int(1 + (10-1+1) * Rnd())     –总是正确</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918151600317.png"><ul><li><strong>2、生成 2-9之间的随机数:</strong><blockquote><p>p2 &#x3D; Int( 2 + 9* Rnd() )              –错误的<br>p2 &#x3D; Int(2 + (9-2+1) * Rnd())     —-正确</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918152829586.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5aWU6LeR55qE54qA54mb5YWI55Sf,size_7,color_FFFFFF,t_70,g_se,x_16"><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><ul><li><strong>1、rnd(-1)</strong><blockquote><p>用永远生成相同的随机数<br>相当于固定随机数种子了？这样的应用情景是？</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918155514687.png"><ul><li><strong>2、rnd(0)</strong><blockquote><p>虽然随机序列都一样，但和rnd(-1) 不同<br>每次连续随机，也是一样的随机数种子，总是用上次的<br>但是如果先停止，再重新开始，就是用下一个随机种子，会和以前的不同</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918160010696.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5aWU6LeR55qE54qA54mb5YWI55Sf,size_8,color_FFFFFF,t_70,g_se,x_16"><h1 id="测试随机数的代码"><a href="#测试随机数的代码" class="headerlink" title="测试随机数的代码"></a>测试随机数的代码</h1><p><strong>测试方法：</strong></p><blockquote><p>这个进行了多轮随机<br>p1 &#x3D; Int(1 + (10) * Rnd())   ‘Rnd()分别修改为 rnd(-1)   rnd(0)  rnd(1)  rnd(999) 看效果</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">Private p1</span><br><span class="line">Private s1, s2, s3, s4, s5, s6, s7, s8, s9, s10</span><br><span class="line">Private S</span><br><span class="line"> </span><br><span class="line">Sub tt1()</span><br><span class="line"> </span><br><span class="line">Call intial1</span><br><span class="line"> </span><br><span class="line">S &#x3D; 10000</span><br><span class="line">For i &#x3D; 1 To S</span><br><span class="line">Call RR1</span><br><span class="line">Call SS1</span><br><span class="line">&#39;    Debug.Print p1</span><br><span class="line">Next</span><br><span class="line">        </span><br><span class="line">   Call SS2</span><br><span class="line">End Sub</span><br><span class="line"> </span><br><span class="line">Function intial1() </span><br><span class="line">s1 &#x3D; 0</span><br><span class="line">s2 &#x3D; 0</span><br><span class="line">s3 &#x3D; 0</span><br><span class="line">s4 &#x3D; 0</span><br><span class="line">s5 &#x3D; 0</span><br><span class="line">s6 &#x3D; 0</span><br><span class="line">s7 &#x3D; 0</span><br><span class="line">s8 &#x3D; 0</span><br><span class="line">s9 &#x3D; 0</span><br><span class="line">s10 &#x3D; 0</span><br><span class="line">End Function</span><br><span class="line"> </span><br><span class="line">Function SS2()</span><br><span class="line">  Debug.Print &quot;随到1的平均次数是&#x3D; &quot; &amp; s1 &#x2F; S &amp; &quot; s1&#x3D;&quot; &amp; s1</span><br><span class="line">  Debug.Print &quot;随到2的平均次数是&#x3D; &quot; &amp; s2 &#x2F; S &amp; &quot; s2&#x3D;&quot; &amp; s2</span><br><span class="line">  Debug.Print &quot;随到3的平均次数是&#x3D; &quot; &amp; s3 &#x2F; S &amp; &quot; s3&#x3D;&quot; &amp; s3</span><br><span class="line">  Debug.Print &quot;随到4的平均次数是&#x3D; &quot; &amp; s4 &#x2F; S &amp; &quot; s4&#x3D;&quot; &amp; s4</span><br><span class="line">  Debug.Print &quot;随到5的平均次数是&#x3D; &quot; &amp; s5 &#x2F; S &amp; &quot; s5&#x3D;&quot; &amp; s5</span><br><span class="line">  Debug.Print &quot;随到6的平均次数是&#x3D; &quot; &amp; s6 &#x2F; S &amp; &quot; s6&#x3D;&quot; &amp; s6</span><br><span class="line">  Debug.Print &quot;随到7的平均次数是&#x3D; &quot; &amp; s7 &#x2F; S &amp; &quot; s7&#x3D;&quot; &amp; s7</span><br><span class="line">  Debug.Print &quot;随到8的平均次数是&#x3D; &quot; &amp; s8 &#x2F; S &amp; &quot; s8&#x3D;&quot; &amp; s8</span><br><span class="line">  Debug.Print &quot;随到9的平均次数是&#x3D; &quot; &amp; s9 &#x2F; S &amp; &quot; s9&#x3D;&quot; &amp; s9</span><br><span class="line">  Debug.Print &quot;随到10的平均次数是&#x3D; &quot; &amp; s10 &#x2F; S &amp; &quot; s10&#x3D;&quot; &amp; s10</span><br><span class="line"> </span><br><span class="line">End Function</span><br><span class="line"> </span><br><span class="line">Function RR1()</span><br><span class="line"> </span><br><span class="line">Randomize</span><br><span class="line">p1 &#x3D; Int(1 + (10) * Rnd())   &#39;Rnd()分别修改为 rnd(-1)   rnd(0)  rnd(1)  rnd(999) 看效果</span><br><span class="line">&#39;Debug.Print p1</span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Function SS1()</span><br><span class="line"> </span><br><span class="line">Select Case p1</span><br><span class="line">   Case Is &#x3D; 1</span><br><span class="line">  s1 &#x3D; s1 + 1</span><br><span class="line">   Case Is &#x3D; 2</span><br><span class="line">  s2 &#x3D; s2 + 1</span><br><span class="line">   Case Is &#x3D; 3</span><br><span class="line">  s3 &#x3D; s3 + 1</span><br><span class="line">   Case Is &#x3D; 4</span><br><span class="line">  s4 &#x3D; s4 + 1</span><br><span class="line">   Case Is &#x3D; 5</span><br><span class="line">  s5 &#x3D; s5 + 1</span><br><span class="line">   Case Is &#x3D; 6</span><br><span class="line">  s6 &#x3D; s6 + 1</span><br><span class="line">   Case Is &#x3D; 7</span><br><span class="line">  s7 &#x3D; s7 + 1</span><br><span class="line">   Case Is &#x3D; 8</span><br><span class="line">  s8 &#x3D; s8 + 1</span><br><span class="line">   Case Is &#x3D; 9</span><br><span class="line">  s9 &#x3D; s9 + 1</span><br><span class="line">   Case Is &#x3D; 10</span><br><span class="line">  s10 &#x3D; s10 + 1</span><br><span class="line">End Select</span><br><span class="line"> </span><br><span class="line">End Function</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/xuemanqianshan/article/details/120367890">VBA的随机数生成：整数范围内随机（更好些），小数范围内随机</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 随机数生成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA窗体相关设置汇总</title>
      <link href="/posts/2061956688.html"/>
      <url>/posts/2061956688.html</url>
      
        <content type="html"><![CDATA[<h1 id="VBA去掉窗体的背景图片"><a href="#VBA去掉窗体的背景图片" class="headerlink" title="VBA去掉窗体的背景图片"></a>VBA去掉窗体的背景图片</h1><ul><li>解决办法1：在窗体中属性里找 picture，选中（Bitmap），然后 del 就可以清除</li><li>解决办法2：在代码里添加代码：Me.Picture &#x3D; Nothing</li></ul><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/623726551390256772.html">在VB中怎么去掉窗体的背景图片？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA命令按钮设置为透明</title>
      <link href="/posts/2992967553.html"/>
      <url>/posts/2992967553.html</url>
      
        <content type="html"><![CDATA[<h1 id="BackStyle-属性"><a href="#BackStyle-属性" class="headerlink" title="BackStyle 属性"></a>BackStyle 属性</h1><blockquote><p>使用 BackStyle 属性可以指定控件是否透明。Byte 型，可读写。<br>expression.BackStyle<br>expression     必需。返回“应用于”列表中的一个对象的表达式。</p></blockquote><ul><li>BackStyle 属性使用下列设置：</li></ul><table><thead><tr><th><strong>设置</strong></th><th><strong>Visual Basic</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>普通</td><td>1</td><td>（除了<a href="http://www.office-cn.net/t/acvba/html_acprobackstyle.htm">选项组</a>之外，其余控件都默认为该设置）。控件内部的颜色由 <a href="http://www.office-cn.net/t/acvba/html_acprobackcolor.htm">BackColor</a> 属性决定。</td></tr><tr><td>透明</td><td>0</td><td>（选项组的默认设置）。控件是透明的，控件后面的窗体或报表颜色可见。</td></tr></tbody></table><h1 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h1><ul><li>命令按钮不像Label，IMage那样可以简单的设置为透明的属性的，Label，Image这样的控件再做的时候都提供了Backstyle这个属性设置，从而可以很简单的修改它们的透明性质，但是Button这样的命令按钮却没有提供，</li></ul><p><strong>因此想设计一个透明的命令按钮常用的有三种做法:</strong></p><ul><li>1.用标签Label来替代命令按钮来执行命令功能，把它设置为透明的即可，但这种方法的缺点是label是平面的，不好看;</li><li>2.用Image来替代命令按钮来执行命令功能，用它是非常灵活的，效果极好，最常用，因为它本身有个Backstyle属性，从而可以将它设置为透明的，另外做一个或者找一个漂亮的图片加在里边就行了，图片是什么效果的做出来的按钮就是什么效果的;</li><li>3.第3种就有些复杂，不常用，且比较难，就是继承VB提供的按钮，然后自己再他的基础上给你编写Backstyle的属性，也就是做一个控件了，这个实用性就很低了，不过有时间可以试着做一下。</li></ul><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://www.office-cn.net/t/acvba/html_acprobackstyle.htm">BackStyle 属性</a></li><li><a href="https://zhidao.baidu.com/question/544324686.html">VB中的命令按钮怎么设置为透明的？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 命令按钮 </tag>
            
            <tag> 透明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL语句之一(WHERE条件查询)</title>
      <link href="/posts/3624342376.html"/>
      <url>/posts/3624342376.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>SQL WHERE是SQL的条件查询语句。SQL查询里的条件指定了要返回满足什么标准的信息。条件的值是TRUE或FALSE，从而限制查询中获取的数据。WHERE子句用于给查询添加条件，从而去除用户不需要的数据。WHERE自己本身比较简单，本文更多地介绍WHERE子句与比较运算符、逻辑运算符和通配符这三种方式对检索条件进行过滤。<br>WHERE子句里可以有多个条件，它们之间以操作符 AND 或 OR 连接。</p></blockquote><h1 id="SQL-WHERE-语法"><a href="#SQL-WHERE-语法" class="headerlink" title="SQL WHERE 语法"></a>SQL WHERE 语法</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name operator <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><h1 id="SQL-WHERE-子句比较运算符"><a href="#SQL-WHERE-子句比较运算符" class="headerlink" title="SQL WHERE 子句比较运算符"></a>SQL WHERE 子句比较运算符</h1><blockquote><p><strong>在SQL中，我们可以使用WHERE子句对条件进行筛选，在此之前，你需要了解WHERE子句中的比较运算符。这些比较运算符的含义你可以参见下面这张表格：</strong></p></blockquote><p>|   含义   |  运算符    |<br>| :–: | :–: |<br>|  等于    |   &#x3D;   |<br>|   不等于   |  &lt;&gt;或!&#x3D;    |<br>|   小于   |   &lt;   |<br>|   小于等于（不大于）   |   &lt;&#x3D;或者!&gt;   |<br>|   大于   |  &gt;    |<br>|   大于等于（不小于）   |  &gt;&#x3D;或者!&lt;    |<br>|   不小于   |  !&lt;    |<br>|   在指定的两个数值之间   |   BETWEEN   |<br>|    为空值  |   IS NULL   |</p><ul><li>实际上你能看到，同样的含义可能会有多种表达方式，比如小于等于，可以是（&lt;&#x3D;），也可以是不大于（!&gt;）。同样不等于，可以用（&lt;&gt;），也可以用（!&#x3D;），它们的含义都是相同的，但这些符号的顺序都不能颠倒，比如你不能写（&#x3D;&lt;）。</li></ul><blockquote><p><strong>需要注意的是，你需要查看使用的DBMS是否支持，不同的DBMS支持的运算符可能是不同的，比如Access不支持（!&#x3D;），不等于应该使用（&lt;&gt;）。在MySQL中，不支持（!&gt;）（!&lt;）等。</strong></p></blockquote><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><ul><li>极客教程在<a href="https://geek-docs.com/sql/sql-tutorials/sql-select.html">SQL 查询</a>文章中使用了<a href="https://github.com/eyeandroid/sql_heros_data">heros数据表</a>，我们还是以这张表格做练习。下面我们通过比较运算符对王者荣耀的英雄属性进行条件筛选。</li></ul><blockquote><p>WHERE子句的基本格式是：SELECT ……(列名) FROM ……(表名) WHERE ……(子句条件)</p></blockquote><ol><li>比如我们想要查询所有最大生命值大于6000的英雄：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（41条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-02.png"><ol start="2"><li>想要查询所有最大生命值在5399到6811之间的英雄：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="keyword">BETWEEN</span> <span class="number">5399</span> <span class="keyword">AND</span> <span class="number">6811</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（41条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-03.png"><blockquote><p><strong>需要注意的是hp_max可以取值到最小值和最大值，即5399和6811。</strong></p></blockquote><ol start="3"><li>我们也可以对heros表中的hp_max字段进行空值检查。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果为空，说明heros表中的hp_max字段没有存在空值的数据行。</li></ul><h1 id="SQL-WHERE-子句逻辑运算符"><a href="#SQL-WHERE-子句逻辑运算符" class="headerlink" title="SQL WHERE 子句逻辑运算符"></a>SQL WHERE 子句逻辑运算符</h1><blockquote><p><strong>如果我们存在多个WHERE条件子句，可以使用逻辑运算符：</strong></p></blockquote><p>|   含义   |  逻辑运算符    |<br>| :–: | :–: |<br>|  并且    |   AND   |<br>|   或者   |  OR    |<br>|   在指定条件范围内   |   IN   |<br>|   非（否定）   |  NOT   |</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li>我们还是通过例子来看下这些逻辑运算符的使用，同样采用heros这张表的数据查询。</li></ul><ol><li>假设想要筛选最大生命值大于6000，最大法力大于1700的英雄，然后按照最大生命值和最大法力值之和从高到低进行排序。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span> <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（23条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-05.png"><ol start="2"><li>如果AND和OR同时存在WHERE子句中会是怎样的呢？假设我们想要查询最大生命值加最大法力值大于8000的英雄，或者最大生命值大于6000并且最大法力值大于1700的英雄。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> (hp_max<span class="operator">+</span>mp_max) <span class="operator">&gt;</span> <span class="number">8000</span> <span class="keyword">OR</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span> <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（33条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-06.png"><ul><li>你能看出来相比于上一个条件查询，这次的条件查询多出来了10个英雄，这是因为我们放宽了条件，允许最大生命值+最大法力值大于8000的英雄显示出来。</li></ul><blockquote><p><strong>另外你需要注意到，当WHERE子句中同时存在OR和AND的时候，AND执行的优先级会更高，也就是说SQL会优先处理AND操作符，然后再处理OR操作符。</strong></p></blockquote><ol start="3"><li>如果我们对这条查询语句OR两边的条件增加一个括号，结果会是怎样的呢？<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> ((hp_max<span class="operator">+</span>mp_max) <span class="operator">&gt;</span> <span class="number">8000</span> <span class="keyword">OR</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span>) <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-07.png"><blockquote><p><strong>所以当WHERE子句中同时出现AND和OR操作符的时候，你需要考虑到执行的先后顺序，也就是两个操作符执行的优先级。一般来说()优先级最高，其次优先级是AND，然后是OR。</strong></p></blockquote><ol start="4"><li>如果我想要查询主要定位或者次要定位是法师或是射手的英雄，同时英雄的上线时间不在2016-01-01到2017-01-01之间。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, role_main, role_assist, hp_max, mp_max, birthdate</span><br><span class="line"><span class="keyword">FROM</span> heros </span><br><span class="line"><span class="keyword">WHERE</span> (role_main <span class="keyword">IN</span> (<span class="string">&#x27;法师&#x27;</span>, <span class="string">&#x27;射手&#x27;</span>) <span class="keyword">OR</span> role_assist <span class="keyword">IN</span> (<span class="string">&#x27;法师&#x27;</span>, <span class="string">&#x27;射手&#x27;</span>)) </span><br><span class="line"><span class="keyword">AND</span> <span class="type">DATE</span>(birthdate) <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="string">&#x27;2016-01-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2017-01-01&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max <span class="operator">+</span> mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>你能看到我把WHERE子句分成了两个部分。第一部分是关于主要定位和次要定位的条件过滤，使用的是role_main in (‘法师’, ‘射手’) OR role_assist in (‘法师’, ‘射手’)。这里用到了IN逻辑运算符，同时role_main和role_assist是OR（或）的关系。</p></blockquote><ul><li><p>第二部分是关于上线时间的条件过滤。NOT代表否，因为我们要找到不在2016-01-01到2017-01-01之间的日期，因此用到了NOT BETWEEN ‘2016-01-01’ AND ‘2017-01-01’。同时我们是在对日期类型数据进行检索，所以使用到了DATE函数，将字段birthdate转化为日期类型再进行比较。关于日期的操作，可以参考极客教程提供的。</p></li><li><p>这是运行结果（6条记录）：</p></li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-08.png"><h1 id="SQL-WHERE-子句使用通配符进行过滤"><a href="#SQL-WHERE-子句使用通配符进行过滤" class="headerlink" title="SQL WHERE 子句使用通配符进行过滤"></a>SQL WHERE 子句使用通配符进行过滤</h1><blockquote><p>刚才讲解的条件过滤都是对已知值进行的过滤，还有一种情况是我们要检索文本中包含某个词的所有数据，这里就需要使用通配符。通配符就是我们用来匹配值的一部分的特殊字符。这里我们需要使用到LIKE操作符。</p></blockquote><ol><li>如果我们想要匹配任意字符串出现的任意次数，需要使用（%）通配符。比如我们想要查找英雄名中包含“太”字的英雄都有哪些：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%太%&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（2条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-09.png"><blockquote><p><strong>需要说明的是不同DBMS对通配符的定义不同，在Access中使用的是（*）而不是（%）。另外关于字符串的搜索可能是需要区分大小写的，比如’liu%’就不能匹配上’LIU BEI’。具体是否区分大小写还需要考虑不同的DBMS以及它们的配置。</strong></p></blockquote><ol start="2"><li>如果我们想要匹配单个字符，就需要使用下划线(_)通配符。（%）和（_）的区别在于</li></ol><ul><li>（<code>%</code>）代表一个或多个字符</li><li>（<code>_</code>）只代表一个字符</li></ul><p>比如我们想要查找英雄名除了第一个字以外，包含“太”字的英雄有哪些。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;_%太%&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果（1条记录）：</li></ul><p><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-10.png" alt="SQL WHERE 条件查询"></p><blockquote><p>因为太乙真人的太是第一个字符，而_%太%中的太不是在第一个字符，所以匹配不到“太乙真人”，只可以匹配上“东皇太一”。</p></blockquote><ul><li>同样需要说明的是，在Access中使用（<code>?</code>）来代替（<code>_</code>），而且在DB2中是不支持通配符（<code>_</code>）的，因此你需要在使用的时候查阅相关的DBMS文档。</li></ul><blockquote><p>你能看出来通配符还是很有用的，尤其是在进行字符串匹配的时候。不过在实际操作过程中，我还是建议你尽量少用通配符，因为它需要消耗数据库更长的时间来进行匹配。即使你对LIKE检索的字段进行了索引，索引的价值也可能会失效。如果要让索引生效，那么LIKE后面就不能以（<code>%</code>）开头，比如使用<code>LIKE &#39;%太%&#39;</code>或<code>LIKE &#39;%太&#39;</code>的时候就会对全表进行扫描。如果使用<code>LIKE &#39;太%&#39;</code>，同时检索的字段进行了索引的时候，则不会进行全表扫描。</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://geek-docs.com/sql/sql-tutorials/sql-select-where.html">SQL WHERE 条件查询（极客教程）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程来 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
            <tag> WHERE </tag>
            
            <tag> 条件查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA数据处理之二(日期处理)</title>
      <link href="/posts/2278476872.html"/>
      <url>/posts/2278476872.html</url>
      
        <content type="html"><![CDATA[<h1 id="日期基本处理"><a href="#日期基本处理" class="headerlink" title="日期基本处理"></a>日期基本处理</h1><h2 id="定义一个日期"><a href="#定义一个日期" class="headerlink" title="定义一个日期"></a>定义一个日期</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v_date = <span class="type">Date</span>  <span class="comment">&#x27; 今天，格式为：yyyy-MM-dd</span></span><br><span class="line">v_time = Now   <span class="comment">&#x27; 此时，格式为：yyyy-MM-dd HH:mm:ss</span></span><br><span class="line">v_date2 = #<span class="string">&quot;2021-06-01&quot;</span> <span class="comment">&#x27;指定时间</span></span><br><span class="line">v_date3 = <span class="built_in">CDate</span>(<span class="string">&quot;2021-06-01&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 2022-01-28</span></span><br><span class="line">Format(<span class="type">Date</span>, <span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line"><span class="comment">&#x27; 获取当天的年周数，格式为长格式，例如第一周显示为01</span></span><br><span class="line">v_week_num = WorksheetFunction.WeekNum(<span class="type">Date</span>, vbMonday)</span><br><span class="line">Format(v_week_num, <span class="string">&quot;00&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="日期处理"><a href="#日期处理" class="headerlink" title="日期处理"></a>日期处理</h2><ul><li>对日期进行处理，得到想要的目标日期</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 今天</span></span><br><span class="line">today = <span class="type">Date</span></span><br><span class="line"><span class="comment">&#x27; 昨天</span></span><br><span class="line">yesterday = today - <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 本周一 注：在Excel中，周日是一周的第一天</span></span><br><span class="line">monday = today - Weekday(today) + <span class="number">2</span></span><br><span class="line"><span class="comment">&#x27; 本月第一天</span></span><br><span class="line">monthFirstDay = lastMonday - Day(lastMonday) + <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 本月最后一天</span></span><br><span class="line">targetDate = DateSerial(Year(targetDate), Month(targetDate) + <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment">&#x27; 今天是一年的第几周，以周一作为本周的第一天</span></span><br><span class="line">weekNum = WorksheetFunction.weekNum(today, vbMonday)</span><br></pre></td></tr></table></figure><h2 id="日期比较"><a href="#日期比较" class="headerlink" title="日期比较"></a>日期比较</h2><ul><li>日期是可以直接比较和相减的，相减的间隔为时间的间隔。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 今天</span></span><br><span class="line">today = <span class="type">Date</span></span><br><span class="line"><span class="comment">&#x27; 昨天</span></span><br><span class="line">yesterday = today - <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 日期之间也可以比较和加减</span></span><br><span class="line">today &gt; yesterday  <span class="comment">&#x27; True</span></span><br><span class="line">today - yesterday  <span class="comment">&#x27; 1 ，相隔1一天</span></span><br></pre></td></tr></table></figure><h2 id="计算时间间隔"><a href="#计算时间间隔" class="headerlink" title="计算时间间隔"></a>计算时间间隔</h2><ul><li>DateDiff 函数可以用于计算时间的间隔。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> tt1()</span><br><span class="line">    <span class="keyword">Dim</span> d1, d2 <span class="keyword">As</span> <span class="type">Date</span></span><br><span class="line">    d1 = <span class="literal">#11/21/2021#</span></span><br><span class="line">    d2 = <span class="literal">#12/1/2022#</span></span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; (d2 - d1) &amp; <span class="string">&quot;天&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;d&quot;</span>, d1, d2) &amp; <span class="string">&quot;天&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;m&quot;</span>, d1, d2) &amp; <span class="string">&quot;月&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;yyyy&quot;</span>, d1, d2) &amp; <span class="string">&quot;年&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;q&quot;</span>, d1, d2) &amp; <span class="string">&quot;季&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;w&quot;</span>, d1, d2) &amp; <span class="string">&quot;周&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;h&quot;</span>, d1, d2) &amp; <span class="string">&quot;小时&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;n&quot;</span>, d1, d2) &amp; <span class="string">&quot;分种&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;s&quot;</span>, d1, d2) &amp; <span class="string">&quot;秒&quot;</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="计算耗时"><a href="#计算耗时" class="headerlink" title="计算耗时"></a>计算耗时</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">startTime = Time</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27; 业务数据处理</span></span><br><span class="line">MsgBox (<span class="string">&quot;运行此流程共耗时：&quot;</span> &amp; DateDiff(<span class="string">&quot;s&quot;</span>, startTime, Time) &amp; <span class="string">&quot;秒&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27; 后台打印使用的时间</span></span><br><span class="line">Debug.Print DateDiff(<span class="string">&quot;s&quot;</span>, startTime, Time) &amp; <span class="string">&quot;秒&quot;</span></span><br></pre></td></tr></table></figure><h1 id="vba日期和时间函数汇总和代码"><a href="#vba日期和时间函数汇总和代码" class="headerlink" title="vba日期和时间函数汇总和代码"></a>vba日期和时间函数汇总和代码</h1><h2 id="第一，vba日期和时间函数的基本用法"><a href="#第一，vba日期和时间函数的基本用法" class="headerlink" title="第一，vba日期和时间函数的基本用法"></a>第一，vba日期和时间函数的基本用法</h2><blockquote><p>Excel中vba日期函数和时间函数分别是DATE和TIME。<br>VBA提供了三个无参数函数：Date、Time、Now，分别返回当前电脑系统的日期、时间、日期+时间。<br>下面的代码我们以三个消息框来结合日期和时间函数，分别提示当前的日期、时间。</p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> vba时间和日期函数()</span><br><span class="line">    MsgBox <span class="type">Date</span></span><br><span class="line">    MsgBox Time</span><br><span class="line">    MsgBox Now</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="第二，使用vba日期和时间函数修改系统信息"><a href="#第二，使用vba日期和时间函数修改系统信息" class="headerlink" title="第二，使用vba日期和时间函数修改系统信息"></a>第二，使用vba日期和时间函数修改系统信息</h2><ul><li>下面这段代码将电脑右下角的日期和时间修改为2011年1月1日21:50:00。<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 修改时间和日期()</span><br><span class="line">  Time = <span class="string">&quot;21:50:00&quot;</span></span><br><span class="line">  <span class="type">Date</span> = <span class="string">&quot;2011年1月1日&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒"><a href="#第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒" class="headerlink" title="第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒"></a>第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> SmpYearHour()</span><br><span class="line">    <span class="comment">&#x27;以对话框显示当前日期的年、月、日</span></span><br><span class="line">    MsgBox <span class="string">&quot;当前日期：&quot;</span> &amp; <span class="type">Date</span> &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;年：&quot;</span> &amp; Year(<span class="type">Date</span>) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;月：&quot;</span> &amp; Month(<span class="type">Date</span>) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;日：&quot;</span> &amp; Day(<span class="type">Date</span>)</span><br><span class="line">    <span class="comment">&#x27;以对话框显示当前时间的时、分、秒</span></span><br><span class="line">    MsgBox <span class="string">&quot;当前时间：&quot;</span> &amp; Time &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;时：&quot;</span> &amp; Hour(Time) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;分：&quot;</span> &amp; Minute(Time) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;秒：&quot;</span> &amp; Second(Time)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="第四，其余的vba日期和时间函数列表"><a href="#第四，其余的vba日期和时间函数列表" class="headerlink" title="第四，其余的vba日期和时间函数列表"></a>第四，其余的vba日期和时间函数列表</h2><p>| 函数  |  说明 |<br>| —- | —- |<br>| Timer | 返回一个 Single，代表从午夜开始到现在经过的秒数。     |<br>| TimeSerial(hour, minute, second) | 返回一个 Variant (Date)，包含具有具体时、分、秒的时间。     |<br>| DateDiff(interval, date1, date2[, firstdayofweek[, firstweekofyear]]) | 返回 Variant (Long) 的值，表示两个指定日期间的时间间隔数目。     |<br>| Second(time) | 返回一个 Variant (Integer)，其值为 0 到 59 之间的整数，表示一分钟之中的某个秒。     |<br>| Minute(time) | 返回一个 Variant (Integer)，其值为 0 到 59 之间的整数，表示一小时中的某分钟。     |<br>| Hour(time) | 返回一个 Variant (Integer)，其值为 0 到 23 之间的整数，表示一天之中的某一钟点。     |<br>| Day(date) | 返回一个 Variant (Integer)，其值为 1 到 31 之间的整数，表示一个月中的某一日。     |<br>| Month(date) |  返回一个 Variant (Integer)，其值为 1 到 12 之间的整数，表示一年中的某月。    |<br>| Year(date) |  返回 Variant (Integer)，包含表示年份的整数。    |<br>| Weekday(date, [firstdayofweek]) |  返回一个 Variant (Integer)，包含一个整数，代表某个日期是星期几    |</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/m1090760001/article/details/122464601">VBA实战(10) - 日期处理汇总</a></li><li><a href="https://blog.csdn.net/w57w57w57/article/details/43772081">vba日期和时间函数汇总和代码</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 日期处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA字符串</title>
      <link href="/posts/1296505440.html"/>
      <url>/posts/1296505440.html</url>
      
        <content type="html"><![CDATA[<ul><li>字符串是一个字符序列，可以由字母，数字，特殊字符或全部字符组成。 如果一个变量被包含在双引号””中，则被认为是一个字符串。</li></ul><p><strong>语法：</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable_name = <span class="string">&quot;this is a string&quot;</span></span><br></pre></td></tr></table></figure><p><strong>简单示例：</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;string&quot;</span>   <span class="comment">&#x27; Only Alphabets</span></span><br><span class="line">str2 = <span class="string">&quot;132.45&quot;</span>   <span class="comment">&#x27; Only Numbers</span></span><br><span class="line">str3 = <span class="string">&quot;!@#$;*&quot;</span>  <span class="comment">&#x27; Only Special Characters</span></span><br><span class="line">Str4 = <span class="string">&quot;Asc23@#&quot;</span>  <span class="comment">&#x27; Has all the above</span></span><br></pre></td></tr></table></figure><p><strong>字符串函数:</strong></p><p>预定义的VBA字符串函数可以帮助开发人员非常有效地处理字符串。以下是VBA中支持的字符串的方法。请点击每个方法来详细了解。</p><table><thead><tr><th>编号</th><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><a href="http://www.yiibai.com/vba/vba_instr_function.html">InStr</a></td><td>返回指定子字符串的第一个匹配项。从左到右搜索。</td></tr><tr><td>2</td><td><a href="http://www.yiibai.com/vba/vba_instrrev_function.html">InstrRev</a></td><td>返回指定子字符串的第一个匹配项。从右到左搜索。</td></tr><tr><td>3</td><td><a href="http://www.yiibai.com/vba/vba_lcase_function.html">Lcase</a></td><td>返回指定字符串的小写字母。</td></tr><tr><td>4</td><td><a href="http://www.yiibai.com/vba/vba_ucase_function.html">Ucase</a></td><td>返回指定字符串转为大写字母的形式。</td></tr><tr><td>5</td><td><a href="http://www.yiibai.com/vba/vba_left_function.html">Left</a></td><td>返回在左侧指定数量字符的字符串。</td></tr><tr><td>6</td><td><a href="http://www.yiibai.com/vba/vba_right_function.html">Right</a></td><td>返回在右侧指定数量字符的字符串</td></tr><tr><td>7</td><td><a href="http://www.yiibai.com/vba/vba_mid_function.html">Mid</a></td><td>根据指定的参数从字符串中返回特定数量的字符。</td></tr><tr><td>8</td><td><a href="http://www.yiibai.com/vba/vba_ltrim_function.html">Ltrim</a></td><td>删除指定字符串左侧的空格后返回一个字符串。</td></tr><tr><td>9</td><td><a href="http://www.yiibai.com/vba/vba_rtrim_function.html">Rtrim</a></td><td>删除指定字符串右侧的空格后返回一个字符串。</td></tr><tr><td>10</td><td><a href="http://www.yiibai.com/vba/vba_trim_function.html">Trim</a></td><td>删除开头和结尾空格后返回一个字符串值。</td></tr><tr><td>11</td><td><a href="http://www.yiibai.com/vba/vba_len_function.html">Len</a></td><td>返回给定字符串的长度。</td></tr><tr><td>12</td><td><a href="http://www.yiibai.com/vba/vba_replace_function.html">Replace</a></td><td>用另一个字符串替换字符串后返回字符串。</td></tr><tr><td>13</td><td><a href="http://www.yiibai.com/vba/vba_space_function.html">Space</a></td><td>用指定数量的空格填充字符串。</td></tr><tr><td>14</td><td><a href="http://www.yiibai.com/vba/vba_strcomp_function.html">StrComp</a></td><td>比较两个指定的字符串后返回一个整数值。</td></tr><tr><td>15</td><td><a href="http://www.yiibai.com/vba/vba_string_function.html">String</a></td><td>返回指定次数的字符的字符串。</td></tr><tr><td>16</td><td><a href="http://www.yiibai.com/vba/vba_strreverse_function.html">StrReverse</a></td><td>反转给定字符串的字符序列后，返回一个字符串。</td></tr></tbody></table><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.yiibai.com/vba/vba_strings.html">VBA字符串)</a></li><li><a href="https://www.yiibai.com/vba">VBA教程</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA数据处理之一(字符串)</title>
      <link href="/posts/3177018411.html"/>
      <url>/posts/3177018411.html</url>
      
        <content type="html"><![CDATA[<p>假设有字符串：“world2q3423j;;3254&lt;sflskjdf”<br>现在要获取每个字符到myChars数组，得到这样的结果：</p><p>myChars(1) &#x3D; w<br>myChars(2) &#x3D; o</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> aaa()</span><br><span class="line"><span class="keyword">Dim</span> myChars()</span><br><span class="line">abc = <span class="string">&quot;world2q3423j;;3254&lt;sflskjdf&quot;</span></span><br><span class="line"><span class="keyword">ReDim</span> myChars(<span class="number">1</span> <span class="keyword">To</span> Len(abc))</span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> Len(abc)</span><br><span class="line">myChars(n) = <span class="keyword">Mid</span>(abc, n, <span class="number">1</span>)</span><br><span class="line">Cells(n, <span class="number">1</span>) = myChars(n)</span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/304450382179355164.html">VBA: 如何最好地获取一个字符串里的每个字符？)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 数据处理 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA窗体使用图片</title>
      <link href="/posts/2635706068.html"/>
      <url>/posts/2635706068.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>今天学习了一个窗体image控件，发现可以实现客户资料的加载显示功能，目前学到的一个是加载(.jpg)格式类图片，具体我想可以在文件夹中加载一些客户产品图片、客户营业执照、员工照片等强调可视化内容的资料。</strong></p></blockquote><ul><li>显示效果如图：</li></ul><img src="https://pics1.baidu.com/feed/810a19d8bc3eb135a0c6a2ca40babddbfc1f44ee.png?token=af0e2983d672fca858973fc571d10818&s=0020DD1417664F0DC875F850030040F9"><p><strong>代码很简单，只有一句话:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> TextBox1_Change()</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">Image1.Picture = LoadPicture(ThisWorkbook.Path &amp; <span class="string">&quot;\&quot;</span> &amp; TextBox1.<span class="keyword">Text</span> &amp; <span class="string">&quot;.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line">Image1.PictureSizeMode = fmPictureSizeModeZoom</span><br><span class="line"></span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://baijiahao.baidu.com/s?id=1692279467271579081&wfr=spider&for=pc">VBA练习七(窗体图片加载)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA判断活动窗体</title>
      <link href="/posts/462997477.html"/>
      <url>/posts/462997477.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>其他思路：获得活动窗口句柄，进程外用GetForgroundWindow，进程内用GetActiveWindow</strong></p></blockquote><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> FormIsActive(sName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> VBA.UserForms.Count - <span class="number">1</span></span><br><span class="line">        FormIsActive = UserForms(i).Name = sName</span><br><span class="line">        <span class="keyword">If</span> FormIsActive <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserfrom()</span><br><span class="line">    Userform1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;测试: 运行LoadUserfrom前是否得到False,而运行LoadUserfrom后是否得到True的结果?</span></span><br><span class="line"><span class="keyword">Sub</span> Test()</span><br><span class="line">    MsgBox FormIsActive(<span class="string">&quot;UserForm1&quot;</span>), <span class="number">64</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h1 id="方法二-改进一"><a href="#方法二-改进一" class="headerlink" title="方法二(改进一)"></a>方法二(改进一)</h1><p>Take a look at attached file and play with the three buttons.</p><p>Let me know if you still have question.</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> FormIsActive(sName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UserForms.Count - <span class="number">1</span></span><br><span class="line">        FormIsActive = UserForms(i).Name = sName</span><br><span class="line">        <span class="keyword">If</span> FormIsActive <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserform1()</span><br><span class="line"><span class="keyword">If</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm2 is active so we&#x27;re unloading it NOW!&quot;</span></span><br><span class="line">    Unload UserForm2</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    UserForm1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserform2()</span><br><span class="line">    UserForm2.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> Test()</span><br><span class="line"><span class="keyword">If</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="built_in">And</span> <span class="built_in">Not</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm1 is Active! UserForm2 is not!&quot;</span></span><br><span class="line">   <span class="keyword">ElseIf</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="built_in">And</span> <span class="built_in">Not</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm2 is Active! UserForm1 is not!&quot;</span></span><br><span class="line">   <span class="keyword">ElseIf</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="built_in">And</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm1 and UserForm2 are both Active!&quot;</span></span><br><span class="line">   <span class="keyword">Else</span></span><br><span class="line">    MsgBox <span class="string">&quot;No active userform!&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p><a href="http://www.excelpx.com/forum.php?mod=attachment&aid=MjY0MTMwfDE1NDQzZWFhfDE2NTU4MDEwMjV8MHwyOTUxOTY=">UserForm.zip</a></p><h1 id="最后方法"><a href="#最后方法" class="headerlink" title="最后方法"></a>最后方法</h1><blockquote><p>我现在用一个公共变量，就可以知道是否有窗体是活动</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://www.excelpx.com/thread-295196-1-1.html">【求助】怎样判断一个窗体是否在活动状态？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 窗体活动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA实现进度条显示</title>
      <link href="/posts/585123975.html"/>
      <url>/posts/585123975.html</url>
      
        <content type="html"><![CDATA[<h1 id="窗体中的进度条控件"><a href="#窗体中的进度条控件" class="headerlink" title="窗体中的进度条控件"></a>窗体中的进度条控件</h1><blockquote><p>工具箱默认情况下没有进度条控件，需在“工具”-&gt;“附加控件”里面添加Microsoft ProgressBar Control,version 6.0，即可在工具箱里面看到进度条控件。</p></blockquote><ol><li>添加进度条控件</li></ol><img src="https://img-blog.csdn.net/20160323194238114?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><ol start="2"><li>创建一个窗体UserForm1，添加一个进度条ProgressBar1和一个标签Label1，即可可以完成VBA进度条设计。</li></ol><ul><li>eg：经常在一个循环运算中用到进度条，此时可以将循环运算在窗体UserForm1里面进行，即可将循环变量嵌入到ProgressBar1里面进行精准进度条设计。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Activate()</span><br><span class="line"><span class="keyword">Dim</span> n <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">n = <span class="number">3000</span></span><br><span class="line">ProgressBar1.Min = <span class="number">1</span></span><br><span class="line">ProgressBar1.Max = n</span><br><span class="line">Label1.Caption = <span class="string">&quot;0%&quot;</span></span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> <span class="number">3000</span></span><br><span class="line">ProgressBar1.Value = Str(n)</span><br><span class="line">Label1.Caption = Round(n / ProgressBar1.Max, <span class="number">2</span>) * <span class="number">100</span> &amp; <span class="string">&quot;%&quot;</span></span><br><span class="line">DoEvents</span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line"><span class="comment">&#x27;Unload UserForm1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdn.net/20160323194829476?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"># 在 Excel 下边显示进度条</span><br><span class="line"></span><br><span class="line">- vba处理execl数据时，如果数据量比较大时，execl会执行时间较长，并且不容易看出来已执行的进度。</span><br><span class="line">应用execl的进度条，让执行进度更加一目了然。</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdnimg.cn/0a4482aa87054ba7a8185e3003e937de.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6I-y5pavRmFjZQ==,size_12,color_FFFFFF,t_70,g_se,x_16&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">**进度条代码:**</span><br><span class="line"></span><br><span class="line">```vb</span><br><span class="line"><span class="keyword">Function</span> GetProgress(curValue, maxValue)</span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Single</span>, j <span class="keyword">As</span> <span class="type">Integer</span>, s <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">i = maxValue / <span class="number">20</span></span><br><span class="line">j = curValue / i</span><br><span class="line"> </span><br><span class="line"><span class="keyword">For</span> m = <span class="number">1</span> <span class="keyword">To</span> j</span><br><span class="line">    s = s &amp; <span class="string">&quot;■&quot;</span></span><br><span class="line"><span class="keyword">Next</span> m</span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> <span class="number">20</span> - j</span><br><span class="line">    s = s &amp; <span class="string">&quot;□&quot;</span></span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line">GetProgress = s &amp; FormatNumber(curValue / maxValue * <span class="number">100</span>, <span class="number">2</span>) &amp; <span class="string">&quot;%&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><blockquote><p>调用代码</p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Application.StatusBar = GetProgress(i, maxRow)</span><br></pre></td></tr></table></figure><p>参数可以根据业务情况，自行传入。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/Gordennizaicunzai/article/details/50965964">VBA进度条</a></li><li><a href="https://blog.csdn.net/m0_60196931/article/details/122339473">VBA 处理数据的进度条实现</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 控件 </tag>
            
            <tag> VBA </tag>
            
            <tag> ProgressBar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA 鼠标浮上命令按钮有文字提示(ControlTipText)</title>
      <link href="/posts/3346834382.html"/>
      <url>/posts/3346834382.html</url>
      
        <content type="html"><![CDATA[<p>eg.假设 某一个按钮控件名为 commandbutton1,想做到 鼠标悬停在该控件上时，显示提示，提示内容为该控件的名称，可以用下列语句<br>commandbutton1.controltiptext &#x3D; “按钮名称为commandbutton1”</p><ul><li>以下来自excel的帮助文件</li></ul><hr><p>ControlTipText 属性<br>指定当用户将鼠标指针放在控件上但未按下时所显示的文本。<br>语法<br>object.ControlTipText [&#x3D; String]<br>ControlTipText 属性的语法有以下几个成分：<br>成分<br>object 必需。一个有效对象。<br>String 可选。当用户将鼠标指针放在控件上时所显示的文本。<br>说明<br>ControlTipText 属性可为用户提供有关当前运行的窗体中某一控件的提示。该属性可在设计时间设定，但仅在运行时间由控件显示。<br>ControlTipText 的默认值为空字符串。此时，该控件将无任何提示。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/2011574656656416308.html">excel VBA 鼠标浮上命令按钮有文字提示</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 函数 </tag>
            
            <tag> ControlTipText </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA函数之一(Format格式化字符串)</title>
      <link href="/posts/4237796259.html"/>
      <url>/posts/4237796259.html</url>
      
        <content type="html"><![CDATA[<p>Format(值,格式(可选参数))</p><h1 id="一、数字格式："><a href="#一、数字格式：" class="headerlink" title="一、数字格式："></a>一、数字格式：</h1><ol><li><p>General Number：普通数字，可以用来去掉千位分隔号和无效 0 。<br>如：Format(“1,234,567.80”, “General Number”)&#x3D;”1234567.8”</p></li><li><p>Currency：货币类型，可添加千位分隔号和货币符号，保留两位小数点。<br>如：Format(1234567, “Currency”)&#x3D;”¥1,234,567.00”</p></li><li><p>Fixed：格式为带两位小数的数字。<br>如：Format(“123456”, “Fixed”)&#x3D;123456.00</p></li><li><p>Standard：标准，即带千位分隔号和两位小数。<br>如：Format(“123456”, “Standard”)&#x3D;123,456.00</p></li><li><p>Percent：带两位小数点的百分数。<br>如：Format(“123456”, “Percent”)&#x3D;12345600.00</p></li><li><p>Scientific：科学记数法。<br>如：Format(“1234567”, “Scientific”)&#x3D;1.23E+06</p></li><li><p>Yes&#x2F;No：当数值为非 0 数字时返回 Yes ，否则返回 No 。<br>“如：Format(-3.14, “Yes&#x2F;No”)&#x3D;”Yes”<br>Format(0, “Yes&#x2F;No”)&#x3D;”No”</p></li><li><p>True&#x2F;False：当数值为非 0 数字时返回 True ，否则返回 False 。<br>与第7点类似，这里不再举例。</p></li><li><p>On&#x2F;Off：当数值为非 0 数字时返回 On ，否则返回 Off 。<br>与第7点类似，这里不再举例。</p></li><li><p>“”或省略：返回原值，但去除了小数点前后的无效 0 。<br>如：Format(“0.1030”, “”)&#x3D;”.103”</p></li><li><p>0：占位格式化，不足位时补足 0 。<br>“如：Format(123, “0000”)&#x3D;”0123”<br>Format$(12.3, “0.00”)&#x3D;”12.30”</p></li><li><p>#：占位格式化，不足位时不补足 0 。<br>如：Format(123, “####”)&#x3D;123</p></li><li><p>%：转化为百分数，一个%代表乘以 100 。<br>如：Format(1.23, “0.00%”)&#x3D;123.00%<br>Format(1.23, “0.00%%”)&#x3D;12300.00%%</p></li><li><p>：强制显示某字符。<br>如：Format$(12.34, “RMB .00”)&#x3D;”RMB 12.34”</p></li><li><p>;(分号)：分段显示不同格式<br>比如要把正数显示为“正”，负数显示为“负”，0显示为“零”，参数为”正;负;零”<br>如：Format$(123, “正;负;零”)&#x3D;”正”<br>第1段为正数格式，第2段为负数格式，第3段为0格式。</p></li></ol><h1 id="二、日期和时间格式："><a href="#二、日期和时间格式：" class="headerlink" title="二、日期和时间格式："></a>二、日期和时间格式：</h1><ol><li>固定格式参数<br>General Date：基本类型<br>如：Format(“2010-5-1 9:8:5”, “General Date”)&#x3D;”2010&#x2F;5&#x2F;1 9:08:05”<br>Long Date：操作系统定义的长日期<br>如：Format(“2010-5-1 9:8:5”, “Long Date”)&#x3D;2010年5月1日<br>Medium Date：中日期<br>如：Format(“2010-5-1 9:8:5”, “Medium Date”)&#x3D;10-05-01<br>Short Date：操作系统定义的短日期<br>如：Format(“2010-5-1 9:8:5”, “Short Date”)&#x3D;2010-5-1<br>Long Time：操作系统定义的长时间<br>如：Format(“2010-5-1 9:8:5”, “Long Time”)&#x3D;9:08:05<br>Medium Time:带AM&#x2F;PM(上午&#x2F;下午)的12小时制，不带秒<br>如：Format(“2010-5-1 9:8:5”, “Medium Time”)&#x3D;09:08 上午<br>Short Time：24时制的时间，不带秒<br>如：Format(“2010-5-1 9:8:5”, “Short Time”)&#x3D;09:08</li><li>自定义格式<br>C：格式化为国标的日期和时间<br>如：Format(“2010-5-1 9:8:5”, “c”)&#x3D;2010&#x2F;5&#x2F;1 9:08:05<br>y:一年中的第几天(1-366)<br>如：Format(“2010-5-1 9:8:5”, “y”)&#x3D;121<br>yy：两位数的年份(00-99)<br>如：Format(“2010-5-1 9:8:5”, “yy”)&#x3D;10<br>yyy：上面的 yy 与 y 结合在一起<br>“如：Format(“2010-5-1 9:8:5”, “yyy”)&#x3D;10121<br>Format(“2010-5-1 9:8:5”, “yy年第y天”)&#x3D;10年第121天<br>yyyy：四位数的年份(0100-9999)<br>如：Format(“2010-5-1 9:8:5”, “yyyy”)&#x3D;2010<br>d：一个月中的第几天(1-31)<br>如：Format(“2010-5-1 9:8:5”, “d”)&#x3D;1<br>dd：与 d 相同，但不足两位时补足 0<br>如：Format(“2010-5-1 9:8:5”, “dd”)&#x3D;01<br>ddd：三个英文字母表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “ddd”)&#x3D;”Sat”<br>dddd：英文表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “dddd”)&#x3D;”Saturday”<br>ddddd：显示标准日期<br>如：Format(“2010-5-1 9:8:5”, “ddddd”)&#x3D;2010&#x2F;5&#x2F;1<br>dddddd：长日期<br>如：Format(“2010-5-1 9:8:5”, “dddddd”)&#x3D;2010年5月1日<br>w：一个星期中的第几天(始于周日，周日为1)<br>如：Format(“2010-5-1 9:8:5”, “w”)&#x3D;7<br>ww：一年中的第几周<br>如：Format(“2010-5-1 9:8:5”, “ww”)&#x3D;18<br>m：月份数(当用于时间时，也可以表时为分钟)<br>如：Format(“2010-5-1 9:8:5”, “m”)&#x3D;5<br>mm：当小于10时带前导0的月数(当用于时间时，也可以表示为两位数的分钟数)<br>如：Format(“2010-5-1 9:8:5”, “mm”)&#x3D;05<br>mmm：三个英文字母表示的月份数<br>如：Format(“2010-1-1 9:8:5”, “mmm”)&#x3D;”Jan”<br>mmmm：英文表示的月份数<br>如：Format(“2010-1-1 9:8:5”, “mmmm”)&#x3D;”January”<br>q：一年中的第几季(1-4)<br>如：Format(“2010-5-1 9:8:5”, “q”)&#x3D;2<br>aaa：中文表示的周几<br>如：Format(“2010-5-1 9:8:5”, “aaa”)&#x3D;周六<br>aaaa：中文表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “aaaa”)&#x3D;星期六<br>h：小时数(0-23)<br>如：Format(“2010-5-1 9:8:5”, “h”)&#x3D;9<br>h：两位数表示的小时数<br>如：Format(“2010-5-1 9:8:5”, “hh”)&#x3D;09<br>n：分钟数(0-59)<br>如：Format(“2010-5-1 9:8:5”, “n”)&#x3D;8<br>nn：两位数表示的分钟数(00-59)<br>如：Format(“2010-5-1 9:8:5”, “nn”)&#x3D;08<br>s：秒数(0-59)<br>如：Format(“2010-5-1 9:8:5”, “s”)&#x3D;5<br>ss：两位数表示的秒数(00-59)<br>如：Format(“2010-5-1 9:8:5”, “ss”)&#x3D;05<br>ttttt:标准时间，当小时数小于10时不带0，与 h:mm:ss 或 h:nn:ss 相同<br>如：Format(“2010-5-1 9:8:5”, “ttttt”)&#x3D;9:08:05<br>AM&#x2F;PM：显示当前为AM或PM<br>如：Format(“2010-5-1 11:59:59”, “AM&#x2F;PM”)&#x3D;AM<br>Format(“2010-5-1 12:0:0”, “AM&#x2F;PM”)&#x3D;PM<br>A&#x2F;P：显示当前为A或P<br>与 AM&#x2F;PM 一样，这里不再举例。<br>说明：<br>可以多种格式联合使用，如：<br>Format(“2010-5-1 9:8:5”, “dddddd aaaa”)&#x3D;2010年5月1日 星期六</li></ol><h1 id="三、文本格式"><a href="#三、文本格式" class="headerlink" title="三、文本格式"></a>三、文本格式</h1><p>@：匹配位置插入格式化文本，如：</p><p>在”abcde”前插入文本”X”，代码为：Format(“abcde”, “X@”)&#x3D;Xabcde</p><p>在”abcde”第1位字符后面插入文本”X”，代码为：Format(“abcde”, “@X”)&#x3D;aXbcde</p><p>在”abcde”第2位字符后面插入文本”X”，代码为：Format(“abcde”, “@@X”)&#x3D;abXcde</p><p>在”abcde”第3位字符后面插入文本”X”，代码为：Format(“abcde”, “@@@X”)&#x3D;abcXde</p><p>当点位符@比原文本字符串多时，刚在相应位置上添加空格，如：</p><p>Format(“abc”, “X@@@@”)&#x3D;”X abc”</p><p>Format(“abc”, “X@@@@@”)&#x3D;”X  abc”</p><p>Format(“t”, “@@a@”)&#x3D;”  at”(空格空格at)</p><p>与!配合可从后面截取一段文本，如：</p><p>截取”abcde”后面1个字符文本，代码为：Format(“abcde”, “!@”)&#x3D;e</p><p>截取”abcde”后面2个字符文本，代码为：Format(“abcde”, “!@@”)&#x3D;de</p><p>截取”abcde”后面3个字符文本，代码为：Format(“abcde”, “!@@@”)&#x3D;cde</p><p>截取”abcde”后面两位，并在前面添加”XY”，代码为：Format(“abcde”, “!XY@@”)&#x3D;Xyde</p><p>&amp;：字符占位符，与@基本相同，这里不再赘述。</p><p>如：Format$(“I Love You”, “</p><blockquote><p>：强制将所有字符以大写格式显示。</p></blockquote><p>如：Format$(“I Love You”, “&gt;”)&#x3D;I LOVE YOU</p><p>转自：<a href="http://www.cnblogs.com/zhengyuxin/articles/1932724.html">http://www.cnblogs.com/zhengyuxin/articles/1932724.html</a></p><hr><p>Format[$] ( expr [ , fmt ] )</p><p>format 返回变体型</p><p>format$ 强制返回为文本</p><hr><p>数字类型的格式化</p><hr><p>固定格式参数：</p><p>General Number 普通数字，如可以用来去掉千位分隔号</p><p>format$(“100,123.12”,”General Number”) 返回值 100123.12</p><p>Currency 货币类型，可添加千位分隔号和货币符号</p><p>format$(“100123.12”,”Currency”) 返回值 ￥100,123.12</p><p>Fixed 格式为带两位小数的数字</p><p>format$(“100123”,”Fixed”) 返回值 100123.00</p><p>Standard 标准，即带千位分隔号和两位小数</p><p>format$(“100123”,”Standard”) 返回值 100,123.00</p><p>Percent 百分数</p><p>format$(“100123”,”Percent”) 返回值 10012300.00%</p><p>Scientific 科学记数法</p><p>format$(“100123”,”Scientific”) 返回值 1.00E+05</p><p>Yes&#x2F;No 当值为0时返回 NO,否则返回 YES</p><p>format$(“100123”,”Yes&#x2F;No”) 返回值 Yes</p><p>True&#x2F;False 当值为0时返回 False,否则返回 True</p><p>format$(“100123”,”True&#x2F;False”) 返回值 True</p><p>On&#x2F;Off 当值为0时返回 Off,否则返回 On</p><p>format$(“100123”,”Yes&#x2F;No”) 返回值 On</p><p>自定义格式参数</p><p>“” 不进行格式化 返回值 原值</p><p>0 占位格式化，不足补0</p><p>format$(“100123”,”0000000”) 返回值 0100123</p><h1 id="占位格式化，不足时不补0"><a href="#占位格式化，不足时不补0" class="headerlink" title="占位格式化，不足时不补0"></a>占位格式化，不足时不补0</h1><p>format$(“100123”,”#######”) 返回值 100123</p><p>. 强制显示小数点</p><p>format$(“100123.12”,”.000”) 返回值 100123.120</p><p>% 转化为百分数，一个%代表乘以100</p><p>format$(“10.23”,”0.00%”) 返回值 1023.00%</p><p>format$(“10.23”,”0.00%%”) 返回值 102300.00%%</p><p>, 以千为单位格化</p><p>format$(“10.23”,”,”) 返回值 0</p><p>format$(“10010.23”,”,”) 返回值 10</p><p>format$(“10010.23”,”,0.00”) 返回值 10.01</p><p>E- E+ e- e+ 显示为科学记数(要注意格式语句，否则会和E的其它含义相混)</p><p>Format$(12.5,”0.00E+00”) 返回值 1.25E+01</p><p>$ 强制显示货币符号</p><p>format$(“10.23”,”{threadcontent}.00”) 返回值 ￥10.23</p><ul><li><ul><li>( ) space 按位置显示本样</li></ul></li></ul><p>Format$(“1234.56”,”-(0.00)”) 返回值 -(1234.56)</p><p>转义符,显示出特殊符号</p><p>Format$(“1234.56”,”#.00”) 返回值 #1234.56</p><p>“ABC” 显示双引号 (“ “) 之内的字符串。如在代码中想在 format 中包含一个字符串，必须用 Chr(34) 将文本括起来(34 为双引号 (“))</p><p>Format$(123.45,”TTT”) 返回值 TTT</p><p>注：当双引号中的文本包含特殊的参数符号如e,要使用转义符””，否则会按e的作用显示</p><p>; 类似多目运算符的作用。</p><p>当共有 四 部分时，</p><p>当大于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>当等于0时按第三部分进行格式化，</p><p>当为null值时，按第四部分进行格式化。如：</p><p>Format$(0,”0.00;负数;零;空”) 返回值 零</p><p>当共有 三 部分时，</p><p>当大于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>当等于0时按第三部分进行格式化，如：</p><p>Format$(-10,”0.00;ttt;零”) 返回值 ttt</p><p>当共有 两 部分时，</p><p>当大于或等于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>Format$(-123,”0.00;abc”) 返回值 abc</p><p>Format$(123,”0.00;abc”) 返回值 123.00</p><p>当共有 一 部分时，按分号左边进行格式化</p><hr><p>日期类型的格式化</p><hr><p>注意：在中文操作系统中，系统自动将月份输为如：五月，而非 May</p><p>固定格式参数</p><p>General Date 基本类型</p><p>Format(Date,”YYYY年MM月DD日”)</p><p>‘M 个位月只显示一位，</p><p>‘MM 显示两位月，</p><p>‘MMM显示英文月简称,</p><p>‘MMMM显示英文全名</p><p>Format$(Now,”General Date”) 返回值 2006-5-25 14:56:15</p><p>Long Date 操作系统定义的长日期</p><p>Format$(Now,”Long Date”) 返回值 2006年5月25日</p><p>Medium Date 中日期(yy&#x2F;mmm&#x2F;dd)</p><p>Format$(Now,”Medium Date”) 返回值 06-5月-25</p><p>Short Date 操作系统定义的短日期</p><p>Format$(Now,”Short Date”) 返回值 2006-5-25</p><p>Long Time 操作系统定义的长时间</p><p>Format$(Now,”Long Time”) 返回值 15:06:36</p><p>Medium Time 带AM&#x2F;PM的12小时制，不带秒</p><p>Format$(Now,”Medium Time”) 返回值 03:08 PM</p><p>Short Time 24时制的时间，不带秒</p><p>Format$(Now,”Short Time”) 返回值 15:08</p><p>自定义格式参数</p><p>: 用来标识时间字符的间隔</p><p>Format$(Time(),”hh:nn”) 返回值 15:25</p><p>&#x2F; 用来标识日期字符的间隔</p><p>Format$(now,”yyyy&#x2F;mm&#x2F;dd”) 返回值 2006-05-25</p><p>c 格式化为国标的日期和时间</p><p>Format$(Now,”c”) 返回值 2006-5-25 14:56:15</p><p>y 一年中的第几天</p><p>Format$(Now,”y”) 返回值 145</p><p>d 一个月中的第几天(1-366)</p><p>Format$(Now,”d”) 返回值 25</p><p>dd 当小于10时前面带0的天数(01-31)</p><p>Format$(“2006-1-7”,”dd”) 返回值 07</p><p>ddd 周几</p><p>Format$(Now,”ddd”) 返回值 周四</p><p>dddd 星期几</p><p>Format$(Now,”dddd”) 返回值 星期四</p><p>ddddd 显示标准日期</p><p>Format$(Now,”ddddd”) 返回值 2006-05-25</p><p>dddddd 长日期</p><p>Format$(Now,”dddddd”) 返回值 2006年5月25日</p><p>w 一个星期中的第几天</p><p>Format$(Now,”w”) 返回值 5</p><p>ww 一年中的第几周</p><p>Format$(Now,”ww”) 返回值 21</p><p>m 月数(注：当用于时间时，也可以表时为分钟)</p><p>Format$(Now,”m”) 返回值 5</p><p>Format$(Now,”h:m”) 返回值 16:11</p><p>mm 当小于10时前面带0的月数(注：当用于时间时，也可以表时为带0的分钟)</p><p>Format$(Now,”m”) 返回值 05</p><p>Format$(Now,”hh:mm”) 返回值 16:09</p><p>mmm 月份</p><p>Format$(Now,”mmm”) 返回值 五月</p><p>q 一年中的第几季(1-4)</p><p>Format$(Now,”q”) 返回值 2</p><p>yy 两位数的年份(00-99)</p><p>Format$(Now,”yy”) 返回值 06</p><p>yyyy 四位数的年份(0100-9999)</p><p>Format$(Now,”yyyy”) 返回值 2006</p><p>h 一天中的第N小时(0-23)</p><p>Format$(Now,”h”) 返回值 16</p><p>hh 当小于10时带0的小时数(00-23)</p><p>Format$(“7:30:28”,”hh”) 返回值 07</p><p>n 一小时的分钟数(0-59)</p><p>Format$(“7:30:28”,”n”) 返回值 30</p><p>nn 当小于10时带0的分钟数(00-59)</p><p>Format$(“7:3:28”,”n”) 返回值 03</p><p>s 一分钟中的秒数(0-59)</p><p>Format$(“7:30:8”,”s”) 返回值 8</p><p>ss 当小于10时带0的分钟数(00-59)</p><p>Format$(“7:3:8”,”ss”) 返回值 08</p><p>ttttt 标准时间，小时数当小于10时不带0，与h:mm:ss相同</p><p>Format$(“7:3:28”,”ttttt”) 返回值 7:03:28</p><p>AM&#x2F;PM 显示当前为AM或为PM</p><p>Format$(Now,”AM&#x2F;PM”) 返回值 PM</p><p>A&#x2F;P 显示当前为A或为P</p><p>Format$(Now,”A&#x2F;P”) 返回值 P</p><p>AMPM 对0至2359的数值进行判断是AM还是PM，可以看作是同等于对00:00至23:59的数字进行判断，如1000可以看作是10:00。</p><p>Format$(1000,”AMPM”) 返回值 AM</p><p>联合格式化</p><p>m&#x2F;d&#x2F;yy Format$(Now,”m&#x2F;d&#x2F;yy”) 返回值 5-25-06</p><p>d-mmm-yy Format$(Now,”d-mmm-yy”) 返回值 25-5月-06</p><p>d-mmmm Format$(Now,”d-mmmm”) 返回值 25-五月</p><p>mmmm-yy Format$(Now,”mmmm-yy”) 返回值 五月-06</p><p>hh:mm AM&#x2F;PM Format$(Now,”hh:mm AM&#x2F;PM”) 返回值 04:50 PM</p><p>h:mm:ss a&#x2F;p Format$(Now,”h:mm:ss a&#x2F;p”) 返回值 4:51:38 p</p><p>h:mm Format$(Now,”h:mm”) 返回值 16:51</p><p>h:mm:ss Format$(Now,”h:mm:ss”) 返回值 16:51:38</p><p>m&#x2F;d&#x2F;yy h:mm Format$(Now,”m&#x2F;d&#x2F;yy h:mm”) 返回值 5-25-06 16:54</p><hr><p>文本类型的格式化</p><hr><p>; 当两部分时，则第一部分为非空格式化，第二部分为null值或空值的格式化表达式</p><p>@ 匹配位置插入格式化文本，占位位置不存在时，显示空白(空字符串)</p><p>只有一个@符号时，是在最后面加上格式化文本</p><p>Format$(“CHIN”,”@a”) 返回值 CHINa</p><p>有多个@占位符，是按从右至左匹配，并在相应的位置上显示格式化文本</p><p>Format$(“CHIN”,”@a@@”) 返回值 CHaIN</p><p>当与 ! 配合时，则变为从左至右匹配</p><p>Format$(“CHIN”,”[email&#x3D;!@a]!@a[&#x2F;email]@@”) 返回值 CaHIN</p><p>当占位符比原文本字符串多时，刚在相应位置上添加空格</p><p>Format$(“C”,”@@a@”) 返回值 空白空白aC</p><p>&amp; 字符占位符。除在当占位位置不存在时，不显示外，其余均与@相同</p><p>当占位符比原文本字符串多时，刚在相应位置上添加空格</p><p>Format$(“C”,”&amp;&amp;a&amp;”) 返回值 aC</p><p>&lt; 强制小写。将所有字符以小写格式显示。</p><p>Format$(“I love you”,”</p><blockquote><p>强制大写。将所有字符以大写格式显示。</p></blockquote><p>Format$(“I love you”,”&gt;”) 返回值 I LOVE YOU</p><p>! 强制由左而右填充字符占位符。缺省值是由右而左填充字符占位符。</p><p>Format$(“CHIN”,”[email&#x3D;!@a]!@a[&#x2F;email]@@”) 返回值 CaHIN</p><hr><p>强制使用中文格式的日期时间</p><hr><p>aaaa 星期</p><p>Format$(Now,”aaaa”) 返回值 星期五</p><p>O 中文月份</p><p>Format$(Now,”O”) 返回值 五月</p><p>o 单字节月份</p><p>Format$(Now,”o”) 返回值 5月</p><p>A 中文日期</p><p>Format$(Now,”A”) 返回值 二十六日</p><p>a 单字节日期</p><p>Format$(Now,”a”) 返回值 26日</p><p>E 短中文年份</p><p>Format$(Now,”E”) 返回值 六年</p><p>e 单单字节年份</p><p>Format$(Now,”e”) 返回值 6年</p><p>EE 中文年份</p><p>Format$(Now,”EE”) 返回值 二○○六年</p><p>ee 单字节年份</p><p>Format$(Now,”ee”) 返回值 2006年</p><p>想不到中文日期的问题就这么容易解决</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_36076151/article/details/112054745">vbaformat_VBA 格式化字符串 - Format大全</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 函数 </tag>
            
            <tag> Format </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA控件之一(MultiPage 控件)</title>
      <link href="/posts/3549931295.html"/>
      <url>/posts/3549931295.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用 MultiPage 控件来处理大量可被分为几类排序信息。 MultiPage 控件由组成一个或多个 Page 对象， 每个包含不同组的控件。 以编程方式通过设置 MultiPage 控件的 Value 属性设置活动页。</p></blockquote><h1 id="方式一、如何控制-MultiPage-控件编程"><a href="#方式一、如何控制-MultiPage-控件编程" class="headerlink" title="方式一、如何控制 MultiPage 控件编程"></a>方式一、如何控制 MultiPage 控件编程</h1><p><strong>要添加 MultiPage 控件并控制它通过使用宏, 请按照下列步骤操作：</strong></p><table><thead><tr><th>1.</th><th>启动 Excel, 并打开新空白工作簿。</th></tr></thead><tbody><tr><td>2.</td><td>在 工具 菜单, 指向 宏 , 然后单击 VisualBasic 编辑器 。</td></tr><tr><td>3.</td><td>在 插入 菜单上, 单击要在工作簿中插入 UserForm UserForm 。</td></tr><tr><td>4.</td><td>添加到 UserForm MultiPage 控件。</td></tr><tr><td>5.</td><td>将 Label 控件添加到 Page 1 多页 控件上。</td></tr><tr><td>6.</td><td>将 TextBox 控件添加到 Page 1 多页 控件上。</td></tr><tr><td>7.</td><td>MultiPage 控件, 上单击, Page 2 ， 然后重复步骤 5 和 6 以添加一个 Label 控件和 TextBox 控件。</td></tr><tr><td>8.</td><td>双击要打开代码窗口对 MultiPage 控件 MultiPage 控件。</td></tr><tr><td>9.</td><td>在代码窗口, 为 MultiPage1 Change 事件键入下列代码：</td></tr><tr><td>10.</td><td>在代码窗口, 为 UserForm Initialize 事件键入下列代码：</td></tr><tr><td>11.</td><td>在 运行 菜单上, 单击 运行子过程 &#x2F; 用户窗体 。  Page 1, 上 TextBox 控件中键入 Test 。 当单击 Page 2 选项卡、 TextBox 2 被清除, 和标题为 Label 2 变为项， 在 Page 1 上 TextBox 所做 （” Test “) （” Test “）</td></tr></tbody></table><ul><li>为 MultiPage1 Change 事件键入下列代码:<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> MultiPage1_Change()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="comment">&#x27; If activating Page1...</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">            Label1.Caption = TextBox2.<span class="keyword">Text</span></span><br><span class="line">            TextBox1.<span class="keyword">Text</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="comment">&#x27; If activating Page2...</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">            Label2.Caption = TextBox1.<span class="keyword">Text</span></span><br><span class="line">            TextBox2.<span class="keyword">Text</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li><li>为 UserForm Initialize 事件键入下列代码：<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">            <span class="comment">&#x27; Force Page1 to be active when UserForm is displayed.</span></span><br><span class="line">            MultiPage1.Value = <span class="number">0</span></span><br><span class="line">            Label1.Caption = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="如何通过使用-MultiPage-控件创建一个向导界面"><a href="#如何通过使用-MultiPage-控件创建一个向导界面" class="headerlink" title="如何通过使用 MultiPage 控件创建一个向导界面"></a>如何通过使用 MultiPage 控件创建一个向导界面</h2><p>将任务需要几个增量步骤, 向导界面可能会非常有效。 您可使用 MultiPage 控件以创建一个向导界面代替使用多用户窗体。 本示例操作具有三页 MultiPage 控件。 附加到对 UserForm Initialize 事件过程禁用 Page 2 和 Page3, 并强制 Page 1 的 多页 控件可活动。</p><p><strong>注意</strong> 您通过使用 <strong>Pages</strong> 集合, 索引 <strong>MultiPage</strong> 控件的页面时集合中第一页是零页。 此过程还设置标题的 <strong>CommandButton</strong> 控件并禁用 <strong>&lt; 备份</strong> 按钮。</p><p>注意的功能是分配给 CommandButton 1 控件的 Click 事件过程 “ 后退 “ 按钮 &lt; 是分配给 CommandButton 2 是 Click 事件过程控制功能的下一步 &gt; 按钮。 若要通过使用 <strong>MultiPage</strong> 控件, 创建一个向导界面请按照下列步骤：</p><table><thead><tr><th>1.</th><th>启动 Excel, 并打开新空白工作簿。</th></tr></thead><tbody><tr><td>2.</td><td>在 工具 菜单, 指向 宏 , 然后单击 VisualBasic 编辑器 。</td></tr><tr><td>3.</td><td>在 插入 菜单上, 单击要在工作簿中插入 UserForm UserForm 。</td></tr><tr><td>4.</td><td>添加到 UserForm MultiPage 控件。</td></tr><tr><td>5.</td><td>右键单击, “ Page 1 选项卡， 然后单击要添加到 多页 控件 Page3 新页 。</td></tr><tr><td>6.</td><td>添加一个 CommandButton 控件不位于 多页 控件上 UserForm 上。  重复此步骤可添加一个 UserForm 上二 CommandButton 控件。</td></tr><tr><td>7.</td><td>双击以打开代码窗口对于 UserForm UserForm 。</td></tr><tr><td>8.</td><td>在代码窗口, 为 UserForm Initialize 事件键入下列代码：</td></tr><tr><td>9.</td><td>在 运行 菜单上, 单击 运行子过程 &#x2F; 用户窗体 。</td></tr></tbody></table><p>当您单击下一步 &gt; 激活 Page 2 后退 “ 按钮可, 和 &lt; 当您单击 Next &gt; 第二次, Page3 激活并题注为 CommandButton 2 更改为 “ 完成 “。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27;在代码窗口, 为 UserForm Initialize 事件键入下列代码：</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            <span class="comment">&#x27; The next 2 lines disable Page2 &amp; Page3.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">False</span></span><br><span class="line">            <span class="comment">&#x27; Make Page1 the active page.</span></span><br><span class="line">            .Value = <span class="number">0</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            <span class="comment">&#x27; Set the caption on the CommandButtons.</span></span><br><span class="line">            CommandButton1.Caption = <span class="string">&quot;&lt;Back&quot;</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">False</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Next&gt;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">            <span class="comment">&#x27; Procedure for the &quot;&lt;Back&quot; button</span></span><br><span class="line">            <span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton1_Click()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span>                                 <span class="comment">&#x27; If Page2 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Pages(<span class="number">0</span>).Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Page1.</span></span><br><span class="line">            .Value = MultiPage1.Value - <span class="number">1</span>  <span class="comment">&#x27; Move back 1 page.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span>      <span class="comment">&#x27; Disable Page2.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">False</span>     <span class="comment">&#x27; Disable Back button.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">2</span>                                 <span class="comment">&#x27; If Page3 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Page2.</span></span><br><span class="line">            .Value = MultiPage1.Value - <span class="number">1</span>  <span class="comment">&#x27; Move back 1 page.</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">False</span>      <span class="comment">&#x27; Disable Page3.</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Next&gt;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">            <span class="comment">&#x27; Procedure for the &quot;Next&gt;&quot; button</span></span><br><span class="line">            <span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton2_Click()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="keyword">Case</span> <span class="number">0</span>                                  <span class="comment">&#x27; If Page1 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Value = MultiPage1.Value + <span class="number">1</span>   <span class="comment">&#x27; Move forward 1 page.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">True</span>        <span class="comment">&#x27; Enable Page2.</span></span><br><span class="line">            .Pages(<span class="number">0</span>).Enabled = <span class="literal">False</span>       <span class="comment">&#x27; Disable Page1.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Back button.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span>                                  <span class="comment">&#x27; If Page2 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Value = MultiPage1.Value + <span class="number">1</span>   <span class="comment">&#x27; Move forward 1 page.</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">True</span>        <span class="comment">&#x27; Enable Page3.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span>       <span class="comment">&#x27; Disable Page2.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Finish&quot;</span>   <span class="comment">&#x27; Change Next button to Finish.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">2</span>                                  <span class="comment">&#x27; If Page3 is active...</span></span><br><span class="line">            MsgBox <span class="string">&quot;Finished!&quot;</span>                  <span class="comment">&#x27; User is Finished.</span></span><br><span class="line">            Unload <span class="keyword">Me</span>                           <span class="comment">&#x27; Unload the UserForm.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h1 id="方式二、vba-Page分页控件使用方法介绍"><a href="#方式二、vba-Page分页控件使用方法介绍" class="headerlink" title="方式二、vba Page分页控件使用方法介绍"></a>方式二、vba Page分页控件使用方法介绍</h1><blockquote><p>基本说一下Page使用方法，包括添加分页、删除分页、和设置分页属性等几点比较重要的内容。</p></blockquote><img src="https://pics7.baidu.com/feed/cc11728b4710b912705faeb15852f4049345221d.png?token=c36a6abd99ef68a91642e2b228bb790b"><ul><li>一个表单示例，标题分布以按钮形式来显示，默认为标签形式。</li></ul><h2 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法:"></a>设置方法:</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">With</span> </span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Style = fmTabStyleButtons<span class="comment">&#x27;按钮形式&#x27;.Style = fmTabStyleTabs &#x27;默认为标签形式</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure><ul><li><strong>背景图片设置</strong><blockquote><p>背景图片用loadpicture(＂图片路径＋文件名＂)加载</p></blockquote></li></ul><img src="https://pics3.baidu.com/feed/0b55b319ebc4b7453a545da552531610888215f3.png?token=38556e3bc454b547afa9a1bc9094b262"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Item(<span class="number">1</span>).Picture =_</span><br><span class="line">LoadPicture(ThisWorkbook.Path &amp; <span class="string">&quot;\pic\123.jpg&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong>其中注意一点Item(i),item表示Page页 字母ｉ代表下标或索引值.索引值从0开始,也就是说第一个Page页用item(0)来代表,最后一个用item(pages.count-1)来表示.</strong></p></blockquote><img src="https://pics5.baidu.com/feed/a1ec08fa513d26976f8965acc954bafc4216d81b.png?token=67b7980f1cab07044562d95e4c671f98"><ul><li><strong>改变按钮宽度</strong><blockquote><p>这个功能其实就是设置分布标题大小,用TabFixedWidth设置宽,TabFixedHeight设置高.</p></blockquote></li></ul><img src="https://pics6.baidu.com/feed/5ab5c9ea15ce36d3e51f355aa45c3280e850b1f3.png?token=bebe6e9095c7dfe11b7ec89dea1fabd6"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> </span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.TabFixedWidth = <span class="number">80</span>.TabFixedHeight=<span class="number">28</span></span><br><span class="line">endwith</span><br></pre></td></tr></table></figure><ul><li><strong>新建分页</strong></li></ul><blockquote><p>新建分页也十分简单,一行代码就可以完成. MultiPage1.Pages.Add “分布名”,”标题名”,索引值</p></blockquote><img src="https://pics1.baidu.com/feed/a9d3fd1f4134970aa044a46c0965d9cfa6865df0.png?token=96dba0ed08723058977dcf9210d191f5"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> x <span class="keyword">As</span> Integerx = <span class="keyword">Me</span>.MultiPage1.Pages.Count</span><br><span class="line"><span class="keyword">If</span> x &gt; <span class="number">6</span> <span class="keyword">Then</span> </span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Add <span class="string">&quot;page&quot;</span> &amp; x, <span class="string">&quot;新建 &quot;</span> &amp; x &amp; <span class="string">&quot;#&quot;</span>, x</span><br></pre></td></tr></table></figure><ul><li><strong>删除分页</strong><blockquote><p>删除分页也是一行代码完成的,Me.MultiPage1.Pages.Remove 索引</p></blockquote></li></ul><img src="https://pics5.baidu.com/feed/9825bc315c6034a821d4f4b357bc415309237600.png?token=5599e8d77a6492b808dba31ad0cc1f24"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> Integeri = <span class="keyword">Me</span>.MultiPage1.Pages.Count - <span class="number">1</span><span class="comment">&#x27;取最后一个分布索引号</span></span><br><span class="line"><span class="keyword">If</span> i &lt;= <span class="number">4</span> <span class="keyword">Then</span> </span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span><span class="comment">&#x27;判断是否是删除页 不能把自己删除了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Remove i<span class="comment">&#x27;执行删除分页</span></span><br></pre></td></tr></table></figure><ul><li>结尾<br>其实对分页控件用得不是很熟悉,所以也是边学边做,,有些错误的地方,就难免.<br>同时也希望指出不正确的地方,加以改正.<br>关注江觅学习更多vba编程技术</li></ul><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/liyanwwww/article/details/2653539">VBA控件常规使用–multiPage 控件</a></li><li><a href="https://baijiahao.baidu.com/s?id=1673353087367441194&wfr=spider&for=pc">vba Page分页控件使用方法介绍</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 控件 </tag>
            
            <tag> VBA </tag>
            
            <tag> MultiPage </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VBA窗体最大化最小化按钮实现</title>
      <link href="/posts/24674706.html"/>
      <url>/posts/24674706.html</url>
      
        <content type="html"><![CDATA[<h1 id="先建立窗体"><a href="#先建立窗体" class="headerlink" title="先建立窗体"></a>先建立窗体</h1><p>打开excel，找到开发工具 ，然后点击 Visual Basic进入代码编辑器窗口：</p><img src="https://img-blog.csdnimg.cn/2018120723042229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p>点击插入&gt;&gt;用户窗体，如下图所示：</p><img src="https://img-blog.csdnimg.cn/20181207230608410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p>如果此时运行，得到的效果如下所示，是没有最大化和最小化窗口的：</p><img src="https://img-blog.csdnimg.cn/20181207232333794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><h1 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a>设置方式</h1><p>下面我们就来添加最大化最小化功能的实现。<br>双击窗体，进入代码编辑界面，输入以下代码：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> GetWindowLong <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;GetWindowLongA&quot;</span> (<span class="keyword">ByVal</span> hWnd <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> nIndex <span class="keyword">As</span> <span class="type">Long</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> FindWindow <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;FindWindowA&quot;</span> (<span class="keyword">ByVal</span> lpClassName <span class="keyword">As</span> <span class="type">String</span>, <span class="keyword">ByVal</span> lpWindowName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> SetWindowLong <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;SetWindowLongA&quot;</span> (<span class="keyword">ByVal</span> hWnd <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> nIndex <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> dwNewLong <span class="keyword">As</span> <span class="type">Long</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> GWL_STYLE = (-<span class="number">16</span>)</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_THICKFRAME <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H40000</span> <span class="comment">&#x27;(恢复大小)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_MINIMIZEBOX <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H20000</span> <span class="comment">&#x27;(最小化)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_MAXIMIZEBOX <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H10000</span> <span class="comment">&#x27;(最大化)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">   <span class="keyword">Dim</span> hWndForm <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line">   <span class="keyword">Dim</span> IStyle <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line">   hWndForm = FindWindow(<span class="string">&quot;ThunderDFrame&quot;</span>, <span class="keyword">Me</span>.Caption)</span><br><span class="line">   IStyle = GetWindowLong(hWndForm, GWL_STYLE)</span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_THICKFRAME <span class="comment">&#x27;还原</span></span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_MINIMIZEBOX <span class="comment">&#x27;最小化</span></span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_MAXIMIZEBOX <span class="comment">&#x27;最大化</span></span><br><span class="line">   SetWindowLong hWndForm, GWL_STYLE, IStyle</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将鼠标置于Sub函数内部，按F5按键运行，得到如下效果：</p><img src="https://img-blog.csdnimg.cn/20181207231350402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p><strong>这里需要说明的是，以上代码支持在64位操作系统运行，如果是32位系统，在导入库的时候，应使用下面一段代码:</strong></p><p>与前面一段代码相比，发现唯一的区别在于，Declare后面少了PtrSafe，其原因是：Microsoft 提供了一个 Win32API.txt 文件，其中包含 1,500 个 Declare 语句以及一个用于剪切所需 Declare 语句并将其粘贴到您的代码中的工具。不过，这些语句适用于 32 位系统，必须使用下文讨论的信息将其转换为 64 位。现有 Declare 语句在 64 位 VBA 中不会进行编译，直到使用 PtrSafe 属性将它们标记为对 64 位安全。</p><p>具体可参阅MicroSoft Office 官方资料：<a href="https://docs.microsoft.com/zh-cn/previous-versions/office/ee691831(v=office.14)">32 位和 64 位版本的 Office 2010 之间的兼容性</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/u010280075/article/details/84888744">VBA窗体最大化最小化按钮实现</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
            <tag> 最大最小化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>窗体上按Esc键关闭窗体（VBA）</title>
      <link href="/posts/3269845264.html"/>
      <url>/posts/3269845264.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用ESC关闭"><a href="#使用ESC关闭" class="headerlink" title="使用ESC关闭"></a>使用ESC关闭</h1><ol><li>在窗体上拖一个按钮控件，命名为 btnCancel，然后将按钮属性 Cancel 设为 True</li></ol><img src="http://miao.blog/images/c2fe3ea3a343c737.jpg"><ol start="2"><li>然后双击按钮，在按钮的 click 事件中写入 Me.Hide</li></ol><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> btnCancel_Click()</span><br><span class="line">    <span class="keyword">Me</span>.Hide</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><ol start="3"><li>然后把按钮 Width 和 Height 设置为 0</li></ol><img src="http://miao.blog/images/371969cf39089ad0.jpg"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://miao.blog/article/click-esc-to-close-form">窗体上按Esc键关闭窗体（VBA）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 窗体 </tag>
            
            <tag> VBA </tag>
            
            <tag> ESC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MsgBox函数的讲解及应用</title>
      <link href="/posts/2953555089.html"/>
      <url>/posts/2953555089.html</url>
      
        <content type="html"><![CDATA[<h1 id="MsgBox函数的讲解及应用"><a href="#MsgBox函数的讲解及应用" class="headerlink" title="MsgBox函数的讲解及应用"></a>MsgBox函数的讲解及应用</h1><blockquote><p><strong>所谓函数，指的是一个Function过程，区别于简单的过程，Function过程是有返回值.</strong><br>Excel VBA中的MsgBox函数可以返回结果，而简单的MsgBox语句不能返回结果。</p></blockquote><ol><li>MsgBox函数<blockquote><p>在对话框中显示消息，等待用户单击按钮，并返回一个整数，指示用户单击的那个按钮</p></blockquote></li></ol><ul><li>一、语法:<br>MsgBox (prompt, [ buttons, ] [ title, ] [ helpfile, context ])</li></ul><p>参数：</p><p>① <strong>prompt 必需项</strong>。 字符串表达式在对话框中显示为消息。 prompt 的最大长度约为 1024 个字符，具体取决于所使用的字符的宽度。如果 prompt 包含两行以上，则可以在每行之间使用回车符 (Chr(13))、换行符 (Chr(10)) 或回车换行符组合 (Chr(13) &amp; Chr(10)) 将其分隔。</p><p>② buttons 可选。 数值表达式，用于指定要显示按钮的数量和类型、要使用的图标样式、默认按钮的标识和消息框的形式的值之和。 如果省略，则 buttons 的默认值为 0。</p><p>③ title可选。 对话框标题栏中显示的字符串表达式。 如果省略 title，则标题栏中将显示应用程序名称。</p><p>④ helpfile 可选。 用于标识帮助文件的字符串表达式，前者用于为对话框提供上下文相关的帮助。 如果提供 helpfile，则也必须提供 context。</p><p>⑤ context 可选。 帮助上下文数值的数值表达式，该数值由帮助作者为相应的帮助主题分配。 如果提供 context，则也必须提供 helpfile。</p><ul><li>二、buttons 参数设置如下：</li></ul><table><thead><tr><th align="left">常量</th><th align="left">值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">vbOKOnly</td><td align="left">0</td><td align="left">仅显示“确定”按钮。</td></tr><tr><td align="left">vbOKCancel</td><td align="left">1</td><td align="left">显示“确定”和“取消”按钮。</td></tr><tr><td align="left">vbAbortRetryIgnore</td><td align="left">2</td><td align="left">显示“中止”、“重试”和“忽略”按钮。</td></tr><tr><td align="left">vbYesNoCancel</td><td align="left">3</td><td align="left">显示“是”、“否”和“取消”按钮。</td></tr><tr><td align="left">vbYesNo</td><td align="left">4</td><td align="left">显示“是”和“否”按钮。</td></tr><tr><td align="left">vbRetryCancel</td><td align="left">5</td><td align="left">显示“重试”和“取消”按钮。</td></tr><tr><td align="left">vbCritical</td><td align="left">16</td><td align="left">显示“关键消息”图标。</td></tr><tr><td align="left">vbQuestion</td><td align="left">32</td><td align="left">显示“警告查询”图标。</td></tr><tr><td align="left">vbExclamation</td><td align="left">48</td><td align="left">显示“警告消息”图标。</td></tr><tr><td align="left">vbInformation</td><td align="left">64</td><td align="left">显示“信息消息”图标。</td></tr><tr><td align="left">vbDefaultButton1</td><td align="left">0</td><td align="left">第一个按钮是默认按钮。</td></tr><tr><td align="left">vbDefaultButton2</td><td align="left">256</td><td align="left">第二个按钮是默认按钮。</td></tr><tr><td align="left">vbDefaultButton3</td><td align="left">512</td><td align="left">第三个按钮是默认按钮。</td></tr><tr><td align="left">vbDefaultButton4</td><td align="left">768</td><td align="left">第四个按钮是默认按钮。</td></tr><tr><td align="left">vbApplicationModal</td><td align="left">0</td><td align="left">应用程序模式；用户在继续在当前应用程序中工 作前必须响应消息框。</td></tr><tr><td align="left">vbSystemModal</td><td align="left">4096</td><td align="left">系统模式；在用户响应消息框前，所有应用程序都挂起。</td></tr><tr><td align="left">vbMsgBoxHelpButton</td><td align="left">16384</td><td align="left">在消息框中添加“帮助”按钮。</td></tr><tr><td align="left">vbMsgBoxSetForeground</td><td align="left">65536</td><td align="left">将消息框窗口指定为前景窗口。</td></tr><tr><td align="left">vbMsgBoxRight</td><td align="left">524288</td><td align="left">文本右对齐。</td></tr><tr><td align="left">vbMsgBoxRtlReading</td><td align="left">1048576</td><td align="left">指定文本在希伯来语和阿拉伯语系统中应从右到左显示。</td></tr></tbody></table><ul><li><p>三、第一组值 (0-5) 表示对话框中显示的按钮的数量和类型；第二组值（16、32、48、64）表示图标样式；第三组值（0、256、512）用于确定默认按钮；第四组值（0、4096）用于确定消息框的形式。添加数字以创建最终 buttons 参数值时，只是用每个组中的其中一个数值。</p></li><li><p>四、关于返回值</p><table><thead><tr><th align="left">常量</th><th align="left">值</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">vbOK</td><td align="left">1</td><td align="left">确定</td></tr><tr><td align="left">vbCancel</td><td align="left">2</td><td align="left">Cancel</td></tr><tr><td align="left">vbAbort</td><td align="left">3</td><td align="left">中止</td></tr><tr><td align="left">vbRetry</td><td align="left">4</td><td align="left">重试</td></tr><tr><td align="left">vbIgnore</td><td align="left">5</td><td align="left">忽略</td></tr><tr><td align="left">vbYes</td><td align="left">6</td><td align="left">是</td></tr><tr><td align="left">vbNo</td><td align="left">7</td><td align="left">否</td></tr></tbody></table></li></ul><blockquote><p>如果对话框中显示“取消”按钮，按 ESC 键与单击“取消”具有相同的作用。 如果对话框中包含“帮助”按钮，则会为对话框提供上下文相关帮助。但是，在单击其他按钮中的某个按钮之前不会返回任何值。</p></blockquote><h1 id="MsgBox函数的应用"><a href="#MsgBox函数的应用" class="headerlink" title="MsgBox函数的应用"></a>MsgBox函数的应用</h1><p>为了清空某个工作表，我们可以写一段代码达到我们的目的。但是在运行之前要提供给用户思考的时间，清空后是否有其他的麻烦。我们来看下面的代码：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> mynzC()</span><br><span class="line"></span><br><span class="line">answer = MsgBox(<span class="string">&quot;你是否要清空工作表?&quot;</span>, vbYesNo + vbQuestion, <span class="string">&quot;清空工作表&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">If</span> answer = vbYes <span class="keyword">Then</span></span><br><span class="line"></span><br><span class="line">Cells.ClearContents</span><br><span class="line"></span><br><span class="line"><span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;do nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>代码截图：</p><img src="https://pic2.zhimg.com/80/v2-7d3c2b5af0e5a4945f146d5a70de44c1_720w.jpg"><p>代码解读：</p><ol><li>answer &#x3D; MsgBox(“你是否要清空工作表?”, vbYesNo + vbQuestion, “清空工作表”)<br>使用括号时，MsgBox函数有三个参数。第一部分用于消息框中的消息。使用第二部分指定要在消息框中显示的按钮和图标。第三部分显示在消息框的标题栏中。</li></ol><ul><li>注意：将光标放在Visual Basic编辑器中的vbYesNo上，然后单击F1查看可以使用的其他按钮和图标。也可以使用相应的值4和32，而不是常量vbYesNo和vbQuestion。</li></ul><ol start="2"><li>If answer &#x3D; vbYes Then</li></ol><p>Cells.ClearContents</p><p>Else</p><p>‘do nothing</p><p>End If</p><p>如果用户单击“是”按钮，Excel VBA将清空工作表。如果用户单击No按钮，则不会发生任何事情。</p><h2 id="代码的运行情况"><a href="#代码的运行情况" class="headerlink" title="代码的运行情况"></a>代码的运行情况</h2><p>我们先在工作表中建立一个运行按钮，并关联上上述的“mynzC”过程，并在工作表中随便录入些数值、符号，之后在点击后会清除。如下图：</p><img src="https://pic1.zhimg.com/80/v2-925d864ca2b368bb98c1a31111b3affc_720w.jpg"><p>我们点击运行，会弹出下面的窗口：</p><img src="https://pic2.zhimg.com/80/v2-3316debf02a83efadb6a296696bb9c9d_720w.jpg"><p>我们选择“是”。</p><img src="https://pic1.zhimg.com/80/v2-c6f4a70ea9606bb084426f185aeb7770_720w.jpg"><p>这个时候的工作表就被清空了。</p><p>今日内容回想：<br>1） MsgBox函数的语法了解吗？<br>2） MsgBox函数在应用时分几部分？<br>3) 清空工作表是那句代码？</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/328608873">MsgBox函数的讲解及应用</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 函数 </tag>
            
            <tag> MsgBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在窗体中显示实时系统时钟</title>
      <link href="/posts/2126489867.html"/>
      <url>/posts/2126489867.html</url>
      
        <content type="html"><![CDATA[<h1 id="显示需求"><a href="#显示需求" class="headerlink" title="显示需求"></a>显示需求</h1><blockquote><p><strong>在使用用户窗体设计用户界面时，我们想要在适当的位置显示时钟，方便用户实时查看时间。</strong></p></blockquote><p>效果如图：</p><img src="https://ask.qcloudimg.com/http-save/yehe-5846058/wlpu7276os.gif"><h1 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h1><h2 id="1-先设置需要显示的模块"><a href="#1-先设置需要显示的模块" class="headerlink" title="1.先设置需要显示的模块"></a>1.先设置需要显示的模块</h2><p>放置了一个文本框控件（保留其默认名称 TextBox1 ），并在其中显示实时时间。</p><h2 id="2-在标准模块中添加代码"><a href="#2-在标准模块中添加代码" class="headerlink" title="2. 在标准模块中添加代码"></a>2. 在标准模块中添加代码</h2><p>设计好用户窗体界面后，在VBE中插入一个<strong>标准模块</strong>，输入下面的代码：</p><blockquote><p><strong>注意：一定要把这个程序放到模块之中，否则 Application.OnTime 这个函数会报错！</strong></p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> StartTimer1()</span><br><span class="line">   Application.OnTime Now + TimeValue(<span class="string">&quot;00:00:01&quot;</span>),<span class="string">&quot;NextTick1&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">Sub</span> NextTick1()</span><br><span class="line">   UserForm1.TextBox1 = Format(Now, <span class="string">&quot;yyyy/mm/dd hh:mm:ss AM/PM&quot;</span>)</span><br><span class="line">   StartTimer1</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">Sub</span> StopTimer1()</span><br><span class="line">    <span class="keyword">On</span> ErrorResume <span class="keyword">Next</span></span><br><span class="line">   Application.OnTime Now + TimeValue(<span class="string">&quot;00:00:01&quot;</span>),<span class="string">&quot;NextTick1&quot;</span>, , <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="3-运行-NextTick1-函数即可"><a href="#3-运行-NextTick1-函数即可" class="headerlink" title="3. 运行 NextTick1 函数即可"></a>3. 运行 NextTick1 函数即可</h2><ul><li>运行NextTick1过程，然后显示用窗体，即可以看到显示实时时间的效果</li></ul><img src="https://ask.qcloudimg.com/http-save/yehe-5846058/gihxhe8vim.jpeg?imageView2/2/w/1620"><ul><li>也可以使用其他合适的控件，如标签控件</li></ul><img src="https://ask.qcloudimg.com/http-save/yehe-5846058/dp4og89mrm.gif"><ul><li>如果要停止时间的实时显示，运行StopTimer1过程即可。</li></ul><p>#其他方法</p><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>方法同上在标准模块中使用Application.OnTime 函数，将Label1.caption更改为我的用户窗体上想要显示的适当标签。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> DisplayCurrentTime()</span><br><span class="line">    <span class="keyword">Dim</span> nextSecond <span class="keyword">As</span> <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    nextSecond = DateAdd(<span class="string">&quot;s&quot;</span>, <span class="number">1</span>, Now())</span><br><span class="line"></span><br><span class="line">    Label1.Caption = Time()</span><br><span class="line"></span><br><span class="line">    Application.OnTime _</span><br><span class="line">        Procedure:=<span class="string">&quot;DisplayCurrentTime&quot;</span>, _</span><br><span class="line">        EarliestTime:=nextSecond</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><blockquote><p><strong>要求：三个文本框分别放置系统时间的 时，分，秒，并随着时间变动而变动</strong></p></blockquote><p>放在模块中的函数：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 时间()</span><br><span class="line"> UserForm1.TextBox1 = Left(Application.WorksheetFunction.<span class="keyword">Text</span>(Now(), <span class="string">&quot;HH:MM&quot;</span>), <span class="number">2</span>)</span><br><span class="line"> UserForm1.TextBox2 = Right(Application.WorksheetFunction.<span class="keyword">Text</span>(Now(), <span class="string">&quot;HH:MM&quot;</span>), <span class="number">2</span>)</span><br><span class="line"> UserForm1.TextBox3 = Right(Application.WorksheetFunction.<span class="keyword">Text</span>(Now(), <span class="string">&quot;MM:SS&quot;</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">Application.OnTime Now() + TimeValue(<span class="string">&quot;00:00:01&quot;</span>), <span class="string">&quot;时间&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> 停止()</span><br><span class="line"> <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line">Application.OnTime Now() + TimeValue(<span class="string">&quot;00:00:01&quot;</span>), <span class="string">&quot;时间&quot;</span>, , <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>放在窗体中：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton1_Click()</span><br><span class="line">    <span class="keyword">Call</span> 停止</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton2_Click()</span><br><span class="line"><span class="keyword">Call</span> 时间</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">    <span class="keyword">Call</span> 时间</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p>放在启动中：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> Workbook_Open()</span><br><span class="line">     UserForm1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/zml3589110/MyImage/master/D:\Cache\PicGo\Github2.jpg"><img src="https://raw.githubusercontent.com/zml3589110/MyImage/master/D:\Cache\PicGo\Github1.gif"><p><a href="https://club.excelhome.net/forum.php?mod=attachment&aid=OTM1NzUzfGY1M2JlZTQ4fDE2NTU3OTQ4NTl8MHw3MjY4NzM=">时钟文件</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://cloud.tencent.com/developer/article/1785946">VBA实战技巧18：在用户窗体中显示时钟</a></li><li><a href="https://www.nuomiphp.com/eplan/4302.html">excel - VBA如何在用户窗体中显示实时时钟？</a></li><li><a href="https://club.excelhome.net/thread-726873-1-1.html">考试题目】在窗体文本框内实时显示系统时间</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VBA </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VBA </tag>
            
            <tag> 显示 </tag>
            
            <tag> 时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人图床(PicGo + GitHub)</title>
      <link href="/posts/3258321867.html"/>
      <url>/posts/3258321867.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><strong>这个方式来取代 七牛云+Mpic 方案</strong><br>我以前用的 七牛云 + Mpic 的组合，后来由于七牛云测试域名收回，我的图床就废了。以前的好多图片都埋藏在七牛云的服务器上，又气又难过。思考好一段时间，想自己搭服务，但成本有点高，备案的域名 + 服务器一年几百块。对于我这种不靠写字谋生的人而言没有必要，所以就停摆了一段时间。直到今天用 GitHub 搭起了图床，可以说非常开心了。所以跟大家分享一下。</p></blockquote><ul><li>该软件使用手册：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E">https://picgo.github.io/PicGo-Doc/zh/guide/#应用说明</a></li></ul><h1 id="一、下载-x2F-安装"><a href="#一、下载-x2F-安装" class="headerlink" title="一、下载&#x2F;安装"></a>一、下载&#x2F;安装</h1><ol><li>下载链接</li></ol><blockquote><p>PicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多</p></blockquote><p>参考文档提供: Win版下载链接：<a href="https://pan.baidu.com/share/init?surl=7KycPMoqNCnc1cR_yQO8nQ">百度云</a> 密码：PicG</p><p>git地址：<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a></p><img src="https://img-blog.csdnimg.cn/1748132cebc0432a958938d33e8d917b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>下载后一路点安装即可</strong></p><ol start="2"><li>配置<blockquote><p><strong>仅使用 GitHub 做图床，所以 PicGo 设置仅选择GitHub图床</strong></p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/4280cca5c8dd47b799e89332ff72d9ec.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="GitHub-仓库设置"><a href="#GitHub-仓库设置" class="headerlink" title="GitHub 仓库设置"></a>GitHub 仓库设置</h1><blockquote><p><strong>流程：新建 public 仓库 -&gt; 创建 token -&gt; 复制 token 备用</strong></p></blockquote><ol><li>新建仓库</li></ol><p>点击 git 主页右上角的 + 创建 New repository；</p><img src="https://img-blog.csdnimg.cn/be35fc1137e64b09bd62dcaa382926c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>填写仓库信息，例如我就创建了一个 cloudimg 的仓库。这里注意，仓库得设置为 Public 因为后面通过客户端访问算是外部访问，因此无法访问 Private ，这样的话图片传上来之后只能存储不能显示。所以要设置为 Public。</p><p>图一：</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIyNTE0LnBuZw"><p>图二：</p><img src="https://img-blog.csdnimg.cn/7db3e15ac0e5460fa29e1f7e080689f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="2"><li>创建 token 并复制保存</li></ol><p>此时仓库已经建立，点击右上角头像，然后进入设置:</p><img src="https://img-blog.csdnimg.cn/5cef567c46634a14947158625fb5f0f2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>在页面最下找到 Developer settings，点击进入:</p><img src="https://img-blog.csdnimg.cn/b7e9dfe38ee14ebfb8a13c02398e853b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>创建 token:</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIzMzE3LnBuZw?x-oss-process=image/format,png"><p>填 description（也是随心填），勾选复选框 repo ，接着到页面底部 Generate token 就完成了：</p><p>设置一、</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzE1NTIzMTQ5MDc3OTQucG5n?x-oss-process=image/format,png"><p>设置二、</p><img src="https://img-blog.csdnimg.cn/5b38543cd03b4418980b586628222fe7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="3"><li>然后复制生成一串字符 token，这个 token 只出现一次，所以要保存一下（我一般记在微信收藏）</li></ol><blockquote><ul><li>点击生成之后Token只会出现一次，记得保存备用</li></ul></blockquote><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIzOTAxLnBuZw"><h1 id="在PicGo中设置Github图库"><a href="#在PicGo中设置Github图库" class="headerlink" title="在PicGo中设置Github图库"></a>在PicGo中设置Github图库</h1><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjI0NDQzLnBuZw"><ul><li>仓库名 即你的仓库名（你的Github账户名&#x2F;刚才创建的仓库名）</li><li>分支名 默认 master</li><li>Token 就是刚刚从github复制的那一串字符</li><li>存储路径 这个可以填也可以不填，填了的话图片就上传到 git 中 data 这个文件夹</li><li>域名 <a href="https://raw.githubusercontent.com/yefcion/cloudimg/master%E8%BF%99%E4%B8%AA%E8%A6%81%E6%94%B9%E4%B8%80%E4%B8%8B">https://raw.githubusercontent.com/yefcion/cloudimg/master这个要改一下</a> 格式 <a href="https://raw.githubusercontent.com/[username]/[%E4%BB%93%E5%BA%93%E5%90%8D]/master">https://raw.githubusercontent.com/[username]/[仓库名]/master</a></li><li>自定义域名的作用是，在上传图片后成功后，PicGo会将“自定义域名+上传的图片名”生成的访问链接，放到剪切板上<a href="https://raw.githubusercontent.com/%E7%94%A8%E6%88%B7%E5%90%8D/RepositoryName/%E5%88%86%E6%94%AF%E5%90%8D%EF%BC%8C%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E5%8F%AF%E6%8C%89%E6%AD%A4%E5%A1%AB%E5%86%99%E3%80%82">https://raw.githubusercontent.com/用户名/RepositoryName/分支名，，自定义域名可按此填写。</a></li></ul><blockquote><p>**注：这里提供一个加速访问图片的方法：CDN加速，具体原理自行百度（我还不是很懂）<br>将上面的域名改为：<br>原 <a href="https://raw.githubusercontent.com/yefcion/cloudimg/master">https://raw.githubusercontent.com/yefcion/cloudimg/master</a><br>现 <a href="https://cdn.jsdelivr.net/gh/yefcion/cloudimg@master">https://cdn.jsdelivr.net/gh/yefcion/cloudimg@master</a><br>**</p></blockquote><p>然后点确定就可以了。</p><h1 id="接下来就可以正常使用了"><a href="#接下来就可以正常使用了" class="headerlink" title="接下来就可以正常使用了"></a>接下来就可以正常使用了</h1><ul><li><p>我们将图片复制到剪切板中，按我们所设置的快捷键，图片将自动上传到我们Github的仓库中</p></li><li><p>根据自己之前所选择的格式，图片的链接会自动复制到我们的剪切板中，等到图片上传完毕之后，我们直接Ctrl +V就好了</p></li><li><p>然后关于上传的快捷键设置。默认的是 Mac 按键，推荐改成 Ctrl + alt +c。</p></li></ul><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjI0OTM1LnBuZw"><p>Typora软件和PicGo配合起来使用更佳，使用typora写完博客然后直接导入CSDN的编辑器中，真香</p><p><strong>本方案唯一缺点，不能私人。但是考虑到 GitHub 上传的图在列表里没法预览，应该没人会闲着没事翻记录。</strong></p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/yefcion/article/details/88412025">PicGo + GitHub 搭建个人图床工具</a></li><li><a href="https://blog.csdn.net/qq_43367829/article/details/104882071">PicGo+GitHub使用</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> GitHub </category>
          
          <category> PicGo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
            <tag> PicGo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VScode配置KEIL5编译下载</title>
      <link href="/posts/3493436520.html"/>
      <url>/posts/3493436520.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经常使用keil的人都知道keil的使用特别广泛，但是keil的自动补全功能极其难用。VScode功能十分强大，许多大佬为其编写插件供他人使用，利用好这些插件可以大大提高代码编写效率。最近发现了一个VScode可以调用KEIL编程的插件，使用起来非常方便。</p><h1 id="一、安装插件"><a href="#一、安装插件" class="headerlink" title="一、安装插件"></a>一、安装插件</h1><ol><li>点击拓展选项的图标</li></ol><img src="https://i0.hdslb.com/bfs/article/ee3c30d0c52a663e79e077f3abc93b8dc1f4f2a1.png@174w_107h_progressive.webp"><blockquote><p><strong>输入Chinese，进行安装，安装完成后界面就变成中文了。</strong></p></blockquote><img src="https://i0.hdslb.com/bfs/article/8781454b3adba17079f688b931915f584e8d9f46.png@942w_699h_progressive.webp"><ol start="2"><li>VScode中搜索插件Keil Assistant并安装。</li></ol><img src="https://img-blog.csdnimg.cn/20210717213624458.png"><h1 id="二、使用方法"><a href="#二、使用方法" class="headerlink" title="二、使用方法"></a>二、使用方法</h1><blockquote><p>插件下方介绍非常详细，并且都是中文的。</p></blockquote><img src="https://img-blog.csdnimg.cn/20210717213828397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><ol><li>插件设置<blockquote><p>进入插件设置，添加Keil可执行文件的路径</p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/20210717214251906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><blockquote><p>如下图所示第一个是51单片机的路径，第二个选项是MDK的路径（也就是ARM核单片机的路径）</p></blockquote><img src="https://i0.hdslb.com/bfs/article/1372396b3c92e211ab8a538136e310a3b73688cf.png@942w_704h_progressive.webp"><blockquote><p>接下来就是填入路径，找到我们的keil软件选着文件所在位置</p></blockquote><img src="https://i0.hdslb.com/bfs/article/09bc99e665e38b29bb814e5deeb07277b93f6ac5.png@470w_938h_progressive.webp"><p>在安装位置找到 keil 的图标:</p><img src="https://i0.hdslb.com/bfs/article/2aa130c7fed5bebbbd3a922e39fd6e63474844bb.png@942w_548h_progressive.webp"><p>复制他的路径:</p><img src="https://i0.hdslb.com/bfs/article/3e288ef2cef0c3855e558e4890dca034ab682250.png@942w_45h_progressive.webp"><p>填入VScode(注意：要在刚才的路径后面添加UV4.exe的后缀):</p><img src="https://i0.hdslb.com/bfs/article/730c29528eef3c4c9aa5baf7eb9dc60146d553b7.png@939w_483h_progressive.webp"><p>至此Keil Assistant配置完成。注意我在keil 5中安装了51单片机的包，所以路径相同，实测若是安装keil 4如此添加路径是没有用的，所以要用他来写51单片机的需要安装keil 5的51的包。</p><ol start="2"><li>打开工程</li></ol><p>打开资源管理器，会出现KEIL UVISION PROJECT点击后面的打开keil工程按钮，选择你想打开的工程的**.uvprojx**文件。</p><img src="https://img-blog.csdnimg.cn/20210717214649138.png"><p><strong>下方会有编译，下载，重编译按钮。</strong></p><img src="https://img-blog.csdnimg.cn/20210717214748979.png"><h1 id="三、配置工程"><a href="#三、配置工程" class="headerlink" title="三、配置工程"></a>三、配置工程</h1><blockquote><p><strong>VScode打开keil工程会出现工程头文件、变量红色波浪线的情况，通过配置工程，可以解决问题。如果不想改的话，也可以不改。</strong></p></blockquote><ol><li>配置方法</li></ol><p>按ctrl+alt+P在搜索栏中搜索Edit configurations (UI)。</p><img src="https://img-blog.csdnimg.cn/20210717215342533.png"><p>进入配置界面，里面都是中文，仔细阅读可以理解。</p><img src="https://img-blog.csdnimg.cn/20210717215535865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p><strong>利用此插件便可以通过VScode调用KEIL编写代码。<br>最后推荐一个可以提高工程逼格的插件koroFileHeader<br>文件头注释模板，安装步骤同上，文件头内容可在插件配置中更改，并更新最后修改时间。<br>快捷键：ctrl+alt+i</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/2021071722393639.png"><img src="https://img-blog.csdnimg.cn/2021071722394671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><blockquote><p>打开工程后注释乱码怎么解决:<br><strong>调整vscode的编码方式 和你的keil相同 一般为GB2312</strong></p></blockquote><p>VScode作为一款功能强大的文本编辑器它可以用来写任何的语言，有多种拓展可以供你来安装使用。它来写单片机是因为他的代码高亮、跳转、代码自动补全非常好用。比keil不知好用多少倍。但是若你要是调试单片机的话还是建议用keil（术业有专攻）仅仅将VScode作为一个文本编辑器来使用。使用时同时开启VScode和keil。用VScode来写代码，用keil进行调试。不要担心你在VScode中写的代码保存后会自动同步过去的，keil 中也是如此！</p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_44012359/article/details/118862954">VScode调用KEIL-MDK</a></li><li><a href="https://www.bilibili.com/read/cv14597116">VScode 配置 keil 5 环境</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> KEIL </category>
          
          <category> VScode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KEIL5 </tag>
            
            <tag> VScode </tag>
            
            <tag> 环境配置 </tag>
            
            <tag> Keil Assistant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KEIL5安装C51依赖</title>
      <link href="/posts/2938783249.html"/>
      <url>/posts/2938783249.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>**问题描述：从KEIL4升级安装了KEIL5之后找不到 C51 相关设置，想创建89C51的工程却发现找不到89C51的芯片包 **</p></blockquote><h1 id="无法创建的原因"><a href="#无法创建的原因" class="headerlink" title="无法创建的原因"></a>无法创建的原因</h1><p>keil4通常用来开发51单片机项目，而keil5通常用来开发STM32项目，keil5中默认并没有51芯片库，这就导致了keil5创建工程时找不到89C51芯片。就像下图这样只有ARM和STM系列芯片。</p><img src="https://img-blog.csdnimg.cn/20210606213725369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p><strong>真正原因在与keil5没有如下包（Legacy Device Database [no RTE]），如图:</strong></p><img src="https://img-blog.csdnimg.cn/20210606213852524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><blockquote><p><strong>解决思路：使keil5集成51芯片库</strong></p></blockquote><ol><li><p>首先我们找到51芯片库的下载地址，去官网下载即可。<br>下载地址： <a href="https://www.keil.com/download/product/">https://www.keil.com/download/product/</a></p></li><li><p>进入官网后点击C51</p></li></ol><img src="https://img-blog.csdnimg.cn/20210606214158601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p><strong>进去后需要填写一下个人信息，我们看情况填写就行了。</strong></p><ol start="3"><li>点击这个C51V960A.EXE下载安装51芯片库</li></ol><img src="https://img-blog.csdnimg.cn/20210606214424233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><blockquote><p>下载完成后以管理员身份运行，点击 <strong>next</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20210606214650227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"> <p>下一步确认自己keil5的根目录（一般默认是没问题的），Backup打勾后点击next</p><img src="https://img-blog.csdnimg.cn/20210606214813818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>下一步看情况填写:</p><p>&lt;src&#x3D;”<a href="https://img-blog.csdnimg.cn/20210606214844648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70&quot;&gt;">https://img-blog.csdnimg.cn/20210606214844648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70&quot;&gt;</a></p><p>然后点击next等待安装完成即可。注意安装前要关闭当前正在运行的keil5</p><ol start="4"><li>再次打开keil5创建工程</li></ol><p>点击project&gt;New xxxxxx创建工程，下拉菜单就出现了51单片机的芯片库</p><img src="https://img-blog.csdnimg.cn/20210606215219879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>选中后可以直接在搜索框搜索AT89C51，或者找到Microchip展开第一个就是</p><img src="https://img-blog.csdnimg.cn/20210606215423315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>点击OK之后51工程就创建成功了。</p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_43721163/article/details/117637028">KEIL5安装C51依赖，解决KEIL5无法创建C51工程</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> KEIL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KEIL5 </tag>
            
            <tag> C51 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马自达钥匙技巧等</title>
      <link href="/posts/264219034.html"/>
      <url>/posts/264219034.html</url>
      
        <content type="html"><![CDATA[<h1 id="钥匙中止功能，很多老司机也不一定知道！"><a href="#钥匙中止功能，很多老司机也不一定知道！" class="headerlink" title="钥匙中止功能，很多老司机也不一定知道！"></a>钥匙中止功能，很多老司机也不一定知道！</h1><img src="https://mmbiz.qpic.cn/mmbiz_gif/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bBIxSWp437SeAhZadk5AVNqGdIk9G5BbRTOOsGPjvtVdwIkx2fictbIw/640?wx_fmt=gif&wxfrom=5&wx_lazy=1"><h2 id="钥匙中止功能的作用"><a href="#钥匙中止功能的作用" class="headerlink" title="钥匙中止功能的作用"></a>钥匙中止功能的作用</h2><blockquote><p>当车辆防盗系统检测到钥匙被遗落在车厢或后备箱后，钥匙中止功能会被激活。此时留在车内的钥匙功能会被临时性中止，导致无法启动发动机，从而降低车辆被盗风险。</p></blockquote><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bEcMkYUsGMJ8byhVL7icoo6GkZOUpEwicsZTgP4OcKhlK0Oodf9ofLZibw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><h2 id="钥匙中止功能的触发场景"><a href="#钥匙中止功能的触发场景" class="headerlink" title="钥匙中止功能的触发场景"></a>钥匙中止功能的触发场景</h2><ul><li>带高级遥控功能的钥匙，会在以下两种情况触发钥匙中止功能：<blockquote><p>所有车门被上锁，钥匙留在后备箱内且后备箱门关闭<br>在这种情况下，可以通过按下电子开启装置的方式打开后备箱并取出钥匙，但取出的钥匙功能会暂时停止。</p></blockquote></li></ul><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bfEN7hAic99GsU2CNbVBUqVXZ6RTZJic9ZRvmPibibJjjibzf4us5xuATcfg/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><ul><li>钥匙留在车厢内时，使用另外一把钥匙使所有车门和后备箱上锁<br>在这种情况下，打开车门取出钥匙后，其功能会暂时停止。</li></ul><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bBEc7Iic3WfhCvfUnvGiaoCcSJbFrP0K3Plu3ZQkzn0ga1pAkab1XNCHw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><p><strong>注：以上两种情况发生时，车辆都会发出约 10 秒的蜂鸣声，以通知驾驶员钥匙遗留在车内。</strong></p><h2 id="如何解除钥匙中止功能"><a href="#如何解除钥匙中止功能" class="headerlink" title="如何解除钥匙中止功能"></a>如何解除钥匙中止功能</h2><blockquote><p>取回遗留在车内的钥匙后，只需在车内按下钥匙的开锁按钮便可解除钥匙中止功能，解除后发动机便可启动。</p></blockquote><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34b5N1Xe2eFefyg8GCNLGicvI5SCQzgCKsoJjibicsbz8icwH2wk87UpPaLlQ/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><h1 id="优秀评论："><a href="#优秀评论：" class="headerlink" title="优秀评论："></a>优秀评论：</h1><h2 id="长按开锁键5-6秒，然后四窗就会自动下降"><a href="#长按开锁键5-6秒，然后四窗就会自动下降" class="headerlink" title="长按开锁键5-6秒，然后四窗就会自动下降"></a>长按开锁键5-6秒，然后四窗就会自动下降</h2><p>在生活中，我想大家都遇到过这样一种烦恼，比如车中后排坐了人，然后人都习惯性的下去了，车子也熄火了，准备离开时却发现后排车窗没关。这时又要重新开启车的电源关闭车窗好麻烦啊！<br>但是马自达却又这样的冷门又实用的功能:拿起车钥匙，长按开锁键5-6秒，然后四窗就会自动下降。长按钥匙关闭键5-6秒，然后你会发现四门又奇迹般升上去了。其实还有一个更冷门的功能，有兴趣的试一下:锁-解锁-锁(不用开电源)四门车窗会开一条缝，但是好像没什么卵用。不知道厂家的意图。发现之后，带女朋友或者撩妹子时对着车门用四窗智能升降法再加上马自达的颜值，妹子一定会刮目相看，逼格提升不少呢～</p><h2 id="触摸板点击停放音乐，驾驶位置的钥匙记忆功能"><a href="#触摸板点击停放音乐，驾驶位置的钥匙记忆功能" class="headerlink" title="触摸板点击停放音乐，驾驶位置的钥匙记忆功能"></a>触摸板点击停放音乐，驾驶位置的钥匙记忆功能</h2><p>我都想给大家来个视频教学 给大家展现一下我们小昂的隐藏功能到底有哪些[旺柴]<br>首先就是触控板，设置<del>系统设置</del>触控板~勾选，然后这个触控板就可以单击暂停音乐，双击下一首音乐，方便又好玩[旺柴]<br>还有一个就是钥匙记忆功能，当我们调整到适合自己的驾驶位置跟后视镜后，按住set键，听到滴的一声响后拿出车钥匙按下解锁键，钥匙记忆功能就设置成功了[鼓掌]之后不管位置怎么调，只要我拿着设置过的钥匙解锁打开车门，都会重新调整到我自己的位置上！[旺柴]牛不牛🐮<br>总之 只要夸马自达的我们就是好朋友👬</p><h2 id="中控黑屏重启"><a href="#中控黑屏重启" class="headerlink" title="中控黑屏重启"></a>中控黑屏重启</h2><p>我们都知道有的导航会在使用时突然死机或者黑屏，然后就不知道怎么办，很麻烦！要是在高速死机黑屏真的对于不认识路又靠车上导航的人来说要哭了。马自达针对这个有特殊设计的！在中控台有几个功能键，同时长按音乐键和最右的导航键可以重启。</p><h2 id="保养提醒关闭"><a href="#保养提醒关闭" class="headerlink" title="保养提醒关闭"></a>保养提醒关闭</h2><p>马三车主报道，保养将至的时候只要开车总会跳出来提示，这个时候可以将大圆旋钮往左一掰，就可以取消了，不过不要忘记按时去保养哦[转圈]</p><h2 id="车钥匙控制升降窗户，自动启停不用关"><a href="#车钥匙控制升降窗户，自动启停不用关" class="headerlink" title="车钥匙控制升降窗户，自动启停不用关"></a>车钥匙控制升降窗户，自动启停不用关</h2><p>杠五黑骑士车主报道，分享两个很有用但大多数车主不知道的小技巧。一是车钥匙控制升降窗户。长按钥匙锁车键，可以自动升窗；长按钥匙解锁键，可以自动降窗，升降幅度以按钥匙时长随心控制，夏天散热必备神器，优雅降温！二是自动启停不用关。轻踩刹车刹住后，istop灯闪烁，松开刹车，车停住了，但是不会熄火，如果需要熄火再深踩一脚刹车即可。如果需要直接熄火可以直接重踩刹车。</p><h2 id="安全带高度调节，后排座椅放倒"><a href="#安全带高度调节，后排座椅放倒" class="headerlink" title="安全带高度调节，后排座椅放倒"></a>安全带高度调节，后排座椅放倒</h2><p>1、安全带高度可手动调节。<br>2、按两下锁车键可以寻车。<br>3、长按开锁按键，所有车窗和天窗同时打开。长按锁车按键，所有车窗和天窗关闭。<br>4、钥匙没电时，可以拔出机械钥匙打开车门，把有马自达车标的地方贴在一键启动按钮上，即可识别车钥匙打火。<br>5、汽车行驶中落锁功能可在汽车电脑的设置中设置。<br>6、汽车后排座椅可放倒，可应急使用，以及用来休息。</p><h2 id="儿童锁功能开启方式"><a href="#儿童锁功能开启方式" class="headerlink" title="儿童锁功能开启方式"></a>儿童锁功能开启方式</h2><p>“儿童锁”这个功能设置的非常好，打开此功能后，后排车门只能从车外打开，可以避免发生一些意外，保障后排儿童的安全。具体操作位置在后排副驾一侧的门上，有一个小圆孔，通过旋转孔内的小孔槽，即可开启&#x2F;关闭儿童锁。</p><h2 id="行车落锁功能"><a href="#行车落锁功能" class="headerlink" title="行车落锁功能"></a>行车落锁功能</h2><p>行车落锁🔒 可以进行手工设置和悦联系统设置。<br>下面是手工设置方法哦！<br>自动落锁5种模式先选好其中一个。<br>1：自动车门上锁功能将失效。<br>2：当车速为20km&#x2F;h或更高时速，则所有车门和后舱门将自动上锁。<br>3：出厂设定，当车速为20km&#x2F;h或更高时速，则所有车门和后备舱门将自动上锁。当点火开关从ON切换至OFF位置时，所有车门和后舱门将开锁。<br>4：当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动上锁。<br>5：当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动上锁。当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动开锁。<br>操作方法：<br>1.安全停放车辆所有车门必须关闭状态<br>2.将点火开关切换至on档<br>3.将点火开关切换至on档20秒钟内按住驾驶员车门门锁开关上的锁侧，然后约8秒钟后应听到哗的一声。<br>4.按下车门门锁开锁侧，所按次数与选择功能编号相同即可。<br>5.变更功能设定后三秒钟，将根据所选的功能编号，蜂鸣器响声几次。</p><h2 id="方向盘锁死"><a href="#方向盘锁死" class="headerlink" title="方向盘锁死"></a>方向盘锁死</h2><p>方向盘锁死，点不着火，按发动，灯闪烁后就不再反应。这时，需要将钥匙靠近启动按钮，同时手抓牢方向盘，点击启动的同时稍用力转动方向盘即可解锁。之前昂克赛拉发生过几次，用此方法屡试不爽</p><h2 id="重启系统，倒车静音，显示时间"><a href="#重启系统，倒车静音，显示时间" class="headerlink" title="重启系统，倒车静音，显示时间"></a>重启系统，倒车静音，显示时间</h2><p>MZD CONNECT马自达悦联系统懂你又贴心，自带 “隐形”重启按钮，只要将“音乐键”与“导航键”同时按下3秒，即可优雅的将死机的系统重启，而不必停车熄火再着车这些繁琐举动。<br>贴心的并不仅在重启按钮上，人性化方面也做到了细致的考虑。倒车时如果音响声音过大影响倒车雷达蜂鸣警告音的收听，可在车辆静止状态短按指挥键声音旋钮，使音响静音，不影响倒车雷达蜂鸣警告音的收听。<br>除此之外，悦联系统还可变身成为一台数字时钟，只需长按3秒音量旋钮就会关闭悦联系统，只显示时间。</p><h2 id="遥控钥匙匹配座椅-设置迎宾模式"><a href="#遥控钥匙匹配座椅-设置迎宾模式" class="headerlink" title="遥控钥匙匹配座椅,设置迎宾模式"></a>遥控钥匙匹配座椅,设置迎宾模式</h2><p>遥控钥匙匹配座椅，设置迎宾模式。首先将座椅调至合适上车位置，按遥控钥匙的解锁键，此时座椅默认为遥控钥匙1上车位置，然后将座椅调至合适驾驶位置，按设置并确认1位置，这样就设置了主驾驶迎宾模式。下次开车门主驾座椅就会自动调整到合适上车位置，到了驾驶位后按1，自动调整到驾驶位置。如有不正确，请指教</p><h2 id="马三天窗透气模式"><a href="#马三天窗透气模式" class="headerlink" title="马三天窗透气模式"></a>马三天窗透气模式</h2><p>昨天在抖音刷到马自达的视频，才知道原来马三的天窗按键往前面推是天窗透气的模式[捂脸][捂脸]</p><h2 id="自适应智能大灯"><a href="#自适应智能大灯" class="headerlink" title="自适应智能大灯"></a>自适应智能大灯</h2><p>很贴心的自适应智能大灯<br>细心的马自达车主会发现，大灯会自动调节高度，它会根据坐上的人调节，是不是很智能。如果感觉不到的车主，可以把车开到墙边，坐上人就很明显了。还有不知道你们发现没有，当你在上坡时或者下坡时灯光会根据路段的变化而变化，下坡会把灯光往下聚集，因为在马自达的左后悬挂下有一个接收感应数据的随动传感器，连接部分的是一节球头，当车辆上坡车的重心在车尾，后悬挂下摆臂弹簧弹起，球头杆受感应，纵向角度拉长。由传感器传输数据到ecu再传输到大灯模组控制单元根据数据调整光聚(下坡同理)</p><h2 id="CX5锁车，车尾门电子锁"><a href="#CX5锁车，车尾门电子锁" class="headerlink" title="CX5锁车，车尾门电子锁"></a>CX5锁车，车尾门电子锁</h2><p>1。CX5停车按下一键启动熄火后，发现后面2个车窗没关，不用再按一键启动通电后升玻璃，只要4个车门没有开车门的动作，就可以直接在主驾驶升车窗玻璃，如果乘客已经开车门，下车后长按遥控器锁车键可以自动关闭4门车窗。相反长按解锁键自动降下车窗。<br>2。车尾门开门把手右边10厘米，有个电子锁车按钮(只能锁，不能开)<br>3。后排座椅靠背有2档可调，跑长途坐累了只需要在靠背上端把塑料抠手抬一下即可往后放躺几度，长途更舒适。<br>4。后挡除霜开关即后视镜除霜开关。两者同一个开关，很多新车主不知道。<br>5。大灯高度调节是自动的。点火后，行车电脑会根据当前车重自动调节高低，当然也可以打开机盖用一把十字起，垂直插入大灯后方的圆孔里自己调节。<br>6。车机悦联系统是可以播放无损格式音乐的。自己用音乐app下载FLAC无损格式，再用小程序改后缀名为.MP3，车机即可识别播放，建议用SD卡，可腾个USB接口出来。<br>7。建议车主到当地4S店加装胎压显示模块，右视辅助，电动尾门一脚踢开关。这3个功能非常实用。</p><h2 id="音乐功能"><a href="#音乐功能" class="headerlink" title="音乐功能"></a>音乐功能</h2><p>令天发现了马三的隐藏小功能，当音乐在播放时候轻点一下音乐就会暂停，点俩下就会换下一首！功能虽小但是很实用，驾驶时不用分心了！车行千里，安全第一！为马三点赞！</p><h2 id="放倒后排座椅，钥匙无法开门启动"><a href="#放倒后排座椅，钥匙无法开门启动" class="headerlink" title="放倒后排座椅，钥匙无法开门启动"></a>放倒后排座椅，钥匙无法开门启动</h2><p>次世代马自达3<br>在副驾驶后排位置，找到隐藏开关，扣开顺着箭头的方向掰动按键，这样就能放到后排座椅了。<br>当遥控钥匙无法开门时，用机械钥匙，拉开门把手，一拧门就开了。<br>车辆挂P挡时候再按键的上面有盖子，扣开，用坚硬的物体捅下，就能解锁推车了。</p><h2 id="智能钥匙的功能："><a href="#智能钥匙的功能：" class="headerlink" title="智能钥匙的功能："></a>智能钥匙的功能：</h2><p>1、携带钥匙贴近车辆，触模主驾驶车门把手的感应区，可以智能开启或锁止车门。<br>2、遥控钥匙失灵或电池没电，可以打开隐藏的钥匙手动开锁，进入车内。<br>3、智能钥匙无电，将钥匙贴在方向盘右侧下面带有钥匙标志的感应区，可以启动车辆。<br>4、停车熄火后，长按锁止键，可以一键升窗或落窗。<br>5、长按带有背箱开启标志的按键，可以开启或关闭后备箱。<br>6、携带钥匙靠近车辆，用脚扫扫后导流板下面，可以感应开启后备箱。</p><h2 id="座椅迎宾功能"><a href="#座椅迎宾功能" class="headerlink" title="座椅迎宾功能"></a>座椅迎宾功能</h2><p>座椅迎宾功能!有电动座椅这项功能的车主可以看下说明手册，只要调节好自己的座椅，后视镜，储存激活。如果有人开了你的车，你上车还要调整你舒适的坐姿，这个时候只需要电子钥匙在身边，使用无钥匙进入，打开车门，你会发现座椅和后视镜会自动的在调整，调整到你设置好的坐姿和后视镜角度!</p><h2 id="无钥匙进入功能失灵各种情况"><a href="#无钥匙进入功能失灵各种情况" class="headerlink" title="无钥匙进入功能失灵各种情况"></a>无钥匙进入功能失灵各种情况</h2><p>锁车自动落锁功能需要在中控屏幕设置打开离车落锁功能，注意次时代无钥匙进入需要下车关门，并且出现滴的一声才会自动落锁！<br>分析无钥匙进入功能失灵各种情况：<br>可能会出现自动落锁（下车自动锁车）失灵的操作：<br>0.钥匙进入了省电模式（一般是这个原因的多）-退出即可<br>1.主副驾驶门不是最后一个关闭<br>2.车门，后尾箱没有关闭<br>3.副驾驶上的门把手有人在摸着不放<br>4.雨天门把手湿了<br>5.把手插进门把手里面关门<br>6.钥匙套是金属的<br>7.钥匙距离过远<br>8.拉开车门，短时间内又关车门<br>9.钥匙电量不足<br>可能会出现无钥匙进入（上车自动解锁）失灵的操作:<br>1.钥匙进入了省电模式-退出即可<br>2.上车的时候副驾驶比你先摸门把手<br>3.没有把手插入门把手里面拉<br>4.门把手有水<br>5.钥匙电量不足<br>6.钥匙套是金属的<br>7.钥匙距离过远</p><h2 id="儿童锁"><a href="#儿童锁" class="headerlink" title="儿童锁"></a>儿童锁</h2><p>最实用的功能莫过于左右后车门的儿童锁了，别看只是那一点点的白色小按钮，安全作用不言而喻，孩子玩嗨了，上车下车就会把安全抛之脑后，等红绿灯时也不用担心她们随意下车，很安全的设计！</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://mp.weixin.qq.com/s/I-e1iIVbQKoBonOJr3t7Kg">钥匙中止功能，很多老司机也不一定知道！</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 生活技能 </category>
          
          <category> 马自达 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汽车 </tag>
            
            <tag> 马自达 </tag>
            
            <tag> 生活类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批处理常用命令总结 - 批处理命令简介(转载)</title>
      <link href="/posts/1240814313.html"/>
      <url>/posts/1240814313.html</url>
      
        <content type="html"><![CDATA[<h1 id="批处理常用命令总结-批处理命令简介"><a href="#批处理常用命令总结-批处理命令简介" class="headerlink" title="批处理常用命令总结 - 批处理命令简介"></a>批处理常用命令总结 - 批处理命令简介</h1><h3 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h3><p>打开回显或关闭请求回显功能，或显示消息。如果没有任何参数，echo 命令将显示当前回显设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo [&#123;on|off&#125;] [message]</span><br><span class="line">Sample：@echo off &#x2F; echo hello world</span><br></pre></td></tr></table></figure><p>在实际应用中我们会把这条命令和重定向符号（也称为管道符号，一般用<code>&gt;</code> <code>&gt;&gt;</code> <code>^</code>）结合来实现输入一些命令到特定的文件中。</p><h3 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h3><p>注释命令，类似于在C语言中的<code>/*--------*/</code>，它并不会被执行，只是起一个注释的作用，便于别人阅读和你自己日后修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Rem Message</span><br><span class="line">Sample：@Rem Here is the description.</span><br></pre></td></tr></table></figure><h3 id="pause"><a href="#pause" class="headerlink" title="pause"></a>pause</h3><p>暂停命令。运行 Pause 命令时，将显示下面的消息：<code>Press any key to continue. . .(或：请按任意键继续. . .)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample：</span><br><span class="line">@echo off</span><br><span class="line">:begin</span><br><span class="line">copy G:*.* d：&#x2F;back</span><br><span class="line">echo 请插入另一张光盘...</span><br><span class="line">pause</span><br><span class="line">goto begin</span><br></pre></td></tr></table></figure><p>在这个例子中，驱动器 G 中磁盘上的所有文件均复制到d:&#x2F;back中。显示的注释提示您将另一张光盘盘放入驱动器 G 时，pause 命令会使程序挂起，以便您更换光盘，然后按任意键继续处理。</p><h3 id="call"><a href="#call" class="headerlink" title="call"></a>call</h3><p>从一个批处理程序调用另一个批处理程序，并且不终止父批处理程序。call 命令接受用作调用目标的标签。如果在脚本或批处理文件外使用 Call，它将不会在命令行起作用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">call [[Drive:][Path] FileName ] [:label [arguments]]</span><br><span class="line">参数</span><br><span class="line">[Drive:&#125;[Path] FileName</span><br></pre></td></tr></table></figure><p>指定要调用的批处理程序的位置和名称。</p><h3 id="start-命令"><a href="#start-命令" class="headerlink" title="start 命令"></a>start 命令</h3><p>调用外部程序，所有的DOS命令和命令行程序都可以由start命令来调用。 如：start calc.exe 即可打开Windows的计算器。</p><ul><li><p>常用参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MIN 开始时窗口最小化</span><br><span class="line">SEPARATE 在分开的空间内开始 16 位 Windows 程序</span><br><span class="line">HIGH 在 HIGH 优先级类别开始应用程序</span><br><span class="line">REALTIME 在 REALTIME 优先级类别开始应用程序</span><br><span class="line">WAIT 启动应用程序并等候它结束</span><br><span class="line">parameters 这些为传送到命令&#x2F;程序的参数</span><br></pre></td></tr></table></figure></li></ul><p>执行的应用程序是 32-位 GUI 应用程序时，CMD.EXE 不等应用程序终止就返回命令提示。如果在命令脚本内执行，该新行为则不会发生。</p><h3 id="goto"><a href="#goto" class="headerlink" title="goto"></a>goto</h3><p>跳转命令。程序指针跳转到指定的标签，从标签后的第一条命令开始继续执行批处理程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">goto label （label是参数，指定所要转向的批处理程序中的行。）</span><br><span class="line">Sample：</span><br><span class="line">if &#123;%1&#125;&#x3D;&#x3D;&#123;&#125; goto noparms</span><br><span class="line">if &#123;%2&#125;&#x3D;&#x3D;&#123;&#125; goto noparms（如果这里的if、%1、%2你不明白的话，先跳过去，后面会有详细的解释</span><br><span class="line">。）</span><br><span class="line">@Rem check parameters if null show usage</span><br><span class="line">:noparms</span><br><span class="line">echo Usage: monitor.bat ServerIP PortNumber</span><br><span class="line">goto end</span><br></pre></td></tr></table></figure><p>标签的名字可以随便起，但是最好是有意义的字母啦，字母前加个：用来表示这个字母是标签，goto命令就是根据这个：来寻找下一步跳到到那里。最好有一些说明这样你别人看起来才会理解你的意图啊。</p><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>显示、设置或删除变量。</p><p>显示变量：set 或 set s 前者显示批处理当前已定义的所有变量及其值，后者显示所有以s开头的变量及值。</p><p>设置变量：set aa&#x3D;abcd 此句命令便可向变量aa赋值abcd。</p><p>如果变量aa已被定义，则aa的值被修改为abcd；若aa尚未定义，则此句命令即可定义新的变量aa，同时为变量aa赋予初始值abcd。</p><p>删除变量：set aa&#x3D; 此句命令即可删除变量aa。若变量aa已被定义，则删除变量aa；若aa尚未定义，则此句命令为实质意义。</p><p>需要说明的是，批处理中的变量是不区分类型的，不需要像C语言中的变量那样还要区分int、float、char等。比如执行set aa&#x3D;345后，变量aa的值既可以被视为数字345，也可以被视为字符串345。</p><p>set命令具有扩展功能，如用作交互输入、字符串处理、数值计算等，属于高级命令范畴。</p><h3 id="批处理常用命令及用法大全"><a href="#批处理常用命令及用法大全" class="headerlink" title="批处理常用命令及用法大全"></a>批处理常用命令及用法大全</h3><p>阅读下面文字需要一定的dos基础概念，象：盘符、文件、目录(文件夹)、子目录、根目录、当前目录</p><p>每个命令的完整说明请加 &#x2F;? 参数参考微软的帮助文档可以看到，在 &#x2F;? 帮助里，”命令扩展名”一词会经常出现”命令扩展名”是指相对于win98的dos版本而言，每个命令新增的功能命令测试环境win2000proSP4win98的命令功能太少，就不作研究了。</p><p>注：如果对某一命令还不是很熟悉，可以在命令行窗口下输入：命令名&#x2F;?的方式来获得帮助。</p><p>例如：对dir命令的应用不熟悉，可以在命令行窗口下输入：<code>dir /?</code></p><ul><li><p>echo 和 @回显控制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@                    #关闭单行回显</span><br><span class="line">echo off             #从下一行开始关闭回显</span><br><span class="line">@echo off            #从本行开始关闭回显。一般批处理第一行都是这个</span><br><span class="line">echo on              #从下一行开始打开回显</span><br><span class="line">echo                 #显示当前是 echo off 状态还是 echo on 状态</span><br><span class="line">echo.                #输出一个&quot;回车换行&quot;，一般就是指空白行</span><br><span class="line">echo hello world     #输出hello world</span><br></pre></td></tr></table></figure></li></ul><p>“关闭回显”是指运行批处理文件时，不显示文件里的每条命令，只显示运行结果批处理开始和结束时，系统都会自动打开</p><ul><li>errorlevel程序返回码</li></ul><p>echo %errorlevel%每个命令运行结束，可以用这个命令行格式查看返回码用于判断刚才的命令是否执行成功默认值为0，</p><p>一般命令执行出错会设 errorlevel 为1</p><ul><li><p>dir显示目录中的文件和子目录列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dir                 #显示当前目录中的文件和子目录</span><br><span class="line">dir &#x2F;a              #显示当前目录中的文件和子目录，包括隐藏文件和系统文件</span><br><span class="line">dir c: &#x2F;a:d         #显示 C 盘当前目录中的目录</span><br><span class="line">dir c:&#x2F; &#x2F;a:-d       #显示 C 盘根目录中的文件dir d:&#x2F;mp3 &#x2F;b&#x2F;p     #逐屏显示 d:&#x2F;mp3 目录里的文件，只显示文件名，不显示时间和大小</span><br><span class="line">dir *.exe &#x2F;s        #显示当前目录和子目录里所有的.exe文件其中 * 是通配符，代表所有的文件名，还一个通配符 ? 代表一个</span><br><span class="line">                    #任意字母或汉字如 c*.* 代表以 c 开头的所有文件?.exe 代表所有文件名是一个字母的.exe文件如果指定的目录或文件</span><br><span class="line">                    #不存在，将返回 errorlevel 为1;</span><br><span class="line"></span><br><span class="line"># 每个文件夹的 dir 输出都会有2个子目录 . 和 ... 代表当前目录.. 代表当前目录的上级目录</span><br><span class="line">dir .               #显示当前目录中的文件和子目录</span><br><span class="line">dir ..              #显示当前目录的上级目录中的文件和子目录</span><br></pre></td></tr></table></figure></li></ul><p>其它参数可参考 dir &#x2F;?</p><ul><li><p>cd更改当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd mp3              #进入当前目录中的mp3 目录</span><br><span class="line">cd ..               #进入当前目录中的上级目录</span><br><span class="line">cd&#x2F;                 #进入根目录</span><br><span class="line">cd                  #显示当前目录</span><br><span class="line">cd &#x2F;d d:&#x2F;mp3        #可以同时更改盘符和目录</span><br><span class="line">cd &quot;Documents and Settings&quot;&#x2F;All users文件名带空格，路径前需要加上引号！！如果更改到的目录不存在，则出错返</span><br></pre></td></tr></table></figure></li><li><p>md创建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md abc              #在当前目录里建立子目录 abc</span><br><span class="line">md d:&#x2F;a&#x2F;b&#x2F;c         #如果 d:&#x2F;a 不存在，将会自动创建</span><br></pre></td></tr></table></figure></li><li><p>rd删除目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rd abc              #删除当前目录里的 abc 子目录，要求为空目录</span><br><span class="line">rd &#x2F;s&#x2F;q d:&#x2F;temp     #删除 d:&#x2F;temp 文件夹及其子文件夹和文件，不需要按 Y 确认</span><br></pre></td></tr></table></figure></li><li><p>del删除文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">del d:&#x2F;test.txt     #删除指定文件，不能是隐藏、系统、只读文件</span><br><span class="line">del *.*删除当前目录里的所有文件，不包括隐藏、系统、只读文件，要求按 Y 确认</span><br><span class="line">del &#x2F;q&#x2F;a&#x2F;f d:&#x2F;temp&#x2F;*.*删除 d:&#x2F;temp 文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录</span><br><span class="line">del &#x2F;q&#x2F;a&#x2F;f&#x2F;s d:&#x2F;temp&#x2F;*.*删除 d:&#x2F;temp 及子文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录</span><br></pre></td></tr></table></figure></li><li><p>ren文件重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ren 1.txt 2.bak     #把 1.txt 更名为 2.bak</span><br><span class="line">ren *.txt *.ini     #把当前目录里所有.txt文件改成.ini文件</span><br><span class="line">ren d:&#x2F;temp tmp     #支持对文件夹的重命名</span><br></pre></td></tr></table></figure></li><li><p>cls清屏</p></li><li><p>type显示文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type c:&#x2F;boot.ini    #显示指定文件的内容，程序文件一般会显示乱码</span><br><span class="line">type *.txt          #显示当前目录里所有.txt文件的内容</span><br></pre></td></tr></table></figure></li><li><p>copy拷贝文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">copy c:&#x2F;test.txt d:&#x2F;复制 c:&#x2F;test.txt 文件到 d:&#x2F;</span><br><span class="line">copy c:&#x2F;test.txt d:&#x2F;test.bak复制 c:&#x2F;test.txt 文件到 d:&#x2F; ，并重命名为 test.bak</span><br><span class="line">copy c:&#x2F;*.*复制 c:&#x2F; 所有文件到当前目录，不包括隐藏文件和系统文件不指定目标路径，则默认目标路径为当前目录</span><br><span class="line">copy con test.txt从屏幕上等待输入，按 Ctrl+Z 结束输入，输入内容存为test.txt文件con代表屏幕，prn代表打印机，nul代表空设备</span><br><span class="line">copy 1.txt + 2.txt 3.txt合并 1.txt 和 2.txt 的内容，保存为 3.txt 文件如果不指定 3.txt ，则保存到 1.txt</span><br><span class="line">copy test.txt +复制文件到自己，实际上是修改了文件日期</span><br></pre></td></tr></table></figure></li><li><p>title设置cmd窗口的标题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title 新标题        #可以看到cmd窗口的标题栏变了</span><br></pre></td></tr></table></figure></li><li><p>ver显示系统版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">14 label 和 vol设置卷标</span><br><span class="line">vol                 #显示卷标</span><br><span class="line">label               #显示卷标，同时提示输入新卷标</span><br><span class="line">label c:system      #设置C盘的卷标为 system</span><br></pre></td></tr></table></figure></li><li><p>pause暂停命令</p></li></ul><p>运行该命令时，将显示消息：<code>请按任意键继续 . . .</code>，一般用于看清楚屏幕上显示的内容</p><ul><li>rem 和 ::注释命令</li></ul><p>注释行不执行操作</p><ul><li><p>date 和 time日期和时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">date          #显示当前日期，并提示输入新日期，按&quot;回车&quot;略过输入</span><br><span class="line">date&#x2F;t        #只显示当前日期，不提示输入新日期</span><br><span class="line">time          #显示当前时间，并提示输入新时间，按&quot;回车&quot;略过输入</span><br><span class="line">time&#x2F;t        #只显示当前时间，不提示输入新时间</span><br></pre></td></tr></table></figure></li><li><p>goto 和 :跳转命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:label        #行首为:表示该行是标签行，标签行不执行操作</span><br><span class="line">goto label    #跳转到指定的标签那一行</span><br></pre></td></tr></table></figure></li><li><p>find (外部命令)查找命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find &quot;abc&quot; c:&#x2F;test.txt在 c:&#x2F;test.txt 文件里查找含 abc 字符串的行如果找不到，将设 errorlevel 返回码为1</span><br><span class="line">find &#x2F;i &quot;abc&quot; c:&#x2F;test.txt查找含 abc 的行，忽略大小写</span><br><span class="line">find &#x2F;c &quot;abc&quot; c:&#x2F;test.txt显示含 abc 的行的行数</span><br></pre></td></tr></table></figure></li><li><p>more (外部命令)逐屏显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more c:&#x2F;test.txt    #逐屏显示 c:&#x2F;test.txt 的文件内容</span><br></pre></td></tr></table></figure></li><li><p>tree显示目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree d:&#x2F;            #显示D盘的文件目录结构</span><br></pre></td></tr></table></figure></li><li><p>&amp;顺序执行多条命令，而不管命令是否执行成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c: &amp; cd&#x2F; &amp; dir &#x2F;w相当于把下面3行命令写到1行去了c:cd&#x2F;dir &#x2F;w</span><br></pre></td></tr></table></figure></li><li><p>&amp;&amp;顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f: &amp;&amp; cd&#x2F; &amp;&amp; dir &gt;c:&#x2F;test.txt注意如果f盘不存在，那么后面2条命令将不会执行</span><br><span class="line">find &quot;ok&quot; c:&#x2F;test.txt &amp;&amp; echo 成功如果找到了&quot;ok&quot;字样，就显示&quot;成功&quot;，找不到就不显示</span><br></pre></td></tr></table></figure></li><li><p>||顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find &quot;ok&quot; c:&#x2F;test.txt || echo 不成功如果找不到&quot;ok&quot;字样，就显示&quot;不成功&quot;，找到了就不显示</span><br></pre></td></tr></table></figure></li><li><p>|管道命令</p></li></ul><p>前一个命令的执行结果输出到后一个命令</p><p><code>dir *.* /s/a | find /c &quot;.exe&quot;</code>管道命令表示先执行 dir 命令，对其输出的结果执行后面的 find 命令该命令行结果：</p><p>输出当前文件夹及所有子文件夹里的.exe文件的个数</p><p><code>type c:/test.txt|more</code>这个和 more c:&#x2F;test.txt 的效果是一样的</p><ul><li>&gt; 和 &gt;&gt;输出重定向命令</li></ul><p>&gt; 清除文件中原有的内容后再写入</p><p>&gt;&gt; 追加内容到文件末尾，而不会清除原有的内容主要将本来显示在屏幕上的内容输出到指定文件中指定文件如果不存在，则自动生成该文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo hello world&gt;c:&#x2F;test.txt   生成c:&#x2F;test.txt文件，内容为hello world这个格式在批处理文件里用得很多，可以生成.reg .bat .vbs 等临时文件</span><br><span class="line">type c:&#x2F;test.txt &gt;prn          屏幕上不显示文件内容，转向输出到打印机</span><br><span class="line">echo hello world&gt;con           在屏幕上显示hello world，实际上所有输出都是默认 &gt;con 的</span><br><span class="line">copy c:&#x2F;test.txt f: &gt;nul       拷贝文件，并且不显示&quot;文件复制成功&quot;的提示信息，但如果f盘不存在，还是会显示出错信息</span><br><span class="line">copy c:&#x2F;test.txt f: &gt;nul 2&gt;nul 不显示&quot;文件复制成功&quot;的提示信息，并且f盘不存在的话，也不显示错误提示信息</span><br><span class="line">echo ^^W ^&gt; ^W&gt;c:&#x2F;test.txt     生成的文件内容为 ^W &gt; W^ 和 &gt; 是控制命令，要把它们输出到文件，必须在前面加个 ^符号</span><br></pre></td></tr></table></figure><ul><li><code>&lt;</code> 从文件中获得输入信息，而不是从屏幕上</li></ul><p>一般用于 date time label 等需要等待输入的命令，这样就可以不等待输入直接修改当前日期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo 2005-05-01&gt;temp.txt</span><br><span class="line">date &lt;temp.txt</span><br><span class="line">del temp.txt</span><br></pre></td></tr></table></figure><ul><li>%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %*命令行传递给批处理的参数<ul><li>%0 批处理文件本身</li><li>%1 第一个参数</li><li>%9 第九个参数</li><li>%* 从第一个参数开始的所有参数</li></ul></li></ul><p>在C盘根目录新建test.bat，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo %0</span><br><span class="line">echo %1</span><br><span class="line">echo %2</span><br><span class="line">echo %*</span><br></pre></td></tr></table></figure><p>运行cmd，输入 <code>c:/test.bat &quot;/a&quot; /b /c /d</code>,可以看出每个参数的含意 修改test.bat内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo %1</span><br><span class="line">echo %~1</span><br><span class="line">echo %0</span><br><span class="line">echo %~f0</span><br><span class="line">echo %~d0</span><br><span class="line">echo %~p0</span><br><span class="line">echo %~n0</span><br><span class="line">echo %~x0</span><br><span class="line">echo %~s0</span><br><span class="line">echo %~a0</span><br><span class="line">echo %~t0</span><br><span class="line">echo %~z0</span><br></pre></td></tr></table></figure><p>再运行cmd，输入 <code>c:/test.bat &quot;/a&quot; /b /c /d</code>可以参照 call&#x2F;? 或 for&#x2F;? 看出每个参数的含意，注意这里可以对文件进行日期比较和大小比较：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo load &quot;%%1&quot; &quot;%%2&quot;&gt;c:&#x2F;test.txt</span><br></pre></td></tr></table></figure><p>生成的文件内容为 load “%1” “%2”批处理文件里，用这个格式把命令行参数输出到文件</p><ul><li>set设置变量</li></ul><p>引用变量可在变量名前后加 % ，即 %变量名%</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">set                    #显示目前所有可用的变量，包括系统变量和自定义的变量</span><br><span class="line">echo %SystemDrive%     #显示系统盘盘符。系统变量可以直接引用</span><br><span class="line">set p                  #显示所有以p开头的变量，要是一个也没有就设errorlevel&#x3D;1</span><br><span class="line">set p&#x3D;aa1bb1aa2bb2     #设置变量p，并赋值为 &#x3D; 后面的字符串，即aa1bb1aa2bb2</span><br><span class="line">echo %p%               #显示变量p代表的字符串，即aa1bb1aa2bb2</span><br><span class="line">echo %p:~6%            #显示变量p中第6个字符以后的所有字符，即aa2bb2</span><br><span class="line">echo %p:~6,3%          #显示第6个字符以后的3个字符，即aa2</span><br><span class="line">echo %p:~0,3%          #显示前3个字符，即aa1</span><br><span class="line">echo %p:~-2%           #显示最后面的2个字符，即b2</span><br><span class="line">echo %p:~0,-2%         #显示除了最后2个字符以外的其它字符，即aa1bb1aa2b</span><br><span class="line">echo %p:aa&#x3D;c%          #用c替换变量p中所有的aa，即显示c1bb1c2bb2</span><br><span class="line">echo %p:aa&#x3D;%           #将变量p中的所有aa字符串置换为空，即显示1bb12bb2</span><br><span class="line">echo %p:*bb&#x3D;c%         #第一个bb及其之前的所有字符被替换为c，即显示c1aa2bb2</span><br><span class="line">set p&#x3D;%p:*bb&#x3D;c%        #设置变量p，赋值为 %p:*bb&#x3D;c% ，即c1aa2bb2</span><br><span class="line">set &#x2F;a p&#x3D;39            #设置p为数值型变量，值为39</span><br><span class="line">set &#x2F;a p&#x3D;39&#x2F;10         #支持运算符，有小数时用去尾法，39&#x2F;10&#x3D;3.9，去尾得3，p&#x3D;3set &#x2F;a p&#x3D;p&#x2F;10</span><br><span class="line">                       #用 &#x2F;a 参数时，在 &#x3D; 后面的变量可以不加%直接引用set &#x2F;a p&#x3D;&quot;1&amp;0&quot;</span><br><span class="line">                       #&quot;与&quot;运算，要加引号。其它支持的运算符参见set&#x2F;?</span><br><span class="line">set p&#x3D;                 #取消p变量</span><br><span class="line">set &#x2F;p p&#x3D;              请输入屏幕上显示&quot;请输入&quot;，并会将输入的字符串赋值给变量p注意这条可以用来取代 choice 命令</span><br></pre></td></tr></table></figure><p>注意变量在 if 和 for 的复合语句里是一次性全部替换的，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set p&#x3D;aaa</span><br><span class="line">if %p%&#x3D;&#x3D;aaa (   </span><br><span class="line">echo %p%  </span><br><span class="line">set p&#x3D;bbb   </span><br><span class="line">echo %p%    )</span><br></pre></td></tr></table></figure><p>结果将显示aaaaaa因为在读取 if 语句时已经将所有 %p% 替换为aaa这里的”替换”，在 &#x2F;? 帮助里就是指”扩充”、”环境变量扩充”可以启用”延缓环境变量扩充”，用 ! 来引用变量，即<code>!变量名!</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">SETLOCAL ENABLEDELAYEDEXPANSION</span><br><span class="line">set p&#x3D;aaaif %p%&#x3D;&#x3D;aaa ( </span><br><span class="line">echo %p%   </span><br><span class="line">set p&#x3D;bbb   </span><br><span class="line">echo !p!    )</span><br><span class="line">ENDLOCAL</span><br></pre></td></tr></table></figure><p>结果将显示aaabbb 还有几个动态变量，运行 set 看不到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%CD%                  #代表当前目录的字符串</span><br><span class="line">%DATE%                #当前日期</span><br><span class="line">%TIME%                #当前时间</span><br><span class="line">%RANDOM%              #随机整数，介于0~32767</span><br><span class="line">%ERRORLEVEL%          #当前ERRORLEVEL 值</span><br><span class="line">%CMDEXTVERSION%       #当前命令处理器扩展名版本号</span><br><span class="line">%CMDCMDLINE%          #调用命令处理器的原始命令行可以用echo命令查看每个变量值，如 echo %time%</span><br><span class="line"></span><br><span class="line">注意 %time%精确到毫秒，在批处理需要延时处理时可以用到</span><br></pre></td></tr></table></figure><ul><li><p>start批处理中调用外部程序的命令，否则等外部程序完成后才继续执行剩下的指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">start explorer d:&#x2F;调用图形界面打开D盘</span><br><span class="line">@echo off</span><br><span class="line">cd &#x2F;d %~dp0</span><br><span class="line">regedit &#x2F;s 劲舞团.reg</span><br><span class="line">start patcher.exe</span><br></pre></td></tr></table></figure></li></ul><p>不加 start 命令的话，”劲舞团”运行时，后面会有个黑乎乎的cmd窗口</p><ul><li><p>call批处理中调用另外一个批处理的命令，否则剩下的批处理指令将不会被执行有时有的应用程序用start调用出错的，也可以call调用</p></li><li><p>choice (外部命令)选择命令让用户输入一个字符，从而选择运行不同的命令，返回码errorlevel为1234……</p></li></ul><p>win98里是choice.com，win2000pro里没有，可以从win98里拷过来，win2003里是choice.exe</p><p>choice &#x2F;N &#x2F;C y &#x2F;T 5 &#x2F;D y&gt;nul延时5秒</p><p>下面是个 choice 语句的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem 以下在win2000pro运行通过，从win98里拷的chioce.com文件</span><br><span class="line">choice &#x2F;c:abc aaa,bbb,ccc</span><br><span class="line">if errorlevel 3 goto ccc</span><br><span class="line">if %errorlevel%&#x3D;&#x3D;2 goto bbb</span><br><span class="line">if errorlevel&#x3D;&#x3D;1 goto aaa</span><br><span class="line">rem 必须先判断数值高的返回码rem 可以看到 errorlevel 值的判断有3种写法，有时某种写法不好用，可以用另外的写法</span><br><span class="line">rem 直接运行</span><br><span class="line"></span><br><span class="line">chioce相当于运行</span><br><span class="line">choice &#x2F;c:yn:aaa</span><br><span class="line">echo aaa</span><br><span class="line">goto end</span><br><span class="line">:bbb</span><br><span class="line">echo bbb</span><br><span class="line">goto end</span><br><span class="line">:ccc</span><br><span class="line">echo ccc</span><br><span class="line">goto end</span><br><span class="line">:end</span><br></pre></td></tr></table></figure><ul><li><p>assoc 和 ftype文件关联assoc 设置’文件扩展名’关联，关联到’文件类型’ftype 设置’文件类型’关联，关联到’执行程序和参数’当你双击一个.txt文件时，windows并不是根据.txt直接判断用 notepad.exe 打开而是先判断.txt属于 txtfile ‘文件类型’再调用 txtfile 关联的命令行 txtfile&#x3D;%SystemRoot%&#x2F;system32&#x2F;NOTEPAD.EXE %1可以在”文件夹选项”→”文件类型”里修改这2种关联</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">assoc           #显示所有&#39;文件扩展名&#39;关联</span><br><span class="line">assoc .txt      #显示.txt代表的&#39;文件类型&#39;，结果显示 .txt&#x3D;txtfile</span><br><span class="line">assoc .doc      #显示.doc代表的&#39;文件类型&#39;，结果显示 .doc&#x3D;Word.Document.8</span><br><span class="line">assoc .exe      #显示.exe代表的&#39;文件类型&#39;，结果显示 .exe&#x3D;exefile</span><br><span class="line">ftype           #显示所有&#39;文件类型&#39;关联</span><br><span class="line">ftype exefile   #显示exefile类型关联的命令行，结果显示 exefile&#x3D;&quot;%1&quot; %* assoc .txt&#x3D;Word.Document.8设置.txt为word类型的文档，可以看到.txt文件的图标都变了</span><br><span class="line">assoc .txt&#x3D;txtfile恢复.txt的正确关联 ftype exefile&#x3D;&quot;%1&quot; %*恢复 exefile 的正确关联</span><br></pre></td></tr></table></figure></li></ul><p>如果该关联已经被破坏，可以运行 command.com ，再输入这条命令</p><ul><li><p>pushd 和 popd切换当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">c: &amp; cd&#x2F; &amp; md mp3       #在 C:&#x2F; 建立 mp3 文件夹</span><br><span class="line">md d:&#x2F;mp4               #在 D:&#x2F; 建立 mp4 文件夹</span><br><span class="line">cd &#x2F;d d:&#x2F;mp4            #更改当前目录为 d:&#x2F;mp4</span><br><span class="line">pushd c:&#x2F;mp3            #保存当前目录，并切换当前目录为 c:&#x2F;mp3</span><br><span class="line">popd                    #恢复当前目录为刚才保存的 d:&#x2F;mp4一般用处不大，在当前目录名不确定时，会有点帮助</span><br></pre></td></tr></table></figure></li><li><p>subst (外部命令)映射磁盘。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subst z: &#x2F;&#x2F;server&#x2F;d     #这样输入z:就可以访问&#x2F;&#x2F;server&#x2F;d了</span><br><span class="line">subst z: &#x2F;d             #取消该映射</span><br><span class="line">subst                   #显示目前所有的映</span><br></pre></td></tr></table></figure></li><li><p>xcopy (外部命令)文件拷贝</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcopy d:&#x2F;mp3 e:&#x2F;mp3 &#x2F;s&#x2F;e&#x2F;i&#x2F;y</span><br></pre></td></tr></table></figure><p>复制 d:&#x2F;mp3 文件夹、所有子文件夹和文件到 e:&#x2F;，覆盖已有文件，加 &#x2F;i 表示如果 e:&#x2F; 没有 mp3 文件夹就自动新建一个，否则会有询问</p><ul><li><p>39 一些不常用的内部命令</p><ul><li><code>&gt;&amp;</code> 将一个句柄的输出写入到另一个句柄的输入中</li><li><code>&lt;&amp;</code> 从一个句柄读取输入并将其写入到另一个句柄输出中</li><li>shift 命令行传递给批处理的参数不止9个时，用以切换参数</li><li>color 设置cmd窗口的显示颜色</li><li>pormpt 更改命令提示符号，默认都是 盘符:&#x2F;路径&#x2F;&gt; ，如 c:&#x2F;&gt;</li></ul></li><li><p>format (外部命令)格式化硬盘</p></li></ul><p><code>format c: /q/u/autotest/</code>，q表示快速格式化，&#x2F;autotest表示自动格式化，不需要按 Y 确认，&#x2F;u表示每字节用F6覆盖硬盘数据，使其不可用软件恢复</p><p>format c: &#x2F;c格式化C盘，并检测坏道</p><ul><li><p>fdisk (外部命令)硬盘分区win2000不带该命令win98里的fdisk不支持80G以上大硬盘，winme里的支持fdisk&#x2F;mbr重建硬盘分区表，一般用于清除引导区病毒、还原精灵注意使用该命令不能从硬盘启动，必须软驱或光驱启动后直接运行</p></li><li><p>ping (外部命令)</p></li></ul><p>ping -l 65500 -t 192.168.1.200不停的向192.168.1.200计算机发送大小为65500byte的数据包</p><p>ping -n 10 127.0.0.1&gt;nulping自己10次，可用于批处理延时10秒</p><ul><li><p>SC (外部命令)服务控制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sc create aaa displayname&#x3D; bbb start&#x3D; auto binpath&#x3D; &quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;alg.exe&quot;创建服务，服务名称aaa，显示名称bbb，启动类型:自动可执行文件的路径&quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;alg.exe&quot;</span><br><span class="line">sc description aaa &quot;ccc&quot;更改aaa的描述为ccc</span><br><span class="line">sc config aaa start&#x3D; disabled binpath&#x3D; &quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;svchost.exe -k netsvcs&quot;更改aaa的启动类型:已禁用更改aaa的可执行文件的路径&quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;svchost.exe -k netsvcs&quot;</span><br><span class="line">sc config aaa start&#x3D; demand displayname&#x3D; ddd更改aaa的启动类型:手动更改aaa的显示名称ddd</span><br><span class="line">sc start aaa启动aaa服务</span><br><span class="line">sc stop aaa停止aaa服务</span><br><span class="line">sc delete aaa删除aaa服务</span><br></pre></td></tr></table></figure></li></ul><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html">批处理常用命令总结 - 批处理命令简介</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Virtual box 6.1 0x80004005 错误</title>
      <link href="/posts/939509364.html"/>
      <url>/posts/939509364.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>原本要备份虚拟机系统，中途觉得等时间太久就手动停止运行。然后再想打开运行系统时就提示 不能为虚拟电脑 ubuntu for Tuya 打开一个新任务<br>网上找很多方法，也卸载重装好多次都无果！</p><h1 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h1><blockquote></blockquote><p>不能为虚拟电脑 win2k3_x641 打开一个新任务.<br>The virtual machine ‘win2k3_x641’ has terminated unexpectedly during startup with exit code 1 (0x1).  More details may be available in ‘D:\temp\win2k3_x641\Logs\VBoxHardening.log’.<br>返回 代码: E_FAIL (0x80004005)<br>组件: MachineWrap<br>界面: IMachine {85632c68-b5bb-4316-a900-5eb28d3413df}</p><img src="https://img-blog.csdnimg.cn/20200303175136545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6Z2V5ZQ==,size_16,color_FFFFFF,t_70"><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><blockquote><p><strong>反复对比研究终于解决问题:<br>问题出在启动菜单式按钮,不能直接点击虚拟机界面上的”启动”按钮,而是要选另2个启动方式</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20200303175352644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6Z2V5ZQ==,size_16,color_FFFFFF,t_70"><h1 id="其他参考-网上很多用这种方法（方法无效）"><a href="#其他参考-网上很多用这种方法（方法无效）" class="headerlink" title="其他参考-网上很多用这种方法（方法无效）"></a>其他参考-网上很多用这种方法（方法无效）</h1><p>virtualbox虚拟机拥有丰富的功能，而且性能优异，简单易用。但最近有win8&#x2F;win10系统启动VirtualBox 5.0版本出错提示“不能为虚拟电脑XX打开一个新任务”NtCreateFile(\Device\VBoxDrvStub) failed: 0xc000000034“怎么办呢？大家不要着急，按照下面小编介绍的方法即可轻松解决了。</p><p>具体方法如下:</p><p>1、打开VirtualBox安装文件夹里的\drivers\vboxdrv文件夹（默认位置为：C:\Program Files\Oracle\VirtualBox\drivers\vboxdrv）；</p><p>2、右键VBoxDrv.inf文件；</p><p>3、点击安装；</p><img src="http://www.morefunsoft.com/uploads/allimg/210419/10320060a_0.jpg"><p>4、安装完成后重启VirtualBox即可。</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/lzgeye/article/details/104637611">Virtual box 6.1 0x80004005 错误</a></li><li><a href="http://www.morefunsoft.com/hyxg/237271.html">win8&#x2F;win10启动virtualbox虚拟机提示“不能为虚拟电脑XX打开一个新任务”怎么办</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 问题收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Virtual box </tag>
            
            <tag> 2147500037 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT版本控制(二)之常用命令说明</title>
      <link href="/posts/3836851438.html"/>
      <url>/posts/3836851438.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>QA必备 — git:</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#正常提交代码流程：</span><br><span class="line"> </span><br><span class="line">git status # 检查下工作区有哪些变动</span><br><span class="line"> </span><br><span class="line">git add &lt;file_path&gt; # 将要提交的变动添加到暂存区</span><br><span class="line"> </span><br><span class="line">git commit -m &quot;message&quot; # 将变动内容由暂存区提交到版本库</span><br><span class="line"> </span><br><span class="line">git push origin &lt;remote&gt; # 提交到远程分支</span><br><span class="line"> </span><br><span class="line">#但实际中并非如此顺利，会遇到各种异常，要顺利解决异常，需对git操作熟悉。蓝色表示QA必会。</span><br></pre></td></tr></table></figure><h1 id="git-clone-lt-版本库的网址-gt"><a href="#git-clone-lt-版本库的网址-gt" class="headerlink" title="git clone &lt;版本库的网址&gt;"></a>git clone &lt;版本库的网址&gt;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;git_url&gt;</span><br></pre></td></tr></table></figure><blockquote><p>作用：拷贝一个 Git 仓库到本地，本地目录名称与git 仓库同名。<br>操作：打开页面，单击复制仓库地址，打开终端进入指定目录后，执行git clone命令​​</p></blockquote><h1 id="git-branch-—-分支信息"><a href="#git-branch-—-分支信息" class="headerlink" title="git branch — 分支信息"></a>git branch — 分支信息</h1><h2 id="1、查看分支"><a href="#1、查看分支" class="headerlink" title="1、查看分支"></a>1、查看分支</h2><blockquote><p>作用：查看分支（前面带有*号的是当前分支）</p></blockquote><ul><li><p>查看本地分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></li><li><p>查看远程分支(origin&#x2F;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure></li><li><p>查看所有分支(本地+远程)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h2 id="2、创建本地分支"><a href="#2、创建本地分支" class="headerlink" title="2、创建本地分支"></a>2、创建本地分支</h2><blockquote><p>作用：创建一个新的本地分支</p></blockquote></li><li><p>创建但不切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;name&gt;</span><br></pre></td></tr></table></figure><blockquote><p>创建完的test分支与当前master分支代码一致</p></blockquote></li><li><p>创建且同时切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;name&gt;</span><br></pre></td></tr></table></figure><p>创建完的test_new分支与切换之前的master分支代码一致</p><h2 id="3、重命名本地分支"><a href="#3、重命名本地分支" class="headerlink" title="3、重命名本地分支"></a>3、重命名本地分支</h2></li><li><p>不强制重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m &lt;old&gt; &lt;new&gt;</span><br></pre></td></tr></table></figure></li><li><p>强制重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M &lt;old&gt; &lt;new&gt; # 转换大小写</span><br></pre></td></tr></table></figure><h2 id="4、重命名远程分支"><a href="#4、重命名远程分支" class="headerlink" title="4、重命名远程分支"></a>4、重命名远程分支</h2><blockquote><p>假设将”duoshan_pro“重命名为”master“</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch -m duoshan_pro master # 本地duoshan_pro重命名为master</span><br><span class="line"> </span><br><span class="line">git push origin master:master # 将master推到远端</span><br><span class="line"> </span><br><span class="line">git push origin :duoshan_pro # 删除远端的duoshan_pro</span><br></pre></td></tr></table></figure><h2 id="5、删除本地分支"><a href="#5、删除本地分支" class="headerlink" title="5、删除本地分支"></a>5、删除本地分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;name&gt; # -D 强制删除，</span><br></pre></td></tr></table></figure><h1 id="git-status-—-状态信息"><a href="#git-status-—-状态信息" class="headerlink" title="git status — 状态信息"></a>git status — 状态信息</h1><p>红色表示修完完未追踪，绿色表示修改完已追踪</p><blockquote><p>1）详细状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><blockquote><p>2）精简状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status -s</span><br></pre></td></tr></table></figure><blockquote></blockquote><p>​详细状态 精简状态<br>?? ：新添加未追踪 （新增但未git add）<br>A：新添加到暂存区中的文件前面有标记（新增且已git add）<br>M：该文件被修改了并被放入了暂存区。 （修改且已git add）<br>R：被重命名且已放入暂存区。（修改且已git add）<br>M：该文件被修改了但是还没被放入暂存区（修改但未git add）</p><h1 id="git-add-—-提交到暂存区"><a href="#git-add-—-提交到暂存区" class="headerlink" title="git add — 提交到暂存区"></a>git add — 提交到暂存区</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;file_path&#x2F;path&gt; # &lt;path&gt;可以是目录，也可以是目录下的具体文件</span><br></pre></td></tr></table></figure><blockquote></blockquote><p>​git add .：提交被修改(modified)和新文件(new)和文件，不包括被删除文件(deleted)<br>git add -u：提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)<br>git add -A：# 提交所有变化</p><h1 id="git-commit-—-提交到本地版本库"><a href="#git-commit-—-提交到本地版本库" class="headerlink" title="git commit — 提交到本地版本库"></a>git commit — 提交到本地版本库</h1><p>每次使用git commit 命令后，都会在本地版本库生成一个40位的哈希值，这个哈希值也叫commit-id。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “message”</span><br><span class="line">git commit --amend -m &quot;new message&quot; # 修改提交的描述信息</span><br></pre></td></tr></table></figure><h1 id="git-pull-—-从远端拉取-fetch-代码并合并-merge"><a href="#git-pull-—-从远端拉取-fetch-代码并合并-merge" class="headerlink" title="git pull — 从远端拉取(fetch)代码并合并(merge)"></a>git pull — 从远端拉取(fetch)代码并合并(merge)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; # :前后无空格</span><br></pre></td></tr></table></figure><h2 id="1）建立新的本地分支"><a href="#1）建立新的本地分支" class="headerlink" title="1）建立新的本地分支"></a>1）建立新的本地分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;remote&gt;:&lt;local&gt; # -f 强拉</span><br></pre></td></tr></table></figure><p>如：将远端分支T，拉到本地，且命名为jieqiong（此刻jieqong分支代码与远端分支T一致）</p><p>ps：git branch jieqiong也是建立本地分支，但建立完后的分支与本地所在分支一致</p><h2 id="2）拉取最新代码到本地"><a href="#2）拉取最新代码到本地" class="headerlink" title="2）拉取最新代码到本地"></a>2）拉取最新代码到本地</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;remote&gt; # 如本地已经在当前分支，则本地分支可省略，如出错则，后加-f 强拉</span><br></pre></td></tr></table></figure><p>注：更改分支代码之前，最好先git pull下，否则会发生冲突。</p><p>发生冲突后，将 &lt;&lt;&lt; &#x3D;&#x3D;&#x3D;等行信息删除，重新git add、git commit、git pull、git push等。</p><blockquote><p>（最简单的办法：去远程目标分支找对应的冲突文件，复制到本地对应文件，再git commit）</p></blockquote><h1 id="git-fetch-—-从远端拉取代码到版本库"><a href="#git-fetch-—-从远端拉取代码到版本库" class="headerlink" title="git fetch — 从远端拉取代码到版本库"></a>git fetch — 从远端拉取代码到版本库</h1><blockquote><p>作用：相当于是从远程获取最新版本到本地,不会自动merge。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin develop:tmp &#x2F;&#x2F; 拉取远程develop分支，并放到本地tmp分支上 </span><br><span class="line">git fetch orgin master &#x2F;&#x2F;将远程仓库的master分支下载到本地当前branch中 </span><br><span class="line">git merge — 整合提交</span><br></pre></td></tr></table></figure><blockquote><p>作用：合并指定分支到当前分支，你需要往哪个分支上面合并，就要切换到哪个分支。<br>假设有一个开发分支dev，有一个主干分支master，现在要 把dev分支merge到master分支，保证两个分支都是最新的状态后，执行。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout master </span><br><span class="line">git merge dev </span><br><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line"> # :前后无空格</span><br></pre></td></tr></table></figure><h2 id="1）建立新的远程分支"><a href="#1）建立新的远程分支" class="headerlink" title="1）建立新的远程分支"></a>1）建立新的远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;local&gt;:&lt;remote&gt; </span><br></pre></td></tr></table></figure><p>建立远程分支test：即将本地test推向远端test，有异常则使用-f强制</p><h2 id="2）推送到已有远程分支"><a href="#2）推送到已有远程分支" class="headerlink" title="2）推送到已有远程分支"></a>2）推送到已有远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;test&gt; # 当前所在分支，与欲推送本地分支一致时，可省略本地分支 </span><br></pre></td></tr></table></figure><h2 id="3）删除指定远程分支"><a href="#3）删除指定远程分支" class="headerlink" title="3）删除指定远程分支"></a>3）删除指定远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;test&gt; # 用:号前的空格代替:号后的test分支，代表删除test </span><br><span class="line">git push origin -d &lt;test&gt; # 二者等价，-D表强制删除</span><br></pre></td></tr></table></figure><h1 id="​git-checkout-—-切换分支-x2F-恢复工作区"><a href="#​git-checkout-—-切换分支-x2F-恢复工作区" class="headerlink" title="​git checkout — 切换分支&#x2F;恢复工作区"></a>​git checkout — 切换分支&#x2F;恢复工作区</h1><h2 id="1）切换分支"><a href="#1）切换分支" class="headerlink" title="1）切换分支"></a>1）切换分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch&gt; # 切换已有分支 </span><br><span class="line">git checkout -b &lt;branch&gt; # 新建并切换分支，见 2-（2）节</span><br></pre></td></tr></table></figure><h2 id="2）撤销工作区的修改（未git-add）"><a href="#2）撤销工作区的修改（未git-add）" class="headerlink" title="2）撤销工作区的修改（未git add）"></a>2）撤销工作区的修改（未git add）</h2><p>ps：未执行git add</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- &lt;file&gt; # 放弃在工作区的文件更改 </span><br><span class="line">git checkout . # 放弃所有文件的修改 </span><br></pre></td></tr></table></figure><h1 id="git-reset-—-回退暂存区-x2F-版本库"><a href="#git-reset-—-回退暂存区-x2F-版本库" class="headerlink" title="git reset — 回退暂存区&#x2F;版本库"></a>git reset — 回退暂存区&#x2F;版本库</h1><blockquote><p>适用场景：恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了。</p></blockquote><h2 id="1）撤销暂存区的修改（已git-add）"><a href="#1）撤销暂存区的修改（已git-add）" class="headerlink" title="1）撤销暂存区的修改（已git add）"></a>1）撤销暂存区的修改（已git add）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD &lt;file&gt; # 放弃在缓存中的文件更改，回到git add之前状态 </span><br><span class="line">git reset HEAD . # 放弃所有文件的修改，回到git add之前状态 </span><br></pre></td></tr></table></figure><h2 id="2）撤销版本库的修改（已git-commit）"><a href="#2）撤销版本库的修改（已git-commit）" class="headerlink" title="2）撤销版本库的修改（已git commit）"></a>2）撤销版本库的修改（已git commit）</h2><p>–mixed：git reset (–mixed) HEAD，相当于默认–mixed<br>只动暂存区，不动工作区（修改内容不丢失），原节点和reset节点之间的所有差异都会放到工作目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD^ # 回退到上一个版本 </span><br><span class="line">git reset HEAD^^ # 回退到倒数第二版 </span><br><span class="line">git reset HEAD 版本号 # 版本号通过git log查看 </span><br></pre></td></tr></table></figure><h2 id="3）带参数–hard-x2F-–soft的差别"><a href="#3）带参数–hard-x2F-–soft的差别" class="headerlink" title="3）带参数–hard&#x2F;–soft的差别"></a>3）带参数–hard&#x2F;–soft的差别</h2><p>–soft：暂存区和工作区的内容都保持原样，不会被替换。原节点和reset节点之间的所有差异会放到暂存区中。<br>–hard：暂存区和工作区的内容都会被新指向的commit提交内容所替换；git reset –hard只影响被跟踪的文件，如果工作区有新增的文件，并不会被影响。​</p><h1 id="git-revert-—-反做暂存区-x2F-版本库"><a href="#git-revert-—-反做暂存区-x2F-版本库" class="headerlink" title="git revert — 反做暂存区&#x2F;版本库"></a>git revert — 反做暂存区&#x2F;版本库</h1><blockquote><p>适用场景：想撤销之前的某一版本，但是又想保留该目标版本后面的版本。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert -n 版本号 # 版本号可通过git log查看，或去gitlab 仓库查看可视化</span><br></pre></td></tr></table></figure><p>继续git commit、git push 会生成新的版本号，而又不动到中间的版本。<br><strong>ps：reset与revert的区别</strong></p><img src="https://img-blog.csdnimg.cn/edbdb910f97e4ab59feb66e7b76aefcd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="git-rebase-—-重新设置基线"><a href="#git-rebase-—-重新设置基线" class="headerlink" title="git rebase — 重新设置基线"></a>git rebase — 重新设置基线</h1><p>什么时候用到rebase? 当</p><h2 id="1）git-rebase-branch"><a href="#1）git-rebase-branch" class="headerlink" title="1）git rebase branch"></a>1）git rebase branch</h2><p>git rebase branch-B # rebase的是谁，就修改的是谁<br>两个分支都会有自己不同的发展轨迹：</p><img src="https://img-blog.csdnimg.cn/653b3a9aa9bd403d9eaeb8cd98e94d51.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol><li>git会把在branch-A上的C1之后的C3暂时存储到一个地方。</li></ol><img src="https://img-blog.csdnimg.cn/6f10a777250d413caca8454b91ddb3ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="2"><li>git会整合那些在branch-B（这个我们想要整合的分支）上的还未整合的提交到branch-A 中。</li></ol><img src="https://img-blog.csdnimg.cn/16a0e9ba5871475d8e49df15aca2e3c2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="3"><li>那些在branch-A的新的提交C3，会被重新应用到这个分支上。</li></ol><image src="https://img-blog.csdnimg.cn/86f89772d6a040b68530ee989dc4fddc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>缺陷：rebase 会改写历史记录（C3的源提交由C1变为了C4）。应该只使用 rebase 来清理你的本地工作，千万不要尝试着对那些已经被发布的提交进行这个操作，故：</strong></p></blockquote><ul><li>不要在公共分支使用rebase</li><li>本地和远端对应同一条分支,优先使用rebase，而不是merge</li></ul><h2 id="2）git-rebase-–continue"><a href="#2）git-rebase-–continue" class="headerlink" title="2）git rebase –continue"></a>2）git rebase –continue</h2><p>在rebase的过程中，可能会出现冲突。在这种情况，git会停止rebase并会让你去解决冲突；在解决完冲突后，用”git-add”命令去更新这些内容的索引， 然后，你无需执行 git-commit，只要执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --continue </span><br></pre></td></tr></table></figure><h2 id="3）git-rebase-–abort"><a href="#3）git-rebase-–abort" class="headerlink" title="3）git rebase –abort"></a>3）git rebase –abort</h2><p><strong>在任何时候，你可以用–abort参数来终止rebase的行动，并且分支会回到rebase前的状态。</strong></p><h1 id="git-stash-—-暂存工作区"><a href="#git-stash-—-暂存工作区" class="headerlink" title="git stash — 暂存工作区"></a>git stash — 暂存工作区</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash # 暂存工作区的修改 </span><br><span class="line">git stash pop # 弹出修改内容 </span><br></pre></td></tr></table></figure><h1 id="git-log-—-查看提交历史"><a href="#git-log-—-查看提交历史" class="headerlink" title="git log — 查看提交历史"></a>git log — 查看提交历史</h1><ul><li>建议提前git fetch一下</li></ul><h2 id="1）–stat：增改行数统计"><a href="#1）–stat：增改行数统计" class="headerlink" title="1）–stat：增改行数统计"></a>1）–stat：增改行数统计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --stat # 查看简略统计信息</span><br></pre></td></tr></table></figure><p>–stat 选项在每次提交的下面列出所有被修改过的文件、有多少文件被修改了以及被修改过的文件的哪些行被移除或是添加了。 在每次提交的最后还有一个总结。</p><h2 id="2）–pretty：定制展示格式"><a href="#2）–pretty：定制展示格式" class="headerlink" title="2）–pretty：定制展示格式"></a>2）–pretty：定制展示格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --pretty&#x3D;oneline # 每个提交放在一行显示</span><br></pre></td></tr></table></figure><h2 id="3）-p：展开内容差异"><a href="#3）-p：展开内容差异" class="headerlink" title="3）-p：展开内容差异"></a>3）-p：展开内容差异</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log -p -2 # 展开显示每次提交的内容差异, 用 -2 则仅显示最近的两次更新</span><br></pre></td></tr></table></figure><h1 id="git-diff-—-比较两次修改的差异"><a href="#git-diff-—-比较两次修改的差异" class="headerlink" title="git diff — 比较两次修改的差异"></a>git diff — 比较两次修改的差异</h1><h2 id="1）比较工作区与暂存区"><a href="#1）比较工作区与暂存区" class="headerlink" title="1）比较工作区与暂存区"></a>1）比较工作区与暂存区</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff # git diff 不加参数即默认比较工作区(未git add)与暂存区(git add之后)</span><br><span class="line"> </span><br><span class="line">git diff --stat #查看简单的diff结果</span><br></pre></td></tr></table></figure><h2 id="2）比较暂存区与版本库"><a href="#2）比较暂存区与版本库" class="headerlink" title="2）比较暂存区与版本库"></a>2）比较暂存区与版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached # 对比暂存区(git add 之后)和版本库(git commit 之后)</span><br></pre></td></tr></table></figure><h2 id="3）比较工作区与版本库"><a href="#3）比较工作区与版本库" class="headerlink" title="3）比较工作区与版本库"></a>3）比较工作区与版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD # 对比工作区(未 git add)和版本库(git commit 之后)</span><br></pre></td></tr></table></figure><h2 id="4）比较两个分支上最新提交"><a href="#4）比较两个分支上最新提交" class="headerlink" title="4）比较两个分支上最新提交"></a>4）比较两个分支上最新提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff branch-A branch-B</span><br></pre></td></tr></table></figure><h1 id="5-比较两个历史版本之间的差异"><a href="#5-比较两个历史版本之间的差异" class="headerlink" title="5) 比较两个历史版本之间的差异"></a>5) 比较两个历史版本之间的差异</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff SHA1 SHA2 # SHA为40位的commit_id</span><br></pre></td></tr></table></figure><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol><li><p>打开终端输入：ssh-keygen -t rsa ，按三个回车，密码为空，如下：</p></li><li><p>输入：cat ~&#x2F;.ssh&#x2F;id_rsa.pub，将以ssh-rsa开头的所有序列复制到key框中，点击Add key按钮</p></li></ol><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/mango22_2/article/details/124351063">git版本控制命令</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></image>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本控制 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GIT版本控制(一)之常见命令汇总</title>
      <link href="/posts/1498888733.html"/>
      <url>/posts/1498888733.html</url>
      
        <content type="html"><![CDATA[<h1 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h1><blockquote><p>**利用Git命令实现简单的版本控制，设好存档点，保护好自己写的代码不至于丢失，避免重复写代码的尴尬，并跟踪自己的所有修改变化。 **</p></blockquote><hr><h1 id="主干内容："><a href="#主干内容：" class="headerlink" title="主干内容："></a>主干内容：</h1><h2 id="一、设置git-config-–global-参数"><a href="#一、设置git-config-–global-参数" class="headerlink" title="一、设置git config  –global 参数"></a>一、设置git config  –global 参数</h2><p>有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，一个电脑只需配置一次，当然你也可以对某个仓库指定的不同的用户名和邮箱，需要另外配置，就不多说了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  –-global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config  –-global user.email <span class="string">&quot;用户邮箱&quot;</span></span><br></pre></td></tr></table></figure><h2 id="二、初始化一个仓库-git-init"><a href="#二、初始化一个仓库-git-init" class="headerlink" title="二、初始化一个仓库 git init"></a>二、初始化一个仓库 git init</h2><p>什么是仓库？仓库又名版本库，英文名repository，你可以简单的理解成一个文件夹，这个文件夹里面的所有文件都可以被Git管理起来，每个文件的修改，删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻还可以将文件”还原”。</p><p>选中你的工程文件夹 –&gt; 右键 –&gt; Git Bash Here ，进入Git 命令窗口，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br><span class="line">// <span class="built_in">pwd</span>   //使用该命令可以查看初始化后的仓库绝对路径</span><br></pre></td></tr></table></figure><blockquote><p>这样，就创建好了仓库，并默认在（master）主分支上。</p></blockquote><h2 id="三、把文件添加到仓库中-git-add"><a href="#三、把文件添加到仓库中-git-add" class="headerlink" title="三、把文件添加到仓库中 git add"></a>三、把文件添加到仓库中 git add</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test1.txt   // 可以单个添加</span><br><span class="line">git add .   // 也可以一次添加所有文件</span><br></pre></td></tr></table></figure><h2 id="四、提交到本地仓库-git-commit"><a href="#四、提交到本地仓库-git-commit" class="headerlink" title="四、提交到本地仓库 git commit"></a>四、提交到本地仓库 git commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交信息说明&quot;</span></span><br></pre></td></tr></table></figure><h2 id="五、新建分支并切换到新建分支-git-checkout-b"><a href="#五、新建分支并切换到新建分支-git-checkout-b" class="headerlink" title="五、新建分支并切换到新建分支 git checkout -b"></a>五、新建分支并切换到新建分支 git checkout -b</h2><blockquote><p>可以将主分支保护起来，所有修改都在分支上进行，当调试ok后，再合并分支。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 新的分支名  // 新建分支并切换到新建分支</span><br><span class="line"> </span><br><span class="line">git checkout 分支名  // 切换到指定分支</span><br><span class="line">git branch    // 查看分支 * 后面的分支是当前分支</span><br></pre></td></tr></table></figure><h2 id="六、合并分支-git-merge-branch"><a href="#六、合并分支-git-merge-branch" class="headerlink" title="六、合并分支 git merge branch"></a>六、合并分支 git merge branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge branch 主分支名 分支命  // 合并两个任意分支</span><br></pre></td></tr></table></figure><h2 id="七、删除本地分支-git-branch-d"><a href="#七、删除本地分支-git-branch-d" class="headerlink" title="七、删除本地分支 git branch -d"></a>七、删除本地分支 git branch -d</h2><blockquote><p><strong>合并分支后并不会删除原分支，需要手动删除。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支   // 删除本地分支</span><br></pre></td></tr></table></figure><h2 id="八、连接远程仓库-git-remote-add-origin"><a href="#八、连接远程仓库-git-remote-add-origin" class="headerlink" title="八、连接远程仓库 git remote add origin"></a>八、连接远程仓库 git remote add origin</h2><blockquote><p>远程仓库的作用在于共享代码，协同编程，如果只是版本控制也可不用上传。（主要是本人学艺不精，远程推送第一次还正常，第二次推送总是出现各种冲突）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:用户名/远程仓库名.git   // 使用HHS 加密传输</span><br></pre></td></tr></table></figure><h2 id="九、推送主分支-git-push-u-origin-master"><a href="#九、推送主分支-git-push-u-origin-master" class="headerlink" title="九、推送主分支 git push -u origin master"></a>九、推送主分支 git push -u origin master</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master   // 推送主分支 第一次需要加 -u 后面就不用了</span><br></pre></td></tr></table></figure><h2 id="十、推送任意分支-git-push-origin"><a href="#十、推送任意分支-git-push-origin" class="headerlink" title="十、推送任意分支 git push  origin"></a>十、推送任意分支 git push  origin</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push  origin 分支名  // 推送任意分支</span><br></pre></td></tr></table></figure><h2 id="十一、删除任意远程分支-git-push-origin-："><a href="#十一、删除任意远程分支-git-push-origin-：" class="headerlink" title="十一、删除任意远程分支 git push  origin ："></a>十一、删除任意远程分支 git push  origin ：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push  origin ：分支名  // 删除任意远程分支 （本地分支还在） 注意区别是多了个冒号</span><br></pre></td></tr></table></figure><h2 id="十二、拉取远程分支到本地创建的新分支-git-checkout-b-origin-x2F"><a href="#十二、拉取远程分支到本地创建的新分支-git-checkout-b-origin-x2F" class="headerlink" title="十二、拉取远程分支到本地创建的新分支 git checkout -b   origin&#x2F;"></a>十二、拉取远程分支到本地创建的新分支 git checkout -b   origin&#x2F;</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 本地新建分支名  origin/远程分支名   // 拉取远程分支到本地创建的新分支</span><br></pre></td></tr></table></figure><h2 id="十三、查看本地与远程所有分支-git-branch-a"><a href="#十三、查看本地与远程所有分支-git-branch-a" class="headerlink" title="十三、查看本地与远程所有分支 git branch -a"></a>十三、查看本地与远程所有分支 git branch -a</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a  // 查看本地与远程所有分支 </span><br></pre></td></tr></table></figure><h1 id="辅助内容"><a href="#辅助内容" class="headerlink" title="辅助内容"></a>辅助内容</h1><h2 id="一、获取常用git命令及说明-git-或-git-help"><a href="#一、获取常用git命令及说明-git-或-git-help" class="headerlink" title="一、获取常用git命令及说明  git 或 git help"></a>一、获取常用git命令及说明  git 或 git help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$ git</span><br><span class="line">usage: git [--version] [--<span class="built_in">help</span>] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           [--super-prefix=&lt;path&gt;] [--config-env=&lt;name&gt;=&lt;envvar&gt;]</span><br><span class="line">           &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line"> </span><br><span class="line">These are common Git commands used <span class="keyword">in</span> various situations:</span><br><span class="line"> </span><br><span class="line">start a working area (see also: git <span class="built_in">help</span> tutorial)</span><br><span class="line">   <span class="built_in">clone</span>     Clone a repository into a new directory</span><br><span class="line">   init      Create an empty Git repository or reinitialize an existing one</span><br><span class="line"> </span><br><span class="line">work on the current change (see also: git <span class="built_in">help</span> everyday)</span><br><span class="line">   add       Add file contents to the index</span><br><span class="line">   mv        Move or rename a file, a directory, or a symlink</span><br><span class="line">   restore   Restore working tree files</span><br><span class="line">   rm        Remove files from the working tree and from the index</span><br><span class="line"> </span><br><span class="line">examine the <span class="built_in">history</span> and state (see also: git <span class="built_in">help</span> revisions)</span><br><span class="line">   bisect    Use binary search to find the commit that introduced a bug</span><br><span class="line">   diff      Show changes between commits, commit and working tree, etc</span><br><span class="line">   grep      Print lines matching a pattern</span><br><span class="line">   <span class="built_in">log</span>       Show commit logs</span><br><span class="line">   show      Show various types of objects</span><br><span class="line">   status    Show the working tree status</span><br><span class="line"> </span><br><span class="line">grow, mark and tweak your common <span class="built_in">history</span></span><br><span class="line">   branch    List, create, or delete branches</span><br><span class="line">   commit    Record changes to the repository</span><br><span class="line">   merge     Join two or more development histories together</span><br><span class="line">   rebase    Reapply commits on top of another base tip</span><br><span class="line">   reset     Reset current HEAD to the specified state</span><br><span class="line">   switch    Switch branches</span><br><span class="line">   tag       Create, list, delete or verify a tag object signed with GPG</span><br><span class="line"> </span><br><span class="line">collaborate (see also: git <span class="built_in">help</span> workflows)</span><br><span class="line">   fetch     Download objects and refs from another repository</span><br><span class="line">   pull      Fetch from and integrate with another repository or a <span class="built_in">local</span> branch</span><br><span class="line">   push      Update remote refs along with associated objects</span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;git help -a&#x27;</span> and <span class="string">&#x27;git help -g&#x27;</span> list available subcommands and some</span><br><span class="line">concept guides. See <span class="string">&#x27;git help &lt;command&gt;&#x27;</span> or <span class="string">&#x27;git help &lt;concept&gt;&#x27;</span></span><br><span class="line">to <span class="built_in">read</span> about a specific subcommand or concept.</span><br><span class="line">See <span class="string">&#x27;git help git&#x27;</span> <span class="keyword">for</span> an overview of the system.</span><br></pre></td></tr></table></figure><h2 id="二、显示所有git命令-git-help-a"><a href="#二、显示所有git命令-git-help-a" class="headerlink" title="二、显示所有git命令  git help -a"></a>二、显示所有git命令  git help -a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help -a  &#x2F;&#x2F; 由于内容太多就不展示了</span><br></pre></td></tr></table></figure><h2 id="三、查看单个命令的说明-git-help"><a href="#三、查看单个命令的说明-git-help" class="headerlink" title="三、查看单个命令的说明 git help ***"></a>三、查看单个命令的说明 git help ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help branch  &#x2F;&#x2F; 查看branch 的手册信息</span><br></pre></td></tr></table></figure><h2 id="四、查看文件的区别-git-diff"><a href="#四、查看文件的区别-git-diff" class="headerlink" title="四、查看文件的区别 git diff"></a>四、查看文件的区别 git diff</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff  &#x2F;&#x2F; 查看当前仓库所有文件与上一次存档的区别，只能区别文本信息</span><br><span class="line"> </span><br><span class="line">git diff 文件1 文件2  &#x2F;&#x2F; 查看两个文件的差异，必须在当前目录下</span><br></pre></td></tr></table></figure><h2 id="五、查看日志（所有提交信息）"><a href="#五、查看日志（所有提交信息）" class="headerlink" title="五、查看日志（所有提交信息）"></a>五、查看日志（所有提交信息）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --oneline  &#x2F;&#x2F; 显示简单的提交日志</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_45694843/article/details/124766183">利用Git命令进行版本控制之常见命令汇总</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 版本控制 </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(四)之涂鸦模组WBR3(RTL8720CF)程序下载</title>
      <link href="/posts/716589256.html"/>
      <url>/posts/716589256.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>**先根据 <a href="https://zml3589110.github.io/posts/4014484988.html">涂鸦WIFI基本开发(三)之TuyaOS环境搭建</a> 将环境搭建好 **</p></blockquote><h1 id="WBR-系列模组烧录授权方式"><a href="#WBR-系列模组烧录授权方式" class="headerlink" title="WBR 系列模组烧录授权方式"></a>WBR 系列模组烧录授权方式</h1><p>完成模组 SDK 固件开发后，您需要对模组进行烧录授权以实现连接云服务的能力。根据不同场景的需求，涂鸦提供以下两烧录授权方式:</p><blockquote><ol><li>烧录授权一体方案。该方案通过云模组烧录授权平台进行烧录和授权操作，适用于发布阶段。</li><li>烧录授权分立方案。该方案使用芯片烧录工具进行烧录操作，再使用云模组烧录授权平台授权，适用于开发阶段。</li></ol></blockquote><h2 id="烧录文件"><a href="#烧录文件" class="headerlink" title="烧录文件"></a>烧录文件</h2><p>该型号芯片编译后会生成 4 种如下所示的 .bin 文件。</p><blockquote><ol><li>flash_is.bin：boot + 用户区固件。</li><li>oem_rtl8720cf_light_ty_QIO_1.1.2.bin（生产固件）：boot+用户区固件+检测固件。</li><li>oem_rtl8720cf_light_ty_UA_1.1.2.bin：用户区固件。</li><li>oem_rtl8720cf_light_ty_UG_1.1.2.bin：升级区固件。</li></ol></blockquote><h2 id="适用芯片"><a href="#适用芯片" class="headerlink" title="适用芯片"></a>适用芯片</h2><p>适用于核心芯片为 RTL8720CF 的以下模组。<br>WBR1<br>WBR2<br><a href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy">WBR3</a><br>WBR2L<br>WBR3L</p><h2 id="方式一：烧录授权一体方案"><a href="#方式一：烧录授权一体方案" class="headerlink" title="方式一：烧录授权一体方案"></a>方式一：烧录授权一体方案</h2><p>该方案适用于发布阶段，由于涂鸦模组必要进行授权才能连接涂鸦平台，所以授权步骤无法省略。<br>该方案的总体流程如下：</p><ol><li>上传编译固件到 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 。</li><li>平台成固件 key，并基于固件 key 生成授权码。</li><li>使用云模组烧录授权平台进行烧录授权。</li></ol><h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/babfd04c09194a8e9fd41cb8143e25e8.png"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b7cd54dfa91a4a82a2c19f5301df7dc2.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">RX&#x2F;A13</td><td align="left">TX</td></tr><tr><td align="left">TX&#x2F;A14</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr></tbody></table><h3 id="上传固件"><a href="#上传固件" class="headerlink" title="上传固件"></a>上传固件</h3><ol><li>在 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 产品开发的第三步 硬件开发 中，单击 新增自定义固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/54d650e79d9244599d4115789f7feb1f.png"><ol start="2"><li>填写固件参数后，单击 确认。</li></ol><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left">务必和编译固件的名称一致。</td></tr><tr><td align="left">固件类型</td><td align="left">模组固件。</td></tr><tr><td align="left">其他参数</td><td align="left">根据实际情况或界面帮助填写。</td></tr></tbody></table><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/8a2c3ebe03f14fe78fd38a4cc516d853.png"><ol start="3"><li>在 已生成固件 区域中，选择 上传生产固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20210303/f7ebced38c1b4687ad8c28fc17c40df6.png"><ol start="4"><li>上传固件并单击 确定。</li></ol><ul><li>生产固件：上传文件名中带有 QIO 的 .bin 文件。</li><li>用户区固件：上传文件名中带有 UA 的.bin 文件。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/cd9657d6cd3d4f80b077d71ea08efabe.png"><ol start="5"><li>授权码获取+烧录<br>根据 PID 在平台获取授权码，参考 <a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u">烧录授权</a> 操作步骤章节内容下载安装 云模组烧录授权平台。</li></ol><p>烧录步骤为：</p><ol><li>先给模组断电。</li><li>在云模组烧录授权平台软件中，输入授权码后单击 <strong>运行</strong>。</li><li>烧录成功后，给模组上电。</li></ol><h2 id="方式二：烧录授权分立方案"><a href="#方式二：烧录授权分立方案" class="headerlink" title="方式二：烧录授权分立方案"></a>方式二：烧录授权分立方案</h2><p>该方案适用于开发阶段。该方案的特点是 <strong>授权一次，重复烧录</strong>。假如已经授权过一次，您只需要进行固件 demo 修改烧录，模组即能正常工作。</p><h3 id="硬件准备-1"><a href="#硬件准备-1" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/e45e43a46203480290ee6ba93608f3d9.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">A_0</td><td align="left">VCC3.3V</td></tr><tr><td align="left">LOG_RX</td><td align="left">TX</td></tr><tr><td align="left">LOG_TX</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr><tr><td align="left">RXD</td><td align="left">VCC3.3V</td></tr></tbody></table><p><strong>注意事项</strong></p><ul><li>烧录完成后，需要把 <em><strong>A_0</strong></em> 拔掉，并把用户 <em><strong>RX</strong></em> 接回用户串口的 <em><strong>RX</strong></em>。</li><li>烧录完成后，模组需要重新上电才可以正常使用。</li></ul><h3 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h3><p>下载并运行 <a href="https://images.tuyacn.com/smart/AmebaZ2_PGTool_v1.2.7/AmebaZ2_PGTool_v1.2.7.exe">RTL8720CF 芯片烧录工具</a>。<br>请注意以上红色标记区域：</p><ul><li>Port 参数项需要选择实际使用的串口。</li><li>Flash Pin 参数项需要选择 <code>PIN_B6_B12 </code>。</li><li>烧录过程中失败的话，可适当降低波特率。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/db1bb031375b4ed38811343d801796e3.png"><h3 id="下载说明"><a href="#下载说明" class="headerlink" title="下载说明"></a>下载说明</h3><p><strong>烧录步骤</strong></p><ol><li>先给模组断电。</li><li>打开烧录工具后，单击 <strong>Browse</strong> 后选择 <code>flash_is.bin</code>（boot+用户区固件）文件进行烧录。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/7b7d96c843b743f9b76ef6451f2ccfa0.png" alt="WBR 系列模组烧录授权"></li><li>烧录成功后，给模组上电。</li></ol><p><strong>注意事项</strong><br>需要确定模组在断电上电后是否处于烧录状态。如果没有出现下图所示内容，请检查接线 <strong>A_0</strong> 和 <strong>RX</strong> 是否接地。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/adbf286381bb4116bfb20adb260ea9ba.png" alt="WBR 系列模组烧录授权"></p><p><strong>下载</strong><br>下载截图如下：</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/3ffa912854dd46d5bdf54d3d839e64e6.png" alt="WBR 系列模组烧录授权"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li>在 RTL8720CF 芯片烧录工具上更新固件时，每次都需要单击 <strong>Browse</strong>，不然会出现以下状态。</li></ol><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b51b2e984bf84bb2a8177cf4acd6f892.png" alt="WBR 系列模组烧录授权"></p><ol start="2"><li>烧录后没有效果<blockquote><p><strong>把程序烧录进去后却没运行，那是因为启动分区的问题导致新程序没能正确启动</strong></p></blockquote></li></ol><ul><li>需要将 keep System Data 去掉勾选，保证每次都是从 OTA1区启动</li></ul><hr><h1 id="烧录方式补充说明"><a href="#烧录方式补充说明" class="headerlink" title="烧录方式补充说明"></a>烧录方式补充说明</h1><p>固件开发完成后，需要将固件和授权码烧录到设备内，才可以连接云服务。涂鸦提供多种烧录授权方式供您使用，您可在不同的开发阶段选择合适的烧录授权方式。</p><h2 id="烧录授权方案"><a href="#烧录授权方案" class="headerlink" title="烧录授权方案"></a>烧录授权方案</h2><p>根据不同的开发阶段、芯片类型和生产方式，涂鸦提供三种烧录授权方案，每种方案的详细说明如下：</p><h3 id="烧录授权一体方案"><a href="#烧录授权一体方案" class="headerlink" title="烧录授权一体方案"></a>烧录授权一体方案</h3><p>适用于使用涂鸦标准模组的开发者使用，固件需要维护在涂鸦 IoT 平台（选用涂鸦现有的模组固件或者将自己开发的模组固件上传至涂鸦 IoT 平台），根据生产方式的区别，通常有以下两种形式。</p><ul><li><p><strong>委托涂鸦进行烧录授权</strong></p><p>涂鸦出货已完成烧录授权的模组，您收到模组后可直接使用。</p></li><li><p><strong>自主进行烧录授权</strong></p><p>涂鸦提供云模组烧录工具+授权码+烧录说明+烧录工装制作说明等一系列资料，您可以参考涂鸦提供的资料自行对模组进行烧录授权。</p></li></ul><h3 id="烧录授权分立方案"><a href="#烧录授权分立方案" class="headerlink" title="烧录授权分立方案"></a>烧录授权分立方案</h3><p>适用于调试阶段和非涂鸦标准模组方案，使用芯片烧录工具烧录固件，涂鸦 <strong>云模组烧录授权平台</strong> 工具只用于授权。</p><ul><li><p><strong>调试阶段</strong></p><p>使用芯片烧录工具第一次烧录固件和授权码后，后续代码有更新，只需要重新烧录用户区固件，不会擦除授权码信息，方便调试。</p></li><li><p><strong>非涂鸦标准模组方案</strong></p><p>涂鸦<strong>云模组烧录授权平台</strong>工具不支持非涂鸦标准芯片烧录固件，只能使用原厂工具烧录固件，再使用<strong>涂鸦云模组授权平台</strong>工具进行授权。</p></li></ul><h3 id="产测-SDK-对接方案"><a href="#产测-SDK-对接方案" class="headerlink" title="产测 SDK 对接方案"></a>产测 SDK 对接方案</h3><p>适用于自身有完整的烧录生产体系的开发者，不使用 <strong>涂鸦云模组烧录授权平台</strong> 工具，通过涂鸦产测 SDK 对接自身生产烧录体系进行固件和授权码烧录，方案详细内容参考 <a href="https://developer.tuya.com/cn/docs/iot/smart-production/production-test-solution/production-test-docking-case/typical-production-test-cases/classic-case?id=K96ruma3lcaai">产测对接经典方案</a>。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>以下流程适用于使用涂鸦 <strong>云模组烧录授权码平台</strong> 工具烧录授权&#x2F;只授权方案。</p><h3 id="烧录软件准备"><a href="#烧录软件准备" class="headerlink" title="烧录软件准备"></a>烧录软件准备</h3><p>进入 <a href="https://pms.tuya.com/">涂鸦 PMS 生产工艺管理系统</a>，注册账号并登录，选择 <strong>软件下载</strong>，下载 <strong>生产解决方案</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/content-platform/hestia/1641436307ca840934acd.png" alt="烧录授权"></p><h3 id="烧录硬件环境搭建"><a href="#烧录硬件环境搭建" class="headerlink" title="烧录硬件环境搭建"></a>烧录硬件环境搭建</h3><p>根据芯片&#x2F;模组的烧录方式搭建硬件环境，不同协议的芯片烧录方式不同，通常可以分为以下三类。</p><ul><li><p><strong>Wi-Fi 模组烧录</strong></p><p>通常使用串口方式烧录授权，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">USB 转 TTL 工具</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">TX</td><td align="left">RX</td><td align="left"></td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>BLE 模组烧录</strong></p><p>通常使用芯片烧录器烧录固件 ，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">Telink 烧录器</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">SWS</td><td align="left">SWM</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>Zigbee 模组烧录</strong></p><p>通常使用 J-link 烧录固件，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">J-link 烧录器</td><td align="left">RST</td><td align="left">RESET</td></tr><tr><td align="left">SWDIO</td><td align="left">SWDIO</td><td align="left"></td></tr><tr><td align="left">SWCLK</td><td align="left">SWCLK</td><td align="left"></td></tr><tr><td align="left">3V3</td><td align="left">VCC</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li></ul><h3 id="烧录授权操作流程说明"><a href="#烧录授权操作流程说明" class="headerlink" title="烧录授权操作流程说明"></a>烧录授权操作流程说明</h3><ol><li><p>连接硬件到 PC 并安装相关驱动。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201216/a881e7fc191a44f5af3f027b2f5aa9c8.png" alt="烧录授权"></p></li><li><p>根据烧录授权方案，选择是否使用芯片烧录工具，并对上位机进行配置。</p><ul><li><p>烧录授权分立方案</p><p>a. 打开芯片烧录工具，按照操作说明烧录固件。<br>b. 配置上位机为只授权模式。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/a9b2eac98b8e4f338d1d2dee23ccdfaa.png" alt="烧录授权"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/09007a1f154443638cbc77d505a5c80f.png" alt="烧录授权"></p></li><li><p>烧录授权一体方案</p><p>配置上位机为烧录授权模式。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/38e65b2ab6594914b4c31a5946a71296.png" alt="烧录授权"></p></li></ul></li><li><p>选择串口信息，输入授权码，单击 <strong>运行</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/5e0225b48d4648cfa0e7a0b21e80fc2f.png" alt="烧录授权"></p><p>上位机会显示烧录的进度及结果，如果出现错误，可点击下方 <strong>错误详细</strong> 处查看原因，并根据提示进行内容，整改后重新烧录。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/145f417c572f4273a6d06eeaa6d7ff41.png" alt="烧录授权"></p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/b0fb20892ae145f7a3a46294280c6fa3.png" alt="烧录授权"></p></li></ol><hr><h1 id="烧录授权说明二"><a href="#烧录授权说明二" class="headerlink" title="烧录授权说明二"></a>烧录授权说明二</h1><p>通过涂鸦 IoT 开发平台免开发方案成功生成固件，或使用自定义开发方案生成固件并上传到涂鸦 IoT 开发平台后，下一步需要对模组进行烧录授权。</p><p>本文将详细讲解 3 种不同的烧录授权方式：</p><ul><li><p>自定义开发烧录授权：适用于发布阶段，使用自定义开发方式创建的产品。</p></li><li><p>三明治开发板方式烧录授权：仅适用于涂鸦三明治开发板的烧录授权。</p></li><li><p>使用原厂工具烧录：适用于开发阶段。方案的特点是<strong>授权一次，重复烧录</strong>。</p><p>下文中的生产凭证，授权码和 token 均描述同一事物。</p></li></ul><h2 id="烧录前准备"><a href="#烧录前准备" class="headerlink" title="烧录前准备"></a>烧录前准备</h2><p>烧录授权所需工具如下：</p><ul><li>申请 PMS 账号</li><li>下载「生产解决方案」</li><li>下载 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">BK 原厂烧录工具</a></li><li>一个 USB 转 UART 转换工具</li></ul><h3 id="注册-PMS-账号"><a href="#注册-PMS-账号" class="headerlink" title="注册 PMS 账号"></a>注册 PMS 账号</h3><p>选择个人开发者，按照系统注册指引填写相关信息后，你会收到涂鸦发送的审核成功邮件。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/PMS_1.png" alt="烧录授权"></p><h3 id="下载并安装生产解决方案"><a href="#下载并安装生产解决方案" class="headerlink" title="下载并安装生产解决方案"></a>下载并安装生产解决方案</h3><h4 id="下载生产解决方案"><a href="#下载生产解决方案" class="headerlink" title="下载生产解决方案"></a>下载生产解决方案</h4><p>审核通过后，输入账号和密码登录<a href="https://pms.tuya.com/login">涂鸦 PMS 系统</a>。登录成功后，选择 <strong>知识库管理</strong> &gt; <strong>软件下载</strong> &gt; <strong>生产解决方案</strong>，下载<strong>生产解决方案</strong>。</p><p><img src="https://images.tuyacn.com/content-platform/hestia/16529503994a1e6b5a737.png" alt="烧录授权"></p><h4 id="安装生产解决方案"><a href="#安装生产解决方案" class="headerlink" title="安装生产解决方案"></a>安装生产解决方案</h4><ol><li><p>双击<strong>生产解决方案</strong>安装包，会现下面的警告，单击<strong>更多信息</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_1.png" alt="烧录授权"></p></li><li><p>单击<strong>仍要运行</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_2.png" alt="烧录授权"></p></li><li><p>根据自身需求，设置程序安装的位置，建议不要有中文路径。</p></li><li><p>完成安装后，启动<strong>生产解决方案</strong>，登录账号和密码同涂鸦PMS系统（涂鸦智造）的账号和密码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_3.png" alt="烧录授权"></p></li><li><p>单击<strong>云模组</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/TYPYK_TYDA.png" alt="烧录授权"></p></li><li><p>检查安装情况。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_4.png" alt="烧录授权"></p><ul><li><p>红色框内为黄色，则说明安装成功。可<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#download">下载原厂烧录工具</a>。</p></li><li><p>红色框内全为白色，就需要对软进行如下设置，使它恢复正常。</p><p>(1) 单击 <strong>文件</strong> &gt; <strong>设置</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_5.png" alt="烧录授权"></p><p>(2) 在<strong>基础设置</strong>中，将箭头 ① 指向的<strong>多路选择</strong>的<strong>1*1</strong>选项改为<strong>1*2</strong>，再单击<strong>确认</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_6.png" alt="烧录授权"></p><p><strong>多路选择</strong>改变后，界面如下图所示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_7.png" alt="烧录授权"></p><p>(3) 将多路选择的<strong>1*2</strong>，改回到<strong>1*1</strong>，使两个黄色框变为一个黄色框，设置就完成了。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_8.png" alt="烧录授权"></p></li></ul></li></ol><h3 id="下载原厂烧录工具"><a href="#下载原厂烧录工具" class="headerlink" title="下载原厂烧录工具"></a>下载原厂烧录工具</h3><ul><li>单击 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">bk_writer_gui_V1.6.3</a> 下载 Beken 原厂工具。</li></ul><h2 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h2><p>不同开发板或模组的烧录流程也不一样。如果使用的是涂鸦的三明治开发板，建议通过<strong>云模组</strong>工具进行烧录。</p><h3 id="自定义开发烧录授权"><a href="#自定义开发烧录授权" class="headerlink" title="自定义开发烧录授权"></a>自定义开发烧录授权</h3><p>此方案适用于 <strong>发布阶段</strong> ，使用自定义开发方式创建的产品，需要先将编译好的固件上传到涂鸦 IoT 开发平台，获取生产凭证（token）后，再使用<strong>云模组</strong>工具进行烧录授权。</p><p>涂鸦模组需要完成授权才能连接涂鸦平台，授权完成的模组如果需要烧录开发好的固件或更改后的固件，可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#original">使用原厂工具烧录</a>。</p><h4 id="上传固件-1"><a href="#上传固件-1" class="headerlink" title="上传固件"></a>上传固件</h4><ol><li><p>进入<a href="https://iot.tuya.com/pmg/list">涂鸦 IoT 开发平台</a>，单击已开发的产品，找到<strong>硬件开发</strong>。按照下图指示，单击<strong>新增自定义固件</strong>，再填写相关固件信息。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left"><strong>固件标识名</strong>必须和编译时的 <code>apps</code> 下的工程文件夹的名称保持一致。也就是说，如果这里的固件标识名填写为 <code>wifi_one_light</code> ，那么上传的固件应为 SDK 包中 <code>apps</code> 目录下的 <code>wifi_one_light</code> 文件夹中编译所生成的固件。</td></tr><tr><td align="left">Flash 大小</td><td align="left"><strong>Flash 大小</strong>为 <code>16Mbit</code>，也就是 2M 大小。关于不同模组的 flash 大小，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>。<strong>Note</strong>: 1 byte(字节) &#x3D; 8 bits(位)。 16 Mbit ÷ 8 &#x3D; 2M。</td></tr><tr><td align="left">没有被 ② 的框框圈到的参数</td><td align="left">使用默认设置。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_1.png" alt="烧录授权"></p></li><li><p>相关信息填写完成后，单击<strong>上传固件</strong>，进入下一步，开始上传固件。进行如下操作之后，单击<strong>保存</strong>。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件版本</td><td align="left">需要和编译时输入的版本号对应一致。</td></tr><tr><td align="left">生产固件</td><td align="left">上传包含 <code>QIO</code> 的 bin 文件。</td></tr><tr><td align="left">用户区固件</td><td align="left">上传包含 <code>UA</code> 的 bin 文件。</td></tr><tr><td align="left">升级固件</td><td align="left">上传包含 <code>UG</code> 的 bin 文件。</td></tr><tr><td align="left">运行模式</td><td align="left">运行模式选择 <code>QIO</code> 。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_2.png" alt="烧录授权"></p></li><li><p>单击<strong>进行固件上架</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_3.png" alt="烧录授权"></p></li><li><p>选择<strong>不限范围</strong>，单击<strong>确认上架</strong>。</p><p>选择<strong>不限范围</strong>是方便个人开发者管理产品。如果是公司将要量产的产品，请根据你的实际需求设置允许使用范围。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_4.png" alt="烧录授权"></p></li></ol><h4 id="获取生产凭证（token"><a href="#获取生产凭证（token" class="headerlink" title="获取生产凭证（token)"></a>获取生产凭证（token)</h4><p>将固件上传到涂鸦 IoT 开发平台，成功上架后，就可以免费领取激活码。使用激活码通过<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>单击<strong>免费领取激活码</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_1.png" alt="烧录授权"></p></li><li><p>交付方式选择<strong>生产凭证</strong>，单击<strong>提交订单</strong>。</p><ul><li><strong>生产凭证</strong>: 产测授权工具<strong>烧录授权</strong>功能读取的凭证编码，可自动抓取指定数量的授权码，随固件一起逐个写入设备。需上传生产固件至涂鸦 IoT 开发平台。</li><li><strong>授权码清单</strong>: 写着每一个授权码 UUID 及相关信息的表单，需自行逐个写入设备。</li><li><strong>生产凭证-仅授权</strong>: 产测授权工具<strong>独立授权</strong>功能读取的凭证编码，无需固件，即可对设备进行逐个授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_2.png" alt="烧录授权"></p></li><li><p>单击<strong>去订单列表页看看</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_3.png" alt="烧录授权"></p></li><li><p>确认箭头 ① 所指向信息是否正确。确认无误后，单击箭头 ② 的<strong>下载生产凭证</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_4.png" alt="烧录授权"></p></li><li><p>解压下载好的生产凭证，打开 <code>Token_information.txt</code> 文件，并复制生产凭证。</p></li><li><p>在<strong>云模组</strong>工具中输入生产凭证，并选择工位<strong>烧录授权</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_5.png" alt="烧录授权"></p><p>如果出现<code>获取 token 失败，没有操作权限</code>的错误，请参考<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#token">获取 token 失败，没有操作权限</a>中的解决办法。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p>生产凭证输入完成后，界面如下图所示。在<strong>基础信息</strong>一栏中显示固件的相关信息。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_6.png" alt="烧录授权"></p></li></ol><h4 id="烧录授权"><a href="#烧录授权" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>在<strong>云模组</strong>工具上根据按照箭头的指引，输入生产凭证，选择工位为<strong>烧录授权</strong>，并单击<strong>确定</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_3.png" alt="烧录授权"></p></li><li><p>按照下表通过 USB 转 UART 工具，把三明治开发板与电脑连接起来。</p><table><thead><tr><th align="center">USB 转 UART 引脚</th><th align="center">三明治 SoC 开发板引脚</th></tr></thead><tbody><tr><td align="center"><code>VCC</code></td><td align="center"><code>VCC</code></td></tr><tr><td align="center"><code>GND</code></td><td align="center"><code>GND</code></td></tr><tr><td align="center"><code>TX</code></td><td align="center"><code>RX</code></td></tr><tr><td align="center"><code>RX</code></td><td align="center"><code>TX</code></td></tr></tbody></table></li><li><p>选择烧录的串口，单击<strong>运行</strong>，然后马上给模组断电再上电或按下复位按键使模组重启，开始对模组进行烧录授权操作。</p><ul><li>重启模组时不要直接把串口工具从电脑上拔掉，避免造成烧录失败。建议拔掉再插上模组与串口工具连接的 VCC 和 GND 的杜邦线。</li><li>CBU 的三明治 SoC 开发板自带 CH304 串口芯片。在单击<strong>运行</strong>后，按下开发板上 USB 口复位按键即可重启芯片，开始烧录授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_4.png" alt="烧录授权"></p></li><li><p>（可选）如果在烧录授权过程中出现<strong>进入产测失败</strong>的错误，可能是因为该开发板在上一次烧录授权时已经累计连接到网络超过15分钟，设备此时关闭了产测功能，才导致无法进入产测，出现授权失败的情况。解决办法可参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#enter">进入产测失败</a>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_1.png" alt="烧录授权"></p></li></ol><h3 id="三明治开发板方式烧录授权"><a href="#三明治开发板方式烧录授权" class="headerlink" title="三明治开发板方式烧录授权"></a>三明治开发板方式烧录授权</h3><p>本方法仅适用于涂鸦三明治开发板的烧录授权。</p><p>在涂鸦 IoT 开发平台上使用免开发方案创建的产品只能通过绑定三明治 SoC 主控板，在三明治开发套件中申请授权码的方式申请到生产凭证（token）。如果账号没有绑定过三明治 SoC 主控板，只有涂鸦模组，既不能获取到免开发方案产品的 token ，也不能给模组烧录授权免开发方案的固件。</p><h4 id="绑定三明治开发板"><a href="#绑定三明治开发板" class="headerlink" title="绑定三明治开发板"></a>绑定三明治开发板</h4><p>打开<a href="https://iot.tuya.com/">涂鸦 IoT 开发平台</a>，单击<strong>产品</strong> &gt; <strong>开发者工具</strong> &gt; <strong>三明治开发板</strong> &gt; <strong>绑定开发板</strong>。在弹窗中，输入开发板上的 ID 和密码，即可完成绑定。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bound_sandwich_board_1.png" alt="烧录授权"></p><h4 id="三明治开发板获取-Token"><a href="#三明治开发板获取-Token" class="headerlink" title="三明治开发板获取 Token"></a>三明治开发板获取 Token</h4><p>绑定完成后，根据下方图片指示的顺序进行操作，选择要烧录的产品，单击<strong>申请新的授权码</strong>，便可成功申请到授权码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_1.png" alt="烧录授权"></p><h4 id="烧录授权-1"><a href="#烧录授权-1" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>复制从涂鸦 IoT 开发平台上获取到的授权码后，打开<strong>云模组</strong>工具。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_2.png" alt="烧录授权"></p></li><li><p>烧录授权可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#flash">烧录授权</a> ，进行操作。</p></li></ol><h3 id="使用原厂工具烧录"><a href="#使用原厂工具烧录" class="headerlink" title="使用原厂工具烧录"></a>使用原厂工具烧录</h3><p>此方案适用于开发阶段。方案的特点是 <strong>授权一次，重复烧录</strong>。方案需要确保模组在烧录前已完成授权，且烧录时要注意选择的 flash 区域，避免程序写入位置错误，导致程序无法正常运行。</p><p>在开发过程中，如果每次使用<strong>云模组</strong>工具对模组进行烧录授权，相对来说不太方便。如果模组已经完成授权，使用原厂工具进行烧录授权的方式，不但不会刷掉模组的授权信息，还可以达到 <strong>授权一次，重复烧录</strong> 的效果。</p><h4 id="Beken-平台"><a href="#Beken-平台" class="headerlink" title="Beken 平台"></a>Beken 平台</h4><p>使用此方法只能烧录应用区固件，无法给模组进行授权操作。可以使用该方法给已经授权过的模组进行烧录，避免每次更新代码生成固件后都要上传到涂鸦 IoT 开发平台使用<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>按照下图步骤，在箭头 ① 所指向的烧录对象中，根据实际烧录的模组选择对应的芯片型号，可在<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>查看相关模组规格书，确认模组使用的芯片型号。</p></li><li><p>单击箭头 ② 指向的<strong>浏览</strong>按钮，选择成功编译生成的包含了 <code>UA</code> 字样的 bin 文件（该文件就是应用区固件，这里选择的固件就是<code>wifi_one_light</code>）。</p></li><li><p>在箭头 ③ 和箭头 ④ 指向的<code>起始地址</code>中填入<code>0x00011000</code>，<code>操作长度</code>中填入<code>0x00119000</code>。</p></li><li><p>在箭头 ⑤ 指向的位置选择正确的烧录串口，将箭头 ⑥ 指向的<strong>通讯波特率</strong>调整为最高，可以加快烧录速度。</p></li><li><p>单击箭头 ⑦ 指向的<strong>烧录</strong>，给模组通断电或复位模组使模组重启，开始烧录。烧录完成后，更改后的代码就成功烧录到模组中。你可以不再使用<strong>云模组</strong>工具对该模组再次进行授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bk_writer_download.png" alt="烧录授权"></p></li></ol><h2 id="烧录授权-FAQs"><a href="#烧录授权-FAQs" class="headerlink" title="烧录授权 FAQs"></a>烧录授权 FAQs</h2><h3 id="获取-token-失败，没有操作权限"><a href="#获取-token-失败，没有操作权限" class="headerlink" title="获取 token 失败，没有操作权限"></a>获取 token 失败，没有操作权限</h3><p>输入生产凭证是，出现<code>获取 token 失败：没有操作权限</code>的提示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p><strong>解决办法</strong>：<br>如果出现该错误，需要登录 <a href="https://pms.tuya.com/">PMS 系统</a>，选择<strong>生产管理</strong> &gt; <strong>工单管理</strong> &gt; <strong>生产凭证确认</strong>，输入生产凭证，并单击<strong>确认</strong>。之后，回到<strong>云模组</strong>工具中输入该生产凭证，单击<strong>确认</strong>，即可开始烧录授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/no_operate_rights.png" alt="烧录授权"></p><h3 id="抢总线失败错误"><a href="#抢总线失败错误" class="headerlink" title="抢总线失败错误"></a>抢总线失败错误</h3><p>可能其它软件占用了烧录使用的串口。</p><p><strong>解决办法</strong>：<br>可以将烧录串口工具软件全部关闭，或直接插拔 USB 转 TTL 串口工具。</p><h3 id="获取固件指纹错误"><a href="#获取固件指纹错误" class="headerlink" title="获取固件指纹错误"></a>获取固件指纹错误</h3><p>在仅授权的场景下，会出现<strong>获取固件指纹错误</strong>的情况，如下图显示。错误原因是由于模组内烧录的固件名称或版本号与授权的固件名称或版本号不一致。</p><p><strong>解决办法</strong>：</p><ol><li><p>输入与模组固件名称和版本号一致的生产凭证（token），再进行授权处理。</p></li><li><p>对该模组进行烧录授权处理（非仅授权）。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/error_get_firmware_fingerprint.png" alt="烧录授权"></p></li></ol><h3 id="进入产测失败"><a href="#进入产测失败" class="headerlink" title="进入产测失败"></a>进入产测失败</h3><p>设备累计联网时间超过 15 分钟后，会关闭产测功能。在烧录授权过程中，如果出现<strong>进入产测失败</strong>的错误，并且日志中有 <code>have actived over 15 min, not enter mf_init</code> 字样的日志打印，说明设备关闭了产测功能。</p><p><strong>解决办法</strong>：<br>你需要先擦除 flash 中的相关数据才能授权成功。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_3.png" alt="烧录授权"></p><h4 id="修改代码（通用方式）"><a href="#修改代码（通用方式）" class="headerlink" title="修改代码（通用方式）"></a>修改代码（通用方式）</h4><p>进入产测失败时，可以在 <code>tuya_device.c</code> 文件 <code>pre_device_init()</code> 函数内调用 <code>mf_test_ignore_close_flag() ;</code>函数，忽略产测关闭标志，从而避免因为产测关闭而无法通过授权。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_4.png" alt="烧录授权"></p><h4 id="Beken-系列，使用原厂工具擦除相关数据"><a href="#Beken-系列，使用原厂工具擦除相关数据" class="headerlink" title="Beken 系列，使用原厂工具擦除相关数据"></a>Beken 系列，使用原厂工具擦除相关数据</h4><p>打开 Beken 原厂提供的烧录授权 <code>bk_writer</code> 工具，按照下图步骤将箭头 ① 指向的<strong>烧录对象</strong>选项改为对应的芯片。关于模组芯片型号，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>的相关模组规格书。</p><p>三明治 SoC Beken 平台开发板介绍:</p><ul><li>WB3S: 烧录对象选择 BK7231</li><li>CBU: 烧录对象选择 BK7231N</li><li>起始地址：<code>0x001EE000</code>，操作长度：<code>0x00012000</code>。</li></ul><p>选择开发板烧录串口，单击<strong>擦除 Flash</strong>按钮，重启模块，开始擦除内存数据。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_2.png" alt="烧录授权"></p><hr><blockquote><p><strong>说明：本文是收集参考涂鸦官方文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/qq_38179373/article/details/112202787">涂鸦模组二次开发RTL8720CF</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/burn-and-authorize-wbr-series-modules?id=Ka78imt8pf85p#title-3-%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%9A%E7%83%A7%E5%BD%95%E6%8E%88%E6%9D%83%E4%B8%80%E4%BD%93%E6%96%B9%E6%A1%88">WBR 系列模组烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u#title-5-%E7%83%A7%E5%BD%95%E8%BD%AF%E4%BB%B6%E5%87%86%E5%A4%87">烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2">烧录授权(通用说明)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> rtl8720cf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(三)之TuyaOS环境搭建</title>
      <link href="/posts/4014484988.html"/>
      <url>/posts/4014484988.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、SDK-获取"><a href="#一、SDK-获取" class="headerlink" title="一、SDK 获取"></a>一、SDK 获取</h1><blockquote><p>在 涂鸦 IoT 平台 上完成了产品创建。探后在【硬件开发】页面选择好云模组WBR3后，即可在下载资料中找到对应的 SDK，点击【下载】</p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/332c4f488fd6014646cb96b17786bb7a.png"><p>得到相应压缩包 <font color="red">ty_iot_household_electrical_appliances_sdk_rtl8720cf_ameba_2.3.0</font> 就是本芯片相对应SDK，<br>在 README.md 中有相对应简介说明,SDK 目录结构说明以及使用说明等。</p><blockquote><p><strong>注意：压缩包需要在ubuntu上解压，否则很容易出现文件链接错误</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/c00f6bdb9bf47a2641ca1b40d392bf13.png"><h1 id="二、安装-VirtualBox-虚拟机"><a href="#二、安装-VirtualBox-虚拟机" class="headerlink" title="二、安装 VirtualBox 虚拟机"></a>二、安装 VirtualBox 虚拟机</h1><h2 id="第-1-步：软件下载"><a href="#第-1-步：软件下载" class="headerlink" title="第 1 步：软件下载"></a>第 1 步：软件下载</h2><ol><li>进入<a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a> 官网，单击红色框中  Windows hosts 的链接开始下载 VirtualBox 安装包。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/download_virtual_box.png"><ol start="2"><li>进入<a href="https://ubuntu.com/download/desktop">Ubuntu</a> 官网，下载 Ubuntu 系统镜像。这里下载的是 Ubuntu 20.04 （推荐使用 Ubuntu 18 及以上版本）作为开发编译环境<h2 id="第-2-步：安装-VirtualBox"><a href="#第-2-步：安装-VirtualBox" class="headerlink" title="第 2 步：安装 VirtualBox"></a>第 2 步：安装 VirtualBox</h2>点击安装包后直接按照 VirtualBox 软件的提示步骤即可安装完成。</li><li>双击下载好的 VirtualBox 安装包，出现下图界面，单击下一步。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_1.png"><ol start="2"><li>安装功能和安装位置。安装功能使用默认选项，一般不做改变。安装路径可以按照个人喜好进行设置。设置完成后，单击下一步，继续安装。<blockquote><p>如果你的电脑 C 盘空间足够，选择默认目录安装即可。如果电脑 C 盘空间不太充足或不想安装在 C 盘，单击 ① 箭头指向的浏览按钮，修改安装目录并单击下一步。在选择安装路径时，不建议安装路径中包含中文，避免在将来出现一些意想不到的情况。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_2.png"><ol start="3"><li>单击 下一步，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_3.png"><ol start="4"><li>单击 是，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_4.png"><ol start="5"><li>上述步骤配置完成后，单击 安装 开始安装软件。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_5.png"><ol start="6"><li>等待 VirtualBox 安装完成后，单击 完成，运行 VirtualBox。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_6.png"><h2 id="第-3-步：安装Ubuntu虚拟机"><a href="#第-3-步：安装Ubuntu虚拟机" class="headerlink" title="第 3 步：安装Ubuntu虚拟机"></a>第 3 步：安装Ubuntu虚拟机</h2><ol><li>VirtualBox 安装完成后，单击新建，开始创建虚拟机。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_1.png"><ol start="2"><li>名称输入 Ubuntu，下面的类型和版本会自动填充为对应的选项。这里使用的 Ubuntu 镜像为 Ubuntu20.04，所以类型应为Linux，版本应为Ubuntu（64-bit）。单击文件夹，选择其它，将要创建的虚拟机选择到你想要放的位置。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_2.png"><ol start="3"><li>为新创建的虚拟机分配合适的内存大小。<blockquote><p>根据使用的电脑配置情况进行分配，当然分配的内存大一点，虚拟机也会相对于流畅一点。这里使用的电脑内存大小为 16 GB，在实际分配的时候为它分配 4 GB（4096 MB）的内存大小。后续使用过程中，还可以再次修改内存大小。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_3.png"><ol start="4"><li>为将要创建的虚拟机分配合适的磁盘大小。<blockquote><p>根据自身电脑资源情况进行分配，这里为它分配 50 GB 的磁盘大小。在安装完成后，分配的磁盘空间大小也是可以修改的。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_4.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_6.png"><p>更改创建的磁盘文件所放置的文件夹，为虚拟机创建的磁盘大小设置为50 GB.</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_7.png"><ol start="5"><li>虚拟机的资源分配完成后，就可以开始为虚拟机安装 Ubuntu 系统了。单击箭头 ① 所指向光驱，选择下载完成的 Ubuntu 镜像，再单击箭头 ③ 所指向的启动按钮。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_8.png"><ol start="6"><li>安装 Ubuntu 时，建议语言设置为英文。如果设置为中文，在将来可能出现一些意想不到的问题。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_9.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_10.png"><ol start="7"><li>建议设置为最小安装，取消在安装过程中的下载更新，以加快镜像的安装速度。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_11.png"><ol start="8"><li>选择擦除磁盘并安装 Ubuntu，单击Install Now按钮，开始安装 Ubuntu。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_12.png"><ol start="9"><li>这一步会弹出将会对磁盘分区进行修改的提示，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_13.png"><ol start="10"><li>选择时区，默认为上海。可以不用做修改，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_14.png"><ol start="11"><li>输入用户名和密码，按照自身喜好进行设置就好。<blockquote><p><strong>此处设置的用户名和密码在后续步骤中将会多次用于认证操作。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_15.png"><ol start="12"><li>完成上述步骤后，根据界面提示重启电脑。重启后，软件会提示移除镜像安装光驱，此时单击ENTER。等待 VirtualBox 移除镜像安装光驱后，单击虚拟机并按下回车键等待虚拟机配置完成。<blockquote><p><strong>如果软件没有自动移除光驱镜像，您可以在进行手动移除。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_16.png"><ol start="13"><li>等待虚拟机开机完成后，输入密码即可进入 Ubuntu 的桌面虚拟机。</li></ol><h2 id="第-4-步：-安装增强工具"><a href="#第-4-步：-安装增强工具" class="headerlink" title="第 4 步： 安装增强工具"></a>第 4 步： 安装增强工具</h2><blockquote><p><strong>Ubuntu 安装成功后，为了能够更加方便地使用虚拟机，可以给虚拟机安装增强功能。安装成功后，支持共享粘贴板内容、屏幕自动调整分辨率等功能。</strong></p></blockquote><ol><li>在虚拟机界面，单击设备 &gt; 安装增强工具。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_1.png"><ol start="2"><li>单击Run，开始安装增强功能。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_2.png"><ol start="3"><li>等待软件提示 Press Return to close this window…，按下回车并重启虚拟机。此时，虚拟机的桌面大小会根据窗口大小，调整分辨率。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_3.png"><ol start="4"><li>选择 设备 &gt; 共享粘贴板 &gt; 双向 后，就可以在 Windows 上复制内容并在 Ubuntu 虚拟机中进行粘贴或者反向操作。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_4.png"><h1 id="三、安装编译工具"><a href="#三、安装编译工具" class="headerlink" title="三、安装编译工具"></a>三、安装编译工具</h1><blockquote><p><strong>注意：这里吃过亏，设置配置的编译环境是需要在ubuntu进行，否则会出现文件链接出现错误！因为之前 ESP8266 环境编译太久导致忘记了！环境跟源码是可以分开，在环境搭建好之后可以通过 WIN 共享来放置程序代码！</strong></p></blockquote><p>此时，我们还需要安装一些编译所必备的工具，才可以对涂鸦提供的 SDK 进行编译。<br>本文以 Samba 工具为例进行介绍。Samba 工具使我们能够在 Windows 下修改工程项目，在 Linux 下对修改后的工程进行编译，使用 Samba 工具提供的文件共享，也可以方便我们进行开发。<br>为什么不使用 VirtualBox 提供的共享文件夹功能而使用 Samba 工具来共享文件夹呢？因为 Linux 和 Windows 的文件系统是不一样的，如果使用 VirtualBox 上的共享文件夹，当你在 GitHub 上把 SDK 克隆到 VirtualBox 提供的共享文件夹中时，编译的时候可能会出现编译失败的问题。</p><h2 id="第-1-步：-修改下载源"><a href="#第-1-步：-修改下载源" class="headerlink" title="第 1 步： 修改下载源"></a>第 1 步： 修改下载源</h2><blockquote><p>为了使下载软件的速度更快，在安装软件前，先将下载源修改为国内源，以加快下载软件的速度。</p></blockquote><ol><li>打开 Software&amp;Updates。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_1.png"><ol start="2"><li>单击Download from后的选项框，选择选项框内的<strong>Other…</strong>选项。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_2.png"><ol start="3"><li>单击 Select Best Server，软件将自动为你选择最快的下载源。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_3.png"><ol start="4"><li>等待系统自动选择完成后，单击 Choose Server。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_4.png"><ol start="5"><li>单击 Close 后根据界面提示，再单击 Reload，等待系统刷新缓存完成。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_6.png"><ol start="6"><li>系统刷新缓存完成后，Ubuntu 的软件下载源成功更改为国内源。</li></ol><h2 id="第-2-步：下载编译依赖工具"><a href="#第-2-步：下载编译依赖工具" class="headerlink" title="第 2 步：下载编译依赖工具"></a>第 2 步：下载编译依赖工具</h2><p>在虚拟机中，单击右键并选择 <strong>Open in Terminal</strong> 来打开终端，再依次运行以下命令：</p><blockquote><p><strong>在输入命令后，可能会提醒你输入密码。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get upgrade -y</span><br><span class="line">sudo apt-get install net-tools build-essential wget git python libc6-i386</span><br></pre></td></tr></table></figure><p>至此，编译所需要的工具都已下载完成，可以在 Ubuntu 下编译涂鸦的 SDK 了。</p><h2 id="第-3-步：-安装-Samba"><a href="#第-3-步：-安装-Samba" class="headerlink" title="第 3 步： 安装 Samba"></a>第 3 步： 安装 Samba</h2><blockquote><p>使用 Samba 在 Ubuntu 和 windows 之间进行文件共享。</p></blockquote><ol><li>在安装 Samba 之前，需要设置虚拟机的网络。先关闭虚拟机，然后按照下图中的步骤进行设置。<br>（1）选择 设置 &gt; 网络 &gt; 网卡2。<br>（2）在 网卡2 中选择 启动网络连接，连接方式选择 仅主机(Host-Only)网络。<br>（3）单击 确认 完成设置。</li></ol><blockquote><p><strong>注意：这里我使用的是桥接网卡模式，因为习惯使用这个方式，而且我的虚拟机也没网卡2</strong></p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_1.png"><ol start="2"><li>设置完成后打开虚拟机，输入下列命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><blockquote><p>这个是查看网卡信息</p></blockquote></li></ol><p>输入ifconfig 命令后得到电脑的 IP 地址，如下图显示：</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_2.png"><ol start="3"><li><p>输出下列命令，开始安装 Samba。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install samba cifs-utils samba-common</span><br></pre></td></tr></table></figure></li><li><p>Samba 安装完成后，需要创建 Ubuntu 和 Windows 可以互相访问的共享目录，并将共享目录的权限设置为可读可写可执行，依次执行下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /home/share/samba</span><br><span class="line">sudo chmod 777 -R /home/share/samba</span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，然后对 Samba 的配置进行修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>在文件尾部加入下列字段，然后保存退出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[share] </span><br><span class="line">path = /home/share/samba </span><br><span class="line">available = yes </span><br><span class="line">browseable = yes </span><br><span class="line">public = no</span><br><span class="line">writable = yes</span><br></pre></td></tr></table></figure><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_3.png"></li><li><p>输入下列命令，添加指定用户至 smb 用户组，然后按照提醒设置你 Samba 的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a xxxx <span class="comment">#(xxxx 为当前登录用户名，我这里xxxx就应该是y)</span></span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，重启 Samba：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service smbd restart</span><br></pre></td></tr></table></figure></li><li><p>在 Windows 下，打开我的电脑，根据上面获取到的信息，按照下面图片的格式，将 IP 地址换成你 Ubuntu 虚拟机上的 IP 地址，填写在箭头 ② 的位置。如果忘记了虚拟机的 IP 地址，可以在 Ubuntu 上输入 ifconfig 命令进行查询。</p><blockquote><p><strong>注意：这里建议修改成主机名字而不是IP地址，因网内路由分配是DNS随机分配IP地址，所以下次可能又要重新输入IP<br>例如我的是: yichen-VirtualBox 那么设置连接后为：<br>share (yichen-VirtualBox (yichen-VirtualBox server (Samba, Ubuntu)))</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_4.png"><ol start="9"><li>填入用户名和你设置的 Samba 密码。<blockquote><p><strong>建议勾选记住我的凭证，避免每次打开共享文件夹都要填写账号密码。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_5.png"><ol start="10"><li>至此，Samba 已经安装配置成功。</li></ol><h1 id="四、编译验证"><a href="#四、编译验证" class="headerlink" title="四、编译验证"></a>四、编译验证</h1><p>通过上面的步骤，已经将虚拟机基本设置完成。但为了验证对虚拟机的设置是否成功，我们需要获取涂鸦 SDK 进行编译，以验证我们已成功安装与编译相关的工具。<br>涂鸦 SDK 从涂鸦的 GitHub 仓库拉取和从涂鸦 IoT 开发平台下载。在下面的两种方式中选择一种进行编译验证即可。</p><h2 id="方式一：GitHub-上获取-SDK-进行验证"><a href="#方式一：GitHub-上获取-SDK-进行验证" class="headerlink" title="方式一：GitHub 上获取 SDK 进行验证"></a>方式一：GitHub 上获取 SDK 进行验证</h2><blockquote><p><strong>我在 Github 上找不到 WBR3 类型的 rtl8720cf 芯片，所以使用的是方式二，即开头的下载方式</strong></p></blockquote><p>以 BK7231N 的 SDK 为例进行演示。</p><ol><li>在 Ubuntu 虚拟机下，输入下列命令，获取 bk7231n 的 SDK：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/tuya/tuya-iotos-embeded-sdk-wifi-ble-bk7231n.git</span><br></pre></td></tr></table></figure></li><li>输入下列命令，开始编译 tuya_demo_template：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> tuya-iotos-embeded-sdk-wifi-ble-bk7231n/</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#该编译命令将会在下一部分进行介绍</span></span><br></pre></td></tr></table></figure></li><li>编译成功，则说明上述操作均已成功完成。编译成功如下图所示：</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/build_success.png"><h2 id="方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）"><a href="#方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）" class="headerlink" title="方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）"></a>方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）</h2><p>在<a href="https://iot.tuya.com/">涂鸦IoT 开发平台</a> 上成功创建自定义开发的产品后，在硬件开发中选择 TuyaOS，即可下载该模组的 SDK。</p><blockquote><p>详细步骤，可参考<a href="https://developer.tuya.com/cn/docs/iot/iot-platform?id=Kaytf2hpelxqs#title-5-%E7%AC%AC5%E6%AD%A5%EF%BC%9A%20%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91%E8%AE%BE%E7%BD%AE">产品创建</a> 内容。</p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_SDK_1.png"><p>将下载好的 SDK 复制到 Windows 和 Ubuntu 的共享文件夹中，在 Ubuntu 虚拟机中输入下列命令进行编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">tar -xzvf *.tar.gz <span class="comment">#注意：该命令会将当前目录下所有后缀名为.tar.gz的文件进行解压，建议将*.tar.gz改为你实际要解压的文件的完整名字</span></span><br><span class="line"><span class="built_in">cd</span> ty_iot_sdk_bk7231n_2.3.1</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#输入该命令将会在所需相关资源下载完成后开始编译</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：本文是收集参考涂鸦官方环境搭建文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/sandwich_iot/article/details/124094533?spm=1001.2014.3001.5502">涂鸦蓝牙SDK开发系列教程——3.环境搭建</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/SoC-redevelopment_Windows?id=Kauqrxxka0wv6">环境搭建（Windows）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> ubuntu </tag>
            
            <tag> VirtualBox </tag>
            
            <tag> rtl8720cf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu无法访问github</title>
      <link href="/posts/969895767.html"/>
      <url>/posts/969895767.html</url>
      
        <content type="html"><![CDATA[<h1 id="查询github-com和github-global-ssl-fastly-net的ip地址"><a href="#查询github-com和github-global-ssl-fastly-net的ip地址" class="headerlink" title="查询github.com和github.global.ssl.fastly.net的ip地址"></a>查询github.com和github.global.ssl.fastly.net的ip地址</h1><blockquote><p>**可参考Windows github下拒绝访问的文章<br><a href="https://zml3589110.github.io/posts/774596022.html">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a><br>**</p></blockquote><blockquote><ol><li>地址查询已失效: <a href="https://ipaddress.com/website/github.com">https://ipaddress.com/website/github.com</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/4870f2d39d134a6994170100ccb346b8.png"><blockquote><ol start="2"><li><a href="https://ipaddress.com/website/github.global.ssl.fastly.net">https://ipaddress.com/website/github.global.ssl.fastly.net</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/f30c66da905740a6bb6123d0e82efdfd.png"><h1 id="修改hosts下的配置"><a href="#修改hosts下的配置" class="headerlink" title="修改hosts下的配置"></a>修改hosts下的配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><p><strong>添加如下两句：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">140.82.113.3 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><h1 id="重启network"><a href="#重启network" class="headerlink" title="重启network"></a>重启network</h1><blockquote><p>**注意：在20版本ubuntu没有这种启动方式，需使用 network-manager restart 命令<br>参考：Ubuntu常用命令之ubuntu20.04重启网络方法 **</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li><li><a href="https://blog.51cto.com/u_15242250/2856080">【终极方法，绝对有用】ubuntu 无法访问github.com的解决方法 </a></li><li><a href="https://blog.csdn.net/w09103419/article/details/121562044">Windows&#x2F;Ubuntu无法访问GitHub的解决方式</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu常用命令之ubuntu20.04重启网络方法</title>
      <link href="/posts/471655546.html"/>
      <url>/posts/471655546.html</url>
      
        <content type="html"><![CDATA[<h1 id="网上常用的重启办法会报错"><a href="#网上常用的重启办法会报错" class="headerlink" title="网上常用的重启办法会报错"></a>网上常用的重启办法会报错</h1><blockquote><p>配置完网络ip需要重启一下网络，网上搜了一下，大多用的这条命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> 常用命令 </tag>
            
            <tag> network-manager restart </tag>
            
            <tag> 网络重启 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</title>
      <link href="/posts/774596022.html"/>
      <url>/posts/774596022.html</url>
      
        <content type="html"><![CDATA[<h1 id="出现-你的连接不是私密连接-原因"><a href="#出现-你的连接不是私密连接-原因" class="headerlink" title="出现[你的连接不是私密连接]原因"></a>出现[你的连接不是私密连接]原因</h1><blockquote><p>为了更快的访问github网站，一般都会在hosts文件中加入github.com对应的ip地址。<br>但在加入值之后可能会出现下图中的情况</p></blockquote><img src="https://img-blog.csdnimg.cn/20200721225543761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><blockquote><p>查看证书会发现这样一个问题:</p></blockquote><img scr="https://img-blog.csdnimg.cn/20200721225647922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>我查看百度几乎所有解决方案都没有效果，甚至一度怀疑被中间人攻击，到处查找证书的信息。将别人访问github.com的证书导出之后再导入我的证书管理，都无济于事。<br>最后发现问题出在hosts文件中追加的域名和ip地址不对应，我将github.com的ip地址写成了github.global.ssl.fastly.net对应的ip地址。<br>所以，在修改hosts文件时，需要将域名和ip地址对应正确，最好是两个都配置上，甚至github.com可以配置对个ip。这些域名对应的ip可以从<a href="https://www.ipaddress.com/%E5%A4%84%E6%9F%A5%E6%89%BE%E3%80%82">https://www.ipaddress.com/处查找。</a><blockquote><p><strong>主：自己网上方法也试了，只是增加IP地址的话还是不能访问，博主提供的这个网站也已经404，后来直接复制他的结果就解决了</strong></p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/20200721230940576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="2"><li>在搜索框中输入域名即可查看对应的ip<br>github.com对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231258768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="3"><li>github.global.ssl.fastly.net对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231501466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="4"><li>然后将以上两段ip放入hosts文件<br>hosts文件地址为: C:\Windows\System32\drivers\etc<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">199.232.69.194github.global.ssl.fastly.net</span><br><span class="line">140.82.114.4github.com</span><br></pre></td></tr></table></figure></li><li>最后在cmd命令行窗口执行刷新操作即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><h1 id="最后PING看结果"><a href="#最后PING看结果" class="headerlink" title="最后PING看结果"></a>最后PING看结果</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ipconfig /flushdns</span><br><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">已成功刷新 DNS 解析缓存。</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;ping github.com</span><br><span class="line"></span><br><span class="line">正在 Ping github.com [140.82.114.4] 具有 32 字节的数据:</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=232ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=239ms TTL=50</span><br><span class="line"></span><br><span class="line">140.82.114.4 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 231ms，最长 = 239ms，平均 = 233ms</span><br></pre></td></tr></table></figure></li></ol><p>查了很久，原本还会跳转到 Apache 服务上，后边停了就直接失败！最后找到博主这个方法，尝试后正常使用，记录下来以后方便能用上。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_29283569/article/details/107501508">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 问题收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> Google Chrome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE项目(一)之制作登录注册系统</title>
      <link href="/posts/2822623721.html"/>
      <url>/posts/2822623721.html</url>
      
        <content type="html"><![CDATA[<h1 id="账号登录部分"><a href="#账号登录部分" class="headerlink" title="账号登录部分"></a>账号登录部分</h1><blockquote><p>VUE HTML登录界面<br><strong>实现账号密码输入</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:60px;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../icon/vlogo.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:20rem;height:auto;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form middle&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名 / 邮箱&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;input type=&quot;password&quot; class=&quot;form-control input100&quot; v-model=&quot;usercode&quot; placeholder=&quot;密码&quot; @keyup.13=&quot;login&quot; /&gt; --&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input v-on:keyup.delete=&quot;confirmDelete&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">v-on:keyup.delete</span>=<span class="string">&quot;login&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123; errorMsg &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;a href=&quot;./registermobile.html&quot; class=&quot;btn btn-default btn100&quot;&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;Gotoregister&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:right;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./findpassword.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>找回密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span>         </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>© vchenzhe<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE JavaScript方法功能<br><strong>实现登录验证和路由跳转</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: <span class="built_in">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    userid:<span class="string">&#x27;33&#x27;</span>,</span><br><span class="line">    usercode:<span class="string">&#x27;55&#x27;</span>,</span><br><span class="line">    errorFlag:<span class="literal">false</span>,</span><br><span class="line">    errorMsg:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">      <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">        thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">          method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">          url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">          data:&#123;        </span><br><span class="line"></span><br><span class="line">            userid:thisvue.userid,</span><br><span class="line">            usercode:thisvue.usercode</span><br><span class="line">          &#125;,</span><br><span class="line"></span><br><span class="line">         &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">              thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">              <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">              thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">              thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">         </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,<span class="comment">// methods</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>PHP 数据处理<br><strong>接收来自 VUE 的数据并对接 mysql</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$myid</span>!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$mycode</span>!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$pwd</span>=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="variable">$pwd</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$conn</span> != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * FROM user_login where user_id=&#x27;<span class="subst">$myid</span>&#x27; or user_mail = &#x27;<span class="subst">$myid</span>&#x27; &quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> =<span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$resArray</span> = mysqli_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span> == <span class="literal">null</span>) &#123;<span class="keyword">goto</span> __ERENO_SSID;&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span>[<span class="string">&quot;user_password&quot;</span>] == <span class="variable">$mycode</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;chenzhe_user_id&#x27;</span>] = <span class="variable">$resArray</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;登陆成功&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">__ERENO_SSID:&#123;&#125;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;用户名或密码输入错误&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="variable">$conn</span>-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;<span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;mysql not connect&#x27;</span>];&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;请输入用户名或密码&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="账号注册部分"><a href="#账号注册部分" class="headerlink" title="账号注册部分"></a>账号注册部分</h1><blockquote><p>VUE HTML注册界面<br><strong>实现数据FORM表格界面输入和检测</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:2rem;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./indexmobile.html&quot;</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag==1&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123;errorMsg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span> <span class="attr">id</span>=<span class="string">&quot;registerForm&quot;</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testUserIdFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span>  <span class="attr">maxlength</span>=<span class="string">16</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testUserId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">maxlength</span>=<span class="string">10</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;昵称&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercodes&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkusercode&quot;</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testmailFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usermail&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usermail&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testmail&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:flex;&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;code&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;验证码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span>  <span class="attr">v-if</span>=<span class="string">&quot;testUserId==0||testpass==false||usermail==&#x27;&#x27;||testmail==false&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80 btn-disabled&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==0&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;testUserId==1&amp;&amp;testpass==true&amp;&amp;usermail!=&#x27;&#x27;&amp;&amp;testmail==true&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getCode&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-disabled btn80&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>已发送(&#123;&#123; clock &#125;&#125;s)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">             </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;register&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;myModalLabel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModalLabel&quot;</span>&gt;</span>消息<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      &#123;&#123; errorMsg &#125;&#125;</span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>  <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>电脑版<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE注册界面 JavaScript方法功能<br><strong>实现注册数据检测和POST数据功能</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;./js/jquery.js&#x27;</span>;<span class="keyword">import</span> <span class="string">&#x27;./css/mobilecommon.css&#x27;</span>;<span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;../node_modules/vue/dist/vue.js&#x27;</span>;$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"></span><br><span class="line">        el:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line"></span><br><span class="line">        data:&#123;</span><br><span class="line"></span><br><span class="line">            errorMsg:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            errorFlag:<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//填写注册信息</span></span><br><span class="line"></span><br><span class="line">            userid:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            username:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercode:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercodes:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usermail:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//验证注册信息</span></span><br><span class="line"></span><br><span class="line">            code:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            btnGetCode:<span class="number">0</span>, <span class="comment">//用于判断当前是否获取了一次验证码，默认是0，获取一次后改成1</span></span><br><span class="line"></span><br><span class="line">            testcode:<span class="number">0</span>, <span class="comment">//用于判断当前是否完成了验证码验证，默认是0，验证通过是1</span></span><br><span class="line"></span><br><span class="line">            clock:<span class="number">60</span>,</span><br><span class="line"></span><br><span class="line">            testUserId:<span class="literal">false</span>,<span class="comment">//检测当前用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">            testpass:<span class="literal">false</span>,<span class="comment">//检测密码安全</span></span><br><span class="line"></span><br><span class="line">            testmail:<span class="literal">false</span>, <span class="comment">//检测邮箱是否被注册过了</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        methods:&#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testUserIdFunc</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检测用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^[a-zA-Z][a-zA-Z0-9]*$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(thisvue.userid)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;用户名必须以英文开头，且只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(thisvue.userid.length&lt;<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;用户名长度须在9-16之间&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;    </span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testUserId.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_id:thisvue.userid                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = res.msg;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">readInfo</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检索密码安全等</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> result = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^(?!\d+$)[\da-zA-Z]+$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usercode.length&lt;<span class="number">9</span>) <span class="comment">//检测长度</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码长度须在9-20个字符，只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(<span class="built_in">this</span>.usercode)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码只能使用英文+数字,且不能为纯数字&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                     </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/*else if(testenglish.test(this.usercode))</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorFlag = 1;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorMsg = &#x27;密码不能为纯数字&#x27;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    result = 0;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#125;*/</span></span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(result==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.testpass = <span class="number">1</span>;<span class="comment">//如果密码验证成功，则通过</span></span><br><span class="line"></span><br><span class="line">                &#125; </span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.verifyCode();</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/register.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:$(<span class="string">&quot;#registerForm&quot;</span>).serialize(),</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;注册失败&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;                </span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">getCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//获取验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.userid==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.username==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercode==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercodes==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usermail==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;请填写全部的信息后获取验证码&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.btnGetCode = <span class="number">1</span>; <span class="comment">//把获取验证码按钮禁用</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> timer1 = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;thisvue.clock=thisvue.clock-<span class="number">1</span>;&#125;,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="built_in">clearInterval</span>(timer1);</span><br><span class="line"></span><br><span class="line">                        thisvue.btnGetCode=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                        thisvue.clock=<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;,<span class="number">60000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//发送邮件</span></span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/sendMail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">async</span>:<span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            address:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;我们发送了一封邮件到你的邮箱，请尽快验证&#x27;</span></span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">verifyCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//验证验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue =<span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.code&gt;<span class="number">100000</span>&amp;&amp;thisvue.code&lt;<span class="number">999999</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/verifyCode.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;<span class="attr">code</span>:thisvue.code&#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testcode=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg=<span class="string">&#x27;验证码不正确，请重新输入&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testmailFunc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usermail!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="built_in">this</span>.usermail.indexOf(<span class="string">&#x27;@&#x27;</span>)!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testmail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_mail:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;此邮箱已被注册,换个邮箱试试吧&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>PHP注册数据功能<br><strong>实现注册数据接收处理</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$_POST</span>[userid];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[usercode]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myname</span> = <span class="variable">$_POST</span>[username];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mymail</span> = <span class="variable">$_POST</span>[usermail];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$gm</span> = <span class="string">&#x27;vchenzhecom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;47.106.190.129:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;52F7cbad94f2&quot;</span>, <span class="string">&quot;personal&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test</span> = <span class="string">&quot;SELECT * FROM user_login WHERE `user_id` = &#x27;<span class="subst">$myid</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$testResult</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$test</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$testResult</span>)==<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$path</span>=<span class="string">&quot;/home/www/htdocs/carelesswhisper/src/img/&quot;</span>.<span class="variable">$myid</span>; <span class="comment">//判断目录存在否，存在给出提示，不存在则创建目录</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$path</span>))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;覆盖用户目录&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="comment">//第三个参数是“true”表示能创建多级目录，iconv防止中文目录乱码</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$res</span>=mkdir(iconv(<span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;GBK&quot;</span>, <span class="variable">$path</span>),<span class="number">0777</span>,<span class="literal">true</span>); </span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;注册成功&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot; INSERT INTO user_login VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$mycode</span>&#x27;,&#x27;<span class="subst">$myname</span>&#x27;,&#x27;<span class="subst">$mymail</span>&#x27;,&#x27;imageFile/image.jpg&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;0&#x27;) &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$gm</span>&#x27;,&#x27;<span class="subst">$myid</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$gm</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"></span><br><span class="line">         </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;此用户名已被使用&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>]=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="后端PHP数据接口参考"><a href="#后端PHP数据接口参考" class="headerlink" title="后端PHP数据接口参考"></a>后端PHP数据接口参考</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>);</span><br><span class="line">    error_reporting(E_ALL &amp; ~E_NOTICE);</span><br><span class="line">    <span class="comment">//header(&quot;Content-type: text/html; charset=gbk&quot;);</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意：</span></span><br><span class="line"><span class="comment">            本php是gbk编码的，因为mysise就是gbk编码没办法</span></span><br><span class="line"><span class="comment">            json_encode()里面的值要先转换为utf-8才能被识别</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="variable">$user</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    <span class="variable">$pass</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line">    <span class="variable">$sise_cookie</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;sise_cookie&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//echo $_POST[&#x27;sise_cookie&#x27;];</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//测试账号110</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>&amp;&amp;<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./user.php&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//登录页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;login&#x27;</span>)&#123;            </span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;number=<span class="subst">$user</span>&amp;pwd=<span class="subst">$pass</span>&quot;</span>;              </span><br><span class="line">        <span class="variable">$scse_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录scse</span></span><br><span class="line">        <span class="variable">$scse_url</span>=<span class="string">&quot;http://my.scse.com.cn/login_pro.asp&quot;</span>;               </span><br><span class="line">        LinkCurl(<span class="variable">$scse_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$scse_cookie</span>);                  </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取管理系统隐藏字段</span></span><br><span class="line">        <span class="variable">$sise_login_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login.jsp&quot;</span>;            </span><br><span class="line">        <span class="variable">$sise_login_html</span>=getCurlCon(<span class="variable">$sise_login_url</span>,<span class="variable">$scse_cookie</span>);</span><br><span class="line">        preg_match(<span class="string">&#x27;/&lt;input type=\&quot;hidden\&quot; name=\&quot;(.*)\&quot;  value=\&quot;(.*)\&quot;&gt;/&#x27;</span>, <span class="variable">$sise_login_html</span>,<span class="variable">$arr</span>);   </span><br><span class="line">        <span class="comment">//print_r($arr);</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录管理系统</span></span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;username=<span class="subst">$user</span>&amp;password=<span class="subst">$pass</span>&amp;<span class="subst">$arr</span>[1]=<span class="subst">$arr</span>[2]&quot;</span>; </span><br><span class="line">        <span class="variable">$sise_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line">        <span class="variable">$sise_login_check_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login_check.jsp&quot;</span>;        </span><br><span class="line">        LinkCurl(<span class="variable">$sise_login_check_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$sise_cookie</span>); </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;((.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*))&lt;\/span&gt;/&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">            <span class="comment">//登录成功后保存用户数据</span></span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]= <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;user&#x27;</span> =&gt; <span class="variable">$user</span>,</span><br><span class="line">                <span class="string">&#x27;pass&#x27;</span> =&gt; <span class="variable">$pass</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//课程表页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;course&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*)&lt;\/span&gt;/U&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        preg_match_all(<span class="string">&quot;/&lt;td width=\&#x27;10%\&#x27; align=\&#x27;left\&#x27; valign=\&#x27;top\&#x27; class=\&#x27;font12\&#x27;&gt;(.*)&lt;\/td&gt;/U&quot;</span>, <span class="variable">$course_html</span>,<span class="variable">$course</span>);</span><br><span class="line">        <span class="variable">$res_course</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">8</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">7</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">7</span>+<span class="number">7</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] == <span class="string">&#x27;&amp;nbsp;&#x27;</span>) <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$k</span>!=<span class="number">5</span> &amp;&amp; <span class="variable">$k</span>!=<span class="number">6</span>) &#123;</span><br><span class="line">                    <span class="variable">$res_course</span>[<span class="variable">$i</span>][<span class="variable">$k</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                &#125;   </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;info&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&quot;stuNum&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">1</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;name&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;grade&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">3</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;major&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">4</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">&quot;course&quot;</span> =&gt; <span class="variable">$res_course</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">        <span class="comment">//print_r($res_course);</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//查找老师页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;teacher&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// gei请求的name查询字符串</span></span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="comment">//获取老师的json数据库</span></span><br><span class="line">        <span class="variable">$data</span> = json_decode(file_get_contents(<span class="string">&quot;./json/teacher.json&quot;</span> ));</span><br><span class="line">        <span class="comment">//老师的信息</span></span><br><span class="line">        <span class="variable">$arr</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//响应数据</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//查询json数据库</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$data</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="variable">$i</span>]-&gt;name == <span class="variable">$name</span>)&#123;</span><br><span class="line">                <span class="variable">$arr</span> = <span class="variable">$data</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断查询数据</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$arr</span>))&#123;</span><br><span class="line">            <span class="comment">//如果工号为三位就前面加个0</span></span><br><span class="line">            <span class="keyword">if</span>(mb_strlen(<span class="variable">$arr</span>-&gt;num) ==<span class="number">3</span> )&#123;</span><br><span class="line">                <span class="variable">$arr</span>-&gt;num = <span class="string">&quot;0&quot;</span>.<span class="variable">$arr</span>-&gt;num;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="variable">$arr</span></span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>()</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//考勤信息页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;attendance&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$main_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_states/student_select_class/main.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$main_html</span>=getCurlCon(<span class="variable">$main_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/window\.location=\&#x27;\.\.\/\.\.\/\.\.\/\.\.\/\.\.\/(.*)\&#x27;\&quot;/Um&#x27;</span>, <span class="variable">$main_html</span>,<span class="variable">$main</span>);</span><br><span class="line">        <span class="variable">$attendance_url</span>=<span class="string">&#x27;http://class.sise.com.cn:7001/&#x27;</span>.<span class="variable">$main</span>[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="variable">$attendance_html</span> = getCurlCon(<span class="variable">$attendance_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        <span class="comment">//print_r($attendance_html);</span></span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td&gt;(.*)(\d+)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$count</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td align=\&quot;center\&quot;&gt;(.*)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$attendance</span>);</span><br><span class="line">        <span class="variable">$res_attendance</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$attendance</span>[<span class="number">1</span>])/<span class="number">3</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">3</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">3</span>+<span class="number">3</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">switch</span> (<span class="variable">$k</span>) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;num&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;name&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="comment">//匹配请假次数</span></span><br><span class="line">                        preg_match_all(<span class="string">&#x27;/\[&lt;a href=\&#x27;(.*)\&#x27;&gt;(.*)&lt;\/a&gt;\]/U&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="variable">$count</span>);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>].<span class="string">&#x27;次&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;                  </span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;                               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;total&quot;</span> =&gt; <span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>],</span><br><span class="line">                <span class="string">&quot;list&quot;</span> =&gt; <span class="variable">$res_attendance</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">LinkCurl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$curlpost</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);                   </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$curlpost</span>);            </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEJAR, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        curl_exec(<span class="variable">$curl</span>);                          </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录后获取页面内容函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCurlCon</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);             </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEFILE, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        <span class="variable">$data</span>=curl_exec(<span class="variable">$curl</span>);    </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.php.cn/php-ask-485509.html">vue加php怎么实现登陆</a></li><li><a href="https://www.mk2048.com/blog/blog_bab1ika2ij2j.html">Vue+php 后端PHP登录接口编写</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
          <category> mysql </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> php </tag>
            
            <tag> mysql </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php接收来自POST数据</title>
      <link href="/posts/705713032.html"/>
      <url>/posts/705713032.html</url>
      
        <content type="html"><![CDATA[<h1 id="POST提交过来模式为-Request-Payload-的-json-类型数据"><a href="#POST提交过来模式为-Request-Payload-的-json-类型数据" class="headerlink" title="POST提交过来模式为 Request Payload 的 json 类型数据"></a>POST提交过来模式为 Request Payload 的 json 类型数据</h1><ol><li>从html发送过来的Payload格式为 Request Payload<blockquote><p>内容格式为：{“userid”: “33”,”usercode”: “55”}</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">     <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">     &#123;</span><br><span class="line">       thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">       thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">         method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">         url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">         data:&#123;</span><br><span class="line">           userid:thisvue.userid,</span><br><span class="line">           usercode:thisvue.usercode</span><br><span class="line">         &#125;,</span><br><span class="line">        &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">             thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">             <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">             thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">             thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">        </span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,<span class="comment">// method</span></span><br></pre></td></tr></table></figure></li><li>使用 file_get_contents(‘php:&#x2F;&#x2F;input’); 方式进行接收<blockquote><p>之前尝试使用 $_POST 模式接收 POST 过来的数据，但总得到的数据为空，找了很多方法才发现是类型不对！</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   session_start();</span><br><span class="line">   header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line">   </span><br><span class="line">   <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">   <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br></pre></td></tr></table></figure><h1 id="POST-提交过来模式为-Form-Data-单格式"><a href="#POST-提交过来模式为-Form-Data-单格式" class="headerlink" title="POST 提交过来模式为 Form Data 单格式"></a>POST 提交过来模式为 Form Data 单格式</h1></li></ol><blockquote><p>$_POST 变量预定义的 $_POST 变量用于收集来自 method&#x3D;”post” 的表单中的值。<br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。<br><strong>注释：然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）</strong></p></blockquote><ol><li>从html发送过来的Payload格式为 Form Data<blockquote><p>内容格式为：<br>userid: zm<br>username: zha<br>usercode: zm<br>checkusercode: zml<br>usermail: zhaoming</p></blockquote></li></ol><p><strong>请注意，表单域的名称会自动成为 $_POST 数组中的键</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">  <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line">    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    thisvue.verifyCode();</span><br><span class="line">    <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">      url:<span class="string">&quot;/api/myBlog/axios-register.php&quot;</span>,</span><br><span class="line">      <span class="comment">// type:&#x27;POST&#x27;,</span></span><br><span class="line">      method:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      data:$(<span class="string">&#x27;#registerForm&#x27;</span>).serialize(<span class="built_in">this</span>.serialize),  <span class="comment">//可以发送 FORM 类型数据了</span></span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res.data[<span class="string">&#x27;code&#x27;</span>]==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          alert(<span class="string">&quot;注册成功&quot;</span>)</span><br><span class="line">          <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">          thisvue.errorMsg = <span class="string">&#x27;注册失败:&#x27;</span>+res.data[<span class="string">&#x27;msg&#x27;</span>];</span><br><span class="line">          thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>不能使用 type:’POST’, 要不然接收不到数据<br>要使用 data:$(‘#registerForm’).serialize(this.serialize),<br>而非 data:this.$(“#registerForm”).serialize(),</strong></p></blockquote><ol start="2"><li>使用 $_POST 方式进行接收<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line">header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$myid</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line"><span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$myname</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$mymail</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;usermail&#x27;</span>];</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>注意：括号内使用的是单引号[‘’]而不是[“”]</strong></p></blockquote><h2 id="POST-简单试验说明"><a href="#POST-简单试验说明" class="headerlink" title="$_POST 简单试验说明"></a>$_POST 简单试验说明</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;welcome.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fname&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Age:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fname&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="POST-表单保存-json-文件"><a href="#POST-表单保存-json-文件" class="headerlink" title="$_POST 表单保存 json 文件"></a>$_POST 表单保存 json 文件</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;form.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端-建立一个 form.php 文件</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$userInfo</span> = <span class="variable">$_POST</span>;</span><br><span class="line"><span class="comment">//把获取的用户信息数组编码成json字符串</span></span><br><span class="line"><span class="variable">$json</span> = json_encode(<span class="variable">$userInfo</span>);</span><br><span class="line"><span class="comment">//打开json文件,如果没有json文件则自动创建json文件</span></span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&#x27;form.json&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>);</span><br><span class="line"><span class="comment">//把json字符串$json写入json文件form.json</span></span><br><span class="line">fwrite(<span class="variable">$file</span>,<span class="variable">$json</span>);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>何时使用 method&#x3D;”post”？</strong><br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。<br>然而，由于变量不显示在 URL 中，所以无法把页面加入书签。</p><p><strong>PHP $_REQUEST 变量</strong><br>预定义的 $_REQUEST 变量包含了 $_GET、$_POST 和 $_COOKIE 的内容。</p><p>$_REQUEST 变量可用来收集通过 GET 和 POST 方法发送的表单数据。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.runoob.com/php/php-post.html">菜鸟教程</a></li><li><a href="https://www.cnblogs.com/supermeimei/p/5165735.html">PHP中的$_POST变量</a></li><li><a href="https://www.shuyong.net/chengxu/1116.html">PHP获取前端form数据并保存在json中</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> php </tag>
            
            <tag> 数据库 </tag>
            
            <tag> POST </tag>
            
            <tag> 表单 </tag>
            
            <tag> json </tag>
            
            <tag> $_POST </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE重要功能(一)之route路由跳转</title>
      <link href="/posts/98479763.html"/>
      <url>/posts/98479763.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么是路由"><a href="#什么是路由" class="headerlink" title="什么是路由"></a>什么是路由</h1><blockquote><p>路由的本质就是一种对应关系，比如说我们在url地址中输入我们要访问的url地址之后，浏览器要去请求这个url地址对应的资源。<br>那么url地址和真实的资源之间就有一种对应的关系，就是路由。</p></blockquote><p><strong>路由分为前端路由和后端路由:</strong></p><ol><li>后端路由是由服务器端进行实现，并完成资源的分发<br>后端路由性能相对前端路由来说较低，所以，我们接下来主要学习的是前端路由</li><li>前端路由是依靠hash值(锚链接)的变化进行实现<br>前端路由的基本概念：根据不同的事件来显示不同的页面内容，即事件与事件处理函数之间的对应关系<br>前端路由主要做的事情就是监听事件并分发执行事件处理函数</li></ol><h1 id="vue3-安装路由"><a href="#vue3-安装路由" class="headerlink" title="vue3 安装路由"></a>vue3 安装路由</h1><blockquote><p>查看自己项目目录中是否有route文件,安装 route 后会有生成该文件</p></blockquote><img src="https://img-blog.csdnimg.cn/20210619092259367.png"><h2 id="方法一：使用-vue-ui-安装"><a href="#方法一：使用-vue-ui-安装" class="headerlink" title="方法一：使用 vue ui 安装"></a>方法一：使用 vue ui 安装</h2><p><strong>在当前项目文件夹使用cmd命令，然后输入vue ui</strong></p><img src="https://img-blog.csdnimg.cn/20210619092605125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70">打开之后是这个页面<img src="https://img-blog.csdnimg.cn/20210619092805266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><h1 id="route-路由配置和使用"><a href="#route-路由配置和使用" class="headerlink" title="route 路由配置和使用"></a>route 路由配置和使用</h1><blockquote><p><strong>注:需要配置并且引用后才能生效</strong></p></blockquote><h2 id="一、配置-router-文件中的-index-js"><a href="#一、配置-router-文件中的-index-js" class="headerlink" title="一、配置 router 文件中的 index.js"></a>一、配置 router 文件中的 index.js</h2><p>添加相应的路径和名字，参考设置即可<br><img src="https://img-blog.csdnimg.cn/20210619093338656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"></p><h2 id="二、使用-router"><a href="#二、使用-router" class="headerlink" title="二、使用 router"></a>二、使用 router</h2><ol><li>查看 main.js 中查看是否引用了，正常安装后会引用</li></ol><blockquote><p><strong>注：必须要在mount之前挂载</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line">app.use(router)</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">app.mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong>最后在App.vue里面引用一下<router-view>组件就把环境都弄好了，记得把之前模板自带的东西清理了就好</router-view></strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-view/&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在 VUE 界面中引用</li></ol><blockquote><p><strong>在 template 中设置 点击事件</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/2021061909374558.png"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;cliec&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在 script 中配置跳转</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20210619094108740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="route-路由进阶使用之传参功能"><a href="#route-路由进阶使用之传参功能" class="headerlink" title="route 路由进阶使用之传参功能"></a>route 路由进阶使用之传参功能</h1><p><strong>安装方法二：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@4 --save</span><br></pre></td></tr></table></figure><h2 id="1、跳转模式-A界面－－▶B界面"><a href="#1、跳转模式-A界面－－▶B界面" class="headerlink" title="1、跳转模式 A界面－－▶B界面"></a><strong>1、跳转模式 A界面－－▶B界面</strong></h2><p>需要配置 router 的文件夹：</p><img src="https://img-blog.csdnimg.cn/20210528160712548.png"><hr><h3 id="一、router-环境配置"><a href="#一、router-环境配置" class="headerlink" title="一、router 环境配置"></a>一、router 环境配置</h3><p><strong>1. 首先我们在文件夹的index.js文件里添加下面的代码：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> A <span class="keyword">from</span> <span class="string">&#x27;../views/A.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    <span class="comment">// &#123; path: &quot;/&quot;, redirect: &quot;/index&quot; &#125;,</span></span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        component: A</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/B&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        component: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span> (<span class="string">&#x27;../views/B.vue&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><blockquote><p>你会惊奇的发现，Vue对象去哪儿了？在2.x中，我们要使用路由是要先import Vue from ‘vue’把Vue引入进来，接着再Vue.use(VueRouter)去初始化使用路由，是的，vue3中已经没有全局的Vue对象了，并且vue-router也变得模块化了，routes引入页面的两种方式没啥改变，倒是history已经模块化了，它有几种方式，我们使用createWebHistory 就好了，就是浏览器URL后面带不带#号小尾巴的区别</p></blockquote><p><strong>2. 然后在main.js文件里修改添加下面的代码：</strong></p><blockquote><p>使用router的话在createApp模块里挂载一下就好了，需要注意的是必须要在mount之前挂载</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line">createApp(App).use(router).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>3. 最后在App.vue里面引用一下<router-view>组件：</router-view></strong></p><blockquote><p>值此就把环境都弄好了，记得把之前模板自带的东西清理了就好</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="二、router-使用"><a href="#二、router-使用" class="headerlink" title="二、router 使用"></a>二、router 使用</h3><p><strong>1. 首先在之前创建的A.vue文件中添加下面代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;goToB&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">//也可以这样写</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// function goToB() &#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   router.push(&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     name: &quot;B&quot;,</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   &#125;);</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2. 然后在B.vue文件中随便添加点东西，能显示就好：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3. 最后我们再回看A文件，在methods中引用：</strong></p><blockquote><p><strong>在A文件中你会发现找不到this.$router.push()，是的，vue3中已经没有全局的路由了，需要使用路由，<br>我需先要引入useRouter模块，接着要在setup函数中定义router，之后再创建一个方法，里面才是我们熟悉的router.push({ name: “B”})，这里不要用this，setup函数中是没有this的，到这里简单的跳转就算完成了。</strong></p></blockquote><p><strong>methods函数里面调用方式：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">test</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToB();</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终效果如下：</p><img src="https://img-blog.csdnimg.cn/20210528181441344.gif"><h2 id="2、重点功能之路由传参"><a href="#2、重点功能之路由传参" class="headerlink" title="2、重点功能之路由传参"></a><strong>2、重点功能之路由传参</strong></h2><blockquote><p>既然在methods函数里可以调用了setup() 里return的方法，那是不是意味着我们可以传点东西过去？</p></blockquote><ol><li><strong>修改 A.vue 文件:</strong></li></ol><blockquote><p>我们可以传参数过去，这样我们就可以把这个自定义的跳转函数封装起来，动态的传入页面名称和参数就好了</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToOtherPage = <span class="function">(<span class="params">page_name, value</span>) =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line">        name: page_name,</span><br><span class="line">        params: &#123;</span><br><span class="line">          value: value,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 定义methods的方法可以直接写在return之前</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="comment">//要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> page_name = <span class="string">&quot;B&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//要传的参数</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> value = <span class="string">&quot;hello vue3&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToOtherPage(page_name, value);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToOtherPage,</span><br><span class="line">      test</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//   methods: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     test() &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       /*</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        * do something...</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        */</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let page_name = &quot;B&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要传的参数</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let value = &quot;hello vue3&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       this.goToOtherPage(page_name, value);</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><strong>修改 B.vue 文件:</strong></li></ol><blockquote><p>接着我们要怎么接受参数咧？搞了那么久，其实配方都是一样的，要接受参数，我需要想引入useRoute ，注意是没有r结尾的，是不是有种很熟悉的味道同志们&#x3D;》this.$route.params，接着也要在setup函数里定义route，接着我们就可以以方法的形式返回params，要使用的话this一下就好了，生命周期函数created、mounted里面都可以直接拿到</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> route = useRoute();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> getParams = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> route.params;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 生命周期写法</span></span></span><br><span class="line"><span class="javascript">    onMounted(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&quot;mounted:&quot;</span> + getParams().value);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      getParams,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="comment">//   created: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(`created:` + JSON.stringify(this.getParams()));</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   mounted: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(&quot;mounted:&quot; + this.getParams().value);</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><img src="https://img-blog.csdnimg.cn/20210528205800430.gif"><h2 id="3、在基础页怎么获取router文件夹中index-js里的数据呢？"><a href="#3、在基础页怎么获取router文件夹中index-js里的数据呢？" class="headerlink" title="3、在基础页怎么获取router文件夹中index.js里的数据呢？"></a><strong>3、在基础页怎么获取router文件夹中index.js里的数据呢？</strong></h2><p><strong>1. vue3.x 带上数据</strong></p><blockquote><p>在vue2.x时，在new实例时可以顺便把数据带上，之后在created或mounted生命周期里直接this.$router.options就可以找到我们传的数据了</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    base: process.env.BASE_URL,</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>那么在vue3.x中，我们可以在创建路由时把数据带上</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>2. 之后我们在setup() 函数中使用路由时接收并返回对应的数据，之后就可以在created或mounted生命周期中使用了</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter();</span><br><span class="line">    <span class="built_in">console</span>.log(router.options);</span><br><span class="line">    <span class="keyword">const</span> myArr = <span class="function">() =&gt;</span> router.options.myArr;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">this</span>.myArr());</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      myArr</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="comment">//   mounted: function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(this.myArr());</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>3. 成功后打印大概是这个样子：</strong></p><img src="https://img-blog.csdnimg.cn/539ea0f067164ab7b5b1604364d0cfe1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA54ix5ZSx5q2M55qE5YmN56uv,size_9,color_FFFFFF,t_70,g_se,x_16"><h1 id="route-路由跳转与方式对比"><a href="#route-路由跳转与方式对比" class="headerlink" title="route 路由跳转与方式对比"></a>route 路由跳转与方式对比</h1><p>vue-router实现路由跳转与参数获取：</p><p><strong>路由跳转和传参：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, reactive, readonly, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter, useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  name: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter(), route = useRoute();</span><br><span class="line">    <span class="keyword">const</span> submitForm = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      formRef.value?.validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          login(&#123; <span class="attr">strategy</span>: <span class="string">&#x27;local&#x27;</span>, ...ruleForm &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 获取参数和路由跳转</span></span><br><span class="line">              <span class="keyword">const</span> redirect: string = route.query &amp;&amp; route.query.redirect;</span><br><span class="line">              <span class="keyword">if</span> (redirect) &#123;</span><br><span class="line">                router.replace(redirect);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                router.push(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">              ...</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         ...</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; ..., submitForm &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>路由跳转三种方法的总结：</strong></p><ol><li>第一种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment">//`在这里插入代码片`</span></span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">`/detail/1`</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意： params 传参相当于是路由的一部分是必须传的东西,经过验证不传页面会跳转到空白页,该方式刷新页面id 不丢失</strong></p></blockquote><ol start="2"><li>第二种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    params: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 可以传也可以不传,不传刷新页面id 会丢失该方式刷新页面id 不丢失</strong></p></blockquote><ol start="3"><li>第三种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    query: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.query.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 不能写，因为写了就是router 的一部分，这样就会匹配不到, 此方式刷新页面id 不丢失</strong></p></blockquote><p><a href="http://localhost:8080/#/detail?id=1">http://localhost:8080/#/detail?id=1</a></p><p><strong>总结： params一旦设置在路由，params就是路由的一部分，如果这个路由有params传参，但是在跳转的时候没有传这个参数，会导致跳转失败或者页面会没有内容。</strong></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/235876.htm">一篇文章带你了解vue路由</a></li><li><a href="https://blog.csdn.net/weixin_52921550/article/details/118046853">vue3.0路由跳转</a></li><li><a href="https://blog.csdn.net/weixin_42063951/article/details/117357542">vue3中怎么使用router路由呢&amp;页面跳转传参怎么搞呢</a></li><li><a href="https://www.jb51.net/article/242793.htm#_lab2_1_1">Vue3使用vue-router如何实现路由跳转与参数获取</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> route </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE问题(二)之按键修饰符KeyboardEvent.keyCode&#39; modifier</title>
      <link href="/posts/3235598376.html"/>
      <url>/posts/3235598376.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>重要参考：</strong><a href="https://v3.cn.vuejs.org/guide/migration/keycode-modifiers.html"><strong>VUE官方迁移策略</strong></a><br>弃用 KeyboardEvent.keyCode</p></blockquote><h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>使用 <input v-on:keyup.13="submit"> 时出现报错显示 ‘KeyboardEvent.keyCode’ modifier on ‘v-on’ directive</p><h2 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h2><blockquote><p>VUE3版本：</p><ol><li>不再支持使用 keyCodes (即键码) 作为 v-on 修饰符；</li><li>不再支持 config.keyCodes；</li></ol></blockquote><h1 id="VU2-对-keyCodes-说明"><a href="#VU2-对-keyCodes-说明" class="headerlink" title="VU2 对 keyCodes 说明"></a>VU2 对 keyCodes 说明</h1><p><strong>Vue 2.x 中的 keyCodes 修饰符</strong></p><p>在 Vue 2.x 中，允许使用 keyCodes 作为v-on 的修饰符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.13&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.enter&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>上面两种写法，在 Vue 2.x 是等价的。</p></blockquote><p><strong>另外， 我们还可以通过全局的 config.keyCodes 选项来自定义 alias （别名）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  f1: 112&#x2F;&#x2F;快捷键</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.112&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- custom alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.f1&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h1 id="Vue3-弃用-keyCodes-说明"><a href="#Vue3-弃用-keyCodes-说明" class="headerlink" title="Vue3 弃用 keyCodes 说明"></a>Vue3 弃用 keyCodes 说明</h1><p>因为 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/keyCode"><strong>Web 标准已经弃用</strong></a> KeyboardEvent.keyCode<br>所以 Vue 3.x 为了和 Web 标准保持一致也不再支持 keyCodes。<br>Vue 3.x 建议使用按键 alias （别名）作为v-on的修饰符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span><br><span class="line">&lt;input v-on:keyup.delete&#x3D;&quot;confirmDelete&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>因此，这也意味着config.keyCodes也被弃用了</p><h1 id="Vue3-设置快捷键方法"><a href="#Vue3-设置快捷键方法" class="headerlink" title="Vue3 设置快捷键方法"></a>Vue3 设置快捷键方法</h1><blockquote><p>设置快捷键比如 ctrl+s 这种,vue2: @keydown.ctrl.83<br>配置的代码可以写在 main.js 入口文件中，全局统一管理</p></blockquote><p><strong>vue3 不能使用 keyCode，只能使用按键别名。你为 keyCode&#x3D;83 设置别名就行了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  s: 83</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_44869002/article/details/113176050">Vue 3 迁移策略笔记—— 第18节：按键修饰符</a></li><li><a href="https://zhuanlan.zhihu.com/p/113754059">Markdown设置居中和字体颜色</a></li></ol><hr><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> BUG </tag>
            
            <tag> keyCodes </tag>
            
            <tag> v-on </tag>
            
            <tag> web标准 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用组件(一)之Element UI</title>
      <link href="/posts/1511238045.html"/>
      <url>/posts/1511238045.html</url>
      
        <content type="html"><![CDATA[<h1 id="Element-UI安装"><a href="#Element-UI安装" class="headerlink" title="Element UI安装"></a>Element UI安装</h1><p><strong>原来安装的是 element-plus 而不是 Element-ui</strong><br><a href="https://blog.csdn.net/drhrht/article/details/123421598">Element-ui和Element-Plus的区别_Element2和Element3的区别</a></p><ol><li>Icon图标库变化了 </li><li>组件的插槽slot使用变化了:同时可支持多个插槽 </li><li>新增组件 Skeleton-骨架屏&#x2F;Empty-空状态&#x2F;Affix -固钉&#x2F;TimeSelect 时间选择&#x2F;Space 间距</li></ol><hr><p>因需使用 el-table 报错才发现需要安装 Element UI 组件，开始按照网上大多数方法进行，但总报错！因为这些方法是基于VUE2.X版本，而搭建的环境是VUE3！</p><h2 id="VUE3正确安装方法"><a href="#VUE3正确安装方法" class="headerlink" title="VUE3正确安装方法"></a>VUE3正确安装方法</h2><ol><li>下载 Element UI组件<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save element-plus</span><br></pre></td></tr></table></figure><blockquote><p>安装完之后 package.json 文件中的 dependencies 会新增版本内容，说明安装成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">  &quot;axios&quot;: &quot;^0.27.2&quot;,</span><br><span class="line">  &quot;core-js&quot;: &quot;^3.8.3&quot;,</span><br><span class="line">  &quot;element-plus&quot;: &quot;^2.2.0&quot;,</span><br><span class="line">  &quot;table&quot;: &quot;^6.8.0&quot;,</span><br><span class="line">  &quot;vue&quot;: &quot;^3.2.13&quot;,</span><br><span class="line">  &quot;vue-router&quot;: &quot;^4.0.3&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>在 main.js 中引入 Element UI 组件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import ElementPlus from &#39;element-plus&#39;</span><br><span class="line">import &#39;element-plus&#x2F;dist&#x2F;index.css&#39;</span><br><span class="line"></span><br><span class="line">const app &#x3D; createApp(App);</span><br><span class="line">app.use(ElementPlus)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;...</span><br><span class="line">app.mount(&#39;#app&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;createApp(App).use(store).use(router).use(element).mount(&#39;#app&#39;)</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>因vue3 的 dom挂载方式是新创建一个 app 然后调用 mount() 方法插入到页面中<br>所以 app.use(ElementPlus) 设置需要在 app.mount(‘#app’); 挂载之前设置</strong></p></blockquote></li><li>在相应的 vue 文件中测试使用 并 npm run serve 运行测试<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>卸载 element-ui<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall element-ui</span><br></pre></td></tr></table></figure><strong>装过旧版需要卸载，还需要把 main.js 和 package.json 内与 element-plus 相关删除</strong></li></ol><h2 id="旧版常规安装"><a href="#旧版常规安装" class="headerlink" title="旧版常规安装"></a>旧版常规安装</h2><blockquote><p><strong>注意:官方和网上常见的方式为 VUE2.X 旧版本方式</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 1.下载elementui的依赖</span><br><span class="line">    npm i element-ui -S</span><br><span class="line"># 2.指定当前项目中使用elementui</span><br><span class="line">    import ElementUI from &#39;element-ui&#39;;</span><br><span class="line">    import &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;;</span><br><span class="line">  &#x2F;&#x2F;在vue脚手架中使用elementui</span><br><span class="line">    Vue.use(ElementUI);</span><br></pre></td></tr></table></figure><h1 id="Element-UI基本使用-示例"><a href="#Element-UI基本使用-示例" class="headerlink" title="Element UI基本使用(示例)"></a>Element UI基本使用(示例)</h1><blockquote><p><strong>注意：<br>使用element ui的相关组件时需要注意的是 所有组件都是el-组件名称开头<br>属性使用都是直接将属性名&#x3D;属性值方式写在对应的组件标签上</strong></p></blockquote><h2 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h2><ol><li>默认样式按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>简洁按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span>&gt;</span>朴素按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">plain</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">plain</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">plain</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">plain</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">plain</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>圆角按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">round</span>&gt;</span>圆角按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">round</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">round</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">round</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">round</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">round</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>图标按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-search&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-edit&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-check&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-message&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-delete&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>按钮组件的详细使用<br>一、 按钮组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 按钮属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> 属性名=<span class="string">属性值</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">plain</span>=<span class="string">true</span> <span class="attr">round</span> <span class="attr">circle</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-loading&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>三、 按钮组使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button-group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-back&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-right&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Link-文字链接组件"><a href="#Link-文字链接组件" class="headerlink" title="Link 文字链接组件"></a>Link 文字链接组件</h2></li><li>文字链接组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>文字链接组件的属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>  <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> &gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span><span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">disabled</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-platform-eleme&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="Layout-栅格-布局组件的使用"><a href="#Layout-栅格-布局组件的使用" class="headerlink" title="Layout (栅格)布局组件的使用"></a>Layout (栅格)布局组件的使用</h2><blockquote><p><strong>通过基础的 24 分栏，迅速简便地创建布局<br>在element ui中布局组件将页面划分为多个行row,每行最多分为24栏(列)</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在一个布局组件中 是由 row 和 col 组合而成<br>在使用时要区分 row属性 和 col属性</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性的使用<br>一、 行属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">&quot;50&quot;</span> <span class="attr">tag</span>=<span class="string">&quot;span&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用4份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用3份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;9&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用9份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 列属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;9&quot;</span> <span class="attr">:psuh</span>=<span class="string">&quot;3&quot;</span> <span class="attr">xs</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用12分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用6分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Container-布局容器组件"><a href="#Container-布局容器组件" class="headerlink" title="Container 布局容器组件"></a>Container 布局容器组件</h2></li><li>创建布局容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>容器中包含的子元素<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-header</span>&gt;</span>：顶栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-aside</span>&gt;</span>：侧边栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span>：主要区域容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-footer</span>&gt;</span>：底栏容器。</span><br></pre></td></tr></table></figure></li><li>容器的嵌套使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--容器嵌套使用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>水平容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>垂直容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--footer--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Form相关组件"><a href="#Form相关组件" class="headerlink" title="Form相关组件"></a>Form相关组件</h2><h3 id="Radio单选按钮"><a href="#Radio单选按钮" class="headerlink" title="Radio单选按钮"></a>Radio单选按钮</h3></li><li>创建Radio按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--组件创建--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio按钮属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">disabled</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio事件的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123; <span class="comment">//定义的事件处理函数</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.label);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>事件的使用也是和属性使用是一致都是直接写在对应的组件标签上<br>事件在使用时必须使用Vue中绑定时间方式进行使用如 @事件名&#x3D;事件处理函数(绑在在vue组件中对应函数)</strong></p></blockquote><h3 id="radio按钮组"><a href="#radio按钮组" class="headerlink" title="radio按钮组"></a>radio按钮组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;3&quot;</span>&gt;</span>备选项3<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;6&quot;</span>&gt;</span>备选项6<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;9&quot;</span>&gt;</span>备选项9<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        radio: 6</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="checkbox组件"><a href="#checkbox组件" class="headerlink" title="checkbox组件"></a>checkbox组件</h2></li><li>创建checkbox组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">disabled</span> <span class="attr">true-label</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">checked</span> <span class="attr">border</span> <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span><span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>复选框组的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox-group</span> @<span class="attr">change</span>=<span class="string">&quot;bb&quot;</span> <span class="attr">:min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 A&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 B&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 C&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;选中且禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span>,</span></span><br><span class="line">                checkList:[],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checkList);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Input-输入框组件"><a href="#Input-输入框组件" class="headerlink" title="Input 输入框组件"></a>Input 输入框组件</h2></li><li>创建Input组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>常用属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span> <span class="attr">disabled</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;price&quot;</span> <span class="attr">:maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">show-word-limit</span> <span class="attr">:minlength</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">prefix-icon</span>=<span class="string">&quot;el-icon-user-solid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">suffix-icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">show-password</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> @<span class="attr">blur</span>=<span class="string">&quot;aaa&quot;</span> @<span class="attr">focus</span>=<span class="string">&quot;bbb&quot;</span> @<span class="attr">clear</span>=<span class="string">&quot;clears&quot;</span> <span class="attr">clearable</span> @<span class="attr">input</span>=<span class="string">&quot;ccc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;失去焦点&#x27;</span>);</span></span><br><span class="line">                ;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;获取焦点&quot;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">ccc</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;改变:&quot;</span>+value);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">clears</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;清楚&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>方法的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>方法的使用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;focusInputs&quot;</span>&gt;</span>focus方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;blurInputs&quot;</span>&gt;</span>blur方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//调用focus方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">focusInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.focus();</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">           <span class="comment">//调用失去焦点方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">blurInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.blur();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在使用组件的方法时需要在对应的组件中加入 ref&#x3D;”组件别名”<br>在调用方法时直接使用 this.$refs.组件别名.方法名()</strong></p></blockquote></li></ol><h1 id="elementui-使用注意"><a href="#elementui-使用注意" class="headerlink" title="elementui 使用注意"></a><strong>elementui 使用注意</strong></h1><blockquote><p>**注意:在elementui中所有组件 都存在 属性 事件 和方法<br>属性: 直接写在对应的组件标签上 使用方式:属性名&#x3D;属性值<code>方式 事件</code>: 直接使用vue绑定事件方式写在对应的组件标签上 使用方式:&#96;@事件名&#x3D;vue中事件处理函数<br>方法: 1.在对应组件标签上使用 ref&#x3D;组件别名 2. 通过使用this.$refs.组件别名.方法名()进行调用<br>**</p></blockquote><h1 id="相关链接及原文出处"><a href="#相关链接及原文出处" class="headerlink" title="相关链接及原文出处"></a>相关链接及原文出处</h1><ol><li><a href="https://blog.csdn.net/Stars_in_rain/article/details/122363128">vue3 引入element-ui</a></li><li><a href="https://blog.csdn.net/qq_35254085/article/details/116600164">Element UI组件介绍</a></li><li><a href="https://vuex.vuejs.org/zh/index.html">VUE 官方文档</a></li><li><a href="https://element-plus.org/zh-CN/component/button.html">官方VUE3使用 Element UI</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Element UI </tag>
            
            <tag> el-x </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE问题(一)之spaces and tabs 空格和tab键问题</title>
      <link href="/posts/1689160997.html"/>
      <url>/posts/1689160997.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>新建文章后，复制网上或者原来的代码段过来使用时发现报错 Mixed spaces and tabs no-mixed-spaces-and-tabs</p><blockquote><p><strong>因为大多数代码约定要求使用空格或 tab 进行缩进。因此，一行代码同时混有 tab 缩进和空格缩进，通常是错误的</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>在工程目录下找到 package.json 文件并打开</li><li>在eslintrcr配置项rules里边手动添加规则 ’no-mixed-spaces-and-tabs’并定义为 0(即关闭检查规则)<blockquote><p><strong>“no-mixed-spaces-and-tabs”:0</strong></p><img src="https://img-blog.csdnimg.cn/c6699555819d47cf9a5777137f5a5745.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA56iL5bqP5bCP5pet,size_20,color_FFFFFF,t_70,g_se,x_16"></blockquote></li></ol><p><strong>补充：使用下面的配置可以减少很多语法检查的报错信息，可以配置使用然后重启项目</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&quot;eslintConfig&quot;: &#123;</span><br><span class="line">    &quot;root&quot;: false,</span><br><span class="line">    &quot;env&quot;: &#123;</span><br><span class="line">      &quot;node&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;extends&quot;: [</span><br><span class="line">      &quot;plugin:vue&#x2F;essential&quot;,</span><br><span class="line">      &quot;eslint:recommended&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;parserOptions&quot;: &#123;</span><br><span class="line">      &quot;parser&quot;: &quot;babel-eslint&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;rules&quot;: &#123;</span><br><span class="line">&quot;generator-star-spacing&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-tabs&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-unused-vars&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-console&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-irregular-whitespace&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-debugger&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-mixed-spaces-and-tabs&quot;:0</span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_46167190/article/details/122800825">Vue报错：Mixed spaces and tabs no-mixed-spaces-and-tabs 解决办法</a></li></ol><p>———————————————-<strong>我是分割线</strong>—————————————<br>    <strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> BUG </tag>
            
            <tag> Mixed spaces and tabs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用命令(一)之v-if</title>
      <link href="/posts/289735847.html"/>
      <url>/posts/289735847.html</url>
      
        <content type="html"><![CDATA[<h1 id="v-if指令作用"><a href="#v-if指令作用" class="headerlink" title="v-if指令作用"></a>v-if指令作用</h1><p><strong>根据表达式的真假切换元素的显示状态</strong></p><ol><li>本质是通过操纵dom元素来切换显示状态</li><li>表达式的值为true,元素存在于dom树中，为false,从dom树中移除</li><li>频繁的切换使用v-show,反之使用v-if,前者的切换消耗小<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;切换状态&quot; @click&#x3D;&quot;changeShow&quot;&gt;</span><br><span class="line">&lt;h1 v-show&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h2 v-if&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h3 v-if&#x3D;&quot;temperature&gt;&#x3D;35&quot;&gt;热死了&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"> var app&#x3D;new Vue(&#123;</span><br><span class="line"> el:&quot;#app&quot;,</span><br><span class="line"> data:&#123;</span><br><span class="line"> isshow:false,</span><br><span class="line"> temperature:40</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line"> changeShow:function()&#123;</span><br><span class="line"> this.isshow&#x3D;!this.isshow;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>点击“切换状态”之后：<img src="https://img-blog.csdnimg.cn/20200803101013231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4ODM1MTQw,size_16,color_FFFFFF,t_70"></li></ol><h1 id="v-if常见使用方法详解"><a href="#v-if常见使用方法详解" class="headerlink" title="v-if常见使用方法详解"></a>v-if常见使用方法详解</h1><p>v-if一般有两个场景：<br>1- 多个元素 通过条件判断展示或者隐藏某个元素。或者多个元素<br>2- 进行两个视图之间的切换<br>Vue官方的简单实例:</p><ol><li>实现了 type等于不同值，A，B，C 三个元素的展示情况</li><li>实现了点击按钮两个视图的切换<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line"> &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line"> &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line"> &lt;title&gt;Vue中v-if的常见使用&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.5.17-beta.0&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F;创建一个vue实例</span><br><span class="line"> var app &#x3D; new Vue(&#123;</span><br><span class="line"> el: &#39;#app&#39;,</span><br><span class="line"> data: &#123;</span><br><span class="line">  type:&#39;C&#39;,</span><br><span class="line">  loginType:&#39;username&#39;</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line">  changeloginType()&#123;</span><br><span class="line">  let self &#x3D; this;</span><br><span class="line">  if(self.loginType&#x3D;&#x3D;&#39;username&#39;)&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;&#39;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;username&#39;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:red&quot;&gt;v-if的简单实用&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template&gt;</span><br><span class="line">  &lt;div v-if&#x3D;&quot;type &#x3D;&#x3D; &#39;A&#39;&quot;&gt;</span><br><span class="line">  A</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else-if&#x3D;&quot;type&#x3D;&#x3D;&#39;B&#39;&quot;&gt;</span><br><span class="line">  B</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else&gt;</span><br><span class="line">  C</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:green&quot;&gt;v-if的弹框切换&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template v-if&#x3D;&quot;loginType &#x3D;&#x3D;&#x3D; &#39;username&#39;&quot;&gt;</span><br><span class="line">  &lt;label&gt;用户名：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your username&quot; key&#x3D;&quot;username-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;template v-else&gt;</span><br><span class="line">  &lt;label&gt;密码：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your email address&quot; key&#x3D;&quot;email-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;button @click&#x3D;&quot;changeloginType&quot;&gt;切换状态&lt;&#x2F;button&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>效果图:<img src="https://img.jbzj.com/file_images/article/201809/20180928154104.jpg"><img src="https://img.jbzj.com/file_images/article/201809/20180928154117.jpg"></li></ol><h1 id="通过-v-if-来判断数组是否为空"><a href="#通过-v-if-来判断数组是否为空" class="headerlink" title="通过 v-if 来判断数组是否为空"></a>通过 v-if 来判断数组是否为空</h1><blockquote><p><strong>此方法已经在处理PHP回传 JSON 数据时，对键名解析使用成功</strong></p></blockquote><p>语法为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为空：array &#x3D;&#x3D; undefined ||array &#x3D;&#x3D; null || array.length &lt;&#x3D; 0     (顺序不能调换)</span><br><span class="line">不为空： array !&#x3D;&#x3D;undefined &amp;&amp; array !&#x3D; null  &amp;&amp; array.length &gt; 0   (顺序不能调换)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul v-if&#x3D;&quot;commentList &#x3D;&#x3D; undefined ||commentList &#x3D;&#x3D; null || commentList.length &lt;&#x3D; 0 &quot; &gt;</span><br><span class="line">暂无评论！</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul v-if&#x3D;&quot;commentList !&#x3D; undefined &amp;&amp; commentList !&#x3D; null &amp;&amp; commentList.length &gt; 0 &quot; &gt;</span><br><span class="line">&lt;li class&#x3D;&quot;list-group-item&quot;  v-for&#x3D;&quot;(item,index) in commentList&quot;  &gt;</span><br><span class="line">&lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">&#123;&#123; item.username &#125;&#125; 说：</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;content&quot; &gt;</span><br><span class="line">&#123;&#123; item.content &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_38835140/article/details/107757104">v-if指令</a></li><li><a href="https://www.jb51.net/article/148174.htm">对vue中v-if的常见使用方法详解</a></li><li><a href="https://blog.csdn.net/xiaojin21cen/article/details/118605410">VUE 模板 v-if 判断 数组是否为空</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> v-if </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE获取JSON数据键名</title>
      <link href="/posts/30846541.html"/>
      <url>/posts/30846541.html</url>
      
        <content type="html"><![CDATA[<h1 id="从PHP传过来的JSON数据结构"><a href="#从PHP传过来的JSON数据结构" class="headerlink" title="从PHP传过来的JSON数据结构"></a>从PHP传过来的JSON数据结构</h1><p>VUE接收到的数据如下，此时想要得到键名 <strong>“password”</strong> 和 <strong>“zhaoyichen”</strong> 以及 <strong>“liangzai”</strong> 用来做表格的列名。</p><blockquote><p>网上找很多都没找到合适</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;111&quot;,</span><br><span class="line">zhaoyichen: &quot;333&quot;,</span><br><span class="line">liangzai: &quot;22&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;55&quot;,</span><br><span class="line">zhaoyichen: &quot;66&quot;,</span><br><span class="line">liangzai: &quot;33&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;888&quot;,</span><br><span class="line">zhaoyichen: &quot;3443&quot;,</span><br><span class="line">liangzai: &quot;9088&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;8889&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;66677&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>正常直接 console.log 出来的是里面的数组值</p></blockquote><h1 id="使用-Object-keys-将键值提取出来"><a href="#使用-Object-keys-将键值提取出来" class="headerlink" title="使用 Object.keys 将键值提取出来"></a>使用 Object.keys 将键值提取出来</h1><p>假如改 JSON 数据名为 sites，则 使用 Object.keys(this.sites[0]) 即可读出所有键名</p><blockquote><p>需单独某一个键名，则增加标号即可  Object.keys(this.sites[0])[0]</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(<span class="built_in">this</span>.sites[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure><blockquote><p><strong>也可以在HTML中显示</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> </span><br><span class="line">&#123;&#123;Object.keys(this.sites[0])[0]&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/142380.htm">Vue 获取数组键名的方法</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> JSON </tag>
            
            <tag> 键值 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE判断对象是否为空</title>
      <link href="/posts/637024282.html"/>
      <url>/posts/637024282.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>vue.js判断对象是否为空的方法是：将对象转为json，如果为空集合{}，那么该对象就是空对象，如【JSON.stringify(object)&#x3D;&#x3D;’{}’】</p></blockquote><h1 id="判断法一"><a href="#判断法一" class="headerlink" title="判断法一"></a>判断法一</h1><p><strong>将对象转JSON，如果为空集合{} ，那么就是空对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(object)==<span class="string">&#x27;&#123;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="判断法二"><a href="#判断法二" class="headerlink" title="判断法二"></a>判断法二</h1><p><strong>判断对象的长度，如果为零，那就是空对象</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.keys(object).length==<span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.php.cn/vuejs/463861.html">vue.js判断对象是否为空的方法是什么</a></li></ol><hr><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php连接mysql数据库</title>
      <link href="/posts/3217038819.html"/>
      <url>/posts/3217038819.html</url>
      
        <content type="html"><![CDATA[<h1 id="按照-apache-php安装相关-进行安装"><a href="#按照-apache-php安装相关-进行安装" class="headerlink" title="按照[apache php安装相关]进行安装"></a>按照[apache php安装相关]进行安装</h1><p>安装好 apache 和 PHP之后再对 mysql 进行连接读取，确定PHP是否弄好的标志是可以在设定文档下运行 php 文件。<br><a href="http://localhost/myBlog/axios.php">运行本地服务器测试</a><br>刚开始按照网上连接时总报错，总提示找不到 mysqli 插件</p><blockquote><p>Class “mysqli” not found in</p></blockquote><h1 id="解决问题并连接MySql数据库"><a href="#解决问题并连接MySql数据库" class="headerlink" title="解决问题并连接MySql数据库"></a>解决问题并连接MySql数据库</h1><p>根据官网提供的方法<a href="https://www.php.net/manual/zh/mysqli.installation.php">安装配置MySql</a><br>不过因为使用的版本是 PHP8 ，因此不用大改，实际上只需要在 php.ini 文件上打开 extension&#x3D;mysqli 即可！</p><blockquote><p><strong>注意:修改完之后需要重新启动 apache 服务，要不然没作用！！总以为没修改对</strong></p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop Apache2.<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> Apache2.<span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="设置-MySql-连接数据"><a href="#设置-MySql-连接数据" class="headerlink" title="设置 MySql 连接数据"></a>设置 MySql 连接数据</h1><blockquote><p>设置对应的地址和账号密码即可连接:</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$mysqli</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;密码&quot;</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM tb_user&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$mysqli</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc(); <span class="comment">// 从结果集中取得一行作为关联数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* free result set */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span>-&gt;free();</span><br><span class="line">    <span class="comment">/* close connection */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$mysqli</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> apache </tag>
            
            <tag> php </tag>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apache php 安装相关</title>
      <link href="/posts/3845172909.html"/>
      <url>/posts/3845172909.html</url>
      
        <content type="html"><![CDATA[<h1 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h1><p><strong>注：本文从[Apache的安装教程]直接复制以便查看，如有侵权请联系删除</strong><br>1、<a href="https://www.apachehaus.com/cgi-bin/download.plx">下载Apache</a><br>点击图中红圈的版本下载：<br><img src="https://img-blog.csdnimg.cn/20190519215843978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><p>下载后，解压文件，把如图这两个文件拿出来放到你的Apache目录下<br><img src="https://img-blog.csdnimg.cn/20190519220058367.png"><br>例如：我的放到D盘,如图:<br><img src="https://img-blog.csdnimg.cn/20190519220202943.png"></p><p>2、修改 httpd.conf 文件<br>在文件夹中查找conf文件夹下边的httpd.conf文件，修改文件为自己的路径(写你自己的路径)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># same ServerRoot for multiple httpd daemons, you will need to change at</span></span><br><span class="line"><span class="comment"># least PidFile.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">Define SRVROOT &quot;D:/Program Files/Apache/Apache24&quot;</span><br><span class="line">ServerRoot &quot;$&#123;SRVROOT&#125;&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>注：还是在此文件中下边，有一个端口号配置：Listen 80 ，如果你的80端口被已经被占用，你自己修改一个没有用的端口号！！！！！</strong></p><p>然后，在你的文件中 bin目录下，用【管理员】身份打开 CMD，输入httpd.exe -k install，如图我的例子：<br><img src="https://img-blog.csdnimg.cn/20190519221143962.png"><br>到这里下载成功了！！</p><p>3、启动Apache服务<br>继续输入命令：net start Apache2.4 ，成功后在页面输入：localhost:你刚写的端口号 就会成功出现如下所示：(还有一种启动方法)<br><img src="https://img-blog.csdnimg.cn/20190519221410964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"><br>第二种启动方法：<br>右键此电脑 -&gt; 管理 ， 然后启动如图所圈的：<br><img src="https://img-blog.csdnimg.cn/20190519221801153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><h1 id="PHP8安装和配置"><a href="#PHP8安装和配置" class="headerlink" title="PHP8安装和配置"></a>PHP8安装和配置</h1><ol><li>官网下载apache24和php8（要线程安全的那个，不然没有.dll文件）</li><li>php8安装完毕后打开安装文件中的php.ini-development改名为php.ini，然后打开这个文件找到 extension_dir&#x3D;“ext”，去掉注释分号，改为extension_dir &#x3D; “D:&#x2F;software&#x2F;php8&#x2F;ext” (php的安装路径&#x2F;ext)</li><li>打开apache的安装路径找到》config》httpd.conf,搜索LoadModule找到这个文中添加模块的区域，在后面追加：这一步是将php加到apache中<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#让Apache载入PHP处理模块</span></span><br><span class="line"><span class="comment">#php安装路径/php8apache2_4.dll</span></span><br><span class="line">LoadModule php_module &quot;D:/Program Files/php8/php8apache2_4.dll&quot; </span><br><span class="line"><span class="comment">#php安装路径</span></span><br><span class="line">PHPIniDir &quot;D:/Program Files/php8&quot;  </span><br><span class="line"><span class="comment">#这个配置表示所有的*.php文件使用php处理</span></span><br><span class="line">AddType application/x-httpd-php .php .phtml</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>添加虚拟目录：<br>还在httpd.conf文件后面加上：<br>先注释掉原来的路径#DocumentRoot “${SRVROOT}&#x2F;htdocs”<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">    DirectoryIndex index.php index.html index.htm default.php default.html default.htm home.php home.html home.htm</span><br><span class="line"><span class="comment">#D:/PHP是自己以后放php项目的地方  并取一个别名</span></span><br><span class="line">Alias /difcipo &quot;D:/Cache/PHP&quot;  </span><br><span class="line">DocumentRoot &quot;D:/Cache/PHP&quot;</span><br><span class="line">&lt;Directory &quot;D:/Cache/PHP&quot;&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride all</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>配置虚拟主机：<br>打开》conf》extra》httpd-vhosts.conf，在文件后面添加<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"><span class="comment">#这个需要和前面的DocumentRoot一致</span></span><br><span class="line">    DocumentRoot &quot;D:/Cache/PHP&quot;  </span><br><span class="line"><span class="comment">#虚拟主机名</span></span><br><span class="line">    ServerName www.abc.com  </span><br><span class="line">    ErrorLog &quot;logs/www.age.com-error.log&quot;</span><br><span class="line">    CustomLog &quot;logs/www.age.com-access.log&quot; common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>打开C:\Windows\System32\drivers\etc\hosts文件(修改HOST文件)，在后面添加 127.0.0.1 <a href="http://www.abc.com/">www.abc.com</a> 配置完毕！启动apache。<img src="https://img-blog.csdnimg.cn/20210114185127506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE4ODY3Nw==,size_16,color_FFFFFF,t_70"></li><li>测试<img src="https://img-blog.csdnimg.cn/20210114185051491.png"></li></ol><p><strong>注：本文从[apache24+php8配置]直接复制以便查看，如有侵权请联系删除</strong></p><h1 id="安装PHP发现的问题"><a href="#安装PHP发现的问题" class="headerlink" title="安装PHP发现的问题"></a>安装PHP发现的问题</h1><p>原参考文章中发现有导入模块错误，主要原因是注释和代码放在了同一行，放到另一行即可</p><p><strong>bin下使用命令 httpd.exe -t 查找问题 例如: D:\Program Files\Apache\Apache24\bin\httpd.exe -t</strong></p><h1 id="安装问题查找方式"><a href="#安装问题查找方式" class="headerlink" title="安装问题查找方式"></a>安装问题查找方式</h1><blockquote><p>apache php无法启动的解决办法：1、使用Apache的配置检查，并根据错误提示，纠正错误；2、注销IIS服务；3、使用命令杀掉强占80端口的进程；4、修改PHP配置php.ini文件。</p></blockquote><p>Apache&#x2F;PHP 无法启动分两种情况：<br>1、Apache无法启动，没加载php也无法启动<br>2、Apache可以启动，但加载php后无法启动<br>第一种情况多数是Apache配置问题，或者80端口被占用<br>第二种多数是PHP编译器的问题：<br>查看Apache错误日志，有类似下面这些内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd.exe: Syntax error on line 63 of D:/Apache2.2/conf/httpd.conf: Cannot load D:/php/php5apache2_4.dll into server: %1 \xb2\xbb\xca\xc7\xd3\xd0\xd0\xa7\xb5\xc4 Win32 \xd3\xa6\xd3\xc3\xb3\xcc\xd0\xf2\xa1\xa3</span><br></pre></td></tr></table></figure><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/sxs7970/article/details/90349009">Apache的安装教程</a><br>2.<a href="https://blog.csdn.net/weixin_42188677/article/details/112610016">apache24+php8配置</a><br>3.<a href="https://www.php.cn/php-ask-462557.html">apache php无法启动的解决办法</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> PHP </category>
          
          <category> Apache </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> 软件安装 </tag>
            
            <tag> apache </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VUE常用基础收集</title>
      <link href="/posts/4001256595.html"/>
      <url>/posts/4001256595.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h1 id="常用知识"><a href="#常用知识" class="headerlink" title="常用知识"></a>常用知识</h1><h2 id="Vue-UI创建项目详细步骤"><a href="#Vue-UI创建项目详细步骤" class="headerlink" title="Vue UI创建项目详细步骤"></a><a href="https://www.jb51.net/article/234189.htm">Vue UI创建项目详细步骤</a></h2><p>1.首先要安装最新的Vue CLI<br>在命令行工具里输入一下命令<br>npm install -g @vue&#x2F;cli<br>或者<br>yarn global add @vue&#x2F;cli<br>安装成功后，可用vue -V命令查看已安装的Vue CLI版本<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073438.png"><br>2.在命令行运行 vue ui，就会出现图形化管理<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073439.png"><br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073440.png"><br>在界面上可以看到第一个tab项目，点击创建这个tab ，可以来创建一个新的vue项目<br>3.点击了创建之后可以看到一下内容，可以项目创建一个目录或者选择一个目录，然后选择一种包管理工具：可以使npm，也可以是yarn等<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073541.png"><br>4.点击下一步后，出现预设插件和配置的界面，按照自己的需求选择就可以，此处选择了默认的。<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073542.png"><br>5.点击创建项目后<br>已安装的插件，也可以在右上角点击添加插件安装想要的插件。<br>添加插件页面，也得要点击右下角的安装~<br>再返回到插件就会看到刚才安装的插件了，如下所示：<br>6.最后我们来看下 通过vue ui生成的项目结构<br>运行一下项目，npm run serve</p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><p>1.<a href="https://blog.csdn.net/jayLog/article/details/122743727">vue常用指令</a><br>vue常用指令有：v-once指令、v-show指令、v-if指令、v-else指令、v-else-if指令、v-for指令、v-html指令、v-text指令、v-bind指令、v-on指令、v-model指令等等。</p><h1 id="其他链接"><a href="#其他链接" class="headerlink" title="其他链接"></a>其他链接</h1>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> VUE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> VUE </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML网页怎么连接到数据库</title>
      <link href="/posts/2729451999.html"/>
      <url>/posts/2729451999.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><h2 id="HTML不能直接读取数据库"><a href="#HTML不能直接读取数据库" class="headerlink" title="HTML不能直接读取数据库"></a>HTML不能直接读取数据库</h2><p>HTML是无法读取数据库的，HTML是页面前端脚本语言，要想从HTML网页中获取SQL数据库里的数据，需要借助JSP或ASP或PHP或RUBY等语言来实现。 简单的关系可以这样理解： 数据库&lt;—&gt;JSP或ASP或PHP或RUBY等语言&lt;—&gt;HTML<br><img src="https://img.gxlcms.com//Uploads-s/new/2019-09-30-201930/5cd67223da8dd675.jpg"></p><p>网页链接数据库代码如下（PHP编写）：</p><?phpheader('content-type:text/html;charset=gb2312;');//解决浏览器编码问题$lnk = mysql_connect('localhost', 'root', '********') or die ('连接失败 : ' . mysql_error());//密码填的是连接数据库的密码mysql_query("set names gb2312");//这就是指定数据库字符集//选择当前连接数据库为studentmysql_select_db('book', $lnk);//获取查询项和查询关键字的值$searchitem=$_POST['searchitem'];$searchvalue=$_POST['searchvalue'];/*定义查询语句，如果查询关键字的值不为空，则在SQL语句的Where子句中指定查询项模糊匹配关键字，否则查询所有记录*/if($searchvalue!="")   $myquery="SELECT * from books where {$searchitem} like '%{$searchvalue}%'";  else  $myquery="SELECT * from books";   //执行查询，生成结果集$result = mysql_query($myquery)or die("<br>查询表books失败: " . mysql_error());//从结果集中取得一行作为关联数组$row=mysql_fetch_array($result);//循环读取每一行记录while ($row){}?><h2 id="HTML-前端怎么连接数据库？"><a href="#HTML-前端怎么连接数据库？" class="headerlink" title="HTML 前端怎么连接数据库？"></a>HTML 前端怎么连接数据库？</h2><p>HTML前端不能连接数据库，如果需要和数据库进行交互，就需要server端技术，可以选择JSP、PHP、ASP.NET等，这些技术可以实现在前台调用后端数据库，也可使用AJAX进行前后端交互。</p><h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><p>JSP（全称JavaServer Pages）是由Sun Microsystems公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、XML或其他格式文档的Web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的HTTP请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。</p><p>JSP将Java代码和特定变动内容嵌入到静态的页面中，实现以静态页面为模板，动态生成其中的部分内容。JSP引入了被称为“JSP动作”的XML标签，用来调用内建功能。另外，可以创建JSP标签库，然后像使用标准HTML或XML标签一样使用它们。标签库能增强功能和服务器性能，而且不受跨平台问题的限制。JSP文件在运行时会被其编译器转换成更原始的Servlet代码。JSP编译器可以把JSP文件编译成用Java代码写的Servlet，然后再由Java编译器来编译成能快速执行的二进制机器码，也可以直接编译成二进制码。</p><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>PHP原始为Personal Home Page的缩写，已经正式更名为 “PHP: Hypertext Preprocessor”。自20世纪90年代国内互联网开始发展到现在，互联网信息几乎覆盖了我们日常活动所有知识范畴，并逐渐成为我们生活、学习、工作中必不可少的一部分。据统计，从2003 年开始，我国的网页规模基本保持了翻番的增长速度，并且呈上升趋势。PHP 语言作为当今最热门的网站程序开发语言，它具有成本低、速度快、可移植性好、 内置丰富的函数库等优点，因此被越来越多的企业应用于网站开发中。但随着互联网的不断更新换代，PHP语言也出现了不少问题。</p><p>根据动态网站要求，PHP语言作为一种语言程序，其专用性逐渐在应用过程中显现，其技术水平的优劣与否将直接影响网站的运行效率。其特点是具有公开的源代码， 在程序设计上与通用型语言，如C语言相似性较高，因此在操作过程中简单易懂，可操作性强。同时，PHP语言具有较高的数据传送处理水平和输出水平，可以广泛应用在Windows系统及各类Web服务器中。如果数据量较大，PHP语言还可以拓宽链接面，与各种数据库相连，缓解数据存储、检索及维护压力。随着技术的发展，PHP 语言搜索引擎还可以量体裁衣，实行个性化服务，如根据客户的喜好进行分类收集储存，极大提高了数据运行效率。</p><h3 id="ASP-NET"><a href="#ASP-NET" class="headerlink" title="ASP.NET"></a>ASP.NET</h3><p>ASP.NET又称为ASP+，不仅仅是ASP的简单升级，而是微软公司推出的新一代脚本语言。ASP.NET基于.NET Framework的Web开发平台，不但吸收了ASP以前版本的最大优点并参照Java、VB语言的开发优势加入了许多新的特色，同时也修正了以前的ASP版本的运行错误。</p><p>ASP.NET具备开发网站应用程序的一切解决方案，包括验证、缓存、状态管理、调试和部署等全部功能。在代码撰写方面特色是将页面逻辑和业务逻辑分开，它分离程序代码与显示的内容，让丰富多彩的网页更容易撰写。同时使程序代码看起来更洁净、更简单。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://www.gxlcms.com/mysql-337548.html">HTML网页怎么连接到数据库？</a><br>2.<a href="https://m.php.cn/article/452911.html">HTML 前端怎么连接数据库？</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页 </tag>
            
            <tag> mysql </tag>
            
            <tag> HTML </tag>
            
            <tag> 文章收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5分钟商学院-基础之目录</title>
      <link href="/posts/3753918527.html"/>
      <url>/posts/3753918527.html</url>
      
        <content type="html"><![CDATA[<p>作者：匿名用户<br>链接：<a href="https://www.zhihu.com/question/64174568/answer/1001925349">https://www.zhihu.com/question/64174568/answer/1001925349</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>对不住了，润总~</p><p>首先，来盘点一下，我“追星”花了多少钱。《5分钟商学院基础篇》：199元《实战篇》：199元2018年线下大课4节课通课：10000元往返四个城市飞机片加住宿：3000*4&#x3D;120000元课后见面私董会：10000元刘润推荐买BOSE降噪耳机：2800元刘润推荐买蓝牙手环：600元刘润全套书：大约300元大约花了36000元，当然买东西那个也不是别人强推给我的，只是我相信他说的，买了。所以，我比大部分人有机会评论刘润。首先阐明，我是粉转黑，你们也可以感受一下我的感受。</p><p>刘润是在得到上“发家”的，开了两门年课，大概就是把一本专业书的概念，浓缩成几千字的音频，然后讲出来。<br>当初，冲着《商学院》几个字就去了。这么神圣的商学院，居然能在这儿开课，不得了不得了，加上罗胖一包装，一忽悠，花了199就买了。<br>抓起来听了几课，我艹，不得了，这人简直是商业史上的奇才。我要向他学习，我要追星，我要学到真东西。加之马上开展了线下大课的售卖，我咬咬牙，花了30分钟，就决定了2万块的消费——全年4堂大课+私下见面会。</p><p>追了一圈下来，后悔不已啊！</p><p>接下来就详细说说，我对这个人怎么看。</p><p>先评优点：<br>刘润这个人我认真观察了两年多，从朋友圈、媒体、得到、微博、知识星球等等，我能判断的优点是：<br>1.演讲技巧好<br>2.逻辑思维能力<br>3.深入浅出的叙述能力<br>4.日更公号的勤奋<br>5.社交场上一枝花<br>6.对儿子上心</p><p>好优点说完了，说说缺点。先简述问题，后面慢慢铺开。</p><p>一、做人不谦虚，架子大。</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。</p><p>三、实操匮乏，三句不离微软。从数学系毕业，微软工作几年，就出来做互联网转型专家？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>一、做人不谦虚，架子大。<br>我在花了一万块以后在私董会上面跟刘润见面了。一桌共有10个同学，每人一万，每人五分钟提问，刘润解答。<br>流程是这样，刘润讲完课，由工作人员把私董会成员安排到酒店餐厅的包间集合。所有人到后，刘润开始吃饭。边吃边听，其他同学挨个发言。<br>听完十个同学的问题，我觉得都是比较当务之急，需要深思熟虑解决的。但是，刘润却在几分钟之内就能下判断和诊断。姑且不是结局如何，这种关系每个企业和公司的大事，几分钟就敢给结论？这是极不负责任的表现。<br>对于企业或者是个人，所有的决策，不根据数据、调查得出解决，万一直觉误导了别人，这就不是一万块的买卖了。<br>所以，这个所谓的私董会，就是割韭菜专用的。45分钟，解决了十个同学的问题。厉害吗？<br><img src="https://pic2.zhimg.com/50/v2-7c5a7a969609e8ea8098e7b21a9a3a46_720w.jpg?source=1940ef5c" data-caption data-size="small" data-rawwidth="1080" data-rawheight="2160" class="origin_image zh-lightbox-thumb" width="1080" data-original="https://pic1.zhimg.com/v2-7c5a7a969609e8ea8098e7b21a9a3a46_r.jpg?source=1940ef5c"><br>这是卖家秀，麻烦得到，下次也备注清楚，只有5分钟！跟课程是一样长！<br>第二件事，就是关于张艺兴的视频。他对张艺兴说：“我听说你是我的粉丝”，“让你可以自豪的说出，你喜欢的人是刘润。”<br>我没有看出来什么叫谦虚，什么叫低调，什么叫为人师表。我知道看到了卖课，打广告，借题抬高自己。你们感受一下。<br>向隔壁何帆老师学习吧，“凡是叫人谦虚的学问都是好学问”，“有一天你取得了成就，我会搬个小板凳，做在你面前，认真听你教我。”</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。<br>我几乎看了刘润的每一篇公众号，也听过线下课程，线上课程，甚至朋友圈。至今为止，我没有看到过刘润发布相关的战略研究案例，或者企业咨询得出的结果等等。<br>与之对比的是华与华。华杉也是做咨询的，但是别人的咨询跟刘润的咨询差别有点大。如果你细看华杉的公众号，你会发现，没有那么多扯淡的话，几乎是干货，叫你怎么做，怎么包装，怎么定位，怎么设计，怎么卖！并且还总结出一套非常完善、且能上手的实用方法论。</p><p>这难道不是做企业咨询应该做的事情吗？那么，我斗胆请问刘润老师，做咨询这么久，能否分享一些你做过咨询的成功案例？或者一些实用的方法论？当然，可以用保密协议say NO。</p><p>按照回答张艺兴的路数，应该是知无不言、知无不尽，在这里，我仿佛感觉润总有点词穷。</p><p>三、实操匮乏，三句不离微软。</p><p>从数学系毕业，微软工作几年，就出来做互联网转型专家？微软，这这辈子没有听过这么多次微软。从内部体系，到微软怎么招人，在知乎回答、微博、朋友圈，真的是一直不停的说。我深知你对微软的感情，但是，也暴露了另外一点。就是，你知道的，就一定会说出来。</p><p>刘润是数学系毕业，按照我的记忆，在大课上讲过，毕业后，刚刚参加工作，就跑去微软面试，没想到进了。在微软担任到某分公司的总经理？在微软过后，就创办润米咨询，也就是2013年。我注意观察到，最近几乎所有平台关于刘润的学习，都加上了复旦大学MBA。这事儿也挺蹊跷，大概率是成人MBA。但从近几年的资料看，刘润没有关于任何在复旦大学的线索。（仅为猜忌，肯定不敢学他的曾经的boss）</p><p>那么，从微软出来，就开了咨询公司，为何就成了互联网转型专家？其实我挺纳闷的。当时的微软跟互联网的关系其实也挺浅的，这是众所周知的。</p><p>那么，是否有成功转型的企业呢？是如何转型的呢？又提供了多大的帮助呢？这个“专家”二字是谁说的呢？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>如果各位有机会关注刘润的公众号，大概得到的就是这种句式：企业遇到财务危机怎么办？那我们先来说说，什么是财务危机。 财务危机又分为XX、XX…..</p><p>这样的句式充满整个公众号。你看来看去，是找不到毛病，确实也没说错。然后，发现对你基本没有帮助。用网友的话，叫做正确的废话。</p><p>就拿这篇财务危机的公众号来看，他说有六个办法能够帮助企业获得现金流。哇哦，让我虎躯一震。</p><p>看完全篇，总结了六点：<br>1.找股东借、2.清库存、3.要预付款、4.收应收款、5.延期支付应付款、6.减成本。<br>哎，你说，这个话有问题吗？并没有。有意义吗？哎~ 建议别跟Spencer学，都学坏了，日更一篇，都是些水货。</p><p>关于护城河啊之类的理论，这都不知道说了多少次了。记得“得到”上有怎么办问题，回答的就是护城河理论，答非所问。我刚刚看，罗胖都把首页的这条推荐删了。</p><p>说这么多，我只想真实表达我的感受，也确实把我憋坏了。因为我曾经太信任，刘润对我们却视为韭菜，我惋惜我的两万块钱。</p><p>我记得刘润课上说过一话：“今天对我爱理不理，明天让你高攀不起。” 如果你能看到，这句话，我回送给你。当做我一个梦想吧！哈哈哈哈哈哈</p><p>发布于 2020-02-06 21:24</p>]]></content>
      
      
      <categories>
          
          <category> 商业类 </category>
          
          <category> 刘润 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商业 </tag>
            
            <tag> 5分钟商学院 </tag>
            
            <tag> 目录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序(一)之UDP通信</title>
      <link href="/posts/2604964553.html"/>
      <url>/posts/2604964553.html</url>
      
        <content type="html"><![CDATA[<p>前期知识:<a href="https://zml3589110.github.io/posts/497460256.html">网络七层协议(OSI)基础知识</a></p><h1 id="文章代码参考"><a href="#文章代码参考" class="headerlink" title="文章代码参考"></a>文章代码参考</h1><h2 id="微信小程序UDP通信"><a href="#微信小程序UDP通信" class="headerlink" title="微信小程序UDP通信"></a>微信小程序UDP通信</h2><blockquote><p>微信小程序UDP通信及编码转换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Encoder  <span class="keyword">from</span> <span class="string">&#x27;../../util/Encoder.js&#x27;</span></span><br><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"><span class="built_in">this</span>.udp.bind(<span class="number">60000</span>) <span class="comment">//udp绑定本机</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">//连接目标</span></span><br><span class="line"><span class="function"><span class="title">linkUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp.connect(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//发送信息</span></span><br><span class="line"><span class="function"><span class="title">clickUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//utf-8转gbk编码</span></span><br><span class="line"><span class="keyword">var</span> gbkArray = Encoder.hexstrToArray(Encoder.stringToGbkHexstr(<span class="string">&#x27;123哈&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;gbkArray&gt;&gt;&quot;</span> , gbkArray)</span><br><span class="line"><span class="keyword">let</span> gbk = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>()</span><br><span class="line"><span class="built_in">console</span>.log(gbk)</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.write(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">message: gbk</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//监听接收到的数据</span></span><br><span class="line">onUdpMessage: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;收到的信息&#x27;</span>, res);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;onUdpMessage() 接收数据 &#x27;</span> + res.remoteInfo.size + <span class="string">&#x27; 字节：&#x27;</span> + <span class="built_in">JSON</span>.stringify(res, <span class="literal">null</span>, <span class="string">&#x27;\t&#x27;</span>));</span><br><span class="line"><span class="comment">// gbk转utf-8</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(res.message);</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> TextDecoder(<span class="string">&#x27;gbk&#x27;</span>).decode(x);</span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//监听收到的数据</span></span><br><span class="line"><span class="built_in">this</span>.udp.onMessage(<span class="built_in">this</span>.onUdpMessage)</span><br><span class="line"><span class="comment">//监听错误的信息</span></span><br><span class="line"><span class="built_in">this</span>.udp.onError(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"><a href="#关于微信小程序使用UDP实现局域网通讯及UDP模块的封装" class="headerlink" title="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"></a>关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</h2><blockquote><p>封装模块</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPSocket</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection = &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 创建一个UDP实例</span></span><br><span class="line">  <span class="function"><span class="title">establish</span>(<span class="params">monitor</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(monitor);</span><br><span class="line">    <span class="built_in">this</span>.connection = wx.createUDPSocket();</span><br><span class="line">    <span class="comment">// 绑定指定端口</span></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.connection.bind(monitor)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;连接成功&#x27;</span> + port + <span class="string">&#x27;端口&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 监听端口函数</span></span><br><span class="line">  <span class="function"><span class="title">onListening</span>(<span class="params">success, failure, open, cmd, mac</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 开启监听</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onListening(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      open(res)</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 监听回调函数</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onMessage(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下为我对数据的处理，使用到了我的一个tool.js,里面包含了对字节数组的处理</span></span><br><span class="line"><span class="comment">//需要的可以到我的个人博客获取www.meinaodai.top</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 做空包筛查</span></span><br><span class="line">      <span class="keyword">if</span> (res.message) &#123;</span><br><span class="line">        <span class="keyword">var</span> packet = tool.analysis(res.message)</span><br><span class="line">        <span class="comment">// 做数据空包处理</span></span><br><span class="line">        <span class="keyword">if</span> (packet) &#123;</span><br><span class="line">          <span class="comment">// 做数据筛查</span></span><br><span class="line">          <span class="comment">// console.log(tool.Screening(packet, cmd, mac));</span></span><br><span class="line">          success(tool.Screening(packet, cmd, mac))</span><br><span class="line">          <span class="built_in">console</span>.log(packet);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;------------------------&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// debug</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onError(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      failure(err)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 发送消息</span></span><br><span class="line">  <span class="function"><span class="title">send</span>(<span class="params">message</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.send(&#123;</span><br><span class="line">      address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">      port: <span class="number">20015</span>,</span><br><span class="line">      message</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 关闭搜索事件</span></span><br><span class="line">  <span class="function"><span class="title">UDPclose</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.close()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;UDP关闭&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模块引用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UDP = <span class="built_in">require</span>(<span class="string">&quot;./UDP.js&quot;</span>)   </span><br><span class="line">   <span class="comment">// UDP实例创建</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket = <span class="keyword">new</span> UDP.UDPSocket();</span><br><span class="line">    <span class="comment">// 连接端口</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.establish(<span class="number">20016</span>)</span><br><span class="line">    <span class="comment">// 请求设备上报状态</span></span><br><span class="line">    <span class="built_in">this</span>.udpsend()</span><br><span class="line">    <span class="comment">// 开始监听</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.onListening(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// debug</span></span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;, <span class="function"><span class="params">open</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(open);</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">//这两个参数为筛查条件，用于过滤无用或者不合法的信息，不需要的可传空值</span></span><br><span class="line">    <span class="string">&#x27;&#x27;</span>, getApp().globalData.item.mac)</span><br></pre></td></tr></table></figure><h1 id="实际工程测试"><a href="#实际工程测试" class="headerlink" title="实际工程测试"></a>实际工程测试</h1><p>先按照第一篇写时发现找不到 connect 函数，是因为变量问题！修改为全局变量后可以通过 connect 连接端口，但又缺失 hexstrToArray 函数，就没再继续下去。<br>后来找到第二篇参考，并根据参考写相应UDP函数，引用中 getApp().globalData.item.mac 和 tool.analysis(res.message) 均不存在，屏蔽即可，数据能正常收发。<br>再重新分析参考程序，并从官方文档中了解相应函数作用，最后基本按照官方文档提供的几个函数即可完成功能。</p><h2 id="在页面初始中建立实例并绑定端口"><a href="#在页面初始中建立实例并绑定端口" class="headerlink" title="在页面初始中建立实例并绑定端口"></a>在页面初始中建立实例并绑定端口</h2><blockquote><p>也可以使用 connect 模式，使用 bind 可以返回绑定端口<br>使用 onListening 打开监听功能，并通过 onMessage 设置监听数据回调函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.udp.bind(<span class="number">60000</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;端口&#x27;</span> + port + <span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.udp.onListening(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.udp.onMessage(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="设置数据发送"><a href="#设置数据发送" class="headerlink" title="设置数据发送"></a>设置数据发送</h2><blockquote><p>发送数据直接使用 send 函数即可，使用 255.255.255.255 是广播模式<br>即向局域网中所有端口 60000 均发送数据</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">BtnTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;这是一个测试按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.send(&#123;</span><br><span class="line">  address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">  port: <span class="number">60000</span>,</span><br><span class="line">  message: <span class="string">&#x27;hello, how are you&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="待添加部分"><a href="#待添加部分" class="headerlink" title="待添加部分"></a>待添加部分</h2><p>以上只是简单的数据收发，也在局域网中测试实现，不过完整的过程封装应该还需错误回调和关闭等功能。<br>即增加 UDPSocket.onError 和 UDPSocket.close 函数<br>官方所提供的函数如下:<br><strong>UDPSocket wx.createUDPSocket()</strong> 创建一个 UDP Socket 实例</p><blockquote><p>UDPSocket 基础库 2.7.0 开始支持，低版本需做兼容处理。<br>一个 UDP Socket 实例，默认使用 IPv4 协议</p></blockquote><p><strong>方法:</strong></p><table><thead><tr><th align="left">函数名</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><strong>number UDPSocket.bind(number port)</strong></td><td align="left">绑定一个系统随机分配的可用端口，或绑定一个指定的端口号</td></tr><tr><td align="left">UDPSocket.setTTL(number ttl)</td><td align="left">设置 IP_TTL 套接字选项，用于设置一个 IP 数据包传输时允许的最大跳步数</td></tr><tr><td align="left"><strong>UDPSocket.send(Object object)</strong></td><td align="left">向指定的 IP 和 port 发送消息。基础库 2.9.0 起支持广播 (指定地址为 255.255.255.255)</td></tr><tr><td align="left">UDPSocket.connect(Object object)</td><td align="left">预先连接到指定的 IP 和 port，需要配合 write 方法一起使用</td></tr><tr><td align="left">UDPSocket.write()</td><td align="left">用法与 send 方法相同，如果没有预先调用 connect 则与 send 无差异（注意即使调用了 connect 也需要在本接口填入地址和端口参数）</td></tr><tr><td align="left">UDPSocket.close()</td><td align="left">关闭 UDP Socket 实例，相当于销毁。 在关闭之后，UDP Socket 实例不能再发送消息，每次调用 UDPSocket.send 将会触发错误事件，并且 message 事件回调函数也不会再也执行。在 UDPSocket 实例被创建后将被 Native 强引用，保证其不被 GC。在 UDPSocket.close 后将解除对其的强引用，让 UDPSocket 实例遵从 GC</td></tr><tr><td align="left">UDPSocket.onClose(function callback)</td><td align="left">监听关闭事件</td></tr><tr><td align="left">UDPSocket.offClose(function callback)</td><td align="left">取消监听关闭事件</td></tr><tr><td align="left">UDPSocket.onError(function callback)</td><td align="left">监听错误事件</td></tr><tr><td align="left">UDPSocket.offError(function callback)</td><td align="left">取消监听错误事件</td></tr><tr><td align="left"><strong>UDPSocket.onListening(function callback)</strong></td><td align="left">监听开始监听数据包消息的事件</td></tr><tr><td align="left">UDPSocket.offListening(function callback)</td><td align="left">取消监听开始监听数据包消息的事件</td></tr><tr><td align="left"><strong>UDPSocket.onMessage(function callback)</strong></td><td align="left">监听收到消息的事件</td></tr><tr><td align="left">UDPSocket.offMessage(function callback)</td><td align="left">取消监听收到消息的事件</td></tr></tbody></table><p><strong>错误:</strong></p><table><thead><tr><th align="left">错误码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-1</td><td align="left">系统错误</td></tr><tr><td align="left">-2</td><td align="left">socket接口错误，可参考系统的socket错误码</td></tr><tr><td align="left">-3</td><td align="left">发送失败，无接口权限</td></tr><tr><td align="left">1</td><td align="left">发送失败，参数错误，address不合法</td></tr><tr><td align="left">2</td><td align="left">发送失败，参数错误，port不合法</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_50077305/article/details/118813518">微信小程序UDP通信</a><br>2.<a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/wx.createUDPSocket.html">微信官方文档-UDP通信</a><br>3.<a href="https://blog.csdn.net/qq_43318313/article/details/124193217">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</a><br>4.<a href="http://meinaodai.top/">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装的个人博客</a> 所提供的 tool.js 封装了常用函数</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> UDP </tag>
            
            <tag> JavaScript </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程(一)之网络七层协议(OSI)</title>
      <link href="/posts/497460256.html"/>
      <url>/posts/497460256.html</url>
      
        <content type="html"><![CDATA[<h1 id="网络七层协议-OSI-基础知识"><a href="#网络七层协议-OSI-基础知识" class="headerlink" title="网络七层协议(OSI)基础知识"></a>网络七层协议(OSI)基础知识</h1><p>协议总览图：<br>​<img src="/posts/497460256/1.%E7%BD%91%E7%BB%9C%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>网络中的计算机与终端要想正确地传递信息和数据，必须在数据传输地顺序、数据的格式及内容等方面有一个约定的或规则，这种约定或规则称之为协议。</p></blockquote><table><thead><tr><th align="left">OSI层</th><th align="left">功能</th><th align="left">示例</th><th align="left">网络设备</th></tr></thead><tbody><tr><td align="left">应用层</td><td align="left">电子邮件，文件服务，虚拟终端</td><td align="left">TELNET，HTTP，FTP，NFS，SMTP，TFTP，SNMP，DNS，Telnet等</td><td align="left"></td></tr><tr><td align="left">表示层</td><td align="left">数据格式化，代码转换，数据加密 没有协议</td><td align="left">加密，ASCII等</td><td align="left"></td></tr><tr><td align="left">会话层</td><td align="left">解除或建立与别的接点的联系 没有协议</td><td align="left">RPC，SQL等</td><td align="left"></td></tr><tr><td align="left">传输层</td><td align="left">提供端对端的接口</td><td align="left">TCP，UDP，SPX</td><td align="left">四层交换机、也有工作在四层的路由器</td></tr><tr><td align="left">网络层</td><td align="left">为数据包选择路由</td><td align="left">IP，ICMP，RIP，OSPF，BGP，IGMP，IPX等</td><td align="left">路由器、三层交换机</td></tr><tr><td align="left">数据链路层</td><td align="left">传输有地址的帧以及错误检测功能</td><td align="left">ATM，FDDI，SLIP，CSLIP，PPP，ARP，RARP，MTU等</td><td align="left">网桥、以太网交换机、网卡(物理层和据链路层各一半)</td></tr><tr><td align="left">物理层</td><td align="left">以二进制数据形式在物理媒体上传输数据</td><td align="left">Rj45，802.3，ISO2110，IEEE802，IEEE802.2等</td><td align="left">中继器、集线器、双绞线等</td></tr></tbody></table><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>数据链层图：<br>​<img src="/posts/497460256/2.%E6%95%B0%E6%8D%AE%E9%93%BE%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第二层，介于物理层和网络层之间,其最基本的服务是将源自网络层来的数据可靠得传输到相邻节点的目的机网络层<br>在数据链路层中称这种数据块为帧，帧是数据链路层的传送单位，如何控制帧在屋里信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配，以及在两个网络实体之间提供数据链路通路的建立、维持和释放的管理.</p></blockquote><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层在数据链路层提供的两个相邻端点之间的数据帧的传送功能上进一步管理网络中的数据通信，将数据设法从源端经过若干个中间节点传送到目的端，从而向传输层提供最基本的端到端的数据传送服务<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第三层，介于传输层和数据链路层之间<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%821.png" class title="This is an 1.微信小程序UDP通信 image"><br>网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择，连接的建立、保持和终止等，它提供的服务使传输层不需要了解网络中的数据传输和交换技术。</p></blockquote><h1 id="Socket和HTTP"><a href="#Socket和HTTP" class="headerlink" title="Socket和HTTP"></a>Socket和HTTP</h1><p>简单了解OSI之后我们来看一下我们手机与电脑通信，所能够使用的两种数据通信，一种是HTTP请求，一种是Socket通信，HTTP是属于短连接，适合新闻，订票信息等客户端发起请求，每一次请求结束，自动断开连接。而Socket是属于长连接，适合游戏，聊天等实时数据。</p><h2 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h2><p>建立起一个TCP连接需要经过“三次握手”：<br>第一次握手：客户端发送syn包(syn&#x3D;j)到服务器，并进入SYN_SEND状态，等待服务器确认；<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack&#x3D;j+1），同时自己也发送一个SYN包（syn&#x3D;k），即SYN+ACK包，此时服务器进入SYN_RECV状态；<br>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack&#x3D;k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。</p><blockquote><p>握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连 接之前，TCP 连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写 了，就是服务器和客户端交互，最终确定断开）</p></blockquote><h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><p>同时Socket可以支持不同的传输层协议（UDP），那我们平时为什么不使用UDP呢，我们现在来看一下UDP与TCP的区别</p><table><thead><tr><th align="left"></th><th align="left">TCP</th><th align="left">UDP</th></tr></thead><tbody><tr><td align="left">是否面向连接</td><td align="left">面向连接</td><td align="left">面向非连接</td></tr><tr><td align="left">传输可靠性</td><td align="left">可靠</td><td align="left">不可靠</td></tr><tr><td align="left">应用场合</td><td align="left">传输大量数据</td><td align="left">少量数据</td></tr><tr><td align="left">传输速度</td><td align="left">慢</td><td align="left">快</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_48126962/article/details/117074843">网络七层协议</a><br>2.<a href="https://blog.csdn.net/ch1406285246/article/details/55504330">网络七层协议、TCP&#x2F;IP、UDP、HTTP、Socket 个人理解</a></p><blockquote><p>一、我一直以为Http和Tcp是两种不同的，但是地位对等的协议，虽然知道TCP是传输层，而http是应用层今天学习了下，知道了 http是要基于TCP连接基础上的，简单的说，TCP就是单纯建立连接，不涉及任何我们需要请求的实际数据，简单的传输。http是用来收发数据，即实际应用上来的。<br>二、TCP是底层通讯协议，定义的是数据传输和连接方式的规范 HTTP是应用层协议，定义的是传输数据的内容的规范 HTTP协议中的数据是利用TCP协议传输的，所以支持HTTP也就一定支持TCP<br>三、HTTP支持的是www服务而TCP&#x2F;IP是协议它是Internet国际互联网络的基础。TCP&#x2F;IP是网络中使用的基本的通信协议。TCP&#x2F;IP实际上是一组协议，它包括上百个各种功能的协议，如：远程登录、文件传输和电子邮件等，而TCP协议和IP协议是保证数据完整传输的两个基本的重要协议。通常说TCP&#x2F;IP是Internet协议族，而不单单是TCP和IP。</p></blockquote><p>3.<a href="https://zhuanlan.zhihu.com/p/101662799">网络OSI七层模型及各层作用</a></p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> 网络编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络协议 </tag>
            
            <tag> WIFI </tag>
            
            <tag> 网络七层协议 </tag>
            
            <tag> TCP/IP </tag>
            
            <tag> UDP </tag>
            
            <tag> Socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(二)</title>
      <link href="/posts/990256180.html"/>
      <url>/posts/990256180.html</url>
      
        <content type="html"><![CDATA[<h1 id="模块外形及连接方式"><a href="#模块外形及连接方式" class="headerlink" title="模块外形及连接方式"></a>模块外形及连接方式</h1><p>根据提供的资料先进行手工搭线，后续再做图。</p><h2 id="实物外形"><a href="#实物外形" class="headerlink" title="实物外形"></a>实物外形</h2><p>​<img src="/posts/990256180/1.WBR3%E6%A8%A1%E5%9D%97%E5%A4%96%E5%BD%A2.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3每个脚位以及硬件相关信息在对应的信息在文档(涂鸦WIFI基本开发(一))有详细说明</p><h2 id="连接原理图"><a href="#连接原理图" class="headerlink" title="连接原理图"></a>连接原理图</h2><p>​<img src="/posts/990256180/2.%E6%B6%82%E9%B8%A6%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E5%9B%BE.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3连接相对简单，基本只需要连接VCC、GND、TXD、RXD四个脚位即可，还有一个信息打印脚位TX为 A_16,测试有信息输出。</p><h2 id="实物连接"><a href="#实物连接" class="headerlink" title="实物连接"></a>实物连接</h2><p>​<img src="/posts/990256180/3.%E5%AE%9E%E9%99%85%E8%BF%9E%E7%BA%BF.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>根据原理图进行相应连接，需要增加两个电容放在VCC和GND之间做滤波，分别是0.1UF和10UF。</p><h1 id="实验效果"><a href="#实验效果" class="headerlink" title="实验效果"></a>实验效果</h1><p>实验使用的是涂鸦自带调试工具(Tuya Module Debugging Assistant)进行连接，涂鸦调试工具模拟MCU和模块进行通讯，基本正常！<br>​<img src="/posts/990256180/4.%E6%B6%82%E9%B8%A6%E6%A8%A1%E7%BB%84%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>今天拿到 WBR3 模块后连接测试，使用的是 USB TO TLL 串口工具，工具中的电源有 3.3V、VCC、5V，本着稳妥方法使用的是3.3V电源，然而当一直没能连接。<br>起初根本没有任何反应，串口接收不到任何数据。以为商家发错模块，直到使用 A_16 连接查看串口数据时才发现一直有乱码发过来，也就是说模块是正确，乱码很像乐鑫ESP8266刚启动时发送过来的数据一样。<br>因此才怀疑是不是模块一直复位，也才进一步怀疑电源过低导致芯片无法启动。<br>后来使用万用表点看发现电源才3V，再点看VCC有3.6V，使用这个电源就能正常工作通讯。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://zml3589110.github.io/posts/2486667095.html">涂鸦WIFI基本开发(一)</a><br>2.参考<a href="https://oshwhub.com/OrangePi/wen-shi-du-zhuan-gan-qi-wu-lian-wang-ce-shi">【涂鸦智能】云朵温度监视器</a>查看PCB</p>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
          <category> WIFI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
            <tag> WBR3 </tag>
            
            <tag> WIFI模块 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小熊派鸿蒙系统环境搭建</title>
      <link href="/posts/1932715036.html"/>
      <url>/posts/1932715036.html</url>
      
        <content type="html"><![CDATA[<h1 id="系统环境选择"><a href="#系统环境选择" class="headerlink" title="系统环境选择"></a>系统环境选择</h1><p>​</p><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIFI </tag>
            
            <tag> 物联网 </tag>
            
            <tag> 鸿蒙 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 小熊派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>商业洞察力目录</title>
      <link href="/posts/3924567325.html"/>
      <url>/posts/3924567325.html</url>
      
        <content type="html"><![CDATA[<h1 id="搭建模型，一个事物再复杂，也是几个固定要素组成的"><a href="#搭建模型，一个事物再复杂，也是几个固定要素组成的" class="headerlink" title="搭建模型，一个事物再复杂，也是几个固定要素组成的"></a>搭建模型，一个事物再复杂，也是几个固定要素组成的</h1><h2 id="第1章，系统、要素、连接关系"><a href="#第1章，系统、要素、连接关系" class="headerlink" title="第1章，系统、要素、连接关系"></a>第1章，系统、要素、连接关系</h2><h2 id="第2章，变量、因果链、增强回路、调节回路、滞后效应"><a href="#第2章，变量、因果链、增强回路、调节回路、滞后效应" class="headerlink" title="第2章，变量、因果链、增强回路、调节回路、滞后效应"></a>第2章，变量、因果链、增强回路、调节回路、滞后效应</h2><h2 id="第3章，流量、存量"><a href="#第3章，流量、存量" class="headerlink" title="第3章，流量、存量"></a>第3章，流量、存量</h2><h2 id="第4章，因果链"><a href="#第4章，因果链" class="headerlink" title="第4章，因果链"></a>第4章，因果链</h2><h2 id="第5章，增强回路"><a href="#第5章，增强回路" class="headerlink" title="第5章，增强回路"></a>第5章，增强回路</h2><h2 id="第6章，调节回路"><a href="#第6章，调节回路" class="headerlink" title="第6章，调节回路"></a>第6章，调节回路</h2><h2 id="第7章，滞后效应"><a href="#第7章，滞后效应" class="headerlink" title="第7章，滞后效应"></a>第7章，滞后效应</h2><h1 id="第一个训练场，解决难题，像商业顾问一样思考"><a href="#第一个训练场，解决难题，像商业顾问一样思考" class="headerlink" title="第一个训练场，解决难题，像商业顾问一样思考"></a>第一个训练场，解决难题，像商业顾问一样思考</h1><h2 id="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"><a href="#第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业" class="headerlink" title="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"></a>第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业</h2><h2 id="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"><a href="#第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）" class="headerlink" title="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"></a>第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）</h2><h2 id="改变原因"><a href="#改变原因" class="headerlink" title="改变原因"></a>改变原因</h2><h3 id="第10章，还原大前提（失效）"><a href="#第10章，还原大前提（失效）" class="headerlink" title="第10章，还原大前提（失效）"></a>第10章，还原大前提（失效）</h3><h3 id="第11章，突围边界墙（滞涨）"><a href="#第11章，突围边界墙（滞涨）" class="headerlink" title="第11章，突围边界墙（滞涨）"></a>第11章，突围边界墙（滞涨）</h3><h3 id="第12章，安装缓冲器（波动）"><a href="#第12章，安装缓冲器（波动）" class="headerlink" title="第12章，安装缓冲器（波动）"></a>第12章，安装缓冲器（波动）</h3><h3 id="第13章，跨越临界点（突变）"><a href="#第13章，跨越临界点（突变）" class="headerlink" title="第13章，跨越临界点（突变）"></a>第13章，跨越临界点（突变）</h3><h2 id="改变模型"><a href="#改变模型" class="headerlink" title="改变模型"></a>改变模型</h2><h3 id="第14章，改变模型的案例"><a href="#第14章，改变模型的案例" class="headerlink" title="第14章，改变模型的案例"></a>第14章，改变模型的案例</h3><h1 id="第二个训练场是看透人心，个体、群体、集体管理千差万别"><a href="#第二个训练场是看透人心，个体、群体、集体管理千差万别" class="headerlink" title="第二个训练场是看透人心，个体、群体、集体管理千差万别"></a>第二个训练场是看透人心，个体、群体、集体管理千差万别</h1><h2 id="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"><a href="#第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）" class="headerlink" title="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"></a>第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）</h2><h2 id="第16章，群体压力（群体）"><a href="#第16章，群体压力（群体）" class="headerlink" title="第16章，群体压力（群体）"></a>第16章，群体压力（群体）</h2><h2 id="第17章，结构性张力（个人）"><a href="#第17章，结构性张力（个人）" class="headerlink" title="第17章，结构性张力（个人）"></a>第17章，结构性张力（个人）</h2><h2 id="第18章，创业之心（合伙人）"><a href="#第18章，创业之心（合伙人）" class="headerlink" title="第18章，创业之心（合伙人）"></a>第18章，创业之心（合伙人）</h2><h2 id="第19章，改变人心模型的案例"><a href="#第19章，改变人心模型的案例" class="headerlink" title="第19章，改变人心模型的案例"></a>第19章，改变人心模型的案例</h2><h1 id="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"><a href="#第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。" class="headerlink" title="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"></a>第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。</h1><h2 id="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"><a href="#第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。" class="headerlink" title="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"></a>第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。</h2><h3 id="受阻模型：123-公地悲剧、成长上限、成长与投资不足"><a href="#受阻模型：123-公地悲剧、成长上限、成长与投资不足" class="headerlink" title="受阻模型：123 公地悲剧、成长上限、成长与投资不足"></a>受阻模型：123 公地悲剧、成长上限、成长与投资不足</h3><h3 id="失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”"><a href="#失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”" class="headerlink" title="失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”"></a>失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”</h3><p><strong>为什么越急于求成，越一事无成</strong></p><ol><li>舍本逐末基模(Shifting  the Burden)</li></ol><p>A和B两家“婚前培训”，都想融资100万，A拿来请最好的人打磨产品，让新婚夫妻心甘情愿付费学习；B拿来宣传课程社会价值，申请政府补贴，让新婚夫妻免费学。<br>B的商业模型符合典型的“舍本逐末”模型。</p><blockquote><p>舍本逐末的本质：一条根本解的调节回路，因为见效慢，遭遇一条症状解打压的增强回路。最终问题依旧，甚至更严重，直至崩盘。</p></blockquote><ol start="2"><li>饮鸩止渴基模(Fixes that Fail)</li></ol><p><strong>舍本逐末升级版，不同的是，“鸩”这种“症状解”，不是没有营养的“末”，而是杀人于无形的“毒”</strong></p><p>年中，某知识付费平台的销售业绩比预计差不少。销售总监很着急，打算推出“一价全包会员卡”，只需365就能收听所有内容。<br>这个调节回路可以大大提升短期收入，但也会深深伤害长期收入。就不会有人再打算用500、800甚至1000购买单独课程。相当于把未来的收入提前打折兑现。下半年的业绩问题，会因为上半年的吸血，而惨不忍睹</p><blockquote><p>饮鸩止渴的本质：一条短期见效的调节回路，激活了一条长期恶化的增强回路。回光返照之后，灯枯油尽，走向失控。</p></blockquote><p><strong>这个世界上放在我们前面的通常不是正确的选择和错误的选择。而是正确的选择和容易的选择。而容易的选择，常常有毒</strong></p><ol start="3"><li>意外之敌基模(Accidental Adversaries)</li></ol><p>上世纪70年代，宝洁为了打击竞争对手，提高市场占有率，突然大规模打折促销。没想到这一降，让盟友沃尔玛措手不及。低价带来的渠道利润骤减，让沃尔玛无以为继。然后沃尔玛大规模囤积产品，等恢复原价再卖。<br>这样的场景还发生在销售和工程师之间。</p><blockquote><p>意外之敌的本质：改善自己业绩的调节回路，意外激活了一条伤及盟友的增强回路。昔日盟友，反目成仇，最终两败俱伤</p></blockquote><p><strong>最需要学习时空模型组的，是面临艰难选择的创业者。人的天性是选最容易走的路。但是，正确的路，通常艰难；而难走的路，从不拥挤</strong></p><h3 id="通吃模型：7-富者越富"><a href="#通吃模型：7-富者越富" class="headerlink" title="通吃模型：7 富者越富"></a>通吃模型：7 富者越富</h3><h3 id="锁死模型：89-恶性竞争、目标侵蚀"><a href="#锁死模型：89-恶性竞争、目标侵蚀" class="headerlink" title="锁死模型：89 恶性竞争、目标侵蚀"></a>锁死模型：89 恶性竞争、目标侵蚀</h3><h2 id="第21章，公地悲剧、成长上限、成长与投资不足"><a href="#第21章，公地悲剧、成长上限、成长与投资不足" class="headerlink" title="第21章，公地悲剧、成长上限、成长与投资不足"></a>第21章，公地悲剧、成长上限、成长与投资不足</h2><h2 id="第22章，舍本逐末、饮鸩止渴、意外之敌"><a href="#第22章，舍本逐末、饮鸩止渴、意外之敌" class="headerlink" title="第22章，舍本逐末、饮鸩止渴、意外之敌"></a>第22章，舍本逐末、饮鸩止渴、意外之敌</h2><h2 id="第23章，赢家通吃"><a href="#第23章，赢家通吃" class="headerlink" title="第23章，赢家通吃"></a>第23章，赢家通吃</h2><h2 id="第24章，恶性竞争、目标侵蚀"><a href="#第24章，恶性竞争、目标侵蚀" class="headerlink" title="第24章，恶性竞争、目标侵蚀"></a>第24章，恶性竞争、目标侵蚀</h2><h2 id="第25章，案例练习"><a href="#第25章，案例练习" class="headerlink" title="第25章，案例练习"></a>第25章，案例练习</h2><h1 id="第四个训练场，终身练习。破除顽固的三大思想误区。"><a href="#第四个训练场，终身练习。破除顽固的三大思想误区。" class="headerlink" title="第四个训练场，终身练习。破除顽固的三大思想误区。"></a>第四个训练场，终身练习。破除顽固的三大思想误区。</h1><h2 id="第26章，散点思维和公式思维"><a href="#第26章，散点思维和公式思维" class="headerlink" title="第26章，散点思维和公式思维"></a>第26章，散点思维和公式思维</h2><h2 id="第27章，局部思维和层次思维"><a href="#第27章，局部思维和层次思维" class="headerlink" title="第27章，局部思维和层次思维"></a>第27章，局部思维和层次思维</h2><h2 id="第28章，静止思维和演化思维"><a href="#第28章，静止思维和演化思维" class="headerlink" title="第28章，静止思维和演化思维"></a>第28章，静止思维和演化思维</h2><h2 id="第29章，储备模型，建立模型，迁移模型"><a href="#第29章，储备模型，建立模型，迁移模型" class="headerlink" title="第29章，储备模型，建立模型，迁移模型"></a>第29章，储备模型，建立模型，迁移模型</h2><h2 id="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"><a href="#第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限" class="headerlink" title="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"></a>第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限</h2>]]></content>
      
      
      <categories>
          
          <category> 商业类 </category>
          
          <category> 刘润 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 商业 </tag>
            
            <tag> 目录 </tag>
            
            <tag> 洞察力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1.使用abbrlink生成唯一链接</title>
      <link href="/posts/238727531.html"/>
      <url>/posts/238727531.html</url>
      
        <content type="html"><![CDATA[<p>​文章链接默认是以年、月、日、标题格式来生成，主要是通过修改hexo配置文件_config.yml来完成<br>​<img src="/posts/238727531/1.%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE.png" class title="This is an 1.使用abbrlink生成唯一链接 image"></p><p>设置之后发现报错，那是因为没有安装依赖，根据提示安装即可<br>    npm install hexo-abbrlink –save</p><pre><code>官方Sample The generated link will look like the following:crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>安装好之后重新生成文章时，md文件的Front-matter 内会增加abbrlink 字段,值为生成的ID，<br>这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址,<br>换句话说,就是本篇文章有了自己的专属链接。有了专属链接，找百度收录也就简单的多了</p><p>本文参考文章:</p><a class="btn-beautify block" href="https://zhuanlan.zhihu.com/p/112318081" title="利用Hexo-abbrlink插件生成唯一文章链接"><i class="far fa-hand-point-right"></i><span>利用Hexo-abbrlink插件生成唯一文章链接</span></a>]]></content>
      
      
      <categories>
          
          <category> HEXO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO技术 </tag>
            
            <tag> abbrlink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>涂鸦WIFI基本开发(一)</title>
      <link href="/posts/2486667095.html"/>
      <url>/posts/2486667095.html</url>
      
        <content type="html"><![CDATA[<h1 id="因需将产品联网处理"><a href="#因需将产品联网处理" class="headerlink" title="因需将产品联网处理"></a>因需将产品联网处理</h1><p>​虽然一直在研究乐鑫esp8266，但发现接入云服务还需自己付费使用，因此就考虑找能免费对接网络的模块，很久以前玩过司南物联芯片，本想购入，但却发现主页都进不去，只好作罢。后来又找汉枫模块和涂鸦模块。</p><a class="btn-beautify block" href="http://www.hi-flying.com/index.php?route=product/category&path=135" title="汉枫模块"><i class="far fa-hand-point-right"></i><span>汉枫模块</span></a><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/MQTT-protocol?id=Kb65nphxrj8f1" title="涂鸦模块"><i class="far fa-hand-point-right"></i><span>涂鸦模块</span></a><p>汉枫看起来挺麻烦，加之比象花费太大时间！就选择涂鸦模块，因为涂鸦网站资料相对较多，也提供相对详细SDK，通过串口UART连接即可，根据说明，只要将其SDK-C导入到工程就可以使用。</p><h1 id="模块选择"><a href="#模块选择" class="headerlink" title="模块选择"></a>模块选择</h1><p>选择的是WBR3模块</p><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy" title="WBR3模块说明"><i class="far fa-hand-point-right"></i><span>WBR3模块说明</span></a><p>WBR3 是由涂鸦智能开发的一款低功耗嵌入式 Wi-Fi 加蓝牙模组。它由一个高集成度的无线射频芯片W701-VA2-CG构成，内置了 Wi-Fi 网络协议栈和丰富的库函数</p><ul><li>内置低功耗 KM4 MCU，可以兼作应用处理器</li><li>主频 100MHz</li><li>工作电压：3V-3.6V</li><li>外设：9×GPIOs, 1×UART, 1×Log_Tx</li><li>Wi-Fi&#x2F;蓝牙连通性<ul><li>802.11 B&#x2F;G&#x2F;N20</li><li>通道 <a href="mailto:&#x31;&#45;&#x31;&#x34;&#64;&#x32;&#x2e;&#52;&#x47;&#x48;&#122;">&#x31;&#45;&#x31;&#x34;&#64;&#x32;&#x2e;&#52;&#x47;&#x48;&#122;</a>(CH1-11 for US&#x2F;CA, CH1-13 for EU&#x2F;CN)</li><li>支持 WEP&#x2F;WPA&#x2F;WPA2&#x2F;WPA2 PSK（AES） 安全模式</li><li>支持 Bluetooth 4.2 Low Energy</li><li>802.11b 模式下 +20dBm 的输出功率</li><li>支持 SmartConfig 功能，包括 Android 和 iOS 设备</li><li>板载 PCB Onboard 天线</li><li>通过 CE、FCC 认证</li><li>工作温度：-20℃ to 85℃</li></ul></li></ul><h3 id="尺寸封装"><a href="#尺寸封装" class="headerlink" title="尺寸封装"></a>尺寸封装</h3><ul><li>WBR3 共有 2 排引脚（2×8），引脚间距为 2mm。</li><li>WBR3 尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×2.9±0.15 mm (H)。WBR3尺寸图如下图所示<img src="/posts/2486667095/1.WBR3%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">1.WBR3脚位图</li></ul><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote><h2 id="电气参数"><a href="#电气参数" class="headerlink" title="电气参数"></a>电气参数</h2><h3 id="绝对电气参数"><a href="#绝对电气参数" class="headerlink" title="绝对电气参数"></a>绝对电气参数</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ts</td><td align="left">存储温度</td><td align="left">-40</td><td align="left">105</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">供电电压</td><td align="left">-0.3</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">静电释放电压（人体模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">2</td><td align="left">KV</td></tr><tr><td align="left">静电释放电压（机器模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">0.5</td><td align="left">KV</td></tr></tbody></table><h3 id="工作条件"><a href="#工作条件" class="headerlink" title="工作条件"></a>工作条件</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">典型值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ta</td><td align="left">工作温度</td><td align="left">-20</td><td align="left">-</td><td align="left">85</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">工作电压</td><td align="left">3.0</td><td align="left">-</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">VIL</td><td align="left">I&#x2F;O低电平输入</td><td align="left">-</td><td align="left">-</td><td align="left">0.8</td><td align="left">V</td></tr><tr><td align="left">VIH</td><td align="left">I&#x2F;O高电平输入</td><td align="left">2.0</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">VOL</td><td align="left">I&#x2F;O低电平输出</td><td align="left">-</td><td align="left">-</td><td align="left">0.4</td><td align="left">V</td></tr><tr><td align="left">VOH</td><td align="left">I&#x2F;O高电平输出</td><td align="left">2.4</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">Imax</td><td align="left">I&#x2F;O驱动电流</td><td align="left">-</td><td align="left">-</td><td align="left">16</td><td align="left">mA</td></tr><tr><td align="left">Cpad</td><td align="left">输入引脚电容</td><td align="left">-</td><td align="left">2</td><td align="left">-</td><td align="left">pF</td></tr></tbody></table><h3 id="射频功耗"><a href="#射频功耗" class="headerlink" title="射频功耗"></a>射频功耗</h3><ul><li><p>TX 连续发送时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">功率</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">17dBm</td><td align="left">217</td><td align="left">268</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">18dBm</td><td align="left">231</td><td align="left">283</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">15dBm</td><td align="left">159</td><td align="left">188</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">17.5dBm</td><td align="left">177</td><td align="left">213</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">13dBm</td><td align="left">145</td><td align="left">167</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">16.5dBm</td><td align="left">165</td><td align="left">193</td><td align="left">mA</td></tr></tbody></table></li><li><p>RX 连续接收时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11B 11M</td><td align="left">63</td><td align="left">65</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11G 54M</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11N HT20 MCS7</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr></tbody></table></li></ul><h2 id="射频参数"><a href="#射频参数" class="headerlink" title="射频参数"></a>射频参数</h2><h3 id="基本射频特性"><a href="#基本射频特性" class="headerlink" title="基本射频特性"></a>基本射频特性</h3><table><thead><tr><th align="left">参数项</th><th align="left">详细说明</th></tr></thead><tbody><tr><td align="left">频率范围</td><td align="left">2.400~2.4835GHz</td></tr><tr><td align="left">Wi-Fi标准</td><td align="left">IEEE 802.11b&#x2F;g&#x2F;n(通道 1-14)</td></tr><tr><td align="left">蓝牙标准</td><td align="left">蓝牙4.2</td></tr><tr><td align="left">数据传输速率</td><td align="left">11b:1,2,5.5, 11 (Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11g:6,9,12,18,24,36,48,54(Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11n:HT20 MCS0~7</td></tr><tr><td align="left">天线类型</td><td align="left">PCB 天线，增益2.5dBi</td></tr></tbody></table><h2 id="天线信息"><a href="#天线信息" class="headerlink" title="天线信息"></a>天线信息</h2><h3 id="天线类型"><a href="#天线类型" class="headerlink" title="天线类型"></a>天线类型</h3><p>只有 PCB 板载天线接入方式，天线增益 2.5dBi。</p><h3 id="降低天线干扰"><a href="#降低天线干扰" class="headerlink" title="降低天线干扰"></a>降低天线干扰</h3><p>在 Wi-Fi 模组上使用 PCB 板载天线时，为确保 Wi-Fi 性能的最优化，建议模组天线部分和其他金属件距离至少在 15mm 以上。</p><h2 id="封装信息及生产指导"><a href="#封装信息及生产指导" class="headerlink" title="封装信息及生产指导"></a>封装信息及生产指导</h2><h3 id="机械尺寸"><a href="#机械尺寸" class="headerlink" title="机械尺寸"></a>机械尺寸</h3><p>WBR3的PCB机械尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×0.8±0.1 mm (H)。WBR3的机械尺寸如下图所示。</p><img src="/posts/2486667095/3.%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WIFI </tag>
            
            <tag> 物联网 </tag>
            
            <tag> C语言 </tag>
            
            <tag> 涂鸦 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql重置密码</title>
      <link href="/posts/643139453.html"/>
      <url>/posts/643139453.html</url>
      
        <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>因为最近在研究 VUE连接 PHP和mysql，而之前安装过mysql后忘记密码，遂找办法重置密码！</p><h1 id="验证可行步骤"><a href="#验证可行步骤" class="headerlink" title="验证可行步骤"></a>验证可行步骤</h1><ol><li><p>打开命令窗口cmd，输入命令：net stop mysql，停止MySQL服务 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li><p>开启跳过密码验证登录的MySQL服务<br>输入命令  mysqld –console –skip-grant-tables –shared-memory </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --console --skip-grant-tables --shared-memory </span><br></pre></td></tr></table></figure></li><li><p>再打开一个新的cmd，无密码登录MySQL，输入登录命令：mysql -u root -p</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>密码置为空，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br><span class="line"></span><br><span class="line">  update user set authentication_string&#x3D;&#39;&#39; where user&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure> <img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121131355851-1940142196.png"></li><li><p>退出mysql，执行命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure></li><li><p>关闭以-console –skip-grant-tables –shared-memory 启动的MySQL服务，</p></li><li><p>打开命令框，输入：net start mysql  启动MySQL服务，一管理员的身份运行cmd。</p></li><li><p>步骤4密码已经置空，所以无密码状态登录MySQL，输入登录命令：mysql -u root -p</p></li><li><p>利用上一篇博客中更改密码的命令，成功修改密码，如下图：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;新密码&#39;;</span><br></pre></td></tr></table></figure><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132058721-318719011.png">10. 验证更改后密码正确登录<p>输入quit，退出当前登录，输入登录命令：mysql -u root -p<br><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132340755-1605186062.png"></p><p>输入密码，成功登录，到此，重置密码结束。</p><h1 id="文章来源"><a href="#文章来源" class="headerlink" title="文章来源"></a>文章来源</h1><ol><li><a href="https://www.cnblogs.com/wsl-/p/10688292.html">mysql重置密码</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程来 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
            <tag> 重置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bat脚本相关技巧</title>
      <link href="/posts/387550601.html"/>
      <url>/posts/387550601.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>批处理文件<br>（Batch File，简称 BAT文件）是一种在DOS 下最常用的可执行文件，也称为批处理脚本，是对某对象进行批量的处理，批处理文件的扩展名为bat。</strong></p></blockquote><h1 id="当前盘符-x2F-当前bat路径"><a href="#当前盘符-x2F-当前bat路径" class="headerlink" title="当前盘符&#x2F;当前bat路径"></a><a href="https://blog.csdn.net/wumingxiao001bei/article/details/107859035">当前盘符&#x2F;当前bat路径</a></h1><h2 id="bat脚本显示当前盘符、当前路径、当前bat脚本路径"><a href="#bat脚本显示当前盘符、当前路径、当前bat脚本路径" class="headerlink" title="bat脚本显示当前盘符、当前路径、当前bat脚本路径"></a>bat脚本显示当前盘符、当前路径、当前bat脚本路径</h2><p>当前盘符 %<del>d0、当前路径 %cd%、当前执行命令行 %0、当前bat文件路径 %</del>dp0、当前bat文件短路径 %~dp0<br>编写代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">::关闭<span class="built_in">echo</span>回显</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::当前盘符</span><br><span class="line"><span class="built_in">echo</span> current pan : %~d0</span><br><span class="line"></span><br><span class="line">::当前路径</span><br><span class="line"><span class="built_in">echo</span> current path : %<span class="built_in">cd</span>%</span><br><span class="line"></span><br><span class="line">::当前执行命令行</span><br><span class="line"><span class="built_in">echo</span> current cmd : %0</span><br><span class="line"></span><br><span class="line">::当前bat文件路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::当前bat文件短路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::暂停bat脚本</span><br><span class="line">Pause</span><br></pre></td></tr></table></figure><p>测试效果:</p><img src="https://img-blog.csdnimg.cn/20200807113746849.png"><h1 id="bat脚本运行完后删除自身"><a href="#bat脚本运行完后删除自身" class="headerlink" title="bat脚本运行完后删除自身"></a><a href="https://blog.csdn.net/LIMY_hm/article/details/109628444">bat脚本运行完后删除自身</a></h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rem 批处理运行完后删除自身</span><br><span class="line">del %0 </span><br><span class="line"></span><br><span class="line">rem 若批处理中有变更自身名字，则需要用到管道</span><br><span class="line">rem del %0 | move *.* d:\ </span><br></pre></td></tr></table></figure><h2 id="使用bat批处理删除文件夹和文件"><a href="#使用bat批处理删除文件夹和文件" class="headerlink" title="使用bat批处理删除文件夹和文件"></a>使用bat批处理删除文件夹和文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rd /s/q C:\Users\Administrator\Desktop\新建文件夹\mp3</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h2 id="windows-bat批量创建文件夹与文件"><a href="#windows-bat批量创建文件夹与文件" class="headerlink" title="windows bat批量创建文件夹与文件"></a><a href="https://www.csdn.net/tags/MtTaEg4sNDM1MjM4LWJsb2cO0O0O.html">windows bat批量创建文件夹与文件</a></h2><ol><li>一、新建bat文件 批量创建.bat<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /f %%i <span class="keyword">in</span> (</span><br><span class="line">nameList.txt</span><br><span class="line">) <span class="keyword">do</span> mkdir %%i &amp;&amp; copy muban.docx %%i\%%i.docx</span><br><span class="line"></span><br><span class="line">::  <span class="keyword">do</span> mkdir %%i &amp;&amp; copy muban.docx %%i\%%i.docx &amp;&amp; start %%i\%%i.docx</span><br><span class="line"></span><br><span class="line">::pause</span><br></pre></td></tr></table></figure></li><li>二、创建文件 nameList.txt<br>把文件夹名字粘贴到 nameList.txt</li><li>三、创建空文件 muban.docx<br>备注： 批量创建.bat  、  nameList.txt    、 muban.docx位于同一目录。</li></ol><h2 id="Windows批处理-cmd-x2F-bat-快速新建文件夹"><a href="#Windows批处理-cmd-x2F-bat-快速新建文件夹" class="headerlink" title="Windows批处理(cmd&#x2F;bat)快速新建文件夹"></a><a href="https://blog.csdn.net/weixin_42985452/article/details/113789487">Windows批处理(cmd&#x2F;bat)快速新建文件夹</a></h2><blockquote><p>在进行毕业设计时，随着每日的任务不同，需要新建不同文件夹来区分任务，但手敲新建重命名太过繁琐，经过资料的查找，找到了在windows系统下bat文件的快速新建文件夹的方法，效果展示如下：</p></blockquote><img src="https://img-blog.csdnimg.cn/20210211125405922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjk4NTQ1Mg==,size_16,color_FFFFFF,t_70"><h3 id="本次批处理用到的命令"><a href="#本次批处理用到的命令" class="headerlink" title="本次批处理用到的命令"></a>本次批处理用到的命令</h3><ul><li>echo<blockquote><p>打开回显或关闭请求回显功能，或显示消息。如果没有任何参数，echo 命令将显示当前回显设置。</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> on  <span class="comment">#从下一行开始打开回显</span></span><br><span class="line"><span class="built_in">echo</span> off <span class="comment">#从下一行开始关闭回显</span></span><br><span class="line">@<span class="built_in">echo</span> off            <span class="comment">#从本行开始关闭回显</span></span><br><span class="line"><span class="built_in">echo</span> hello world     <span class="comment">#输出hello world</span></span><br></pre></td></tr></table></figure><ul><li><p>pause</p><blockquote><p>暂停命令：<br>将显示下面的消息：请按任意键继续. .</p></blockquote></li><li><p>set</p><blockquote><p>显示、设置或删除变量。<br>显示变量：set 或 set s 前者显示批处理当前已定义的所有变量及其值，后者显示所有以s开头的变量及值。<br>设置变量：set aa&#x3D;abcd 此句命令便可向变量aa赋值abcd。<br>如果变量aa已被定义，则aa的值被修改为abcd；若aa尚未定义，则此句命令即可定义新的变量aa，同时为变量aa赋予初始值abcd。<br>删除变量：set aa&#x3D; 此句命令即可删除变量aa。若变量aa已被定义，则删除变量aa；若aa尚未定义，则此句命令为实质意义。<br>需要说明的是，批处理中的变量是不区分类型的，不需要像C语言中的变量那样还要区分int、float、char等。比如执行set aa&#x3D;345后，变量aa的值既可以被视为数字345，也可以被视为字符串345。</p></blockquote></li><li><p>md</p><blockquote><p>创建文件夹</p></blockquote></li><li><p>%</p><blockquote><p>命令行传递给批处理的参数<br>%0 批处理文件本身<br>%1 第一个参数<br>%9 第九个参数<br>%* 从第一个参数开始的所有参数</p></blockquote></li><li><p>date 和 time</p><blockquote><p>日期和时间<br>date #显示当前日期，并提示输入新日期，按”回车”略过输入<br>date&#x2F;t #只显示当前日期，不提示输入新日期<br>time #显示当前时间，并提示输入新时间，按”回车”略过输入<br>time&#x2F;t #只显示当前时间，不提示输入新时间</p></blockquote></li></ul><p><strong>这里只展示了本次任务中我们需要的指令，更多指令请见：</strong><br><a href="https://www.cnblogs.com/dongzhuangdian">小德cyj</a><br><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html">批处理常用命令总结 - 批处理命令简介</a></p><ul><li>例：<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> test=abcdefghi#设置变量test，并赋值为 = 后面的字符串，即abcdefghij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test%</span> #显示变量test代表的字符串，即abcdefghij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~6%</span> #显示变量test中第<span class="number">6</span>个字符以后的所有字符，即ghij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~6,3%</span> #显示第<span class="number">6</span>个字符以后的<span class="number">3</span>个字符，即ghi</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~0,3%</span> #显示前<span class="number">3</span>个字符，即abc</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~-2%</span> #显示最后面的<span class="number">2</span>个字符，即ij</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%test:~0,-2%</span> #显示除了最后<span class="number">2</span>个字符以外的其它字符，即abcdefgh</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>代码：<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">#关闭显示</span><br><span class="line"><span class="built_in">set</span> dd=<span class="variable">%date:~8,2%</span>  </span><br><span class="line">#dd=日期</span><br><span class="line"><span class="built_in">set</span> mm=<span class="variable">%date:~5,2%</span></span><br><span class="line">#mm=月份</span><br><span class="line"><span class="built_in">set</span> yy=<span class="variable">%date:~0,4%</span></span><br><span class="line">#yy=年份</span><br><span class="line"><span class="built_in">set</span> Tmm=<span class="variable">%TIME:~3,2%</span></span><br><span class="line">#Tmm=分钟</span><br><span class="line"><span class="built_in">set</span> Thh=<span class="variable">%TIME:~0,2%</span></span><br><span class="line">#Thh=小时</span><br><span class="line"><span class="built_in">set</span> folder=&quot;Graduation_project-<span class="variable">%yy%</span>-<span class="variable">%mm%</span>-<span class="variable">%dd%</span>-<span class="variable">%Thh%</span>.<span class="variable">%Tmm%</span>&quot;</span><br><span class="line">#folder=Graduation_project-年-月-日-时-分</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line">#创建文件夹</span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line">#暂停，保持<span class="built_in">cmd</span>窗口，调试时方便信息查看，正常使用时可删除</span><br></pre></td></tr></table></figure></li></ul><h3 id="新建dat文件"><a href="#新建dat文件" class="headerlink" title="新建dat文件"></a>新建dat文件</h3><ol><li>新建一个txt文档</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313779.png"><ol start="2"><li>把我们的代码复制进去</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjk4NTQ1Mg==,size_16,color_FFFFFF,t_70"><ol start="3"><li>另存为.bat后缀文件</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313870.png"><img src="https://img-blog.csdnimg.cn/20210211135313906.png"><ol start="4"><li>完成</li></ol><img src="https://img-blog.csdnimg.cn/20210211135313867.png"><blockquote><p>如果你想更好的区分文件夹的不同任务，那么我们可以自动在新建文件夹时创建一个readme.txt方便我们进行进度的记录</p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#在之前的代码最后加入</span><br><span class="line"><span class="built_in">cd</span>  <span class="variable">%folder%</span></span><br><span class="line"><span class="built_in">echo</span> Summary：&gt;&gt; readme.txt</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210211140103717.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mjk4NTQ1Mg==,size_16,color_FFFFFF,t_70"><ul><li>按照文件个数进行顺序命名：<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> /f &quot;delims=&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;<span class="built_in">dir</span> /b ^| <span class="built_in">find</span> /v /c &quot;&amp;#@&quot;&#x27;) <span class="keyword">do</span> (</span><br><span class="line">  <span class="built_in">set</span> count=<span class="variable">%%a</span></span><br><span class="line">)</span><br><span class="line">#读取当前文件夹的文件及文件夹个数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%count%</span></span><br><span class="line">#打印出来</span><br><span class="line"><span class="built_in">set</span> folder=&quot;meeting-<span class="variable">%count%</span>&quot;</span><br><span class="line">#文件夹命名</span><br><span class="line"><span class="built_in">md</span>  <span class="variable">%folder%</span></span><br><span class="line">#新建文件夹</span><br></pre></td></tr></table></figure></li></ul><img src="https://img-blog.csdnimg.cn/2d45079444ee44f58a571fad4e665f8e.png">]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
          <category> BAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> bat </tag>
            
            <tag> 脚本 </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图标异常处理</title>
      <link href="/posts/2606890055.html"/>
      <url>/posts/2606890055.html</url>
      
        <content type="html"><![CDATA[<h1 id="异常原因"><a href="#异常原因" class="headerlink" title="异常原因"></a>异常原因</h1><p>原本想安装 xampp8.0.0.1 软件拿来做简单服务搭建，安装结束后发现 navicat 和 Postman 这两个程序图标异常<br>怀疑是安装这个程序的 mysql 篡改了内容，卸载后删除相应文件就可以了</p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ol><li><p>运行 %localappdata%<br>自动打开了 C:\Users\Administrator\AppData\Local 文件夹</p></li><li><p>删除文件 IconCach.db</p></li><li><p>组合键Ctrl+Shift+Esc 打开任务管理器<br>选择 Windows 资源管理–&gt;重新启动即可</p></li></ol><p><a href="http://www.360doc.com/content/22/0404/21/47597997_1024856093.shtml">桌面图标异常怎么办？</a></p>]]></content>
      
      
      <categories>
          
          <category> 小插件类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 桌面图标异常 </tag>
            
            <tag> xampp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收集好网站</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<p>配置美化相关</p><p>hexo个人博客搭建（二）butterfly主题配置: <a href="https://blog.csdn.net/YR_112233/article/details/122778691">Link</a></p><p>图片显示相关<br>Hexo + Typora + 开发Hexo插件 解决图片路径不一致: <a href="https://moeci.com/posts/hexo-typora/">Link</a><br>Hexo引用显示本地图片: <a href="https://www.xilixili.net/2019/03/26/hexo-markdown-use-images/">Link</a><br>Hexo butterfly 自定义文章封面 &amp;&amp; 主页顶部图片更改: <a href="https://blog.csdn.net/qq_43857095/article/details/108306164">Link</a></p><p>部署相关<br>Hexo 部署到 Gitee: <a href="https://blog.csdn.net/qq_38157825/article/details/112783631">Link</a><br>Hexo阶段三 – 将Hexo部署到github: <a href="https://blog.csdn.net/Night__breeze/article/details/117607049">Link</a></p><p>导航栏相关<br>Hexo 修改导航栏、标签、分类、归档图标，一分钟搞定: <a href="https://blog.csdn.net/h_kaka/article/details/119655493">Link</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题使用笔记</title>
      <link href="/posts/59422436.html"/>
      <url>/posts/59422436.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 安装文档(三) 主题配置-1</a><br>目录</p><ol><li>语言 2. 网站资料 3. 导航菜单</li><li>代码 4.1. 代码高亮主题 4.2. 代码复製 4.3. 代码框展开&#x2F;关闭 4.4. 代码换行 4.5. 代码高度限制</li><li>社交图标 6. 主页文章节选(自动节选和文章页description) 7. 顶部图 8. 文章置顶</li><li>文章封面 10. 文章页相关配置 10.1. 文章meta显示 10.2. 文章版权 10.3. 文章打赏<br>10.4. TOC 10.4.1. 为特定的文章配置 10.5. 相关文章 10.6. 文章锚点 10.7. 文章过期提醒<br>10.8. 文章编辑按钮 10.9. 文章分页按钮</li><li>头像 12. 图片描述 13. 复製相关配置 14. Footer 设置<br>14.1. 博客年份 14.2. 页脚自定义文本</li><li>右下角按钮 15.1. 简繁转换 15.2. 夜间模式 15.3. 閲读模式 15.4. 按钮排序</li><li>侧边栏设置 16.1. 侧边排版 16.2. 访问人数 busuanzi (UV 和 PV) 16.3. 运行时间<br>16.4. 最新评论 16.5. 自定义添加栏目</li><li>标籤外挂（Tag Plugins） 17.1. Note (Bootstrap Callout) 17.2. Gallery相册图库<br>17.3. Gallery相册 17.4. tag-hide 17.5. mermaid 17.6. Tabs 17.7. Button<br>17.8. inlineImg 17.9. label 17.10. timeline 17.11. flink</li></ol><p><a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 安装文档(四) 主题配置-2</a><br>目录</p><ol><li>评论 2. 在綫聊天 3. 分享 4. 搜索系统 5. 网站验证 6. 分析统计 7. 广告</li><li>Math 数学 9. 美化&#x2F;特效 9.1. 自定义主题色 9.2. 网站背景 9.3. footer 背景<br>9.4. 打字效果 9.5. 背景特效 9.6. 鼠标点击效果 9.7. 页面美化 9.8. 自定义字体和字体大小<br>9.8.1. 全局字体 9.8.2. Blog 标题字体 9.9. 网站副标题<br>9.10. 主页top_img显示大小 9.11. 页面加载动画preloader</li><li>PWA 11. 字数统计 12. 图片大图查看模式 13. Snackbar 弹窗 </li><li>其它配置 14.1. CSS 前缀 14.2. Open Graph 14.3. Instantpage<br>14.4. Pangu 15. Pjax 16. Inject 17. CDN</li></ol><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>433无线遥控使用说明</title>
      <link href="/posts/253476467.html"/>
      <url>/posts/253476467.html</url>
      
        <content type="html"><![CDATA[<h1 id="产品实物图说明"><a href="#产品实物图说明" class="headerlink" title="产品实物图说明"></a>产品实物图说明</h1><p>(图: 1.00安装git-vim-make程序)</p><img src="/posts/253476467/aaa.jpg" class title="This is an 433无线遥控 image"><img src="/posts/253476467/0.0%E4%BA%A7%E5%93%81%E5%9B%BE%E6%A6%82%E8%A7%88.jpg" class title="This is an 433无线遥控 image"> <h1 id="使用步骤说明"><a href="#使用步骤说明" class="headerlink" title="使用步骤说明"></a>使用步骤说明</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个标籤外挂。</p><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button" style>Click  </button><span class="hide-content">闪</span></span></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>block独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style>查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案</p></div></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><details class="toggle"><summary class="toggle-button" style>Butterfly安装方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><a class="btn-beautify block" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>主题中的图片都是默认以块级元素显示，如果你想以内联元素显示，可以使用这个标签外挂。</p><p>你看我长得漂亮不</p><p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>高亮所需的文字</p><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>可在任何界面插入类似友情链接列表效果</p><p>内容格式与友情链接界面一样，支持 yml 格式</p><div class="flink"><div class="flink-name">友情链接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="JerryC">              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日毕">今日事,今日毕</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="Hexo">              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、简单且强大的网誌框架">快速、简单且强大的网誌框架</div>            </a>          </div></div></div>]]></content>
      
      
      <categories>
          
          <category> 编程类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java学习标签 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO打开 related_posts 推荐功能时出现编译异常</title>
      <link href="/posts/2738849392.html"/>
      <url>/posts/2738849392.html</url>
      
        <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>因为刚开始写文章并未出现tags标签重合，所以并未触发推荐功能！直到昨天写一篇有重复tags标签后就发现一直报错，首先还是网上百度查找问题。<br>一通操作下来，都只能找到 related_posts 打开说明和设置方式，最后还是得通过故障自己解决！<br>问题定位如图：</p><img src="/posts/2738849392/1.%E9%97%AE%E9%A2%98%E5%AE%9A%E4%BD%8D.png" class title="This is an 1.HEXO打开推荐功能时出现编译异常 image"><h2 id="1-最初点-post-pug"><a href="#1-最初点-post-pug" class="headerlink" title="1.最初点 post.pug"></a>1.最初点 post.pug</h2><pre><code>hexo-theme-butterfly\layout\post.pug:27</code></pre><p>即说明是在文件 post.pug 中的函数 related_posts 出了异常，</p><blockquote><p>25|       include includes&#x2F;pagination.pug<br>    26|     if theme.related_post &amp;&amp; theme.related_post.enable<br>  –27|       !&#x3D; related_posts(page,site.posts)<br>    28|<br>    29|     if page.comments !&#x3D;&#x3D; false &amp;&amp; theme.comments &amp;&amp; theme.comments.use<br>    30|       - var commentsJsLoad &#x3D; true</p></blockquote><h2 id="2-根本问题点-this-escape-html-is-not-a-function"><a href="#2-根本问题点-this-escape-html-is-not-a-function" class="headerlink" title="2.根本问题点 this.escape_html is not a function"></a>2.根本问题点 this.escape_html is not a function</h2><p>最后问题为 related_post.js 文件下的 escape_html 函数</p><blockquote><p>使用escapeHTML，将字符串转为 &lt;script&gt;alert(2);&lt;&#x2F;script&gt;此时，浏览器将能正确解析，因为浏览器接收到实体字符后，转成对应的尖括号等<br>在 hexo-theme-butterfly\scripts\helpers\related_post.js 中的 escape_html 并未定义，因此有推荐数据进来时就报错，本来想自己增加 escape_html 函数，但又报 related_posts is not a function 错误，只好作罢！</p></blockquote><h2 id="3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）"><a href="#3-解决办法：不使用-escape-html-函数（再看后边不知会有啥错误）" class="headerlink" title="3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）"></a>3.解决办法：不使用 escape_html 函数（再看后边不知会有啥错误）</h2><p>既然返回的标题是字符串型，那就直接使用字符串测试后发现确实能通过，最后就去掉 escape_html 而直接使用。<br>按照说明，应该是浏览器字符串转换相关，后续看会不会因此报出什么故障了！<br>问题解决如图：</p><img src="/posts/2738849392/2.%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.png" class title="This is an 1.HEXO打开推荐功能时出现编译异常 image"><h1 id="参考到好的文章"><a href="#参考到好的文章" class="headerlink" title="参考到好的文章"></a>参考到好的文章</h1><p>一、<a href="https://www.cainiaoxueyuan.com/bc/1607.html">Hexo主题开发谈：制作过程如何避坑和一些经验</a><br>1.安装了hexo-browsersync之后也不能实现修改pug文件之后刷新出修改后的结果。只能实现自动刷新，但是刷新了之后还是修改前的页面。所以我找了一种办法使其能够达到预期的刷新并修改的效果，可以参考这个issue里最下面我的回答：<br>在你的node_modules文件夹里找到hexo-renderer-jade的文件夹，然后将里面lib&#x2F;pug.js（jade同理）的其中一行代码注释掉：<br>&#x2F;&#x2F; pugRender.compile &#x3D; pugCompile<br>我初步看了一下应该是跟预编译有关系。<br>2. hexo-server模式下，中文文章渲染不全。可以参考这个相关issue。解决办法是在站点的（而不是主题的）_config.yml里添加如下配置：<br>server:<br>    compress: true # 开启压缩<br>3. hexo默认的highlight渲染在未指定代码类型的时候会很慢，为了规范我们的文章书写以及提高渲染速度，我们应该在站点的配置文件里加上：<br>highlight:<br> auto_detect: false<br>并在写文章的时候，代码块的声明区域边上直接带上代码类型，比如：<code>js，这样就正常了</code></p><p>二、<a href="https://blog.csdn.net/qq_33058239/article/details/78727888">转义分为escapeHTML和unescapeHTML，先看两个函数的实现。</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>escapeHTML 转义html脚本 &lt; &gt; &amp; &quot; &#x27; </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">a</span></span> - </span></span><br><span class="line"><span class="comment"> *            字符串 </span></span><br><span class="line"><span class="comment"> */</span>  </span><br><span class="line">escapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&quot;&quot;</span><span class="string">&quot;).replace(/&#x27;/g, &quot;</span><span class="string">&#x27;&quot;);;  </span></span><br><span class="line"><span class="string">&#125;,  </span></span><br><span class="line"><span class="string">/** </span></span><br><span class="line"><span class="string"> * @function unescapeHTML 还原html脚本 &lt; &gt; &amp; &quot; &#x27;</span> </span><br><span class="line"> * @param a - </span><br><span class="line"> *            字符串 </span><br><span class="line"> */  </span><br><span class="line">unescapeHTML: <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;  </span><br><span class="line">    a = <span class="string">&quot;&quot;</span> + a;  </span><br><span class="line">    <span class="keyword">return</span> a.replace(<span class="regexp">/&lt;/g</span>, <span class="string">&quot;&lt;&quot;</span>).replace(<span class="regexp">/&gt;/g</span>, <span class="string">&quot;&gt;&quot;</span>).replace(<span class="regexp">/&amp;/g</span>, <span class="string">&quot;&amp;&quot;</span>).replace(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&quot;&#x27;</span>).replace(<span class="regexp">/&#x27;/g</span>, <span class="string">&quot;&#x27;&quot;</span>);  </span><br><span class="line">&#125;, </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> 推荐文章 </tag>
            
            <tag> escape_html </tag>
            
            <tag> related_posts </tag>
            
            <tag> escapeHTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HEXO本地服务正常，发布github后排版异常</title>
      <link href="/posts/2614359431.html"/>
      <url>/posts/2614359431.html</url>
      
        <content type="html"><![CDATA[<img src="/posts/2614359431/%E5%B0%81%E9%9D%A2.jpeg" class title="This is an HEXO本地服务正常，发布github后排版异常 image"><p>使用的是 hexo+butterfly主题</p><p>在本地打开服务器时一切都很正常，一旦推送到github之后排版错乱起来！</p><p>原本很奇怪，以为是主题导致，查了很多都未发现问题！</p><p>最后删除 .deploy_git 后重建缓冲推送就正常了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>比参考文章好的是，这里能显示图片！</p><p>参考以下文档:<br><a href="https://blog.csdn.net/Wlittlestar/article/details/123964059?spm=1001.2014.3001.5501">BUG记录| hexo博客本地预览正常，但发布后不显示主题</a></p>]]></content>
      
      
      <categories>
          
          <category> BUG收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HEXO </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Esp8266做socket实验(TcpServer TcpClient UdpServer Udpclient)</title>
      <link href="/posts/32911666.html"/>
      <url>/posts/32911666.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境:"></a>实验环境:</h1><ol><li>虚拟机:VirtualBox6.0</li><li>Ubuntu系统: ubuntu-20.04.1-desktop-amd64</li><li>ESP8266: NodeMCU开发板</li><li>SDK:V3.4</li><li>使用乐鑫SDK提供examples实验使用</li></ol><h1 id="0、补充：编译完成后下载出现ttyUSB0找不到的问题"><a href="#0、补充：编译完成后下载出现ttyUSB0找不到的问题" class="headerlink" title="@0、补充：编译完成后下载出现ttyUSB0找不到的问题:"></a>@0、补充：编译完成后下载出现ttyUSB0找不到的问题:</h1><p>(图0.00找不到ttyUSB0)<br> <img src="/posts/32911666/0.00%E6%89%BE%E4%B8%8D%E5%88%B0ttyUSB0.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>这样需要设置好虚拟机和Ubuntu，然后插拔USB重新挂载：<br>（图0.10Ubuntu设置USB）<br> <img src="/posts/32911666/0.10Ubuntu%E8%AE%BE%E7%BD%AEUSB.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图0.11拔插USB显示连接上USB）<br> <img src="/posts/32911666/0.11%E6%8B%94%E6%8F%92USB%E6%98%BE%E7%A4%BA%E8%BF%9E%E6%8E%A5%E4%B8%8AUSB.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>最后使用命令使Ubuntu挂载USB0:<br>1.sudo usermod -a -G dialout $USER<br>2.sudo chmod -R 777 &#x2F;dev&#x2F;ttyUSB0<br>（图0.12可以正常下载和窗口监视）<br> <img src="/posts/32911666/0.12%E5%8F%AF%E4%BB%A5%E6%AD%A3%E5%B8%B8%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%AA%97%E5%8F%A3%E7%9B%91%E8%A7%86.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 分割线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><h1 id="1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887"><a href="#1、Socket预备知识-https-blog-csdn-net-pashanhu6402-article-details-96428887" class="headerlink" title="@1、Socket预备知识:  https://blog.csdn.net/pashanhu6402/article/details/96428887"></a>@1、Socket预备知识:  <a href="https://blog.csdn.net/pashanhu6402/article/details/96428887">https://blog.csdn.net/pashanhu6402/article/details/96428887</a></h1><p>（图1.00Socket在网络中的结构）<br> <img src="/posts/32911666/1.00Socket%E5%9C%A8%E7%BD%91%E7%BB%9C%E4%B8%AD%E7%9A%84%E7%BB%93%E6%9E%84.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><h1 id="2、TcpServer和-TcpClient"><a href="#2、TcpServer和-TcpClient" class="headerlink" title="@2、TcpServer和 TcpClient"></a>@2、TcpServer和 TcpClient</h1><p>（图2.00TCP协议结构流程图）<br> <img src="/posts/32911666/2.00TCP%E5%8D%8F%E8%AE%AE%E7%BB%93%E6%9E%84%E6%B5%81%E7%A8%8B%E5%9B%BE.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"><br>TcpServer和 TcpClient流程基本相同，不过TcpServer相对来说多了些流程。复制到工作目录下边。<br>（图2.10复制Tcp_Server文件到实验目录）<br> <img src="/posts/32911666/2.10%E5%A4%8D%E5%88%B6Tcp_Server%E6%96%87%E4%BB%B6%E5%88%B0%E5%AE%9E%E9%AA%8C%E7%9B%AE%E5%BD%95.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>打开Tcp_Server.c文件修改app_main为TcpServer_init,使用CONFIG_EXAMPLE_IPV4而非IPV6。<br>（图2.11修改app_main方便调用）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A8.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.11修改app_main方便调用1）<br> <img src="/posts/32911666/2.11%E4%BF%AE%E6%94%B9app_main%E6%96%B9%E4%BE%BF%E8%B0%83%E7%94%A81.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>（图2.12设置端口且使用IPV4）<br> <img src="/posts/32911666/2.12%E8%AE%BE%E7%BD%AE%E7%AB%AF%E5%8F%A3%E4%B8%94%E4%BD%BF%E7%94%A8IPV4.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>在app_main函数中调用TcpServer_init完成TcpServer功能<br>（图2.13调用TcpServer功能）<br> <img src="/posts/32911666/2.13%E8%B0%83%E7%94%A8TcpServer%E5%8A%9F%E8%83%BD.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p><p>下载即可使用<br>@2、tcpclient功能设置与tcpserver基本相同！<br>@3、udpclient功能设置和udpserver操作也基本相同！！！</p><p>技术总结：<br>@一、注意USB0的挂载问题！<br>@二、要复制components文件到实验目录，否则会找不到protocol_examples_common.h头文件！<br>（图3.13网络连接头文件）<br> <img src="/posts/32911666/3.13%E7%BD%91%E7%BB%9C%E8%BF%9E%E6%8E%A5%E5%A4%B4%E6%96%87%E4%BB%B6.png" class title="This is an Esp8266做socket实验TcpServer-TcpClient-UdpServer-Udpclient image"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>乐鑫Esp8266_RTOS_SDK最新SDK_IDF编译环境搭建</title>
      <link href="/posts/2171885577.html"/>
      <url>/posts/2171885577.html</url>
      
        <content type="html"><![CDATA[<h1 id="零、安装Ubuntu"><a href="#零、安装Ubuntu" class="headerlink" title="零、安装Ubuntu"></a>零、安装Ubuntu</h1><p>续上集:《安装Ubuntu并设置共享和Xshell》安装好Ubuntu系统后就可以开始着手搭建ESP8266编译环境，不过过程并不美好，个中滋味及其坎坷只有受过毒打的人才能体会！！！真的比在Windows安装安信可环境麻烦N多倍。(想想之后可能要安装ESP32开发环境，誒，打工人！)<br>从上篇文章搭好到现在完成SDK_IDF的hello_world编译完成，竟然花了将近20天时间！！虽然都是零星使用上班和晚上下班回去做，但跨度也是有些长，其中各种被蹂躏真不是滋味！！！</p><p>@0、补充：上集补充:在安装好之后，发现每次都需要挂载share共享文件夹，很麻烦，因此就想办法每次开机后直接挂载，因此就有以下补充: </p><ol><li>sudo vim &#x2F;etc&#x2F;fstab</li><li>share &#x2F;mnt&#x2F;share vboxsf defaults 0 0<br>（图:0.0共享文件自动加载） <img src="/posts/2171885577/0.0%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%8A%A0%E8%BD%BD.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 我是分鸽线 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</li></ol><hr><h1 id="一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件"><a href="#一、安装Ubuntu开发ESP8266-SDK-IDF所需基本软件" class="headerlink" title="@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件"></a>@一、安装Ubuntu开发ESP8266_SDK_IDF所需基本软件</h1><h2 id="1-安装git、vim、make软件"><a href="#1-安装git、vim、make软件" class="headerlink" title="1.  安装git、vim、make软件:"></a>1.  安装git、vim、make软件:</h2><p>sudo apt install git vim make<br>(图: 1.00安装git-vim-make程序)</p><img src="/posts/2171885577/1.00%E5%AE%89%E8%A3%85git-vim-make%E7%A8%8B%E5%BA%8F.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-安装乐鑫所需相关软件"><a href="#2-安装乐鑫所需相关软件" class="headerlink" title="2.  安装乐鑫所需相关软件:"></a>2.  安装乐鑫所需相关软件:</h2><p>sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python3 python3-serial<br>(图:1.10安装乐鑫所需软件)</p><img src="/posts/2171885577/1.10%E5%AE%89%E8%A3%85%E4%B9%90%E9%91%AB%E6%89%80%E9%9C%80%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p> 此时若报故障: (“选中 ‘python-is-python2’ 而非 ‘python’”,则要需要把Python3修改成默认,因为我已设置过，所以可以直接下载通过,算是第一个坑吧！)<br>这是由于Ubuntu所安装默认的Python为Python2，把它修改默认为Python3即可<br>查看本机安装的Python版本:<br>sudo ln -s &#x2F;usr&#x2F;bin&#x2F;python3.8 &#x2F;usr&#x2F;bin&#x2F;python<br>（图: 1.11查看本机安装的Python）</p><img src="/posts/2171885577/1.11%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BA%E5%AE%89%E8%A3%85%E7%9A%84Python.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！"><a href="#3-安装pip软件-太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！" class="headerlink" title="3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)"></a>3.  安装pip软件 (太太太重要了！！忘记安装它的话到后面能给你整出一堆幺蛾子来！)</h2><p>sudo apt-get install python3-pip<br>(图:1.12通过Python安装pip软件)</p><img src="/posts/2171885577/1.12%E9%80%9A%E8%BF%87Python%E5%AE%89%E8%A3%85pip%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h3 id="以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"><a href="#以上基本安装好所需的程序，做个小坑总结-1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK-IDF跟以前ESP8266-SDK-2-0-0版本架构差别太太太太大了，因为以前是在2-0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！" class="headerlink" title="以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！"></a>以上基本安装好所需的程序，做个小坑总结:1、该装的程序都得装上，否则后面总出现这样那样的问题，而且在网上还查不到同个问题解法，那时候就很绝望了啊！反正我是受到毒打N遍了！2、现在新的SDK_IDF跟以前ESP8266_SDK_2.0.0版本架构差别太太太太大了，因为以前是在2.0版本上开发，现在要试新SDK，所以环境差异也是十分明显！一定要有耐心！</h3><h1 id="二、下载ESP8266最新SDK和Tool编译链工具"><a href="#二、下载ESP8266最新SDK和Tool编译链工具" class="headerlink" title="@二、下载ESP8266最新SDK和Tool编译链工具"></a>@二、下载ESP8266最新SDK和Tool编译链工具</h1><h2 id="1-下载ESP8266的SDK"><a href="#1-下载ESP8266的SDK" class="headerlink" title="1.  下载ESP8266的SDK"></a>1.  下载ESP8266的SDK</h2><p>去官网下载适合自己开发的SDK(必须3.0及以上),官网有说明！我下的是最新版本。一定一定一定一定要加–recursive拉取所有字模块，否则根本编译不了，而且还不知啥问题！！！这一步不知掉了多少次坑！</p><p>方法一(最好但下载速度最慢):去GitHub下载SDK,可以出门办个事，因为时间实在是太太太漫长了……………(如果会科学上网应该好很多，不过没去研究它！有更好办法的小伙伴希望能交流一下哦)<br> git clone –recursive <a href="https://github.com/espressif/ESP8266_RTOS_SDK.git">https://github.com/espressif/ESP8266_RTOS_SDK.git</a><br>(图: 2.10从GitHub上下载相应SDK)</p><img src="/posts/2171885577/2.10%E4%BB%8EGitHub%E4%B8%8A%E4%B8%8B%E8%BD%BD%E7%9B%B8%E5%BA%94SDK.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二(拉下来总会异常):去Gittee码云上下载SDK，官方放一份到码云，但直–recursive拉取时总出现账户登录，试了很多次就放弃了！虽然下载速度很诱人，但……<br>方法三(下载别人已经打包好的文件)：网上找了些，但还是编译不通过！到时候我也贴出自己从GitHub下载好的SDK出来。<br>（图: 2.13打包好的SDK和编译链工具）</p><img src="/posts/2171885577/2.13%E6%89%93%E5%8C%85%E5%A5%BD%E7%9A%84SDK%E5%92%8C%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h2 id="2-下载编译链工具"><a href="#2-下载编译链工具" class="headerlink" title="2.  下载编译链工具"></a>2.  下载编译链工具</h2><p>方法一(我只找到最新的5.2.0版本)：到乐鑫官网下载编译工具链<br>方法二:网上其他人提供编译链工具，很多都是5.2.0工具。<br>方法三(我在使用):在SDK目录下有README.md,它提供了合适的编译工具链(图: 2.23从README下载正确版本编译链工具)</p><p>使用wget下载适合系统编译链工具(也可从其他地方下载，建议还是从本环境下载，因为其他地方下载不知道又会出什么幺蛾子，这苦也吃过了！)<br>wget <a href="https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz">https://dl.espressif.com/dl/xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz</a><br>(图: 2.23使用wget下载编译链工具到当前目录)</p><img src="/posts/2171885577/2.23%E4%BD%BF%E7%94%A8wget%E4%B8%8B%E8%BD%BD%E7%BC%96%E8%AF%91%E9%93%BE%E5%B7%A5%E5%85%B7%E5%88%B0%E5%BD%93%E5%89%8D%E7%9B%AE%E5%BD%95.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>使用tar解压编译工具链<br>sudo tar zxvf xtensa-lx106-elf-gcc8_4_0-esp-2020r3-linux-amd64.tar.gz<br>(图: 2.24解压编译工具链)</p><img src="/posts/2171885577/2.24%E8%A7%A3%E5%8E%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <h1 id="三、设置工具链PATH和SDK的PATH并检查其合法性"><a href="#三、设置工具链PATH和SDK的PATH并检查其合法性" class="headerlink" title="@三、设置工具链PATH和SDK的PATH并检查其合法性"></a>@三、设置工具链PATH和SDK的PATH并检查其合法性</h1><h2 id="1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH"><a href="#1-设置SDK和工具链PATH-图-3-10添加SDK和编译链PATH" class="headerlink" title="1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):"></a>1.  设置SDK和工具链PATH(图: 3.10添加SDK和编译链PATH):</h2><p>打开~&#x2F;.bashrc文件: sudo vim ~&#x2F;.bashrc在末尾并添加这两个PATH<br>export PATH&#x3D;$PATH:$HOME&#x2F;esp8266&#x2F;xtensa-lx106-elf&#x2F;bin<br>export IDF_PATH&#x3D;”$HOME&#x2F;esp8266&#x2F;ESP8266_RTOS_SDK”<br> 最后wq保存退出, 注销并重新登录或者直接使用命令source  ~&#x2F;.bashrc使环境更新(图: 3.11更新PATH环境)</p><img src="/posts/2171885577/3.11%E6%9B%B4%E6%96%B0PATH%E7%8E%AF%E5%A2%83.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="2-检查PATH环境合法性"><a href="#2-检查PATH环境合法性" class="headerlink" title="2.  检查PATH环境合法性"></a>2.  检查PATH环境合法性</h2><p>检查编译工具链(图: 3.20检查编译工具链PATH): echo $PATH<br> 检查SDK(图: 3.21检查SDK的PATH): echo $IDF_PATH</p><img src="/posts/2171885577/3.21%E6%A3%80%E6%9F%A5SDK%E7%9A%84PATH.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><h2 id="3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0"><a href="#3-查看编译链工具版本号-图-3-30查看编译工具链版本号-下载使用的是8-4-0" class="headerlink" title="3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0"></a>3.  查看编译链工具版本号(图: 3.30查看编译工具链版本号):下载使用的是8.4.0</h2><p>xtensa-lx106-elf-gcc -v</p><img src="/posts/2171885577/3.30%E6%9F%A5%E7%9C%8B%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE%E7%89%88%E6%9C%AC%E5%8F%B7.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <hr><p>小坑总结:至此，Ubuntu环境编译搭建基本告一段落！1、编译工具链下载要匹配，我就有好多次下载的是5.2.0版本工具链来编译最新SDK导致各种莫名其妙问题！2、设置PATH一定要做好，不一定非要用我这个办法，网上也有很多，不过经过多次测试后还是觉得这种方式好一些！！</p><h1 id="四、编译hello工程文件"><a href="#四、编译hello工程文件" class="headerlink" title="@四、编译hello工程文件"></a>@四、编译hello工程文件</h1><p>走到这一步你是否已经觉得胜利女神在向你招手了吗？是否觉得万无一失了呢？反正当初我是这么觉得的！不过遭受N多次毒打之后，现在没到程序烧录并跑起来前都不会掉以轻心！<br>为什么说到这一步还是很多问题呢？因为网上很多很多教程到这一步就基本成功，但^&#x3D;^不知为啥，到这一步后编译make还是出现各种缺失问题！以前是SDK或者编译工具链问题，之后就应该不会，然而网上这方面资料又寥寥无几！<br>直到经过好多好多好多次重装Ubuntu重新搭建编译环境，基本在绝望的边缘后！某天中午偶然去看官方文档，发现他们在新SDK架构上引入了install.sh机制,才解决了问题!<br>方法一:安装所需的Python软件包(我自己安装好也还是编译不通过)，网上很多方法就是这个，requirements.txt文件是在SDK根目录下，包含所需环境软件:<br>python -m pip install –user -r $IDF_PATH&#x2F;requirements.txt<br>（图: 4.10安装Python所需要环境程序）</p><img src="/posts/2171885577/4.10%E5%AE%89%E8%A3%85Python%E6%89%80%E9%9C%80%E8%A6%81%E7%8E%AF%E5%A2%83%E7%A8%8B%E5%BA%8F.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>方法二:进入SDK根目录,运行(这相当于一键配置,我是用这个方法配置成功了),其实这个方法也十分十分漫长，网络不好可能还要很多次安装!这其实也挺看运气的！<br>.&#x2F;install.sh<br>（图: 4.11使用install自动安装环境软件）</p><img src="/posts/2171885577/4.11%E4%BD%BF%E7%94%A8install%E8%87%AA%E5%8A%A8%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83%E8%BD%AF%E4%BB%B6.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后进入hello_world文件进行make编译,第一次编译时间比较长,以后就快了！其它往后相关操作网上有很多人写好资料了！<br>cd $IDF_PATH&#x2F;examples&#x2F;get-started&#x2F;hello_world<br>（图: 4.12对hello_world编译make结果0）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C0.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果1）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C1.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>（图: 4.12对hello_world编译make结果2）</p><img src="/posts/2171885577/4.12%E5%AF%B9hello_world%E7%BC%96%E8%AF%91make%E7%BB%93%E6%9E%9C2.png" class title="This is an 乐鑫Esp8266-RTOS-SDK最新SDK-IDF编译环境搭建 image"> <p>最后就是make falsh烧录以及make monitor进行串口监听了！</p><hr><p>技术总结：<br>@一、下载的SDK_IDF必须要完整！必须要包含子模块！！<br>@二、编译工具链一定要匹配所使用的SDK！<br>@三、该安装的环境软件一个都不能少，在哪儿报错就得先处理好它！<br>@四、需要耐心和细心！需要耐心和细心！！需要耐心和细心！！！</p><hr><p>相关链接：<br><a href="http://qizhuqukanhai_1.gitee.io/myblog/">个人博客</a><br><a href="https://blog.csdn.net/zml3589110/article/details/109319118">CDSN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安装Ubuntu并设置共享和Xshell</title>
      <link href="/posts/3271392839.html"/>
      <url>/posts/3271392839.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装Ubuntu"><a href="#一、安装Ubuntu" class="headerlink" title="一、安装Ubuntu"></a>一、安装Ubuntu</h1><p>先到官网下载Ubuntu安装镜像文件(本次下载的是ubuntu-20.04.1-desktop-amd64.iso) ,使用Oracle VM VirtualBox虚拟机,配置如下:</p><img src="/posts/3271392839/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>一直一键下一步就安装好了！<br>安装好之后使用sudo apt update来更新Ubuntu系统</p><img src="/posts/3271392839/update%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>经过漫长更新等待… …(大约半个钟,理论上应该取决于网络环境)后更新完毕！</p><img src="/posts/3271392839/update%E6%9B%B4%E6%96%B0%E7%B3%BB%E7%BB%9F%E5%AE%8C%E6%88%90.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="二、安装Xshell的SSH客户端服务功能"><a href="#二、安装Xshell的SSH客户端服务功能" class="headerlink" title="二、安装Xshell的SSH客户端服务功能"></a>二、安装Xshell的SSH客户端服务功能</h1><p>  更新完系统后执行sudo apt install ssh命令进行Ubuntu端安装,这个安装快很多很多…</p><img src="/posts/3271392839/%E5%AE%89%E8%A3%85shell%E6%9C%8D%E5%8A%A1.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>安装完成后</p><img src="/posts/3271392839/shell%E6%9C%8D%E5%8A%A1%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>然后安装net-tool工具sudo apt install net-tools进行安装</p><img src="/posts/3271392839/%E5%AE%89%E8%A3%85shell%E7%9A%84net%E5%B7%A5%E5%85%B7.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后把虚拟机的网卡连接方式设置成桥接网卡模式:</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E6%88%90%E6%A1%A5%E6%8E%A5%E7%BD%91%E5%8D%A1.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后使用指令ifconfig指令查询本机网卡地址,用于SSH连接:</p><img src="/posts/3271392839/%E6%9F%A5%E7%9C%8B%E6%9C%AC%E6%9C%BAIP%E5%9C%B0%E5%9D%80.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="三、转到Xshell进行连接-填入相应的IP地址"><a href="#三、转到Xshell进行连接-填入相应的IP地址" class="headerlink" title="三、转到Xshell进行连接:填入相应的IP地址"></a>三、转到Xshell进行连接:填入相应的IP地址</h1><img src="/posts/3271392839/%E5%9C%A8xshell%E4%B8%8A%E8%AE%BE%E7%BD%AEIP%E5%9C%B0%E5%9D%80.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>点击连接后即可进行连接:</p><img src="/posts/3271392839/xshell%E4%B8%8A%E8%BF%9E%E6%8E%A5%E6%88%90%E5%8A%9F.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><hr><h1 id="四、安装虚拟机和Windows文件共享"><a href="#四、安装虚拟机和Windows文件共享" class="headerlink" title="四、安装虚拟机和Windows文件共享"></a>四、安装虚拟机和Windows文件共享</h1><h2 id="4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可"><a href="#4-1-先设置虚拟机Ubuntu中进行相应共享-点击设备-安装增强功能即可" class="headerlink" title="4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可"></a>4-1:先设置虚拟机Ubuntu中进行相应共享:点击设备-安装增强功能即可</h2><img src="/posts/3271392839/%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>然后设置设备—共享文件夹—选择自动挂载和固定分配—然后确定(此时Windows和Ubuntu已经实现共享)</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>一切顺利的话，打开Ubuntu的media文件夹会出现以下共享文件(sf_share)</p><img src="/posts/3271392839/%E8%AE%BE%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8E%E7%9A%84%E7%BB%93%E6%9E%9C.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><h2 id="4-2-验证共享功能"><a href="#4-2-验证共享功能" class="headerlink" title="4-2:验证共享功能:"></a>4-2:验证共享功能:</h2><p>打开刚刚连接好的Xshell并打开mnt文件夹并新建共享映射文件夹share(可以自己定义)<br>cd &#x2F;mnt&#x2F;<br>sudo mkdir share</p><img src="/posts/3271392839/%E6%98%A0%E5%B0%84%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>最后建立并挂载映射关系sudo mount -t vboxsf share share&#x2F;</p><img src="/posts/3271392839/%E6%98%A0%E5%B0%84%E5%BB%BA%E7%AB%8B%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6.jpg" class title="This is an 安装Ubuntu并设置共享和Xshell image"><p>即可查看管理Windows下共享的文件！</p><hr><hr><p>技术总结：<br>@一:下载安装基本没难度，根据提示一般都能完成！<br>@二：若是纯净系统也基本能装得上。<br>@三：根据Xshell使用说明填写即可。<br>@四：之前不是纯净系统时，安装增强功能总失败，然后新系统就不存在该问题！还要注意共享模式的设置！</p><hr><p>相关链接：<br><a href="https://blog.csdn.net/zml3589110/article/details/108954649">CDSN</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>tupian</title>
      <link href="/posts/3935749953.html"/>
      <url>/posts/3935749953.html</url>
      
        <content type="html"><![CDATA[<img src="/posts/3935749953/aaa.jpg" class title="This is an tupian image"><p>写博客时适当的添加图片是很有效率的一种做法，也会让别人更容易明白你想表达的意思。</p><p>如果你的博客也是通过Hexo框架建立的，在使用初期你可能也遇到过和我相似的问题：在一个.md文件中添加的图片并没有在预览中显示出来，下面分享一种解决此问题的方法：</p><p>修改博客配置。<br>下载插件。<br>修改博客配置<br>修改博客根目录中_config.yml文件的配置项post_asset_folder为true：</p><p>post_asset_folder: true</p><p>完成此设置后，当你通过hexo new 文件名新建博客后，会产生一个和文件同名的文件夹。</p><p>image.png<br>下载插件<br>在博客根目录中下使用npm安装插件：</p><p>npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save</p><p>示例<br>当文章需要添加图片时，将需要添加的图片放入同名的文件夹中，同时通过相对路径索引到该图片。</p><p>例如我在上方修改博客配置中展示的那张图片的md源码为：</p><p>*[·-·]:<img src="/./%E8%A7%A3%E5%86%B3Hexo%E5%8D%9A%E5%AE%A2%E4%B8%8D%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/1580801930220.png" alt="示例"><br>使用命令hexo s开启服务，若无报错在本地可以看到图片在博客中正确显示。</p><p>作者：Gsdxiaohei<br>链接：<a href="https://www.jianshu.com/p/ea78bdd0551f">https://www.jianshu.com/p/ea78bdd0551f</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>*[·-·]:注释内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/1243066710.html"/>
      <url>/posts/1243066710.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>这是我的第一个Blog尝试</title>
      <link href="/posts/911816538.html"/>
      <url>/posts/911816538.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><h1 id="Reward"><a href="#Reward" class="headerlink" title="Reward"></a>Reward</h1><p>#reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！<br>wechatpay: <a href="http://p3dm71oa7.bkt.clouddn.com/wcpay.png">http://p3dm71oa7.bkt.clouddn.com/wcpay.png</a><br>alipay: <a href="http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg">http://p3dm71oa7.bkt.clouddn.com/zfbpay.jpg</a><br>#bitcoin: &#x2F;images&#x2F;bitcoin.png</p><p>#<a id="more"></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">=========================== 常用指令收集 ======================================</span><br><span class="line">//***挑选了常用指令***</span><br><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo p == hexo publish</span><br><span class="line">hexo g == hexo generate<span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy<span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">一步到位</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</span><br><span class="line">===============================================================================</span><br></pre></td></tr></table></figure><p>它来自:<a href="https://blog.csdn.net/qq_26975307/article/details/62447489">Server</a></p><p>以下是正文</p><!--more--><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line">全是静态文件，访问速度快；</span><br><span class="line">免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line">可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line">数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line">博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line">等等；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 首次 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="/posts/3846156473.html"/>
      <url>/posts/3846156473.html</url>
      
        <content type="html"><![CDATA[<p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</p><hr><p>以下是正文</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li></ol><a id="more"></a><ol start="4"><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等；</li></ol>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
