<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2022-07-27T03:49:04.734Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C#上位机系列之二（使用C#写第一个程序）</title>
    <link href="https://zml3589110.github.io/posts/1801299827.html"/>
    <id>https://zml3589110.github.io/posts/1801299827.html</id>
    <published>2022-07-27T03:27:20.000Z</published>
    <updated>2022-07-27T03:49:04.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、新建程序项目工程"><a href="#一、新建程序项目工程" class="headerlink" title="一、新建程序项目工程"></a>一、新建程序项目工程</h1><ol><li><p>首先选择新建Windows窗体应用(.NET Framework)，然后选择项目保存位置，填写项目名称，这里因为我们不需要用git进行版本管理，所以不用新建GIT存储库；</p></li><li><p>框架是指.net框架，4以及4以下的.NET框架可以在xp上运行，4以上可以在win7&#x2F;8&#x2F;10上运行，鉴于当前大多数操作系统都是win7或win10，选择4.5版本。</p></li></ol><img src="https://s2.51cto.com/images/blog/202106/28/a90862a0d4873dbbab622a2411143913.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><h1 id="二、相应窗体介绍和内部代码分析"><a href="#二、相应窗体介绍和内部代码分析" class="headerlink" title="二、相应窗体介绍和内部代码分析"></a>二、相应窗体介绍和内部代码分析</h1><img src="https://s2.51cto.com/images/blog/202106/28/fe3167f4742f22e0cc7e4e9c9cd3b1be.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><ul><li>这里我们双击窗体界面，这也是VS的特性，双击一个控件，就会进入对应代码文件部分，这些代码全由VS在生成项目时自动生成，下面进行详细的解释：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*filename：Form1.cs*/</span></span><br><span class="line"><span class="comment">//使用命名空间</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户项目工程自定义命名空间HelloWorld</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form</span></span><br><span class="line">    <span class="comment">//partial关键字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//与类同名的构造方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">　　　　　<span class="comment">//用户自定义方法，窗体加载时由Form对象调用</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p><strong>命名空间（namespace）：</strong>在C#中用命名空间将很多类的属性及其方法进行封装供调用，类似C语言中将变量和函数封装成一个个.h文件，调用的时候只需要#include “filepath + filename”就可以使用，比如刚开始时用关键字using声明了一些所需要的系统命名空间（line1-10）;然后采用关键字namespace来自定义一个用户工程所需的命名空间HelloWorld，在我们定义的这个命名空间里就可以定义一些类和方法来进行下一步的实现；</p></li><li><p><strong>类（class）：</strong>C#是一门面向对象的编程语言，所以最基本的就是类和对象，对象的特征是具有属性（C语言中称为变量）和方法（C语言中称为函数），然后我们定义一个类来描述这个对象的特征，注意：这个时候定义的类不是真实存在的，所以不会分配内存空间，当我们用所定义的这个类去创建一个类的对象，这个对象是真实存在的，它会占用内存空间，比如在这个工程中定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form；</p></li><li><p><strong>方法：</strong>前面已经说过，在面向对象编程中是没有变量和函数的，所有的函数都被封装在类中，属于对象的方法，最基本的是类的构造方法，该方法与类名同名，在用类创建一个具体对象时自动调用，不可缺少，比如Form1( )；另外一种是自己定义的用户方法，比如该类中的Form1_Load（）方法，就是在初始化窗口时，通过具体对象Form调用：Form.Form1_Load( )；</p></li><li><p><strong>访问修饰符：</strong>用来控制类、属性、方法的访问权限，常用有5个，默认私有，不能被外部访问；<br>私有的private，公共的public，受保护的protected，内部的internal，受保护内部的protect internal；</p></li></ol><blockquote><p>这里有一个重点，在定义Form1类的时候含有一个关键字partial，这里就不得不说C#语言设计一个重要的特性了，能作为大多数人开发上位机的首选，C#有一个特性就是设计的时候界面与后台分离，但是类名相同，首先看一下工程文件结构：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/919a3688cad1a40f65ceae24689bab55.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><p>可以看到，Form1.cs文件下面包含了另一个Form1.Designer.cs文件，再打开Form1.Designer.cs这个文件，是不是很惊奇，和前面一模一样，再次定义了一个命名空间HelloWorld和Form1类，这个部分类中定义了我们使用的控件、事件委托以及如Dispose方法等。<br>因为这里面的代码都是自动生成的，因此设计成了一个部分类。<br>最关键的一点，这里类也是用partial关键字修饰的，可以看到，Partial是局部类型的意思，允许我们将一个类、结构或接口分成几个部分，分别实现在几个不同的.cs文件中，用partial定义的类可以在多个地方被定义，最后C#编译器编译时会将这些类当作一个类来处理；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*@filename：Form1.Designer.cs */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> System.ComponentModel.IContainer components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;disposing&quot;&gt;</span>如果应释放托管资源，为 true；否则为 false。<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (disposing &amp;&amp; (components != <span class="literal">null</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                components.Dispose();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">base</span>.Dispose(disposing);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Windows 窗体设计器生成的代码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要修改</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 使用代码编辑器修改此方法的内容。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// Form1</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF(<span class="number">6F</span>, <span class="number">12F</span>);</span><br><span class="line">            <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">418</span>, <span class="number">331</span>);</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line">            <span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**Main: **一切程序都有入口主函数main，C#也是如此，在Program.cs文件中定义了Program类，该类中拥有主函数main( )， 在main函数中，第三行代码是一切的开始，调用Form1类的构造函数，创建一个Form对象，一切由此开始，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* @filename： Program.cs */</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            Application.Run(<span class="keyword">new</span> Form1());　　<span class="comment">//调用Form1类的构造函数，创建一个Form对象，一切由此开始</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>再来解释一下最后三个文件：第一个文件主要是应用程序发布时的一些属性设置，版本号，属性，版权之类的，其余两个文件是工具自动生成的一些设置文件，不再过多赘述；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* @filename：Assemblylnfo.cs*/</span></span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.CompilerServices;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有关程序集的一般信息由以下</span></span><br><span class="line"><span class="comment">// 控制。更改这些特性值可修改</span></span><br><span class="line"><span class="comment">// 与程序集关联的信息。</span></span><br><span class="line">[<span class="meta">assembly: AssemblyTitle(<span class="meta-string">&quot;HelloWorld&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyDescription(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyConfiguration(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCompany(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyProduct(<span class="meta-string">&quot;HelloWorld&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCopyright(<span class="meta-string">&quot;Copyright ©  2018&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyTrademark(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyCulture(<span class="meta-string">&quot;&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 ComVisible 设置为 false 会使此程序集中的类型</span></span><br><span class="line"><span class="comment">//对 COM 组件不可见。如果需要从 COM 访问此程序集中的类型</span></span><br><span class="line"><span class="comment">//请将此类型的 ComVisible 特性设置为 true。</span></span><br><span class="line">[<span class="meta">assembly: ComVisible(false)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果此项目向 COM 公开，则下列 GUID 用于类型库的 ID</span></span><br><span class="line">[<span class="meta">assembly: Guid(<span class="meta-string">&quot;094ac56a-7a59-4f32-a2eb-857135be4d2c&quot;</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 程序集的版本信息由下列四个值组成: </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//      主版本</span></span><br><span class="line"><span class="comment">//      次版本</span></span><br><span class="line"><span class="comment">//      生成号</span></span><br><span class="line"><span class="comment">//      修订号</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 可以指定所有值，也可以使用以下所示的 &quot;*&quot; 预置版本号和修订号</span></span><br><span class="line"><span class="comment">// 方法是按如下所示使用“*”: :</span></span><br><span class="line"><span class="comment">// [assembly: AssemblyVersion(&quot;1.0.*&quot;)]</span></span><br><span class="line">[<span class="meta">assembly: AssemblyVersion(<span class="meta-string">&quot;1.0.0.0&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">assembly: AssemblyFileVersion(<span class="meta-string">&quot;1.0.0.0&quot;</span>)</span>]</span><br></pre></td></tr></table></figure><h1 id="三、实现-Hello，World-窗体"><a href="#三、实现-Hello，World-窗体" class="headerlink" title="三、实现 Hello，World 窗体"></a>三、实现 Hello，World 窗体</h1><blockquote><p>下面就正式开始C#程序的设计，首先是界面的实现，可以随意从控件工具箱中拖放控件到窗体中，这里我拖动两个Button和一个TextBox，并在右边设置框中修改每个控价的属性，界面如图：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/b52e21d7a228e978f2fa6fc8f626864c.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><p>这个时候如果查看Form1.cs文件，会发现和之前一样，这里就需要介绍另外几个开发GUI界面的知识点了:</p><blockquote><p>首先，我们想要实现的功能是：<br>当按下Send按钮时，文本框显示^_^Hello，World^_^字样，当按下Clear按钮时，文本框清空；</p></blockquote><p>这属于人机交互，一般人机交互的处理方式有两种：</p><ul><li>第一种是查询处理方式，比如在DOS系统下、Linux系统等命令行下的程序设计。</li><li>第二种是事件处理机制，有了很多的优越性，由传统的查询法耗费CPU一直在检测，变成了事件处理机制下的主动提醒告知，大幅度减轻CPU资源浪费，在事件处理机制中有以下几个概念：<blockquote></blockquote><p><strong>事件源（EventSource）：</strong>描述人机交互中事件的来源，通常是一些控件；<br><strong>事件（ActionEvent）：</strong>事件源产生的交互内容，比如按下按钮；<br><strong>事件处理：</strong>这部分也在C++中被叫做回调函数，当事件发生时用来处理事件；</p></li></ul><p><strong>注：这部分在单片机中也是如此，中断源产生中断，然后进入中断服务函数进行响应；</strong></p><p>清楚了这几个概念后，就来实现我们想要的功能:<br>按下按钮是一个事件，那么，如何编写或者在哪编写这个事件的事件处理函数呢？在VS中很方便，只需要双击这个控件，VS就会自动将该控件的事件处理函数添加进Form1.cs文件，此处我先双击“Send”按钮，可以看到VS自动添加进了 private void button1_Click(object sender, EventArgs e) 这个方法，</p><p>然后在里面编写代码，让文本框显示：这里所有的控件都是一个具体的对象，我们要通过这些对象设置其属性或者调用其方法；<br>同样的道理，双击Clear按钮，添加文本框清空代码，完整代码如下:</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户项目工程自定义命名空间HelloWorld</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HelloWorld</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//定义了一个名称为Form1的公共类，并且在定义类的同时创建了一个这个类的对象，名为Form</span></span><br><span class="line">    <span class="comment">//partial关键字</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//与类同名的构造方法</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按下Send按钮</span></span><br><span class="line">            textBox1.Text = <span class="string">&quot;^_^Hello,World^_^&quot;</span>;    <span class="comment">//文本框显示    </span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//按下Clear按钮</span></span><br><span class="line">            textBox1.Text = <span class="string">&quot;&quot;</span>;                      <span class="comment">//文本框清空</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>至此，大功告成，第一个应用程序创建成功，点击启动按钮看下效果：</p></blockquote><img src="https://s2.51cto.com/images/blog/202106/28/cc36772036eb28b6199c505afcadb933.png?x-oss-process=image/watermark,size_16,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk="><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_13640625/3021603">C#上位机开发（二）—— Hello，World</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过C#完成第一个程序编写运行 Hello World</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="上位机" scheme="https://zml3589110.github.io/tags/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
    <category term="第一个程序" scheme="https://zml3589110.github.io/tags/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>C#上位机系列之一（了解上位机）</title>
    <link href="https://zml3589110.github.io/posts/3443688373.html"/>
    <id>https://zml3589110.github.io/posts/3443688373.html</id>
    <published>2022-07-27T03:09:20.000Z</published>
    <updated>2022-07-27T03:16:44.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么需要上位机"><a href="#为什么需要上位机" class="headerlink" title="为什么需要上位机"></a>为什么需要上位机</h1><blockquote><p> 在单片机项目开发中，上位机也是一个很重要的部分，主要用于数据显示（波形、温度等）、用户控制（LED，继电器等），下位机（单片机）与 上位机之间要进行数据通信的两种方式都是基于串口的：</p></blockquote><h1 id="上位机开发类型"><a href="#上位机开发类型" class="headerlink" title="上位机开发类型"></a>上位机开发类型</h1><ul><li><strong>USB转串口</strong> —— 上位机和下位机通过USB转串口连接线直接相连进行数据交互；</li><li><strong>串口转WIFI（ESP8266）</strong> ——  上位机和下位机基于TCP&#x2F;IP协议通过WIFI传输数据；</li><li><strong>串口转蓝牙（HC-06）</strong>—— 不多用，暂不介绍；</li></ul><p>　　</p><h2 id="上位机软软件开发主要包括以下两种："><a href="#上位机软软件开发主要包括以下两种：" class="headerlink" title="上位机软软件开发主要包括以下两种："></a>上位机软软件开发主要包括以下两种：</h2><ol><li><p>Windows上位机（EXE可执行程序）<br>在Windows上，最早用VB语言开发，后来由于C++的发展，采用MFC开发，近几年，微软发布了基于.NET框架的面向对象语言C#，更加稳定安全，再配合微软强大的VS进行开发，效率奇高；<br><strong>另外，如果想要在Linux上跨平台运行，可以选用Qt；如果想要更加丰富好看的数据显示界面，可以选用Labview开发；</strong></p></li><li><p>Android上位机（APP）<br>在Android操作系统上，主要采用Java语言，使用WIFI或者蓝牙基于TCP&#x2F;IP协议传输数据，利用Android Studio开发；</p></li></ol><p><strong>在此，我们主要介绍如何通过VS + C#开发电脑上位机，其它上位机的开发暂且不论。</strong></p><blockquote><p>注：VS下载与安装参考这篇较详细的<a href="https://blog.csdn.net/qq_36556893/article/details/79430133">博客</a></p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_13640625/3021604">C#上位机开发（一）—— 了解上位机</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">什么是上位机？C#怎么做上位机？</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="上位机" scheme="https://zml3589110.github.io/tags/%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>C#退出应用程序方法</title>
    <link href="https://zml3589110.github.io/posts/1995699131.html"/>
    <id>https://zml3589110.github.io/posts/1995699131.html</id>
    <published>2022-07-27T02:57:20.000Z</published>
    <updated>2022-07-27T03:00:16.615Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-退出应用程序的几种方法"><a href="#C-退出应用程序的几种方法" class="headerlink" title="C# 退出应用程序的几种方法"></a>C# 退出应用程序的几种方法</h1><blockquote><p>Process.GetCurrentProcess().Kill(); 这个方法试了报错</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Application.Exit();<span class="comment">//好像只在主线程可以起作用，而且当有线程，或是阻塞方法的情况下，很容易失灵</span></span><br><span class="line"><span class="keyword">this</span>.Close();<span class="comment">//只是关闭当前窗体。</span></span><br><span class="line">Application.ExitThread();<span class="comment">//退出当前线程上的消息循环，并关闭该线程上的所有窗口。 也会失灵</span></span><br><span class="line">Environment.Exit(<span class="number">0</span>); <span class="comment">//前面三种方法都不能很好的退出程序，此方法可以完全退出程序，这个要强制得多。</span></span><br><span class="line">Process.GetCurrentProcess().Kill();<span class="comment">//此方法完全奏效，绝对是完全退出。</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_45499836/article/details/124021582">C# 退出应用程序的几种方法)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 退出应用程序方法收集</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="关闭程序" scheme="https://zml3589110.github.io/tags/%E5%85%B3%E9%97%AD%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>C#窗体之一（esc退出窗体）</title>
    <link href="https://zml3589110.github.io/posts/2033967494.html"/>
    <id>https://zml3589110.github.io/posts/2033967494.html</id>
    <published>2022-07-27T02:54:20.000Z</published>
    <updated>2022-07-27T03:00:16.612Z</updated>
    
    <content type="html"><![CDATA[<h1 id="直接在当前窗体添加代码"><a href="#直接在当前窗体添加代码" class="headerlink" title="直接在当前窗体添加代码"></a>直接在当前窗体添加代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//esc退出窗体</span></span><br><span class="line"> <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="built_in">bool</span> <span class="title">ProcessCmdKey</span>(<span class="params"><span class="keyword">ref</span> System.Windows.Forms.Message msg , System.Windows.Forms.Keys keyData</span>) <span class="comment">//激活回车键</span></span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">  <span class="built_in">int</span> WM_KEYDOWN=<span class="number">256</span>;       </span><br><span class="line">  <span class="built_in">int</span> WM_SYSKEYDOWN = <span class="number">260</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(msg.Msg == WM_KEYDOWN | msg.Msg == WM_SYSKEYDOWN)</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">switch</span>(keyData)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">case</span> Keys.Escape:</span><br><span class="line">     <span class="keyword">this</span>.Close();<span class="comment">//csc关闭窗体</span></span><br><span class="line">     <span class="keyword">break</span>;   </span><br><span class="line">   &#125;  </span><br><span class="line">   </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.cnblogs.com/mingfei200169/articles/578222.html">c#中快捷键的设置(esc退出窗体)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 通过 esc 按键退出当前窗体</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="窗体" scheme="https://zml3589110.github.io/tags/%E7%AA%97%E4%BD%93/"/>
    
    <category term="esc" scheme="https://zml3589110.github.io/tags/esc/"/>
    
  </entry>
  
  <entry>
    <title>了解C#和WinForm</title>
    <link href="https://zml3589110.github.io/posts/2295543441.html"/>
    <id>https://zml3589110.github.io/posts/2295543441.html</id>
    <published>2022-07-27T01:24:20.000Z</published>
    <updated>2022-07-27T03:00:16.608Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是-C-？"><a href="#什么是-C-？" class="headerlink" title="什么是 C# ？"></a>什么是 C# ？</h1><p>C#是一个现代的、通用的、面向对象的、面向组件、结构化语言C#的构想十分接近C和C++,是一门面向对象的编程语言，与java非常相似。</p><h1 id="C-的特点"><a href="#C-的特点" class="headerlink" title="C#的特点"></a>C#的特点</h1><ul><li><p><strong>简单、安全</strong></p><blockquote><p>在 C++ 和 C 语言中程序员最头疼的问题就是指针问题，在 C# 语言中已经不再使用指针，而且不允许直接读取内存等不安全的操作。它比 C、C++、Java 提供了更多的数据类型，并且每个数据类型都是固定大小的。此外还提供了命名空间来管理 C# 文件，命名空间 相当于一个文件夹，在创建程序时，允许在一个命名空间中创建一个或多个类，方便调用和重用</p></blockquote></li><li><p><strong>面向对象</strong></p></li></ul><p>与其他面向对象语言一样，C# 语言也具有面向对象语言的基本特征，即<code>封装、继承、 多态</code>。</p><blockquote><pre><code>**封装：**就是将代码看作一个整体，例如使用类、方法、接口等。在使用定义好的类、 方法、接口等对象时不必考虑其细节，只需要知道其对象名以及所需要的参数即可，也是一种提升代码安全性的方法。**继承：**是一种体现代码重用性的特性，减少代码的冗余，但在 C# 语言中仅支持单继承。**多态：**不仅体现了代码的重用性，也体现了代码的灵活性，它主要通过继承和实现接口的方式，让类或接口中的成员表现出不同的作用</code></pre></blockquote><ul><li><p><strong>支持跨平台</strong><br>最早的 C# 语言仅能在 Windows 平台上开发并使用，目前最新的 C# 6.0 版本已经能在多个操作系统上使用，例如在 Mac、Linux 等。此外，还能将其应用到手机、PDA 等设备上。</p></li><li><p><strong>开发多种类型的程序</strong><br>C# 语言不仅能开发在控制台下运行的应用程序，也能开发 Windows 窗体应用程序、网站、手机应用等多种应用程序，并且其提供的 Visual Studio 2015 开发工具中也支持多种类型的程序，让开发人员能快速地构建 C# 应用程序</p></li></ul><h1 id="了解C-、-NET、Winform的关系"><a href="#了解C-、-NET、Winform的关系" class="headerlink" title="了解C#、.NET、Winform的关系"></a>了解C#、.NET、Winform的关系</h1><ul><li>.NET 是一个开发平台，而 C# 是一种在 .NET 开发平台上使用的编程语言，目前能在 .NET 平台上使用的开发语言很多，例如 Visual Basic .NET、Python、J#、Visual C++.NET 等。但在 .NET 平台上使用最多的是 C# 语言。</li><li>WinForm 是 Windows Form 的简称，是基于 .NET Framework 平台的客户端（PC软件）开发技术，一般使用 C# 编程。C# WinForm 编程需要创建「Windows窗体应用程序」项目。</li><li>.NET 提供了大量 Windows 风格的控件和事件，我们可以直接拿来使用，上手简单，开发快速。</li></ul><h1 id="快速创建Winform程序"><a href="#快速创建Winform程序" class="headerlink" title="快速创建Winform程序"></a>快速创建Winform程序</h1><blockquote><p>使用VS2017,.NET Framework 4.6.1</p></blockquote><ul><li>一、创建窗体应用程序非常简单，依次选择“文件”一“新建”一“项目”命令，弹出如下图所示的对话框，选择Windows窗体应用程序，修改位置即可。</li></ul><img src="https://img-blog.csdnimg.cn/img_convert/86b77ebdd9cff3f042e4197ec55f491e.png#pic_center"><ul><li>二、通过工具箱中的label标签，button按钮，comboBox下拉按钮，直接在拖拽到窗体中；按钮的单击事件直接双击可以跳到对应的方法中进行代码编辑；还需要修改对应标签属性中的Name，方便后续的编辑；创建完成后出现如下界面</li></ul><img src="https://img-blog.csdnimg.cn/f586b06ae1094573927e288cfe900c0f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>三、点击启动按钮，出现自己编写的窗体界面</li></ul><img src="https://img-blog.csdnimg.cn/b6b0618317904fb4903a2f90ef0f9d43.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><h1 id="Winform菜单和工具栏"><a href="#Winform菜单和工具栏" class="headerlink" title="Winform菜单和工具栏"></a>Winform菜单和工具栏</h1><img src="https://img-blog.csdnimg.cn/4931266cefef42088836a0b8601752c7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_9,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>一、ListBox:列表框</li></ul><img src="https://img-blog.csdnimg.cn/a5cceedc3b244a4088eca5ae68129299.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_16,color_FFFFFF,t_70,g_se,x_16"><ul><li>二、ComboBox:下拉框列表</li></ul><img src="https://img-blog.csdnimg.cn/8577ddc44331479a8b3e3f653d9fb254.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16"><ul><li>三、CheckedListBox:复选框列表</li><li>四、MaskedTextBox:用于输入指定格式的内容，比如电话，邮编等信息，指定格式。</li><li>五、numericUpdown:数字显示框，点击向上或者向下来增加或减少数字的显示</li><li>六、RichTextBox:富文本框</li></ul><img src="https://img-blog.csdnimg.cn/575ec2000b2f42959b326882e3e3fb7f.png"><ul><li>七、MenuStrip:窗体上添加菜单栏控件 MenuStrip，直接点击 MenuStrip ，在右边的 Windows 窗体中就可以显示，输入具体的值时需要有提示字母，可以通过&amp;+字母实现</li><li>八、ToolStrip:和添加菜单栏类似，在工具箱中将 ToolStrip 控件直接拖到 Windows 窗体中即可；如果需要指定图片和文字，可以通过属性中的DisplayStyle设置</li></ul><img src="https://img-blog.csdnimg.cn/175497e93125477b8f8f9f57326ba809.png#pic_center"><ul><li>九、DataGridView:在网格中可以用自定义数据的行和列</li><li>十、事件:可以通过属性中的Click指定不同按钮的相同事件</li></ul><img src="https://img-blog.csdnimg.cn/915a488732164cab97249542371da64f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center"><ul><li>十一、容器</li></ul><img src="https://img-blog.csdnimg.cn/e3569f476a854c74af6ad0a295d637df.png#pic_center"><p><strong>在容器中可以放入需要的组件:</strong></p><img src="https://img-blog.csdnimg.cn/24fd881456e8411a9aaf468a5150ca88.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_10,color_FFFFFF,t_70,g_se,x_16"><ul><li>十二、属性<blockquote><p><strong>Anchor</strong>属性可以将内部容器窗体的拉伸大小随外部窗体的改变而改变</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/0ff92359c8aa4fe5882b10091052c2aa.png"><blockquote><p><strong>Dock</strong>属性将控件停靠在窗体的边缘或者填充窗体</p></blockquote><blockquote><p><strong>IsMdiContainer</strong> 将一个窗体设置为主窗体</p></blockquote><img src="https://img-blog.csdnimg.cn/d1f273531aea4affbaa89bd73ffeb9e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_15,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/d1f273531aea4affbaa89bd73ffeb9e2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_15,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>ControlBox</strong>是将窗体中的最大最小设置为不可见状态</p></blockquote><img src="https://img-blog.csdnimg.cn/d921658fe4dc4e14b8281fe010b6de73.png"><blockquote><p><strong>AcceptButton</strong>设置为true时用户可以通过回车键确认</p></blockquote><blockquote><p><strong>Show和ShowDialog的区别</strong></p></blockquote><ul><li>show是界面可以同时存在，第一个界面出现，出现第二个界面时可以点击第一个界面，而showDialog时出现第二个界面时无法点击第一个界面，必须关闭第二个界面才能点击第一个界面。</li></ul><h1 id="Form初始化、布局"><a href="#Form初始化、布局" class="headerlink" title="Form初始化、布局"></a>Form初始化、布局</h1><ul><li>form初始化操作时是先执行构造方法中的InitializeComponent()，然后执行load()，包括实例化——属性设置——事件注册——将控件添加到当前窗体的Controls中。</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>参考文章：<br><a href="http://c.biancheng.net/csharp/winform/">C语言中文网</a><br><a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/tour-of-csharp/">C#教程</a></p><ol><li>C#开发窗体应用方便快捷，界面结构整齐。</li><li>控件的使用不仅可以通过拖拽的方式实现，也可以使用代码的方式实现，添加到Controls中，然后编写相应的逻辑代码。</li><li>VS2017快捷键设置：工具——&gt;选项</li></ol><img src="https://img-blog.csdnimg.cn/a423111d12f043dbb6589da4b8765afa.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAenprMjAyMjAzMDY=,size_20,color_FFFFFF,t_70,g_se,x_16"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/m0_67729518/article/details/123518389">WinForm学习</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">了解基本的C#开发信息</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="WinForm" scheme="https://zml3589110.github.io/tags/WinForm/"/>
    
    <category term=".NET" scheme="https://zml3589110.github.io/tags/NET/"/>
    
  </entry>
  
  <entry>
    <title>VBA文件管理之一（访问带密码共享）</title>
    <link href="https://zml3589110.github.io/posts/2543819108.html"/>
    <id>https://zml3589110.github.io/posts/2543819108.html</id>
    <published>2022-07-25T12:29:20.000Z</published>
    <updated>2022-07-25T12:41:35.733Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过Shell命令访问共享文件"><a href="#通过Shell命令访问共享文件" class="headerlink" title="通过Shell命令访问共享文件"></a>通过Shell命令访问共享文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Sub 访问共享文件()</span><br><span class="line">IPName &#x3D; &quot;192.168.0.10&quot;</span><br><span class="line">UserName &#x3D; &quot;user&quot;</span><br><span class="line">Passwd &#x3D; &quot;password&quot;</span><br><span class="line">Shell &quot;net use * &#x2F;delete &#x2F;y&quot;, vbHide</span><br><span class="line">Shell &quot;net use \\&quot; &amp; IPName &amp; &quot; &quot; &amp; Passwd &amp; &quot; &#x2F;user:&quot; &amp; UserName, vbHide</span><br><span class="line">Shell &quot;C:\WINDOWS\explorer.exe \\&quot; &amp; IPName &amp; &quot;\&quot;, vbMaximizedFocus</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure><h1 id="通过VB-NET登录带密码的电脑"><a href="#通过VB-NET登录带密码的电脑" class="headerlink" title="通过VB.NET登录带密码的电脑"></a>通过VB.NET登录带密码的电脑</h1><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ul><li>很简单只有一句,但是由于shell语句都是异步的所以最好不要放在过程中使用,我一般放在load 里</li></ul><h2 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h2><ul><li>如果想要登录ip地址为192.168.50.193下的共享文件夹</li></ul><blockquote><p>user: 后跟要登陆计算机的登录名 然后空一格写密码<br>第二句是退出登录,一般用在程序关闭的时候.以免计算机一直处于登录状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Shell(&quot;Net use \\192.168.50.193\共享 &#x2F;user:gh 518518&quot;)</span><br><span class="line">Shell(&quot;Net use \\192.168.50.193\共享 &#x2F;delete&quot;)</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/601566725.html">Excel使用VBA读写有用户名及密码的网络文件夹中的文档</a></li><li><a href="https://blog.csdn.net/m0_53168509/article/details/111952385">如何用VB.NET在局域网中登录带密码的电脑</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用命令访问带密码的共享电脑中文件</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="文件管理" scheme="https://zml3589110.github.io/tags/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    
    <category term="共享文件" scheme="https://zml3589110.github.io/tags/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/"/>
    
    <category term="密码" scheme="https://zml3589110.github.io/tags/%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>VBA数据处理之三(随机数据)</title>
    <link href="https://zml3589110.github.io/posts/81989925.html"/>
    <id>https://zml3589110.github.io/posts/81989925.html</id>
    <published>2022-07-25T12:04:20.000Z</published>
    <updated>2022-07-25T12:41:35.717Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、用EXCEL生成随机数"><a href="#1、用EXCEL生成随机数" class="headerlink" title="1、用EXCEL生成随机数"></a>1、用EXCEL生成随机数</h1><ul><li>rand()  是 [0,1）,随机到的是小数</li><li>randbetween(a,b)   是  [a,b] ,但是只能是整数</li></ul><blockquote><p>如果想在EXCEL公式用randbetween()随机小数呢？</p><ul><li>随机，randbetween() 只能随机整数，如果是要小数，那就先乘100，随机完之后再除100这样处理</li><li>randbetween(a,b)   是  [a,b]</li><li>RANDBETWEEN(1000<em>G49,1000</em>H49)&#x2F;1000</li></ul></blockquote><h1 id="2、用VBA生成随机数"><a href="#2、用VBA生成随机数" class="headerlink" title="2、用VBA生成随机数"></a>2、用VBA生成随机数</h1><h2 id="方法说明"><a href="#方法说明" class="headerlink" title="方法说明"></a>方法说明</h2><blockquote><p>在VBA里</p></blockquote><ul><li>rnd是[0,1）之间随机左闭右开区间</li></ul><blockquote><p>方法</p></blockquote><ul><li>整数[a,b]随机正确写法为 int(a+(b-a+1)*rnd())</li><li>小数的随机[a,b)  随机正确写法为 (a+(b-a)*rnd()  ’但是右边还是不是闭区间有瑕疵</li><li>这样来说，小数随机，如果要求两边是闭区间，不如用整数随机方法，把小数*1000等变大为整数，最后再除，也是一样得把。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">int(1+[0,1)*(6-1+1))</span><br><span class="line"></span><br><span class="line">&#x3D; int(1+[0,1)*6)</span><br><span class="line"></span><br><span class="line">&#x3D;int(1+[0,6))</span><br><span class="line"></span><br><span class="line">&#x3D;int([1,7))</span><br><span class="line"></span><br><span class="line">&#x3D;[1,6]</span><br><span class="line"></span><br><span class="line">0.1+[0,1)*(0.6-0.1)</span><br><span class="line"></span><br><span class="line">&#x3D;0.1+ [0,1)*0.5</span><br><span class="line"></span><br><span class="line">&#x3D;0.1+[0,0.5)</span><br><span class="line"></span><br><span class="line">&#x3D;[0.1,0.6)</span><br></pre></td></tr></table></figure><ul><li><strong>官方解释:</strong></li></ul><blockquote><p>为了生成某个范围内的随机整数，可使用以下公式：<br>Int((upperbound - lowerbound + 1) * Rnd + lowerbound)<br>这里，upperbound 是随机数范围的上限，而 lowerbound 则是随机数范围的下限。<br>注意 若想得到重复的随机数序列，在使用具有数值参数的 Randomize 之前直接调用具有负参数值的 Rnd。使用具有同样 number 值的 Randomize 是不会得到重复的随机数序列的。</p></blockquote><ul><li>rnd 是左闭右开区间   [0,1)</li><li>如果要生成 a~b之间的随机数，一般是int(a+ (b-a+1)*rnd)</li><li>因为一般都是要在整数之间随机 要用 int()</li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li><strong>1、生成1-10的随机数:</strong><blockquote><p>p1 &#x3D; Int(1 + 10* Rnd())            —这里正确，刚好10&#x3D;10-1+1<br>p1 &#x3D; Int(1 + (10-1+1) * Rnd())     –总是正确</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918151600317.png"><ul><li><strong>2、生成 2-9之间的随机数:</strong><blockquote><p>p2 &#x3D; Int( 2 + 9* Rnd() )              –错误的<br>p2 &#x3D; Int(2 + (9-2+1) * Rnd())     —-正确</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918152829586.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5aWU6LeR55qE54qA54mb5YWI55Sf,size_7,color_FFFFFF,t_70,g_se,x_16"><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><ul><li><strong>1、rnd(-1)</strong><blockquote><p>用永远生成相同的随机数<br>相当于固定随机数种子了？这样的应用情景是？</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918155514687.png"><ul><li><strong>2、rnd(0)</strong><blockquote><p>虽然随机序列都一样，但和rnd(-1) 不同<br>每次连续随机，也是一样的随机数种子，总是用上次的<br>但是如果先停止，再重新开始，就是用下一个随机种子，会和以前的不同</p></blockquote></li></ul><img src="https://img-blog.csdnimg.cn/20210918160010696.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5aWU6LeR55qE54qA54mb5YWI55Sf,size_8,color_FFFFFF,t_70,g_se,x_16"><h1 id="测试随机数的代码"><a href="#测试随机数的代码" class="headerlink" title="测试随机数的代码"></a>测试随机数的代码</h1><p><strong>测试方法：</strong></p><blockquote><p>这个进行了多轮随机<br>p1 &#x3D; Int(1 + (10) * Rnd())   ‘Rnd()分别修改为 rnd(-1)   rnd(0)  rnd(1)  rnd(999) 看效果</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">Private p1</span><br><span class="line">Private s1, s2, s3, s4, s5, s6, s7, s8, s9, s10</span><br><span class="line">Private S</span><br><span class="line"> </span><br><span class="line">Sub tt1()</span><br><span class="line"> </span><br><span class="line">Call intial1</span><br><span class="line"> </span><br><span class="line">S &#x3D; 10000</span><br><span class="line">For i &#x3D; 1 To S</span><br><span class="line">Call RR1</span><br><span class="line">Call SS1</span><br><span class="line">&#39;    Debug.Print p1</span><br><span class="line">Next</span><br><span class="line">        </span><br><span class="line">   Call SS2</span><br><span class="line">End Sub</span><br><span class="line"> </span><br><span class="line">Function intial1() </span><br><span class="line">s1 &#x3D; 0</span><br><span class="line">s2 &#x3D; 0</span><br><span class="line">s3 &#x3D; 0</span><br><span class="line">s4 &#x3D; 0</span><br><span class="line">s5 &#x3D; 0</span><br><span class="line">s6 &#x3D; 0</span><br><span class="line">s7 &#x3D; 0</span><br><span class="line">s8 &#x3D; 0</span><br><span class="line">s9 &#x3D; 0</span><br><span class="line">s10 &#x3D; 0</span><br><span class="line">End Function</span><br><span class="line"> </span><br><span class="line">Function SS2()</span><br><span class="line">  Debug.Print &quot;随到1的平均次数是&#x3D; &quot; &amp; s1 &#x2F; S &amp; &quot; s1&#x3D;&quot; &amp; s1</span><br><span class="line">  Debug.Print &quot;随到2的平均次数是&#x3D; &quot; &amp; s2 &#x2F; S &amp; &quot; s2&#x3D;&quot; &amp; s2</span><br><span class="line">  Debug.Print &quot;随到3的平均次数是&#x3D; &quot; &amp; s3 &#x2F; S &amp; &quot; s3&#x3D;&quot; &amp; s3</span><br><span class="line">  Debug.Print &quot;随到4的平均次数是&#x3D; &quot; &amp; s4 &#x2F; S &amp; &quot; s4&#x3D;&quot; &amp; s4</span><br><span class="line">  Debug.Print &quot;随到5的平均次数是&#x3D; &quot; &amp; s5 &#x2F; S &amp; &quot; s5&#x3D;&quot; &amp; s5</span><br><span class="line">  Debug.Print &quot;随到6的平均次数是&#x3D; &quot; &amp; s6 &#x2F; S &amp; &quot; s6&#x3D;&quot; &amp; s6</span><br><span class="line">  Debug.Print &quot;随到7的平均次数是&#x3D; &quot; &amp; s7 &#x2F; S &amp; &quot; s7&#x3D;&quot; &amp; s7</span><br><span class="line">  Debug.Print &quot;随到8的平均次数是&#x3D; &quot; &amp; s8 &#x2F; S &amp; &quot; s8&#x3D;&quot; &amp; s8</span><br><span class="line">  Debug.Print &quot;随到9的平均次数是&#x3D; &quot; &amp; s9 &#x2F; S &amp; &quot; s9&#x3D;&quot; &amp; s9</span><br><span class="line">  Debug.Print &quot;随到10的平均次数是&#x3D; &quot; &amp; s10 &#x2F; S &amp; &quot; s10&#x3D;&quot; &amp; s10</span><br><span class="line"> </span><br><span class="line">End Function</span><br><span class="line"> </span><br><span class="line">Function RR1()</span><br><span class="line"> </span><br><span class="line">Randomize</span><br><span class="line">p1 &#x3D; Int(1 + (10) * Rnd())   &#39;Rnd()分别修改为 rnd(-1)   rnd(0)  rnd(1)  rnd(999) 看效果</span><br><span class="line">&#39;Debug.Print p1</span><br><span class="line">End Function</span><br><span class="line"></span><br><span class="line">Function SS1()</span><br><span class="line"> </span><br><span class="line">Select Case p1</span><br><span class="line">   Case Is &#x3D; 1</span><br><span class="line">  s1 &#x3D; s1 + 1</span><br><span class="line">   Case Is &#x3D; 2</span><br><span class="line">  s2 &#x3D; s2 + 1</span><br><span class="line">   Case Is &#x3D; 3</span><br><span class="line">  s3 &#x3D; s3 + 1</span><br><span class="line">   Case Is &#x3D; 4</span><br><span class="line">  s4 &#x3D; s4 + 1</span><br><span class="line">   Case Is &#x3D; 5</span><br><span class="line">  s5 &#x3D; s5 + 1</span><br><span class="line">   Case Is &#x3D; 6</span><br><span class="line">  s6 &#x3D; s6 + 1</span><br><span class="line">   Case Is &#x3D; 7</span><br><span class="line">  s7 &#x3D; s7 + 1</span><br><span class="line">   Case Is &#x3D; 8</span><br><span class="line">  s8 &#x3D; s8 + 1</span><br><span class="line">   Case Is &#x3D; 9</span><br><span class="line">  s9 &#x3D; s9 + 1</span><br><span class="line">   Case Is &#x3D; 10</span><br><span class="line">  s10 &#x3D; s10 + 1</span><br><span class="line">End Select</span><br><span class="line"> </span><br><span class="line">End Function</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/xuemanqianshan/article/details/120367890">VBA的随机数生成：整数范围内随机（更好些），小数范围内随机</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA数随机数据产生</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="数据处理" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="随机数生成" scheme="https://zml3589110.github.io/tags/%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>VBA窗体相关设置汇总</title>
    <link href="https://zml3589110.github.io/posts/2061956688.html"/>
    <id>https://zml3589110.github.io/posts/2061956688.html</id>
    <published>2022-07-23T03:10:20.000Z</published>
    <updated>2022-07-23T03:26:59.257Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VBA去掉窗体的背景图片"><a href="#VBA去掉窗体的背景图片" class="headerlink" title="VBA去掉窗体的背景图片"></a>VBA去掉窗体的背景图片</h1><ul><li>解决办法1：在窗体中属性里找 picture，选中（Bitmap），然后 del 就可以清除</li><li>解决办法2：在代码里添加代码：Me.Picture &#x3D; Nothing</li></ul><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/623726551390256772.html">在VB中怎么去掉窗体的背景图片？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA窗体相关设置处理汇总</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="窗体" scheme="https://zml3589110.github.io/tags/%E7%AA%97%E4%BD%93/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="图片" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>VBA命令按钮设置为透明</title>
    <link href="https://zml3589110.github.io/posts/2992967553.html"/>
    <id>https://zml3589110.github.io/posts/2992967553.html</id>
    <published>2022-07-23T02:52:20.000Z</published>
    <updated>2022-07-23T03:26:59.241Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BackStyle-属性"><a href="#BackStyle-属性" class="headerlink" title="BackStyle 属性"></a>BackStyle 属性</h1><blockquote><p>使用 BackStyle 属性可以指定控件是否透明。Byte 型，可读写。<br>expression.BackStyle<br>expression     必需。返回“应用于”列表中的一个对象的表达式。</p></blockquote><ul><li>BackStyle 属性使用下列设置：</li></ul><table><thead><tr><th><strong>设置</strong></th><th><strong>Visual Basic</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>普通</td><td>1</td><td>（除了<a href="http://www.office-cn.net/t/acvba/html_acprobackstyle.htm">选项组</a>之外，其余控件都默认为该设置）。控件内部的颜色由 <a href="http://www.office-cn.net/t/acvba/html_acprobackcolor.htm">BackColor</a> 属性决定。</td></tr><tr><td>透明</td><td>0</td><td>（选项组的默认设置）。控件是透明的，控件后面的窗体或报表颜色可见。</td></tr></tbody></table><h1 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h1><ul><li>命令按钮不像Label，IMage那样可以简单的设置为透明的属性的，Label，Image这样的控件再做的时候都提供了Backstyle这个属性设置，从而可以很简单的修改它们的透明性质，但是Button这样的命令按钮却没有提供，</li></ul><p><strong>因此想设计一个透明的命令按钮常用的有三种做法:</strong></p><ul><li>1.用标签Label来替代命令按钮来执行命令功能，把它设置为透明的即可，但这种方法的缺点是label是平面的，不好看;</li><li>2.用Image来替代命令按钮来执行命令功能，用它是非常灵活的，效果极好，最常用，因为它本身有个Backstyle属性，从而可以将它设置为透明的，另外做一个或者找一个漂亮的图片加在里边就行了，图片是什么效果的做出来的按钮就是什么效果的;</li><li>3.第3种就有些复杂，不常用，且比较难，就是继承VB提供的按钮，然后自己再他的基础上给你编写Backstyle的属性，也就是做一个控件了，这个实用性就很低了，不过有时间可以试着做一下。</li></ul><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://www.office-cn.net/t/acvba/html_acprobackstyle.htm">BackStyle 属性</a></li><li><a href="https://zhidao.baidu.com/question/544324686.html">VB中的命令按钮怎么设置为透明的？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">将VBA命令按钮设置为透明</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="命令按钮" scheme="https://zml3589110.github.io/tags/%E5%91%BD%E4%BB%A4%E6%8C%89%E9%92%AE/"/>
    
    <category term="透明" scheme="https://zml3589110.github.io/tags/%E9%80%8F%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>SQL语句之一(WHERE条件查询)</title>
    <link href="https://zml3589110.github.io/posts/3624342376.html"/>
    <id>https://zml3589110.github.io/posts/3624342376.html</id>
    <published>2022-07-23T02:12:20.000Z</published>
    <updated>2022-07-23T03:26:59.257Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>SQL WHERE是SQL的条件查询语句。SQL查询里的条件指定了要返回满足什么标准的信息。条件的值是TRUE或FALSE，从而限制查询中获取的数据。WHERE子句用于给查询添加条件，从而去除用户不需要的数据。WHERE自己本身比较简单，本文更多地介绍WHERE子句与比较运算符、逻辑运算符和通配符这三种方式对检索条件进行过滤。<br>WHERE子句里可以有多个条件，它们之间以操作符 AND 或 OR 连接。</p></blockquote><h1 id="SQL-WHERE-语法"><a href="#SQL-WHERE-语法" class="headerlink" title="SQL WHERE 语法"></a>SQL WHERE 语法</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name operator <span class="keyword">value</span>;</span><br></pre></td></tr></table></figure><h1 id="SQL-WHERE-子句比较运算符"><a href="#SQL-WHERE-子句比较运算符" class="headerlink" title="SQL WHERE 子句比较运算符"></a>SQL WHERE 子句比较运算符</h1><blockquote><p><strong>在SQL中，我们可以使用WHERE子句对条件进行筛选，在此之前，你需要了解WHERE子句中的比较运算符。这些比较运算符的含义你可以参见下面这张表格：</strong></p></blockquote><p>|   含义   |  运算符    |<br>| :–: | :–: |<br>|  等于    |   &#x3D;   |<br>|   不等于   |  &lt;&gt;或!&#x3D;    |<br>|   小于   |   &lt;   |<br>|   小于等于（不大于）   |   &lt;&#x3D;或者!&gt;   |<br>|   大于   |  &gt;    |<br>|   大于等于（不小于）   |  &gt;&#x3D;或者!&lt;    |<br>|   不小于   |  !&lt;    |<br>|   在指定的两个数值之间   |   BETWEEN   |<br>|    为空值  |   IS NULL   |</p><ul><li>实际上你能看到，同样的含义可能会有多种表达方式，比如小于等于，可以是（&lt;&#x3D;），也可以是不大于（!&gt;）。同样不等于，可以用（&lt;&gt;），也可以用（!&#x3D;），它们的含义都是相同的，但这些符号的顺序都不能颠倒，比如你不能写（&#x3D;&lt;）。</li></ul><blockquote><p><strong>需要注意的是，你需要查看使用的DBMS是否支持，不同的DBMS支持的运算符可能是不同的，比如Access不支持（!&#x3D;），不等于应该使用（&lt;&gt;）。在MySQL中，不支持（!&gt;）（!&lt;）等。</strong></p></blockquote><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><ul><li>极客教程在<a href="https://geek-docs.com/sql/sql-tutorials/sql-select.html">SQL 查询</a>文章中使用了<a href="https://github.com/eyeandroid/sql_heros_data">heros数据表</a>，我们还是以这张表格做练习。下面我们通过比较运算符对王者荣耀的英雄属性进行条件筛选。</li></ul><blockquote><p>WHERE子句的基本格式是：SELECT ……(列名) FROM ……(表名) WHERE ……(子句条件)</p></blockquote><ol><li>比如我们想要查询所有最大生命值大于6000的英雄：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（41条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-02.png"><ol start="2"><li>想要查询所有最大生命值在5399到6811之间的英雄：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="keyword">BETWEEN</span> <span class="number">5399</span> <span class="keyword">AND</span> <span class="number">6811</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（41条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-03.png"><blockquote><p><strong>需要注意的是hp_max可以取值到最小值和最大值，即5399和6811。</strong></p></blockquote><ol start="3"><li>我们也可以对heros表中的hp_max字段进行空值检查。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果为空，说明heros表中的hp_max字段没有存在空值的数据行。</li></ul><h1 id="SQL-WHERE-子句逻辑运算符"><a href="#SQL-WHERE-子句逻辑运算符" class="headerlink" title="SQL WHERE 子句逻辑运算符"></a>SQL WHERE 子句逻辑运算符</h1><blockquote><p><strong>如果我们存在多个WHERE条件子句，可以使用逻辑运算符：</strong></p></blockquote><p>|   含义   |  逻辑运算符    |<br>| :–: | :–: |<br>|  并且    |   AND   |<br>|   或者   |  OR    |<br>|   在指定条件范围内   |   IN   |<br>|   非（否定）   |  NOT   |</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><ul><li>我们还是通过例子来看下这些逻辑运算符的使用，同样采用heros这张表的数据查询。</li></ul><ol><li>假设想要筛选最大生命值大于6000，最大法力大于1700的英雄，然后按照最大生命值和最大法力值之和从高到低进行排序。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span> <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（23条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-05.png"><ol start="2"><li>如果AND和OR同时存在WHERE子句中会是怎样的呢？假设我们想要查询最大生命值加最大法力值大于8000的英雄，或者最大生命值大于6000并且最大法力值大于1700的英雄。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> (hp_max<span class="operator">+</span>mp_max) <span class="operator">&gt;</span> <span class="number">8000</span> <span class="keyword">OR</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span> <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（33条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-06.png"><ul><li>你能看出来相比于上一个条件查询，这次的条件查询多出来了10个英雄，这是因为我们放宽了条件，允许最大生命值+最大法力值大于8000的英雄显示出来。</li></ul><blockquote><p><strong>另外你需要注意到，当WHERE子句中同时存在OR和AND的时候，AND执行的优先级会更高，也就是说SQL会优先处理AND操作符，然后再处理OR操作符。</strong></p></blockquote><ol start="3"><li>如果我们对这条查询语句OR两边的条件增加一个括号，结果会是怎样的呢？<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, hp_max, mp_max <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> ((hp_max<span class="operator">+</span>mp_max) <span class="operator">&gt;</span> <span class="number">8000</span> <span class="keyword">OR</span> hp_max <span class="operator">&gt;</span> <span class="number">6000</span>) <span class="keyword">AND</span> mp_max <span class="operator">&gt;</span> <span class="number">1700</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max<span class="operator">+</span>mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-07.png"><blockquote><p><strong>所以当WHERE子句中同时出现AND和OR操作符的时候，你需要考虑到执行的先后顺序，也就是两个操作符执行的优先级。一般来说()优先级最高，其次优先级是AND，然后是OR。</strong></p></blockquote><ol start="4"><li>如果我想要查询主要定位或者次要定位是法师或是射手的英雄，同时英雄的上线时间不在2016-01-01到2017-01-01之间。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name, role_main, role_assist, hp_max, mp_max, birthdate</span><br><span class="line"><span class="keyword">FROM</span> heros </span><br><span class="line"><span class="keyword">WHERE</span> (role_main <span class="keyword">IN</span> (<span class="string">&#x27;法师&#x27;</span>, <span class="string">&#x27;射手&#x27;</span>) <span class="keyword">OR</span> role_assist <span class="keyword">IN</span> (<span class="string">&#x27;法师&#x27;</span>, <span class="string">&#x27;射手&#x27;</span>)) </span><br><span class="line"><span class="keyword">AND</span> <span class="type">DATE</span>(birthdate) <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="string">&#x27;2016-01-01&#x27;</span> <span class="keyword">AND</span> <span class="string">&#x27;2017-01-01&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> (hp_max <span class="operator">+</span> mp_max) <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>你能看到我把WHERE子句分成了两个部分。第一部分是关于主要定位和次要定位的条件过滤，使用的是role_main in (‘法师’, ‘射手’) OR role_assist in (‘法师’, ‘射手’)。这里用到了IN逻辑运算符，同时role_main和role_assist是OR（或）的关系。</p></blockquote><ul><li><p>第二部分是关于上线时间的条件过滤。NOT代表否，因为我们要找到不在2016-01-01到2017-01-01之间的日期，因此用到了NOT BETWEEN ‘2016-01-01’ AND ‘2017-01-01’。同时我们是在对日期类型数据进行检索，所以使用到了DATE函数，将字段birthdate转化为日期类型再进行比较。关于日期的操作，可以参考极客教程提供的。</p></li><li><p>这是运行结果（6条记录）：</p></li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-08.png"><h1 id="SQL-WHERE-子句使用通配符进行过滤"><a href="#SQL-WHERE-子句使用通配符进行过滤" class="headerlink" title="SQL WHERE 子句使用通配符进行过滤"></a>SQL WHERE 子句使用通配符进行过滤</h1><blockquote><p>刚才讲解的条件过滤都是对已知值进行的过滤，还有一种情况是我们要检索文本中包含某个词的所有数据，这里就需要使用通配符。通配符就是我们用来匹配值的一部分的特殊字符。这里我们需要使用到LIKE操作符。</p></blockquote><ol><li>如果我们想要匹配任意字符串出现的任意次数，需要使用（%）通配符。比如我们想要查找英雄名中包含“太”字的英雄都有哪些：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;%太%&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><ul><li>运行结果：（2条记录）</li></ul><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-09.png"><blockquote><p><strong>需要说明的是不同DBMS对通配符的定义不同，在Access中使用的是（*）而不是（%）。另外关于字符串的搜索可能是需要区分大小写的，比如’liu%’就不能匹配上’LIU BEI’。具体是否区分大小写还需要考虑不同的DBMS以及它们的配置。</strong></p></blockquote><ol start="2"><li>如果我们想要匹配单个字符，就需要使用下划线(_)通配符。（%）和（_）的区别在于</li></ol><ul><li>（<code>%</code>）代表一个或多个字符</li><li>（<code>_</code>）只代表一个字符</li></ul><p>比如我们想要查找英雄名除了第一个字以外，包含“太”字的英雄有哪些。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> name <span class="keyword">FROM</span> heros <span class="keyword">WHERE</span> name <span class="keyword">LIKE</span> <span class="string">&#x27;_%太%&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>运行结果（1条记录）：</li></ul><p><img src="https://img.geek-docs.com/sql/tutorials/sql-select-where-10.png" alt="SQL WHERE 条件查询"></p><blockquote><p>因为太乙真人的太是第一个字符，而_%太%中的太不是在第一个字符，所以匹配不到“太乙真人”，只可以匹配上“东皇太一”。</p></blockquote><ul><li>同样需要说明的是，在Access中使用（<code>?</code>）来代替（<code>_</code>），而且在DB2中是不支持通配符（<code>_</code>）的，因此你需要在使用的时候查阅相关的DBMS文档。</li></ul><blockquote><p>你能看出来通配符还是很有用的，尤其是在进行字符串匹配的时候。不过在实际操作过程中，我还是建议你尽量少用通配符，因为它需要消耗数据库更长的时间来进行匹配。即使你对LIKE检索的字段进行了索引，索引的价值也可能会失效。如果要让索引生效，那么LIKE后面就不能以（<code>%</code>）开头，比如使用<code>LIKE &#39;%太%&#39;</code>或<code>LIKE &#39;%太&#39;</code>的时候就会对全表进行扫描。如果使用<code>LIKE &#39;太%&#39;</code>，同时检索的字段进行了索引的时候，则不会进行全表扫描。</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://geek-docs.com/sql/sql-tutorials/sql-select-where.html">SQL WHERE 条件查询（极客教程）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">SQL语句之条件 WHERE 查询，指定了要返回满足什么标准的信息</summary>
    
    
    
    <category term="编程来" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%A5/"/>
    
    <category term="数据库" scheme="https://zml3589110.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/tags/mysql/"/>
    
    <category term="WHERE" scheme="https://zml3589110.github.io/tags/WHERE/"/>
    
    <category term="条件查询" scheme="https://zml3589110.github.io/tags/%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2/"/>
    
  </entry>
  
  <entry>
    <title>VBA数据处理之二(日期处理)</title>
    <link href="https://zml3589110.github.io/posts/2278476872.html"/>
    <id>https://zml3589110.github.io/posts/2278476872.html</id>
    <published>2022-07-23T01:10:20.000Z</published>
    <updated>2022-07-23T02:06:27.218Z</updated>
    
    <content type="html"><![CDATA[<h1 id="日期基本处理"><a href="#日期基本处理" class="headerlink" title="日期基本处理"></a>日期基本处理</h1><h2 id="定义一个日期"><a href="#定义一个日期" class="headerlink" title="定义一个日期"></a>定义一个日期</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">v_date = <span class="type">Date</span>  <span class="comment">&#x27; 今天，格式为：yyyy-MM-dd</span></span><br><span class="line">v_time = Now   <span class="comment">&#x27; 此时，格式为：yyyy-MM-dd HH:mm:ss</span></span><br><span class="line">v_date2 = #<span class="string">&quot;2021-06-01&quot;</span> <span class="comment">&#x27;指定时间</span></span><br><span class="line">v_date3 = <span class="built_in">CDate</span>(<span class="string">&quot;2021-06-01&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 2022-01-28</span></span><br><span class="line">Format(<span class="type">Date</span>, <span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line"><span class="comment">&#x27; 获取当天的年周数，格式为长格式，例如第一周显示为01</span></span><br><span class="line">v_week_num = WorksheetFunction.WeekNum(<span class="type">Date</span>, vbMonday)</span><br><span class="line">Format(v_week_num, <span class="string">&quot;00&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="日期处理"><a href="#日期处理" class="headerlink" title="日期处理"></a>日期处理</h2><ul><li>对日期进行处理，得到想要的目标日期</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 今天</span></span><br><span class="line">today = <span class="type">Date</span></span><br><span class="line"><span class="comment">&#x27; 昨天</span></span><br><span class="line">yesterday = today - <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 本周一 注：在Excel中，周日是一周的第一天</span></span><br><span class="line">monday = today - Weekday(today) + <span class="number">2</span></span><br><span class="line"><span class="comment">&#x27; 本月第一天</span></span><br><span class="line">monthFirstDay = lastMonday - Day(lastMonday) + <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 本月最后一天</span></span><br><span class="line">targetDate = DateSerial(Year(targetDate), Month(targetDate) + <span class="number">1</span>, <span class="number">0</span>)</span><br><span class="line"><span class="comment">&#x27; 今天是一年的第几周，以周一作为本周的第一天</span></span><br><span class="line">weekNum = WorksheetFunction.weekNum(today, vbMonday)</span><br></pre></td></tr></table></figure><h2 id="日期比较"><a href="#日期比较" class="headerlink" title="日期比较"></a>日期比较</h2><ul><li>日期是可以直接比较和相减的，相减的间隔为时间的间隔。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27; 今天</span></span><br><span class="line">today = <span class="type">Date</span></span><br><span class="line"><span class="comment">&#x27; 昨天</span></span><br><span class="line">yesterday = today - <span class="number">1</span></span><br><span class="line"><span class="comment">&#x27; 日期之间也可以比较和加减</span></span><br><span class="line">today &gt; yesterday  <span class="comment">&#x27; True</span></span><br><span class="line">today - yesterday  <span class="comment">&#x27; 1 ，相隔1一天</span></span><br></pre></td></tr></table></figure><h2 id="计算时间间隔"><a href="#计算时间间隔" class="headerlink" title="计算时间间隔"></a>计算时间间隔</h2><ul><li>DateDiff 函数可以用于计算时间的间隔。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> tt1()</span><br><span class="line">    <span class="keyword">Dim</span> d1, d2 <span class="keyword">As</span> <span class="type">Date</span></span><br><span class="line">    d1 = <span class="literal">#11/21/2021#</span></span><br><span class="line">    d2 = <span class="literal">#12/1/2022#</span></span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; (d2 - d1) &amp; <span class="string">&quot;天&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;d&quot;</span>, d1, d2) &amp; <span class="string">&quot;天&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;m&quot;</span>, d1, d2) &amp; <span class="string">&quot;月&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;yyyy&quot;</span>, d1, d2) &amp; <span class="string">&quot;年&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;q&quot;</span>, d1, d2) &amp; <span class="string">&quot;季&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;w&quot;</span>, d1, d2) &amp; <span class="string">&quot;周&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;h&quot;</span>, d1, d2) &amp; <span class="string">&quot;小时&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;n&quot;</span>, d1, d2) &amp; <span class="string">&quot;分种&quot;</span>)</span><br><span class="line">    MsgBox(<span class="string">&quot;相隔&quot;</span> &amp; DateDiff(<span class="string">&quot;s&quot;</span>, d1, d2) &amp; <span class="string">&quot;秒&quot;</span>)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="计算耗时"><a href="#计算耗时" class="headerlink" title="计算耗时"></a>计算耗时</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">startTime = Time</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27; 业务数据处理</span></span><br><span class="line">MsgBox (<span class="string">&quot;运行此流程共耗时：&quot;</span> &amp; DateDiff(<span class="string">&quot;s&quot;</span>, startTime, Time) &amp; <span class="string">&quot;秒&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27; 后台打印使用的时间</span></span><br><span class="line">Debug.Print DateDiff(<span class="string">&quot;s&quot;</span>, startTime, Time) &amp; <span class="string">&quot;秒&quot;</span></span><br></pre></td></tr></table></figure><h1 id="vba日期和时间函数汇总和代码"><a href="#vba日期和时间函数汇总和代码" class="headerlink" title="vba日期和时间函数汇总和代码"></a>vba日期和时间函数汇总和代码</h1><h2 id="第一，vba日期和时间函数的基本用法"><a href="#第一，vba日期和时间函数的基本用法" class="headerlink" title="第一，vba日期和时间函数的基本用法"></a>第一，vba日期和时间函数的基本用法</h2><blockquote><p>Excel中vba日期函数和时间函数分别是DATE和TIME。<br>VBA提供了三个无参数函数：Date、Time、Now，分别返回当前电脑系统的日期、时间、日期+时间。<br>下面的代码我们以三个消息框来结合日期和时间函数，分别提示当前的日期、时间。</p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> vba时间和日期函数()</span><br><span class="line">    MsgBox <span class="type">Date</span></span><br><span class="line">    MsgBox Time</span><br><span class="line">    MsgBox Now</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="第二，使用vba日期和时间函数修改系统信息"><a href="#第二，使用vba日期和时间函数修改系统信息" class="headerlink" title="第二，使用vba日期和时间函数修改系统信息"></a>第二，使用vba日期和时间函数修改系统信息</h2><ul><li>下面这段代码将电脑右下角的日期和时间修改为2011年1月1日21:50:00。<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 修改时间和日期()</span><br><span class="line">  Time = <span class="string">&quot;21:50:00&quot;</span></span><br><span class="line">  <span class="type">Date</span> = <span class="string">&quot;2011年1月1日&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒"><a href="#第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒" class="headerlink" title="第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒"></a>第三，用消息框返回当前日期的年、月、日和当前时间的时、分、秒</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> SmpYearHour()</span><br><span class="line">    <span class="comment">&#x27;以对话框显示当前日期的年、月、日</span></span><br><span class="line">    MsgBox <span class="string">&quot;当前日期：&quot;</span> &amp; <span class="type">Date</span> &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;年：&quot;</span> &amp; Year(<span class="type">Date</span>) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;月：&quot;</span> &amp; Month(<span class="type">Date</span>) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;日：&quot;</span> &amp; Day(<span class="type">Date</span>)</span><br><span class="line">    <span class="comment">&#x27;以对话框显示当前时间的时、分、秒</span></span><br><span class="line">    MsgBox <span class="string">&quot;当前时间：&quot;</span> &amp; Time &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;时：&quot;</span> &amp; Hour(Time) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;分：&quot;</span> &amp; Minute(Time) &amp; Chr(<span class="number">10</span>) &amp; _</span><br><span class="line">           <span class="string">&quot;秒：&quot;</span> &amp; Second(Time)</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h2 id="第四，其余的vba日期和时间函数列表"><a href="#第四，其余的vba日期和时间函数列表" class="headerlink" title="第四，其余的vba日期和时间函数列表"></a>第四，其余的vba日期和时间函数列表</h2><p>| 函数  |  说明 |<br>| —- | —- |<br>| Timer | 返回一个 Single，代表从午夜开始到现在经过的秒数。     |<br>| TimeSerial(hour, minute, second) | 返回一个 Variant (Date)，包含具有具体时、分、秒的时间。     |<br>| DateDiff(interval, date1, date2[, firstdayofweek[, firstweekofyear]]) | 返回 Variant (Long) 的值，表示两个指定日期间的时间间隔数目。     |<br>| Second(time) | 返回一个 Variant (Integer)，其值为 0 到 59 之间的整数，表示一分钟之中的某个秒。     |<br>| Minute(time) | 返回一个 Variant (Integer)，其值为 0 到 59 之间的整数，表示一小时中的某分钟。     |<br>| Hour(time) | 返回一个 Variant (Integer)，其值为 0 到 23 之间的整数，表示一天之中的某一钟点。     |<br>| Day(date) | 返回一个 Variant (Integer)，其值为 1 到 31 之间的整数，表示一个月中的某一日。     |<br>| Month(date) |  返回一个 Variant (Integer)，其值为 1 到 12 之间的整数，表示一年中的某月。    |<br>| Year(date) |  返回 Variant (Integer)，包含表示年份的整数。    |<br>| Weekday(date, [firstdayofweek]) |  返回一个 Variant (Integer)，包含一个整数，代表某个日期是星期几    |</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/m1090760001/article/details/122464601">VBA实战(10) - 日期处理汇总</a></li><li><a href="https://blog.csdn.net/w57w57w57/article/details/43772081">vba日期和时间函数汇总和代码</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA数据处理之二:日期处理汇总</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="数据处理" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="日期处理" scheme="https://zml3589110.github.io/tags/%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>VBA字符串</title>
    <link href="https://zml3589110.github.io/posts/1296505440.html"/>
    <id>https://zml3589110.github.io/posts/1296505440.html</id>
    <published>2022-06-28T07:18:20.000Z</published>
    <updated>2022-06-28T07:26:49.972Z</updated>
    
    <content type="html"><![CDATA[<ul><li>字符串是一个字符序列，可以由字母，数字，特殊字符或全部字符组成。 如果一个变量被包含在双引号””中，则被认为是一个字符串。</li></ul><p><strong>语法：</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable_name = <span class="string">&quot;this is a string&quot;</span></span><br></pre></td></tr></table></figure><p><strong>简单示例：</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&quot;string&quot;</span>   <span class="comment">&#x27; Only Alphabets</span></span><br><span class="line">str2 = <span class="string">&quot;132.45&quot;</span>   <span class="comment">&#x27; Only Numbers</span></span><br><span class="line">str3 = <span class="string">&quot;!@#$;*&quot;</span>  <span class="comment">&#x27; Only Special Characters</span></span><br><span class="line">Str4 = <span class="string">&quot;Asc23@#&quot;</span>  <span class="comment">&#x27; Has all the above</span></span><br></pre></td></tr></table></figure><p><strong>字符串函数:</strong></p><p>预定义的VBA字符串函数可以帮助开发人员非常有效地处理字符串。以下是VBA中支持的字符串的方法。请点击每个方法来详细了解。</p><table><thead><tr><th>编号</th><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td><a href="http://www.yiibai.com/vba/vba_instr_function.html">InStr</a></td><td>返回指定子字符串的第一个匹配项。从左到右搜索。</td></tr><tr><td>2</td><td><a href="http://www.yiibai.com/vba/vba_instrrev_function.html">InstrRev</a></td><td>返回指定子字符串的第一个匹配项。从右到左搜索。</td></tr><tr><td>3</td><td><a href="http://www.yiibai.com/vba/vba_lcase_function.html">Lcase</a></td><td>返回指定字符串的小写字母。</td></tr><tr><td>4</td><td><a href="http://www.yiibai.com/vba/vba_ucase_function.html">Ucase</a></td><td>返回指定字符串转为大写字母的形式。</td></tr><tr><td>5</td><td><a href="http://www.yiibai.com/vba/vba_left_function.html">Left</a></td><td>返回在左侧指定数量字符的字符串。</td></tr><tr><td>6</td><td><a href="http://www.yiibai.com/vba/vba_right_function.html">Right</a></td><td>返回在右侧指定数量字符的字符串</td></tr><tr><td>7</td><td><a href="http://www.yiibai.com/vba/vba_mid_function.html">Mid</a></td><td>根据指定的参数从字符串中返回特定数量的字符。</td></tr><tr><td>8</td><td><a href="http://www.yiibai.com/vba/vba_ltrim_function.html">Ltrim</a></td><td>删除指定字符串左侧的空格后返回一个字符串。</td></tr><tr><td>9</td><td><a href="http://www.yiibai.com/vba/vba_rtrim_function.html">Rtrim</a></td><td>删除指定字符串右侧的空格后返回一个字符串。</td></tr><tr><td>10</td><td><a href="http://www.yiibai.com/vba/vba_trim_function.html">Trim</a></td><td>删除开头和结尾空格后返回一个字符串值。</td></tr><tr><td>11</td><td><a href="http://www.yiibai.com/vba/vba_len_function.html">Len</a></td><td>返回给定字符串的长度。</td></tr><tr><td>12</td><td><a href="http://www.yiibai.com/vba/vba_replace_function.html">Replace</a></td><td>用另一个字符串替换字符串后返回字符串。</td></tr><tr><td>13</td><td><a href="http://www.yiibai.com/vba/vba_space_function.html">Space</a></td><td>用指定数量的空格填充字符串。</td></tr><tr><td>14</td><td><a href="http://www.yiibai.com/vba/vba_strcomp_function.html">StrComp</a></td><td>比较两个指定的字符串后返回一个整数值。</td></tr><tr><td>15</td><td><a href="http://www.yiibai.com/vba/vba_string_function.html">String</a></td><td>返回指定次数的字符的字符串。</td></tr><tr><td>16</td><td><a href="http://www.yiibai.com/vba/vba_strreverse_function.html">StrReverse</a></td><td>反转给定字符串的字符序列后，返回一个字符串。</td></tr></tbody></table><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.yiibai.com/vba/vba_strings.html">VBA字符串)</a></li><li><a href="https://www.yiibai.com/vba">VBA教程</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">字符串相关函数收集</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="数据处理" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="字符串" scheme="https://zml3589110.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>VBA数据处理之一(字符串)</title>
    <link href="https://zml3589110.github.io/posts/3177018411.html"/>
    <id>https://zml3589110.github.io/posts/3177018411.html</id>
    <published>2022-06-28T07:09:20.000Z</published>
    <updated>2022-06-28T07:26:49.941Z</updated>
    
    <content type="html"><![CDATA[<p>假设有字符串：“world2q3423j;;3254&lt;sflskjdf”<br>现在要获取每个字符到myChars数组，得到这样的结果：</p><p>myChars(1) &#x3D; w<br>myChars(2) &#x3D; o</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> aaa()</span><br><span class="line"><span class="keyword">Dim</span> myChars()</span><br><span class="line">abc = <span class="string">&quot;world2q3423j;;3254&lt;sflskjdf&quot;</span></span><br><span class="line"><span class="keyword">ReDim</span> myChars(<span class="number">1</span> <span class="keyword">To</span> Len(abc))</span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> Len(abc)</span><br><span class="line">myChars(n) = <span class="keyword">Mid</span>(abc, n, <span class="number">1</span>)</span><br><span class="line">Cells(n, <span class="number">1</span>) = myChars(n)</span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/304450382179355164.html">VBA: 如何最好地获取一个字符串里的每个字符？)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA数据处理之一(字符串)</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="数据处理" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
    
    <category term="字符串" scheme="https://zml3589110.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>VBA窗体使用图片</title>
    <link href="https://zml3589110.github.io/posts/2635706068.html"/>
    <id>https://zml3589110.github.io/posts/2635706068.html</id>
    <published>2022-06-28T07:06:20.000Z</published>
    <updated>2022-06-28T07:26:49.972Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>今天学习了一个窗体image控件，发现可以实现客户资料的加载显示功能，目前学到的一个是加载(.jpg)格式类图片，具体我想可以在文件夹中加载一些客户产品图片、客户营业执照、员工照片等强调可视化内容的资料。</strong></p></blockquote><ul><li>显示效果如图：</li></ul><img src="https://pics1.baidu.com/feed/810a19d8bc3eb135a0c6a2ca40babddbfc1f44ee.png?token=af0e2983d672fca858973fc571d10818&s=0020DD1417664F0DC875F850030040F9"><p><strong>代码很简单，只有一句话:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> TextBox1_Change()</span><br><span class="line"></span><br><span class="line"><span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"></span><br><span class="line">Image1.Picture = LoadPicture(ThisWorkbook.Path &amp; <span class="string">&quot;\&quot;</span> &amp; TextBox1.<span class="keyword">Text</span> &amp; <span class="string">&quot;.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line">Image1.PictureSizeMode = fmPictureSizeModeZoom</span><br><span class="line"></span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://baijiahao.baidu.com/s?id=1692279467271579081&wfr=spider&for=pc">VBA练习七(窗体图片加载)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA窗体使用图片</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="窗体" scheme="https://zml3589110.github.io/tags/%E7%AA%97%E4%BD%93/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="图片" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>VBA判断活动窗体</title>
    <link href="https://zml3589110.github.io/posts/462997477.html"/>
    <id>https://zml3589110.github.io/posts/462997477.html</id>
    <published>2022-06-28T06:54:20.000Z</published>
    <updated>2022-06-28T07:26:49.972Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>其他思路：获得活动窗口句柄，进程外用GetForgroundWindow，进程内用GetActiveWindow</strong></p></blockquote><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Function</span> FormIsActive(sName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> VBA.UserForms.Count - <span class="number">1</span></span><br><span class="line">        FormIsActive = UserForms(i).Name = sName</span><br><span class="line">        <span class="keyword">If</span> FormIsActive <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserfrom()</span><br><span class="line">    Userform1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&#x27;测试: 运行LoadUserfrom前是否得到False,而运行LoadUserfrom后是否得到True的结果?</span></span><br><span class="line"><span class="keyword">Sub</span> Test()</span><br><span class="line">    MsgBox FormIsActive(<span class="string">&quot;UserForm1&quot;</span>), <span class="number">64</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h1 id="方法二-改进一"><a href="#方法二-改进一" class="headerlink" title="方法二(改进一)"></a>方法二(改进一)</h1><p>Take a look at attached file and play with the three buttons.</p><p>Let me know if you still have question.</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Function</span> FormIsActive(sName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Boolean</span></span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">    <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> UserForms.Count - <span class="number">1</span></span><br><span class="line">        FormIsActive = UserForms(i).Name = sName</span><br><span class="line">        <span class="keyword">If</span> FormIsActive <span class="keyword">Then</span> <span class="keyword">Exit</span> <span class="keyword">Function</span></span><br><span class="line">    <span class="keyword">Next</span> i</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserform1()</span><br><span class="line"><span class="keyword">If</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm2 is active so we&#x27;re unloading it NOW!&quot;</span></span><br><span class="line">    Unload UserForm2</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    UserForm1.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> LoadUserform2()</span><br><span class="line">    UserForm2.Show</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Sub</span> Test()</span><br><span class="line"><span class="keyword">If</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="built_in">And</span> <span class="built_in">Not</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm1 is Active! UserForm2 is not!&quot;</span></span><br><span class="line">   <span class="keyword">ElseIf</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="built_in">And</span> <span class="built_in">Not</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm2 is Active! UserForm1 is not!&quot;</span></span><br><span class="line">   <span class="keyword">ElseIf</span> FormIsActive(<span class="string">&quot;UserForm2&quot;</span>) <span class="built_in">And</span> FormIsActive(<span class="string">&quot;UserForm1&quot;</span>) <span class="keyword">Then</span></span><br><span class="line">    MsgBox <span class="string">&quot;UserForm1 and UserForm2 are both Active!&quot;</span></span><br><span class="line">   <span class="keyword">Else</span></span><br><span class="line">    MsgBox <span class="string">&quot;No active userform!&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><p><a href="http://www.excelpx.com/forum.php?mod=attachment&aid=MjY0MTMwfDE1NDQzZWFhfDE2NTU4MDEwMjV8MHwyOTUxOTY=">UserForm.zip</a></p><h1 id="最后方法"><a href="#最后方法" class="headerlink" title="最后方法"></a>最后方法</h1><blockquote><p>我现在用一个公共变量，就可以知道是否有窗体是活动</p></blockquote><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="http://www.excelpx.com/thread-295196-1-1.html">【求助】怎样判断一个窗体是否在活动状态？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA判断窗体是否为在活动状态</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="窗体活动" scheme="https://zml3589110.github.io/tags/%E7%AA%97%E4%BD%93%E6%B4%BB%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>VBA实现进度条显示</title>
    <link href="https://zml3589110.github.io/posts/585123975.html"/>
    <id>https://zml3589110.github.io/posts/585123975.html</id>
    <published>2022-06-28T06:32:20.000Z</published>
    <updated>2022-06-28T07:26:49.972Z</updated>
    
    <content type="html"><![CDATA[<h1 id="窗体中的进度条控件"><a href="#窗体中的进度条控件" class="headerlink" title="窗体中的进度条控件"></a>窗体中的进度条控件</h1><blockquote><p>工具箱默认情况下没有进度条控件，需在“工具”-&gt;“附加控件”里面添加Microsoft ProgressBar Control,version 6.0，即可在工具箱里面看到进度条控件。</p></blockquote><ol><li>添加进度条控件</li></ol><img src="https://img-blog.csdn.net/20160323194238114?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"><ol start="2"><li>创建一个窗体UserForm1，添加一个进度条ProgressBar1和一个标签Label1，即可可以完成VBA进度条设计。</li></ol><ul><li>eg：经常在一个循环运算中用到进度条，此时可以将循环运算在窗体UserForm1里面进行，即可将循环变量嵌入到ProgressBar1里面进行精准进度条设计。</li></ul><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Activate()</span><br><span class="line"><span class="keyword">Dim</span> n <span class="keyword">As</span> <span class="type">Integer</span></span><br><span class="line">n = <span class="number">3000</span></span><br><span class="line">ProgressBar1.Min = <span class="number">1</span></span><br><span class="line">ProgressBar1.Max = n</span><br><span class="line">Label1.Caption = <span class="string">&quot;0%&quot;</span></span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> <span class="number">3000</span></span><br><span class="line">ProgressBar1.Value = Str(n)</span><br><span class="line">Label1.Caption = Round(n / ProgressBar1.Max, <span class="number">2</span>) * <span class="number">100</span> &amp; <span class="string">&quot;%&quot;</span></span><br><span class="line">DoEvents</span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line"><span class="comment">&#x27;Unload UserForm1</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdn.net/20160323194829476?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"># 在 Excel 下边显示进度条</span><br><span class="line"></span><br><span class="line">- vba处理execl数据时，如果数据量比较大时，execl会执行时间较长，并且不容易看出来已执行的进度。</span><br><span class="line">应用execl的进度条，让执行进度更加一目了然。</span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">&quot;https://img-blog.csdnimg.cn/0a4482aa87054ba7a8185e3003e937de.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6I-y5pavRmFjZQ==,size_12,color_FFFFFF,t_70,g_se,x_16&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">**进度条代码:**</span><br><span class="line"></span><br><span class="line">```vb</span><br><span class="line"><span class="keyword">Function</span> GetProgress(curValue, maxValue)</span><br><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="type">Single</span>, j <span class="keyword">As</span> <span class="type">Integer</span>, s <span class="keyword">As</span> <span class="type">String</span></span><br><span class="line">i = maxValue / <span class="number">20</span></span><br><span class="line">j = curValue / i</span><br><span class="line"> </span><br><span class="line"><span class="keyword">For</span> m = <span class="number">1</span> <span class="keyword">To</span> j</span><br><span class="line">    s = s &amp; <span class="string">&quot;■&quot;</span></span><br><span class="line"><span class="keyword">Next</span> m</span><br><span class="line"><span class="keyword">For</span> n = <span class="number">1</span> <span class="keyword">To</span> <span class="number">20</span> - j</span><br><span class="line">    s = s &amp; <span class="string">&quot;□&quot;</span></span><br><span class="line"><span class="keyword">Next</span> n</span><br><span class="line">GetProgress = s &amp; FormatNumber(curValue / maxValue * <span class="number">100</span>, <span class="number">2</span>) &amp; <span class="string">&quot;%&quot;</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure><blockquote><p>调用代码</p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Application.StatusBar = GetProgress(i, maxRow)</span><br></pre></td></tr></table></figure><p>参数可以根据业务情况，自行传入。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/Gordennizaicunzai/article/details/50965964">VBA进度条</a></li><li><a href="https://blog.csdn.net/m0_60196931/article/details/122339473">VBA 处理数据的进度条实现</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA实现进度条显示，提醒当前进度状态</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="ProgressBar" scheme="https://zml3589110.github.io/tags/ProgressBar/"/>
    
  </entry>
  
  <entry>
    <title>VBA 鼠标浮上命令按钮有文字提示(ControlTipText)</title>
    <link href="https://zml3589110.github.io/posts/3346834382.html"/>
    <id>https://zml3589110.github.io/posts/3346834382.html</id>
    <published>2022-06-28T06:27:20.000Z</published>
    <updated>2022-06-28T07:26:49.956Z</updated>
    
    <content type="html"><![CDATA[<p>eg.假设 某一个按钮控件名为 commandbutton1,想做到 鼠标悬停在该控件上时，显示提示，提示内容为该控件的名称，可以用下列语句<br>commandbutton1.controltiptext &#x3D; “按钮名称为commandbutton1”</p><ul><li>以下来自excel的帮助文件</li></ul><hr><p>ControlTipText 属性<br>指定当用户将鼠标指针放在控件上但未按下时所显示的文本。<br>语法<br>object.ControlTipText [&#x3D; String]<br>ControlTipText 属性的语法有以下几个成分：<br>成分<br>object 必需。一个有效对象。<br>String 可选。当用户将鼠标指针放在控件上时所显示的文本。<br>说明<br>ControlTipText 属性可为用户提供有关当前运行的窗体中某一控件的提示。该属性可在设计时间设定，但仅在运行时间由控件显示。<br>ControlTipText 的默认值为空字符串。此时，该控件将无任何提示。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://zhidao.baidu.com/question/2011574656656416308.html">excel VBA 鼠标浮上命令按钮有文字提示</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">当鼠标浮上命令按钮有相应文字提示</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="函数" scheme="https://zml3589110.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
    <category term="ControlTipText" scheme="https://zml3589110.github.io/tags/ControlTipText/"/>
    
  </entry>
  
  <entry>
    <title>VBA函数之一(Format格式化字符串)</title>
    <link href="https://zml3589110.github.io/posts/4237796259.html"/>
    <id>https://zml3589110.github.io/posts/4237796259.html</id>
    <published>2022-06-28T02:59:20.000Z</published>
    <updated>2022-06-28T07:26:49.956Z</updated>
    
    <content type="html"><![CDATA[<p>Format(值,格式(可选参数))</p><h1 id="一、数字格式："><a href="#一、数字格式：" class="headerlink" title="一、数字格式："></a>一、数字格式：</h1><ol><li><p>General Number：普通数字，可以用来去掉千位分隔号和无效 0 。<br>如：Format(“1,234,567.80”, “General Number”)&#x3D;”1234567.8”</p></li><li><p>Currency：货币类型，可添加千位分隔号和货币符号，保留两位小数点。<br>如：Format(1234567, “Currency”)&#x3D;”¥1,234,567.00”</p></li><li><p>Fixed：格式为带两位小数的数字。<br>如：Format(“123456”, “Fixed”)&#x3D;123456.00</p></li><li><p>Standard：标准，即带千位分隔号和两位小数。<br>如：Format(“123456”, “Standard”)&#x3D;123,456.00</p></li><li><p>Percent：带两位小数点的百分数。<br>如：Format(“123456”, “Percent”)&#x3D;12345600.00</p></li><li><p>Scientific：科学记数法。<br>如：Format(“1234567”, “Scientific”)&#x3D;1.23E+06</p></li><li><p>Yes&#x2F;No：当数值为非 0 数字时返回 Yes ，否则返回 No 。<br>“如：Format(-3.14, “Yes&#x2F;No”)&#x3D;”Yes”<br>Format(0, “Yes&#x2F;No”)&#x3D;”No”</p></li><li><p>True&#x2F;False：当数值为非 0 数字时返回 True ，否则返回 False 。<br>与第7点类似，这里不再举例。</p></li><li><p>On&#x2F;Off：当数值为非 0 数字时返回 On ，否则返回 Off 。<br>与第7点类似，这里不再举例。</p></li><li><p>“”或省略：返回原值，但去除了小数点前后的无效 0 。<br>如：Format(“0.1030”, “”)&#x3D;”.103”</p></li><li><p>0：占位格式化，不足位时补足 0 。<br>“如：Format(123, “0000”)&#x3D;”0123”<br>Format$(12.3, “0.00”)&#x3D;”12.30”</p></li><li><p>#：占位格式化，不足位时不补足 0 。<br>如：Format(123, “####”)&#x3D;123</p></li><li><p>%：转化为百分数，一个%代表乘以 100 。<br>如：Format(1.23, “0.00%”)&#x3D;123.00%<br>Format(1.23, “0.00%%”)&#x3D;12300.00%%</p></li><li><p>：强制显示某字符。<br>如：Format$(12.34, “RMB .00”)&#x3D;”RMB 12.34”</p></li><li><p>;(分号)：分段显示不同格式<br>比如要把正数显示为“正”，负数显示为“负”，0显示为“零”，参数为”正;负;零”<br>如：Format$(123, “正;负;零”)&#x3D;”正”<br>第1段为正数格式，第2段为负数格式，第3段为0格式。</p></li></ol><h1 id="二、日期和时间格式："><a href="#二、日期和时间格式：" class="headerlink" title="二、日期和时间格式："></a>二、日期和时间格式：</h1><ol><li>固定格式参数<br>General Date：基本类型<br>如：Format(“2010-5-1 9:8:5”, “General Date”)&#x3D;”2010&#x2F;5&#x2F;1 9:08:05”<br>Long Date：操作系统定义的长日期<br>如：Format(“2010-5-1 9:8:5”, “Long Date”)&#x3D;2010年5月1日<br>Medium Date：中日期<br>如：Format(“2010-5-1 9:8:5”, “Medium Date”)&#x3D;10-05-01<br>Short Date：操作系统定义的短日期<br>如：Format(“2010-5-1 9:8:5”, “Short Date”)&#x3D;2010-5-1<br>Long Time：操作系统定义的长时间<br>如：Format(“2010-5-1 9:8:5”, “Long Time”)&#x3D;9:08:05<br>Medium Time:带AM&#x2F;PM(上午&#x2F;下午)的12小时制，不带秒<br>如：Format(“2010-5-1 9:8:5”, “Medium Time”)&#x3D;09:08 上午<br>Short Time：24时制的时间，不带秒<br>如：Format(“2010-5-1 9:8:5”, “Short Time”)&#x3D;09:08</li><li>自定义格式<br>C：格式化为国标的日期和时间<br>如：Format(“2010-5-1 9:8:5”, “c”)&#x3D;2010&#x2F;5&#x2F;1 9:08:05<br>y:一年中的第几天(1-366)<br>如：Format(“2010-5-1 9:8:5”, “y”)&#x3D;121<br>yy：两位数的年份(00-99)<br>如：Format(“2010-5-1 9:8:5”, “yy”)&#x3D;10<br>yyy：上面的 yy 与 y 结合在一起<br>“如：Format(“2010-5-1 9:8:5”, “yyy”)&#x3D;10121<br>Format(“2010-5-1 9:8:5”, “yy年第y天”)&#x3D;10年第121天<br>yyyy：四位数的年份(0100-9999)<br>如：Format(“2010-5-1 9:8:5”, “yyyy”)&#x3D;2010<br>d：一个月中的第几天(1-31)<br>如：Format(“2010-5-1 9:8:5”, “d”)&#x3D;1<br>dd：与 d 相同，但不足两位时补足 0<br>如：Format(“2010-5-1 9:8:5”, “dd”)&#x3D;01<br>ddd：三个英文字母表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “ddd”)&#x3D;”Sat”<br>dddd：英文表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “dddd”)&#x3D;”Saturday”<br>ddddd：显示标准日期<br>如：Format(“2010-5-1 9:8:5”, “ddddd”)&#x3D;2010&#x2F;5&#x2F;1<br>dddddd：长日期<br>如：Format(“2010-5-1 9:8:5”, “dddddd”)&#x3D;2010年5月1日<br>w：一个星期中的第几天(始于周日，周日为1)<br>如：Format(“2010-5-1 9:8:5”, “w”)&#x3D;7<br>ww：一年中的第几周<br>如：Format(“2010-5-1 9:8:5”, “ww”)&#x3D;18<br>m：月份数(当用于时间时，也可以表时为分钟)<br>如：Format(“2010-5-1 9:8:5”, “m”)&#x3D;5<br>mm：当小于10时带前导0的月数(当用于时间时，也可以表示为两位数的分钟数)<br>如：Format(“2010-5-1 9:8:5”, “mm”)&#x3D;05<br>mmm：三个英文字母表示的月份数<br>如：Format(“2010-1-1 9:8:5”, “mmm”)&#x3D;”Jan”<br>mmmm：英文表示的月份数<br>如：Format(“2010-1-1 9:8:5”, “mmmm”)&#x3D;”January”<br>q：一年中的第几季(1-4)<br>如：Format(“2010-5-1 9:8:5”, “q”)&#x3D;2<br>aaa：中文表示的周几<br>如：Format(“2010-5-1 9:8:5”, “aaa”)&#x3D;周六<br>aaaa：中文表示的星期几<br>如：Format(“2010-5-1 9:8:5”, “aaaa”)&#x3D;星期六<br>h：小时数(0-23)<br>如：Format(“2010-5-1 9:8:5”, “h”)&#x3D;9<br>h：两位数表示的小时数<br>如：Format(“2010-5-1 9:8:5”, “hh”)&#x3D;09<br>n：分钟数(0-59)<br>如：Format(“2010-5-1 9:8:5”, “n”)&#x3D;8<br>nn：两位数表示的分钟数(00-59)<br>如：Format(“2010-5-1 9:8:5”, “nn”)&#x3D;08<br>s：秒数(0-59)<br>如：Format(“2010-5-1 9:8:5”, “s”)&#x3D;5<br>ss：两位数表示的秒数(00-59)<br>如：Format(“2010-5-1 9:8:5”, “ss”)&#x3D;05<br>ttttt:标准时间，当小时数小于10时不带0，与 h:mm:ss 或 h:nn:ss 相同<br>如：Format(“2010-5-1 9:8:5”, “ttttt”)&#x3D;9:08:05<br>AM&#x2F;PM：显示当前为AM或PM<br>如：Format(“2010-5-1 11:59:59”, “AM&#x2F;PM”)&#x3D;AM<br>Format(“2010-5-1 12:0:0”, “AM&#x2F;PM”)&#x3D;PM<br>A&#x2F;P：显示当前为A或P<br>与 AM&#x2F;PM 一样，这里不再举例。<br>说明：<br>可以多种格式联合使用，如：<br>Format(“2010-5-1 9:8:5”, “dddddd aaaa”)&#x3D;2010年5月1日 星期六</li></ol><h1 id="三、文本格式"><a href="#三、文本格式" class="headerlink" title="三、文本格式"></a>三、文本格式</h1><p>@：匹配位置插入格式化文本，如：</p><p>在”abcde”前插入文本”X”，代码为：Format(“abcde”, “X@”)&#x3D;Xabcde</p><p>在”abcde”第1位字符后面插入文本”X”，代码为：Format(“abcde”, “@X”)&#x3D;aXbcde</p><p>在”abcde”第2位字符后面插入文本”X”，代码为：Format(“abcde”, “@@X”)&#x3D;abXcde</p><p>在”abcde”第3位字符后面插入文本”X”，代码为：Format(“abcde”, “@@@X”)&#x3D;abcXde</p><p>当点位符@比原文本字符串多时，刚在相应位置上添加空格，如：</p><p>Format(“abc”, “X@@@@”)&#x3D;”X abc”</p><p>Format(“abc”, “X@@@@@”)&#x3D;”X  abc”</p><p>Format(“t”, “@@a@”)&#x3D;”  at”(空格空格at)</p><p>与!配合可从后面截取一段文本，如：</p><p>截取”abcde”后面1个字符文本，代码为：Format(“abcde”, “!@”)&#x3D;e</p><p>截取”abcde”后面2个字符文本，代码为：Format(“abcde”, “!@@”)&#x3D;de</p><p>截取”abcde”后面3个字符文本，代码为：Format(“abcde”, “!@@@”)&#x3D;cde</p><p>截取”abcde”后面两位，并在前面添加”XY”，代码为：Format(“abcde”, “!XY@@”)&#x3D;Xyde</p><p>&amp;：字符占位符，与@基本相同，这里不再赘述。</p><p>如：Format$(“I Love You”, “</p><blockquote><p>：强制将所有字符以大写格式显示。</p></blockquote><p>如：Format$(“I Love You”, “&gt;”)&#x3D;I LOVE YOU</p><p>转自：<a href="http://www.cnblogs.com/zhengyuxin/articles/1932724.html">http://www.cnblogs.com/zhengyuxin/articles/1932724.html</a></p><hr><p>Format[$] ( expr [ , fmt ] )</p><p>format 返回变体型</p><p>format$ 强制返回为文本</p><hr><p>数字类型的格式化</p><hr><p>固定格式参数：</p><p>General Number 普通数字，如可以用来去掉千位分隔号</p><p>format$(“100,123.12”,”General Number”) 返回值 100123.12</p><p>Currency 货币类型，可添加千位分隔号和货币符号</p><p>format$(“100123.12”,”Currency”) 返回值 ￥100,123.12</p><p>Fixed 格式为带两位小数的数字</p><p>format$(“100123”,”Fixed”) 返回值 100123.00</p><p>Standard 标准，即带千位分隔号和两位小数</p><p>format$(“100123”,”Standard”) 返回值 100,123.00</p><p>Percent 百分数</p><p>format$(“100123”,”Percent”) 返回值 10012300.00%</p><p>Scientific 科学记数法</p><p>format$(“100123”,”Scientific”) 返回值 1.00E+05</p><p>Yes&#x2F;No 当值为0时返回 NO,否则返回 YES</p><p>format$(“100123”,”Yes&#x2F;No”) 返回值 Yes</p><p>True&#x2F;False 当值为0时返回 False,否则返回 True</p><p>format$(“100123”,”True&#x2F;False”) 返回值 True</p><p>On&#x2F;Off 当值为0时返回 Off,否则返回 On</p><p>format$(“100123”,”Yes&#x2F;No”) 返回值 On</p><p>自定义格式参数</p><p>“” 不进行格式化 返回值 原值</p><p>0 占位格式化，不足补0</p><p>format$(“100123”,”0000000”) 返回值 0100123</p><h1 id="占位格式化，不足时不补0"><a href="#占位格式化，不足时不补0" class="headerlink" title="占位格式化，不足时不补0"></a>占位格式化，不足时不补0</h1><p>format$(“100123”,”#######”) 返回值 100123</p><p>. 强制显示小数点</p><p>format$(“100123.12”,”.000”) 返回值 100123.120</p><p>% 转化为百分数，一个%代表乘以100</p><p>format$(“10.23”,”0.00%”) 返回值 1023.00%</p><p>format$(“10.23”,”0.00%%”) 返回值 102300.00%%</p><p>, 以千为单位格化</p><p>format$(“10.23”,”,”) 返回值 0</p><p>format$(“10010.23”,”,”) 返回值 10</p><p>format$(“10010.23”,”,0.00”) 返回值 10.01</p><p>E- E+ e- e+ 显示为科学记数(要注意格式语句，否则会和E的其它含义相混)</p><p>Format$(12.5,”0.00E+00”) 返回值 1.25E+01</p><p>$ 强制显示货币符号</p><p>format$(“10.23”,”{threadcontent}.00”) 返回值 ￥10.23</p><ul><li><ul><li>( ) space 按位置显示本样</li></ul></li></ul><p>Format$(“1234.56”,”-(0.00)”) 返回值 -(1234.56)</p><p>转义符,显示出特殊符号</p><p>Format$(“1234.56”,”#.00”) 返回值 #1234.56</p><p>“ABC” 显示双引号 (“ “) 之内的字符串。如在代码中想在 format 中包含一个字符串，必须用 Chr(34) 将文本括起来(34 为双引号 (“))</p><p>Format$(123.45,”TTT”) 返回值 TTT</p><p>注：当双引号中的文本包含特殊的参数符号如e,要使用转义符””，否则会按e的作用显示</p><p>; 类似多目运算符的作用。</p><p>当共有 四 部分时，</p><p>当大于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>当等于0时按第三部分进行格式化，</p><p>当为null值时，按第四部分进行格式化。如：</p><p>Format$(0,”0.00;负数;零;空”) 返回值 零</p><p>当共有 三 部分时，</p><p>当大于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>当等于0时按第三部分进行格式化，如：</p><p>Format$(-10,”0.00;ttt;零”) 返回值 ttt</p><p>当共有 两 部分时，</p><p>当大于或等于0时，按第一部分进行格式化，</p><p>当小于0时按第二部分进行格式化，</p><p>Format$(-123,”0.00;abc”) 返回值 abc</p><p>Format$(123,”0.00;abc”) 返回值 123.00</p><p>当共有 一 部分时，按分号左边进行格式化</p><hr><p>日期类型的格式化</p><hr><p>注意：在中文操作系统中，系统自动将月份输为如：五月，而非 May</p><p>固定格式参数</p><p>General Date 基本类型</p><p>Format(Date,”YYYY年MM月DD日”)</p><p>‘M 个位月只显示一位，</p><p>‘MM 显示两位月，</p><p>‘MMM显示英文月简称,</p><p>‘MMMM显示英文全名</p><p>Format$(Now,”General Date”) 返回值 2006-5-25 14:56:15</p><p>Long Date 操作系统定义的长日期</p><p>Format$(Now,”Long Date”) 返回值 2006年5月25日</p><p>Medium Date 中日期(yy&#x2F;mmm&#x2F;dd)</p><p>Format$(Now,”Medium Date”) 返回值 06-5月-25</p><p>Short Date 操作系统定义的短日期</p><p>Format$(Now,”Short Date”) 返回值 2006-5-25</p><p>Long Time 操作系统定义的长时间</p><p>Format$(Now,”Long Time”) 返回值 15:06:36</p><p>Medium Time 带AM&#x2F;PM的12小时制，不带秒</p><p>Format$(Now,”Medium Time”) 返回值 03:08 PM</p><p>Short Time 24时制的时间，不带秒</p><p>Format$(Now,”Short Time”) 返回值 15:08</p><p>自定义格式参数</p><p>: 用来标识时间字符的间隔</p><p>Format$(Time(),”hh:nn”) 返回值 15:25</p><p>&#x2F; 用来标识日期字符的间隔</p><p>Format$(now,”yyyy&#x2F;mm&#x2F;dd”) 返回值 2006-05-25</p><p>c 格式化为国标的日期和时间</p><p>Format$(Now,”c”) 返回值 2006-5-25 14:56:15</p><p>y 一年中的第几天</p><p>Format$(Now,”y”) 返回值 145</p><p>d 一个月中的第几天(1-366)</p><p>Format$(Now,”d”) 返回值 25</p><p>dd 当小于10时前面带0的天数(01-31)</p><p>Format$(“2006-1-7”,”dd”) 返回值 07</p><p>ddd 周几</p><p>Format$(Now,”ddd”) 返回值 周四</p><p>dddd 星期几</p><p>Format$(Now,”dddd”) 返回值 星期四</p><p>ddddd 显示标准日期</p><p>Format$(Now,”ddddd”) 返回值 2006-05-25</p><p>dddddd 长日期</p><p>Format$(Now,”dddddd”) 返回值 2006年5月25日</p><p>w 一个星期中的第几天</p><p>Format$(Now,”w”) 返回值 5</p><p>ww 一年中的第几周</p><p>Format$(Now,”ww”) 返回值 21</p><p>m 月数(注：当用于时间时，也可以表时为分钟)</p><p>Format$(Now,”m”) 返回值 5</p><p>Format$(Now,”h:m”) 返回值 16:11</p><p>mm 当小于10时前面带0的月数(注：当用于时间时，也可以表时为带0的分钟)</p><p>Format$(Now,”m”) 返回值 05</p><p>Format$(Now,”hh:mm”) 返回值 16:09</p><p>mmm 月份</p><p>Format$(Now,”mmm”) 返回值 五月</p><p>q 一年中的第几季(1-4)</p><p>Format$(Now,”q”) 返回值 2</p><p>yy 两位数的年份(00-99)</p><p>Format$(Now,”yy”) 返回值 06</p><p>yyyy 四位数的年份(0100-9999)</p><p>Format$(Now,”yyyy”) 返回值 2006</p><p>h 一天中的第N小时(0-23)</p><p>Format$(Now,”h”) 返回值 16</p><p>hh 当小于10时带0的小时数(00-23)</p><p>Format$(“7:30:28”,”hh”) 返回值 07</p><p>n 一小时的分钟数(0-59)</p><p>Format$(“7:30:28”,”n”) 返回值 30</p><p>nn 当小于10时带0的分钟数(00-59)</p><p>Format$(“7:3:28”,”n”) 返回值 03</p><p>s 一分钟中的秒数(0-59)</p><p>Format$(“7:30:8”,”s”) 返回值 8</p><p>ss 当小于10时带0的分钟数(00-59)</p><p>Format$(“7:3:8”,”ss”) 返回值 08</p><p>ttttt 标准时间，小时数当小于10时不带0，与h:mm:ss相同</p><p>Format$(“7:3:28”,”ttttt”) 返回值 7:03:28</p><p>AM&#x2F;PM 显示当前为AM或为PM</p><p>Format$(Now,”AM&#x2F;PM”) 返回值 PM</p><p>A&#x2F;P 显示当前为A或为P</p><p>Format$(Now,”A&#x2F;P”) 返回值 P</p><p>AMPM 对0至2359的数值进行判断是AM还是PM，可以看作是同等于对00:00至23:59的数字进行判断，如1000可以看作是10:00。</p><p>Format$(1000,”AMPM”) 返回值 AM</p><p>联合格式化</p><p>m&#x2F;d&#x2F;yy Format$(Now,”m&#x2F;d&#x2F;yy”) 返回值 5-25-06</p><p>d-mmm-yy Format$(Now,”d-mmm-yy”) 返回值 25-5月-06</p><p>d-mmmm Format$(Now,”d-mmmm”) 返回值 25-五月</p><p>mmmm-yy Format$(Now,”mmmm-yy”) 返回值 五月-06</p><p>hh:mm AM&#x2F;PM Format$(Now,”hh:mm AM&#x2F;PM”) 返回值 04:50 PM</p><p>h:mm:ss a&#x2F;p Format$(Now,”h:mm:ss a&#x2F;p”) 返回值 4:51:38 p</p><p>h:mm Format$(Now,”h:mm”) 返回值 16:51</p><p>h:mm:ss Format$(Now,”h:mm:ss”) 返回值 16:51:38</p><p>m&#x2F;d&#x2F;yy h:mm Format$(Now,”m&#x2F;d&#x2F;yy h:mm”) 返回值 5-25-06 16:54</p><hr><p>文本类型的格式化</p><hr><p>; 当两部分时，则第一部分为非空格式化，第二部分为null值或空值的格式化表达式</p><p>@ 匹配位置插入格式化文本，占位位置不存在时，显示空白(空字符串)</p><p>只有一个@符号时，是在最后面加上格式化文本</p><p>Format$(“CHIN”,”@a”) 返回值 CHINa</p><p>有多个@占位符，是按从右至左匹配，并在相应的位置上显示格式化文本</p><p>Format$(“CHIN”,”@a@@”) 返回值 CHaIN</p><p>当与 ! 配合时，则变为从左至右匹配</p><p>Format$(“CHIN”,”[email&#x3D;!@a]!@a[&#x2F;email]@@”) 返回值 CaHIN</p><p>当占位符比原文本字符串多时，刚在相应位置上添加空格</p><p>Format$(“C”,”@@a@”) 返回值 空白空白aC</p><p>&amp; 字符占位符。除在当占位位置不存在时，不显示外，其余均与@相同</p><p>当占位符比原文本字符串多时，刚在相应位置上添加空格</p><p>Format$(“C”,”&amp;&amp;a&amp;”) 返回值 aC</p><p>&lt; 强制小写。将所有字符以小写格式显示。</p><p>Format$(“I love you”,”</p><blockquote><p>强制大写。将所有字符以大写格式显示。</p></blockquote><p>Format$(“I love you”,”&gt;”) 返回值 I LOVE YOU</p><p>! 强制由左而右填充字符占位符。缺省值是由右而左填充字符占位符。</p><p>Format$(“CHIN”,”[email&#x3D;!@a]!@a[&#x2F;email]@@”) 返回值 CaHIN</p><hr><p>强制使用中文格式的日期时间</p><hr><p>aaaa 星期</p><p>Format$(Now,”aaaa”) 返回值 星期五</p><p>O 中文月份</p><p>Format$(Now,”O”) 返回值 五月</p><p>o 单字节月份</p><p>Format$(Now,”o”) 返回值 5月</p><p>A 中文日期</p><p>Format$(Now,”A”) 返回值 二十六日</p><p>a 单字节日期</p><p>Format$(Now,”a”) 返回值 26日</p><p>E 短中文年份</p><p>Format$(Now,”E”) 返回值 六年</p><p>e 单单字节年份</p><p>Format$(Now,”e”) 返回值 6年</p><p>EE 中文年份</p><p>Format$(Now,”EE”) 返回值 二○○六年</p><p>ee 单字节年份</p><p>Format$(Now,”ee”) 返回值 2006年</p><p>想不到中文日期的问题就这么容易解决</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_36076151/article/details/112054745">vbaformat_VBA 格式化字符串 - Format大全</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Format 函数与工作表函数 TEXT 用法基本相同，但功能更加强大，许多格式只能用于VBA 的 Format 函数</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="函数" scheme="https://zml3589110.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
    <category term="Format" scheme="https://zml3589110.github.io/tags/Format/"/>
    
  </entry>
  
  <entry>
    <title>VBA控件之一(MultiPage 控件)</title>
    <link href="https://zml3589110.github.io/posts/3549931295.html"/>
    <id>https://zml3589110.github.io/posts/3549931295.html</id>
    <published>2022-06-28T02:30:20.000Z</published>
    <updated>2022-06-28T07:26:49.941Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用 MultiPage 控件来处理大量可被分为几类排序信息。 MultiPage 控件由组成一个或多个 Page 对象， 每个包含不同组的控件。 以编程方式通过设置 MultiPage 控件的 Value 属性设置活动页。</p></blockquote><h1 id="方式一、如何控制-MultiPage-控件编程"><a href="#方式一、如何控制-MultiPage-控件编程" class="headerlink" title="方式一、如何控制 MultiPage 控件编程"></a>方式一、如何控制 MultiPage 控件编程</h1><p><strong>要添加 MultiPage 控件并控制它通过使用宏, 请按照下列步骤操作：</strong></p><table><thead><tr><th>1.</th><th>启动 Excel, 并打开新空白工作簿。</th></tr></thead><tbody><tr><td>2.</td><td>在 工具 菜单, 指向 宏 , 然后单击 VisualBasic 编辑器 。</td></tr><tr><td>3.</td><td>在 插入 菜单上, 单击要在工作簿中插入 UserForm UserForm 。</td></tr><tr><td>4.</td><td>添加到 UserForm MultiPage 控件。</td></tr><tr><td>5.</td><td>将 Label 控件添加到 Page 1 多页 控件上。</td></tr><tr><td>6.</td><td>将 TextBox 控件添加到 Page 1 多页 控件上。</td></tr><tr><td>7.</td><td>MultiPage 控件, 上单击, Page 2 ， 然后重复步骤 5 和 6 以添加一个 Label 控件和 TextBox 控件。</td></tr><tr><td>8.</td><td>双击要打开代码窗口对 MultiPage 控件 MultiPage 控件。</td></tr><tr><td>9.</td><td>在代码窗口, 为 MultiPage1 Change 事件键入下列代码：</td></tr><tr><td>10.</td><td>在代码窗口, 为 UserForm Initialize 事件键入下列代码：</td></tr><tr><td>11.</td><td>在 运行 菜单上, 单击 运行子过程 &#x2F; 用户窗体 。  Page 1, 上 TextBox 控件中键入 Test 。 当单击 Page 2 选项卡、 TextBox 2 被清除, 和标题为 Label 2 变为项， 在 Page 1 上 TextBox 所做 （” Test “) （” Test “）</td></tr></tbody></table><ul><li>为 MultiPage1 Change 事件键入下列代码:<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> MultiPage1_Change()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="comment">&#x27; If activating Page1...</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">0</span></span><br><span class="line">            Label1.Caption = TextBox2.<span class="keyword">Text</span></span><br><span class="line">            TextBox1.<span class="keyword">Text</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="comment">&#x27; If activating Page2...</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span></span><br><span class="line">            Label2.Caption = TextBox1.<span class="keyword">Text</span></span><br><span class="line">            TextBox2.<span class="keyword">Text</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li><li>为 UserForm Initialize 事件键入下列代码：<figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">            <span class="comment">&#x27; Force Page1 to be active when UserForm is displayed.</span></span><br><span class="line">            MultiPage1.Value = <span class="number">0</span></span><br><span class="line">            Label1.Caption = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="如何通过使用-MultiPage-控件创建一个向导界面"><a href="#如何通过使用-MultiPage-控件创建一个向导界面" class="headerlink" title="如何通过使用 MultiPage 控件创建一个向导界面"></a>如何通过使用 MultiPage 控件创建一个向导界面</h2><p>将任务需要几个增量步骤, 向导界面可能会非常有效。 您可使用 MultiPage 控件以创建一个向导界面代替使用多用户窗体。 本示例操作具有三页 MultiPage 控件。 附加到对 UserForm Initialize 事件过程禁用 Page 2 和 Page3, 并强制 Page 1 的 多页 控件可活动。</p><p><strong>注意</strong> 您通过使用 <strong>Pages</strong> 集合, 索引 <strong>MultiPage</strong> 控件的页面时集合中第一页是零页。 此过程还设置标题的 <strong>CommandButton</strong> 控件并禁用 <strong>&lt; 备份</strong> 按钮。</p><p>注意的功能是分配给 CommandButton 1 控件的 Click 事件过程 “ 后退 “ 按钮 &lt; 是分配给 CommandButton 2 是 Click 事件过程控制功能的下一步 &gt; 按钮。 若要通过使用 <strong>MultiPage</strong> 控件, 创建一个向导界面请按照下列步骤：</p><table><thead><tr><th>1.</th><th>启动 Excel, 并打开新空白工作簿。</th></tr></thead><tbody><tr><td>2.</td><td>在 工具 菜单, 指向 宏 , 然后单击 VisualBasic 编辑器 。</td></tr><tr><td>3.</td><td>在 插入 菜单上, 单击要在工作簿中插入 UserForm UserForm 。</td></tr><tr><td>4.</td><td>添加到 UserForm MultiPage 控件。</td></tr><tr><td>5.</td><td>右键单击, “ Page 1 选项卡， 然后单击要添加到 多页 控件 Page3 新页 。</td></tr><tr><td>6.</td><td>添加一个 CommandButton 控件不位于 多页 控件上 UserForm 上。  重复此步骤可添加一个 UserForm 上二 CommandButton 控件。</td></tr><tr><td>7.</td><td>双击以打开代码窗口对于 UserForm UserForm 。</td></tr><tr><td>8.</td><td>在代码窗口, 为 UserForm Initialize 事件键入下列代码：</td></tr><tr><td>9.</td><td>在 运行 菜单上, 单击 运行子过程 &#x2F; 用户窗体 。</td></tr></tbody></table><p>当您单击下一步 &gt; 激活 Page 2 后退 “ 按钮可, 和 &lt; 当您单击 Next &gt; 第二次, Page3 激活并题注为 CommandButton 2 更改为 “ 完成 “。</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&#x27;在代码窗口, 为 UserForm Initialize 事件键入下列代码：</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            <span class="comment">&#x27; The next 2 lines disable Page2 &amp; Page3.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">False</span></span><br><span class="line">            <span class="comment">&#x27; Make Page1 the active page.</span></span><br><span class="line">            .Value = <span class="number">0</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            <span class="comment">&#x27; Set the caption on the CommandButtons.</span></span><br><span class="line">            CommandButton1.Caption = <span class="string">&quot;&lt;Back&quot;</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">False</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Next&gt;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">            <span class="comment">&#x27; Procedure for the &quot;&lt;Back&quot; button</span></span><br><span class="line">            <span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton1_Click()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span>                                 <span class="comment">&#x27; If Page2 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Pages(<span class="number">0</span>).Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Page1.</span></span><br><span class="line">            .Value = MultiPage1.Value - <span class="number">1</span>  <span class="comment">&#x27; Move back 1 page.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span>      <span class="comment">&#x27; Disable Page2.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">False</span>     <span class="comment">&#x27; Disable Back button.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">2</span>                                 <span class="comment">&#x27; If Page3 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Page2.</span></span><br><span class="line">            .Value = MultiPage1.Value - <span class="number">1</span>  <span class="comment">&#x27; Move back 1 page.</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">False</span>      <span class="comment">&#x27; Disable Page3.</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Next&gt;&quot;</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line">            <span class="comment">&#x27; Procedure for the &quot;Next&gt;&quot; button</span></span><br><span class="line">            <span class="keyword">Private</span> <span class="keyword">Sub</span> CommandButton2_Click()</span><br><span class="line">            <span class="keyword">Select</span> <span class="keyword">Case</span> MultiPage1.Value</span><br><span class="line">            <span class="keyword">Case</span> <span class="number">0</span>                                  <span class="comment">&#x27; If Page1 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Value = MultiPage1.Value + <span class="number">1</span>   <span class="comment">&#x27; Move forward 1 page.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">True</span>        <span class="comment">&#x27; Enable Page2.</span></span><br><span class="line">            .Pages(<span class="number">0</span>).Enabled = <span class="literal">False</span>       <span class="comment">&#x27; Disable Page1.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton1.Enabled = <span class="literal">True</span>       <span class="comment">&#x27; Enable Back button.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">1</span>                                  <span class="comment">&#x27; If Page2 is active...</span></span><br><span class="line">            <span class="keyword">With</span> MultiPage1</span><br><span class="line">            .Value = MultiPage1.Value + <span class="number">1</span>   <span class="comment">&#x27; Move forward 1 page.</span></span><br><span class="line">            .Pages(<span class="number">2</span>).Enabled = <span class="literal">True</span>        <span class="comment">&#x27; Enable Page3.</span></span><br><span class="line">            .Pages(<span class="number">1</span>).Enabled = <span class="literal">False</span>       <span class="comment">&#x27; Disable Page2.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">            CommandButton2.Caption = <span class="string">&quot;Finish&quot;</span>   <span class="comment">&#x27; Change Next button to Finish.</span></span><br><span class="line">            <span class="keyword">Case</span> <span class="number">2</span>                                  <span class="comment">&#x27; If Page3 is active...</span></span><br><span class="line">            MsgBox <span class="string">&quot;Finished!&quot;</span>                  <span class="comment">&#x27; User is Finished.</span></span><br><span class="line">            Unload <span class="keyword">Me</span>                           <span class="comment">&#x27; Unload the UserForm.</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h1 id="方式二、vba-Page分页控件使用方法介绍"><a href="#方式二、vba-Page分页控件使用方法介绍" class="headerlink" title="方式二、vba Page分页控件使用方法介绍"></a>方式二、vba Page分页控件使用方法介绍</h1><blockquote><p>基本说一下Page使用方法，包括添加分页、删除分页、和设置分页属性等几点比较重要的内容。</p></blockquote><img src="https://pics7.baidu.com/feed/cc11728b4710b912705faeb15852f4049345221d.png?token=c36a6abd99ef68a91642e2b228bb790b"><ul><li>一个表单示例，标题分布以按钮形式来显示，默认为标签形式。</li></ul><h2 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法:"></a>设置方法:</h2><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">With</span> </span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Style = fmTabStyleButtons<span class="comment">&#x27;按钮形式&#x27;.Style = fmTabStyleTabs &#x27;默认为标签形式</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">With</span></span><br></pre></td></tr></table></figure><ul><li><strong>背景图片设置</strong><blockquote><p>背景图片用loadpicture(＂图片路径＋文件名＂)加载</p></blockquote></li></ul><img src="https://pics3.baidu.com/feed/0b55b319ebc4b7453a545da552531610888215f3.png?token=38556e3bc454b547afa9a1bc9094b262"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Item(<span class="number">1</span>).Picture =_</span><br><span class="line">LoadPicture(ThisWorkbook.Path &amp; <span class="string">&quot;\pic\123.jpg&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p><strong>其中注意一点Item(i),item表示Page页 字母ｉ代表下标或索引值.索引值从0开始,也就是说第一个Page页用item(0)来代表,最后一个用item(pages.count-1)来表示.</strong></p></blockquote><img src="https://pics5.baidu.com/feed/a1ec08fa513d26976f8965acc954bafc4216d81b.png?token=67b7980f1cab07044562d95e4c671f98"><ul><li><strong>改变按钮宽度</strong><blockquote><p>这个功能其实就是设置分布标题大小,用TabFixedWidth设置宽,TabFixedHeight设置高.</p></blockquote></li></ul><img src="https://pics6.baidu.com/feed/5ab5c9ea15ce36d3e51f355aa45c3280e850b1f3.png?token=bebe6e9095c7dfe11b7ec89dea1fabd6"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> </span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.TabFixedWidth = <span class="number">80</span>.TabFixedHeight=<span class="number">28</span></span><br><span class="line">endwith</span><br></pre></td></tr></table></figure><ul><li><strong>新建分页</strong></li></ul><blockquote><p>新建分页也十分简单,一行代码就可以完成. MultiPage1.Pages.Add “分布名”,”标题名”,索引值</p></blockquote><img src="https://pics1.baidu.com/feed/a9d3fd1f4134970aa044a46c0965d9cfa6865df0.png?token=96dba0ed08723058977dcf9210d191f5"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> x <span class="keyword">As</span> Integerx = <span class="keyword">Me</span>.MultiPage1.Pages.Count</span><br><span class="line"><span class="keyword">If</span> x &gt; <span class="number">6</span> <span class="keyword">Then</span> </span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Add <span class="string">&quot;page&quot;</span> &amp; x, <span class="string">&quot;新建 &quot;</span> &amp; x &amp; <span class="string">&quot;#&quot;</span>, x</span><br></pre></td></tr></table></figure><ul><li><strong>删除分页</strong><blockquote><p>删除分页也是一行代码完成的,Me.MultiPage1.Pages.Remove 索引</p></blockquote></li></ul><img src="https://pics5.baidu.com/feed/9825bc315c6034a821d4f4b357bc415309237600.png?token=5599e8d77a6492b808dba31ad0cc1f24"><p><strong>使用方法如下:</strong></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Dim</span> i <span class="keyword">As</span> Integeri = <span class="keyword">Me</span>.MultiPage1.Pages.Count - <span class="number">1</span><span class="comment">&#x27;取最后一个分布索引号</span></span><br><span class="line"><span class="keyword">If</span> i &lt;= <span class="number">4</span> <span class="keyword">Then</span> </span><br><span class="line"><span class="keyword">Exit</span> <span class="keyword">Sub</span><span class="comment">&#x27;判断是否是删除页 不能把自己删除了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Me</span>.MultiPage1.Pages.Remove i<span class="comment">&#x27;执行删除分页</span></span><br></pre></td></tr></table></figure><ul><li>结尾<br>其实对分页控件用得不是很熟悉,所以也是边学边做,,有些错误的地方,就难免.<br>同时也希望指出不正确的地方,加以改正.<br>关注江觅学习更多vba编程技术</li></ul><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/liyanwwww/article/details/2653539">VBA控件常规使用–multiPage 控件</a></li><li><a href="https://baijiahao.baidu.com/s?id=1673353087367441194&wfr=spider&for=pc">vba Page分页控件使用方法介绍</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 MultiPage 控件来处理大量可被分为几类排序信息</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="MultiPage" scheme="https://zml3589110.github.io/tags/MultiPage/"/>
    
  </entry>
  
  <entry>
    <title>VBA窗体最大化最小化按钮实现</title>
    <link href="https://zml3589110.github.io/posts/24674706.html"/>
    <id>https://zml3589110.github.io/posts/24674706.html</id>
    <published>2022-06-28T01:51:20.000Z</published>
    <updated>2022-06-28T07:26:49.941Z</updated>
    
    <content type="html"><![CDATA[<h1 id="先建立窗体"><a href="#先建立窗体" class="headerlink" title="先建立窗体"></a>先建立窗体</h1><p>打开excel，找到开发工具 ，然后点击 Visual Basic进入代码编辑器窗口：</p><img src="https://img-blog.csdnimg.cn/2018120723042229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p>点击插入&gt;&gt;用户窗体，如下图所示：</p><img src="https://img-blog.csdnimg.cn/20181207230608410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p>如果此时运行，得到的效果如下所示，是没有最大化和最小化窗口的：</p><img src="https://img-blog.csdnimg.cn/20181207232333794.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><h1 id="设置方式"><a href="#设置方式" class="headerlink" title="设置方式"></a>设置方式</h1><p>下面我们就来添加最大化最小化功能的实现。<br>双击窗体，进入代码编辑界面，输入以下代码：</p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Option</span> <span class="keyword">Explicit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> GetWindowLong <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;GetWindowLongA&quot;</span> (<span class="keyword">ByVal</span> hWnd <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> nIndex <span class="keyword">As</span> <span class="type">Long</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> FindWindow <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;FindWindowA&quot;</span> (<span class="keyword">ByVal</span> lpClassName <span class="keyword">As</span> <span class="type">String</span>, <span class="keyword">ByVal</span> lpWindowName <span class="keyword">As</span> <span class="type">String</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Declare</span> PtrSafe <span class="keyword">Function</span> SetWindowLong <span class="keyword">Lib</span> <span class="string">&quot;user32&quot;</span> <span class="keyword">Alias</span> <span class="string">&quot;SetWindowLongA&quot;</span> (<span class="keyword">ByVal</span> hWnd <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> nIndex <span class="keyword">As</span> <span class="type">Long</span>, <span class="keyword">ByVal</span> dwNewLong <span class="keyword">As</span> <span class="type">Long</span>) <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> GWL_STYLE = (-<span class="number">16</span>)</span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_THICKFRAME <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H40000</span> <span class="comment">&#x27;(恢复大小)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_MINIMIZEBOX <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H20000</span> <span class="comment">&#x27;(最小化)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Const</span> WS_MAXIMIZEBOX <span class="keyword">As</span> <span class="type">Long</span> = <span class="number">&amp;H10000</span> <span class="comment">&#x27;(最大化)</span></span><br><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> UserForm_Initialize()</span><br><span class="line">   <span class="keyword">Dim</span> hWndForm <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line">   <span class="keyword">Dim</span> IStyle <span class="keyword">As</span> <span class="type">Long</span></span><br><span class="line">   hWndForm = FindWindow(<span class="string">&quot;ThunderDFrame&quot;</span>, <span class="keyword">Me</span>.Caption)</span><br><span class="line">   IStyle = GetWindowLong(hWndForm, GWL_STYLE)</span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_THICKFRAME <span class="comment">&#x27;还原</span></span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_MINIMIZEBOX <span class="comment">&#x27;最小化</span></span><br><span class="line">   IStyle = IStyle <span class="built_in">Or</span> WS_MAXIMIZEBOX <span class="comment">&#x27;最大化</span></span><br><span class="line">   SetWindowLong hWndForm, GWL_STYLE, IStyle</span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将鼠标置于Sub函数内部，按F5按键运行，得到如下效果：</p><img src="https://img-blog.csdnimg.cn/20181207231350402.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODAwNzU=,size_16,color_FFFFFF,t_70"><p><strong>这里需要说明的是，以上代码支持在64位操作系统运行，如果是32位系统，在导入库的时候，应使用下面一段代码:</strong></p><p>与前面一段代码相比，发现唯一的区别在于，Declare后面少了PtrSafe，其原因是：Microsoft 提供了一个 Win32API.txt 文件，其中包含 1,500 个 Declare 语句以及一个用于剪切所需 Declare 语句并将其粘贴到您的代码中的工具。不过，这些语句适用于 32 位系统，必须使用下文讨论的信息将其转换为 64 位。现有 Declare 语句在 64 位 VBA 中不会进行编译，直到使用 PtrSafe 属性将它们标记为对 64 位安全。</p><p>具体可参阅MicroSoft Office 官方资料：<a href="https://docs.microsoft.com/zh-cn/previous-versions/office/ee691831(v=office.14)">32 位和 64 位版本的 Office 2010 之间的兼容性</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/u010280075/article/details/84888744">VBA窗体最大化最小化按钮实现</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VBA窗体添加最大化最小化按钮实现</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VBA/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="窗体" scheme="https://zml3589110.github.io/tags/%E7%AA%97%E4%BD%93/"/>
    
    <category term="VBA" scheme="https://zml3589110.github.io/tags/VBA/"/>
    
    <category term="最大最小化" scheme="https://zml3589110.github.io/tags/%E6%9C%80%E5%A4%A7%E6%9C%80%E5%B0%8F%E5%8C%96/"/>
    
  </entry>
  
</feed>
