<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2023-02-20T02:49:39.751Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C# 配置引用程序集的路径（分离exe和dll从指定路径调用）</title>
    <link href="https://zml3589110.github.io/posts/3340548759.html"/>
    <id>https://zml3589110.github.io/posts/3340548759.html</id>
    <published>2023-02-20T02:48:20.000Z</published>
    <updated>2023-02-20T02:49:39.751Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题：在开发较大的项目时，会引用很多其他项目的dll，而我们规划将不同类型的dll放在不同的功能目录下，此时我们通过反射动态加载时，出现System.IO.FileNotFoundException: 未能加载文件或程序集的问题。</strong></p><p>程序集DLL分为两类：</p><p>1）全局DLL（在GAC中注册，GAC——全局程序集缓存），有关GAC的详细资料可以参考一下链接：<br><a href="http://blog.csdn.net/prince_lintb/article/details/40789211">http://blog.csdn.net/prince_lintb/article/details/40789211</a></p><p>2）私有DLL，默认情况下，添加程序集引用的时候，程序集DLL会复制到可执行目录下。<br>对于私有DLL，当数目众多时，由于没有分类，会显得比较凌乱。在发布软件的时候也不希望在软件安装目录下看到大量的dll文件。如果能将其分类放在不同的文件夹下就再好不过了。<br>问题是，如何解决应用程序对DLL的查找路径问题呢？答案是在配置文件中添加如下配置项。（app.config或者web.config，没有就新建，添加-&gt;配置文件）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;runtime&gt;</span><br><span class="line">&lt;!--xmlns是必需的特性。指定程序集绑定所需的 XML 命名空间。 使用字符串“urn: 架构-microsoft-com:asm.v1”作为值。--&gt;</span><br><span class="line">&lt;assemblyBinding xmlns=<span class="string">&quot;urn:schemas-microsoft-com:asm.v1&quot;</span>&gt;</span><br><span class="line">&lt;publisherPolicy apply=<span class="string">&quot;yes&quot;</span>/&gt; &lt;!--指定运行时是否使用发布者策略--&gt;</span><br><span class="line">&lt;!--指定加载程序集时公共语言运行时搜索的子目录, 其中privatePath是相对于*.exe.config文件的相对路径，多个文件夹以分号分隔。--&gt;</span><br><span class="line">&lt;probing privatePath=<span class="string">&quot;Common;Security&quot;</span>/&gt;</span><br><span class="line">&lt;/assemblyBinding&gt;</span><br><span class="line">&lt;/runtime&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>其中privatePath是相对于*.exe.config文件的相对路径，多个文件夹以分号分隔。当编译后会在生成目录下生成一个后缀为.exe.config的文件，就是相对这个文件的。<br>添加程序集DLL引用之后，将DLL的属性“复制本地”设置为False。程序编译过程中，会自动检索Common和Security文件夹下的DLL及其依赖项。</p><p>注：关于xml字段和及节点含义查询：<a href="https://msdn.microsoft.com/zh-cn/library/twy1dw1e">https://msdn.microsoft.com/zh-cn/library/twy1dw1e</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/guanshan/p/guan2021-4-1_002.html">C# 配置引用程序集的路径（分离exe和dll从指定路径调用）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 分离exe和dll从指定路径调用</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="路径" scheme="https://zml3589110.github.io/tags/%E8%B7%AF%E5%BE%84/"/>
    
    <category term="dll" scheme="https://zml3589110.github.io/tags/dll/"/>
    
  </entry>
  
  <entry>
    <title>C#控件DataGridView之二（标题列头等添加复选框）</title>
    <link href="https://zml3589110.github.io/posts/3040252591.html"/>
    <id>https://zml3589110.github.io/posts/3040252591.html</id>
    <published>2023-02-20T02:09:20.000Z</published>
    <updated>2023-02-20T02:43:59.507Z</updated>
    
    <content type="html"><![CDATA[<h1 id="列头添加复选框（这个方法试过-列数不多可以用）"><a href="#列头添加复选框（这个方法试过-列数不多可以用）" class="headerlink" title="列头添加复选框（这个方法试过-列数不多可以用）"></a>列头添加复选框（这个方法试过-列数不多可以用）</h1><p>第一：添加列标题时，添加两个空格——用于显示复选框；<br>第二：实现列标题添加复选框，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddCheckeBoxToDGVHeader</span>(<span class="params">DataGridView dgv</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.dgvList.Columns.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.Windows.Forms.CheckBox ckBox = <span class="keyword">new</span> System.Windows.Forms.CheckBox();</span><br><span class="line">                <span class="comment">//ckBox.Text = &quot;全选&quot;;</span></span><br><span class="line">                ckBox.Checked = <span class="literal">true</span>;</span><br><span class="line">                System.Drawing.Rectangle rect =</span><br><span class="line">                    dgv.GetCellDisplayRectangle(i, <span class="number">-1</span>, <span class="literal">false</span>);</span><br><span class="line">                ckBox.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">25</span>, <span class="number">25</span>);</span><br><span class="line"> </span><br><span class="line">                ckBox.Location = rect.Location;</span><br><span class="line">                ckBox.Padding = <span class="keyword">new</span> System.Windows.Forms.Padding(<span class="number">2</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                ckBox.BackColor = Color.Transparent;</span><br><span class="line">                ckBox.Name = dgv.Columns[i].Name;</span><br><span class="line">                ckBox.CheckedChanged += <span class="keyword">new</span> EventHandler(ckBox_CheckedChanged);</span><br><span class="line"> </span><br><span class="line">                dgv.Controls.Add(ckBox);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">void</span> <span class="title">ckBox_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            CheckBox chb = sender <span class="keyword">as</span> CheckBox;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;Test==&quot;</span>+ chb.Name);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://images2018.cnblogs.com/blog/529017/201806/529017-20180615133704176-747383869.png"><h1 id="在dataGridView表格中插入复选框"><a href="#在dataGridView表格中插入复选框" class="headerlink" title="在dataGridView表格中插入复选框"></a>在dataGridView表格中插入复选框</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DataGridViewColumn myCol = <span class="keyword">new</span> DataGridViewCheckBoxColumn();</span><br><span class="line">myCol.Name = <span class="string">&quot;SelBox&quot;</span>;    <span class="comment">//设置列的名称</span></span><br><span class="line">myCol.HeaderText = <span class="string">&quot;字段行的值&quot;</span>;     <span class="comment">//显示的列名</span></span><br><span class="line">dataGridView1.Columns.Insert(<span class="number">0</span>, myCol);<span class="comment">//在dataGridView1的指定列添加复选框</span></span><br><span class="line"><span class="comment">//dataGridView1.Columns.Add(myCol); //在最后列插入复选框,可自由选择</span></span><br></pre></td></tr></table></figure><h1 id="C-DataGridViewCheckBoxColumn用法"><a href="#C-DataGridViewCheckBoxColumn用法" class="headerlink" title="C#DataGridViewCheckBoxColumn用法"></a>C#DataGridViewCheckBoxColumn用法</h1><h2 id="实现功能："><a href="#实现功能：" class="headerlink" title="实现功能："></a>实现功能：</h2><p>点击单元格实现checkbox的勾选，点击头标题实现全选和非全选，记录选中的行数 （注意：this.dataList.RefreshEdit();&#x2F;&#x2F;否则可能不全选）</p><h2 id="增加一列复选框"><a href="#增加一列复选框" class="headerlink" title="增加一列复选框"></a>增加一列复选框</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加一列复选框</span></span><br><span class="line">DataGridViewCheckBoxColumn columncb = <span class="keyword">new</span> DataGridViewCheckBoxColumn();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 窗体加载</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FrmAddOrder_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化数据</span></span><br><span class="line"><span class="keyword">this</span>.dataList.DataSource = dataSource_NoOrder;<span class="comment">//绑定数据源</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//给datagridview加复选框的初始化</span></span><br><span class="line">columncb.FlatStyle = FlatStyle.Standard;</span><br><span class="line">columncb.HeaderText = <span class="string">&quot;👆全选&quot;</span>;</span><br><span class="line">columncb.Name = <span class="string">&quot;cb_check&quot;</span>;</span><br><span class="line">columncb.TrueValue = <span class="literal">true</span>;</span><br><span class="line">columncb.FalseValue = <span class="literal">false</span>;</span><br><span class="line">columncb.DataPropertyName = <span class="string">&quot;IsChecked&quot;</span>;</span><br><span class="line"><span class="comment">//datagridview的Name为dataList</span></span><br><span class="line">dataList.Columns.Insert(<span class="number">0</span>, columncb);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 头checkbox是否选中</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="built_in">bool</span> headCkBoxIsChecked = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 点击datagridview单元格，可以勾选该行的checkbox</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dataList_CellMouseClick</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellMouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (e.RowIndex == <span class="number">-1</span> &amp;&amp; !headCkBoxIsChecked &amp;&amp; e.ColumnIndex == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataList.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[i].Cells[<span class="string">&quot;cb_check&quot;</span>].Value = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">headCkBoxIsChecked = <span class="literal">true</span>;</span><br><span class="line">columncb.HeaderText = <span class="string">&quot;✋ 已全选&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (e.RowIndex == <span class="number">-1</span> &amp;&amp; headCkBoxIsChecked &amp;&amp; e.ColumnIndex == <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataList.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[i].Cells[<span class="number">0</span>].Value = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">headCkBoxIsChecked = <span class="literal">false</span>;</span><br><span class="line">columncb.HeaderText = <span class="string">&quot;👆 全选&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(e.ColumnIndex == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">bool</span>)dataList.Rows[e.RowIndex].Cells[<span class="string">&quot;cb_check&quot;</span>].EditedFormattedValue == <span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[e.RowIndex].Cells[<span class="string">&quot;cb_check&quot;</span>].Value = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.dataList.Rows[e.RowIndex].Cells[<span class="string">&quot;cb_check&quot;</span>].Value = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.dataList.RefreshEdit();<span class="comment">//刷新操作，否则点击之后可能不能立即勾选</span></span><br><span class="line"><span class="comment">//记录选中行数</span></span><br><span class="line">selectNum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.dataList.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">bool</span>)dataList.Rows[i].Cells[<span class="string">&quot;cb_check&quot;</span>].EditedFormattedValue)</span><br><span class="line">&#123;</span><br><span class="line">selectNum += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.lbNum.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;0&#125; &quot;</span>, selectNum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="一个单元格添加CheckBox"><a href="#一个单元格添加CheckBox" class="headerlink" title="一个单元格添加CheckBox"></a>一个单元格添加CheckBox</h1><p>把 DataGridViewCheckBoxCell 实例放在指定的单元格里<br>如</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> chk = <span class="keyword">new</span> DataGridViewCheckBoxCell();</span><br><span class="line">dataGridView1.Rows[<span class="number">0</span>].Cells[<span class="number">0</span>] = chk;</span><br></pre></td></tr></table></figure><h1 id="DataGridView控件列头添加CheckBox"><a href="#DataGridView控件列头添加CheckBox" class="headerlink" title="DataGridView控件列头添加CheckBox"></a>DataGridView控件列头添加CheckBox</h1><blockquote><p>DataGridView控件是CS架构中用的比较频繁的一个控件，里面提供了checkbox列的功能，可是却没有在列头给出checkbox控件用于全选&#x2F;全部取消所有行的功能，确实是个遗憾，这里就通过绘制实现这个功能.</p></blockquote><h1 id="添加一个帮助类"><a href="#添加一个帮助类" class="headerlink" title="添加一个帮助类"></a>添加一个帮助类</h1><p>添加一个帮助类DataGridViewCheckBoxHeaderCell，用于绘制列头checkbox和创建鼠标单击事件，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataGridViewCheckBoxHeaderCell</span> : <span class="title">DataGridViewColumnHeaderCell</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">DataGridViewCheckBoxHeaderEventHander</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCheckBoxHeaderEventArgs e</span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Point checkBoxLocation;</span><br><span class="line">        <span class="keyword">private</span> Size checkBoxSize;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> _checked = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">private</span> Point _cellLocation = <span class="keyword">new</span> Point();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.VisualStyles.CheckBoxState _cbState =</span><br><span class="line">            System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> DataGridViewCheckBoxHeaderEventHander OnCheckBoxClicked;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//绘制列头checkbox</span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Paint</span>(<span class="params">System.Drawing.Graphics graphics,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      System.Drawing.Rectangle clipBounds,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      System.Drawing.Rectangle cellBounds,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">int</span> rowIndex,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewElementStates dataGridViewElementState,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">object</span> <span class="keyword">value</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">object</span> formattedValue,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="built_in">string</span> errorText,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewCellStyle cellStyle,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewAdvancedBorderStyle advancedBorderStyle,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      DataGridViewPaintParts paintParts</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.Paint(graphics, clipBounds, cellBounds, rowIndex,</span><br><span class="line">                       dataGridViewElementState, <span class="keyword">value</span>,</span><br><span class="line">                       formattedValue, errorText, cellStyle,</span><br><span class="line">                       advancedBorderStyle, paintParts);</span><br><span class="line">            Point p = <span class="keyword">new</span> Point();</span><br><span class="line">            Size s = CheckBoxRenderer.GetGlyphSize(graphics,</span><br><span class="line">                                                   System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal);</span><br><span class="line">            p.X = cellBounds.Location.X +</span><br><span class="line">                  (cellBounds.Width/<span class="number">2</span>) - (s.Width/<span class="number">2</span>) - <span class="number">1</span>; <span class="comment">//列头checkbox的X坐标</span></span><br><span class="line">            p.Y = cellBounds.Location.Y +</span><br><span class="line">                  (cellBounds.Height/<span class="number">2</span>) - (s.Height/<span class="number">2</span>); <span class="comment">//列头checkbox的Y坐标</span></span><br><span class="line">            _cellLocation = cellBounds.Location;</span><br><span class="line">            checkBoxLocation = p;</span><br><span class="line">            checkBoxSize = s;</span><br><span class="line">            <span class="keyword">if</span> (_checked)</span><br><span class="line">                _cbState = System.Windows.Forms.VisualStyles.</span><br><span class="line">                    CheckBoxState.CheckedNormal;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                _cbState = System.Windows.Forms.VisualStyles.</span><br><span class="line">                    CheckBoxState.UncheckedNormal;</span><br><span class="line">            CheckBoxRenderer.DrawCheckBox</span><br><span class="line">                (graphics, checkBoxLocation, _cbState);</span><br><span class="line">        &#125;</span><br><span class="line">      </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 点击列头checkbox单击事件</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnMouseClick</span>(<span class="params">DataGridViewCellMouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Point p = <span class="keyword">new</span> Point(e.X + _cellLocation.X, e.Y + _cellLocation.Y);</span><br><span class="line">            <span class="keyword">if</span> (p.X &gt;= checkBoxLocation.X &amp;&amp; p.X &lt;=</span><br><span class="line">                                             checkBoxLocation.X + checkBoxSize.Width</span><br><span class="line">                &amp;&amp; p.Y &gt;= checkBoxLocation.Y &amp;&amp; p.Y &lt;=</span><br><span class="line">                checkBoxLocation.Y + checkBoxSize.Height)</span><br><span class="line">            &#123;</span><br><span class="line">                _checked = !_checked;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="comment">//获取列头checkbox的选择状态</span></span><br><span class="line">                DataGridViewCheckBoxHeaderEventArgs ex = <span class="keyword">new</span> DataGridViewCheckBoxHeaderEventArgs();</span><br><span class="line">                ex.CheckedState = _checked;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">object</span> sender = <span class="keyword">new</span> <span class="built_in">object</span>(); <span class="comment">//此处不代表选择的列头checkbox，只是作为参数传递。应该列头checkbox是绘制出来的，无法获得它的实例</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (OnCheckBoxClicked != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    OnCheckBoxClicked(sender, ex); <span class="comment">//触发单击事件</span></span><br><span class="line">                    <span class="keyword">this</span>.DataGridView.InvalidateCell(<span class="keyword">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">base</span>.OnMouseClick(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义包含列头checkbox选择状态的参数类</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DataGridViewCheckBoxHeaderEventArgs</span> : <span class="title">EventArgs</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> checkedState;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> CheckedState</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> checkedState; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; checkedState = <span class="keyword">value</span>; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h1><p>在有DataGridView的界面，添加代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>给DataGridView添加checkbox列头</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AddCheckboxCell</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DataGridViewCheckBoxHeaderCell ch = <span class="keyword">new</span> DataGridViewCheckBoxHeaderCell();</span><br><span class="line">            ch.OnCheckBoxClicked += <span class="keyword">new</span> DataGridViewCheckBoxHeaderCell.DataGridViewCheckBoxHeaderEventHander(ch_OnCheckBoxClicked);</span><br><span class="line">            <span class="comment">//第一列为DataGridViewCheckBoxColumn</span></span><br><span class="line">            DataGridViewCheckBoxColumn checkboxCol = <span class="keyword">new</span> DataGridViewCheckBoxColumn();</span><br><span class="line">            checkboxCol.HeaderCell = ch;</span><br><span class="line">            checkboxCol.HeaderCell.Value = <span class="built_in">string</span>.Empty; <span class="comment">//消除列头checkbox旁出现的文字</span></span><br><span class="line">            <span class="keyword">this</span>.dgvSelectAll.Columns.Insert(<span class="number">0</span>, checkboxCol);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">ch_OnCheckBoxClicked</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCheckBoxHeaderEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (DataGridViewRow dgvRow <span class="keyword">in</span> <span class="keyword">this</span>.dgvSelectAll.Rows)</span><br><span class="line">            &#123;</span><br><span class="line">                dgvRow.Cells[<span class="number">0</span>].Value = e.CheckedState;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.dgvSelectAll.RefreshEdit();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="formatted值的类型错误-System-FormatException-异常"><a href="#formatted值的类型错误-System-FormatException-异常" class="headerlink" title="formatted值的类型错误 System.FormatException 异常"></a>formatted值的类型错误 System.FormatException 异常</h1><p>在DataGridView手动添加了CheckBox列;在窗体Show的时候,遇到一个错误:<br>**错误如下: **</p><ul><li>DataGridView中发生一下异常:System.FormatException:单元格的Formatted值的类型错误.要替换此默认对话框,请处理DataError事件.</li></ul><p><strong>点击以后有一对话框错误如下:</strong></p><p>DataGridView中发生一下异常:</p><p>SystemArgumentException:为DataGridViewCheckBoxCell提供的值的类型错误.</p><p>在System.Windows.Forms.DataGridViewCheckBoxCell.set_EditiingCellFormattedValue(Object value)</p><p>在System.Windows.Forms.DataGridView.InitializeEditingCellValue (DataGridViewCessStyle&amp;dataGridViewCellStyle,DataGridViewCell&amp;dataGridViewCell)</p><p>要替换此默认对话框,请处理DataError事件.</p><p>我之前曾经用过CheckBox列，此次和之前的区别是 AllowUserToAddRows&#x3D;true;<br>我将该属性设置为false，错误没有出现，可以确定该错误与系统自动添加的行及checBox的默认值为null有关。</p><p>我在DefaultValuesNeeded事件中增加了默认值，发现错误依旧。</p><p>仔细研究发现如下两种解决方法：</p><p>其一：在CellFormatting事件中处理</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.dataGridView1.Columns[e.ColumnIndex].Name == <span class="string">&quot;AZK&quot;</span>)               </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.Value == <span class="literal">null</span>)                       </span><br><span class="line">            e.Value = <span class="literal">false</span>;               </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其二：在在CellFormatting事件中不处理，但DataError事件中处理</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;               </span><br><span class="line">    <span class="keyword">if</span> (dataGridView1.Rows[e.RowIndex].IsNewRow)                   </span><br><span class="line">        <span class="keyword">return</span>;           </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Note: DataGridView中几个事件发生的顺序记录如下，以备查寻<br>在AllowUserToAddRows&#x3D;true时候的事件发生次序</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Form.Show ---&gt; CellFormatting (如果出错，<span class="keyword">goto</span> DataError)，注意这里的NewRow没有触发DefaultValuesNeeded事件。</span><br></pre></td></tr></table></figure><p>如果发生其他比如 RowEnter事件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（DefaultValuesNeeded） ---&gt; RowEnter ---&gt; CellClick</span><br><span class="line"></span><br><span class="line">（DefaultValuesNeeded） ---&gt; RowsAdded ---&gt; UserAddedRow</span><br><span class="line"></span><br><span class="line">DefaultValuesNeeded事件不会发生在 IsNewRow=<span class="literal">true</span>的row上</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.bbsmax.com/A/MyJxM0ba5n/">DateGridView标题列头添加复选框</a></li><li><a href="http://www.dui580.com/Html/?953.html">C#在dataGridView表格中插入复选框</a></li><li><a href="https://www.cnblogs.com/guanshan/p/guan2021-4-7_001.html">C#DataGridViewCheckBoxColumn用法（刷新操作，否则点击之后可能不能立即勾选）</a></li><li><a href="https://bbs.csdn.net/topics/392482043">如何在DataGridView中的某一个单元格添加CheckBox？</a></li><li><a href="https://www.cnblogs.com/guanshan/p/guan2021-4-9_001.html">C# winform单元格的formatted值的类型错误 DataGridView中CheckBox列运行时候System.FormatException异常</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 对表格控件 DataGridView 中添加复选框,DataGridViewCheckBoxColumn 使用方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/tags/DataGridView/"/>
    
    <category term="表格" scheme="https://zml3589110.github.io/tags/%E8%A1%A8%E6%A0%BC/"/>
    
    <category term="复选框" scheme="https://zml3589110.github.io/tags/%E5%A4%8D%E9%80%89%E6%A1%86/"/>
    
    <category term="CheckBox" scheme="https://zml3589110.github.io/tags/CheckBox/"/>
    
    <category term="DataGridViewCheckBoxColumn" scheme="https://zml3589110.github.io/tags/DataGridViewCheckBoxColumn/"/>
    
    <category term="FormatException错误" scheme="https://zml3589110.github.io/tags/FormatException%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>C# 动态工具栏实现</title>
    <link href="https://zml3589110.github.io/posts/906356836.html"/>
    <id>https://zml3589110.github.io/posts/906356836.html</id>
    <published>2023-02-17T07:35:20.000Z</published>
    <updated>2023-02-17T08:13:28.659Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>是将MenuStrip中的所有DropDownItems列出来，供用户选择，被选中的项将在ToolStrip被显示出来，并且可以使用与其对应的DropDownItem的事件.</p><p>其工作流程可以分解如下图所示：</p><p>图１．１流程图</p><p>实际上这个图所描述的正是我们上面说的一样，只是换作图形表示而已，但这样一来程序的结构就变得清晰起来了。</p><p>实际上这个图所描述的正是我们上面说的一样，只是换作图形表示而已，但这样一来程序的结构就变得清晰起来了。可以看出，整个问题实际上被分解成了三个部分，即遍历菜单栏所有可用的DropDownItems，提供用户的选择界面，和为工具栏动态添Items及其事件。提供用户的选择界面这部分内容没什么技术含量，可以用任何一种你喜欢的方式实现，没什么好说的。下面我将重点说一下遍历菜单栏所有可用的DropDownItems，和为工具栏动态添Items及其事件这两部分。</p><h2 id="一、-遍历菜单栏所有可用的DropDownItems"><a href="#一、-遍历菜单栏所有可用的DropDownItems" class="headerlink" title="一、  遍历菜单栏所有可用的DropDownItems"></a>一、  遍历菜单栏所有可用的DropDownItems</h2><p>菜单栏的结构实际上是典型的“森林”，而每一个下拉菜单(DropDownItem)都是一棵树。</p><p>面对这种问题最好的解决方式就是递归。很多人提到递归就头大，其实对于了解递归的人来说递归很简单。尤其是树的遍历就更加的简单了，它有固有的模式，一般先对结束条件进行判断，然后递归遍历各个子树，就这么简单。</p><p><strong>对于本题DropDownItem的函数可以这样来写：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ToolStripMenuItem <span class="title">Items</span>(<span class="params">ToolStripMenuItem tsItem</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;   <span class="comment">//结束条件判定</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (tsItem.DropDownItems.Count &lt;= <span class="number">0</span>) <span class="keyword">return</span> tsItem;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    &#123;   <span class="comment">//遍历各子树</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> tsItem.DropDownItems)</span><br><span class="line"></span><br><span class="line">        &#123;   <span class="comment">//递归遍历mItem子树</span></span><br><span class="line"></span><br><span class="line">            Items(mItem);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>** 代码说明：**</p><ul><li>函数首先判断节点(就是一个DropDownItem)是否含有子节点，如果它不含有子节点就return它(这就是结束条件判断)。</li></ul><blockquote><p>我们这样做完全是因为我们菜单使用习惯(所有的菜单功能都是在叶子节点实现功能的)，当然我们也可以将非叶子节点也return回去。但是最好不要这么干，因为它会令我们产生很多困扰(不信邪的朋友可以试试)。下一步再分别遍历该节点的每一个子树</p></blockquote><ul><li>上面是遍历某个DropDownItem和它的子节点，下面遍历整个菜单栏：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">…… </span><br><span class="line"></span><br><span class="line">                <span class="comment">//这是遍历菜单栏，可以放在任何你需要的地方，</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//注: menuStrip1是我菜单栏的名字</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> <span class="keyword">this</span>.menuStrip1.Items)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//递归遍历各个DropDownItem</span></span><br><span class="line"></span><br><span class="line">                    Items(mItem);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">……</span><br></pre></td></tr></table></figure><blockquote><p>上面就是遍历菜单的全部代码。这当然还没完，我们需要将遍历菜单得到的各个菜单项存入容器，以备下面的程序使用。</p></blockquote><p><strong>什么容器都可以，而我选择了List&lt;&gt;。要实现这个功能：</strong></p><ul><li>1.首先，我们需要增加一个容器 lMenuItems</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">……</span><br><span class="line"></span><br><span class="line"><span class="comment">//增加一个全局变量，它是一个容器</span></span><br><span class="line"></span><br><span class="line">List&lt;ToolStripMenuItem&gt; lMenuItems;</span><br><span class="line"></span><br><span class="line">……</span><br></pre></td></tr></table></figure><ul><li>2.然后，在遍历菜单栏程序段中添加代码</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这是遍历菜单栏，可以放在任何你需要的地方，</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//menuStrip1是我菜单栏的名字</span></span><br><span class="line"></span><br><span class="line">                lMenuItems = <span class="keyword">new</span> List&lt;ToolStripMenuItem&gt;();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> <span class="keyword">this</span>.menuStrip1.Items)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//递归遍历各个DropDownItem</span></span><br><span class="line"></span><br><span class="line">                    Items(mItem);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">……</span><br></pre></td></tr></table></figure><ul><li>3.将DropDownItem的递归遍历函数修改成下面这个样子</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> ToolStripMenuItem <span class="title">Items</span>(<span class="params">ToolStripMenuItem tsItem</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;   <span class="comment">//结束条件判定</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (tsItem.DropDownItems.Count &lt;= <span class="number">0</span>) <span class="keyword">return</span> tsItem;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">            &#123;   <span class="comment">//遍历各子树</span></span><br><span class="line"></span><br><span class="line">                ToolStripMenuItem <span class="keyword">value</span> = <span class="literal">null</span>;<span class="comment">//临时变量</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> tsItem.DropDownItems)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//递归遍历mItem子树</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">value</span> = Items(mItem);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">value</span> != <span class="literal">null</span> &amp;&amp; lMenuItems != <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                            lMenuItems.Add(<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>好，初战告捷。跳过如何提供用户的选择界面部分不提，直接进入重点。</strong></p><h2 id="为工具栏动态添Items及其事件"><a href="#为工具栏动态添Items及其事件" class="headerlink" title="为工具栏动态添Items及其事件"></a>为工具栏动态添Items及其事件</h2><p>给工具栏动态添加Items其实是一件非常简单的事，就像有些人说的new一个，再Add()进去就搞定了。</p><p>关键的问题不在这里，如何使各个工具栏的Item的事件可以与DropDownItem的事件一一对应才是问题的关键。</p><p>各个DropDownItem都可以拥有自己的事件，各个事件的名称不同，而且事件是不能直接拿事件赋值的，如果无法实现事件的动态赋值，菜单栏动态添加也就没戏了。如果没有好多解决方法，程序开发到这里只能是僵局。</p><p><strong>关于事件的调整</strong></p><ul><li>1.首先事件是可以调用事件的，并且几个控件可以共用一个事件。这就为问题的解决提供了可能性。<br>让所有的可用菜单项都使用一个事件，或者说让这个事件统领其他的菜单事件。<br>我们新建一个事件，并将这个事件命名为Menu_Click，它来统领整个Menu的所有Click事件：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Menu_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>       &#123; …… &#125;</span><br></pre></td></tr></table></figure><ul><li>2.第二步，将原来所有DropDownItems的事件(菜单项事件)都替换成Menu_Click。</li></ul><p><strong>小知识： 事件参数中的sender事实上就是发出事件的控件(或源)，但因为它的类型是object，所有在使用前要对其进行强制类型转换。</strong></p><p>比如：有一个sender的实际类型是ToolStripItem，我需要获得sender的Name属性值就需要：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> sender_Name = ((ToolStripItem)sender).Name;</span><br></pre></td></tr></table></figure><p><strong>应用上面特点，在事件处理函数Menu_Click中就不难使用switch或者if&#x2F;else来区分事件的来源，并分别调用他们自己的事件处理函数了。</strong></p><h2 id="3-动态添加"><a href="#3-动态添加" class="headerlink" title="3.动态添加"></a>3.动态添加</h2><p><strong>解决了事件的问题，工具栏的动态添加实际上就是一句话的事</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">toolStrip1.Items.Add(<span class="keyword">new</span> ToolStripButton(</span><br><span class="line"></span><br><span class="line">                                     &lt;某DropDownItem&gt;.Text, <span class="comment">//DropDownItem显示的文字</span></span><br><span class="line"></span><br><span class="line">                                     &lt;某DropDownItem&gt;.Image, <span class="comment">//DropDownItem图标</span></span><br><span class="line"></span><br><span class="line">                                     <span class="keyword">new</span> System.EventHandler(Menu_Click), <span class="comment">//DropDownItem事件</span></span><br><span class="line"></span><br><span class="line">                                     &lt;某DropDownItem&gt;.Name <span class="comment">//DropDownItem名称</span></span><br><span class="line"></span><br><span class="line">));</span><br></pre></td></tr></table></figure><h1 id="简单实例："><a href="#简单实例：" class="headerlink" title="简单实例："></a>简单实例：</h1><p><strong>(请将代码粘贴到你新建项目中对应得位置)</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Form1.Designer.cs*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required designer variable.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.ComponentModel.IContainer components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Clean up any resources being used.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;disposing&quot;&gt;</span>true if managed resources should be disposed; otherwise, false.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (disposing &amp;&amp; (components != <span class="literal">null</span>))</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                components.Dispose();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">base</span>.Dispose(disposing);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required method for Designer support - do not modify</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> the contents of this method with the code editor.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1 = <span class="keyword">new</span> System.Windows.Forms.MenuStrip();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31 = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem = <span class="keyword">new</span> System.Windows.Forms.ToolStripMenuItem();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span> = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1 = <span class="keyword">new</span> System.Windows.Forms.ToolStrip();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.SuspendLayout();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// menuStrip1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Items.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Name = <span class="string">&quot;menuStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.TabIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.Text = <span class="string">&quot;menuStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// first</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Name = <span class="string">&quot;first&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">47</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Text = <span class="string">&quot;first&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.first.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.Name = <span class="string">&quot;f1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f1.Text = <span class="string">&quot;f1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f11</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Name = <span class="string">&quot;f11&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Text = <span class="string">&quot;f11&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f11.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f12</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Name = <span class="string">&quot;f12&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Text = <span class="string">&quot;f12&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f12.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Name = <span class="string">&quot;f2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Text = <span class="string">&quot;f2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f2.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f3</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.Name = <span class="string">&quot;f3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f3.Text = <span class="string">&quot;f3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// f31</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Name = <span class="string">&quot;f31&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Text = <span class="string">&quot;f31&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.f31.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// secondToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.Name = <span class="string">&quot;secondToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">53</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.secondToolStripMenuItem.Text = <span class="string">&quot;second&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s1ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Name = <span class="string">&quot;s1ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Text = <span class="string">&quot;s1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s1ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s2ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Name = <span class="string">&quot;s2ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Text = <span class="string">&quot;s2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s2ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s3ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.Name = <span class="string">&quot;s3ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s3ToolStripMenuItem.Text = <span class="string">&quot;s3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s31ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.Name = <span class="string">&quot;s31ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s31ToolStripMenuItem.Text = <span class="string">&quot;s31&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s311ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Name = <span class="string">&quot;s311ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">94</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Text = <span class="string">&quot;s311&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s311ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// s32ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Name = <span class="string">&quot;s32ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">88</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Text = <span class="string">&quot;s32&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.s32ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// thirdToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.DropDownItems.AddRange(<span class="keyword">new</span> System.Windows.Forms.ToolStripItem[] &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem,</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.Name = <span class="string">&quot;thirdToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">47</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.thirdToolStripMenuItem.Text = <span class="string">&quot;third&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// t1ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Name = <span class="string">&quot;t1ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Text = <span class="string">&quot;t1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t1ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// t2ToolStripMenuItem</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Name = <span class="string">&quot;t2ToolStripMenuItem&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">82</span>, <span class="number">22</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Text = <span class="string">&quot;t2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.t2ToolStripMenuItem.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Menu_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// set</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">106</span>, <span class="number">185</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Name = <span class="string">&quot;set&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.TabIndex = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Text = <span class="string">&quot;set-&gt;Add&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.<span class="keyword">set</span>.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.btnSet_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// toolStrip1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">0</span>, <span class="number">24</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Name = <span class="string">&quot;toolStrip2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.TabIndex = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.toolStrip1.Text = <span class="string">&quot;toolStrip2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Form1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF( <span class="number">6F</span> , <span class="number">12F</span> );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">266</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.toolStrip1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.<span class="keyword">set</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.menuStrip1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;Form1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.menuStrip1.PerformLayout();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.PerformLayout();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem first;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f11;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f12;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f3;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem f31;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem secondToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s1ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s2ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s3ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s31ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s311ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem s32ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem thirdToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem t1ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStripMenuItem t2ToolStripMenuItem;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.MenuStrip menuStrip1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.ToolStrip toolStrip1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.Button <span class="keyword">set</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*     Form1.cs    */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line"></span><br><span class="line">    &#123;   <span class="comment">//容器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> List&lt;ToolStripMenuItem&gt; lMenuItems;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;   <span class="comment">//加载菜单项到容器</span></span><br><span class="line"></span><br><span class="line">            lMenuItems = <span class="keyword">new</span> List&lt;ToolStripMenuItem&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> <span class="keyword">this</span>.menuStrip1.Items)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                Items(mItem);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> 菜单事件</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Menu_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> itemName = ((ToolStripItem)sender).Name;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (itemName[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;f&#x27;</span>: first_Click(sender, e); <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;s&#x27;</span>: second_Click(sender, e); <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;t&#x27;</span>: third_Click(sender, e); <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">third_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;这是菜单“Third”的事件处理函数&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">second_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(<span class="string">&quot;这是菜单“Second”的事件处理函数&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">first_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> itemName = ((ToolStripItem)sender).Name;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> showString = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (itemName)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f11&quot;</span>: showString = <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f11.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f12&quot;</span>: showString =  <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f12.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f2&quot;</span>: showString = <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f2.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;f31&quot;</span>: showString = <span class="string">&quot;菜单项“&quot;</span> + <span class="keyword">this</span>.f31.Name + <span class="string">&quot;”被按下了&quot;</span>; <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                <span class="literal">default</span>: <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (showString != <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(showString);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment">//递归遍历DropDownItem函数</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> ToolStripMenuItem <span class="title">Items</span>(<span class="params">ToolStripMenuItem tsItem</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;   <span class="comment">//结束条件判定</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (tsItem.DropDownItems.Count &lt;= <span class="number">0</span>) <span class="keyword">return</span> tsItem;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">            &#123;   <span class="comment">//遍历各子树</span></span><br><span class="line"></span><br><span class="line">                ToolStripMenuItem <span class="keyword">value</span> = <span class="literal">null</span>;<span class="comment">//临时变量</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (ToolStripMenuItem mItem <span class="keyword">in</span> tsItem.DropDownItems)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">value</span> = Items(mItem);<span class="comment">//递归遍历mItem子树</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">value</span> != <span class="literal">null</span> &amp;&amp; lMenuItems != <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                        lMenuItems.Add(<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="comment">//递归遍历DropDownItem函数&lt;END&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment">//动态设置工具栏函数</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSet_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            seting fset = <span class="keyword">new</span> seting();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (ToolStripMenuItem mitem <span class="keyword">in</span> lMenuItems)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (mitem.Name != <span class="keyword">new</span> ToolStripSeparator().Name)</span><br><span class="line"></span><br><span class="line">                    fset.listBox1.Items.Add(mitem.Name);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (fset.ShowDialog() == DialogResult.OK)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">string</span> mn <span class="keyword">in</span> fset.listBox1.SelectedItems)</span><br><span class="line"></span><br><span class="line">                &#123;   <span class="comment">//如果toolStrip1还没有加载，加载之</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (toolStrip1 == <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">                    &#123;</span><br><span class="line"></span><br><span class="line">                        toolStrip1 = <span class="keyword">new</span> ToolStrip();</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Top = menuStrip1.Bottom + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Left = menuStrip1.Left;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Name = <span class="string">&quot;toolStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">25</span>);</span><br><span class="line"></span><br><span class="line">                        toolStrip1.TabIndex = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                        toolStrip1.Text = <span class="string">&quot;toolStrip1&quot;</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">                        Controls.Add(<span class="keyword">this</span>.toolStrip1);<span class="comment">//将工具栏添加到窗口上</span></span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//找到与列表框中对应的DropDownItem，添加之</span></span><br><span class="line"></span><br><span class="line">                    <span class="built_in">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">while</span> (i &lt; lMenuItems.Count &amp;&amp; mn != lMenuItems[i].Name)</span><br><span class="line"></span><br><span class="line">                    &#123; i++; &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (i &lt; lMenuItems.Count)</span><br><span class="line"></span><br><span class="line">                    &#123;</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//给ToolStrip动态添加</span></span><br><span class="line"></span><br><span class="line">                        toolStrip1.Items.Add(<span class="keyword">new</span> ToolStripButton(</span><br><span class="line"></span><br><span class="line">                                                            lMenuItems[i].Text,</span><br><span class="line"></span><br><span class="line">                                                            lMenuItems[i].Image,</span><br><span class="line"></span><br><span class="line">                                                            <span class="keyword">new</span> System.EventHandler(Menu_Click),</span><br><span class="line"></span><br><span class="line">                                                            lMenuItems[i].Name</span><br><span class="line"></span><br><span class="line">                                                            )</span><br><span class="line"></span><br><span class="line">                                              );</span><br><span class="line"></span><br><span class="line">                        lMenuItems.Remove(lMenuItems[i]);<span class="comment">//把已经添加过的从列表中去除</span></span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="comment">//动态设置工具栏函数&lt;END&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*seting.Designer.cs*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">seting</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required designer variable.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.ComponentModel.IContainer components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Clean up any resources being used.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;disposing&quot;&gt;</span>true if managed resources should be disposed; otherwise, false.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"><span class="built_in">bool</span> disposing</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (disposing &amp;&amp; (components != <span class="literal">null</span>))</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                components.Dispose();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">base</span>.Dispose(disposing);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Required method for Designer support - do not modify</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> the contents of this method with the code editor.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1 = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2 = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1 = <span class="keyword">new</span> System.Windows.Forms.ListBox();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// button1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">128</span>, <span class="number">238</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Name = <span class="string">&quot;button1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.TabIndex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Text = <span class="string">&quot;add&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button1.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.button1_Click);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// button2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">209</span>, <span class="number">238</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Name = <span class="string">&quot;button2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.TabIndex = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.Text = <span class="string">&quot;取消&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.button2.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// listBox1</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.FormattingEnabled = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.ItemHeight = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">12</span>, <span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.Name = <span class="string">&quot;listBox1&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.SelectionMode = System.Windows.Forms.SelectionMode.MultiSimple;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">268</span>, <span class="number">220</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.listBox1.TabIndex = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// seting</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleDimensions = <span class="keyword">new</span> System.Drawing.SizeF( <span class="number">6F</span> , <span class="number">12F</span> );</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">266</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.listBox1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.button2);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Controls.Add(<span class="keyword">this</span>.button1);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">&quot;seting&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;seting&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.Button button1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> System.Windows.Forms.Button button2;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> System.Windows.Forms.ListBox listBox1;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*seting.Designer.cs*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">dynamicToolbar</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">seting</span> : <span class="title">Form</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">seting</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.DialogResult = DialogResult.OK;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Close();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/fd7893/article/details/1319341">C#趣味小程序(6)——动态工具栏</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 工具栏达到动态效果</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="动态" scheme="https://zml3589110.github.io/tags/%E5%8A%A8%E6%80%81/"/>
    
    <category term="工具栏" scheme="https://zml3589110.github.io/tags/%E5%B7%A5%E5%85%B7%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>C# 动态添加和删除控件</title>
    <link href="https://zml3589110.github.io/posts/1255716618.html"/>
    <id>https://zml3589110.github.io/posts/1255716618.html</id>
    <published>2023-02-17T07:19:20.000Z</published>
    <updated>2023-02-17T08:13:28.546Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求效果"><a href="#需求效果" class="headerlink" title="需求效果"></a>需求效果</h1><img src="https://img-blog.csdn.net/20140311141858203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGliZXJ4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><p><strong>如上图操作添加按钮,则下面自动增加一行GROUPBOX控件,操作删除则自动删除最后一行开始的BROUPBOX控件.</strong></p><h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="1-定义一个记录行数的全局变量"><a href="#1-定义一个记录行数的全局变量" class="headerlink" title="1)定义一个记录行数的全局变量"></a>1)定义一个记录行数的全局变量</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> watch_num = <span class="number">0</span>; </span><br></pre></td></tr></table></figure><h2 id="2-编写动态添加的代码"><a href="#2-编写动态添加的代码" class="headerlink" title="2)编写动态添加的代码"></a>2)编写动态添加的代码</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">addWatchFrom</span>(<span class="params"><span class="built_in">int</span> _series,<span class="built_in">string</span> _diskName</span>)</span> &#123;</span><br><span class="line">          <span class="keyword">try</span></span><br><span class="line">          &#123;</span><br><span class="line"> </span><br><span class="line">              GroupBox s1 = <span class="keyword">new</span> GroupBox();</span><br><span class="line"> </span><br><span class="line">              s1.Top = <span class="number">200</span> + _series*<span class="number">90</span>;</span><br><span class="line">              s1.Left = <span class="number">8</span>;</span><br><span class="line"> </span><br><span class="line">              s1.Width = <span class="number">260</span>;</span><br><span class="line"> </span><br><span class="line">              s1.Height = <span class="number">80</span>;</span><br><span class="line"> </span><br><span class="line">                            <span class="keyword">this</span>.Controls.Add(s1);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">          &#125;</span><br><span class="line">          catch (Exception ex)</span><br><span class="line">          &#123;</span><br><span class="line"> </span><br><span class="line">              MessageBox.Show(ex.Message); </span><br><span class="line"> </span><br><span class="line">          &#125;</span><br><span class="line">      </span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//添加按钮的操作</span></span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line"> </span><br><span class="line">          addWatchFrom(watch_num, <span class="string">&quot;C&quot;</span>);</span><br><span class="line"> </span><br><span class="line">          watch_num++;</span><br><span class="line"> </span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2 id="3）编写删除按钮的操作"><a href="#3）编写删除按钮的操作" class="headerlink" title="3）编写删除按钮的操作"></a>3）编写删除按钮的操作</h2><p><strong>这儿需要先遍历所有添加的GroupBOX控件，然后依据其纵向Y轴的变化，定位到需要删除的控件，实现删除。注意控件编号要减一，否则会异常。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除控件</span></span><br><span class="line">      <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button4_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line">          <span class="keyword">if</span> ((<span class="keyword">this</span>.watch_num<span class="number">-1</span>) &gt;=<span class="number">0</span>)<span class="comment">//if 1</span></span><br><span class="line">          &#123;</span><br><span class="line"> </span><br><span class="line">              </span><br><span class="line">             <span class="keyword">foreach</span> (Control  obj0 <span class="keyword">in</span> <span class="keyword">this</span>.Controls )<span class="comment">//判断界面上的控件 </span></span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">if</span> (obj0.GetType().ToString().Equals(<span class="string">&quot;System.Windows.Forms.GroupBox&quot;</span>)) </span><br><span class="line">               &#123;</span><br><span class="line"> </span><br><span class="line">                                      <span class="keyword">if</span> (obj0.Location.Y ==(<span class="number">200</span> + (<span class="keyword">this</span>.watch_num<span class="number">-1</span>) * <span class="number">90</span>))</span><br><span class="line">                   &#123;</span><br><span class="line">                                               <span class="keyword">this</span>.Controls.Remove(obj0);</span><br><span class="line"> </span><br><span class="line">                       <span class="keyword">if</span> (<span class="keyword">this</span>.watch_num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                           <span class="keyword">this</span>.watch_num--;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">                   </span><br><span class="line">                   <span class="comment">//此时只要执行你的删除控件代码即可</span></span><br><span class="line">               &#125;</span><br><span class="line"> </span><br><span class="line">             &#125; </span><br><span class="line">           </span><br><span class="line"> </span><br><span class="line">          &#125;<span class="comment">//if 1</span></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/tiberx/article/details/21012703">C#实现动态添加和删除控件</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 对控件进行动态添加和删除</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="动态" scheme="https://zml3589110.github.io/tags/%E5%8A%A8%E6%80%81/"/>
    
    <category term="添加" scheme="https://zml3589110.github.io/tags/%E6%B7%BB%E5%8A%A0/"/>
    
    <category term="删除" scheme="https://zml3589110.github.io/tags/%E5%88%A0%E9%99%A4/"/>
    
  </entry>
  
  <entry>
    <title>C#窗体之四（点叉叉按钮关闭后进程没结束）</title>
    <link href="https://zml3589110.github.io/posts/1670766738.html"/>
    <id>https://zml3589110.github.io/posts/1670766738.html</id>
    <published>2023-02-17T01:41:20.000Z</published>
    <updated>2023-02-17T08:13:28.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>如果要解决“C#winform 点叉叉按钮关闭一form窗体应用后，后台进程仍在运行”的问题，可以直接点击目录跳转到3.4关闭窗体的多种方法。</p></blockquote><p>前面为记录遇到该问题的一些过程。<br>之前用C#做了一个日志备份的窗体应用程序，最近把这个程序完善了一下，在窗体上显示了配置文件中的一些信息，并且增加了更新按钮，点击会将一些比较重要的配置写到日志文件中。</p><img src="https://img-blog.csdnimg.cn/59785734b5e94c6f89aa5bd8a3cde906.png"><p><strong>但是在测试的时候发现了一个问题，运行生成的Release文件中的exe文件（因为最后要放到服务器上使用，不会将整个项目拷贝过去，只拷贝Release文件）。</strong></p><img src="https://img-blog.csdnimg.cn/6f5afdc8431a4b3ca67c61317e80a3be.png"><p>在第一次运行的时候没什么问题，但是将程序关闭后，修改完配置文件中的线程数再启动的时候，窗体可以正常显示，备份功能也可以正常实现，但是日志中没有写入任何东西，点击更新按钮也没有将配置文件中的信息写入日志当中。下面的是第一次运行的时候写入的，但是后面就不显示了，点击更新按钮也不显示。</p><img src="https://img-blog.csdnimg.cn/813e8996d60a4726bd02d107d9ad2246.png"><h2 id="一、可能的原因1"><a href="#一、可能的原因1" class="headerlink" title="一、可能的原因1"></a>一、可能的原因1</h2><blockquote><p>1.1猜想1</p></blockquote><p>因为程序里面有使用多线程，我想会不会是在vs上运行程序生成项目的时候，线程数被固定了，后续更改配置文件的线程数与生成时项目中的线程数不一致导致程序出错。</p><img src="https://img-blog.csdnimg.cn/fe113372625f430fa7b434879cb07e60.png"><blockquote><p>1.2验证</p></blockquote><p>首先生成了一个4线程的项目，然后运行Release文件中的exe文件，发现功能没问题，日志也可以写入。<br>然后将窗体关闭，将配置文件中的线程数改为3，窗体启动后发现无法正常使用。<br>然后将窗体关闭，将配置文件中的线程数改为2，亦是如此。<br>然后将窗体关闭，将配置文件中的线程数改回4，亦是如此。</p><p>后续又做了如下验证：</p><img src="https://img-blog.csdnimg.cn/4811208d35734e769a37373485ee9ce5.jpeg"><p>期间有debug，开启线程没有问题，会按照配置文件中修改的参数来开启对应的线程，点击按钮也有执行日志写入功能，只是.log日志文件中没有实际写入，这说明程序应该是没有问题的。</p><blockquote><p>1.3结论</p></blockquote><p>根据上面的验证结果，得出的结论是跟生成的线程数没有关系。</p><h2 id="二、可能的原因2"><a href="#二、可能的原因2" class="headerlink" title="二、可能的原因2"></a>二、可能的原因2</h2><blockquote><p>2.1猜想2</p></blockquote><p>我想起之前在更新版本的时候，需要删除之前的版本或者给之前版本的文件加上日期，在应用窗体已经关闭的情况下还是显示该文件被占用无法删除或者修改，打开任务管理器，会发现有好几个该程序的进程正在运行，如实想会不会是因为该程序在上次关闭的时候没有彻底关闭，后来又运行exe的时候导致开了好几个，导致日志无法写入。</p><blockquote><p>2.2验证</p></blockquote><p><strong>运行Release文件中的exe文件，将窗体应用关闭后，发现后台进行并没有关闭</strong></p><img src="https://img-blog.csdnimg.cn/0e0a036282114afc9660ccfc12e411df.png"><p>此时不做任何修改，再执行exe文件，窗体启动后发现无法正常使用。<br>然后手动在任务管理器中结束该进程，重新启动exe，发现功能可以正常使用。</p><p>修改配置文件中的线程数，重新启动exe，发现功能可以正常使用。</p><blockquote><p>2.3结论</p></blockquote><p>功能无法正常使用就是因为程序进行没有完全结束，即使关闭了窗体应用，但是程序还在后台运行，如果在每次启动前去任务管理器将该进程关闭，该就可以解决。</p><p>但是该方法比较麻烦，而且治标不治本，于是便开始查询为什么会出现这种情况。</p><h2 id="三、最终解决办法"><a href="#三、最终解决办法" class="headerlink" title="三、最终解决办法"></a>三、最终解决办法</h2><blockquote><p>3.1出现的原因：</p></blockquote><p>有的说是有许多人在用做c# 做登录窗体时，登录成功后当前登录Form关闭，打开Main窗体，但Main窗体点关闭按钮后程序仍在进程仍旧在运行。<br>事实上，关闭Main窗体，只是关闭了Main窗体的线程，并没有关闭程序的主线程，即程序的主线程为登录From。</p><p>但是我这个只有一个窗口，所以不存在多窗体没有关闭的情况。<br><strong>我的真实情况是程序里面开线程了，有托管线程（非主线程），无法干净地退出。（自己遇到的情况基本也是如此）</strong></p><blockquote><p>3.2解决办法1</p></blockquote><p>有的说在FormClosing中添加Application.Exit()可以彻底结束进程。<br>怎么使用FormClosing事件，可以参考：<br>链接: <a href="https://jingyan.baidu.com/article/3065b3b68dafb5becff8a4c4.html">FormClosing事件在哪，怎么打开FormClosing事件</a></p><p><em><strong>于是添加了如下代码：</strong></em></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosing</span>(<span class="params"><span class="built_in">object</span> sender, FormClosingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MessageBox.Show(<span class="string">&quot;将要关闭窗口，是否继续？&quot;</span>, <span class="string">&quot;询问&quot;</span>, MessageBoxButtons.YesNo) == DialogResult.Yes)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">false</span>;</span><br><span class="line">                Application.Exit();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>但是发现关闭窗体后程序依旧没有彻底关闭。</strong></p><p>当我们关闭窗口时，只是停止了当前窗口的消息循环。当Main函数中有消息循环的窗口，这个消息循环结束后，Main函数就基本上完成了历史使命，整个应用程序自然就结束了。</p><p>而Application.Exit()方法是终止所有线程上的消息循环，一般情况下，无论在什么地方调用此方法，程序就能退出。</p><p><strong>但是如果你在程序中加入了某些耗时甚至是死循环的线程，那么即使是消息循环终止，程序也依然不会结束。</strong></p><p>而且这个代码还有一个问题，会导致显示确定退出的两次对话框，第一次单击“确定”第二次单击任何一个都会退出。</p><p>因为第一次单击了退出对话框的“确定”按钮后，Application.Exit();会导致触发第二次FrmMain_FormClosing()事件，所以就会显示两个确认退出的对话框，但第二对话框的选择对是否退出没有影响。可以改为判断如果单击了不是确认按钮则e.Cancel &#x3D; true; ，确定按钮什么都不写或不做判断，如果要加上Application.Exit(); 可以将其添加到窗体的FormClosed事件中。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosing</span>(<span class="params"><span class="built_in">object</span> sender, FormClosingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MessageBox.Show(<span class="string">&quot;将要关闭窗口，是否继续？&quot;</span>, <span class="string">&quot;询问&quot;</span>, MessageBoxButtons.YesNo) == DialogResult.Yes)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">             <span class="comment">//20221227 窗体关闭</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosed</span>(<span class="params"><span class="built_in">object</span> sender, FormClosedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Exit();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这样就不会出现弹出两次窗口的情况，但是程序没有彻底结束的问题依旧没有解决。</strong></p><blockquote><p>3.3解决办法2</p></blockquote><p><strong>在Form1_FormClosed事件中加入强制结束进程并退出。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosing</span>(<span class="params"><span class="built_in">object</span> sender, FormClosingEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MessageBox.Show(<span class="string">&quot;将要关闭窗口，是否继续？&quot;</span>, <span class="string">&quot;询问&quot;</span>, MessageBoxButtons.YesNo) == DialogResult.Yes)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                e.Cancel = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">             <span class="comment">//20221227 窗体关闭</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_FormClosed</span>(<span class="params"><span class="built_in">object</span> sender, FormClosedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Exit();</span><br><span class="line">            <span class="comment">//强制结束进程并退出</span></span><br><span class="line"><span class="comment">//System.Diagnostics.Process.GetCurrentProcess().Kill();</span></span><br><span class="line">System.Environment.Exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>3.4关闭窗体的多种方法</p></blockquote><p>在c#中退出WinForm程序包括有很多方法，如:**this.Close(); Application.Exit();Application.ExitThread(); System.Environment.Exit(0); **等他们各自又有一些不一样的地方，下面详细介绍一下。</p><ul><li><p>1.this.Close(); 只是关闭当前窗口，若不是主窗体的话，是无法退出程序的，另外若有托管线程（非主线程），也无法干净地退出；</p></li><li><p>2.Application.Exit(); 强制所有消息中止，退出所有的窗体，但是若有托管线程（非主线程），也无法干净地退出；</p></li><li><p>3.Application.ExitThread(); 强制中止调用线程上的所有消息，同样面临其它线程无法正确退出的问题；</p></li><li><p>4.System.Environment.Exit(0); <strong>这是最彻底的退出方式，不管什么线程都被强制退出，把程序结束的很干净。</strong></p></li></ul><blockquote><p>3.5FormClosing事件和FormClosed事件</p></blockquote><p>这里来说一下FormClosing事件和FormClosed事件</p><p><strong>FormClosing事件</strong><br>在窗体关闭时，FormClosing事件发生。此事件会得到处理。从而释放与窗体相关的所有资源。<br>如果取消此事件，则窗体仍然保持打开状态。<br>当窗体显示为模式对话框时，单击“关闭”会隐藏窗体并将DialogResult属性设为Cancel。<br>通过在些事件中设置DialogResult属性可以在用户单击右上角关闭按钮时重写DialogResult的值。</p><p><strong>FormClosed事件</strong><br>在用户或Application类的Close方法或Exit方法关闭窗体后，会发生FormClosed事件。<br>可以使用此事件释放窗体的一些资源。还可以使用此事件保存输入窗体中的一些信息或者更新父窗体。</p><h1 id="Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）"><a href="#Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）" class="headerlink" title="Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）"></a>Form窗体点击关闭按钮并未关闭进程的解决方法（其他人参考）</h1><p>相信很多朋友在日常的编程中总会遇到各钟各样的问题，关于Form窗体点击关闭按钮并未关闭进程的解决方法就是很多朋友们都认为很难的一个学习.net的难点，下面就由达内为您介绍一下。</p><p>该问题也是因为本人Form项目开发经验不够引起的。</p><p>在开发一个小工具的过程中，因为是有多个Form窗体，多个窗体间的跳转都是如下代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span> &#123;   </span><br><span class="line">    <span class="keyword">this</span>.Hide();   </span><br><span class="line">    UrlList form = <span class="keyword">new</span> UrlList(<span class="keyword">this</span>.cbuserid.SelectedItem.ToString());   </span><br><span class="line">    form.Show(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样子，我在UrlList窗体上面点击关闭按钮，想再要调试就会报无法将文件“obj\Debug\AutoPage.exe”复制到“bin\Debug\AutoPage.exe”。文件“bin\Debug\AutoPage.exe”正由另一进程使用，因此该进程无法访问该文件。一定要在任务管理器中关掉该进程后再调试，很是麻烦。自己猜想是因上面的this.Hide()只是隐藏了当前窗口，并没有关闭，所以我在关闭另一个窗口的时候，这个窗口其实还是未关闭的。</p><p>解决方法：在窗体的FormClosed事件中关掉所有应用窗口，代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Main_FormClosed</span>(<span class="params"><span class="built_in">object</span> sender, FormClosedEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    Application.Exit(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>引申：在开发项目时，不管是Web项目还是Form项目，最好所有的窗体都继承基类，这样很多共公的功能就可以在基类中实现了。比如上面的的代码，如果有基类，就不用处理每个窗体的FormClosed事件了，只需处理基类的即可！</strong></p></blockquote><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/sunzixiao/article/details/128457506">C#winform 点叉叉按钮关闭一form窗体应用后，后台进程仍在运行的解决办法</a></li><li><a href="https://jingyan.baidu.com/article/3065b3b68dafb5becff8a4c4.html">c#学习：[4]FormClosed事件关闭窗体后事件</a></li><li><a href="https://www.cnblogs.com/wujy/archive/2013/01/04/2844492.html">Form窗体点击关闭按钮并未关闭进程的解决方法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#在点了叉叉后有进程没结束</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="窗体" scheme="https://zml3589110.github.io/tags/%E7%AA%97%E4%BD%93/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="关闭" scheme="https://zml3589110.github.io/tags/%E5%85%B3%E9%97%AD/"/>
    
  </entry>
  
  <entry>
    <title>C# 遍历特定目录及其子目录</title>
    <link href="https://zml3589110.github.io/posts/2157161136.html"/>
    <id>https://zml3589110.github.io/posts/2157161136.html</id>
    <published>2023-02-17T01:37:20.000Z</published>
    <updated>2023-02-17T08:13:28.549Z</updated>
    
    <content type="html"><![CDATA[<h1 id="递归方法遍历"><a href="#递归方法遍历" class="headerlink" title="递归方法遍历"></a>递归方法遍历</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归方法遍历目录，并统计其中文件的数目</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">statisticFiles</span>(<span class="params"><span class="built_in">string</span> directory</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> statistic=System.IO.Directory.GetFiles(directory).Length;</span><br><span class="line">            <span class="built_in">string</span>[] directories = System.IO.Directory.GetDirectories(directory);</span><br><span class="line">            <span class="comment">//深度遍历子目录</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">string</span> dir <span class="keyword">in</span> directories)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (isDirectory(dir))</span><br><span class="line">                &#123;</span><br><span class="line">                    statistic += statisticFiles(dir);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;Directory is Inexistence.&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> statistic;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">isDirectory</span>(<span class="params"><span class="built_in">string</span> p</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> System.IO.Directory.Exists(p);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h1 id="遍历特定目录及其子目录-（应用实例，压缩指定目录下的所有文件"><a href="#遍历特定目录及其子目录-（应用实例，压缩指定目录下的所有文件" class="headerlink" title="遍历特定目录及其子目录 （应用实例，压缩指定目录下的所有文件)"></a>遍历特定目录及其子目录 （应用实例，压缩指定目录下的所有文件)</h1><p>这是我迄今所知的最简单的压缩方法。使用了Java类库。</p><p><strong>注意：必须在项目中添加对vjslib引用，程序才能通过编译。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">      String strDirectory = <span class="string">@&quot;E:/工作&quot;</span>;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            String zipFileName = <span class="string">&quot;E://workBackup//&quot;</span> + DateTime.Now.ToString(<span class="string">&quot;yy_MM_dd&quot;</span>) + <span class="string">&quot;.zip&quot;</span>;</span><br><span class="line">            <span class="comment">//output stream</span></span><br><span class="line">            java.io.FileOutputStream fos = <span class="keyword">new</span> java.io.FileOutputStream(zipFileName);</span><br><span class="line">            <span class="comment">//tie to zip stream</span></span><br><span class="line">            java.util.zip.ZipOutputStream zos = <span class="keyword">new</span> java.util.zip.ZipOutputStream(fos);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            Program p = <span class="keyword">new</span> Program();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Enter a Directory/&#x27;s Name:&quot;</span> );</span><br><span class="line">            p.strDirectory = System.Console.ReadLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (isDirectory(p.strDirectory))</span><br><span class="line">            &#123;</span><br><span class="line">                p.zipFiles(p.strDirectory, zos);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Directory is Inexistence.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Close everything</span></span><br><span class="line">            zos.closeEntry();</span><br><span class="line">            zos.close();</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">isDirectory</span>(<span class="params"><span class="built_in">string</span> p</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> System.IO.Directory.Exists(p);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">zipFiles</span>(<span class="params">String dir, java.util.zip.ZipOutputStream zos</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            java.io.FileInputStream fis = <span class="literal">null</span>;</span><br><span class="line">            java.util.zip.ZipEntry ze = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//压缩目录中的文件</span></span><br><span class="line">            String[] strFiles = System.IO.Directory.GetFiles(dir);</span><br><span class="line">            <span class="keyword">foreach</span> (String strfileName <span class="keyword">in</span> strFiles)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// Stream with source file</span></span><br><span class="line">                fis = <span class="keyword">new</span> java.io.FileInputStream(strfileName);</span><br><span class="line">                <span class="comment">// It&#x27;s our entry in zip</span></span><br><span class="line">                String strZipFileName = strfileName.Replace(strDirectory+<span class="string">&quot;//&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                ze = <span class="keyword">new</span> java.util.zip.ZipEntry(strZipFileName);</span><br><span class="line"></span><br><span class="line">                zos.putNextEntry(ze);</span><br><span class="line">                <span class="built_in">sbyte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">sbyte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="built_in">int</span> len;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Read and write until done</span></span><br><span class="line">                <span class="keyword">while</span> ((len = fis.read(buffer)) &gt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    zos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//Close source stream</span></span><br><span class="line">                fis.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//深度优先遍历子目录</span></span><br><span class="line">            String[] subDirectories = System.IO.Directory.GetDirectories(dir);</span><br><span class="line">            <span class="keyword">foreach</span> (String sdir <span class="keyword">in</span> subDirectories)</span><br><span class="line">            &#123;</span><br><span class="line">                zipFiles(sdir, zos);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/fd7893/article/details/1246024">C# 趣味小程序（4）——遍历特定目录及其子目录</a></li><li><a href="https://blog.csdn.net/fd7893/article/details/1246077">续：C# 趣味小程序（4）——遍历特定目录及其子目录 （应用实例，压缩指定目录下的所有文件)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#根据提供路径遍历其目录及子目录</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="文件管理" scheme="https://zml3589110.github.io/categories/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="文件管理" scheme="https://zml3589110.github.io/tags/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    
    <category term="遍历文件" scheme="https://zml3589110.github.io/tags/%E9%81%8D%E5%8E%86%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>C#工具Graphics之一（实现添加中心旋转(任意角度)的文字）</title>
    <link href="https://zml3589110.github.io/posts/1557869241.html"/>
    <id>https://zml3589110.github.io/posts/1557869241.html</id>
    <published>2023-02-16T13:26:20.000Z</published>
    <updated>2023-02-17T08:13:28.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><blockquote><p>这篇文章是 GDI+ 总结系列的第三篇，如果对 GDI+ 的基础使用不熟悉的朋友可以先看第一篇文章《C# 使用 GDI+ 画图》。</p></blockquote><p>需求是要实现给图片添加任意角度旋转的文字，文字的旋转中心要是在文字区域中央，就像 CSS 的 rotate 函数一样的效果。<br><strong>如下：</strong></p><img src="https://img.devbox.cn/3cd4a/63cc/78c/cffbda3f96205f58.gif"><h1 id="分析-amp-思路"><a href="#分析-amp-思路" class="headerlink" title="分析&amp;思路"></a>分析&amp;思路</h1><p>Graphics 类有个 RotateTransform 方法，可以传入任意角度的值来旋转画板。但是这个方法的旋转中心是画板的左上角，所以直接单单用这个方法不能满足我们的需求。此外， Graphics 类还有个 TranslateTransform 方法可以改变坐标的原点，而且这个方法是沿着矩形的x,y轴平移的，即就算图片旋转了一定的角度后，再调用 TranslateTransform 方法，它还是沿着x,y轴平移。于是通过以下三个步骤即可实现图片中心旋转。</p><p>把画板(Graphics对象)原点平移到矩形中心位置(x, y)<br>在(x, y)位置绕原点旋转画板N度<br>画板退回(-x, -y)的距离<br>还是看不懂的同学看下面的图应该就明白了</p><img src="https://img.devbox.cn/3cd4a/63cc/78c/b07c00862d9697ae.png"><p>明白了原理，那不容易推断出，如果要旋转的中心不是图片中心而是文字中心，那步骤还是一样的，只是把(x, y)改为文字中心的坐标就好了。</p><p>除了上面说的方法，其实还有一个方法可以实现中心旋转，那就是使用 Matrix 类。 Matrix 类的 RotateAt 方法可以指定矩阵旋转的中心位置。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"> <span class="comment">// 摘要:</span></span><br><span class="line"> <span class="comment">//  沿 point 参数中指定的点并通过预先计算该旋转，来顺时针旋转此 System.Drawing.Drawing2D.Matrix。</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">// 参数:</span></span><br><span class="line"> <span class="comment">// angle:</span></span><br><span class="line"> <span class="comment">//  旋转角度（范围）（单位：度）。</span></span><br><span class="line"> <span class="comment">//</span></span><br><span class="line"> <span class="comment">// point:</span></span><br><span class="line"> <span class="comment">//  一个 System.Drawing.PointF，表示旋转中心。</span></span><br><span class="line"> [<span class="meta">TargetedPatchingOptOut(<span class="meta-string">&quot;Performance critical to inline this type of method across NGen image boundaries&quot;</span>)</span>]</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RotateAt</span>(<span class="params"><span class="built_in">float</span> angle, PointF point</span>)</span>;</span><br></pre></td></tr></table></figure><p>Graphics 类的 Transform 属性返回的就是 Matrix 对象，该属性可以 get 、 set 。因此我们先获取原来的画板的矩阵，然后使用 RotateAt 方法旋转该矩阵，再把旋转后的矩阵赋值给画板就好了。</p><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><p><strong>添加任意角度文字方法</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 图片添加任意角度文字(文字旋转是中心旋转，角度顺时针为正)</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;imgPath&quot;&gt;</span>图片路径</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;locationLeftTop&quot;&gt;</span>文字左上角定位(x1,y1)</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fontSize&quot;&gt;</span>字体大小，单位为像素</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;text&quot;&gt;</span>文字内容</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;angle&quot;&gt;</span>文字旋转角度</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;fontName&quot;&gt;</span>字体名称</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>添加文字后的Bitmap对象<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Bitmap <span class="title">AddText</span>(<span class="params"><span class="built_in">string</span> imgPath, <span class="built_in">string</span> locationLeftTop, <span class="built_in">int</span> fontSize, <span class="built_in">string</span> text, <span class="built_in">int</span> angle = <span class="number">0</span>, <span class="built_in">string</span> fontName = <span class="string">&quot;华文行楷&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> Image img = Image.FromFile(imgPath);</span><br><span class="line"> <span class="built_in">int</span> width = img.Width;</span><br><span class="line"> <span class="built_in">int</span> height = img.Height;</span><br><span class="line"> Bitmap bmp = <span class="keyword">new</span> Bitmap(width, height);</span><br><span class="line"> Graphics graphics = Graphics.FromImage(bmp);</span><br><span class="line"> <span class="comment">// 画底图</span></span><br><span class="line"> graphics.DrawImage(img, <span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"> Font font = <span class="keyword">new</span> Font(fontName, fontSize, GraphicsUnit.Pixel);</span><br><span class="line"> SizeF sf = graphics.MeasureString(text, font); <span class="comment">// 计算出来文字所占矩形区域</span></span><br><span class="line"> <span class="comment">// 左上角定位</span></span><br><span class="line"> <span class="built_in">string</span>[] location = locationLeftTop.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line"> <span class="built_in">float</span> x1 = <span class="built_in">float</span>.Parse(location[<span class="number">0</span>]);</span><br><span class="line"> <span class="built_in">float</span> y1 = <span class="built_in">float</span>.Parse(location[<span class="number">1</span>]);</span><br><span class="line"> <span class="comment">// 进行文字旋转的角度定位</span></span><br><span class="line"> <span class="keyword">if</span> (angle != <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">region</span> 法一：TranslateTransform平移 + RotateTransform旋转</span></span><br><span class="line">  <span class="comment">/* </span></span><br><span class="line"><span class="comment">   * 注意：</span></span><br><span class="line"><span class="comment">   * Graphics.RotateTransform的旋转是以Graphics对象的左上角为原点，旋转整个画板的。</span></span><br><span class="line"><span class="comment">   * 同时x，y坐标轴也会跟着旋转。即旋转后的x，y轴依然与矩形的边平行</span></span><br><span class="line"><span class="comment">   * 而Graphics.TranslateTransform方法，是沿着x，y轴平移的</span></span><br><span class="line"><span class="comment">   * 因此分三步可以实现中心旋转</span></span><br><span class="line"><span class="comment">   * 1.把画板(Graphics对象)平移到旋转中心</span></span><br><span class="line"><span class="comment">   * 2.旋转画板</span></span><br><span class="line"><span class="comment">   * 3.把画板平移退回相同的距离(此时的x，y轴仍然是与旋转后的矩形平行的)</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>/ 把画板的原点(默认是左上角)定位移到文字中心</span></span><br><span class="line">  <span class="comment">//graphics.TranslateTransform(x1 + sf.Width / 2, y1 + sf.Height / 2);</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>/ 旋转画板</span></span><br><span class="line">  <span class="comment">//graphics.RotateTransform(angle);</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>/ 回退画板x,y轴移动过的距离</span></span><br><span class="line">  <span class="comment">//graphics.TranslateTransform(-(x1 + sf.Width / 2), -(y1 + sf.Height / 2));</span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">  <span class="meta">#<span class="meta-keyword">region</span> 法二：矩阵旋转</span></span><br><span class="line">  Matrix matrix = graphics.Transform;</span><br><span class="line">  matrix.RotateAt(angle, <span class="keyword">new</span> PointF(x1 + sf.Width / <span class="number">2</span>, y1 + sf.Height / <span class="number">2</span>));</span><br><span class="line">  graphics.Transform = matrix;</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">// 写上自定义角度的文字</span></span><br><span class="line"> graphics.DrawString(text, font, <span class="keyword">new</span> SolidBrush(Color.Black), x1, y1);</span><br><span class="line"> graphics.Dispose();</span><br><span class="line"> img.Dispose();</span><br><span class="line"> <span class="keyword">return</span> bmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>PS：这里简单解释一下为什么文字中心是 (x1 + sf.Width &#x2F; 2, y1 + sf.Height &#x2F; 2) ，因为 (x, y) 是左上角，而 sf.Width 、 sf.Height 是文字矩形区域宽、高。</p></blockquote><p><strong>如图：</strong></p><img src="https://img.devbox.cn/3cd4a/63cc/78c/6cd105a84bef67cf.jpeg"><h1 id="测试调用"><a href="#测试调用" class="headerlink" title="测试调用"></a>测试调用</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">try</span></span><br><span class="line"> &#123;</span><br><span class="line">  Console.WriteLine(<span class="string">&quot;Start drawing ...&quot;</span>);</span><br><span class="line">  DrawingEntity drawing = <span class="keyword">new</span> DrawingEntity();</span><br><span class="line">  System.Drawing.Bitmap bmp = drawing.AddText(<span class="string">@&quot;D:\test\1.png&quot;</span>, <span class="string">&quot;176.94,150.48&quot;</span>, <span class="number">66</span>, <span class="string">&quot;写点啥好呢&quot;</span>, <span class="number">30</span>);</span><br><span class="line">  bmp.Save(<span class="string">@&quot;D:\test\output.png&quot;</span>);</span><br><span class="line">  bmp.Dispose();</span><br><span class="line">  Console.WriteLine(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> catch (System.Exception ex)</span><br><span class="line"> &#123;</span><br><span class="line">  Console.WriteLine(ex.ToString());</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">finally</span></span><br><span class="line"> &#123;</span><br><span class="line">  System.Console.WriteLine(<span class="string">&quot;\nPress any key to continue ...&quot;</span>);</span><br><span class="line">  System.Console.ReadKey();</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>最终效果</p></blockquote><ul><li><strong>没有旋转时</strong></li></ul><img src="https://img.devbox.cn/3cd4a/63cc/78c/4f1947a99023c6ed.png"><ul><li><strong>中心旋转30度</strong></li></ul><img src="https://img.devbox.cn/3cd4a/63cc/78c/e2772724e2403d24.png"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://devbox.cn/p/569843327">C# 使用 GDI+ 实现添加中心旋转(任意角度)的文字</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 工具之 Graphics 类实现文字旋转</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Graphics" scheme="https://zml3589110.github.io/categories/Graphics/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="波形" scheme="https://zml3589110.github.io/tags/%E6%B3%A2%E5%BD%A2/"/>
    
    <category term="GDI" scheme="https://zml3589110.github.io/tags/GDI/"/>
    
    <category term="Graphics" scheme="https://zml3589110.github.io/tags/Graphics/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十六（C# GDI绘制波形图--超级推荐方法）</title>
    <link href="https://zml3589110.github.io/posts/2082154040.html"/>
    <id>https://zml3589110.github.io/posts/2082154040.html</id>
    <published>2023-02-16T13:19:20.000Z</published>
    <updated>2023-02-17T08:13:28.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img2018.cnblogs.com/blog/1313948/201812/1313948-20181212174724477-410430978.png"><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">WaveChartUserCtrl</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        Color axisColor = Color.FromArgb(<span class="number">69</span>, <span class="number">200</span>, <span class="number">255</span>);<span class="comment">//坐标颜色</span></span><br><span class="line">        Color scaleColor = Color.FromArgb(<span class="number">129</span>, <span class="number">137</span>, <span class="number">156</span>);<span class="comment">//刻度颜色</span></span><br><span class="line">        Font axisFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">9</span>, FontStyle.Bold);<span class="comment">//坐标字体</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画板宽度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> boardWidth;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画板高度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> boardHeight;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 垂直（纵向）边距（画图区域距离左右两边长度）</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> verticalMargin;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 平行（横向）边距（画图区域距离左右两边长度）</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> horizontalMargin;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 水平间距像素</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> horizontalBetween;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 垂直间距像素</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> verticalBetween;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 图表区域宽度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">float</span> chartWidth;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 图表区域高度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">float</span> charHeight;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画图区域起点</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        PointF startPostion;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画图区域终点</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        PointF endPostion;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 左边Y轴每个间隔值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> leftIntervalValueY;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 右边Y抽每个间隔值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> rightIntervalValueY;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> X轴每个间隔值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment">//private int intervalValueX;</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> X轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> xScaleCount = <span class="number">20</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> X轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> XscaleCount</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> xScaleCount;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                xScaleCount = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Y轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> yScaleCount = <span class="number">8</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Y轴刻度线数量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> YscaleCount</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> yScaleCount;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> leftmaxValue = <span class="number">300</span>;</span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;左边坐标最大值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> LeftMaxValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> leftmaxValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &lt;= LeftMinValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最大值不能低于最小值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line">                    <span class="comment">//maxValue = 300;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    leftmaxValue = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> leftminValue = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 仪表盘显示的最小值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;左边坐标最小值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> LeftMinValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> leftminValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt;= LeftMaxValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最小值不能超过最大值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line">                    <span class="comment">//minValue = 0;</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    leftminValue = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> rightmaxValue = <span class="number">100</span>;</span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;右边坐标最大值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> RightMaxValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> rightmaxValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &lt;= RightMinValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最大值不能低于最小值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    rightmaxValue = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> rightminValue = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 仪表盘显示的最小值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;右边坐标最小值&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">float</span> RightMinValue</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> rightminValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> &gt;= RightMaxValue)</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;最小值不能超过最大值！&quot;</span>, <span class="string">&quot;警告&quot;</span>, MessageBoxButtons.OK, MessageBoxIcon.Warning);</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    rightminValue = <span class="keyword">value</span>;</span><br><span class="line">                    <span class="comment">//InitCanvas();</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> List&lt;Color&gt; lineColor = <span class="keyword">new</span> List&lt;Color&gt; &#123; Color.Red, Color.FromArgb(<span class="number">0</span>, <span class="number">192</span>, <span class="number">0</span>) &#125;;</span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;线条颜色&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> List&lt;Color&gt; LineColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> lineColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">value</span> != <span class="literal">null</span> &amp;&amp; <span class="keyword">value</span>.Count &gt; <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    lineColor = <span class="keyword">value</span>;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">string</span> titlText1 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;标题1&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> TitlText1</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> titlText1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                titlText1 = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="built_in">string</span> titlText2 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 显示文字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">&quot;wyl&quot;</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">&quot;标题2&quot;</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> TitlText2</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> titlText2;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                titlText2 = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据源1</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> Series SeriesData1 = <span class="keyword">new</span> Series();</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据源2</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> Series SeriesData2 = <span class="keyword">new</span> Series();</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 真实画布宽度为画板的80% ，其余部分预留。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">float</span> canvasWidth;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 最大X抽坐标为24H，最后记录一分钟记录一次</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">int</span> MaxXScaleCount = <span class="number">720</span>;<span class="comment">//24 * 60 / 2;//2秒通讯一次，最大每一分钟记录一次</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//private List&lt;float&gt; dataLst1 = new List&lt;float&gt;();</span></span><br><span class="line">        <span class="comment">//private List&lt;float&gt; dataLst2 = new List&lt;float&gt;();</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">public</span> DateTime startTime = DateTime.Now;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitCanvas</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            boardWidth = <span class="keyword">this</span>.ClientSize.Width;</span><br><span class="line">            boardHeight = <span class="keyword">this</span>.ClientSize.Height;</span><br><span class="line">            horizontalMargin = <span class="number">40</span>;</span><br><span class="line">            verticalMargin = <span class="number">40</span>;</span><br><span class="line">            chartWidth = boardWidth - <span class="number">2</span> * horizontalMargin;<span class="comment">//画图区域宽度</span></span><br><span class="line">            charHeight = boardHeight - <span class="number">2</span> * verticalMargin; <span class="comment">//画图区域高度,axisY 避免与X轴重合</span></span><br><span class="line">            canvasWidth = chartWidth * <span class="number">0.86F</span>;<span class="comment">//实际画布为画板的80%</span></span><br><span class="line">            startPostion = <span class="keyword">new</span> PointF(horizontalMargin, verticalMargin);</span><br><span class="line">            endPostion = <span class="keyword">new</span> PointF(boardWidth - horizontalMargin, boardHeight - verticalMargin);</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//SeriesData1.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//SeriesData2.LineColor = Color.FromArgb(0, 192, 0);</span></span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">WaveChartUserCtrl</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="keyword">this</span>.SetStyle(ControlStyles.OptimizedDoubleBuffer</span><br><span class="line">                | ControlStyles.AllPaintingInWmPaint</span><br><span class="line">                | ControlStyles.DoubleBuffer, <span class="literal">true</span>);</span><br><span class="line">            InitCanvas();</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 画图</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;gp&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Drawing</span>(<span class="params">Graphics gs</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            System.Diagnostics.Stopwatch runstopwatch = <span class="keyword">new</span> System.Diagnostics.Stopwatch();</span><br><span class="line">            runstopwatch.Start();</span><br><span class="line">            <span class="keyword">if</span> (SeriesData1.Datas.Count &gt; <span class="number">20</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                XscaleCount = SeriesData1.Datas.Count;</span><br><span class="line">            &#125;</span><br><span class="line">            horizontalBetween = canvasWidth / XscaleCount;</span><br><span class="line">            verticalBetween = charHeight / YscaleCount;</span><br><span class="line">            <span class="comment">//intervalValueX = 1;//</span></span><br><span class="line">            leftIntervalValueY = (<span class="built_in">int</span>)(LeftMaxValue - LeftMinValue) / YscaleCount;</span><br><span class="line">            rightIntervalValueY = (<span class="built_in">int</span>)(RightMaxValue - RightMinValue) / YscaleCount;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                StringFormat strFmt = <span class="keyword">new</span> System.Drawing.StringFormat();</span><br><span class="line">                strFmt.Alignment = StringAlignment.Center; <span class="comment">//文本水平居中</span></span><br><span class="line">                strFmt.LineAlignment = StringAlignment.Center; <span class="comment">//文本垂直居中</span></span><br><span class="line">                Pen axisPen = <span class="keyword">new</span> Pen(scaleColor, <span class="number">1.0F</span>);<span class="comment">//坐标文字</span></span><br><span class="line">                Bitmap bit = <span class="keyword">new</span> Bitmap((<span class="built_in">int</span>)boardWidth, (<span class="built_in">int</span>)boardHeight);</span><br><span class="line">                Graphics g = Graphics.FromImage(bit);</span><br><span class="line">                <span class="comment">//g.DrawString(TitlText, new Font(&quot;宋体&quot;, 9, FontStyle.Bold), new SolidBrush(SeriesData1.LineColor), 5, 10);</span></span><br><span class="line">                <span class="built_in">float</span> tempEndPointY = endPostion.Y;</span><br><span class="line">                <span class="comment">//Y轴格</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= YscaleCount; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">float</span> y = tempEndPointY - i * verticalBetween;</span><br><span class="line">                    g.DrawLine(axisPen, startPostion.X, y, endPostion.X, y);</span><br><span class="line"> </span><br><span class="line">                    <span class="built_in">string</span> leftText = (LeftMinValue + (i * leftIntervalValueY)).ToString();</span><br><span class="line">                    SizeF sf = g.MeasureString(leftText, axisFont);</span><br><span class="line">                    RectangleF rf = <span class="keyword">new</span> RectangleF(startPostion.X - <span class="number">30</span>, y - sf.Height / <span class="number">2</span>, <span class="number">30</span>, sf.Height);</span><br><span class="line">                    g.DrawString(leftText, axisFont, <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">0</span>]), rf, strFmt);</span><br><span class="line"> </span><br><span class="line">                    <span class="built_in">string</span> rightText = (RightMinValue + (i * rightIntervalValueY)).ToString();</span><br><span class="line">                    sf = g.MeasureString(rightText, axisFont);</span><br><span class="line">                    RectangleF rf1 = <span class="keyword">new</span> RectangleF(endPostion.X + <span class="number">5</span>, y - sf.Height / <span class="number">2</span>, <span class="number">30</span>, sf.Height);</span><br><span class="line">                    g.DrawString(rightText, axisFont, <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">1</span>]), rf1, strFmt);</span><br><span class="line"> </span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//画曲线</span></span><br><span class="line">                <span class="keyword">if</span> (SeriesData1 != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    strFmt.Alignment = StringAlignment.Near; <span class="comment">//</span></span><br><span class="line">                    RectangleF rf = <span class="keyword">new</span> RectangleF(<span class="number">0</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">30</span>);</span><br><span class="line">                    g.DrawString(TitlText1, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">0</span>]), rf, strFmt);</span><br><span class="line">                    <span class="comment">//计算0值的坐标</span></span><br><span class="line">                    <span class="built_in">int</span> tempv = (<span class="built_in">int</span>)((Math.Abs(LeftMinValue) - <span class="number">0</span>) / leftIntervalValueY);<span class="comment">//得到0到最小值的间隔距离；</span></span><br><span class="line">                    <span class="built_in">float</span> zeroY = tempEndPointY - tempv * verticalBetween;<span class="comment">//值为0点Y抽坐标；</span></span><br><span class="line">                    <span class="keyword">if</span> (SeriesData1.Datas.Count &gt; <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">int</span> dataIndex = <span class="number">0</span>;</span><br><span class="line">                        PointF[] arrDataPoint = <span class="keyword">new</span> PointF[SeriesData2.Datas.Count];</span><br><span class="line">                        <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF pf <span class="keyword">in</span> SeriesData1.Datas)</span><br><span class="line">                        &#123;</span><br><span class="line">                            PointF p = <span class="keyword">new</span> PointF();</span><br><span class="line">                            p.X = startPostion.X + horizontalBetween * index;</span><br><span class="line">                            p.Y = zeroY - verticalBetween * pf.Y / leftIntervalValueY;</span><br><span class="line">                            arrDataPoint[dataIndex++] = p;</span><br><span class="line">                            index++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        g.DrawCurve(<span class="keyword">new</span> Pen(<span class="keyword">new</span> SolidBrush(LineColor[<span class="number">0</span>]), <span class="number">2F</span>), arrDataPoint);</span><br><span class="line">                        PointF[] AreaPf = <span class="keyword">new</span> PointF[arrDataPoint.Length + <span class="number">2</span>];</span><br><span class="line">                        <span class="built_in">int</span> AreaIndxe = <span class="number">0</span>;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(startPostion.X, zeroY);</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF p <span class="keyword">in</span> arrDataPoint)</span><br><span class="line">                        &#123;</span><br><span class="line">                            AreaPf[AreaIndxe++] = p;</span><br><span class="line">                        &#125;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(arrDataPoint[arrDataPoint.Length - <span class="number">1</span>].X, zeroY);</span><br><span class="line">                        g.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.FromArgb(<span class="number">50</span>, LineColor[<span class="number">0</span>])), AreaPf);</span><br><span class="line">                        <span class="comment">//g.FillClosedCurve(new SolidBrush(Color.FromArgb(50, SeriesData1.LineColor)), AreaPf);</span></span><br><span class="line">                        <span class="comment">//g.DrawEllipse(new Pen(Brushes.Red), startPostion.X, zeroY, 10, 10);</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (SeriesData2 != <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    strFmt.Alignment = StringAlignment.Far; <span class="comment">//</span></span><br><span class="line">                    RectangleF rf = <span class="keyword">new</span> RectangleF(boardWidth - <span class="number">70</span>, <span class="number">0</span>, <span class="number">70</span>, <span class="number">30</span>);</span><br><span class="line">                    g.DrawString(TitlText2, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(LineColor[<span class="number">1</span>]), rf, strFmt);</span><br><span class="line">                    <span class="comment">//计算0值的坐标</span></span><br><span class="line">                    <span class="built_in">int</span> tempv = (<span class="built_in">int</span>)((Math.Abs(RightMinValue) - <span class="number">0</span>) / rightIntervalValueY);<span class="comment">//得到0到最小值的间隔距离；</span></span><br><span class="line">                    <span class="built_in">float</span> zeroY = tempEndPointY - tempv * verticalBetween;<span class="comment">//值为0点Y抽坐标；</span></span><br><span class="line">                    <span class="keyword">if</span> (SeriesData2.Datas.Count &gt; <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">int</span> dataIndex = <span class="number">0</span>;</span><br><span class="line">                        PointF[] arrDataPoint = <span class="keyword">new</span> PointF[SeriesData2.Datas.Count];</span><br><span class="line">                        <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF pf <span class="keyword">in</span> SeriesData2.Datas)</span><br><span class="line">                        &#123;</span><br><span class="line">                            PointF p = <span class="keyword">new</span> PointF();</span><br><span class="line">                            p.X = startPostion.X + horizontalBetween * index;</span><br><span class="line">                            p.Y = zeroY - verticalBetween * pf.Y / rightIntervalValueY;</span><br><span class="line">                            arrDataPoint[dataIndex++] = p;</span><br><span class="line">                            index++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        g.DrawCurve(<span class="keyword">new</span> Pen(<span class="keyword">new</span> SolidBrush(LineColor[<span class="number">1</span>]), <span class="number">2F</span>), arrDataPoint);</span><br><span class="line">                        PointF[] AreaPf = <span class="keyword">new</span> PointF[arrDataPoint.Length + <span class="number">2</span>];</span><br><span class="line">                        <span class="built_in">int</span> AreaIndxe = <span class="number">0</span>;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(startPostion.X, zeroY);</span><br><span class="line">                        <span class="keyword">foreach</span> (PointF p <span class="keyword">in</span> arrDataPoint)</span><br><span class="line">                        &#123;</span><br><span class="line">                            AreaPf[AreaIndxe++] = p;</span><br><span class="line">                        &#125;</span><br><span class="line">                        AreaPf[AreaIndxe++] = <span class="keyword">new</span> PointF(arrDataPoint[SeriesData2.Datas.Count - <span class="number">1</span>].X, zeroY);</span><br><span class="line">                        g.FillPolygon(<span class="keyword">new</span> SolidBrush(Color.FromArgb(<span class="number">50</span>, LineColor[<span class="number">1</span>])), AreaPf);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                g.DrawString(startTime.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>), <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Regular), Brushes.White, <span class="number">10</span>, <span class="keyword">this</span>.ClientSize.Height - <span class="number">30</span>);</span><br><span class="line">                g.DrawString(DateTime.Now.ToString(<span class="string">&quot;HH:mm:ss&quot;</span>), <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>, FontStyle.Regular), Brushes.White, <span class="keyword">this</span>.ClientSize.Width - <span class="number">80</span>, <span class="keyword">this</span>.ClientSize.Height - <span class="number">30</span>);</span><br><span class="line">                g.DrawString(<span class="string">&quot;Time/H&quot;</span>, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">12</span>, FontStyle.Regular), Brushes.Wheat, <span class="number">0</span>, <span class="keyword">this</span>.ClientSize.Height - <span class="number">15</span>);</span><br><span class="line">                gs.DrawImage(bit, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">                g.Dispose();</span><br><span class="line"> </span><br><span class="line">                runstopwatch.Stop();</span><br><span class="line">                TimeSpan timespan = runstopwatch.Elapsed;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;Drawing:&quot;</span> + timespan.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(ex.Message);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WaveChartUserCtrl_Resize</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitCanvas();</span><br><span class="line">            <span class="keyword">this</span>.Refresh();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">WaveChartUserCtrl_Paint</span>(<span class="params"><span class="built_in">object</span> sender, PaintEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Drawing(e.Graphics);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddSeriesData</span>(<span class="params">List&lt;<span class="built_in">float</span>&gt; dataLst1, List&lt;<span class="built_in">float</span>&gt; dataLst2</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//System.Diagnostics.Stopwatch runstopwatch = new System.Diagnostics.Stopwatch();</span></span><br><span class="line">            <span class="comment">//runstopwatch.Start();</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">//dataLst1.Add(y1);</span></span><br><span class="line">            <span class="comment">//dataLst2.Add(y2);</span></span><br><span class="line">            <span class="comment">//if (dataLst1.Count &gt; 86400)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    dataLst1.RemoveAt(0);</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line">            <span class="comment">//if (dataLst2.Count &gt; 86400)</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    dataLst2.RemoveAt(0);</span></span><br><span class="line">            <span class="comment">//&#125;</span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">int</span> tempx = dataLst1.Count / MaxXScaleCount + <span class="number">1</span>;</span><br><span class="line">            SeriesData1.Datas.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> index = <span class="number">0</span>; index &lt; dataLst1.Count; index++)</span><br><span class="line">            &#123;</span><br><span class="line">                PointF p1 = <span class="keyword">new</span> PointF(<span class="number">0</span>, dataLst1[index]);</span><br><span class="line">                <span class="keyword">if</span> (index % tempx == <span class="number">0</span> || index == dataLst1.Count)</span><br><span class="line">                &#123;</span><br><span class="line">                    SeriesData1.Datas.Add(p1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            SeriesData2.Datas.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> index = <span class="number">0</span>; index &lt; dataLst2.Count; index++)</span><br><span class="line">            &#123;</span><br><span class="line">                PointF p2 = <span class="keyword">new</span> PointF(<span class="number">0</span>, dataLst2[index]);</span><br><span class="line">                <span class="keyword">if</span> (index % tempx == <span class="number">0</span> || index == dataLst2.Count)</span><br><span class="line">                &#123;</span><br><span class="line">                    SeriesData2.Datas.Add(p2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//runstopwatch.Stop();</span></span><br><span class="line">            <span class="comment">//TimeSpan timespan = runstopwatch.Elapsed;</span></span><br><span class="line">            <span class="comment">//Console.WriteLine(timespan.ToString());</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">//this.Refresh();</span></span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 数据系列管理</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Series</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 标题</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> HeadText = <span class="string">&quot;title&quot;</span>;</span><br><span class="line"> </span><br><span class="line">        Color lineColor = Color.Red;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前画笔颜色</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> Color LineColor</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> lineColor;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">set</span></span><br><span class="line">            &#123;</span><br><span class="line">                lineColor = <span class="keyword">value</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">PointF</span>&gt; Datas</span> = <span class="keyword">new</span> List&lt;PointF&gt;();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/wangyonglai/p/10109782.html">C# GDI绘制波形图</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 通过 GDI 绘制波形图，这样的响应速度会快很多</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Graphics" scheme="https://zml3589110.github.io/categories/Graphics/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="波形" scheme="https://zml3589110.github.io/tags/%E6%B3%A2%E5%BD%A2/"/>
    
    <category term="GDI" scheme="https://zml3589110.github.io/tags/GDI/"/>
    
    <category term="Graphics" scheme="https://zml3589110.github.io/tags/Graphics/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十五（C# GDI 图表 chart 串口 示波器）</title>
    <link href="https://zml3589110.github.io/posts/3790986091.html"/>
    <id>https://zml3589110.github.io/posts/3790986091.html</id>
    <published>2023-02-16T12:13:20.000Z</published>
    <updated>2023-02-17T08:13:28.663Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>作为嵌入式工程师在设计数字电源时需要将串口传上来的电压电流等数据通过图表方式实时显示在电脑上，刚开始使用第三方图表控件msChart，这个控件功能还是蛮强大的，该要的效果一般都能实现，但在数字电源开发这种应用场合该控件就不太合适了，因为以50Hz的交流电波形举例，1秒有100个周期变化再乘以每周期至少100个点，那1秒内就将有10000个数据需要在图表上显示出来，用第三方图表控件没有哪个有这么快的刷新速度。</p><p>怎么解决该问题呢？最好的方式是通过GDI绘制曲线图，因为只有自已绘制才能最大效率利用CPU来作图，而不是像第三方控件为一些无关紧要的任务浪费时间。</p><h1 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h1><p><strong>主要代码封装成Chart.dll中，外围使用非常简单</strong></p><p>1、资源管理器中引用Chart.dll<br>2、using MyChart;<br>3、按顺序申明线段名称（例如：string[] Field &#x3D; new string[] { “线a”, “线b” };<br>4、申明Chart对象（例如：Chart chart;)<br>5、构造Chart对象（例如：chart &#x3D; new Chart(Field); )<br>6、调用方法将窗口显示出来（例如：chart.Show(); ）<br>7、更新需要显示的数据到GDI图表中（例如：chart.Updata(temp);）<br>8、此时数据将显示到图表窗口中，右击鼠标有使用说明。</p><p>该Chart.dll不仅能显示曲线图还能将数据库存到Access数据库<br>本应用因绘图效率比一般图表控件高(如msChart等)，所以较合适作为软件示波器用</p><p>范例工程使用说明视频：<a href="https://www.bilibili.com/video/BV1MZ4y1V74D/">https://www.bilibili.com/video/BV1MZ4y1V74D/</a><br>范例工程下载地址1：<a href="https://download.csdn.net/download/iejinshan/10467169">https://download.csdn.net/download/iejinshan/10467169</a><br>范例工程下载地址2：<a href="https://pan.baidu.com/s/1wvh8554-NagXJacfjxp8LA?pwd=6666">https://pan.baidu.com/s/1wvh8554-NagXJacfjxp8LA?pwd=6666</a></p><p><strong>代码和视频中有点忘记说明了，chart对象会有个Show方法，一定要调用一次该方法图表才会显示出来，默认图表是隐藏的，请您特别注意。</strong></p><p><strong>注意： 上述范例核心代码封装在dll文件中，并未开放全部源代码，介意的请勿下载，谢谢。</strong></p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL2ltZy5ibG9nLmNzZG4ubmV0LzIwMTUwOTIzMTczOTMzODY2?x-oss-process=image/format,png"><h1 id="参考绘图类代码"><a href="#参考绘图类代码" class="headerlink" title="参考绘图类代码"></a>参考绘图类代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GDIChart</span></span><br><span class="line">  &#123;</span><br><span class="line">    Bitmap bmp;</span><br><span class="line">    Graphics graphics;</span><br><span class="line">    PictureBox pictureBox;</span><br><span class="line">    DataGridView GridView1, GridView2;</span><br><span class="line">    HScrollBar hScrollBar;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> Xoffset, Yoffset,Ymax,Ymin;</span><br><span class="line">    <span class="built_in">int</span> YMoveUpValue;   <span class="comment">//向上偏移量</span></span><br><span class="line">    <span class="built_in">int</span> XMoveRightValue;<span class="comment">//向右偏移量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//double Xp;</span></span><br><span class="line">    <span class="built_in">int</span> NowID, RowSum, NowRow;</span><br><span class="line">    <span class="comment">//int Xwidth = 0;</span></span><br><span class="line">    <span class="comment">//int DotSumCopy;</span></span><br><span class="line">    Point pCopy;</span><br><span class="line">    <span class="built_in">string</span>[] FieldName;</span><br><span class="line">    <span class="comment">//double[] mLabel;</span></span><br><span class="line">    <span class="comment">//int[] yLabel;</span></span><br><span class="line">    <span class="built_in">int</span>[,] XY;</span><br><span class="line"></span><br><span class="line">    Point p;<span class="comment">//得到鼠标xy位置</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">int</span> Help;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">GDIChart</span>(<span class="params"><span class="keyword">ref</span> PictureBox bx, <span class="keyword">ref</span> DataGridView dataGridView1, <span class="keyword">ref</span> DataGridView dataGridView2,<span class="keyword">ref</span> HScrollBar hscrollBar</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      YMoveUpValue = <span class="number">16</span>;</span><br><span class="line">      pictureBox = bx;</span><br><span class="line">      GridView1 = dataGridView1;</span><br><span class="line">      GridView2 = dataGridView2;</span><br><span class="line">      hScrollBar = hscrollBar;</span><br><span class="line"></span><br><span class="line">      FieldName = <span class="keyword">new</span> <span class="built_in">string</span>[GridView1.Rows.Count];</span><br><span class="line">      <span class="comment">//mLabel = new double[GridView1.Rows.Count];</span></span><br><span class="line">      <span class="comment">//yLabel = new int[GridView1.Rows.Count];</span></span><br><span class="line">      XY = <span class="keyword">new</span> <span class="built_in">int</span>[GridView1.Rows.Count,<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; FieldName.Length; i++)</span><br><span class="line">      &#123;</span><br><span class="line">        FieldName[i] = GridView1.Rows[i].HeaderCell.Value.ToString();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      Ymax = <span class="number">3600</span>;</span><br><span class="line">      Ymin = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      Help = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">      pictureBox.Resize += <span class="keyword">new</span> System.EventHandler(EventHandlerBmpInit);<span class="comment">//pictureBox大小变化时产生事件重置Bitmap对象大小</span></span><br><span class="line"></span><br><span class="line">      pictureBox.MouseDown += <span class="keyword">new</span> MouseEventHandler(pictureBox_MouseDown);</span><br><span class="line">      pictureBox.MouseWheel += <span class="keyword">new</span> MouseEventHandler(PictureBox_MouseWheel);</span><br><span class="line">      pictureBox.KeyDown += <span class="keyword">new</span> KeyEventHandler(pictureBox_KeyDown);</span><br><span class="line">      <span class="comment">//pictureBox.MouseEnter += new EventHandler(pictureBox_MouseEnter);</span></span><br><span class="line">      <span class="comment">//pictureBox.MouseLeave += new EventHandler(pictureBox_MouseLeave);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> 打印字符_带背景色(<span class="keyword">ref</span> Graphics g, <span class="keyword">ref</span> Bitmap bmp,Font font, <span class="built_in">int</span> x, <span class="built_in">int</span> y, <span class="built_in">string</span> str)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//Font font = new Font(&quot;宋体&quot;, 9f);</span></span><br><span class="line">      PointF pointF = <span class="keyword">new</span> PointF(x, y);</span><br><span class="line">      SizeF sizeF = g.MeasureString(str, font);</span><br><span class="line">      g.FillRectangle(Brushes.PowderBlue, <span class="keyword">new</span> RectangleF(pointF, sizeF));</span><br><span class="line">      g.DrawString(str, font, Brushes.Black, pointF);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//去除小数点后多余数值</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">RemoveDecimal</span>(<span class="params"><span class="built_in">double</span> In, <span class="keyword">ref</span> <span class="built_in">double</span> Out</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (In == <span class="number">0</span>) &#123; <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (In &gt;= <span class="number">10</span> || In &lt;= <span class="number">-10</span>)</span><br><span class="line">        &#123;<span class="comment">//In有整数</span></span><br><span class="line">          Out = (<span class="built_in">double</span>)((<span class="built_in">int</span>)In);</span><br><span class="line">          Out += <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;<span class="comment">//In无整数</span></span><br><span class="line">          <span class="built_in">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">          <span class="keyword">if</span> (In &gt; <span class="number">0</span>)</span><br><span class="line">          &#123;<span class="comment">//正数</span></span><br><span class="line">            <span class="keyword">while</span> (In &lt; <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              cnt *= <span class="number">10</span>;</span><br><span class="line">              In *= <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;<span class="comment">//负数</span></span><br><span class="line">            <span class="keyword">while</span> (In &lt; <span class="number">-10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              cnt *= <span class="number">10</span>;</span><br><span class="line">              In *= <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          Out = (<span class="built_in">double</span>)(<span class="built_in">int</span>)(In+<span class="number">0</span>) / cnt;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;RemoveDecimal &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化参数</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">Init</span>(<span class="params"><span class="keyword">ref</span> DataTable dt,<span class="built_in">int</span> DotSum,<span class="built_in">double</span> y1,<span class="built_in">double</span> y2</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        Xoffset = (<span class="built_in">double</span>)(bmp.Width - XMoveRightValue) / DotSum;  <span class="comment">//计算出X轴每个像素值</span></span><br><span class="line">        Yoffset = (y2 - y1) / (<span class="built_in">double</span>)(bmp.Height - YMoveUpValue);       <span class="comment">//计算出Y轴每个像素值</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        RemoveDecimal(Xoffset, <span class="keyword">ref</span> Xoffset);<span class="comment">//去除小数点后多余数值</span></span><br><span class="line">        RemoveDecimal(Yoffset, <span class="keyword">ref</span> Yoffset);<span class="comment">//去除小数点后多余数值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;ChartInit &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制曲线</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingCurve</span>(<span class="params"><span class="keyword">ref</span> DataTable dt,DataGridView gridView,Color[] color,<span class="built_in">double</span> Ystart</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123; </span><br><span class="line">        Pen pen;</span><br><span class="line">        pen = <span class="keyword">new</span> Pen(System.Drawing.Color.Red, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">int</span> x1, y1, x2=<span class="number">0</span>, y2,flag;</span><br><span class="line"></span><br><span class="line">        p = pictureBox.PointToClient(Control.MousePosition);<span class="comment">//得到鼠标xy位置</span></span><br><span class="line">        p.X -= XMoveRightValue;</span><br><span class="line">        p.Y += YMoveUpValue;</span><br><span class="line"></span><br><span class="line">        graphics.TranslateTransform(XMoveRightValue, -YMoveUpValue);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> a = <span class="number">0</span>; a &lt; gridView.Rows.Count;a++ )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> (Convert.ToBoolean(gridView.Rows[a].Cells[<span class="string">&quot;Enable&quot;</span>].Value) == <span class="literal">true</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            pen.Color = color[a];</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> b = <span class="number">0</span>; b &lt; dt.Rows.Count<span class="number">-1</span>;b++)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">double</span> value0 = Convert.ToDouble(dt.Rows[b + <span class="number">0</span>][a + <span class="number">2</span>]);</span><br><span class="line">              <span class="built_in">double</span> value1 = Convert.ToDouble(dt.Rows[b + <span class="number">1</span>][a + <span class="number">2</span>]);</span><br><span class="line"></span><br><span class="line">              value0 -= Ystart;</span><br><span class="line">              value1 -= Ystart;</span><br><span class="line"></span><br><span class="line">              value0 += Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Move&quot;</span>].Value);</span><br><span class="line">              value1 += Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Move&quot;</span>].Value);</span><br><span class="line"></span><br><span class="line">              value0 *= Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Zoom&quot;</span>].Value);</span><br><span class="line">              value1 *= Convert.ToDouble(gridView.Rows[a].Cells[<span class="string">&quot;Zoom&quot;</span>].Value);</span><br><span class="line"></span><br><span class="line">              x1 = (<span class="built_in">int</span>)((b + <span class="number">0</span>) * Xoffset);</span><br><span class="line">              x2 = (<span class="built_in">int</span>)((b + <span class="number">1</span>) * Xoffset);</span><br><span class="line">              y1 = bmp.Height - (<span class="built_in">int</span>)(value0 / Yoffset);</span><br><span class="line">              y2 = bmp.Height - (<span class="built_in">int</span>)(value1 / Yoffset);</span><br><span class="line">              </span><br><span class="line">              graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">if</span> (flag == <span class="number">0</span> &amp;&amp; x1 &gt;= p.X) </span><br><span class="line">              &#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">                XY[a, <span class="number">0</span>] = x1;</span><br><span class="line">                XY[a, <span class="number">1</span>] = y1;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        graphics.TranslateTransform(-XMoveRightValue, YMoveUpValue);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingCurve &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制标签</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingLabel</span>(<span class="params"><span class="keyword">ref</span> DataTable dt,Color[] color</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (p.X &gt;= <span class="number">0</span> &amp;&amp; p.Y &gt;= YMoveUpValue &amp;&amp; p.X &lt;= pictureBox.Width - XMoveRightValue &amp;&amp; p.Y &lt;= pictureBox.Height)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">int</span> x1, y1, x2, y2;</span><br><span class="line">          Pen pen = <span class="keyword">new</span> Pen(Color.Red, <span class="number">1</span>);</span><br><span class="line">          pen.DashStyle = System.Drawing.Drawing2D.DashStyle.Dot;</span><br><span class="line"></span><br><span class="line">          graphics.TranslateTransform(XMoveRightValue, -YMoveUpValue);</span><br><span class="line"></span><br><span class="line">          x1 = p.X;</span><br><span class="line">          x2 = p.X;</span><br><span class="line">          y1 = <span class="number">3</span>;</span><br><span class="line">          y2 = pictureBox.Height;</span><br><span class="line">          graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line"></span><br><span class="line">          x1 = <span class="number">0</span>;</span><br><span class="line">          x2 = pictureBox.Width;</span><br><span class="line">          y1 = p.Y;</span><br><span class="line">          y2 = p.Y;</span><br><span class="line">          graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line"></span><br><span class="line">          pen.Width = <span class="number">2</span>;</span><br><span class="line">          <span class="built_in">int</span> row = (<span class="built_in">int</span>)((<span class="built_in">double</span>)(p.X) / Xoffset) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (row &gt;= <span class="number">0</span> &amp;&amp; row &lt; dt.Rows.Count)</span><br><span class="line">          &#123;</span><br><span class="line">            NowRow = row;</span><br><span class="line">            RowSum = dt.Rows.Count;</span><br><span class="line">            NowID = Convert.ToInt32(dt.Rows[row][<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">            DataTable SetTable = (GridView1.DataSource <span class="keyword">as</span> DataTable);</span><br><span class="line">            <span class="keyword">if</span> (pCopy != p)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dt.Columns.Count - <span class="number">2</span>; i++)</span><br><span class="line">              &#123;</span><br><span class="line">                SetTable.Rows[i][<span class="string">&quot;Value&quot;</span>] = Convert.ToDouble(dt.Rows[row][i + <span class="number">2</span>]);</span><br><span class="line">                SetTable.Rows[i][<span class="string">&quot;ID&quot;</span>] = Convert.ToDouble(dt.Rows[row][<span class="number">0</span>]);</span><br><span class="line">                SetTable.Rows[i][<span class="string">&quot;Time&quot;</span>] = Convert.ToDateTime(dt.Rows[row][<span class="number">1</span>]);</span><br><span class="line">              &#125;</span><br><span class="line">              GridView1.Refresh();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">string</span> str;</span><br><span class="line">            Font font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>);</span><br><span class="line">            <span class="built_in">int</span> Height = font.Height / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dt.Columns.Count - <span class="number">2</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="keyword">if</span> (Convert.ToBoolean(GridView1.Rows[i].Cells[<span class="string">&quot;Enable&quot;</span>].Value) == <span class="literal">true</span>)</span><br><span class="line">              &#123;</span><br><span class="line">                pen.Color = color[i];</span><br><span class="line">                str = dt.Rows[row][i + <span class="number">2</span>].ToString();</span><br><span class="line"></span><br><span class="line">                x1 = XY[i, <span class="number">0</span>];</span><br><span class="line">                y1 = XY[i, <span class="number">1</span>];</span><br><span class="line">                x2 = XY[i, <span class="number">0</span>] + <span class="number">30</span>;</span><br><span class="line">                y2 = XY[i, <span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (y2 &lt; <span class="number">15</span> + YMoveUpValue + Height) &#123; y2 += <span class="number">15</span>; &#125; <span class="keyword">else</span> &#123; y2 -= <span class="number">15</span>; &#125;</span><br><span class="line">                graphics.DrawLine(pen, x1, y1, x2, y2);</span><br><span class="line">                打印字符_带背景色(<span class="keyword">ref</span> graphics, <span class="keyword">ref</span> bmp, font, x2, y2-Height, SetTable.Rows[i][<span class="number">0</span>].ToString() + <span class="string">&quot;-&gt;&quot;</span> + str);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            NowID = <span class="number">0</span>;</span><br><span class="line">            RowSum = <span class="number">0</span>;</span><br><span class="line">            NowRow = <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          graphics.TranslateTransform(-XMoveRightValue, YMoveUpValue);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          NowID = <span class="number">0</span>;</span><br><span class="line">          RowSum = <span class="number">0</span>;</span><br><span class="line">          NowRow = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pCopy = p;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingLabel &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制help</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingHelp</span>(<span class="params"><span class="built_in">double</span> Ystart</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (Help == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          p.Y = bmp.Height - p.Y;</span><br><span class="line">          p.X = p.X - XMoveRightValue;</span><br><span class="line"></span><br><span class="line">          <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">          <span class="comment">//str += &quot;Yoffset=&quot; + Yoffset.ToString() + &quot;\n&quot;;</span></span><br><span class="line">          <span class="comment">//str += &quot;Xoffset=&quot; + Xoffset.ToString() + &quot;\n&quot;;</span></span><br><span class="line">          str += <span class="string">&quot;Dot=&quot;</span> + sys.DotSum.ToString() + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">          <span class="comment">//str += &quot;Width=&quot; + (pictureBox.Width - XMoveRightValue).ToString() + &quot;\n&quot;;</span></span><br><span class="line">          <span class="comment">//str += &quot;Row=&quot; + sys.ShowDataTable.Rows.Count.ToString() + &quot;\n&quot;;</span></span><br><span class="line">          str += <span class="string">&quot;Y=&quot;</span> + ((<span class="built_in">double</span>)p.Y * Yoffset + Ystart).ToString() + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">          <span class="comment">//str += &quot;X=&quot; + p.X / Xoffset + &quot;\n&quot;;</span></span><br><span class="line">          打印字符_带背景色(<span class="keyword">ref</span> graphics, <span class="keyword">ref</span> bmp,<span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>), XMoveRightValue + <span class="number">16</span>, <span class="number">0</span>, str);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingHelp &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制刻度表</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">DrawingScale</span>(<span class="params"><span class="built_in">double</span> Ystart, <span class="keyword">ref</span> DataTable dt</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">int</span> x1, y1, x2, y2;</span><br><span class="line">        SizeF sf = <span class="keyword">new</span> SizeF();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算最大字符长度</span></span><br><span class="line">        XMoveRightValue = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> y = YMoveUpValue; y &lt; bmp.Height - <span class="number">5</span>; )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">string</span> str = (Yoffset * (y - YMoveUpValue) + Ystart).ToString();</span><br><span class="line">          sf = graphics.MeasureString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>));</span><br><span class="line">          <span class="keyword">if</span> (XMoveRightValue &lt; sf.Width)</span><br><span class="line">          &#123;</span><br><span class="line">            XMoveRightValue = (<span class="built_in">int</span>)sf.Width;</span><br><span class="line">          &#125;</span><br><span class="line">          y += <span class="number">50</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//画Y轴刻度</span></span><br><span class="line">        x1 = XMoveRightValue;</span><br><span class="line">        y1 = bmp.Height - YMoveUpValue;</span><br><span class="line">        x2 = XMoveRightValue;</span><br><span class="line">        y2 = <span class="number">2</span>;</span><br><span class="line">        graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画长线</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> y = YMoveUpValue; y &lt; bmp.Height - <span class="number">5</span>; )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((y - YMoveUpValue) % <span class="number">50</span> == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x1 = XMoveRightValue;</span><br><span class="line">            y1 = bmp.Height - y;</span><br><span class="line">            x2 = XMoveRightValue + <span class="number">10</span>;</span><br><span class="line">            y2 = bmp.Height - y;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线max</span></span><br><span class="line">            <span class="built_in">string</span> str = (Yoffset * (y - YMoveUpValue) + Ystart).ToString();</span><br><span class="line">            sf = graphics.MeasureString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>));</span><br><span class="line">            graphics.DrawString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>), Brushes.Black, <span class="keyword">new</span> PointF(XMoveRightValue - sf.Width, y1 - <span class="number">8</span>));</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            x1 = XMoveRightValue;</span><br><span class="line">            y1 = bmp.Height - y;</span><br><span class="line">            x2 = XMoveRightValue + <span class="number">5</span>;</span><br><span class="line">            y2 = bmp.Height - y;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线min</span></span><br><span class="line">          &#125;</span><br><span class="line">          y += <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**/</span></span><br><span class="line">        <span class="comment">//画X轴刻度</span></span><br><span class="line">        x1 = XMoveRightValue;</span><br><span class="line">        y1 = bmp.Height - YMoveUpValue;</span><br><span class="line">        x2 = bmp.Width - <span class="number">5</span>;</span><br><span class="line">        y2 = bmp.Height - YMoveUpValue;</span><br><span class="line">        graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画长线</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = XMoveRightValue; i &lt; bmp.Width - <span class="number">10</span>; )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ((i - XMoveRightValue) % <span class="number">50</span> == <span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x1 = i;</span><br><span class="line">            y1 = bmp.Height - YMoveUpValue - <span class="number">10</span>;</span><br><span class="line">            x2 = i;</span><br><span class="line">            y2 = bmp.Height - YMoveUpValue;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线max</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> row = (<span class="built_in">int</span>)((<span class="built_in">double</span>)(i - XMoveRightValue) / Xoffset);</span><br><span class="line">            <span class="keyword">if</span> (dt.Rows.Count &gt; row &amp;&amp; row &gt; <span class="number">0</span> &amp;&amp; sf.Width &lt; <span class="number">50</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">string</span> str = dt.Rows[row][<span class="number">0</span>].ToString();</span><br><span class="line">              sf = graphics.MeasureString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>));</span><br><span class="line">              graphics.DrawString(str, <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">10</span>), Brushes.Black, <span class="keyword">new</span> PointF(i - sf.Width / <span class="number">2</span>, bmp.Height - <span class="number">12</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">              sf.Width = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            x1 = i;</span><br><span class="line">            y1 = bmp.Height - YMoveUpValue - <span class="number">5</span>;</span><br><span class="line">            x2 = i;</span><br><span class="line">            y2 = bmp.Height - YMoveUpValue;</span><br><span class="line">            graphics.DrawLine(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), x1, y1, x2, y2);<span class="comment">//画刻度线min</span></span><br><span class="line">          &#125;</span><br><span class="line">          i += <span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;DrawingScale &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//int sum = 0,start = 0,stop = 0;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">Updata</span>(<span class="params"><span class="keyword">ref</span> DataTable data, Color[] color, <span class="built_in">int</span> DotSum</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">        Init(<span class="keyword">ref</span> data, DotSum, Ymin, Ymax);</span><br><span class="line"></span><br><span class="line">        DrawingCurve(<span class="keyword">ref</span> data, GridView1, color, Ymin);</span><br><span class="line"></span><br><span class="line">        DrawingLabel(<span class="keyword">ref</span> data, color);</span><br><span class="line"></span><br><span class="line">        DrawingHelp(Ymin);</span><br><span class="line"></span><br><span class="line">        DrawingScale(Ymin, <span class="keyword">ref</span> data);</span><br><span class="line"></span><br><span class="line">        pictureBox.CreateGraphics().DrawImage(bmp, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        graphics.Clear(Color.White);<span class="comment">//清缓存</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      catch (Exception ex) &#123; sys.ToolWindows.LogAdd(<span class="string">&quot;ChartUpdata &quot;</span> + ex.Message.ToString()); &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//pictureBox大小变化时需要同时调整Bitmap对象大小</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">EventHandlerBmpInit</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      bmp = <span class="keyword">new</span> Bitmap(pictureBox.Width, pictureBox.Height);</span><br><span class="line">      graphics = Graphics.FromImage(bmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//让PictureBox支持MouseWheel事件</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pictureBox_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      pictureBox.Focus();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PictureBox_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">if</span> ((Control.ModifierKeys &amp; Keys.Control) == Keys.Control)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">double</span> offset = (Ymax - Ymin) / pictureBox.Height;</span><br><span class="line">        <span class="built_in">double</span> Y = pictureBox.Height - e.Y;</span><br><span class="line">        <span class="built_in">double</span> UpWidth = (<span class="built_in">double</span>)(pictureBox.Height - Y) * Yoffset * <span class="number">0.2</span>;</span><br><span class="line">        <span class="built_in">double</span> DownWidth = (<span class="built_in">double</span>)(Y - <span class="number">0</span>) * Yoffset * <span class="number">0.2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e.Delta &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;<span class="comment">//Mouse Wheeled Up(缩小)</span></span><br><span class="line">          Ymax -= UpWidth;</span><br><span class="line">          Ymin += DownWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;<span class="comment">//Mouse Wheeled Down(放大)</span></span><br><span class="line">          Ymax += UpWidth;</span><br><span class="line">          Ymin -= DownWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Ymax &lt; Ymin) &#123; Ymax = Ymin + <span class="number">10</span>; &#125;</span><br><span class="line">        RemoveDecimal(Ymax, <span class="keyword">ref</span> Ymax);</span><br><span class="line">        RemoveDecimal(Ymin, <span class="keyword">ref</span> Ymin);</span><br><span class="line">        <span class="comment">//Console.WriteLine(&quot;delte=&quot;+e.Delta.ToString() + &quot;, X=&quot; + e.X.ToString() + &quot;, Y=&quot; + e.Y.ToString()); </span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.Delta &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          sys.DotSum = (<span class="built_in">int</span>)((<span class="built_in">double</span>)sys.DotSum * <span class="number">0.8</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          sys.DotSum = (<span class="built_in">int</span>)((<span class="built_in">double</span>)sys.DotSum * <span class="number">1.2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sys.DotSum &lt; <span class="number">10</span>) &#123; sys.DotSum = <span class="number">10</span>; &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (sys.DotSum &gt; <span class="number">50000</span>) &#123; sys.DotSum = <span class="number">50000</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> length = (<span class="built_in">int</span>)((<span class="built_in">double</span>)NowRow / RowSum * sys.DotSum);</span><br><span class="line">        <span class="built_in">int</span> <span class="keyword">value</span> = NowID - length;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">value</span> &lt;= hScrollBar.Maximum &amp;&amp; <span class="keyword">value</span> &gt; hScrollBar.Minimum)</span><br><span class="line">        &#123;</span><br><span class="line">          hScrollBar.Value = <span class="keyword">value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pictureBox_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">      <span class="keyword">if</span> (e.KeyCode == Keys.F1)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (Help == <span class="number">0</span>) &#123; Help = <span class="number">1</span>; &#125; <span class="keyword">else</span> &#123; Help = <span class="number">0</span>; &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ((Control.ModifierKeys &amp; Keys.Control) == Keys.Control &amp;&amp; e.KeyCode == Keys.F2)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (sys.ToolWindows.Visible == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          sys.ToolWindows.Show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">          sys.ToolWindows.Close();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/iejinshan/article/details/48683043">C# GDI 图表 chart 串口 示波器</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 C# chart 图表制作串口示波器，通过串口上传数据显示出来</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="GDI" scheme="https://zml3589110.github.io/tags/GDI/"/>
    
    <category term="串口" scheme="https://zml3589110.github.io/tags/%E4%B8%B2%E5%8F%A3/"/>
    
    <category term="示波器" scheme="https://zml3589110.github.io/tags/%E7%A4%BA%E6%B3%A2%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十四（C# 显示数据量过大时卡顿）</title>
    <link href="https://zml3589110.github.io/posts/1277306233.html"/>
    <id>https://zml3589110.github.io/posts/1277306233.html</id>
    <published>2023-02-16T09:05:20.000Z</published>
    <updated>2023-02-17T08:13:28.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="几个重要的属性"><a href="#几个重要的属性" class="headerlink" title="几个重要的属性"></a>几个重要的属性</h1><p><strong>在介绍实现方法前需要先了解chart控件的几个属性</strong></p><ol><li>ChartAreas ：绘图区域，当数据量大时只要一个绘图区域。</li><li>AxisX：X轴。（Y轴一致，此文进介绍X轴）。</li><li>AxisX.ScrollBar：X轴滚动条。</li><li>AxisX.ScaleView.Position：X轴显示的起始值。</li><li>AxisX.ScaleView.Size：X轴显示数据的数量</li></ol><img src="https://img-blog.csdnimg.cn/20200514152320251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxODQ4MDk3,size_16,color_FFFFFF,t_70#pic_center"><blockquote><p>图中<br>AxisX.ScaleView.Position &#x3D; 941<br>AxisX.ScaleView.Size &#x3D; 1941-941+1</p></blockquote><h1 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h1><ol><li>将数据分段每段10000到50000之间（以50000为例）。</li><li>给chart控件添加滚动条，</li><li>将第一个数据段的数据绑定到chart数据源上，给chart添加鼠标滚动事件。</li><li>滚动滚轮可以更改AxisX.ScaleView.Position的值，当显示完最后一个数值时，更改chart的数据源将第二段数据绑定在chart数据源上。</li><li>依次循环就可以实现所有数据的显示</li></ol><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="1-数据分段"><a href="#1-数据分段" class="headerlink" title="1.数据分段"></a>1.数据分段</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">double</span>[] data = <span class="keyword">new</span> <span class="built_in">double</span>[<span class="number">2000</span>*<span class="number">1000</span>]&#123;...&#125;;<span class="comment">//需要显示的数据 长度为200万。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">List</span>&lt;<span class="title">double</span>[]&gt; DataPanel</span> = <span class="keyword">new</span> List&lt;<span class="built_in">double</span>[]&gt;();</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> m =<span class="number">0</span>;m&lt;<span class="number">40</span>;m++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">double</span> [] smallArray = <span class="keyword">new</span> <span class="built_in">double</span> [<span class="number">50000</span>]; </span><br><span class="line">  <span class="keyword">for</span>(<span class="built_in">int</span> n = <span class="number">0</span>;n&lt;<span class="number">50000</span>;n++)</span><br><span class="line">  &#123;</span><br><span class="line">  smallArray [n] = data [i*<span class="number">50000</span>+n];</span><br><span class="line">  &#125;</span><br><span class="line">  DataPanel .<span class="keyword">add</span>(smallArray);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-给chart控件添加滚动条"><a href="#2-给chart控件添加滚动条" class="headerlink" title="2.给chart控件添加滚动条"></a>2.给chart控件添加滚动条</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ChartScrollbarStyle</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span> &#123;        </span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.Enabled = <span class="literal">true</span>;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position = <span class="number">1</span>;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = <span class="number">300</span>;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.ButtonStyle = ScrollBarButtonStyles.SmallScroll;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.ButtonColor = Color.Silver;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.LineColor = Color.Black;</span><br><span class="line">  chartAmend.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.IsPositionedInside = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-将数据绑定在chart数据源上，更改DataCount，就更改了数据源。"><a href="#3-将数据绑定在chart数据源上，更改DataCount，就更改了数据源。" class="headerlink" title="3.将数据绑定在chart数据源上，更改DataCount，就更改了数据源。"></a>3.将数据绑定在chart数据源上，更改DataCount，就更改了数据源。</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> DataCount = <span class="number">0</span>；</span><br><span class="line">chart1.Series[<span class="number">0</span>].Points.DataBindY(DataPanel[DataCount]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-给chart控件添加鼠标滚轮事件"><a href="#4-给chart控件添加鼠标滚轮事件" class="headerlink" title="4.给chart控件添加鼠标滚轮事件"></a>4.给chart控件添加鼠标滚轮事件</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">chart1.MouseWheel += Chart1_MouseWheel;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Chart1_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> position = Convert.ToInt32(chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position);</span><br><span class="line">  <span class="built_in">int</span> WindowSize = chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size；</span><br><span class="line">  <span class="keyword">if</span> (e.Delta &lt; <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">     position += <span class="number">200</span>;<span class="comment">//滚轮动一下，移动多少数据</span></span><br><span class="line">     <span class="keyword">if</span> (position &gt;= chartAmend.ChartAreas[<span class="number">0</span>].AxisX.Maximum - WindowSize)<span class="comment">//一段数据显示完毕</span></span><br><span class="line">      &#123;</span><br><span class="line">          DataCount++;</span><br><span class="line">          <span class="keyword">if</span> (DataCount &gt;= DataPanel.Count)</span><br><span class="line">          &#123;</span><br><span class="line">            MessageBox.Show(<span class="string">&quot;所有数据已经全部显示完毕&quot;</span>,<span class="string">&quot;提示&quot;</span>);</span><br><span class="line">           DataCount = DataPanel.Count<span class="number">-1</span>;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">        &#125;  </span><br><span class="line">chart1.Series[<span class="number">0</span>].Points.DataBindY(Overall.DataPanel[DataCount]);</span><br><span class="line">position = <span class="number">1</span>;<span class="comment">//新的一段数据开始时 滚动条移动到最左侧</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">     position -= <span class="number">200</span>;</span><br><span class="line">     <span class="keyword">if</span> (position &lt; <span class="number">1</span>)</span><br><span class="line">     &#123;</span><br><span class="line">    <span class="keyword">if</span> (DataCount == <span class="number">0</span>)</span><br><span class="line">     &#123;</span><br><span class="line">        position = <span class="number">1</span>;</span><br><span class="line">        MessageBox.Show(<span class="string">&quot;已经是第一个数据&quot;</span>, <span class="string">&quot;提示&quot;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">       &#123;             </span><br><span class="line">         DataCount--;</span><br><span class="line">       &#125; </span><br><span class="line">          chart1.Series[<span class="number">0</span>].Points.DataBindY(Overall.DataPanel[DataCount]);</span><br><span class="line">  position = Convert.ToInt32(chart1.ChartAreas[<span class="number">0</span>].AxisX.Maximum - WindowSize);</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position = position;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>到此处，基本上就已经完成了。理论上讲可显示的数据量为无限大。并且该方法本人已经应用于超1000万数据显示的项目中，但是因为本文的代码是经过删减整理的，可能会有一些问题。取用时要自行验证。</strong></p><h1 id="精彩评论收集"><a href="#精彩评论收集" class="headerlink" title="精彩评论收集"></a>精彩评论收集</h1><h2 id="评论一-帅气转身而过"><a href="#评论一-帅气转身而过" class="headerlink" title="评论一:帅气转身而过"></a>评论一:帅气转身而过</h2><ul><li>（问）你好，滚轮事件有问题！我这样写有错！</li><li>（答）能具体点吗？可以把错误提示说一下吗？</li><li>（问）chart1.MouseWheel +&#x3D; Chart1_MouseWheel; 说不清，鼠标的事件中我找不到对于chart1.MouseWheel的注册，你这样写，我那边是无效的，红色的波浪线</li><li>（答）“chart1.MouseWheel +&#x3D;“ 输入完毕后会后提示显示，最好按照提示输入，可能是你的大小写有问题。这个我在项目中用过很多次了不可能有问题的，还有控件中是不包含MouseWheel事件的，只能通过代码实现。</li></ul><h2 id="评论二-椰壳里的海"><a href="#评论二-椰壳里的海" class="headerlink" title="评论二:椰壳里的海"></a>评论二:椰壳里的海</h2><ul><li>楼主，你只能每帧显示50000个数据，我这里可以任意范围平滑显示，看看我的帖子吧。</li><li>是一屏显示50000，这也基本上是chart控件的极限了。你说的任意范围平滑显示，那你试过单次显示500万数据吗？</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><p>用fastline样式就行，30w以下数据基本不卡</p></li><li><p>确实 spline最卡，我实时刷新125ms一个点，1000个点就开始卡</p></li><li><p>那怎么保全全部的数据呢，我看还是同时搞两个chart控件方便，一个后台运行保存全部数据，一个看当前时区的变动数据。需要查看全部的数据了再点开看。就不存在卡的现象了。即保存了全部数据，又不影响当前可变的数据。</p></li></ul><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_41848097/article/details/106119181">C# 如何解决chart控件显示数据量过大时的卡顿问题</a></li><li><a href="https://ask.csdn.net/questions/716794?answer=53416784&spm=1001.2014.3001.5504">echarts绘制大数量折线图太卡，绘制很慢</a></li><li><a href="https://echartsjs.com/">echartsjs大数据绘图</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 C# chart 图表时因数据量过大导致卡顿的解决方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="图表" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
    <category term="大数据" scheme="https://zml3589110.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="卡顿" scheme="https://zml3589110.github.io/tags/%E5%8D%A1%E9%A1%BF/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十三（C# 实现动态图表，动态数据呈现）</title>
    <link href="https://zml3589110.github.io/posts/2488899717.html"/>
    <id>https://zml3589110.github.io/posts/2488899717.html</id>
    <published>2023-02-16T08:54:20.000Z</published>
    <updated>2023-02-17T08:13:28.617Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现动态数据图表"><a href="#实现动态数据图表" class="headerlink" title="实现动态数据图表"></a>实现动态数据图表</h1><h2 id="创建步骤"><a href="#创建步骤" class="headerlink" title="创建步骤"></a>创建步骤</h2><ol><li>创建用户控件窗体</li><li>添加一个 System.Windows.Forms.DataVisualization.Charting.Chart 以呈现图表</li><li>添加一个 System.Windows.Forms.Timer 以构造随时间变化的随机数据（动态演示，数据刷新频率取决于此timer控件通知频率）</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DynamicChart</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">DChart</span> : <span class="title">UserControl</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">int</span> xPointNum = <span class="number">25</span>;</span><br><span class="line">        Queue&lt;<span class="built_in">int</span>&gt; dataQueue = <span class="keyword">new</span> Queue&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">        List&lt;<span class="built_in">int</span>&gt; chartXList = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">DChart</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Location = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            dataQueue.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; xPointNum; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                dataQueue.Enqueue(<span class="number">0</span>);</span><br><span class="line">                chartXList.Add(i+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            chart1.Legends[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DChart_Resize</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           chart1.Size = <span class="keyword">this</span>.Size;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timerClock_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (DesignMode) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">int</span> number = <span class="keyword">new</span> Random().Next(<span class="number">0</span>,<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (dataQueue.Count &gt;= xPointNum) dataQueue.Dequeue();</span><br><span class="line"></span><br><span class="line">            dataQueue.Enqueue(number);</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.DataBindXY(chartXList, dataQueue);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DChart_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (DesignMode)</span><br><span class="line">            &#123;</span><br><span class="line">                timerClock.Enabled = <span class="literal">false</span>;</span><br><span class="line">                Random random = <span class="keyword">new</span> Random();</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; xPointNum; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (dataQueue.Count &gt;= xPointNum) dataQueue.Dequeue();</span><br><span class="line">                    dataQueue.Enqueue(random.Next(<span class="number">0</span>, <span class="number">100</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].Points.DataBindXY(chartXList, dataQueue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果演示"><a href="#结果演示" class="headerlink" title="结果演示"></a>结果演示</h2><img src="https://s2.51cto.com/images/blog/202107/09/97378cfba4c68f6eee32024132e1120f.jpg?x-oss-process=image/watermark,size_14,text_QDUxQ1RP5Y2a5a6i,color_FFFFFF,t_30,g_se,x_10,y_10,shadow_20,type_ZmFuZ3poZW5naGVpdGk=/format,webp/resize,m_fixed,w_1184"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.51cto.com/firswof/3033608">C# 实现动态图表，动态数据呈现</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 C# 实现动态图表，动态数据呈现</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="动态" scheme="https://zml3589110.github.io/tags/%E5%8A%A8%E6%80%81/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="图表" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十二（Chart 动态添加series）</title>
    <link href="https://zml3589110.github.io/posts/1480607824.html"/>
    <id>https://zml3589110.github.io/posts/1480607824.html</id>
    <published>2023-02-16T08:43:20.000Z</published>
    <updated>2023-02-17T08:13:28.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图形组件Chart动态添加Series"><a href="#图形组件Chart动态添加Series" class="headerlink" title="图形组件Chart动态添加Series"></a>图形组件Chart动态添加Series</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">Chart1.DataSource = dtb;</span><br><span class="line">            <span class="built_in">string</span>[] strcolor = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">20</span>];</span><br><span class="line">            strcolor[<span class="number">0</span>] = <span class="string">&quot;220, 224, 64, 10&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">1</span>] = <span class="string">&quot;220, 252, 180, 65&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">2</span>] = <span class="string">&quot;220, 159, 100, 100&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">3</span>] = <span class="string">&quot;220, 5, 100, 146&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">4</span>] = <span class="string">&quot;91,42,0&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">5</span>] = <span class="string">&quot;19,211,188&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">6</span>] = <span class="string">&quot;0,93,70&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">7</span>] = <span class="string">&quot;185,147,240&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">8</span>] = <span class="string">&quot;194,211,252&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">9</span>] = <span class="string">&quot;49,0,93&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">10</span>] = <span class="string">&quot;245,111,5&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">11</span>] = <span class="string">&quot;203,72,178&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">12</span>] = <span class="string">&quot;93,93,0&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">13</span>] = <span class="string">&quot;165,165,147&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">14</span>] = <span class="string">&quot;124,201,15&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">15</span>] = <span class="string">&quot;14,112,201&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">16</span>] = <span class="string">&quot;0,59,93&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">17</span>] = <span class="string">&quot;5,18,108&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">18</span>] = <span class="string">&quot;245,15,54&quot;</span>;</span><br><span class="line">            strcolor[<span class="number">19</span>] = <span class="string">&quot;121,129,234&quot;</span>;</span><br><span class="line">            Chart1.Series.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dt.Rows.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Chart1.Series.Add(i.ToString());<span class="comment">//添加</span></span><br><span class="line">                Chart1.Series[i.ToString()].ChartType = SeriesChartType.StackedBar;</span><br><span class="line">                Chart1.Series[i.ToString()].IsXValueIndexed = <span class="literal">true</span>;</span><br><span class="line">                Chart1.Series[i.ToString()].XValueMember = <span class="string">&quot;Customer&quot;</span>;</span><br><span class="line">                Chart1.Series[i.ToString()].YValueMembers = <span class="string">&quot;StickCarQutity&quot;</span> + (i + <span class="number">1</span>);</span><br><span class="line">                Chart1.Series[i.ToString()].LegendText = dt.Rows[i][<span class="string">&quot;level&quot;</span>].ToString();</span><br><span class="line">                Chart1.Series[i.ToString()].BorderColor = Color.FromArgb(<span class="number">180</span>, <span class="number">26</span>, <span class="number">59</span>, <span class="number">105</span>);</span><br><span class="line">                Chart1.Series[i.ToString()].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (i &lt; <span class="number">4</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span>[] number = strcolor[i].ToString().Split(<span class="keyword">new</span> Char[] &#123; <span class="string">&#x27;,&#x27;</span> &#125;);</span><br><span class="line">                    <span class="built_in">int</span> alpha = <span class="built_in">int</span>.Parse(number[<span class="number">0</span>].ToString());</span><br><span class="line">                    <span class="built_in">int</span> red = <span class="built_in">int</span>.Parse(number[<span class="number">1</span>].ToString());</span><br><span class="line">                    <span class="built_in">int</span> green = <span class="built_in">int</span>.Parse(number[<span class="number">2</span>].ToString());</span><br><span class="line">                    <span class="built_in">int</span> blue = <span class="built_in">int</span>.Parse(number[<span class="number">3</span>].ToString());</span><br><span class="line">                    Chart1.Series[i.ToString()].Color = Color.FromArgb(alpha, red, green, blue);<span class="comment">//颜色赋值</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="number">3</span>&lt;i&amp;&amp;i&lt;<span class="number">20</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span>[] number = strcolor[i].ToString().Split(<span class="keyword">new</span> Char[] &#123; <span class="string">&#x27;,&#x27;</span> &#125;);</span><br><span class="line">                        <span class="built_in">int</span> red = <span class="built_in">int</span>.Parse(number[<span class="number">0</span>].ToString());</span><br><span class="line">                        <span class="built_in">int</span> green = <span class="built_in">int</span>.Parse(number[<span class="number">1</span>].ToString());</span><br><span class="line">                        <span class="built_in">int</span> blue = <span class="built_in">int</span>.Parse(number[<span class="number">2</span>].ToString());</span><br><span class="line">                        Chart1.Series[i.ToString()].Color = Color.FromArgb(red, green, blue);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                    </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Chart1.DataBind();</span><br></pre></td></tr></table></figure><p><strong>不知道这个HTML文件有啥用呢！</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">asp:Chart</span> <span class="attr">ID</span>=<span class="string">&quot;Chart1&quot;</span> <span class="attr">runat</span>=<span class="string">&quot;server&quot;</span> <span class="attr">DataMember</span>=<span class="string">&quot;DefaultView&quot;</span> <span class="attr">Height</span>=<span class="string">&quot;700px&quot;</span> <span class="attr">Width</span>=<span class="string">&quot;800px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Legends</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:Legend</span> <span class="attr">Docking</span>=<span class="string">&quot;Top&quot;</span> <span class="attr">Name</span>=<span class="string">&quot;Default&quot;</span> <span class="attr">BackColor</span>=<span class="string">&quot;Transparent&quot;</span> <span class="attr">Font</span>=<span class="string">&quot;Trebuchet MS, 8pt, style=Bold&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">asp:Legend</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Legends</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Series</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Series</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ChartAreas</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">asp:ChartArea</span> <span class="attr">Name</span>=<span class="string">&quot;ChartArea1&quot;</span> <span class="attr">IsSameFontSizeForAllAxes</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisX</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span> <span class="attr">IsReversed</span>=<span class="string">&quot;True&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Font</span>=<span class="string">&quot;Microsoft Sans Serif, 8pt&quot;</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">IntervalType</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ScaleBreakStyle</span> <span class="attr">CollapsibleSpaceThreshold</span>=<span class="string">&quot;10&quot;</span> <span class="attr">LineColor</span>=<span class="string">&quot;Transparent&quot;</span> <span class="attr">BreakLineStyle</span>=<span class="string">&quot;None&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">IntervalOffset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisX</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisY</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> <span class="attr">IntervalType</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisY</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisX2</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">IntervalOffset</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorGrid</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;Auto&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MinorTickMark</span> <span class="attr">Interval</span>=<span class="string">&quot;1&quot;</span> <span class="attr">Enabled</span>=<span class="string">&quot;True&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Font</span>=<span class="string">&quot;Microsoft Sans Serif, 8pt&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisX2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">AxisY2</span> <span class="attr">LabelAutoFitMaxFontSize</span>=<span class="string">&quot;8&quot;</span> <span class="attr">LabelAutoFitMinFontSize</span>=<span class="string">&quot;5&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">LabelStyle</span> <span class="attr">Font</span>=<span class="string">&quot;Microsoft Sans Serif, 7pt&quot;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">MajorGrid</span> <span class="attr">Enabled</span>=<span class="string">&quot;False&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">AxisY2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">asp:ChartArea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ChartAreas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">asp:Chart</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="通过遍历添加"><a href="#通过遍历添加" class="headerlink" title="通过遍历添加"></a>通过遍历添加</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; x1.Count - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">     ArrayList xData = x2.GetRange(i, <span class="number">2</span>);</span><br><span class="line">     ArrayList yData = y2.GetRange(i, <span class="number">2</span>);</span><br><span class="line">     <span class="comment">//动态生成series</span></span><br><span class="line">     chart1.Series.Add(i.ToString());</span><br><span class="line">     chart1.Series[i].ChartType = SeriesChartType.Line;<span class="comment">//设置为折线</span></span><br><span class="line">     chart1.Series[i].Points.DataBindXY(xData, yData);</span><br><span class="line">     chart1.Series[i].BorderWidth = <span class="number">3</span>;<span class="comment">//折线粗细</span></span><br><span class="line">     chart1.Series[i].Color = getColor(level[i]);<span class="comment">//设置折线颜色</span></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/longphui/p/4739536.html">问题：C#Chart控件自动添加Series；结果：图形组件Chart动态添加Series</a></li><li><a href="https://blog.csdn.net/Rww178/article/details/114820384">C# 怎么向折线图动态添加series</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Chart 动态添加series</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="图表" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
    <category term="动态添加" scheme="https://zml3589110.github.io/tags/%E5%8A%A8%E6%80%81%E6%B7%BB%E5%8A%A0/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十一（Chart入门功能收集）</title>
    <link href="https://zml3589110.github.io/posts/3529651870.html"/>
    <id>https://zml3589110.github.io/posts/3529651870.html</id>
    <published>2023-02-16T08:27:20.000Z</published>
    <updated>2023-02-17T08:13:28.560Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c-Winform-Chart基础入门-功能–如何添加-Chart-图表"><a href="#c-Winform-Chart基础入门-功能–如何添加-Chart-图表" class="headerlink" title="c# Winform Chart基础入门 功能–如何添加  Chart 图表"></a>c# Winform Chart基础入门 功能–如何添加  Chart 图表</h1><p>额外参考链接：<a href="http://www.cnblogs.com/greenerycn/archive/2008/10/27/microsoft-chart.html">http://www.cnblogs.com/greenerycn/archive/2008/10/27/microsoft-chart.html</a></p><p>首先添加引用System.Windows.Forms.DataVisualization，添加引用后，工具面板上将在数据中显示Chart,可直接拖拽到界面上。</p><p>代码中添加 <strong>Using System.Windows.Forms.DataVisualization.Charting;</strong></p><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619182809181-529430866.png"><h2 id="1-当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。"><a href="#1-当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。" class="headerlink" title="1. 当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。"></a>1. 当拖拽Chart到界面上时，一般来说Chart及其ChartAreas、Legend部分的背景为白色，我们可以分别通过各自的BackColor设置为透明或其他颜色。</h2><pre><code>通过设置Series的ChartType属性来选择图表类型，一般常用：折线Line，柱状图Column，饼状图Pie,雷达图Redar等等。</code></pre><h2 id="2-设置ChartAreas属性"><a href="#2-设置ChartAreas属性" class="headerlink" title="2. 设置ChartAreas属性"></a>2. 设置ChartAreas属性</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ct.ChartAreas.Add(<span class="keyword">new</span> ChartArea() &#123; Name = <span class="string">&quot;ca1&quot;</span> &#125;); <span class="comment">//背景框</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorGrid.Enabled = <span class="literal">false</span>; <span class="comment">//X轴上网格</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.Enabled = <span class="literal">false</span>; <span class="comment">//y轴上网格</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorGrid.LineDashStyle = ChartDashStyle.Dash; <span class="comment">//网格类型 短横线</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorGrid.LineColor = Color.Gray;</span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].MajorTickMark.Enabled = <span class="literal">false</span>; <span class="comment">// x轴上突出的小点</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorTickMark.Enabled = <span class="literal">false</span>; <span class="comment">//</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].IsInterlaced = <span class="literal">true</span>; <span class="comment">//显示交错带</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">0</span>].LabelStyle.Format = <span class="string">&quot;#年&quot;</span>; <span class="comment">//设置X轴显示样式</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.LineDashStyle = ChartDashStyle.Dash; <span class="comment">//网格类型 短横线</span></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.LineColor = Color.Blue;</span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].Axes[<span class="number">1</span>].MajorGrid.LineWidth = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ct.ChartAreas[<span class="number">0</span>].BackColor = System.Drawing.Color.Transparent; <span class="comment">//设置区域内背景透明</span></span><br></pre></td></tr></table></figure><h2 id="3-设置值Series"><a href="#3-设置值Series" class="headerlink" title="3. 设置值Series"></a>3. 设置值Series</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加的两组Test数据</span></span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; txData2 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">2011</span>, <span class="number">2012</span>, <span class="number">2013</span>, <span class="number">2014</span>, <span class="number">2015</span>, <span class="number">2016</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; tyData2 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">9</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">4</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; txData3 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">2012</span> &#125;;</span><br><span class="line">List&lt;<span class="built_in">int</span>&gt; tyData3 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">7</span> &#125;;</span><br><span class="line"></span><br><span class="line">ct.Series.Add(<span class="keyword">new</span> Series()); <span class="comment">//添加一个图表序列</span></span><br><span class="line"><span class="comment">// ct.Series[0].XValueType = ChartValueType.String; //设置X轴上的值类型</span></span><br><span class="line">ct.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>; <span class="comment">//设置显示X Y的值</span></span><br><span class="line">ct.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX年\r#VAL&quot;</span>; <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">ct.Series[<span class="number">0</span>].ChartArea = ct.ChartAreas[<span class="number">0</span>].Name; <span class="comment">//设置图表背景框ChartArea </span></span><br><span class="line">ct.Series[<span class="number">0</span>].ChartType = SeriesChartType.Line; <span class="comment">//图类型(折线)</span></span><br><span class="line">ct.Series[<span class="number">0</span>].Points.DataBindXY(txData2, tyData2); <span class="comment">//添加数据</span></span><br><span class="line"><span class="comment">//折线段配置</span></span><br><span class="line">ct.Series[<span class="number">0</span>].Color = Color.Red; <span class="comment">//线条颜色</span></span><br><span class="line">ct.Series[<span class="number">0</span>].BorderWidth = <span class="number">3</span>; <span class="comment">//线条粗细</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerBorderColor = Color.Red; <span class="comment">//标记点边框颜色</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerBorderWidth = <span class="number">3</span>; <span class="comment">//标记点边框大小</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerColor = Color.Red; <span class="comment">//标记点中心颜色</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerSize = <span class="number">5</span>; <span class="comment">//标记点大小</span></span><br><span class="line">ct.Series[<span class="number">0</span>].MarkerStyle = MarkerStyle.Circle; <span class="comment">//标记点类型</span></span><br><span class="line"></span><br><span class="line">ct.Series.Add(<span class="keyword">new</span> Series()); <span class="comment">//添加一个图表序列</span></span><br><span class="line">ct.Series[<span class="number">1</span>].Label = <span class="string">&quot;#VAL&quot;</span>; <span class="comment">//设置显示X Y的值</span></span><br><span class="line">ct.Series[<span class="number">1</span>].ToolTip = <span class="string">&quot;#VALX年\r#VAL&quot;</span>; <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">ct.Series[<span class="number">1</span>].ChartArea = <span class="string">&quot;ca1&quot;</span>;        <span class="comment">//选择显示的ChartArea ，如果和其他的Series选择是同一个ChartArea，则在同一个区域中显示对比</span></span><br><span class="line">ct.Series[<span class="number">1</span>].ChartType = SeriesChartType.Line; <span class="comment">//图类型(折线)</span></span><br><span class="line">ct.Series[<span class="number">1</span>].Points.DataBindXY(txData3, tyData3); <span class="comment">//添加数据</span></span><br><span class="line"><span class="comment">//折线段配置</span></span><br><span class="line">ct.Series[<span class="number">1</span>].Color = Color.Black; <span class="comment">//线条颜色</span></span><br><span class="line">ct.Series[<span class="number">1</span>].BorderWidth = <span class="number">3</span>; <span class="comment">//线条粗细</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerBorderColor = Color.Black; <span class="comment">//标记点边框颜色</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerBorderWidth = <span class="number">3</span>; <span class="comment">//标记点边框大小</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerColor = Color.Black; <span class="comment">//标记点中心颜色</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerSize = <span class="number">5</span>; <span class="comment">//标记点大小</span></span><br><span class="line">ct.Series[<span class="number">1</span>].MarkerStyle = MarkerStyle.Circle; <span class="comment">//标记点类型</span></span><br></pre></td></tr></table></figure><h2 id="4-其他ChartType的特殊设置"><a href="#4-其他ChartType的特殊设置" class="headerlink" title="4. 其他ChartType的特殊设置"></a>4. 其他ChartType的特殊设置</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//饼图说明设置，这用来设置饼图每一块的信息显示在什么地方</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;PieLabelStyle&quot;</span>] = <span class="string">&quot;Outside&quot;</span>;<span class="comment">//将文字移到外侧</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;PieLineColor&quot;</span>] = <span class="string">&quot;Black&quot;</span>;<span class="comment">//绘制黑色的连线。</span></span><br><span class="line"><span class="comment">//柱状图其他设置</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;DrawingStyle&quot;</span>] = <span class="string">&quot;Emboss&quot;</span>; <span class="comment">//设置柱状平面形状</span></span><br><span class="line">ct.Series[<span class="number">0</span>][<span class="string">&quot;PointWidth&quot;</span>] = <span class="string">&quot;0.5&quot;</span>; <span class="comment">//设置柱状大小</span></span><br></pre></td></tr></table></figure><h2 id="5-几种ChartType展示"><a href="#5-几种ChartType展示" class="headerlink" title="5. 几种ChartType展示"></a>5. 几种ChartType展示</h2><table><thead><tr><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619193636804-1004411170.png" alt="img"></th><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619194921306-1359831382.png" alt="img"></th><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195109596-335521709.png" alt="img"></th><th><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195141038-8113878.png" alt="img"></th></tr></thead><tbody><tr><td>折线图-Line</td><td>柱状图-Column</td><td>饼状图-Pie</td><td>雷达图-Redar</td></tr><tr><td><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195228872-1568633738.png" alt="img"></td><td><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195207652-433353833.png" alt="img"></td><td><img src="https://images2018.cnblogs.com/blog/1025409/201806/1025409-20180619195304895-1220477305.png" alt="img"></td><td></td></tr><tr><td>Spline</td><td>Bar</td><td>Doughnut</td><td></td></tr></tbody></table><h1 id="C-的CHART-怎么设置不显示格网"><a href="#C-的CHART-怎么设置不显示格网" class="headerlink" title="C#的CHART 怎么设置不显示格网"></a>C#的CHART 怎么设置不显示格网</h1><h2 id="方法一：代码设置"><a href="#方法一：代码设置" class="headerlink" title="方法一：代码设置"></a>方法一：代码设置</h2><p><strong>使用如下代码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.chart1.chartArea[<span class="number">0</span>].AxisX.MajorGrid.LineColor = System.Drawing.Color.Transparent;</span><br><span class="line"><span class="keyword">this</span>.chart1.chartArea[<span class="number">0</span>].AxisY.MajorGrid.LineColor = System.Drawing.Color.Transparent;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法二：在属性栏上设置"><a href="#方法二：在属性栏上设置" class="headerlink" title="方法二：在属性栏上设置"></a>方法二：在属性栏上设置</h2><img src="https://www.freesion.com/images/69/dd954387931456c110300f2897b526ed.png"><img src="https://www.freesion.com/images/550/e4b403b37321e0121f7e405f1c586106.png"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/Betty-IT/p/9198557.html">c# Winform Chart入门</a></li><li><a href="https://www.freesion.com/article/43391405555/">C#的CHART 怎么设置不显示格网</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">主要收集 Chart 绘图常用功能及其说明-解释各种设置</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="图表" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>C# 登录界面显示密码星号</title>
    <link href="https://zml3589110.github.io/posts/2960592375.html"/>
    <id>https://zml3589110.github.io/posts/2960592375.html</id>
    <published>2023-02-16T03:40:20.000Z</published>
    <updated>2023-02-17T08:13:28.624Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h1><img src="https://img-blog.csdnimg.cn/20200820231645675.png"><p>在软件设计时，往往需要设置用户的登录权限。用户在填写密码时，如何实现输入隐藏，或者以“*”号进行隐藏显示？这里需要利用textBox的PasswordChar属性。</p><h1 id="属性解释"><a href="#属性解释" class="headerlink" title="属性解释"></a>属性解释</h1><p>PasswordChar属性用于获取或设置字符，该字符用于屏蔽单行 TextBox 控件中的密码字符。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>下面展示了checkBox状态切换响应函数 代码</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ckBoxPassword_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ckBoxPassword.Checked)</span><br><span class="line">    &#123;</span><br><span class="line">        tBoxPassword.PasswordChar = <span class="string">&#x27;&#x27;</span>;   <span class="comment">//显示输入</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        tBoxPassword.PasswordChar = <span class="string">&#x27;*&#x27;</span>;   <span class="comment">//显示*</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ckBoxPassword_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(ckBoxPassword.Checked)</span><br><span class="line">&#123;</span><br><span class="line">tBoxPassword.PasswordChar = <span class="string">&#x27;\0&#x27;</span>;   <span class="comment">//显示输入</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">tBoxPassword.PasswordChar = <span class="string">&#x27;*&#x27;</span>;   <span class="comment">//显示*</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><img src="https://img-blog.csdnimg.cn/20200820232527236.gif#pic_center"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://javaforall.cn/161466.html">C#实现登录界面，密码星号显示（隐藏输入密码）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#实现登录界面，密码星号显示（隐藏输入密码）C#实现登录界面</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="登录界面" scheme="https://zml3589110.github.io/tags/%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2/"/>
    
    <category term="密码星号" scheme="https://zml3589110.github.io/tags/%E5%AF%86%E7%A0%81%E6%98%9F%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>C#winfrom 项目复制后界面空白</title>
    <link href="https://zml3589110.github.io/posts/1869196606.html"/>
    <id>https://zml3589110.github.io/posts/1869196606.html</id>
    <published>2023-02-16T03:27:20.000Z</published>
    <updated>2023-02-17T08:13:28.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>有时候正在做的项目需要以前项目的界面（Form，UserControl），重新写又觉得麻烦，只好从原来项目复制文件过来，然后添加到这个项目，添加完了之后，打开设计器，发现界面成了空白，什么也没有，CS代码文件与设计器代码文件也是分离的。<br><strong>如图：</strong></p><img src="https://img-blog.csdnimg.cn/dde62b1f16604491b892147cbee08e35.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_9,color_FFFFFF,t_70,g_se,x_16#pic_center"><img src="https://img-blog.csdnimg.cn/e38175e47c6d42feb13e214e2332167e.jpg"><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="方案一（详细型）：删除重新调用"><a href="#方案一（详细型）：删除重新调用" class="headerlink" title="方案一（详细型）：删除重新调用"></a>方案一（详细型）：删除重新调用</h2><blockquote><p>1.新建一个winform项目test，建好以后在解决方案资源管理器中右击form1.cs，点击删除。此时项目文件夹中的.cs和.Designers.cs后缀文件将自动删除。</p></blockquote><img src="https://img-blog.csdnimg.cn/ef1ad438ce2a468dad0d3d8105503c3e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>2.将原来项目文件夹中，除了app.config、Program.cs、BasicDemo.csproj、bin文件夹、obj文件夹和Properties文件夹外，其余文件均复制到新项目文件夹中。</p></blockquote><img src="https://img-blog.csdnimg.cn/3cdf50732feb42c7a976b0487140f0ca.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>3.在新项目解决方案资源管理器中右击test项目–添加–现有项，选择BasicDemo.cs，其余文件也会自动添加到项目中。</p></blockquote><blockquote><p>4.修改BasisDemo.cs和BascDemo.designer.cs代码中的命名空间为新项目的命令空间。<strong>不改问题也不大！</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/ee051e8eaf114b029791ea7ca6d4220a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rex5bqm5a2m5Lmg5LiN5a2m5Lmg,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center"><blockquote><p>5.如果原项目中引用了动态链接库，复制到新项目中时要重新引用一次。</p></blockquote><h2 id="方案二（简单型）：与方案一基本相同"><a href="#方案二（简单型）：与方案一基本相同" class="headerlink" title="方案二（简单型）：与方案一基本相同"></a>方案二（简单型）：与方案一基本相同</h2><p>选中项目中的设计器文件和资源文件，右键→从项目中排除（注意：不是删除，删除文件也会没了），然后打开设计器和资源文件所在目录，选中这两个文件，拖到项目中控件的CS文件上，就好了，现在双击控件CS文件也能看到设计的界面了，设计器文件与代码文件也合体了。</p><img src="https://img-blog.csdnimg.cn/2ecf2fa9695546a8b79abbbcf7788f83.jpg"><h2 id="方案三（原理型）："><a href="#方案三（原理型）：" class="headerlink" title="方案三（原理型）："></a>方案三（原理型）：</h2><blockquote><p>找到项目的项目文件（xx.csproj），用文本打开，找到以下内容：</p></blockquote><img src="https://img-blog.csdnimg.cn/1dbc21ec3a3d480793f87b0d382ad59f.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAV2hhdF9jYW5feW91X2Rv,size_16,color_FFFFFF,t_70,g_se,x_16"><img src="https://img-blog.csdnimg.cn/44719353690c4a2699a26ebbac3855e7.jpg"><ul><li>UserListView是我刚刚改好的，是正常的，UserPictureBox是还没有改的，是有问题的，两者对比下，就可以改了。注意：一个是设计器文件，一个是资源文件，两个地方都要改。改完保存，再打开项目就好了。</li></ul><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/weixin_43178844/article/details/121518306">winform把一个项目复制到另一个项目中时出现界面空白问题</a></li><li><a href="https://blog.csdn.net/What_can_you_do/article/details/120757052">＜WinForm＞复制别的项目界面文件到项目中打开设计器空白问题</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">把一个项目复制到另一个项目中时出现界面空白</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="项目复制" scheme="https://zml3589110.github.io/tags/%E9%A1%B9%E7%9B%AE%E5%A4%8D%E5%88%B6/"/>
    
    <category term="界面问题" scheme="https://zml3589110.github.io/tags/%E7%95%8C%E9%9D%A2%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十（Chart中各类图表数据显示）</title>
    <link href="https://zml3589110.github.io/posts/224704259.html"/>
    <id>https://zml3589110.github.io/posts/224704259.html</id>
    <published>2023-02-10T01:18:20.000Z</published>
    <updated>2023-02-10T01:37:56.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img-blog.csdnimg.cn/20210510134457640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyODMyMjcy,size_16,color_FFFFFF,t_70"><h1 id="简单属性说明"><a href="#简单属性说明" class="headerlink" title="简单属性说明"></a>简单属性说明</h1><h2 id="ChartAreas属性"><a href="#ChartAreas属性" class="headerlink" title="ChartAreas属性"></a>ChartAreas属性</h2><p>ChartAreas属性指绘图区，一个控件可以有多个绘图区，比如我要在同一个控件内显示饼图和柱状图，肯定不能放在同一个ChartAreas区域内，应该在同一个Chart控件里增加两个ChartAreas并分别绑定Series对象。<br><strong>所以ChartAreas属性对应的是一个集合。</strong></p><h2 id="Series属性"><a href="#Series属性" class="headerlink" title="Series属性"></a>Series属性</h2><p>Series属性就是各种图表的图形啦，比如我们要显示某月的天气变化，那么应该有这样两组数据，一组是天数，一组是每天对应的温度值，同时绑定到Series对象中，再将Series对象Add()到Chart控件的Series属性里即可。<br>为了横向比较，例如我要看本月与上月的天气曲线变化图，并同时显示在同一个ChartAreas中，那该怎么办呢？很简单，再实例一个Series对象，将上月的天数数组与温度值数组绑定到一个新的Series2实例中，再将Series2实例Add()到Chart控件的Series属性里，此时，Chart控件的第一个绘图区ChartArea里就会有两条曲线。</p><h2 id="Legends属性"><a href="#Legends属性" class="headerlink" title="Legends属性"></a>Legends属性</h2><p>Legend就是指一个图标的图例，当一个Series属性有多个Series时，或是一个Series有几组数据时，为了区分各自的颜色，通常每个Serie对象一种颜色，这就需要用到图例来指明哪个颜色的代表的是什么数据</p><p><strong>如下图所示：</strong></p><img src="https://img-blog.csdnimg.cn/20190606115526740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190606115542660.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190606115559527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190606115611468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4NjI4OTcw,size_16,color_FFFFFF,t_70"><h2 id="关于数据的绑定"><a href="#关于数据的绑定" class="headerlink" title="关于数据的绑定"></a>关于数据的绑定</h2><p>将要显示的X轴和Y轴的数据分别放到两个数组里在， 然后绑定即可。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cht1.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br></pre></td></tr></table></figure><h1 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] x = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;南山大队&quot;</span>, <span class="string">&quot;福田大队&quot;</span>, <span class="string">&quot;罗湖大队&quot;</span>, <span class="string">&quot;宝安大队&quot;</span>, <span class="string">&quot;指挥处&quot;</span>, &#125;;</span><br><span class="line">        <span class="built_in">double</span>[] y = <span class="keyword">new</span> <span class="built_in">double</span>[] &#123; <span class="number">541</span>, <span class="number">574</span>, <span class="number">345</span>, <span class="number">854</span>, <span class="number">257</span> &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">region</span> 柱状图</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//标题</span></span><br><span class="line">        cht1.Titles.Add(<span class="string">&quot;柱状图数据分析&quot;</span>);</span><br><span class="line">        cht1.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">        cht1.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//右上角标题</span></span><br><span class="line">        cht1.Titles.Add(<span class="string">&quot;合计：0 宗&quot;</span>);</span><br><span class="line">        <span class="comment">//cht1.Titles.Add(&quot;合计：25414 宗&quot;);</span></span><br><span class="line">        <span class="comment">//cht1.Titles.Add(&quot;合计：25414 宗&quot;);</span></span><br><span class="line">        <span class="comment">//cht1.Titles.Add(&quot;合计：25414 宗&quot;);</span></span><br><span class="line">        cht1.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">        cht1.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        <span class="comment">//设置标题位于右上角</span></span><br><span class="line">        <span class="comment">//cht1.Titles[1].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line">        <span class="comment">//cht1.Titles[2].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line">        <span class="comment">//cht1.Titles[3].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line">        <span class="comment">//cht1.Titles[4].Alignment = ContentAlignment.TopRight;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//控件背景</span></span><br><span class="line">        cht1.BackColor = Color.Yellow;</span><br><span class="line">        <span class="comment">//图表区背景</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">        <span class="comment">//X轴标签间距</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;   <span class="comment">//下方标签显示的角度</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//X坐标轴颜色</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        <span class="comment">//X坐标轴标题</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.Title = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.TextOrientation = TextOrientation.Horizontal;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.ToolTip = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        <span class="comment">//X轴网络线条</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        <span class="comment">//Y坐标轴标题</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.Title = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;宋体&quot;</span>, <span class="number">5f</span>, FontStyle.Regular);</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.TitleForeColor = Color.Black;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.TextOrientation = TextOrientation.Rotated270;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.ToolTip = <span class="string">&quot;数量(个)&quot;</span>;</span><br><span class="line">        <span class="comment">//Y轴网格线条</span></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line">        cht1.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.TopBottom;</span><br><span class="line">        <span class="built_in">string</span> now_time = System.DateTime.Now.ToString(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">        Legend legend = <span class="keyword">new</span> Legend(now_time);</span><br><span class="line">        legend.Title = <span class="string">&quot;legendTitle&quot;</span>;</span><br><span class="line"></span><br><span class="line">        cht1.Series[<span class="number">0</span>].XValueType = ChartValueType.String;  <span class="comment">//设置X轴上的值类型</span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                <span class="comment">//设置显示X Y的值    </span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL&quot;</span>;     <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].ChartType = SeriesChartType.Column;    <span class="comment">//图类型(折线)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        cht1.Series[<span class="number">0</span>].Color = Color.Lime;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].LegendText = legend.Name;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;DrawingStyle = Cylinder&quot;</span>;</span><br><span class="line">        cht1.Legends.Add(legend);</span><br><span class="line">        cht1.Legends[<span class="number">0</span>].Position.Auto = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//绑定数据</span></span><br><span class="line">        cht1.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">        cht1.Series[<span class="number">0</span>].Points[<span class="number">0</span>].Color = Color.Black;</span><br><span class="line">        cht1.Series[<span class="number">0</span>].Palette = ChartColorPalette.Bright;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 饼图</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//标题</span></span><br><span class="line">            cht2.Titles.Add(<span class="string">&quot;饼图数据分析&quot;</span>);</span><br><span class="line">            cht2.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">            cht2.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line">            cht2.Titles.Add(<span class="string">&quot;合计：25412 宗&quot;</span>);</span><br><span class="line">            cht2.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">            cht2.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.Titles[<span class="number">1</span>].Alignment = ContentAlignment.TopRight;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//控件背景</span></span><br><span class="line">            cht2.BackColor = Color.Transparent;</span><br><span class="line">            <span class="comment">//图表区背景</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">            <span class="comment">//X轴标签间距</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">14f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//X坐标轴颜色</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//X坐标轴标题</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.Title = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.TextOrientation = TextOrientation.Horizontal;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.ToolTip = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            <span class="comment">//X轴网络线条</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//Y坐标轴标题</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.Title = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.TitleForeColor = Color.Black;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.TextOrientation = TextOrientation.Rotated270;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.ToolTip = <span class="string">&quot;数量(宗)&quot;</span>;</span><br><span class="line">            <span class="comment">//Y轴网格线条</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//背景渐变</span></span><br><span class="line">            cht2.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.None;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//图例样式</span></span><br><span class="line">            Legend legend2 = <span class="keyword">new</span> Legend(<span class="string">&quot;#VALX&quot;</span>);</span><br><span class="line">            legend2.Title = <span class="string">&quot;图例&quot;</span>;</span><br><span class="line">            legend2.TitleBackColor = Color.Transparent;</span><br><span class="line">            legend2.BackColor = Color.Transparent;</span><br><span class="line">            legend2.TitleForeColor = Color.Black;</span><br><span class="line">            legend2.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            legend2.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            legend2.ForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">            cht2.Series[<span class="number">0</span>].XValueType = ChartValueType.String;  <span class="comment">//设置X轴上的值类型</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                <span class="comment">//设置显示X Y的值    </span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL(宗)&quot;</span>;     <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].ChartType = SeriesChartType.Pie;    <span class="comment">//图类型(折线)</span></span><br><span class="line"></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Color = Color.Lime;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].LegendText = legend2.Name;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;DrawingStyle = Cylinder&quot;</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;PieLabelStyle = Outside&quot;</span>;</span><br><span class="line">            <span class="comment">//cht2.Legends.Add(legend2);</span></span><br><span class="line">            cht2.Legends[<span class="number">0</span>].Position.Auto = <span class="literal">true</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//是否显示图例</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">            cht2.Series[<span class="number">0</span>].ShadowOffset = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//饼图折线</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>][<span class="string">&quot;PieLineColor&quot;</span>] = <span class="string">&quot;White&quot;</span>;</span><br><span class="line">            <span class="comment">//绑定数据</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            cht2.Series[<span class="number">0</span>].Points[<span class="number">0</span>].Color = Color.Black;</span><br><span class="line">            <span class="comment">//绑定颜色</span></span><br><span class="line">            cht2.Series[<span class="number">0</span>].Palette = ChartColorPalette.BrightPastel;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="横向柱状图"><a href="#横向柱状图" class="headerlink" title="横向柱状图"></a>横向柱状图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> Bar图</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//标题</span></span><br><span class="line">           cht3.Titles.Add(<span class="string">&quot;交通违法行为TOP5&quot;</span>);</span><br><span class="line">           cht3.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">           cht3.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12f</span>, FontStyle.Regular);</span><br><span class="line">           cht3.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line">           cht3.Titles.Add(<span class="string">&quot;合计：25412 宗 &quot;</span>);</span><br><span class="line">           cht3.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">           cht3.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">           cht3.Titles[<span class="number">1</span>].Alignment = ContentAlignment.TopRight;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//控件背景</span></span><br><span class="line">           cht3.BackColor = Color.Transparent;</span><br><span class="line">           <span class="comment">//图表区背景</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">           <span class="comment">//X轴标签间距</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">14f</span>, FontStyle.Regular);</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//X坐标轴颜色</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">           <span class="comment">//X坐标轴标题</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.TitleForeColor = Color.Black;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisX.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//X轴网络线条</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">           <span class="comment">//Y坐标轴标题</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.TitleForeColor = Color.Black;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">           <span class="comment">//cht3.ChartAreas[0].AxisY.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">           <span class="comment">//Y轴网格线条</span></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].AxisX.IsMarginVisible = <span class="literal">false</span>;</span><br><span class="line">           cht3.ChartAreas[<span class="number">0</span>].Area3DStyle.Enable3D = <span class="literal">true</span>;</span><br><span class="line">           <span class="comment">//背景渐变</span></span><br><span class="line">           cht2.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.None;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//图例样式</span></span><br><span class="line">           Legend legend3 = <span class="keyword">new</span> Legend(<span class="string">&quot;#VALX&quot;</span>);</span><br><span class="line">           legend3.Title = <span class="string">&quot;图例&quot;</span>;</span><br><span class="line">           legend3.TitleBackColor = Color.Transparent;</span><br><span class="line">           legend3.BackColor = Color.Transparent;</span><br><span class="line">           legend3.TitleForeColor = Color.Black;</span><br><span class="line">           legend3.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">           legend3.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">           legend3.ForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">           cht3.Series[<span class="number">0</span>].XValueType = ChartValueType.String;  <span class="comment">//设置X轴上的值类型</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                <span class="comment">//设置显示X Y的值    </span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL(宗)&quot;</span>;     <span class="comment">//鼠标移动到对应点显示数值</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].ChartType = SeriesChartType.Bar;    <span class="comment">//图类型(折线)</span></span><br><span class="line"></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Color = Color.Lime;</span><br><span class="line">           <span class="comment">//cht3.Series[0].LegendText = legend3.Name;</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;DrawingStyle = Cylinder&quot;</span>;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].CustomProperties = <span class="string">&quot;PieLabelStyle = Outside&quot;</span>;</span><br><span class="line">           <span class="comment">//cht3.Legends.Add(legend3);</span></span><br><span class="line">           <span class="comment">//cht3.Legends[0].Position.Auto = true;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//是否显示图例</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">           cht3.Series[<span class="number">0</span>].ShadowOffset = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//饼图折线</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>][<span class="string">&quot;PieLineColor&quot;</span>] = <span class="string">&quot;White&quot;</span>;</span><br><span class="line">           <span class="comment">//绑定数据</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line"></span><br><span class="line">           <span class="comment">//cht3.Series[0].Points[0].Color = Color.Black;</span></span><br><span class="line">           <span class="comment">//绑定颜色</span></span><br><span class="line">           cht3.Series[<span class="number">0</span>].Palette = ChartColorPalette.BrightPastel;</span><br><span class="line"></span><br><span class="line">           <span class="comment">//for (int n = 0; n &lt; x.Length; n++)</span></span><br><span class="line">           <span class="comment">//&#123;</span></span><br><span class="line">           <span class="comment">//    int ptIdx = cht3.Series[0].Points.AddY(Convert.ToDouble(y[n]));</span></span><br><span class="line">           <span class="comment">//    DataPoint pt = this.cht3.Series[0].Points[ptIdx];</span></span><br><span class="line">           <span class="comment">//    pt.LegendText = x[n] + &quot; &quot; + &quot;#PERCENT&#123;P2&#125;&quot; + &quot; [ &quot; + &quot;#VAL&#123;D&#125; 次&quot; + &quot; ]&quot;;//右边标签列显示的文字  </span></span><br><span class="line">           <span class="comment">//    pt.Label = x[n] + &quot; &quot; + &quot;#PERCENT&#123;P2&#125;&quot; + &quot; [ &quot; + &quot;#VAL&#123;D&#125; 次&quot; + &quot; ]&quot;; //圆饼外显示的信息 </span></span><br><span class="line"></span><br><span class="line">           <span class="comment">//    //  pt.LabelToolTip = &quot;#PERCENT&#123;P2&#125;&quot;;  </span></span><br><span class="line">           <span class="comment">//    //pt.LabelBorderColor = Color.Red;//文字背景色   </span></span><br><span class="line">           <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">           <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="雷达图"><a href="#雷达图" class="headerlink" title="雷达图"></a>雷达图</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line">cht4.Titles.Add(<span class="string">&quot;交通违法行为TOP5&quot;</span>);</span><br><span class="line">            cht4.Titles[<span class="number">0</span>].ForeColor = Color.Black;</span><br><span class="line">            cht4.Titles[<span class="number">0</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12f</span>, FontStyle.Regular);</span><br><span class="line">            cht4.Titles[<span class="number">0</span>].Alignment = ContentAlignment.TopCenter;</span><br><span class="line">            cht4.Titles.Add(<span class="string">&quot;合计：25412 宗 &quot;</span>);</span><br><span class="line">            cht4.Titles[<span class="number">1</span>].ForeColor = Color.Black;</span><br><span class="line">            cht4.Titles[<span class="number">1</span>].Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            cht4.Titles[<span class="number">1</span>].Alignment = ContentAlignment.TopRight;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//控件背景</span></span><br><span class="line">            cht4.BackColor = Color.Transparent;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].BackColor = Color.Transparent;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].BorderColor = Color.Transparent;</span><br><span class="line">            <span class="comment">//X轴标签间距</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.Interval = <span class="number">1</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.IsStaggered = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Angle = <span class="number">-45</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">14f</span>, FontStyle.Regular);</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = Color.Black;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//X坐标轴颜色</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>); ;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//X坐标轴标题</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.TitleForeColor = Color.Black;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//X轴网络线条</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Y坐标轴颜色</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#38587a&quot;</span>);</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.ForeColor = Color.Black;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            <span class="comment">//Y坐标轴标题</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.Title = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.TitleFont = new Font(&quot;微软雅黑&quot;, 10f, FontStyle.Regular);</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.TitleForeColor = Color.Black;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.TextOrientation = TextOrientation.Auto;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.ToolTip = &quot;数量(宗)&quot;;</span></span><br><span class="line">            <span class="comment">//Y轴网格线条</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Enabled = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = ColorTranslator.FromHtml(<span class="string">&quot;#2c4c6d&quot;</span>);</span><br><span class="line"></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY2.LineColor = Color.Transparent;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.IsMarginVisible = <span class="literal">false</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].Area3DStyle.Enable3D = <span class="literal">true</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.IsInterlaced = <span class="literal">false</span>;</span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.IsMarginVisible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//刻度线</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.MajorTickMark.Enabled = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.MajorGrid.Enabled = false;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.MajorGrid.Enabled = false;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.MajorTickMark.Enabled = false;</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle.Enabled = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//背景渐变</span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].BackGradientStyle = GradientStyle.None;</span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].BorderWidth = 0;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].BackSecondaryColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].BackImageTransparentColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.MajorGrid.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.MajorTickMark.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisX2.MinorTickMark.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.InterlacedColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.MajorGrid.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.MajorTickMark.LineColor = Color.Red;</span></span><br><span class="line">            <span class="comment">//cht4.ChartAreas[0].AxisY2.MinorTickMark.LineColor = Color.Red;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//图例样式</span></span><br><span class="line">            Legend legend4 = <span class="keyword">new</span> Legend();</span><br><span class="line">            legend4.Title = <span class="string">&quot;图例&quot;</span>;</span><br><span class="line">            legend4.TitleBackColor = Color.Transparent;</span><br><span class="line">            legend4.BackColor = Color.Transparent;</span><br><span class="line">            legend4.TitleForeColor = Color.Black;</span><br><span class="line">            legend4.TitleFont = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">10f</span>, FontStyle.Regular);</span><br><span class="line">            legend4.Font = <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">8f</span>, FontStyle.Regular);</span><br><span class="line">            legend4.ForeColor = Color.Black;</span><br><span class="line">            cht4.Legends.Add(legend4);</span><br><span class="line">            cht4.Legends[<span class="number">0</span>].Position.Auto = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Series1</span></span><br><span class="line">            cht4.Series[<span class="number">0</span>].XValueType = ChartValueType.String; </span><br><span class="line">            cht4.Series[<span class="number">0</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                </span><br><span class="line">            cht4.Series[<span class="number">0</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht4.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#LEGENDTEXT:#VAL(宗)&quot;</span>;    </span><br><span class="line">            cht4.Series[<span class="number">0</span>].ChartType = SeriesChartType.Radar;    </span><br><span class="line">            cht4.Series[<span class="number">0</span>][<span class="string">&quot;RadarDrawingStyle&quot;</span>] = <span class="string">&quot;Line&quot;</span>;  </span><br><span class="line">            cht4.Series[<span class="number">0</span>].LegendText = <span class="string">&quot;2015年&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">0</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Series2</span></span><br><span class="line">            cht4.Series.Add(<span class="keyword">new</span> Series(<span class="string">&quot;Series2&quot;</span>));</span><br><span class="line">            cht4.Series[<span class="number">1</span>].Label = <span class="string">&quot;#VAL&quot;</span>;                </span><br><span class="line">            cht4.Series[<span class="number">1</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].ToolTip = <span class="string">&quot;#LEGENDTEXT:#VAL(宗)&quot;</span>;     </span><br><span class="line">            cht4.Series[<span class="number">1</span>].ChartType = SeriesChartType.Radar;   </span><br><span class="line">            cht4.Series[<span class="number">1</span>][<span class="string">&quot;RadarDrawingStyle&quot;</span>] = <span class="string">&quot;Line&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].LegendText = <span class="string">&quot;2016年&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//Series3</span></span><br><span class="line">            cht4.Series.Add(<span class="keyword">new</span> Series(<span class="string">&quot;Series3&quot;</span>));</span><br><span class="line">            cht4.Series[<span class="number">2</span>].Label = <span class="string">&quot;#VAL&quot;</span>;               </span><br><span class="line">            cht4.Series[<span class="number">2</span>].LabelForeColor = Color.Black;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].ToolTip = <span class="string">&quot;#LEGENDTEXT:#VAL(宗)&quot;</span>;     </span><br><span class="line">            cht4.Series[<span class="number">2</span>].ChartType = SeriesChartType.Radar;    </span><br><span class="line">            cht4.Series[<span class="number">2</span>][<span class="string">&quot;RadarDrawingStyle&quot;</span>] = <span class="string">&quot;Line&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].LegendText = <span class="string">&quot;2017年&quot;</span>;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="built_in">double</span>[] yValues = &#123; <span class="number">65.62</span>, <span class="number">75.54</span>, <span class="number">60.45</span>, <span class="number">34.73</span>, <span class="number">85.42</span>, <span class="number">55.9</span>, <span class="number">63.6</span>, <span class="number">55.2</span>, <span class="number">77.1</span> &#125;;</span><br><span class="line">            <span class="built_in">string</span>[] xValues = &#123; <span class="string">&quot;France&quot;</span>, <span class="string">&quot;Canada&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;USA&quot;</span>, <span class="string">&quot;Italy&quot;</span>, <span class="string">&quot;Spain&quot;</span>, <span class="string">&quot;Russia&quot;</span>, <span class="string">&quot;Sweden&quot;</span>, <span class="string">&quot;Japan&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//Seris2  </span></span><br><span class="line">            <span class="built_in">double</span>[] y2 = &#123; <span class="number">45.62</span>, <span class="number">65.54</span>, <span class="number">70.45</span>, <span class="number">84.73</span>, <span class="number">35.42</span>, <span class="number">55.9</span>, <span class="number">63.6</span> &#125;;</span><br><span class="line">            <span class="built_in">double</span>[] y3 = &#123; <span class="number">88.62</span>, <span class="number">35.54</span>, <span class="number">52.45</span>, <span class="number">45.73</span>, <span class="number">88.42</span>, <span class="number">14.9</span>, <span class="number">33.6</span> &#125;;</span><br><span class="line">            <span class="keyword">this</span>.cht4.Series[<span class="number">0</span>].Points.DataBindXY(xValues, yValues);</span><br><span class="line">            <span class="keyword">this</span>.cht4.Series[<span class="number">1</span>].Points.DataBindY(y2);</span><br><span class="line">            <span class="keyword">this</span>.cht4.Series[<span class="number">2</span>].Points.DataBindY(y3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置X轴显示间隔为1,X轴数据比较多的时候比较有用  </span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle.Interval = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//设置XY轴标题的名称所在位置位远  </span></span><br><span class="line">            cht4.ChartAreas[<span class="number">0</span>].AxisX.TitleAlignment = StringAlignment.Near;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; cht4.Series[<span class="number">2</span>].Points.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                cht4.Series[<span class="number">2</span>].Points[i].MarkerStyle = MarkerStyle.Circle;<span class="comment">//设置折点的风格     </span></span><br><span class="line">                cht4.Series[<span class="number">2</span>].Points[i].MarkerColor = Color.Red;<span class="comment">//设置seires中折点的颜色   </span></span><br><span class="line">            <span class="comment">//    cht4.Series[1].Points[i].MarkerStyle = MarkerStyle.Square;//设置折点的风格     </span></span><br><span class="line">            <span class="comment">//    cht4.Series[1].Points[i].MarkerColor = Color.Blue;//设置seires中折点的颜色  </span></span><br><span class="line">            <span class="comment">//    cht4.Series[2].Points[i].MarkerStyle = MarkerStyle.Square;//设置折点的风格     </span></span><br><span class="line">            <span class="comment">//    cht4.Series[2].Points[i].MarkerColor = Color.Green;//设置seires中折点的颜色  </span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; cht4.Series.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; cht4.Series[i].Points.Count; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    cht4.Series[i].Points[j].Label = <span class="string">&quot; &quot;</span>;</span><br><span class="line">                    <span class="comment">//cht4.Series[i].Points[j].LabelToolTip = &quot;string.Empty&quot;;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//cht4.ImageType = ChartImageType.Jpeg;</span></span><br><span class="line">            <span class="comment">//反锯齿  </span></span><br><span class="line">            cht4.AntiAliasing = AntiAliasingStyles.All;</span><br><span class="line">            <span class="comment">//调色板 磨沙:SemiTransparent  </span></span><br><span class="line">            cht4.Palette = ChartColorPalette.BrightPastel;</span><br><span class="line"></span><br><span class="line">            cht4.Series[<span class="number">0</span>].ChartType = SeriesChartType.Radar;</span><br><span class="line">            cht4.Series[<span class="number">1</span>].ChartType = SeriesChartType.Radar;</span><br><span class="line">            cht4.Series[<span class="number">2</span>].ChartType = SeriesChartType.Radar;</span><br><span class="line">            cht4.Width = <span class="number">500</span>;</span><br><span class="line">            cht4.Height = <span class="number">350</span>;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">            <span class="comment">/* </span></span><br><span class="line"><span class="comment">                 #VALX      显示当前图例的X轴的对应文本(或数据) </span></span><br><span class="line"><span class="comment">                 #VAL, #VALY,  显示当前图例的Y轴的对应文本(或数据) </span></span><br><span class="line"><span class="comment">                 #VALY2, #VALY3, 显示当前图例的辅助Y轴的对应文本(或数据) </span></span><br><span class="line"><span class="comment">                 #SER:      显示当前图例的名称 </span></span><br><span class="line"><span class="comment">                 #LABEL       显示当前图例的标签文本 </span></span><br><span class="line"><span class="comment">                 #INDEX      显示当前图例的索引 </span></span><br><span class="line"><span class="comment">                 #PERCENT       显示当前图例的所占的百分比 </span></span><br><span class="line"><span class="comment">                 #TOTAL      总数量 </span></span><br><span class="line"><span class="comment">                 #LEGENDTEXT      图例文本 </span></span><br><span class="line"><span class="comment">                 */</span>  </span><br><span class="line">                    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_42832272/article/details/116593002">C#应用6——chart数据显示(柱状图、饼图、横向柱状图、雷达图)</a></li><li><a href="https://blog.csdn.net/qq_38628970/article/details/91041879">C#chart控件绘制折线图、柱状图、饼图、雷达图</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">在 Chart 中，鼠标放在上面时显示浮动坐标值</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="图表" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之九（Chart鼠标位置浮动显示坐标值）</title>
    <link href="https://zml3589110.github.io/posts/3865063700.html"/>
    <id>https://zml3589110.github.io/posts/3865063700.html</id>
    <published>2023-02-10T01:05:20.000Z</published>
    <updated>2023-02-10T01:37:56.529Z</updated>
    
    <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img-blog.csdnimg.cn/2021040613561561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxMTA4MTg0,size_16,color_FFFFFF,t_70"><h1 id="设置方法"><a href="#设置方法" class="headerlink" title="设置方法"></a>设置方法</h1><h2 id="1、找到chart控件的series属性"><a href="#1、找到chart控件的series属性" class="headerlink" title="1、找到chart控件的series属性"></a>1、找到chart控件的series属性</h2><img src="https://img-blog.csdnimg.cn/20210406135830476.png"><h2 id="2、-将集合下isxvayleindexed属性设置为true"><a href="#2、-将集合下isxvayleindexed属性设置为true" class="headerlink" title="2、 将集合下isxvayleindexed属性设置为true"></a>2、 将集合下isxvayleindexed属性设置为true</h2><blockquote><p>也可以直接使用代码在初始化时实现实现</p></blockquote><img src="https://img-blog.csdnimg.cn/20210406135903819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxMTA4MTg0,size_16,color_FFFFFF,t_70"><h2 id="3、在鼠标移动事件下添加以下代码"><a href="#3、在鼠标移动事件下添加以下代码" class="headerlink" title="3、在鼠标移动事件下添加以下代码"></a>3、在鼠标移动事件下添加以下代码</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chart1.Series[<span class="number">0</span>].ToolTip = “X：<span class="meta">#VALX\nY：#VALY”;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_51108184/article/details/115459335">C#_chart 控件曲线坐标值，根据鼠标移动浮动显示(六)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">在 Chart 中，鼠标放在上面时显示浮动坐标值</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="鼠标" scheme="https://zml3589110.github.io/tags/%E9%BC%A0%E6%A0%87/"/>
    
    <category term="坐标值" scheme="https://zml3589110.github.io/tags/%E5%9D%90%E6%A0%87%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之八（Chart下鼠标滚轮放大缩小及平移）</title>
    <link href="https://zml3589110.github.io/posts/3201193844.html"/>
    <id>https://zml3589110.github.io/posts/3201193844.html</id>
    <published>2023-02-10T00:18:20.000Z</published>
    <updated>2023-02-10T01:37:56.521Z</updated>
    
    <content type="html"><![CDATA[<h1 id="放大缩小"><a href="#放大缩小" class="headerlink" title="放大缩小"></a>放大缩小</h1><h2 id="使用一（这个正常使用）"><a href="#使用一（这个正常使用）" class="headerlink" title="使用一（这个正常使用）"></a>使用一（这个正常使用）</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">this</span>.chart1.MouseWheel += <span class="keyword">new</span> System.Windows.Forms.MouseEventHandler(<span class="keyword">this</span>.chart1_MouseWheel);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//鼠标向上滚的Delta值是120，向下是-120</span></span><br><span class="line">    <span class="keyword">if</span>(e.Delta == <span class="number">120</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size /= <span class="number">2</span>;<span class="comment">//每页显示的点数除以2实现放大效果</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = chart1.Series[<span class="number">0</span>].Points.Count/<span class="number">2</span>;<span class="comment">//首次滚动时size为NaN</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (e.Delta == <span class="number">-120</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size *= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = chart1.Series[<span class="number">0</span>].Points.Count * <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="放大缩小二"><a href="#放大缩小二" class="headerlink" title="放大缩小二"></a>放大缩小二</h2><blockquote><p>添加鼠标滚轮事件</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.chart1.MouseWheel += <span class="keyword">new</span> System.Windows.Forms.MouseEventHandler(<span class="keyword">this</span>.chart1_MouseWheel);</span><br></pre></td></tr></table></figure><blockquote><p>实现鼠标滚轮事件</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseWheel</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 实验发现鼠标滚轮滚动一圈时e.Delta = 120，正反转对应正负120</span></span><br><span class="line"><span class="keyword">if</span> (chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size &gt; <span class="number">0</span>) <span class="comment">// 防止越过左边界</span></span><br><span class="line">&#123;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size += (e.Delta / <span class="number">120</span>); <span class="comment">// 每次缩放1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(e.Delta &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size += (e.Delta / <span class="number">120</span>); <span class="comment">// 每次缩放1</span></span><br><span class="line">&#125;           </span><br><span class="line">&#125;     </span><br></pre></td></tr></table></figure><h1 id="左右平移"><a href="#左右平移" class="headerlink" title="左右平移"></a>左右平移</h1><h2 id="平移使用一（这个正常使用）"><a href="#平移使用一（这个正常使用）" class="headerlink" title="平移使用一（这个正常使用）"></a>平移使用一（这个正常使用）</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> chartBeforePoint = <span class="number">0</span>; <span class="comment">// 用于记录鼠标上次移动的点，用于判断是左移还是右移</span></span><br><span class="line"><span class="built_in">bool</span> chartFlag = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    chartBeforePoint = <span class="number">0</span>;</span><br><span class="line">    chartFlag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    chartFlag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (chartFlag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//e.x代表的是当前点</span></span><br><span class="line">        <span class="keyword">if</span> (chartBeforePoint != <span class="number">0</span> &amp;&amp; e.X - chartBeforePoint &gt; <span class="number">0</span>)<span class="comment">//往右移动了</span></span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position += <span class="number">1</span>; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (chartBeforePoint != <span class="number">0</span> &amp;&amp; e.X - chartBeforePoint &lt; <span class="number">0</span>)<span class="comment">//往左移动了</span></span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position -= <span class="number">1</span>;</span><br><span class="line">        chartBeforePoint = e.X;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="平移使用二"><a href="#平移使用二" class="headerlink" title="平移使用二"></a>平移使用二</h2><blockquote><p>初始化有关参数</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义两个全局变量</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">bool</span> isMouseDown = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> lastMove = <span class="number">0</span>; <span class="comment">// 用于记录鼠标上次移动的点，用于判断是左移还是右移</span></span><br><span class="line"><span class="comment">// 初始化ScaleView，可根据首次出现在chart中的数据点数修改合适的值</span></span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Size = <span class="number">5</span>;</span><br><span class="line"><span class="comment">// 设置不显示chart自带的滚动条</span></span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisX.ScrollBar.Enabled = <span class="literal">false</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].AxisY.ScrollBar.Enabled = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// 注意不要开启X轴游标，默认不开启，如下设置false或者不设置下列参数</span></span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserEnabled = <span class="literal">false</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.AutoScroll = <span class="literal">false</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserSelectionEnabled = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><blockquote><p>添加鼠标按下、弹起和移动事件</p></blockquote><ul><li>上述事件在chart控件中均自带，直接添加即可，事件代码如下：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 鼠标按下事件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseDown</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">lastMove  = <span class="number">0</span>;</span><br><span class="line">    isMouseDown = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 鼠标弹起事件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseUp</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    isMouseDown = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 鼠标移动事件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isMouseDown)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// 可更改（交换）如下加减1或if条件来设置鼠标移动时曲线移动方向</span></span><br><span class="line">        <span class="keyword">if</span>(lastMove != <span class="number">0</span> &amp;&amp; e.X - lastMove &gt; <span class="number">0</span>)</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position += <span class="number">1</span>;  <span class="comment">// 每次移动1</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(lastMove != <span class="number">0</span> &amp;&amp; e.X - lastMove &lt; <span class="number">0</span>)</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.Position -= <span class="number">1</span>; <span class="comment">// 每次移动1</span></span><br><span class="line">        lastMove = e.X;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终效果如下，图片前面黑呼呼的为控制台输出，似乎有点看不清（可忽略），可观察到鼠标滚轮的变化。</p><img src="https://img.jbzj.com/file_images/article/202206/202206280925299.gif"><h1 id="拓展chart（如何简单使用Chart图表）"><a href="#拓展chart（如何简单使用Chart图表）" class="headerlink" title="拓展chart（如何简单使用Chart图表）"></a>拓展chart（如何简单使用Chart图表）</h1><p>Chart控件可以用来绘制波形图、柱状图、饼图、折线图等，用来进行数据表现是很不错的，现在简单说一下这个控件的使用方法</p><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><img src="https://img.jbzj.com/file_images/article/202206/2022062809292610.png"><blockquote><p>我们首先要加载Chart控件</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292611.png"><blockquote><p>然后打开控件的属性窗口</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292612.jpg"><img src="https://img.jbzj.com/file_images/article/202206/2022062809292613.png"><p>在这个窗口里面我们可以修改曲线的名称，名称在<strong>【数据》Name】</strong>里面修改</p><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><blockquote><p>XValueType是X轴的数据类型，Y同理，这里我们选Time，可以随时间改变</p></blockquote><h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><blockquote><p>ChartType是图表的类型，我们可以选出我们想要用的类型，这里选曲线</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292614.png"><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><p>Color可以选择曲线的颜色，这里我选了红色</p><p>左边的成员 框，是我们要显示的曲线，可以添加多个</p><p><strong>其他属性如果有需要自行修改，修改好之后确定，回到窗口设计界面</strong></p><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><blockquote><p>在工具箱添加Timer</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292615.png"><blockquote><p>在Timer的事件窗口双击时钟事件</p></blockquote><img src="https://img.jbzj.com/file_images/article/202206/2022062809292616.png"><p><strong>代码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            timer1.Enabled = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.AddY(cnt*cnt);</span><br><span class="line">            label1.Text = cnt.ToString();</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>cnt是个自变量，曲线显示的是cnt为底的2次指数曲线</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/GoldenLionKing/article/details/125404813">C#Chart使用鼠标滚轮放大，缩小，平移曲线</a></li><li><a href="https://www.jb51.net/article/253223.htm">C# Chart折线图使用鼠标滚轮放大、缩小和平移曲线方式</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">在 Chart 使用鼠标滚轮滚动放大和缩小X轴的宽度，鼠标左键按住拖动实现曲线的左右平移，不再使用滚动条。</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#控件DataGridView之一（使用各种数据源填充表格）</title>
    <link href="https://zml3589110.github.io/posts/3132353851.html"/>
    <id>https://zml3589110.github.io/posts/3132353851.html</id>
    <published>2023-02-09T09:02:20.000Z</published>
    <updated>2023-02-10T01:37:56.533Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>C#中的表格控件只有一个，那就是datagridview，不像QT中可以用QTableview，QTableWidget。新手拿到datagridview的第一个问题就是数据从哪里来？难道从设计器中一个个手动输入，到时候要变怎办？所以，我们这里说说DataGridView的手动操作。</p></blockquote><h1 id="一、手动操作DataGridView"><a href="#一、手动操作DataGridView" class="headerlink" title="一、手动操作DataGridView"></a>一、手动操作DataGridView</h1><p><strong>这里我们是没有数据源的纯view控件的操作，后面第二部分我们再讲有数据源的操作。</strong></p><h2 id="1、初步尝试"><a href="#1、初步尝试" class="headerlink" title="1、初步尝试"></a>1、初步尝试</h2><p>下面的代码声明并初始化完成列DataGridViewColumn、行DataGridViewRow 、单元格DataGridViewCell 对象。<br>但这里需要注意的是，<strong>DataGridView必须先有列后有行，最后才是单元格cell</strong>，初始化完成后你就可以直接将他们加入DataGridView的实例中了，如下代码dataGridView1就是在设计器的工具箱中直接拖放到窗体中的DataGridView控件。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DataGridViewColumn col = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">DataGridViewRow row = <span class="keyword">new</span> DataGridViewRow();</span><br><span class="line">DataGridViewCell cell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">cell.Value = <span class="string">&quot;item&quot;</span>;</span><br><span class="line">col.CellTemplate = cell; <span class="comment">//设置单元格格式模板</span></span><br><span class="line">col.HeaderText = <span class="string">&quot;column01&quot;</span>;</span><br><span class="line">dataGridView1.Columns.Add(col);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>效果：</strong></p><img src="https://img-blog.csdnimg.cn/337ed5f6ffd24463812ba978f7350c85.png"><blockquote><p>虽然，只有一行一列一个单元格，但如果我们搞懂了原理，那后面批量加入我们需要的行列和单元格就容易了。</p></blockquote><p><strong>这里了重点强调一下，加入的顺序应该是：</strong></p><p>1、初始化列<br>2、初始化行<br>3、初始化单元格<br>4、将列column加入DataGridView<br>5、将行row加入列DataGridView<br>6、将单元格cell加入行row</p><p><strong>注意，一个列必须设定它自己这一列的单元格格式母板，否则就会报错。如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cell= <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line"> col.CellTemplate = cell;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、批量加入"><a href="#2、批量加入" class="headerlink" title="2、批量加入"></a>2、批量加入</h2><p>批量加入无非就是加入了一些循环，过程和单个单元格的加入几乎没有差别。<br>需要注意的是<strong>每次加入的行或者列或者单元格都必须是一个新对象，也就是要new一个新的对象</strong>，否则就不能成功加入。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DataGridViewColumn col;</span><br><span class="line">DataGridViewRow row;</span><br><span class="line">DataGridViewCell cell= <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">        </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    col = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    col.HeaderText = <span class="string">&quot;col&quot;</span> + i.ToString();       </span><br><span class="line">    col.CellTemplate = cell;</span><br><span class="line">    dataGridView1.Columns.Add(col);</span><br><span class="line">    &#125;</span><br><span class="line">           </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;<span class="number">20</span>; i++)</span><br><span class="line"> &#123;</span><br><span class="line">     row = <span class="keyword">new</span> DataGridViewRow(); </span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">     &#123;</span><br><span class="line">        cell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">        cell.Value = <span class="string">&quot;item&quot;</span> + i.ToString() + j.ToString();</span><br><span class="line">        row.Cells.Add(cell);</span><br><span class="line">     &#125;</span><br><span class="line">     dataGridView1.Rows.Add(row);</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行的效果如下：</strong></p><img src="https://img-blog.csdnimg.cn/2965eed76ab949bca3c5df56497842e9.png"><blockquote><p>这里，我们将加入行和加入单元格同时进行的，你也可以加入行和加入列完成后，单独对单元格进行赋值</p></blockquote><p><strong>代码如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line"> &#123;</span><br><span class="line">     row = <span class="keyword">new</span> DataGridViewRow();</span><br><span class="line">     <span class="comment">//for (int j = 0; j &lt; 6; j++)</span></span><br><span class="line">     <span class="comment">//&#123;</span></span><br><span class="line">     <span class="comment">//    cell = new DataGridViewTextBoxCell();</span></span><br><span class="line">     <span class="comment">//    cell.Value = &quot;item&quot; + i.ToString() + j.ToString();</span></span><br><span class="line">     <span class="comment">//    row.Cells.Add(cell);</span></span><br><span class="line">     <span class="comment">//&#125;</span></span><br><span class="line">     dataGridView1.Rows.Add(row);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">20</span>; j++)</span><br><span class="line">         dataGridView1.Rows[j].Cells[i].Value = <span class="string">&quot;item&quot;</span> + j.ToString() + i.ToString();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、带数据的行的加入rows-Add"><a href="#3、带数据的行的加入rows-Add" class="headerlink" title="3、带数据的行的加入rows.Add"></a>3、带数据的行的加入rows.Add</h2><p>行的加入我们利用add方法来完成,它有三个重载，所以我们可以用多种方式加入，前面我们就已经使用过了它的最常见的重载，直接在add的参数中加入row<br>如：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.Rows.Add(row);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这里我们使用数组加入也很方便：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//添加行</span></span><br><span class="line"> <span class="built_in">string</span>[] row0 = &#123; <span class="string">&quot;Jack&quot;</span>, <span class="string">&quot;1880&quot;</span>, <span class="string">&quot;2022-12-5&quot;</span>,<span class="string">&quot;12.5&quot;</span>,<span class="string">&quot;true&quot;</span> &#125;;</span><br><span class="line"> <span class="built_in">string</span>[] row1 = &#123; <span class="string">&quot;Smith&quot;</span>, <span class="string">&quot;2208&quot;</span>, <span class="string">&quot;2022-02-15&quot;</span>, <span class="string">&quot;538&quot;</span>, <span class="string">&quot;true&quot;</span> &#125;;</span><br><span class="line"> dataGridView1.Rows.Add(row0);</span><br><span class="line"> dataGridView1.Rows.Add(row1);</span><br><span class="line"> dataGridView1.Rows.Add(<span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;Tome&quot;</span>, <span class="string">&quot;1208&quot;</span>, <span class="string">&quot;2012-2-15&quot;</span>, <span class="string">&quot;1.2&quot;</span>, <span class="string">&quot;true&quot;</span> &#125;);</span><br><span class="line"> <span class="comment">//list转数组后加入</span></span><br><span class="line"> List&lt;<span class="built_in">string</span>&gt; values = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line"> values.Add(<span class="string">&quot;Jone&quot;</span>);</span><br><span class="line"> values.Add(<span class="string">&quot;1222&quot;</span>);      </span><br><span class="line"> values.Add(<span class="string">&quot;2022-05-12&quot;</span>);</span><br><span class="line"> values.Add(<span class="string">&quot;23.2&quot;</span>);</span><br><span class="line"> values.Add(<span class="string">&quot;false&quot;</span>);</span><br><span class="line"> dataGridView1.Rows.Add(values.ToArray());</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/c494a8f1f3ce4a38b4b39283fc0e35c0.png"><blockquote><p>还有一个重载是add(int )，这个专门从来加入空行，比如加入1000个空行，那就直接在参数中输入1000：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.Rows.Add(<span class="number">1000</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="二、数据来源DataSource"><a href="#二、数据来源DataSource" class="headerlink" title="二、数据来源DataSource"></a>二、数据来源DataSource</h1><p>数据来源可以是自己从数据库中获取，也可以自己构建一个DataTable，也可以读入字符流或者字符列表等。这里分别演示。<br><strong>DataSource它的特点是：任何实现IListSource接口的类都可以作为它的右值。</strong></p><h2 id="1、来自列表List"><a href="#1、来自列表List" class="headerlink" title="1、来自列表List"></a>1、来自列表List</h2><p>我们将列表中装入一个对象，当然，这个对象有多少特征，我们就可以显示在表格中显示多少列</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Student&gt; students = <span class="keyword">new</span> List&lt;Student&gt;()</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">new</span> Student() &#123;Name=<span class="string">&quot;John&quot;</span>, Gender=<span class="literal">true</span>, Birthday=<span class="keyword">new</span> DateTime(<span class="number">2012</span>, <span class="number">12</span>, <span class="number">4</span>),Age= <span class="number">20</span>, Hight=<span class="number">15</span>&#125;,</span><br><span class="line">     <span class="keyword">new</span> Student() &#123;Name=<span class="string">&quot;Jack&quot;</span>,  Gender=<span class="literal">true</span>, Birthday=<span class="keyword">new</span> DateTime(<span class="number">2022</span>, <span class="number">10</span>, <span class="number">12</span>), Age=<span class="number">10</span>, Hight=<span class="number">125</span>&#125;</span><br><span class="line"> &#125;;</span><br><span class="line"> dataGridView1.DataSource = students.Select(x =&gt; <span class="keyword">new</span> &#123; x.Name, x.Gender, x.Birthday, x.Age, x.Hight &#125;).ToList();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/c0f27acc07df4cbda3a912d49cfdbdfe.png"><h2 id="2、来自自定义DataTable"><a href="#2、来自自定义DataTable" class="headerlink" title="2、来自自定义DataTable"></a>2、来自自定义DataTable</h2><p>既然是我们手动自定义的一个表，那么我们就必须给它定义行列和单元格内容。这的Datatable只是提供数据，与视图View无关，那么它的责任就是组织好数据给视图来显示，这在MVC中就属于model层。<br>下面的代码我们初始化了一个DataTable对象后就可以利用columns.add增加列了，增加完列我们用DataTable的newRow（）方法直接增加行，没有它法。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col1&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col2&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col3&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col4&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col5&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">    dt.Columns.Add(<span class="string">&quot;col6&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dt.Rows.Add(dt.NewRow());</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">            dt.Rows[i][j]=<span class="string">&quot;item&quot;</span> + j.ToString() + i.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">dataGridView1.DataSource =dt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们上面所有的行，我们使用的格式都是String的，便于统一用循环添加，我们我们想要添加其他的格式的数据可以这样添加：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line"></span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col1&quot;</span>, <span class="keyword">typeof</span>(System.Int32));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col2&quot;</span>, <span class="keyword">typeof</span>(System.String));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col3&quot;</span>, <span class="keyword">typeof</span>(System.DateTime));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col4&quot;</span>, <span class="keyword">typeof</span>(System.Boolean));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col5&quot;</span>, <span class="keyword">typeof</span>(System.Int16));</span><br><span class="line">dt.Columns.Add(<span class="string">&quot;col6&quot;</span>, <span class="keyword">typeof</span>(System.Decimal));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于赋值，使用<strong>二维数组</strong>的方式直接给单元格赋值即可：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dt.Rows[i][j]=<span class="string">&quot;item&quot;</span> + j.ToString() + i.ToString();</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>最后，我们给DataGridView实例指定数据源DataSource 属性即可，这里我们指定为我们刚刚手动建立的DataTable。</p></blockquote><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/9e71c3ccb4cf4a34a6fed006856f2fe7.png"><p>看起来，和前面我们直接对DataGridView手动操作得到的表格没有什么两样，但实际我们此时已经使用了<strong>MVC</strong>的概念了，<strong>一个负责的是视图一个负责的是数据</strong>。</p><h2 id="3、动态建立表格"><a href="#3、动态建立表格" class="headerlink" title="3、动态建立表格"></a>3、动态建立表格</h2><ul><li>我们首先定义两个List分别存放表格的字段类型和值</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个表格的字段类型</span></span><br><span class="line">List&lt;<span class="built_in">string</span>&gt; typeDef = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.Int32&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.String&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.DateTime&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.Decimal&quot;</span>);</span><br><span class="line">typeDef.Add(<span class="string">&quot;System.Boolean&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//表格字段内容</span></span><br><span class="line">List&lt;<span class="built_in">string</span>&gt; values = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">values.Add(<span class="string">&quot;1222&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;Jone&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;2022-05-12&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;23.2&quot;</span>);</span><br><span class="line">values.Add(<span class="string">&quot;false&quot;</span>);</span><br><span class="line">dataGridView1.DataSource = initialDataTable(typeDef,values);</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>接下来，我们定义一个函数，专门来建立一个表格</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataTable <span class="title">initialDataTable</span>(<span class="params">List&lt;String&gt; strlist, List&lt;String&gt; vluelist</span>)</span></span><br><span class="line"><span class="function"></span>      &#123;</span><br><span class="line"></span><br><span class="line">          DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line"></span><br><span class="line">          DataColumn col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; strlist.Count; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">              col.DataType = System.Type.GetType(strlist[i]);</span><br><span class="line">              dt.Columns.Add(col);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">          &#123;</span><br><span class="line">              dt.Rows.Add(dt.NewRow());</span><br><span class="line">              <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; strlist.Count; j++)</span><br><span class="line">                  dt.Rows[i][j] = vluelist[j];</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> dt;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/bd3810e2830f46a79bc1b7fd9dae0355.png"><h2 id="4、类和BindingList"><a href="#4、类和BindingList" class="headerlink" title="4、类和BindingList"></a>4、类和BindingList</h2><p>类的特征属性直接显示在表格里可以通过BindingList来实现</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BindingList&lt;Student&gt; list2 = <span class="keyword">new</span> BindingList&lt;Student&gt;();</span><br><span class="line">list2.Add(<span class="keyword">new</span> Student(<span class="string">&quot;John&quot;</span>, <span class="literal">true</span>, <span class="keyword">new</span> DateTime(<span class="number">2012</span>, <span class="number">12</span>, <span class="number">4</span>), <span class="number">20</span>, <span class="number">15</span>));</span><br><span class="line">list2.Add(<span class="keyword">new</span> Student(<span class="string">&quot;Jack&quot;</span>, <span class="literal">true</span>, <span class="keyword">new</span> DateTime(<span class="number">2022</span>, <span class="number">10</span>, <span class="number">12</span>), <span class="number">10</span>, <span class="number">125</span>));</span><br><span class="line">list2.Add(<span class="keyword">new</span> Student(<span class="string">&quot;Tomy&quot;</span>, <span class="literal">true</span>, <span class="keyword">new</span> DateTime(<span class="number">1992</span>, <span class="number">3</span>, <span class="number">5</span>), <span class="number">30</span>, <span class="number">5</span>));</span><br><span class="line">dataGridView1.DataSource= list2;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/07f441c81666489ea131b094f28cf8f0.png"><h2 id="5、来自文件字符流"><a href="#5、来自文件字符流" class="headerlink" title="5、来自文件字符流"></a>5、来自文件字符流</h2><blockquote><p>有了上面的基础后，我们就可以建立一个导入文本文件的表格，并且可以自动识别文本文件中的字段类型。</p></blockquote><p><strong>我们首先来看看效果：</strong></p><img src="https://img-blog.csdnimg.cn/65cc89759bc442cb83eb30707ad9cc7c.gif#pic_center"><p>导入文本表格要做好文本字段之间的分割Split，这里不详说了，首先要从读入的文本流中取出表格的各列的名称和类型，然后再取出内容，然后分别形成数组</p><p><strong>关键代码：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">StreamReader sr = <span class="keyword">new</span> StreamReader(filepath, Encoding.UTF8);</span><br><span class="line">        typetext = sr.ReadLine();</span><br><span class="line">        headtext = sr.ReadLine();</span><br><span class="line">        <span class="built_in">string</span>[] typer = typetext.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        ArrayList content = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="comment">//开始读文本中的每条记录的内容</span></span><br><span class="line">        <span class="keyword">while</span> ((str=sr.ReadLine()) != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            content.Add(str);</span><br><span class="line">            Console.WriteLine(str); </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//定义一个表格的字段类型</span></span><br><span class="line">        List&lt;<span class="built_in">string</span>&gt; typeDef = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; typer.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            typeDef.Add(<span class="string">&quot;System.&quot;</span> + typer[i].ToString());</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//表格字段内容</span></span><br><span class="line">        ArrayList head = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        <span class="built_in">string</span>[] header = headtext.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; header.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            head.Add( header[i].ToString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将上述代码得到的三个列表传入下面的DataTable处理函数中即可得到DataGridView的DataSource需要的DataTable</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">DataTable <span class="title">initialDataTable</span>(<span class="params">List&lt;String&gt; typelist, ArrayList headerlist,ArrayList contentarry</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line"></span><br><span class="line">     DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">     DataColumn col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; headerlist.Count; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         col = <span class="keyword">new</span> DataColumn();</span><br><span class="line">         col.ColumnName = headerlist[i].ToString();</span><br><span class="line">         col.DataType = System.Type.GetType(typelist[i]);</span><br><span class="line">         dt.Columns.Add(col);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="comment">// 加入内容</span></span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; contentarry.Count; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         dt.Rows.Add(contentarry[i].ToString().Split(<span class="string">&#x27;,&#x27;</span>));               </span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> dt;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>可以参考的文本：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String,Boolean,Int32,DateTime,Int32,Int32</span><br><span class="line">Name,Gender,ID,Birthday,Score1,Score2</span><br><span class="line">John, <span class="literal">true</span>,<span class="number">1908</span>, <span class="number">2012</span><span class="number">-12</span><span class="number">-4</span>, <span class="number">20</span>, <span class="number">16</span></span><br><span class="line">Jack, false2015, <span class="number">2022</span><span class="number">-10</span><span class="number">-12</span>, <span class="number">10</span>, <span class="number">125</span></span><br><span class="line">Tomy, <span class="literal">true</span>, <span class="number">2047</span>,<span class="number">1992</span><span class="number">-3</span><span class="number">-5</span>, <span class="number">30</span>, <span class="number">15</span>,</span><br><span class="line">Mophy, <span class="literal">true</span>, <span class="number">1147</span>,<span class="number">2014</span><span class="number">-6</span><span class="number">-3</span>, <span class="number">40</span>, <span class="number">24</span></span><br><span class="line">Tollor, <span class="literal">false</span>,<span class="number">2347</span>,<span class="number">2102</span><span class="number">-2</span><span class="number">-15</span>, <span class="number">50</span>, <span class="number">55</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6、来自数据库"><a href="#6、来自数据库" class="headerlink" title="6、来自数据库"></a>6、来自数据库</h2><p>如果有数据库，那是最好不过的啦，直接将查询所得的表赋值给DataGridView的DataSource即可。<br>这里我们使用sqlite，事先要安装上sqlite，到Nuget中最快方式获得。</p><img sr="https://img-blog.csdnimg.cn/e3f1206fe8be43ac94beb10a0c556e13.png"><p>有了sqlite的环境，我们可以开始组织数据库读取了。这里我们调用的句子非常少，其实这是直接通过SQLiteDataAdapter 填充了一个新建的DataTable而已。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定数据库地址（我这里就放在debug目录下）</span></span><br><span class="line"><span class="built_in">string</span> constr = <span class="string">&quot;Data Source=tbdb.db;&quot;</span>;</span><br><span class="line"> <span class="comment">//设置SQL查询语句</span></span><br><span class="line"><span class="built_in">string</span> sql = <span class="string">&quot;select * from TestTab&quot;</span>;</span><br><span class="line">SQLiteDataAdapter mAdapter = <span class="keyword">new</span> SQLiteDataAdapter(sql, constr);</span><br><span class="line">DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">mAdapter.Fill(dt);</span><br><span class="line">dataGridView1.DataSource = dt;           </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>数据库中的表：</strong></p><img src="https://img-blog.csdnimg.cn/958629c401594f1eb86d70e111f0d952.png"><p><strong>运行效果：</strong></p><img src="https://img-blog.csdnimg.cn/4efdbc5056d34330a1a52ea222f400f2.png"><h2 id="7、用到的student类"><a href="#7、用到的student类" class="headerlink" title="7、用到的student类"></a>7、用到的student类</h2><p><strong>上面用到的student类，这里列出来省得大家重新编写：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Student</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> _name = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">bool</span> _gender =<span class="literal">false</span>;</span><br><span class="line">    DateTime _birthday;</span><br><span class="line">    <span class="built_in">int</span> _age;</span><br><span class="line">    <span class="built_in">decimal</span> _hight;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> School;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        School = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="title">Student</span>(<span class="params"><span class="built_in">string</span> name, <span class="built_in">bool</span> gender, DateTime birthday, <span class="built_in">int</span> age, <span class="built_in">decimal</span> hight</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Name = name;</span><br><span class="line">        Gender = gender;</span><br><span class="line">        Birthday = birthday;</span><br><span class="line">        Age = age;</span><br><span class="line">        Hight = hight;</span><br><span class="line">        School = <span class="string">&quot;&quot;</span>;     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name&#123;<span class="keyword">get</span> &#123; <span class="keyword">return</span> _name; &#125;<span class="keyword">set</span> &#123; _name = <span class="keyword">value</span>; &#125;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> Gender&#123;<span class="keyword">get</span> &#123; <span class="keyword">return</span> _gender; &#125; <span class="keyword">set</span> &#123; _gender = <span class="keyword">value</span>; &#125;&#125;</span><br><span class="line">    <span class="keyword">public</span> DateTime Birthday&#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> _birthday; &#125; <span class="keyword">set</span> &#123; _birthday = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Age &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> _age; &#125; <span class="keyword">set</span> &#123; _age = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">decimal</span> Hight &#123; <span class="keyword">get</span> &#123; <span class="keyword">return</span> _hight; &#125; <span class="keyword">set</span> &#123; _hight = <span class="keyword">value</span>; &#125; &#125;</span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">int</span>&gt; Scores &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>其实关于DataGridView的操作还有很多，控件中最复杂的就属它了，所以如果说你要重新编写一个自定义控件，它也是最复杂的，这里我们只是讲了表格的数据填充，后面一篇我们会讲到样式设置和编辑，有时间我们还可以讲讲自定义DataGridView的编写。感兴趣的童鞋可以继续关注。</p><h1 id="其他补充"><a href="#其他补充" class="headerlink" title="其他补充"></a>其他补充</h1><h2 id="datagridview默认选中第一行"><a href="#datagridview默认选中第一行" class="headerlink" title="datagridview默认选中第一行"></a>datagridview默认选中第一行</h2><p>设置datagridview在加载时默认选中第一行：<br>在需要为datagridview加载数据的地方添加代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.dataGridView1.Rows[<span class="number">0</span>].Selected = <span class="literal">true</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>例如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deplane_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">          </span><br><span class="line">           <span class="comment">// <span class="doctag">TODO:</span> 这行代码将数据加载到表“charge_sysDataSet.OnLine_Info”中。您可以根据需要移动或删除它。</span></span><br><span class="line">           <span class="keyword">this</span>.onLine_InfoTableAdapter.Fill(<span class="keyword">this</span>.charge_sysDataSet.OnLine_Info);</span><br><span class="line">           dataGridView1.AllowUserToAddRows = <span class="literal">false</span>;  <span class="comment">//去除空白行</span></span><br><span class="line">         dataGridView1.Rows[<span class="number">0</span>].Selected = <span class="literal">true</span>;<span class="comment">//默认选中第一行</span></span><br><span class="line">       &#125;在这里插入代码片</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C-向datagridview添加一行，并使他位于第一行"><a href="#C-向datagridview添加一行，并使他位于第一行" class="headerlink" title="C# 向datagridview添加一行，并使他位于第一行"></a>C# 向datagridview添加一行，并使他位于第一行</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datagridview.Rows.Insert(<span class="number">0</span>, row);</span><br></pre></td></tr></table></figure><h2 id="点击DataGridView时获取当前单元格信息-这个也很有用！"><a href="#点击DataGridView时获取当前单元格信息-这个也很有用！" class="headerlink" title="点击DataGridView时获取当前单元格信息(这个也很有用！)"></a>点击DataGridView时获取当前单元格信息(这个也很有用！)</h2><blockquote><p>在使用DataGridView控件时， 表中信息有时需要提取，因此，需使用获取坐标的方法，和获取内容的方法。</p></blockquote><img src="https://img-blog.csdnimg.cn/20eb88032eb145499a876252c28777c1.bmp"><img src="https://img-blog.csdnimg.cn/fd1b2809a6b346c3a9d674914cc526d2.bmp"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Test_DataGridView</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            dataGridView1.DataSource = Source();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//数据表资源</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> DataTable <span class="title">Source</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DataTable mydt = <span class="keyword">new</span> DataTable();</span><br><span class="line">            mydt.Columns.Add(<span class="string">&quot;姓名&quot;</span>);</span><br><span class="line">            mydt.Columns.Add(<span class="string">&quot;年龄&quot;</span>);</span><br><span class="line">            mydt.Columns.Add(<span class="string">&quot;分数&quot;</span>);</span><br><span class="line">            String[,] str = <span class="keyword">new</span> String[,] &#123; &#123; <span class="string">&quot;张三&quot;</span>, <span class="string">&quot;21&quot;</span>, <span class="string">&quot;90&quot;</span> &#125;, &#123; <span class="string">&quot;李四&quot;</span>, <span class="string">&quot;22&quot;</span>, <span class="string">&quot;93&quot;</span> &#125;, &#123; <span class="string">&quot;王五&quot;</span>, <span class="string">&quot;23&quot;</span>, <span class="string">&quot;99&quot;</span> &#125; &#125;;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                DataRow dr = mydt.NewRow();</span><br><span class="line">                dr[<span class="number">0</span>] = str[i, <span class="number">0</span>];</span><br><span class="line">                dr[<span class="number">1</span>] = str[i, <span class="number">1</span>];</span><br><span class="line">                dr[<span class="number">2</span>] = str[i, <span class="number">2</span>];</span><br><span class="line">                mydt.Rows.Add(dr);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> mydt;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取单元格信息</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dataGridView1_CellClick</span>(<span class="params"><span class="built_in">object</span> sender, DataGridViewCellEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//获取单元格坐标</span></span><br><span class="line">            <span class="built_in">int</span> col = dataGridView1.CurrentCellAddress.X + <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">int</span> row = dataGridView1.CurrentCellAddress.Y + <span class="number">1</span>;</span><br><span class="line">           </span><br><span class="line">            <span class="comment">//获取单元格内容</span></span><br><span class="line">            String content = dataGridView1.CurrentCell.Value.ToString();</span><br><span class="line"> </span><br><span class="line">            MessageBox.Show(<span class="string">&quot;行：&quot;</span> + row.ToString() + <span class="string">&quot;   列：&quot;</span> + col.ToString()+<span class="string">&quot;      内容：&quot;</span>+content);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在C-中将datagridview中的数据与图表绑定"><a href="#在C-中将datagridview中的数据与图表绑定" class="headerlink" title="在C#中将datagridview中的数据与图表绑定"></a>在C#中将datagridview中的数据与图表绑定</h2><p>我正在创建一个应用程序，它用于确定原始数据，并将这些原始数据值导入到datagridview中。<br>现在，我需要在图形表示中生成原始数据值。我有一个有多列的datgridview，我想用c#中的datagridview列值绘制图形&#x2F;图表。</p><p><strong>通过DataGridview对图表使用以下代码（未验证过，不知是否行）</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (DataGridViewRow row <span class="keyword">in</span> datagridview.Rows)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//chartBpComplaince.Series.Clear();</span></span><br><span class="line">                Series S = chartBpComplaince.Series.Add(row.Cells[<span class="number">2</span>].Value.ToString());</span><br><span class="line"></span><br><span class="line">                 S.Points.AddXY(row.Cells[<span class="number">4</span>].Value.ToString(), row.Cells[<span class="number">3</span>].Value.ToString());</span><br><span class="line">                 S.ChartType = SeriesChartType.Column;</span><br><span class="line">                 S.IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/haigear/article/details/128764698">C#手动操作DataGridView之——使用各种数据源填充表格实例</a></li><li><a href="https://blog.csdn.net/weixin_40486955/article/details/98071962">datagridview默认选中第一行方法</a></li><li><a href="https://blog.csdn.net/NickStudent/article/details/126142078">【C#语言】DataGridView获取当前单元格信息</a></li><li><a href="https://cloud.tencent.com/developer/ask/sof/100540628">如何在C#中将datagridview中的数据与图表绑定？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 对表格控件 DataGridView 中数据填充的不同种方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/tags/DataGridView/"/>
    
    <category term="表格" scheme="https://zml3589110.github.io/tags/%E8%A1%A8%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>C#二维数组</title>
    <link href="https://zml3589110.github.io/posts/1818812067.html"/>
    <id>https://zml3589110.github.io/posts/1818812067.html</id>
    <published>2023-02-09T08:39:20.000Z</published>
    <updated>2023-02-10T01:37:56.509Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在这篇文章中，我将会用示例讨论二维数组。做为文章的部分内容，我们会讨论：</p></blockquote><ol><li>什么是二维数组？</li><li>以示例解析矩形数组和交错数组。</li></ol><h1 id="什么是二维数组？"><a href="#什么是二维数组？" class="headerlink" title="什么是二维数组？"></a>什么是二维数组？</h1><p><strong>在C#中，以行和列的形式存储元素的数组称为二维数组。C#中，二维数组也叫多维数组，有两种类型。</strong></p><ol><li>矩形数组：行和列相等的数组叫做矩形数组。</li><li>行和列不相等的数组称为交错数组。</li></ol><h1 id="C-中的矩形数组"><a href="#C-中的矩形数组" class="headerlink" title="C#中的矩形数组"></a>C#中的矩形数组</h1><p><strong>让我们了解一下二维数组的语法，请看一下下面的图表</strong></p><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220710211342115-1542360066.png"><blockquote><p>让我们用示例来更好地理解一下矩形数组</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace _2DarrayDemo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span>[,] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arr)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)  <span class="comment">//0指的是一维</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)<span class="comment">//1指的是二维</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a += <span class="number">5</span>;</span><br><span class="line">                    arr[i, j] = a;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;i is &#123;0&#125;;j is &#123;1&#125;&quot;</span>,i,j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i,j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220711222856023-128846710.png"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace _2DarrayDemo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span>[,] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arr)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)  <span class="comment">//0指的是一维</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">2</span>); j++)<span class="comment">//如果将1修改为2，则会报错；</span></span><br><span class="line">                &#123;</span><br><span class="line">                    a += <span class="number">5</span>;</span><br><span class="line">                    arr[i, j] = a;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;i is &#123;0&#125;;j is &#123;1&#125;&quot;</span>,i,j);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i,j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220711223410656-1367845040.png"><p><strong>系统会提示“索引超出了数组界限”。</strong></p><blockquote><p><strong>在上面 的示例中，我们使用嵌套的for循环来分配二维数组元素。我们也可以在二维数组声明的时候给其赋值。</strong></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">TwoDimensionalArayDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//Assigning the array elements at the time of declaration</span></span><br><span class="line">            <span class="built_in">int</span>[,] arr = &#123;&#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>&#125;,</span><br><span class="line">                          &#123;<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>&#125;,</span><br><span class="line">                          &#123;<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>,<span class="number">34</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//printing values of array using for each loop</span></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> i <span class="keyword">in</span> arr)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.Write(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//printing the values of array using nested for loop</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr.GetLength(<span class="number">1</span>); j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i, j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220711224311321-133638715.png"><h1 id="交错数组"><a href="#交错数组" class="headerlink" title="交错数组"></a>交错数组</h1><blockquote><p>这些也是二维数组，也将以行和列的形式存储数据。但是在这个交错的数组中，每一行的列大小是不同的。那就意味着如果第一行包含5列，第二行可能包含4列，而第三行可能包含10列。所以，你需要记住的一点就是，如果列的大小在每行发生变化，那么它就是一个交错数组。如果所有行中，列的大小保持不变，则它是一个矩形二维数组。</p></blockquote><p>在C#中，交错数组也叫做数组中的数组。这是因为在交错数组的情况下，每一行都是一维数组。因此，在C#中，具有不同列大小的多个一维数组组合形成了一个交错数组。</p><p>语法:  <type> [][] <name> &#x3D; new <type> [rows][];</type></name></type></p><p><strong>示例：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> [][] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>][];</span><br><span class="line"><span class="comment">//Or</span></span><br><span class="line"><span class="built_in">int</span> [][] arr = &#123;list of values&#125;;</span><br></pre></td></tr></table></figure><p>要在C#中声明交错数组，只需在声明时指定数组中所需要的行数即可。</p><p>示例如下：</p><p><strong>int [][] arr &#x3D; new int[4][];</strong></p><p><strong>在上面的数组声明中，我们指定在数组中需要4行。一旦你指定了你想要的数组的行数，那么你需要如下面所示那样用一维数组初始化每一行的列。</strong></p><p><strong>arr[0] &#x3D; new int[5]; &#x2F;&#x2F; we want five columns in the first row</strong><br><strong>arr[1] &#x3D; new int[6]; &#x2F;&#x2F; we want six columns in the first row</strong><br><strong>arr[2] &#x3D; new int[4]; &#x2F;&#x2F; we want four columns in the first row</strong><br><strong>arr[3] &#x3D; new int[5]; &#x2F;&#x2F; we want five columns in the first row</strong></p><p><strong>交错数组示例如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">TwoDimensionalArayDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span>[][] arr = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>][];</span><br><span class="line"></span><br><span class="line">            arr[<span class="number">0</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line">            arr[<span class="number">1</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">6</span>];</span><br><span class="line">            arr[<span class="number">2</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>];</span><br><span class="line">            arr[<span class="number">3</span>] = <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;此处j值是&#123;0&#125;&quot;</span>,j);</span><br><span class="line">                    arr[i][j] = j++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">int</span> x <span class="keyword">in</span> arr[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(x + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220714214431296-1013238939.png"><ul><li>在上面的例子中，我们通过使用嵌套的for循环来给交错数组的元素赋值。在交错数组定义的时候，也可以给交错数组赋值。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">TwoDimensionalArayDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// Assigning the values of the jagged array</span></span><br><span class="line">            <span class="comment">// at the time of its declaration</span></span><br><span class="line">            <span class="built_in">int</span>[][] arr = &#123;</span><br><span class="line">                            <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">4</span>]&#123;<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>&#125;,</span><br><span class="line">                            <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">5</span>]&#123;<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>&#125;,</span><br><span class="line">                            <span class="keyword">new</span> <span class="built_in">int</span>[<span class="number">3</span>]&#123;<span class="number">31</span>,<span class="number">32</span>,<span class="number">33</span>&#125;</span><br><span class="line">                           &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//printing the values of jagged array by using nested for loop</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; arr[i].Length; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.WriteLine();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//print the values of jagged array by using foreach loop within for loop</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; arr.GetLength(<span class="number">0</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="built_in">int</span> x <span class="keyword">in</span> arr[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.Write(x + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1005952/202207/1005952-20220714215330744-1423859804.png"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/chenlight/p/16464106.html">C# 二维数组（2d Array）解析</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#使用二维数组</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="数据结构" scheme="https://zml3589110.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="数组" scheme="https://zml3589110.github.io/categories/%E6%95%B0%E7%BB%84/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="数据结构" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="数组" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
    <category term="二维数组" scheme="https://zml3589110.github.io/tags/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
</feed>
