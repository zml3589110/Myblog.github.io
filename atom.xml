<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2022-05-18T08:52:19.459Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VUE常用命令(一)之v-if</title>
    <link href="https://zml3589110.github.io/posts/289735847.html"/>
    <id>https://zml3589110.github.io/posts/289735847.html</id>
    <published>2022-05-18T08:24:20.000Z</published>
    <updated>2022-05-18T08:52:19.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="v-if指令作用"><a href="#v-if指令作用" class="headerlink" title="v-if指令作用"></a>v-if指令作用</h1><p><strong>根据表达式的真假切换元素的显示状态</strong></p><ol><li>本质是通过操纵dom元素来切换显示状态</li><li>表达式的值为true,元素存在于dom树中，为false,从dom树中移除</li><li>频繁的切换使用v-show,反之使用v-if,前者的切换消耗小<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;切换状态&quot; @click&#x3D;&quot;changeShow&quot;&gt;</span><br><span class="line">&lt;h1 v-show&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h2 v-if&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h3 v-if&#x3D;&quot;temperature&gt;&#x3D;35&quot;&gt;热死了&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"> var app&#x3D;new Vue(&#123;</span><br><span class="line"> el:&quot;#app&quot;,</span><br><span class="line"> data:&#123;</span><br><span class="line"> isshow:false,</span><br><span class="line"> temperature:40</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line"> changeShow:function()&#123;</span><br><span class="line"> this.isshow&#x3D;!this.isshow;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>点击“切换状态”之后：<img src="https://img-blog.csdnimg.cn/20200803101013231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4ODM1MTQw,size_16,color_FFFFFF,t_70"></li></ol><h1 id="v-if常见使用方法详解"><a href="#v-if常见使用方法详解" class="headerlink" title="v-if常见使用方法详解"></a>v-if常见使用方法详解</h1><p>v-if一般有两个场景：<br>1- 多个元素 通过条件判断展示或者隐藏某个元素。或者多个元素<br>2- 进行两个视图之间的切换<br>Vue官方的简单实例:</p><ol><li>实现了 type等于不同值，A，B，C 三个元素的展示情况</li><li>实现了点击按钮两个视图的切换<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line"> &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line"> &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line"> &lt;title&gt;Vue中v-if的常见使用&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.5.17-beta.0&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F;创建一个vue实例</span><br><span class="line"> var app &#x3D; new Vue(&#123;</span><br><span class="line"> el: &#39;#app&#39;,</span><br><span class="line"> data: &#123;</span><br><span class="line">  type:&#39;C&#39;,</span><br><span class="line">  loginType:&#39;username&#39;</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line">  changeloginType()&#123;</span><br><span class="line">  let self &#x3D; this;</span><br><span class="line">  if(self.loginType&#x3D;&#x3D;&#39;username&#39;)&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;&#39;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;username&#39;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:red&quot;&gt;v-if的简单实用&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template&gt;</span><br><span class="line">  &lt;div v-if&#x3D;&quot;type &#x3D;&#x3D; &#39;A&#39;&quot;&gt;</span><br><span class="line">  A</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else-if&#x3D;&quot;type&#x3D;&#x3D;&#39;B&#39;&quot;&gt;</span><br><span class="line">  B</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else&gt;</span><br><span class="line">  C</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:green&quot;&gt;v-if的弹框切换&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template v-if&#x3D;&quot;loginType &#x3D;&#x3D;&#x3D; &#39;username&#39;&quot;&gt;</span><br><span class="line">  &lt;label&gt;用户名：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your username&quot; key&#x3D;&quot;username-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;template v-else&gt;</span><br><span class="line">  &lt;label&gt;密码：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your email address&quot; key&#x3D;&quot;email-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;button @click&#x3D;&quot;changeloginType&quot;&gt;切换状态&lt;&#x2F;button&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>效果图:<img src="https://img.jbzj.com/file_images/article/201809/20180928154104.jpg"><img src="https://img.jbzj.com/file_images/article/201809/20180928154117.jpg"></li></ol><h1 id="通过-v-if-来判断数组是否为空"><a href="#通过-v-if-来判断数组是否为空" class="headerlink" title="通过 v-if 来判断数组是否为空"></a>通过 v-if 来判断数组是否为空</h1><blockquote><p><strong>此方法已经在处理PHP回传 JSON 数据时，对键名解析使用成功</strong></p></blockquote><p>语法为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为空：array &#x3D;&#x3D; undefined ||array &#x3D;&#x3D; null || array.length &lt;&#x3D; 0     (顺序不能调换)</span><br><span class="line">不为空： array !&#x3D;&#x3D;undefined &amp;&amp; array !&#x3D; null  &amp;&amp; array.length &gt; 0   (顺序不能调换)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul v-if&#x3D;&quot;commentList &#x3D;&#x3D; undefined ||commentList &#x3D;&#x3D; null || commentList.length &lt;&#x3D; 0 &quot; &gt;</span><br><span class="line">暂无评论！</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul v-if&#x3D;&quot;commentList !&#x3D; undefined &amp;&amp; commentList !&#x3D; null &amp;&amp; commentList.length &gt; 0 &quot; &gt;</span><br><span class="line">&lt;li class&#x3D;&quot;list-group-item&quot;  v-for&#x3D;&quot;(item,index) in commentList&quot;  &gt;</span><br><span class="line">&lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">&#123;&#123; item.username &#125;&#125; 说：</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;content&quot; &gt;</span><br><span class="line">&#123;&#123; item.content &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_38835140/article/details/107757104">v-if指令</a></li><li><a href="https://www.jb51.net/article/148174.htm">对vue中v-if的常见使用方法详解</a></li><li><a href="https://blog.csdn.net/xiaojin21cen/article/details/118605410">VUE 模板 v-if 判断 数组是否为空</a></li></ol>]]></content>
    
    
    <summary type="html">VUE命令的 v-if 常用方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="v-if" scheme="https://zml3589110.github.io/tags/v-if/"/>
    
  </entry>
  
  <entry>
    <title>VUE获取JSON数据键名</title>
    <link href="https://zml3589110.github.io/posts/30846541.html"/>
    <id>https://zml3589110.github.io/posts/30846541.html</id>
    <published>2022-05-18T07:04:20.000Z</published>
    <updated>2022-05-18T08:52:19.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从PHP传过来的JSON数据结构"><a href="#从PHP传过来的JSON数据结构" class="headerlink" title="从PHP传过来的JSON数据结构"></a>从PHP传过来的JSON数据结构</h1><p>VUE接收到的数据如下，此时想要得到键名 <strong>“password”</strong> 和 <strong>“zhaoyichen”</strong> 以及 <strong>“liangzai”</strong> 用来做表格的列名。</p><blockquote><p>网上找很多都没找到合适</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;111&quot;,</span><br><span class="line">zhaoyichen: &quot;333&quot;,</span><br><span class="line">liangzai: &quot;22&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;55&quot;,</span><br><span class="line">zhaoyichen: &quot;66&quot;,</span><br><span class="line">liangzai: &quot;33&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;888&quot;,</span><br><span class="line">zhaoyichen: &quot;3443&quot;,</span><br><span class="line">liangzai: &quot;9088&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;8889&quot;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">password: &quot;999&quot;,</span><br><span class="line">zhaoyichen: &quot;this.ip&quot;,</span><br><span class="line">liangzai: &quot;66677&quot;</span><br><span class="line">&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>正常直接 console.log 出来的是里面的数组值</p></blockquote><h1 id="使用-Object-keys-将键值提取出来"><a href="#使用-Object-keys-将键值提取出来" class="headerlink" title="使用 Object.keys 将键值提取出来"></a>使用 Object.keys 将键值提取出来</h1><p>假如改 JSON 数据名为 sites，则 使用 Object.keys(this.sites[0]) 即可读出所有键名</p><blockquote><p>需单独某一个键名，则增加标号即可  Object.keys(this.sites[0])[0]</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.keys(<span class="built_in">this</span>.sites[<span class="number">0</span>]));</span><br></pre></td></tr></table></figure><blockquote><p><strong>也可以在HTML中显示</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> </span><br><span class="line">&#123;&#123;Object.keys(this.sites[0])[0]&#125;&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/142380.htm">Vue 获取数组键名的方法</a></li></ol>]]></content>
    
    
    <summary type="html">VUE解析从PHP传过来的JSON数据键名</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="JSON" scheme="https://zml3589110.github.io/tags/JSON/"/>
    
    <category term="键值" scheme="https://zml3589110.github.io/tags/%E9%94%AE%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>php连接mysql数据库</title>
    <link href="https://zml3589110.github.io/posts/3217038819.html"/>
    <id>https://zml3589110.github.io/posts/3217038819.html</id>
    <published>2022-05-17T09:18:20.000Z</published>
    <updated>2022-05-18T08:52:19.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="按照-apache-php安装相关-进行安装"><a href="#按照-apache-php安装相关-进行安装" class="headerlink" title="按照[apache php安装相关]进行安装"></a>按照[apache php安装相关]进行安装</h1><p>安装好 apache 和 PHP之后再对 mysql 进行连接读取，确定PHP是否弄好的标志是可以在设定文档下运行 php 文件。<br><a href="http://localhost/myBlog/axios.php">运行本地服务器测试</a><br>刚开始按照网上连接时总报错，总提示找不到 mysqli 插件</p><blockquote><p>Class “mysqli” not found in</p></blockquote><h1 id="解决问题并连接MySql数据库"><a href="#解决问题并连接MySql数据库" class="headerlink" title="解决问题并连接MySql数据库"></a>解决问题并连接MySql数据库</h1><p>根据官网提供的方法<a href="https://www.php.net/manual/zh/mysqli.installation.php">安装配置MySql</a><br>不过因为使用的版本是 PHP8 ，因此不用大改，实际上只需要在 php.ini 文件上打开 extension&#x3D;mysqli 即可！</p><blockquote><p><strong>注意:修改完之后需要重新启动 apache 服务，要不然没作用！！总以为没修改对</strong></p></blockquote><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop Apache2.<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> Apache2.<span class="number">4</span></span><br></pre></td></tr></table></figure><h1 id="设置-MySql-连接数据"><a href="#设置-MySql-连接数据" class="headerlink" title="设置 MySql 连接数据"></a>设置 MySql 连接数据</h1><blockquote><p>设置对应的地址和账号密码即可连接:</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$mysqli</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;密码&quot;</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;SELECT * FROM tb_user&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$mysqli</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc(); <span class="comment">// 从结果集中取得一行作为关联数组</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$row</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* free result set */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span>-&gt;free();</span><br><span class="line">    <span class="comment">/* close connection */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$mysqli</span>-&gt;close();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">php连接mysql数据库并读出相应数据</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="PHP" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/PHP/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/categories/mysql/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="apache" scheme="https://zml3589110.github.io/tags/apache/"/>
    
    <category term="php" scheme="https://zml3589110.github.io/tags/php/"/>
    
    <category term="数据库" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>apache php 安装相关</title>
    <link href="https://zml3589110.github.io/posts/3845172909.html"/>
    <id>https://zml3589110.github.io/posts/3845172909.html</id>
    <published>2022-05-17T02:23:20.000Z</published>
    <updated>2022-05-17T03:29:37.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装-Apache"><a href="#安装-Apache" class="headerlink" title="安装 Apache"></a>安装 Apache</h1><p><strong>注：本文从[Apache的安装教程]直接复制以便查看，如有侵权请联系删除</strong><br>1、<a href="https://www.apachehaus.com/cgi-bin/download.plx">下载Apache</a><br>点击图中红圈的版本下载：<br><img src="https://img-blog.csdnimg.cn/20190519215843978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><p>下载后，解压文件，把如图这两个文件拿出来放到你的Apache目录下<br><img src="https://img-blog.csdnimg.cn/20190519220058367.png"><br>例如：我的放到D盘,如图:<br><img src="https://img-blog.csdnimg.cn/20190519220202943.png"></p><p>2、修改 httpd.conf 文件<br>在文件夹中查找conf文件夹下边的httpd.conf文件，修改文件为自己的路径(写你自己的路径)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># same ServerRoot for multiple httpd daemons, you will need to change at</span></span><br><span class="line"><span class="comment"># least PidFile.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line">Define SRVROOT &quot;D:/Program Files/Apache/Apache24&quot;</span><br><span class="line">ServerRoot &quot;$&#123;SRVROOT&#125;&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><strong>注：还是在此文件中下边，有一个端口号配置：Listen 80 ，如果你的80端口被已经被占用，你自己修改一个没有用的端口号！！！！！</strong></p><p>然后，在你的文件中 bin目录下，用【管理员】身份打开 CMD，输入httpd.exe -k install，如图我的例子：<br><img src="https://img-blog.csdnimg.cn/20190519221143962.png"><br>到这里下载成功了！！</p><p>3、启动Apache服务<br>继续输入命令：net start Apache2.4 ，成功后在页面输入：localhost:你刚写的端口号 就会成功出现如下所示：(还有一种启动方法)<br><img src="https://img-blog.csdnimg.cn/20190519221410964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"><br>第二种启动方法：<br>右键此电脑 -&gt; 管理 ， 然后启动如图所圈的：<br><img src="https://img-blog.csdnimg.cn/20190519221801153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N4czc5NzA=,size_16,color_FFFFFF,t_70"></p><h1 id="PHP8安装和配置"><a href="#PHP8安装和配置" class="headerlink" title="PHP8安装和配置"></a>PHP8安装和配置</h1><ol><li>官网下载apache24和php8（要线程安全的那个，不然没有.dll文件）</li><li>php8安装完毕后打开安装文件中的php.ini-development改名为php.ini，然后打开这个文件找到 extension_dir&#x3D;“ext”，去掉注释分号，改为extension_dir &#x3D; “D:&#x2F;software&#x2F;php8&#x2F;ext” (php的安装路径&#x2F;ext)</li><li>打开apache的安装路径找到》config》httpd.conf,搜索LoadModule找到这个文中添加模块的区域，在后面追加：这一步是将php加到apache中<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#让Apache载入PHP处理模块</span></span><br><span class="line"><span class="comment">#php安装路径/php8apache2_4.dll</span></span><br><span class="line">LoadModule php_module &quot;D:/Program Files/php8/php8apache2_4.dll&quot; </span><br><span class="line"><span class="comment">#php安装路径</span></span><br><span class="line">PHPIniDir &quot;D:/Program Files/php8&quot;  </span><br><span class="line"><span class="comment">#这个配置表示所有的*.php文件使用php处理</span></span><br><span class="line">AddType application/x-httpd-php .php .phtml</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>添加虚拟目录：<br>还在httpd.conf文件后面加上：<br>先注释掉原来的路径#DocumentRoot “${SRVROOT}&#x2F;htdocs”<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">    DirectoryIndex index.php index.html index.htm default.php default.html default.htm home.php home.html home.htm</span><br><span class="line"><span class="comment">#D:/PHP是自己以后放php项目的地方  并取一个别名</span></span><br><span class="line">Alias /difcipo &quot;D:/Cache/PHP&quot;  </span><br><span class="line">DocumentRoot &quot;D:/Cache/PHP&quot;</span><br><span class="line">&lt;Directory &quot;D:/Cache/PHP&quot;&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride all</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>配置虚拟主机：<br>打开》conf》extra》httpd-vhosts.conf，在文件后面添加<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"><span class="comment">#这个需要和前面的DocumentRoot一致</span></span><br><span class="line">    DocumentRoot &quot;D:/Cache/PHP&quot;  </span><br><span class="line"><span class="comment">#虚拟主机名</span></span><br><span class="line">    ServerName www.abc.com  </span><br><span class="line">    ErrorLog &quot;logs/www.age.com-error.log&quot;</span><br><span class="line">    CustomLog &quot;logs/www.age.com-access.log&quot; common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>打开C:\Windows\System32\drivers\etc\hosts文件(修改HOST文件)，在后面添加 127.0.0.1 <a href="http://www.abc.com/">www.abc.com</a> 配置完毕！启动apache。<img src="https://img-blog.csdnimg.cn/20210114185127506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE4ODY3Nw==,size_16,color_FFFFFF,t_70"></li><li>测试<img src="https://img-blog.csdnimg.cn/20210114185051491.png"></li></ol><p><strong>注：本文从[apache24+php8配置]直接复制以便查看，如有侵权请联系删除</strong></p><h1 id="安装PHP发现的问题"><a href="#安装PHP发现的问题" class="headerlink" title="安装PHP发现的问题"></a>安装PHP发现的问题</h1><p>原参考文章中发现有导入模块错误，主要原因是注释和代码放在了同一行，放到另一行即可</p><p><strong>bin下使用命令 httpd.exe -t 查找问题 例如: D:\Program Files\Apache\Apache24\bin\httpd.exe -t</strong></p><h1 id="安装问题查找方式"><a href="#安装问题查找方式" class="headerlink" title="安装问题查找方式"></a>安装问题查找方式</h1><blockquote><p>apache php无法启动的解决办法：1、使用Apache的配置检查，并根据错误提示，纠正错误；2、注销IIS服务；3、使用命令杀掉强占80端口的进程；4、修改PHP配置php.ini文件。</p></blockquote><p>Apache&#x2F;PHP 无法启动分两种情况：<br>1、Apache无法启动，没加载php也无法启动<br>2、Apache可以启动，但加载php后无法启动<br>第一种情况多数是Apache配置问题，或者80端口被占用<br>第二种多数是PHP编译器的问题：<br>查看Apache错误日志，有类似下面这些内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd.exe: Syntax error on line 63 of D:/Apache2.2/conf/httpd.conf: Cannot load D:/php/php5apache2_4.dll into server: %1 \xb2\xbb\xca\xc7\xd3\xd0\xd0\xa7\xb5\xc4 Win32 \xd3\xa6\xd3\xc3\xb3\xcc\xd0\xf2\xa1\xa3</span><br></pre></td></tr></table></figure><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/sxs7970/article/details/90349009">Apache的安装教程</a><br>2.<a href="https://blog.csdn.net/weixin_42188677/article/details/112610016">apache24+php8配置</a><br>3.<a href="https://www.php.cn/php-ask-462557.html">apache php无法启动的解决办法</a></p>]]></content>
    
    
    <summary type="html">安装 apache php 以及出现问题解决</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="PHP" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/PHP/"/>
    
    <category term="Apache" scheme="https://zml3589110.github.io/categories/Apache/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="软件安装" scheme="https://zml3589110.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    <category term="apache" scheme="https://zml3589110.github.io/tags/apache/"/>
    
    <category term="php" scheme="https://zml3589110.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>VUE常用基础收集</title>
    <link href="https://zml3589110.github.io/posts/4001256595.html"/>
    <id>https://zml3589110.github.io/posts/4001256595.html</id>
    <published>2022-05-17T01:16:20.000Z</published>
    <updated>2022-05-17T03:29:37.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h1 id="常用知识"><a href="#常用知识" class="headerlink" title="常用知识"></a>常用知识</h1><h2 id="Vue-UI创建项目详细步骤"><a href="#Vue-UI创建项目详细步骤" class="headerlink" title="Vue UI创建项目详细步骤"></a><a href="https://www.jb51.net/article/234189.htm">Vue UI创建项目详细步骤</a></h2><p>1.首先要安装最新的Vue CLI<br>在命令行工具里输入一下命令<br>npm install -g @vue&#x2F;cli<br>或者<br>yarn global add @vue&#x2F;cli<br>安装成功后，可用vue -V命令查看已安装的Vue CLI版本<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073438.png"><br>2.在命令行运行 vue ui，就会出现图形化管理<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073439.png"><br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073440.png"><br>在界面上可以看到第一个tab项目，点击创建这个tab ，可以来创建一个新的vue项目<br>3.点击了创建之后可以看到一下内容，可以项目创建一个目录或者选择一个目录，然后选择一种包管理工具：可以使npm，也可以是yarn等<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073541.png"><br>4.点击下一步后，出现预设插件和配置的界面，按照自己的需求选择就可以，此处选择了默认的。<br><img src="https://img.jbzj.com/file_images/article/202201/2022011015073542.png"><br>5.点击创建项目后<br>已安装的插件，也可以在右上角点击添加插件安装想要的插件。<br>添加插件页面，也得要点击右下角的安装~<br>再返回到插件就会看到刚才安装的插件了，如下所示：<br>6.最后我们来看下 通过vue ui生成的项目结构<br>运行一下项目，npm run serve</p><h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><p>1.<a href="https://blog.csdn.net/jayLog/article/details/122743727">vue常用指令</a><br>vue常用指令有：v-once指令、v-show指令、v-if指令、v-else指令、v-else-if指令、v-for指令、v-html指令、v-text指令、v-bind指令、v-on指令、v-model指令等等。</p><h1 id="其他链接"><a href="#其他链接" class="headerlink" title="其他链接"></a>其他链接</h1>]]></content>
    
    
    <summary type="html">VUE常用命令和知识收集</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>HTML网页怎么连接到数据库</title>
    <link href="https://zml3589110.github.io/posts/2729451999.html"/>
    <id>https://zml3589110.github.io/posts/2729451999.html</id>
    <published>2022-05-17T00:23:20.000Z</published>
    <updated>2022-05-17T03:29:37.763Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><h2 id="HTML不能直接读取数据库"><a href="#HTML不能直接读取数据库" class="headerlink" title="HTML不能直接读取数据库"></a>HTML不能直接读取数据库</h2><p>HTML是无法读取数据库的，HTML是页面前端脚本语言，要想从HTML网页中获取SQL数据库里的数据，需要借助JSP或ASP或PHP或RUBY等语言来实现。 简单的关系可以这样理解： 数据库&lt;—&gt;JSP或ASP或PHP或RUBY等语言&lt;—&gt;HTML<br><img src="https://img.gxlcms.com//Uploads-s/new/2019-09-30-201930/5cd67223da8dd675.jpg"></p><p>网页链接数据库代码如下（PHP编写）：</p><?phpheader('content-type:text/html;charset=gb2312;');//解决浏览器编码问题$lnk = mysql_connect('localhost', 'root', '********') or die ('连接失败 : ' . mysql_error());//密码填的是连接数据库的密码mysql_query("set names gb2312");//这就是指定数据库字符集//选择当前连接数据库为studentmysql_select_db('book', $lnk);//获取查询项和查询关键字的值$searchitem=$_POST['searchitem'];$searchvalue=$_POST['searchvalue'];/*定义查询语句，如果查询关键字的值不为空，则在SQL语句的Where子句中指定查询项模糊匹配关键字，否则查询所有记录*/if($searchvalue!="")   $myquery="SELECT * from books where {$searchitem} like '%{$searchvalue}%'";  else  $myquery="SELECT * from books";   //执行查询，生成结果集$result = mysql_query($myquery)or die("<br>查询表books失败: " . mysql_error());//从结果集中取得一行作为关联数组$row=mysql_fetch_array($result);//循环读取每一行记录while ($row){}?><h2 id="HTML-前端怎么连接数据库？"><a href="#HTML-前端怎么连接数据库？" class="headerlink" title="HTML 前端怎么连接数据库？"></a>HTML 前端怎么连接数据库？</h2><p>HTML前端不能连接数据库，如果需要和数据库进行交互，就需要server端技术，可以选择JSP、PHP、ASP.NET等，这些技术可以实现在前台调用后端数据库，也可使用AJAX进行前后端交互。</p><h3 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h3><p>JSP（全称JavaServer Pages）是由Sun Microsystems公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、XML或其他格式文档的Web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的HTTP请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。</p><p>JSP将Java代码和特定变动内容嵌入到静态的页面中，实现以静态页面为模板，动态生成其中的部分内容。JSP引入了被称为“JSP动作”的XML标签，用来调用内建功能。另外，可以创建JSP标签库，然后像使用标准HTML或XML标签一样使用它们。标签库能增强功能和服务器性能，而且不受跨平台问题的限制。JSP文件在运行时会被其编译器转换成更原始的Servlet代码。JSP编译器可以把JSP文件编译成用Java代码写的Servlet，然后再由Java编译器来编译成能快速执行的二进制机器码，也可以直接编译成二进制码。</p><h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><p>PHP原始为Personal Home Page的缩写，已经正式更名为 “PHP: Hypertext Preprocessor”。自20世纪90年代国内互联网开始发展到现在，互联网信息几乎覆盖了我们日常活动所有知识范畴，并逐渐成为我们生活、学习、工作中必不可少的一部分。据统计，从2003 年开始，我国的网页规模基本保持了翻番的增长速度，并且呈上升趋势。PHP 语言作为当今最热门的网站程序开发语言，它具有成本低、速度快、可移植性好、 内置丰富的函数库等优点，因此被越来越多的企业应用于网站开发中。但随着互联网的不断更新换代，PHP语言也出现了不少问题。</p><p>根据动态网站要求，PHP语言作为一种语言程序，其专用性逐渐在应用过程中显现，其技术水平的优劣与否将直接影响网站的运行效率。其特点是具有公开的源代码， 在程序设计上与通用型语言，如C语言相似性较高，因此在操作过程中简单易懂，可操作性强。同时，PHP语言具有较高的数据传送处理水平和输出水平，可以广泛应用在Windows系统及各类Web服务器中。如果数据量较大，PHP语言还可以拓宽链接面，与各种数据库相连，缓解数据存储、检索及维护压力。随着技术的发展，PHP 语言搜索引擎还可以量体裁衣，实行个性化服务，如根据客户的喜好进行分类收集储存，极大提高了数据运行效率。</p><h3 id="ASP-NET"><a href="#ASP-NET" class="headerlink" title="ASP.NET"></a>ASP.NET</h3><p>ASP.NET又称为ASP+，不仅仅是ASP的简单升级，而是微软公司推出的新一代脚本语言。ASP.NET基于.NET Framework的Web开发平台，不但吸收了ASP以前版本的最大优点并参照Java、VB语言的开发优势加入了许多新的特色，同时也修正了以前的ASP版本的运行错误。</p><p>ASP.NET具备开发网站应用程序的一切解决方案，包括验证、缓存、状态管理、调试和部署等全部功能。在代码撰写方面特色是将页面逻辑和业务逻辑分开，它分离程序代码与显示的内容，让丰富多彩的网页更容易撰写。同时使程序代码看起来更洁净、更简单。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://www.gxlcms.com/mysql-337548.html">HTML网页怎么连接到数据库？</a><br>2.<a href="https://m.php.cn/article/452911.html">HTML 前端怎么连接数据库？</a></p>]]></content>
    
    
    <summary type="html">微信小程序调用UDP网络协议进行数据传输</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="HTML" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/HTML/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/tags/mysql/"/>
    
    <category term="HTML" scheme="https://zml3589110.github.io/tags/HTML/"/>
    
    <category term="文章收集" scheme="https://zml3589110.github.io/tags/%E6%96%87%E7%AB%A0%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>5分钟商学院-基础之目录</title>
    <link href="https://zml3589110.github.io/posts/3753918527.html"/>
    <id>https://zml3589110.github.io/posts/3753918527.html</id>
    <published>2022-05-16T07:04:20.000Z</published>
    <updated>2022-05-16T08:05:12.745Z</updated>
    
    <content type="html"><![CDATA[<p>作者：匿名用户<br>链接：<a href="https://www.zhihu.com/question/64174568/answer/1001925349">https://www.zhihu.com/question/64174568/answer/1001925349</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><p>对不住了，润总~</p><p>首先，来盘点一下，我“追星”花了多少钱。《5分钟商学院基础篇》：199元《实战篇》：199元2018年线下大课4节课通课：10000元往返四个城市飞机片加住宿：3000*4&#x3D;120000元课后见面私董会：10000元刘润推荐买BOSE降噪耳机：2800元刘润推荐买蓝牙手环：600元刘润全套书：大约300元大约花了36000元，当然买东西那个也不是别人强推给我的，只是我相信他说的，买了。所以，我比大部分人有机会评论刘润。首先阐明，我是粉转黑，你们也可以感受一下我的感受。</p><p>刘润是在得到上“发家”的，开了两门年课，大概就是把一本专业书的概念，浓缩成几千字的音频，然后讲出来。<br>当初，冲着《商学院》几个字就去了。这么神圣的商学院，居然能在这儿开课，不得了不得了，加上罗胖一包装，一忽悠，花了199就买了。<br>抓起来听了几课，我艹，不得了，这人简直是商业史上的奇才。我要向他学习，我要追星，我要学到真东西。加之马上开展了线下大课的售卖，我咬咬牙，花了30分钟，就决定了2万块的消费——全年4堂大课+私下见面会。</p><p>追了一圈下来，后悔不已啊！</p><p>接下来就详细说说，我对这个人怎么看。</p><p>先评优点：<br>刘润这个人我认真观察了两年多，从朋友圈、媒体、得到、微博、知识星球等等，我能判断的优点是：<br>1.演讲技巧好<br>2.逻辑思维能力<br>3.深入浅出的叙述能力<br>4.日更公号的勤奋<br>5.社交场上一枝花<br>6.对儿子上心</p><p>好优点说完了，说说缺点。先简述问题，后面慢慢铺开。</p><p>一、做人不谦虚，架子大。</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。</p><p>三、实操匮乏，三句不离微软。从数学系毕业，微软工作几年，就出来做互联网转型专家？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>一、做人不谦虚，架子大。<br>我在花了一万块以后在私董会上面跟刘润见面了。一桌共有10个同学，每人一万，每人五分钟提问，刘润解答。<br>流程是这样，刘润讲完课，由工作人员把私董会成员安排到酒店餐厅的包间集合。所有人到后，刘润开始吃饭。边吃边听，其他同学挨个发言。<br>听完十个同学的问题，我觉得都是比较当务之急，需要深思熟虑解决的。但是，刘润却在几分钟之内就能下判断和诊断。姑且不是结局如何，这种关系每个企业和公司的大事，几分钟就敢给结论？这是极不负责任的表现。<br>对于企业或者是个人，所有的决策，不根据数据、调查得出解决，万一直觉误导了别人，这就不是一万块的买卖了。<br>所以，这个所谓的私董会，就是割韭菜专用的。45分钟，解决了十个同学的问题。厉害吗？<br><img src="https://pic2.zhimg.com/50/v2-7c5a7a969609e8ea8098e7b21a9a3a46_720w.jpg?source=1940ef5c" data-caption data-size="small" data-rawwidth="1080" data-rawheight="2160" class="origin_image zh-lightbox-thumb" width="1080" data-original="https://pic1.zhimg.com/v2-7c5a7a969609e8ea8098e7b21a9a3a46_r.jpg?source=1940ef5c"><br>这是卖家秀，麻烦得到，下次也备注清楚，只有5分钟！跟课程是一样长！<br>第二件事，就是关于张艺兴的视频。他对张艺兴说：“我听说你是我的粉丝”，“让你可以自豪的说出，你喜欢的人是刘润。”<br>我没有看出来什么叫谦虚，什么叫低调，什么叫为人师表。我知道看到了卖课，打广告，借题抬高自己。你们感受一下。<br>向隔壁何帆老师学习吧，“凡是叫人谦虚的学问都是好学问”，“有一天你取得了成就，我会搬个小板凳，做在你面前，认真听你教我。”</p><p>二、任海尔、百度、恒基的战略顾问，水分很大。<br>我几乎看了刘润的每一篇公众号，也听过线下课程，线上课程，甚至朋友圈。至今为止，我没有看到过刘润发布相关的战略研究案例，或者企业咨询得出的结果等等。<br>与之对比的是华与华。华杉也是做咨询的，但是别人的咨询跟刘润的咨询差别有点大。如果你细看华杉的公众号，你会发现，没有那么多扯淡的话，几乎是干货，叫你怎么做，怎么包装，怎么定位，怎么设计，怎么卖！并且还总结出一套非常完善、且能上手的实用方法论。</p><p>这难道不是做企业咨询应该做的事情吗？那么，我斗胆请问刘润老师，做咨询这么久，能否分享一些你做过咨询的成功案例？或者一些实用的方法论？当然，可以用保密协议say NO。</p><p>按照回答张艺兴的路数，应该是知无不言、知无不尽，在这里，我仿佛感觉润总有点词穷。</p><p>三、实操匮乏，三句不离微软。</p><p>从数学系毕业，微软工作几年，就出来做互联网转型专家？微软，这这辈子没有听过这么多次微软。从内部体系，到微软怎么招人，在知乎回答、微博、朋友圈，真的是一直不停的说。我深知你对微软的感情，但是，也暴露了另外一点。就是，你知道的，就一定会说出来。</p><p>刘润是数学系毕业，按照我的记忆，在大课上讲过，毕业后，刚刚参加工作，就跑去微软面试，没想到进了。在微软担任到某分公司的总经理？在微软过后，就创办润米咨询，也就是2013年。我注意观察到，最近几乎所有平台关于刘润的学习，都加上了复旦大学MBA。这事儿也挺蹊跷，大概率是成人MBA。但从近几年的资料看，刘润没有关于任何在复旦大学的线索。（仅为猜忌，肯定不敢学他的曾经的boss）</p><p>那么，从微软出来，就开了咨询公司，为何就成了互联网转型专家？其实我挺纳闷的。当时的微软跟互联网的关系其实也挺浅的，这是众所周知的。</p><p>那么，是否有成功转型的企业呢？是如何转型的呢？又提供了多大的帮助呢？这个“专家”二字是谁说的呢？</p><p>四、换汤不换药，车轱辘话来回转。</p><p>如果各位有机会关注刘润的公众号，大概得到的就是这种句式：企业遇到财务危机怎么办？那我们先来说说，什么是财务危机。 财务危机又分为XX、XX…..</p><p>这样的句式充满整个公众号。你看来看去，是找不到毛病，确实也没说错。然后，发现对你基本没有帮助。用网友的话，叫做正确的废话。</p><p>就拿这篇财务危机的公众号来看，他说有六个办法能够帮助企业获得现金流。哇哦，让我虎躯一震。</p><p>看完全篇，总结了六点：<br>1.找股东借、2.清库存、3.要预付款、4.收应收款、5.延期支付应付款、6.减成本。<br>哎，你说，这个话有问题吗？并没有。有意义吗？哎~ 建议别跟Spencer学，都学坏了，日更一篇，都是些水货。</p><p>关于护城河啊之类的理论，这都不知道说了多少次了。记得“得到”上有怎么办问题，回答的就是护城河理论，答非所问。我刚刚看，罗胖都把首页的这条推荐删了。</p><p>说这么多，我只想真实表达我的感受，也确实把我憋坏了。因为我曾经太信任，刘润对我们却视为韭菜，我惋惜我的两万块钱。</p><p>我记得刘润课上说过一话：“今天对我爱理不理，明天让你高攀不起。” 如果你能看到，这句话，我回送给你。当做我一个梦想吧！哈哈哈哈哈哈</p><p>发布于 2020-02-06 21:24</p>]]></content>
    
    
    <summary type="html">5分钟商学院-基础篇的目录内容</summary>
    
    
    
    <category term="商业类" scheme="https://zml3589110.github.io/categories/%E5%95%86%E4%B8%9A%E7%B1%BB/"/>
    
    <category term="刘润" scheme="https://zml3589110.github.io/categories/%E5%95%86%E4%B8%9A%E7%B1%BB/%E5%88%98%E6%B6%A6/"/>
    
    
    <category term="商业" scheme="https://zml3589110.github.io/tags/%E5%95%86%E4%B8%9A/"/>
    
    <category term="5分钟商学院" scheme="https://zml3589110.github.io/tags/5%E5%88%86%E9%92%9F%E5%95%86%E5%AD%A6%E9%99%A2/"/>
    
    <category term="目录" scheme="https://zml3589110.github.io/tags/%E7%9B%AE%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序(一)之UDP通信</title>
    <link href="https://zml3589110.github.io/posts/2604964553.html"/>
    <id>https://zml3589110.github.io/posts/2604964553.html</id>
    <published>2022-05-14T09:23:20.000Z</published>
    <updated>2022-05-16T03:18:51.546Z</updated>
    
    <content type="html"><![CDATA[<p>前期知识:<a href="https://zml3589110.github.io/posts/497460256.html">网络七层协议(OSI)基础知识</a></p><h1 id="文章代码参考"><a href="#文章代码参考" class="headerlink" title="文章代码参考"></a>文章代码参考</h1><h2 id="微信小程序UDP通信"><a href="#微信小程序UDP通信" class="headerlink" title="微信小程序UDP通信"></a>微信小程序UDP通信</h2><blockquote><p>微信小程序UDP通信及编码转换</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Encoder  <span class="keyword">from</span> <span class="string">&#x27;../../util/Encoder.js&#x27;</span></span><br><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"><span class="built_in">this</span>.udp.bind(<span class="number">60000</span>) <span class="comment">//udp绑定本机</span></span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">    <span class="comment">//连接目标</span></span><br><span class="line"><span class="function"><span class="title">linkUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp.connect(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//发送信息</span></span><br><span class="line"><span class="function"><span class="title">clickUDP</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//utf-8转gbk编码</span></span><br><span class="line"><span class="keyword">var</span> gbkArray = Encoder.hexstrToArray(Encoder.stringToGbkHexstr(<span class="string">&#x27;123哈&#x27;</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;gbkArray&gt;&gt;&quot;</span> , gbkArray)</span><br><span class="line"><span class="keyword">let</span> gbk = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>()</span><br><span class="line"><span class="built_in">console</span>.log(gbk)</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.write(&#123;</span><br><span class="line">address: <span class="string">&#x27;192.168.0.87&#x27;</span>,</span><br><span class="line">port: <span class="number">50000</span>,</span><br><span class="line">message: gbk</span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//监听接收到的数据</span></span><br><span class="line">onUdpMessage: <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;收到的信息&#x27;</span>, res);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;onUdpMessage() 接收数据 &#x27;</span> + res.remoteInfo.size + <span class="string">&#x27; 字节：&#x27;</span> + <span class="built_in">JSON</span>.stringify(res, <span class="literal">null</span>, <span class="string">&#x27;\t&#x27;</span>));</span><br><span class="line"><span class="comment">// gbk转utf-8</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="keyword">new</span> <span class="built_in">Uint8Array</span>(res.message);</span><br><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> TextDecoder(<span class="string">&#x27;gbk&#x27;</span>).decode(x);</span><br><span class="line"><span class="built_in">console</span>.log(str)</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="comment">//监听收到的数据</span></span><br><span class="line"><span class="built_in">this</span>.udp.onMessage(<span class="built_in">this</span>.onUdpMessage)</span><br><span class="line"><span class="comment">//监听错误的信息</span></span><br><span class="line"><span class="built_in">this</span>.udp.onError(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(err)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"><a href="#关于微信小程序使用UDP实现局域网通讯及UDP模块的封装" class="headerlink" title="关于微信小程序使用UDP实现局域网通讯及UDP模块的封装"></a>关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</h2><blockquote><p>封装模块</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPSocket</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection = &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 创建一个UDP实例</span></span><br><span class="line">  <span class="function"><span class="title">establish</span>(<span class="params">monitor</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(monitor);</span><br><span class="line">    <span class="built_in">this</span>.connection = wx.createUDPSocket();</span><br><span class="line">    <span class="comment">// 绑定指定端口</span></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.connection.bind(monitor)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;连接成功&#x27;</span> + port + <span class="string">&#x27;端口&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 监听端口函数</span></span><br><span class="line">  <span class="function"><span class="title">onListening</span>(<span class="params">success, failure, open, cmd, mac</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// 开启监听</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onListening(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      open(res)</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 监听回调函数</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onMessage(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//以下为我对数据的处理，使用到了我的一个tool.js,里面包含了对字节数组的处理</span></span><br><span class="line"><span class="comment">//需要的可以到我的个人博客获取www.meinaodai.top</span></span><br><span class="line"> </span><br><span class="line">      <span class="comment">// 做空包筛查</span></span><br><span class="line">      <span class="keyword">if</span> (res.message) &#123;</span><br><span class="line">        <span class="keyword">var</span> packet = tool.analysis(res.message)</span><br><span class="line">        <span class="comment">// 做数据空包处理</span></span><br><span class="line">        <span class="keyword">if</span> (packet) &#123;</span><br><span class="line">          <span class="comment">// 做数据筛查</span></span><br><span class="line">          <span class="comment">// console.log(tool.Screening(packet, cmd, mac));</span></span><br><span class="line">          success(tool.Screening(packet, cmd, mac))</span><br><span class="line">          <span class="built_in">console</span>.log(packet);</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&#x27;------------------------&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// debug</span></span><br><span class="line">    <span class="built_in">this</span>.connection.onError(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">      failure(err)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 发送消息</span></span><br><span class="line">  <span class="function"><span class="title">send</span>(<span class="params">message</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.send(&#123;</span><br><span class="line">      address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">      port: <span class="number">20015</span>,</span><br><span class="line">      message</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 关闭搜索事件</span></span><br><span class="line">  <span class="function"><span class="title">UDPclose</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.connection.close()</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;UDP关闭&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>模块引用</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> UDP = <span class="built_in">require</span>(<span class="string">&quot;./UDP.js&quot;</span>)   </span><br><span class="line">   <span class="comment">// UDP实例创建</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket = <span class="keyword">new</span> UDP.UDPSocket();</span><br><span class="line">    <span class="comment">// 连接端口</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.establish(<span class="number">20016</span>)</span><br><span class="line">    <span class="comment">// 请求设备上报状态</span></span><br><span class="line">    <span class="built_in">this</span>.udpsend()</span><br><span class="line">    <span class="comment">// 开始监听</span></span><br><span class="line">    <span class="built_in">this</span>.UDPSocket.onListening(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// debug</span></span><br><span class="line">      <span class="built_in">console</span>.log(err);</span><br><span class="line">    &#125;, <span class="function"><span class="params">open</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(open);</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">//这两个参数为筛查条件，用于过滤无用或者不合法的信息，不需要的可传空值</span></span><br><span class="line">    <span class="string">&#x27;&#x27;</span>, getApp().globalData.item.mac)</span><br></pre></td></tr></table></figure><h1 id="实际工程测试"><a href="#实际工程测试" class="headerlink" title="实际工程测试"></a>实际工程测试</h1><p>先按照第一篇写时发现找不到 connect 函数，是因为变量问题！修改为全局变量后可以通过 connect 连接端口，但又缺失 hexstrToArray 函数，就没再继续下去。<br>后来找到第二篇参考，并根据参考写相应UDP函数，引用中 getApp().globalData.item.mac 和 tool.analysis(res.message) 均不存在，屏蔽即可，数据能正常收发。<br>再重新分析参考程序，并从官方文档中了解相应函数作用，最后基本按照官方文档提供的几个函数即可完成功能。</p><h2 id="在页面初始中建立实例并绑定端口"><a href="#在页面初始中建立实例并绑定端口" class="headerlink" title="在页面初始中建立实例并绑定端口"></a>在页面初始中建立实例并绑定端口</h2><blockquote><p>也可以使用 connect 模式，使用 bind 可以返回绑定端口<br>使用 onListening 打开监听功能，并通过 onMessage 设置监听数据回调函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onLoad</span>(<span class="params">options</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.udp = wx.createUDPSocket() <span class="comment">//新建udp实例</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> port = <span class="built_in">this</span>.udp.bind(<span class="number">60000</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;端口&#x27;</span> + port + <span class="string">&#x27;连接成功&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">this</span>.udp.onListening(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="built_in">this</span>.udp.onMessage(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(res)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="设置数据发送"><a href="#设置数据发送" class="headerlink" title="设置数据发送"></a>设置数据发送</h2><blockquote><p>发送数据直接使用 send 函数即可，使用 255.255.255.255 是广播模式<br>即向局域网中所有端口 60000 均发送数据</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">BtnTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;这是一个测试按钮&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">this</span>.udp.send(&#123;</span><br><span class="line">  address: <span class="string">&#x27;255.255.255.255&#x27;</span>,</span><br><span class="line">  port: <span class="number">60000</span>,</span><br><span class="line">  message: <span class="string">&#x27;hello, how are you&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="待添加部分"><a href="#待添加部分" class="headerlink" title="待添加部分"></a>待添加部分</h2><p>以上只是简单的数据收发，也在局域网中测试实现，不过完整的过程封装应该还需错误回调和关闭等功能。<br>即增加 UDPSocket.onError 和 UDPSocket.close 函数<br>官方所提供的函数如下:<br><strong>UDPSocket wx.createUDPSocket()</strong> 创建一个 UDP Socket 实例</p><blockquote><p>UDPSocket 基础库 2.7.0 开始支持，低版本需做兼容处理。<br>一个 UDP Socket 实例，默认使用 IPv4 协议</p></blockquote><p><strong>方法:</strong></p><table><thead><tr><th align="left">函数名</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><strong>number UDPSocket.bind(number port)</strong></td><td align="left">绑定一个系统随机分配的可用端口，或绑定一个指定的端口号</td></tr><tr><td align="left">UDPSocket.setTTL(number ttl)</td><td align="left">设置 IP_TTL 套接字选项，用于设置一个 IP 数据包传输时允许的最大跳步数</td></tr><tr><td align="left"><strong>UDPSocket.send(Object object)</strong></td><td align="left">向指定的 IP 和 port 发送消息。基础库 2.9.0 起支持广播 (指定地址为 255.255.255.255)</td></tr><tr><td align="left">UDPSocket.connect(Object object)</td><td align="left">预先连接到指定的 IP 和 port，需要配合 write 方法一起使用</td></tr><tr><td align="left">UDPSocket.write()</td><td align="left">用法与 send 方法相同，如果没有预先调用 connect 则与 send 无差异（注意即使调用了 connect 也需要在本接口填入地址和端口参数）</td></tr><tr><td align="left">UDPSocket.close()</td><td align="left">关闭 UDP Socket 实例，相当于销毁。 在关闭之后，UDP Socket 实例不能再发送消息，每次调用 UDPSocket.send 将会触发错误事件，并且 message 事件回调函数也不会再也执行。在 UDPSocket 实例被创建后将被 Native 强引用，保证其不被 GC。在 UDPSocket.close 后将解除对其的强引用，让 UDPSocket 实例遵从 GC</td></tr><tr><td align="left">UDPSocket.onClose(function callback)</td><td align="left">监听关闭事件</td></tr><tr><td align="left">UDPSocket.offClose(function callback)</td><td align="left">取消监听关闭事件</td></tr><tr><td align="left">UDPSocket.onError(function callback)</td><td align="left">监听错误事件</td></tr><tr><td align="left">UDPSocket.offError(function callback)</td><td align="left">取消监听错误事件</td></tr><tr><td align="left"><strong>UDPSocket.onListening(function callback)</strong></td><td align="left">监听开始监听数据包消息的事件</td></tr><tr><td align="left">UDPSocket.offListening(function callback)</td><td align="left">取消监听开始监听数据包消息的事件</td></tr><tr><td align="left"><strong>UDPSocket.onMessage(function callback)</strong></td><td align="left">监听收到消息的事件</td></tr><tr><td align="left">UDPSocket.offMessage(function callback)</td><td align="left">取消监听收到消息的事件</td></tr></tbody></table><p><strong>错误:</strong></p><table><thead><tr><th align="left">错误码</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">-1</td><td align="left">系统错误</td></tr><tr><td align="left">-2</td><td align="left">socket接口错误，可参考系统的socket错误码</td></tr><tr><td align="left">-3</td><td align="left">发送失败，无接口权限</td></tr><tr><td align="left">1</td><td align="left">发送失败，参数错误，address不合法</td></tr><tr><td align="left">2</td><td align="left">发送失败，参数错误，port不合法</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_50077305/article/details/118813518">微信小程序UDP通信</a><br>2.<a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/wx.createUDPSocket.html">微信官方文档-UDP通信</a><br>3.<a href="https://blog.csdn.net/qq_43318313/article/details/124193217">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装</a><br>4.<a href="http://meinaodai.top/">关于微信小程序使用UDP实现局域网通讯及UDP模块的封装的个人博客</a> 所提供的 tool.js 封装了常用函数</p>]]></content>
    
    
    <summary type="html">微信小程序调用UDP网络协议进行数据传输</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/JavaScript/"/>
    
    
    <category term="网络协议" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="UDP" scheme="https://zml3589110.github.io/tags/UDP/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="小程序" scheme="https://zml3589110.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>网络编程(一)之网络七层协议(OSI)</title>
    <link href="https://zml3589110.github.io/posts/497460256.html"/>
    <id>https://zml3589110.github.io/posts/497460256.html</id>
    <published>2022-05-14T01:30:20.000Z</published>
    <updated>2022-05-14T09:25:41.652Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络七层协议-OSI-基础知识"><a href="#网络七层协议-OSI-基础知识" class="headerlink" title="网络七层协议(OSI)基础知识"></a>网络七层协议(OSI)基础知识</h1><p>协议总览图：<br>​<img src="/posts/497460256/1.%E7%BD%91%E7%BB%9C%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>网络中的计算机与终端要想正确地传递信息和数据，必须在数据传输地顺序、数据的格式及内容等方面有一个约定的或规则，这种约定或规则称之为协议。</p></blockquote><table><thead><tr><th align="left">OSI层</th><th align="left">功能</th><th align="left">示例</th><th align="left">网络设备</th></tr></thead><tbody><tr><td align="left">应用层</td><td align="left">电子邮件，文件服务，虚拟终端</td><td align="left">TELNET，HTTP，FTP，NFS，SMTP，TFTP，SNMP，DNS，Telnet等</td><td align="left"></td></tr><tr><td align="left">表示层</td><td align="left">数据格式化，代码转换，数据加密 没有协议</td><td align="left">加密，ASCII等</td><td align="left"></td></tr><tr><td align="left">会话层</td><td align="left">解除或建立与别的接点的联系 没有协议</td><td align="left">RPC，SQL等</td><td align="left"></td></tr><tr><td align="left">传输层</td><td align="left">提供端对端的接口</td><td align="left">TCP，UDP，SPX</td><td align="left">四层交换机、也有工作在四层的路由器</td></tr><tr><td align="left">网络层</td><td align="left">为数据包选择路由</td><td align="left">IP，ICMP，RIP，OSPF，BGP，IGMP，IPX等</td><td align="left">路由器、三层交换机</td></tr><tr><td align="left">数据链路层</td><td align="left">传输有地址的帧以及错误检测功能</td><td align="left">ATM，FDDI，SLIP，CSLIP，PPP，ARP，RARP，MTU等</td><td align="left">网桥、以太网交换机、网卡(物理层和据链路层各一半)</td></tr><tr><td align="left">物理层</td><td align="left">以二进制数据形式在物理媒体上传输数据</td><td align="left">Rj45，802.3，ISO2110，IEEE802，IEEE802.2等</td><td align="left">中继器、集线器、双绞线等</td></tr></tbody></table><h2 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h2><p>数据链层图：<br>​<img src="/posts/497460256/2.%E6%95%B0%E6%8D%AE%E9%93%BE%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第二层，介于物理层和网络层之间,其最基本的服务是将源自网络层来的数据可靠得传输到相邻节点的目的机网络层<br>在数据链路层中称这种数据块为帧，帧是数据链路层的传送单位，如何控制帧在屋里信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配，以及在两个网络实体之间提供数据链路通路的建立、维持和释放的管理.</p></blockquote><h2 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h2><p>网络层在数据链路层提供的两个相邻端点之间的数据帧的传送功能上进一步管理网络中的数据通信，将数据设法从源端经过若干个中间节点传送到目的端，从而向传输层提供最基本的端到端的数据传送服务<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%82.png" class title="This is an 1.微信小程序UDP通信 image"></p><blockquote><p>OSI参考模型中的第三层，介于传输层和数据链路层之间<br>​<img src="/posts/497460256/3.%E7%BD%91%E7%BB%9C%E5%B1%821.png" class title="This is an 1.微信小程序UDP通信 image"><br>网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择，连接的建立、保持和终止等，它提供的服务使传输层不需要了解网络中的数据传输和交换技术。</p></blockquote><h1 id="Socket和HTTP"><a href="#Socket和HTTP" class="headerlink" title="Socket和HTTP"></a>Socket和HTTP</h1><p>简单了解OSI之后我们来看一下我们手机与电脑通信，所能够使用的两种数据通信，一种是HTTP请求，一种是Socket通信，HTTP是属于短连接，适合新闻，订票信息等客户端发起请求，每一次请求结束，自动断开连接。而Socket是属于长连接，适合游戏，聊天等实时数据。</p><h2 id="TCP-x2F-IP协议"><a href="#TCP-x2F-IP协议" class="headerlink" title="TCP&#x2F;IP协议"></a>TCP&#x2F;IP协议</h2><p>建立起一个TCP连接需要经过“三次握手”：<br>第一次握手：客户端发送syn包(syn&#x3D;j)到服务器，并进入SYN_SEND状态，等待服务器确认；<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack&#x3D;j+1），同时自己也发送一个SYN包（syn&#x3D;k），即SYN+ACK包，此时服务器进入SYN_RECV状态；<br>第三次握手：客户端收到服务器的SYN＋ACK包，向服务器发送确认包ACK(ack&#x3D;k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。</p><blockquote><p>握手过程中传送的包里不包含数据，三次握手完毕后，客户端与服务器才正式开始传送数据。理想状态下，TCP连接一旦建立，在通信双方中的任何一方主动关闭连 接之前，TCP 连接都将被一直保持下去。断开连接时服务器和客户端均可以主动发起断开TCP连接的请求，断开过程需要经过“四次握手”（过程就不细写 了，就是服务器和客户端交互，最终确定断开）</p></blockquote><h2 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h2><p>同时Socket可以支持不同的传输层协议（UDP），那我们平时为什么不使用UDP呢，我们现在来看一下UDP与TCP的区别</p><table><thead><tr><th align="left"></th><th align="left">TCP</th><th align="left">UDP</th></tr></thead><tbody><tr><td align="left">是否面向连接</td><td align="left">面向连接</td><td align="left">面向非连接</td></tr><tr><td align="left">传输可靠性</td><td align="left">可靠</td><td align="left">不可靠</td></tr><tr><td align="left">应用场合</td><td align="left">传输大量数据</td><td align="left">少量数据</td></tr><tr><td align="left">传输速度</td><td align="left">慢</td><td align="left">快</td></tr></tbody></table><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://blog.csdn.net/weixin_48126962/article/details/117074843">网络七层协议</a><br>2.<a href="https://blog.csdn.net/ch1406285246/article/details/55504330">网络七层协议、TCP&#x2F;IP、UDP、HTTP、Socket 个人理解</a></p><blockquote><p>一、我一直以为Http和Tcp是两种不同的，但是地位对等的协议，虽然知道TCP是传输层，而http是应用层今天学习了下，知道了 http是要基于TCP连接基础上的，简单的说，TCP就是单纯建立连接，不涉及任何我们需要请求的实际数据，简单的传输。http是用来收发数据，即实际应用上来的。<br>二、TCP是底层通讯协议，定义的是数据传输和连接方式的规范 HTTP是应用层协议，定义的是传输数据的内容的规范 HTTP协议中的数据是利用TCP协议传输的，所以支持HTTP也就一定支持TCP<br>三、HTTP支持的是www服务而TCP&#x2F;IP是协议它是Internet国际互联网络的基础。TCP&#x2F;IP是网络中使用的基本的通信协议。TCP&#x2F;IP实际上是一组协议，它包括上百个各种功能的协议，如：远程登录、文件传输和电子邮件等，而TCP协议和IP协议是保证数据完整传输的两个基本的重要协议。通常说TCP&#x2F;IP是Internet协议族，而不单单是TCP和IP。</p></blockquote><p>3.<a href="https://zhuanlan.zhihu.com/p/101662799">网络OSI七层模型及各层作用</a></p>]]></content>
    
    
    <summary type="html">网络七层协议相关理解</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="网络编程" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="网络协议" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="网络七层协议" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE/"/>
    
    <category term="TCP/IP" scheme="https://zml3589110.github.io/tags/TCP-IP/"/>
    
    <category term="UDP" scheme="https://zml3589110.github.io/tags/UDP/"/>
    
    <category term="Socket" scheme="https://zml3589110.github.io/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>涂鸦WIFI基本开发(二)</title>
    <link href="https://zml3589110.github.io/posts/990256180.html"/>
    <id>https://zml3589110.github.io/posts/990256180.html</id>
    <published>2022-05-11T02:50:20.000Z</published>
    <updated>2022-05-11T11:56:46.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="模块外形及连接方式"><a href="#模块外形及连接方式" class="headerlink" title="模块外形及连接方式"></a>模块外形及连接方式</h1><p>根据提供的资料先进行手工搭线，后续再做图。</p><h2 id="实物外形"><a href="#实物外形" class="headerlink" title="实物外形"></a>实物外形</h2><p>​<img src="/posts/990256180/1.WBR3%E6%A8%A1%E5%9D%97%E5%A4%96%E5%BD%A2.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3每个脚位以及硬件相关信息在对应的信息在文档(涂鸦WIFI基本开发(一))有详细说明</p><h2 id="连接原理图"><a href="#连接原理图" class="headerlink" title="连接原理图"></a>连接原理图</h2><p>​<img src="/posts/990256180/2.%E6%B6%82%E9%B8%A6%E6%A8%A1%E5%9D%97%E8%BF%9E%E6%8E%A5%E5%9B%BE.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>WBR3连接相对简单，基本只需要连接VCC、GND、TXD、RXD四个脚位即可，还有一个信息打印脚位TX为 A_16,测试有信息输出。</p><h2 id="实物连接"><a href="#实物连接" class="headerlink" title="实物连接"></a>实物连接</h2><p>​<img src="/posts/990256180/3.%E5%AE%9E%E9%99%85%E8%BF%9E%E7%BA%BF.jpg" class title="This is an 2.涂鸦WIFI基本开发(二) image"><br>根据原理图进行相应连接，需要增加两个电容放在VCC和GND之间做滤波，分别是0.1UF和10UF。</p><h1 id="实验效果"><a href="#实验效果" class="headerlink" title="实验效果"></a>实验效果</h1><p>实验使用的是涂鸦自带调试工具(Tuya Module Debugging Assistant)进行连接，涂鸦调试工具模拟MCU和模块进行通讯，基本正常！<br>​<img src="/posts/990256180/4.%E6%B6%82%E9%B8%A6%E6%A8%A1%E7%BB%84%E8%B0%83%E8%AF%95%E5%8A%A9%E6%89%8B.png" class title="This is an 2.涂鸦WIFI基本开发(二) image"></p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>今天拿到 WBR3 模块后连接测试，使用的是 USB TO TLL 串口工具，工具中的电源有 3.3V、VCC、5V，本着稳妥方法使用的是3.3V电源，然而当一直没能连接。<br>起初根本没有任何反应，串口接收不到任何数据。以为商家发错模块，直到使用 A_16 连接查看串口数据时才发现一直有乱码发过来，也就是说模块是正确，乱码很像乐鑫ESP8266刚启动时发送过来的数据一样。<br>因此才怀疑是不是模块一直复位，也才进一步怀疑电源过低导致芯片无法启动。<br>后来使用万用表点看发现电源才3V，再点看VCC有3.6V，使用这个电源就能正常工作通讯。</p><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><p>1.<a href="https://zml3589110.github.io/posts/2486667095.html">涂鸦WIFI基本开发(一)</a><br>2.参考<a href="https://oshwhub.com/OrangePi/wen-shi-du-zhuan-gan-qi-wu-lian-wang-ce-shi">【涂鸦智能】云朵温度监视器</a>查看PCB</p>]]></content>
    
    
    <summary type="html">WIFI涂鸦模块开发电路硬件连接</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/WIFI/"/>
    
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="C语言" scheme="https://zml3589110.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="涂鸦" scheme="https://zml3589110.github.io/tags/%E6%B6%82%E9%B8%A6/"/>
    
    <category term="WBR3" scheme="https://zml3589110.github.io/tags/WBR3/"/>
    
    <category term="WIFI模块" scheme="https://zml3589110.github.io/tags/WIFI%E6%A8%A1%E5%9D%97/"/>
    
    <category term="蓝牙" scheme="https://zml3589110.github.io/tags/%E8%93%9D%E7%89%99/"/>
    
  </entry>
  
  <entry>
    <title>小熊派鸿蒙系统环境搭建</title>
    <link href="https://zml3589110.github.io/posts/1932715036.html"/>
    <id>https://zml3589110.github.io/posts/1932715036.html</id>
    <published>2022-05-10T15:40:12.515Z</published>
    <updated>2022-05-11T01:17:04.892Z</updated>
    
    <content type="html"><![CDATA[<h1 id="系统环境选择"><a href="#系统环境选择" class="headerlink" title="系统环境选择"></a>系统环境选择</h1><p>​</p><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote>]]></content>
    
    
    <summary type="html">使用小熊派开发板(BEARPI-HM.Nano)搭建鸿蒙开发环境</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="鸿蒙" scheme="https://zml3589110.github.io/tags/%E9%B8%BF%E8%92%99/"/>
    
    <category term="C语言" scheme="https://zml3589110.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="小熊派" scheme="https://zml3589110.github.io/tags/%E5%B0%8F%E7%86%8A%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>商业洞察力目录</title>
    <link href="https://zml3589110.github.io/posts/3924567325.html"/>
    <id>https://zml3589110.github.io/posts/3924567325.html</id>
    <published>2022-05-10T15:14:20.000Z</published>
    <updated>2022-05-16T07:08:18.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建模型，一个事物再复杂，也是几个固定要素组成的"><a href="#搭建模型，一个事物再复杂，也是几个固定要素组成的" class="headerlink" title="搭建模型，一个事物再复杂，也是几个固定要素组成的"></a>搭建模型，一个事物再复杂，也是几个固定要素组成的</h1><h2 id="第1章，系统、要素、连接关系"><a href="#第1章，系统、要素、连接关系" class="headerlink" title="第1章，系统、要素、连接关系"></a>第1章，系统、要素、连接关系</h2><h2 id="第2章，变量、因果链、增强回路、调节回路、滞后效应"><a href="#第2章，变量、因果链、增强回路、调节回路、滞后效应" class="headerlink" title="第2章，变量、因果链、增强回路、调节回路、滞后效应"></a>第2章，变量、因果链、增强回路、调节回路、滞后效应</h2><h2 id="第3章，流量、存量"><a href="#第3章，流量、存量" class="headerlink" title="第3章，流量、存量"></a>第3章，流量、存量</h2><h2 id="第4章，因果链"><a href="#第4章，因果链" class="headerlink" title="第4章，因果链"></a>第4章，因果链</h2><h2 id="第5章，增强回路"><a href="#第5章，增强回路" class="headerlink" title="第5章，增强回路"></a>第5章，增强回路</h2><h2 id="第6章，调节回路"><a href="#第6章，调节回路" class="headerlink" title="第6章，调节回路"></a>第6章，调节回路</h2><h2 id="第7章，滞后效应"><a href="#第7章，滞后效应" class="headerlink" title="第7章，滞后效应"></a>第7章，滞后效应</h2><h1 id="第一个训练场，解决难题，像商业顾问一样思考"><a href="#第一个训练场，解决难题，像商业顾问一样思考" class="headerlink" title="第一个训练场，解决难题，像商业顾问一样思考"></a>第一个训练场，解决难题，像商业顾问一样思考</h1><h2 id="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"><a href="#第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业" class="headerlink" title="第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业"></a>第8章，搭建模型，核心存量、关键因果链、增强回路、调节回路、防止滞后效应的饱和式创业</h2><h2 id="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"><a href="#第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）" class="headerlink" title="第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）"></a>第9章，系统体检，三个指标适应力（还原）、自组织性（升级）、层次性（隔离）</h2><h2 id="改变原因"><a href="#改变原因" class="headerlink" title="改变原因"></a>改变原因</h2><h3 id="第10章，还原大前提（失效）"><a href="#第10章，还原大前提（失效）" class="headerlink" title="第10章，还原大前提（失效）"></a>第10章，还原大前提（失效）</h3><h3 id="第11章，突围边界墙（滞涨）"><a href="#第11章，突围边界墙（滞涨）" class="headerlink" title="第11章，突围边界墙（滞涨）"></a>第11章，突围边界墙（滞涨）</h3><h3 id="第12章，安装缓冲器（波动）"><a href="#第12章，安装缓冲器（波动）" class="headerlink" title="第12章，安装缓冲器（波动）"></a>第12章，安装缓冲器（波动）</h3><h3 id="第13章，跨越临界点（突变）"><a href="#第13章，跨越临界点（突变）" class="headerlink" title="第13章，跨越临界点（突变）"></a>第13章，跨越临界点（突变）</h3><h2 id="改变模型"><a href="#改变模型" class="headerlink" title="改变模型"></a>改变模型</h2><h3 id="第14章，改变模型的案例"><a href="#第14章，改变模型的案例" class="headerlink" title="第14章，改变模型的案例"></a>第14章，改变模型的案例</h3><h1 id="第二个训练场是看透人心，个体、群体、集体管理千差万别"><a href="#第二个训练场是看透人心，个体、群体、集体管理千差万别" class="headerlink" title="第二个训练场是看透人心，个体、群体、集体管理千差万别"></a>第二个训练场是看透人心，个体、群体、集体管理千差万别</h1><h2 id="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"><a href="#第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）" class="headerlink" title="第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）"></a>第15章，机械系统、生物系统、生态系统、社会系统。参与约束、激励相容（集体）</h2><h2 id="第16章，群体压力（群体）"><a href="#第16章，群体压力（群体）" class="headerlink" title="第16章，群体压力（群体）"></a>第16章，群体压力（群体）</h2><h2 id="第17章，结构性张力（个人）"><a href="#第17章，结构性张力（个人）" class="headerlink" title="第17章，结构性张力（个人）"></a>第17章，结构性张力（个人）</h2><h2 id="第18章，创业之心（合伙人）"><a href="#第18章，创业之心（合伙人）" class="headerlink" title="第18章，创业之心（合伙人）"></a>第18章，创业之心（合伙人）</h2><h2 id="第19章，改变人心模型的案例"><a href="#第19章，改变人心模型的案例" class="headerlink" title="第19章，改变人心模型的案例"></a>第19章，改变人心模型的案例</h2><h1 id="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"><a href="#第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。" class="headerlink" title="第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。"></a>第三个训练场是预测未来。解释系统动力学中，用来绘制未来曲线的四大模型组。</h1><h2 id="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"><a href="#第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。" class="headerlink" title="第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。"></a>第20章，9个模型，公地悲剧、成长上限、成长与投资不足、舍本逐末、饮鸩止渴、意外之敌、富者越富、恶性竞争、目标侵蚀。</h2><h3 id="受阻模型：123-公地悲剧、成长上限、成长与投资不足"><a href="#受阻模型：123-公地悲剧、成长上限、成长与投资不足" class="headerlink" title="受阻模型：123 公地悲剧、成长上限、成长与投资不足"></a>受阻模型：123 公地悲剧、成长上限、成长与投资不足</h3><h3 id="失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”"><a href="#失控模型：456-舍本逐末、饮鸩止渴、意外之敌–“预测未来”" class="headerlink" title="失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”"></a>失控模型：456 舍本逐末、饮鸩止渴、意外之敌–“预测未来”</h3><p><strong>为什么越急于求成，越一事无成</strong></p><ol><li>舍本逐末基模(Shifting  the Burden)</li></ol><p>A和B两家“婚前培训”，都想融资100万，A拿来请最好的人打磨产品，让新婚夫妻心甘情愿付费学习；B拿来宣传课程社会价值，申请政府补贴，让新婚夫妻免费学。<br>B的商业模型符合典型的“舍本逐末”模型。</p><blockquote><p>舍本逐末的本质：一条根本解的调节回路，因为见效慢，遭遇一条症状解打压的增强回路。最终问题依旧，甚至更严重，直至崩盘。</p></blockquote><ol start="2"><li>饮鸩止渴基模(Fixes that Fail)</li></ol><p><strong>舍本逐末升级版，不同的是，“鸩”这种“症状解”，不是没有营养的“末”，而是杀人于无形的“毒”</strong></p><p>年中，某知识付费平台的销售业绩比预计差不少。销售总监很着急，打算推出“一价全包会员卡”，只需365就能收听所有内容。<br>这个调节回路可以大大提升短期收入，但也会深深伤害长期收入。就不会有人再打算用500、800甚至1000购买单独课程。相当于把未来的收入提前打折兑现。下半年的业绩问题，会因为上半年的吸血，而惨不忍睹</p><blockquote><p>饮鸩止渴的本质：一条短期见效的调节回路，激活了一条长期恶化的增强回路。回光返照之后，灯枯油尽，走向失控。</p></blockquote><p><strong>这个世界上放在我们前面的通常不是正确的选择和错误的选择。而是正确的选择和容易的选择。而容易的选择，常常有毒</strong></p><ol start="3"><li>意外之敌基模(Accidental Adversaries)</li></ol><p>上世纪70年代，宝洁为了打击竞争对手，提高市场占有率，突然大规模打折促销。没想到这一降，让盟友沃尔玛措手不及。低价带来的渠道利润骤减，让沃尔玛无以为继。然后沃尔玛大规模囤积产品，等恢复原价再卖。<br>这样的场景还发生在销售和工程师之间。</p><blockquote><p>意外之敌的本质：改善自己业绩的调节回路，意外激活了一条伤及盟友的增强回路。昔日盟友，反目成仇，最终两败俱伤</p></blockquote><p><strong>最需要学习时空模型组的，是面临艰难选择的创业者。人的天性是选最容易走的路。但是，正确的路，通常艰难；而难走的路，从不拥挤</strong></p><h3 id="通吃模型：7-富者越富"><a href="#通吃模型：7-富者越富" class="headerlink" title="通吃模型：7 富者越富"></a>通吃模型：7 富者越富</h3><h3 id="锁死模型：89-恶性竞争、目标侵蚀"><a href="#锁死模型：89-恶性竞争、目标侵蚀" class="headerlink" title="锁死模型：89 恶性竞争、目标侵蚀"></a>锁死模型：89 恶性竞争、目标侵蚀</h3><h2 id="第21章，公地悲剧、成长上限、成长与投资不足"><a href="#第21章，公地悲剧、成长上限、成长与投资不足" class="headerlink" title="第21章，公地悲剧、成长上限、成长与投资不足"></a>第21章，公地悲剧、成长上限、成长与投资不足</h2><h2 id="第22章，舍本逐末、饮鸩止渴、意外之敌"><a href="#第22章，舍本逐末、饮鸩止渴、意外之敌" class="headerlink" title="第22章，舍本逐末、饮鸩止渴、意外之敌"></a>第22章，舍本逐末、饮鸩止渴、意外之敌</h2><h2 id="第23章，赢家通吃"><a href="#第23章，赢家通吃" class="headerlink" title="第23章，赢家通吃"></a>第23章，赢家通吃</h2><h2 id="第24章，恶性竞争、目标侵蚀"><a href="#第24章，恶性竞争、目标侵蚀" class="headerlink" title="第24章，恶性竞争、目标侵蚀"></a>第24章，恶性竞争、目标侵蚀</h2><h2 id="第25章，案例练习"><a href="#第25章，案例练习" class="headerlink" title="第25章，案例练习"></a>第25章，案例练习</h2><h1 id="第四个训练场，终身练习。破除顽固的三大思想误区。"><a href="#第四个训练场，终身练习。破除顽固的三大思想误区。" class="headerlink" title="第四个训练场，终身练习。破除顽固的三大思想误区。"></a>第四个训练场，终身练习。破除顽固的三大思想误区。</h1><h2 id="第26章，散点思维和公式思维"><a href="#第26章，散点思维和公式思维" class="headerlink" title="第26章，散点思维和公式思维"></a>第26章，散点思维和公式思维</h2><h2 id="第27章，局部思维和层次思维"><a href="#第27章，局部思维和层次思维" class="headerlink" title="第27章，局部思维和层次思维"></a>第27章，局部思维和层次思维</h2><h2 id="第28章，静止思维和演化思维"><a href="#第28章，静止思维和演化思维" class="headerlink" title="第28章，静止思维和演化思维"></a>第28章，静止思维和演化思维</h2><h2 id="第29章，储备模型，建立模型，迁移模型"><a href="#第29章，储备模型，建立模型，迁移模型" class="headerlink" title="第29章，储备模型，建立模型，迁移模型"></a>第29章，储备模型，建立模型，迁移模型</h2><h2 id="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"><a href="#第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限" class="headerlink" title="第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限"></a>第30章，人类洞察力边界，复杂度灾难，概率因果，认知极限</h2>]]></content>
    
    
    <summary type="html">刘润商业洞察力30讲目录</summary>
    
    
    
    <category term="商业类" scheme="https://zml3589110.github.io/categories/%E5%95%86%E4%B8%9A%E7%B1%BB/"/>
    
    <category term="刘润" scheme="https://zml3589110.github.io/categories/%E5%95%86%E4%B8%9A%E7%B1%BB/%E5%88%98%E6%B6%A6/"/>
    
    
    <category term="商业" scheme="https://zml3589110.github.io/tags/%E5%95%86%E4%B8%9A/"/>
    
    <category term="目录" scheme="https://zml3589110.github.io/tags/%E7%9B%AE%E5%BD%95/"/>
    
    <category term="洞察力" scheme="https://zml3589110.github.io/tags/%E6%B4%9E%E5%AF%9F%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>1.使用abbrlink生成唯一链接</title>
    <link href="https://zml3589110.github.io/posts/238727531.html"/>
    <id>https://zml3589110.github.io/posts/238727531.html</id>
    <published>2022-05-10T12:42:20.000Z</published>
    <updated>2022-05-10T13:03:56.697Z</updated>
    
    <content type="html"><![CDATA[<p>​文章链接默认是以年、月、日、标题格式来生成，主要是通过修改hexo配置文件_config.yml来完成<br>​<img src="/posts/238727531/1.%E7%AB%99%E7%82%B9%E9%85%8D%E7%BD%AE.png" class title="This is an 1.使用abbrlink生成唯一链接 image"></p><p>设置之后发现报错，那是因为没有安装依赖，根据提示安装即可<br>    npm install hexo-abbrlink –save</p><pre><code>官方Sample The generated link will look like the following:crc16 &amp; hexhttps://post.zz173.com/posts/66c8.htmlcrc16 &amp; dechttps://post.zz173.com/posts/65535.htmlcrc32 &amp; hexhttps://post.zz173.com/posts/8ddf18fb.htmlcrc32 &amp; dechttps://post.zz173.com/posts/1690090958.html</code></pre><p>安装好之后重新生成文章时，md文件的Front-matter 内会增加abbrlink 字段,值为生成的ID，<br>这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址,<br>换句话说,就是本篇文章有了自己的专属链接。有了专属链接，找百度收录也就简单的多了</p><p>本文参考文章:</p><a class="btn-beautify block" href="https://zhuanlan.zhihu.com/p/112318081" title="利用Hexo-abbrlink插件生成唯一文章链接"><i class="far fa-hand-point-right"></i><span>利用Hexo-abbrlink插件生成唯一文章链接</span></a>]]></content>
    
    
    <summary type="html">使用abbrlink插件对文章生成唯一链接</summary>
    
    
    
    <category term="HEXO" scheme="https://zml3589110.github.io/categories/HEXO/"/>
    
    
    <category term="HEXO技术" scheme="https://zml3589110.github.io/tags/HEXO%E6%8A%80%E6%9C%AF/"/>
    
    <category term="abbrlink" scheme="https://zml3589110.github.io/tags/abbrlink/"/>
    
  </entry>
  
  <entry>
    <title>涂鸦WIFI基本开发(一)</title>
    <link href="https://zml3589110.github.io/posts/2486667095.html"/>
    <id>https://zml3589110.github.io/posts/2486667095.html</id>
    <published>2022-05-10T12:30:20.000Z</published>
    <updated>2022-05-10T17:46:16.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="因需将产品联网处理"><a href="#因需将产品联网处理" class="headerlink" title="因需将产品联网处理"></a>因需将产品联网处理</h1><p>​虽然一直在研究乐鑫esp8266，但发现接入云服务还需自己付费使用，因此就考虑找能免费对接网络的模块，很久以前玩过司南物联芯片，本想购入，但却发现主页都进不去，只好作罢。后来又找汉枫模块和涂鸦模块。</p><a class="btn-beautify block" href="http://www.hi-flying.com/index.php?route=product/category&path=135" title="汉枫模块"><i class="far fa-hand-point-right"></i><span>汉枫模块</span></a><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/MQTT-protocol?id=Kb65nphxrj8f1" title="涂鸦模块"><i class="far fa-hand-point-right"></i><span>涂鸦模块</span></a><p>汉枫看起来挺麻烦，加之比象花费太大时间！就选择涂鸦模块，因为涂鸦网站资料相对较多，也提供相对详细SDK，通过串口UART连接即可，根据说明，只要将其SDK-C导入到工程就可以使用。</p><h1 id="模块选择"><a href="#模块选择" class="headerlink" title="模块选择"></a>模块选择</h1><p>选择的是WBR3模块</p><a class="btn-beautify block" href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy" title="WBR3模块说明"><i class="far fa-hand-point-right"></i><span>WBR3模块说明</span></a><p>WBR3 是由涂鸦智能开发的一款低功耗嵌入式 Wi-Fi 加蓝牙模组。它由一个高集成度的无线射频芯片W701-VA2-CG构成，内置了 Wi-Fi 网络协议栈和丰富的库函数</p><ul><li>内置低功耗 KM4 MCU，可以兼作应用处理器</li><li>主频 100MHz</li><li>工作电压：3V-3.6V</li><li>外设：9×GPIOs, 1×UART, 1×Log_Tx</li><li>Wi-Fi&#x2F;蓝牙连通性<ul><li>802.11 B&#x2F;G&#x2F;N20</li><li>通道 <a href="mailto:&#x31;&#x2d;&#x31;&#x34;&#x40;&#50;&#x2e;&#x34;&#71;&#x48;&#122;">&#x31;&#x2d;&#x31;&#x34;&#x40;&#50;&#x2e;&#x34;&#71;&#x48;&#122;</a>(CH1-11 for US&#x2F;CA, CH1-13 for EU&#x2F;CN)</li><li>支持 WEP&#x2F;WPA&#x2F;WPA2&#x2F;WPA2 PSK（AES） 安全模式</li><li>支持 Bluetooth 4.2 Low Energy</li><li>802.11b 模式下 +20dBm 的输出功率</li><li>支持 SmartConfig 功能，包括 Android 和 iOS 设备</li><li>板载 PCB Onboard 天线</li><li>通过 CE、FCC 认证</li><li>工作温度：-20℃ to 85℃</li></ul></li></ul><h3 id="尺寸封装"><a href="#尺寸封装" class="headerlink" title="尺寸封装"></a>尺寸封装</h3><ul><li>WBR3 共有 2 排引脚（2×8），引脚间距为 2mm。</li><li>WBR3 尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×2.9±0.15 mm (H)。WBR3尺寸图如下图所示<img src="/posts/2486667095/1.WBR3%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">1.WBR3脚位图</li></ul><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote><h2 id="电气参数"><a href="#电气参数" class="headerlink" title="电气参数"></a>电气参数</h2><h3 id="绝对电气参数"><a href="#绝对电气参数" class="headerlink" title="绝对电气参数"></a>绝对电气参数</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ts</td><td align="left">存储温度</td><td align="left">-40</td><td align="left">105</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">供电电压</td><td align="left">-0.3</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">静电释放电压（人体模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">2</td><td align="left">KV</td></tr><tr><td align="left">静电释放电压（机器模型）</td><td align="left">TAMB-25℃</td><td align="left">-</td><td align="left">0.5</td><td align="left">KV</td></tr></tbody></table><h3 id="工作条件"><a href="#工作条件" class="headerlink" title="工作条件"></a>工作条件</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">最小值</th><th align="left">典型值</th><th align="left">最大值</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">Ta</td><td align="left">工作温度</td><td align="left">-20</td><td align="left">-</td><td align="left">85</td><td align="left">℃</td></tr><tr><td align="left">VDD</td><td align="left">工作电压</td><td align="left">3.0</td><td align="left">-</td><td align="left">3.6</td><td align="left">V</td></tr><tr><td align="left">VIL</td><td align="left">I&#x2F;O低电平输入</td><td align="left">-</td><td align="left">-</td><td align="left">0.8</td><td align="left">V</td></tr><tr><td align="left">VIH</td><td align="left">I&#x2F;O高电平输入</td><td align="left">2.0</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">VOL</td><td align="left">I&#x2F;O低电平输出</td><td align="left">-</td><td align="left">-</td><td align="left">0.4</td><td align="left">V</td></tr><tr><td align="left">VOH</td><td align="left">I&#x2F;O高电平输出</td><td align="left">2.4</td><td align="left">-</td><td align="left">-</td><td align="left">V</td></tr><tr><td align="left">Imax</td><td align="left">I&#x2F;O驱动电流</td><td align="left">-</td><td align="left">-</td><td align="left">16</td><td align="left">mA</td></tr><tr><td align="left">Cpad</td><td align="left">输入引脚电容</td><td align="left">-</td><td align="left">2</td><td align="left">-</td><td align="left">pF</td></tr></tbody></table><h3 id="射频功耗"><a href="#射频功耗" class="headerlink" title="射频功耗"></a>射频功耗</h3><ul><li><p>TX 连续发送时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">功率</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">17dBm</td><td align="left">217</td><td align="left">268</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11b 11Mbps</td><td align="left">18dBm</td><td align="left">231</td><td align="left">283</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">15dBm</td><td align="left">159</td><td align="left">188</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11g 54Mbps</td><td align="left">17.5dBm</td><td align="left">177</td><td align="left">213</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">13dBm</td><td align="left">145</td><td align="left">167</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11n BW20 MCS7</td><td align="left">16.5dBm</td><td align="left">165</td><td align="left">193</td><td align="left">mA</td></tr></tbody></table></li><li><p>RX 连续接收时功耗：</p><table><thead><tr><th align="left">符号</th><th align="left">模式</th><th align="left">平均值</th><th align="left">峰值（典型值）</th><th align="left">单位</th></tr></thead><tbody><tr><td align="left">IRF</td><td align="left">11B 11M</td><td align="left">63</td><td align="left">65</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11G 54M</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr><tr><td align="left">IRF</td><td align="left">11N HT20 MCS7</td><td align="left">65</td><td align="left">67</td><td align="left">mA</td></tr></tbody></table></li></ul><h2 id="射频参数"><a href="#射频参数" class="headerlink" title="射频参数"></a>射频参数</h2><h3 id="基本射频特性"><a href="#基本射频特性" class="headerlink" title="基本射频特性"></a>基本射频特性</h3><table><thead><tr><th align="left">参数项</th><th align="left">详细说明</th></tr></thead><tbody><tr><td align="left">频率范围</td><td align="left">2.400~2.4835GHz</td></tr><tr><td align="left">Wi-Fi标准</td><td align="left">IEEE 802.11b&#x2F;g&#x2F;n(通道 1-14)</td></tr><tr><td align="left">蓝牙标准</td><td align="left">蓝牙4.2</td></tr><tr><td align="left">数据传输速率</td><td align="left">11b:1,2,5.5, 11 (Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11g:6,9,12,18,24,36,48,54(Mbps)</td></tr><tr><td align="left">数据传输速率</td><td align="left">11n:HT20 MCS0~7</td></tr><tr><td align="left">天线类型</td><td align="left">PCB 天线，增益2.5dBi</td></tr></tbody></table><h2 id="天线信息"><a href="#天线信息" class="headerlink" title="天线信息"></a>天线信息</h2><h3 id="天线类型"><a href="#天线类型" class="headerlink" title="天线类型"></a>天线类型</h3><p>只有 PCB 板载天线接入方式，天线增益 2.5dBi。</p><h3 id="降低天线干扰"><a href="#降低天线干扰" class="headerlink" title="降低天线干扰"></a>降低天线干扰</h3><p>在 Wi-Fi 模组上使用 PCB 板载天线时，为确保 Wi-Fi 性能的最优化，建议模组天线部分和其他金属件距离至少在 15mm 以上。</p><h2 id="封装信息及生产指导"><a href="#封装信息及生产指导" class="headerlink" title="封装信息及生产指导"></a>封装信息及生产指导</h2><h3 id="机械尺寸"><a href="#机械尺寸" class="headerlink" title="机械尺寸"></a>机械尺寸</h3><p>WBR3的PCB机械尺寸大小：16±0.35 mm (W)×24±0.35 mm (L) ×0.8±0.1 mm (H)。WBR3的机械尺寸如下图所示。</p><img src="/posts/2486667095/3.%E8%84%9A%E4%BD%8D%E5%9B%BE.png" class title="This is an 1.涂鸦WIFI基本开发(一) image">]]></content>
    
    
    <summary type="html">对学习物联网WIFI的一些知识笔记</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="C语言" scheme="https://zml3589110.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="涂鸦" scheme="https://zml3589110.github.io/tags/%E6%B6%82%E9%B8%A6/"/>
    
  </entry>
  
  <entry>
    <title>mysql重置密码</title>
    <link href="https://zml3589110.github.io/posts/643139453.html"/>
    <id>https://zml3589110.github.io/posts/643139453.html</id>
    <published>2022-05-10T08:52:20.000Z</published>
    <updated>2022-05-18T08:52:19.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>因为最近在研究 VUE连接 PHP和mysql，而之前安装过mysql后忘记密码，遂找办法重置密码！</p><h1 id="验证可行步骤"><a href="#验证可行步骤" class="headerlink" title="验证可行步骤"></a>验证可行步骤</h1><ol><li><p>打开命令窗口cmd，输入命令：net stop mysql，停止MySQL服务 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql</span><br></pre></td></tr></table></figure></li><li><p>开启跳过密码验证登录的MySQL服务<br>输入命令  mysqld –console –skip-grant-tables –shared-memory </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --console --skip-grant-tables --shared-memory </span><br></pre></td></tr></table></figure></li><li><p>再打开一个新的cmd，无密码登录MySQL，输入登录命令：mysql -u root -p</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li><li><p>密码置为空，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br><span class="line"></span><br><span class="line">  update user set authentication_string&#x3D;&#39;&#39; where user&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure> <img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121131355851-1940142196.png"></li><li><p>退出mysql，执行命令：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure></li><li><p>关闭以-console –skip-grant-tables –shared-memory 启动的MySQL服务，</p></li><li><p>打开命令框，输入：net start mysql  启动MySQL服务，一管理员的身份运行cmd。</p></li><li><p>步骤4密码已经置空，所以无密码状态登录MySQL，输入登录命令：mysql -u root -p</p></li><li><p>利用上一篇博客中更改密码的命令，成功修改密码，如下图：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;新密码&#39;;</span><br></pre></td></tr></table></figure><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132058721-318719011.png">10. 验证更改后密码正确登录<p>输入quit，退出当前登录，输入登录命令：mysql -u root -p<br><img src="https://img2018.cnblogs.com/blog/137142/201811/137142-20181121132340755-1605186062.png"></p><p>输入密码，成功登录，到此，重置密码结束。</p><h1 id="文章来源"><a href="#文章来源" class="headerlink" title="文章来源"></a>文章来源</h1><ol><li><a href="https://www.cnblogs.com/wsl-/p/10688292.html">mysql重置密码</a></li></ol>]]></content>
    
    
    <summary type="html">mysql数据库忘记密码后对密码进行重置</summary>
    
    
    
    <category term="编程来" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%A5/"/>
    
    <category term="数据库" scheme="https://zml3589110.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/tags/mysql/"/>
    
    <category term="重置" scheme="https://zml3589110.github.io/tags/%E9%87%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>bat脚本相关技巧</title>
    <link href="https://zml3589110.github.io/posts/387550601.html"/>
    <id>https://zml3589110.github.io/posts/387550601.html</id>
    <published>2022-05-10T07:52:20.000Z</published>
    <updated>2022-05-18T08:52:19.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="当前盘符-x2F-当前bat路径"><a href="#当前盘符-x2F-当前bat路径" class="headerlink" title="当前盘符&#x2F;当前bat路径"></a><a href="https://blog.csdn.net/wumingxiao001bei/article/details/107859035">当前盘符&#x2F;当前bat路径</a></h1><h2 id="bat脚本显示当前盘符、当前路径、当前bat脚本路径"><a href="#bat脚本显示当前盘符、当前路径、当前bat脚本路径" class="headerlink" title="bat脚本显示当前盘符、当前路径、当前bat脚本路径"></a>bat脚本显示当前盘符、当前路径、当前bat脚本路径</h2><p>当前盘符 %<del>d0、当前路径 %cd%、当前执行命令行 %0、当前bat文件路径 %</del>dp0、当前bat文件短路径 %~dp0<br>编写代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">::关闭<span class="built_in">echo</span>回显</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line">::当前盘符</span><br><span class="line"><span class="built_in">echo</span> current pan : %~d0</span><br><span class="line"></span><br><span class="line">::当前路径</span><br><span class="line"><span class="built_in">echo</span> current path : %<span class="built_in">cd</span>%</span><br><span class="line"></span><br><span class="line">::当前执行命令行</span><br><span class="line"><span class="built_in">echo</span> current cmd : %0</span><br><span class="line"></span><br><span class="line">::当前bat文件路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::当前bat文件短路径</span><br><span class="line"><span class="built_in">echo</span> the bat’s path : %~dp0</span><br><span class="line"></span><br><span class="line">::暂停bat脚本</span><br><span class="line">Pause</span><br></pre></td></tr></table></figure><p>测试效果:<br><img src="https://img-blog.csdnimg.cn/20200807113746849.png"></p>]]></content>
    
    
    <summary type="html">常用 BAT 相关知识</summary>
    
    
    
    <category term="小插件类" scheme="https://zml3589110.github.io/categories/%E5%B0%8F%E6%8F%92%E4%BB%B6%E7%B1%BB/"/>
    
    <category term="BAT" scheme="https://zml3589110.github.io/categories/BAT/"/>
    
    
    <category term="计算机" scheme="https://zml3589110.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="bat" scheme="https://zml3589110.github.io/tags/bat/"/>
    
    <category term="脚本" scheme="https://zml3589110.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="cmd" scheme="https://zml3589110.github.io/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>图标异常处理</title>
    <link href="https://zml3589110.github.io/posts/2606890055.html"/>
    <id>https://zml3589110.github.io/posts/2606890055.html</id>
    <published>2022-05-10T06:21:20.000Z</published>
    <updated>2022-05-17T06:27:47.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="异常原因"><a href="#异常原因" class="headerlink" title="异常原因"></a>异常原因</h1><p>原本想安装 xampp8.0.0.1 软件拿来做简单服务搭建，安装结束后发现 navicat 和 Postman 这两个程序图标异常<br>怀疑是安装这个程序的 mysql 篡改了内容，卸载后删除相应文件就可以了</p><h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><ol><li><p>运行 %localappdata%<br>自动打开了 C:\Users\Administrator\AppData\Local 文件夹</p></li><li><p>删除文件 IconCach.db</p></li><li><p>组合键Ctrl+Shift+Esc 打开任务管理器<br>选择 Windows 资源管理–&gt;重新启动即可</p></li></ol><p><a href="http://www.360doc.com/content/22/0404/21/47597997_1024856093.shtml">桌面图标异常怎么办？</a></p>]]></content>
    
    
    <summary type="html">桌面图标异常显示处理</summary>
    
    
    
    <category term="小插件类" scheme="https://zml3589110.github.io/categories/%E5%B0%8F%E6%8F%92%E4%BB%B6%E7%B1%BB/"/>
    
    
    <category term="计算机" scheme="https://zml3589110.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="桌面图标异常" scheme="https://zml3589110.github.io/tags/%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E5%BC%82%E5%B8%B8/"/>
    
    <category term="xampp" scheme="https://zml3589110.github.io/tags/xampp/"/>
    
  </entry>
  
  <entry>
    <title>收集好网站</title>
    <link href="https://zml3589110.github.io/posts/2614359431.html"/>
    <id>https://zml3589110.github.io/posts/2614359431.html</id>
    <published>2022-05-04T01:36:15.083Z</published>
    <updated>2022-05-04T07:19:23.338Z</updated>
    
    <content type="html"><![CDATA[<p>配置美化相关</p><p>hexo个人博客搭建（二）butterfly主题配置: <a href="https://blog.csdn.net/YR_112233/article/details/122778691">Link</a></p><p>图片显示相关<br>Hexo + Typora + 开发Hexo插件 解决图片路径不一致: <a href="https://moeci.com/posts/hexo-typora/">Link</a><br>Hexo引用显示本地图片: <a href="https://www.xilixili.net/2019/03/26/hexo-markdown-use-images/">Link</a><br>Hexo butterfly 自定义文章封面 &amp;&amp; 主页顶部图片更改: <a href="https://blog.csdn.net/qq_43857095/article/details/108306164">Link</a></p><p>部署相关<br>Hexo 部署到 Gitee: <a href="https://blog.csdn.net/qq_38157825/article/details/112783631">Link</a><br>Hexo阶段三 – 将Hexo部署到github: <a href="https://blog.csdn.net/Night__breeze/article/details/117607049">Link</a></p><p>导航栏相关<br>Hexo 修改导航栏、标签、分类、归档图标，一分钟搞定: <a href="https://blog.csdn.net/h_kaka/article/details/119655493">Link</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;配置美化相关&lt;/p&gt;
&lt;p&gt;hexo个人博客搭建（二）butterfly主题配置: &lt;a href=&quot;https://blog.csdn.net/YR_112233/article/details/122778691&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图片显示相关&lt;br&gt;H</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Butterfly主题使用笔记</title>
    <link href="https://zml3589110.github.io/posts/59422436.html"/>
    <id>https://zml3589110.github.io/posts/59422436.html</id>
    <published>2022-05-04T01:00:21.561Z</published>
    <updated>2022-05-04T07:19:23.308Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://butterfly.js.org/posts/4aa8abbe/">Butterfly 安装文档(三) 主题配置-1</a><br>目录</p><ol><li>语言 2. 网站资料 3. 导航菜单</li><li>代码 4.1. 代码高亮主题 4.2. 代码复製 4.3. 代码框展开&#x2F;关闭 4.4. 代码换行 4.5. 代码高度限制</li><li>社交图标 6. 主页文章节选(自动节选和文章页description) 7. 顶部图 8. 文章置顶</li><li>文章封面 10. 文章页相关配置 10.1. 文章meta显示 10.2. 文章版权 10.3. 文章打赏<br>10.4. TOC 10.4.1. 为特定的文章配置 10.5. 相关文章 10.6. 文章锚点 10.7. 文章过期提醒<br>10.8. 文章编辑按钮 10.9. 文章分页按钮</li><li>头像 12. 图片描述 13. 复製相关配置 14. Footer 设置<br>14.1. 博客年份 14.2. 页脚自定义文本</li><li>右下角按钮 15.1. 简繁转换 15.2. 夜间模式 15.3. 閲读模式 15.4. 按钮排序</li><li>侧边栏设置 16.1. 侧边排版 16.2. 访问人数 busuanzi (UV 和 PV) 16.3. 运行时间<br>16.4. 最新评论 16.5. 自定义添加栏目</li><li>标籤外挂（Tag Plugins） 17.1. Note (Bootstrap Callout) 17.2. Gallery相册图库<br>17.3. Gallery相册 17.4. tag-hide 17.5. mermaid 17.6. Tabs 17.7. Button<br>17.8. inlineImg 17.9. label 17.10. timeline 17.11. flink</li></ol><p><a href="https://butterfly.js.org/posts/ceeb73f/">Butterfly 安装文档(四) 主题配置-2</a><br>目录</p><ol><li>评论 2. 在綫聊天 3. 分享 4. 搜索系统 5. 网站验证 6. 分析统计 7. 广告</li><li>Math 数学 9. 美化&#x2F;特效 9.1. 自定义主题色 9.2. 网站背景 9.3. footer 背景<br>9.4. 打字效果 9.5. 背景特效 9.6. 鼠标点击效果 9.7. 页面美化 9.8. 自定义字体和字体大小<br>9.8.1. 全局字体 9.8.2. Blog 标题字体 9.9. 网站副标题<br>9.10. 主页top_img显示大小 9.11. 页面加载动画preloader</li><li>PWA 11. 字数统计 12. 图片大图查看模式 13. Snackbar 弹窗 </li><li>其它配置 14.1. CSS 前缀 14.2. Open Graph 14.3. Instantpage<br>14.4. Pangu 15. Pjax 16. Inject 17. CDN</li></ol><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://butterfly.js.org/posts/4aa8abbe/&quot;&gt;Butterfly 安装文档(三) 主题配置-1&lt;/a&gt;&lt;br&gt;目录&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;语言 2. 网站资料 3. 导航菜单&lt;/li&gt;
&lt;li&gt;代码 4.1. 代码</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>433无线遥控使用说明</title>
    <link href="https://zml3589110.github.io/posts/253476467.html"/>
    <id>https://zml3589110.github.io/posts/253476467.html</id>
    <published>2022-05-03T09:31:20.000Z</published>
    <updated>2022-05-04T07:19:23.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="产品实物图说明"><a href="#产品实物图说明" class="headerlink" title="产品实物图说明"></a>产品实物图说明</h1><p>(图: 1.00安装git-vim-make程序)</p><img src="/posts/253476467/aaa.jpg" class title="This is an 433无线遥控 image"><img src="/posts/253476467/0.0%E4%BA%A7%E5%93%81%E5%9B%BE%E6%A6%82%E8%A7%88.jpg" class title="This is an 433无线遥控 image"> <h1 id="使用步骤说明"><a href="#使用步骤说明" class="headerlink" title="使用步骤说明"></a>使用步骤说明</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;<span class="number">20</span>)&#123;j++;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5  </pre></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你想把一些文字、内容隐藏起来，并提供按钮让用户点击显示。可以使用这个标籤外挂。</p><p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">因为西装裤(C装酷)</span></span></p><p>门里站着一个人? <span class="hide-inline"><button type="button" class="hide-button" style>Click  </button><span class="hide-content">闪</span></span></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>block独立的block隐藏内容，可以隐藏很多内容，包括图片，代码块等等</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><p>查看答案</p><div class="hide-block"><button type="button" class="hide-button" style>查看答案    </button><div class="hide-content"><p>傻子，怎么可能有答案</p></div></div><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>如果你需要展示的内容太多，可以把它隐藏在收缩框里，需要时再把它展开。</p><p>( display 不能包含英文逗号，可用&amp;sbquo;)</p><details class="toggle"><summary class="toggle-button" style>Butterfly安装方法</summary><div class="toggle-content"><p>在你的博客根目录里</p><p>git clone -b master <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p><p>如果想要安装比较新的dev分支，可以</p><p>git clone -b dev <a href="https://github.com/jerryc127/hexo-theme-butterfly.git">https://github.com/jerryc127/hexo-theme-butterfly.git</a> themes&#x2F;Butterfly</p></div></details><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify " href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify outline" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><br>This is my website, click the button <a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><a class="btn-beautify block" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block center larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><a class="btn-beautify block right outline larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>主题中的图片都是默认以块级元素显示，如果你想以内联元素显示，可以使用这个标签外挂。</p><p>你看我长得漂亮不</p><p><img src="https://i.loli.net/2021/03/19/2P6ivUGsdaEXSFI.png"></p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>高亮所需的文字</p><p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。<br>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p><p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p><p>可在任何界面插入类似友情链接列表效果</p><p>内容格式与友情链接界面一样，支持 yml 格式</p><div class="flink"><div class="flink-name">友情链接</div><div class="flink-desc">那些人，那些事</div> <div class="flink-list">          <div class="flink-list-item">            <a href="https://jerryc.me/" title="JerryC" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://jerryc.me/img/avatar.png" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="JerryC">              </div>              <div class="flink-item-name">JerryC</div>               <div class="flink-item-desc" title="今日事,今日毕">今日事,今日毕</div>            </a>          </div>          <div class="flink-list-item">            <a href="https://hexo.io/zh-tw/" title="Hexo" target="_blank">              <div class="flink-item-icon">                <img class="no-lightbox" src="https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg" onerror="this.onerror=null;this.src="/img/friend_404.gif"" alt="Hexo">              </div>              <div class="flink-item-name">Hexo</div>               <div class="flink-item-desc" title="快速、简单且强大的网誌框架">快速、简单且强大的网誌框架</div>            </a>          </div></div></div>]]></content>
    
    
    <summary type="html">对学习jave的一些知识笔记</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    
    <category term="java学习标签" scheme="https://zml3589110.github.io/tags/java%E5%AD%A6%E4%B9%A0%E6%A0%87%E7%AD%BE/"/>
    
    <category term="Android" scheme="https://zml3589110.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
