<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2024-01-10T08:25:22.436Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HomeAssistant天气插件之和风天气</title>
    <link href="https://zml3589110.github.io/posts/593985454.html"/>
    <id>https://zml3589110.github.io/posts/593985454.html</id>
    <published>2024-01-10T07:45:20.000Z</published>
    <updated>2024-01-10T08:25:22.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="插件主要功能"><a href="#插件主要功能" class="headerlink" title="插件主要功能"></a>插件主要功能</h1><p>当前天气、空气质量、生活指数建议</p><p>灾害天气预警</p><p>小时级天气预报、七日天气预报</p><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><img src="/posts/undefined/image-20240110154841461.png" class="" title="天气预警、天气预报总览"><img src="/posts/undefined/image-20240110154917608.png" class="" title="image-20240110154917608"><img src="/posts/undefined/image-20240110155255963.png" class="" title="image-20240110155255963"><img src="/posts/undefined/image-20240110155311557.png" class="" title="image-20240110155311557"><img src="/posts/undefined/image-20240110155340605.png" class="" title="image-20240110155340605"><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我使用的插件最早引用自瀚思彼岸论坛Golden_Soap大佬的插件(<a href="https://bbs.hassbian.com/thread-3971-1-1.html">https://bbs.hassbian.com/thread-3971-1-1.html</a>),<br>但该插件一直没有更新过配置，导致我的环境一直无法运行，自己肝的原因主要是懒得改之前的参数配置，换插件全得改一遍，有的数据还没了，又正好借着这个机会再学习一边插件，所以就有了这个插件，废话不说上地址</p><h1 id="仓库地址"><a href="#仓库地址" class="headerlink" title="仓库地址"></a>仓库地址</h1><p><a href="https://github.com/c1pher-cn/heweather">https://github.com/c1pher-cn/heweather</a></p><h1 id="插件说明"><a href="#插件说明" class="headerlink" title="插件说明"></a>插件说明</h1><ol><li><p>使用和风官方apiv7版本</p></li><li><p>需要使用开发者账号里的免费api，<strong>普通用户请务必升级到开发者账号</strong>（免费，但要提交身份证审核，api权限会比普通用户高一些）<a href="https://console.qweather.com/#/console">https://console.qweather.com/#/console</a></p></li><li><p>appkey申请需要先<a href="https://console.qweather.com/#/apps">创建应用</a>,后选添加数据key，选wabapi即可</p></li><li><p>配置里的Location_ID 如何获取？详见<a href="https://github.com/qwd/LocationList/blob/master/China-City-List-latest.csv">https://github.com/qwd/LocationList/blob/master/China-City-List-latest.csv</a></p></li></ol><h1 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h1><ol start="0"><li>下载相关文件</li></ol><p>先按github上的文件目录格式把对应文件拷贝到HomeAssistant的custom_components目录，</p><p>想用hacs商店的同学需要晚一点（HACS商店的配置预计会在12月底左右上线，9月就提交了，审批进度贼慢，在hacs商店里搜索haweather后安装后进行yaml配置编写）</p><p>正确下载文件后的文件目录格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">custom_components/</span><br><span class="line"></span><br><span class="line">--heweather</span><br><span class="line"></span><br><span class="line">--manifest.json     </span><br><span class="line">    </span><br><span class="line">--sensor.py         </span><br><span class="line">    </span><br><span class="line">--weather.py</span><br></pre></td></tr></table></figure><p><strong>注意，无论使用哪种安装方式，本插件都必须进行下面的yaml配置后才能看到具体信息！！！</strong></p><ol><li>weather下的heweather(七日天气预报)</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">weather:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">heweather</span></span><br><span class="line">    <span class="attr">location:</span> <span class="number">101210106</span>    <span class="comment"># 填写你所在区域代码Location_ID,https://github.com/qwd/LocationList/blob/master/China-City-List-latest.csv</span></span><br><span class="line">    <span class="attr">key:</span> <span class="string">ABCDE</span>             <span class="comment"># api平台申请的key</span></span><br></pre></td></tr></table></figure><ol start="2"><li>sensor下的heweather（天气情况、空气质量、自然灾害预警）<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sensor:</span></span><br><span class="line">　<span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">heweather</span></span><br><span class="line">　　<span class="attr">location:</span> <span class="number">101210106</span>     <span class="comment"># 填写你所在区域代码Location_ID,https://github.com/qwd/LocationList/blob/master/China-City-List-latest.csv</span></span><br><span class="line">　　<span class="attr">key:</span> <span class="string">ABCDE</span>              <span class="comment"># api平台申请的key</span></span><br><span class="line">        　<span class="attr">disasterlevel:</span> <span class="number">3</span></span><br><span class="line">　　<span class="attr">disastermsg:</span> <span class="string">allmsg</span></span><br></pre></td></tr></table></figure>disasterlevel的数字表示关注的自然灾害等级，配置3表示关注 &gt;&#x3D;3级的灾害<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="string">Standard</span></span><br><span class="line"><span class="number">2</span> <span class="string">Minor</span></span><br><span class="line"><span class="number">3</span> <span class="string">Moderate</span></span><br><span class="line"><span class="number">4</span> <span class="string">Major</span></span><br><span class="line"><span class="number">5</span> <span class="string">Severe</span></span><br><span class="line"><span class="number">6</span> <span class="string">Extreme</span></span><br></pre></td></tr></table></figure><strong>disastermsg表示灾害预警是否显示灾害的明细信息</strong></li></ol><p><strong>title  只显示标题</strong></p><p><strong>allmsg 显示标题+明细信息</strong></p><ol start="3"><li>相关传感器名称：</li></ol><p>已有中文翻译配出来就能看到，文档里我就不对应写了，另外如果配置多个heweather或者修改过key和location信息的话，找不到新实体时可以注意一下，新实体id后面会新增一个_2 _3</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">天气预报，７天，２４小时级别都在这里面</span></span><br><span class="line"></span><br><span class="line"><span class="string">weather.he_feng_tian_qi</span></span><br><span class="line"></span><br><span class="line"><span class="string">生活指数</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.shu_gua_du_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.kong_qi_wu_ran_kuo_san_tiao_jian_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.lu_xing_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.chuan_yi_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.fang_shai_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.jiao_tong_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.guo_min_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.gan_mou_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.xi_che_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.zi_wai_xian_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.tai_yang_jing_zhi_shu</span></span><br><span class="line"></span><br><span class="line"><span class="string">空气信息</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_level</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_category</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_qlty</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_primary</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_pm25</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_pm10</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_no2</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_so2</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_o3</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_dew</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_cloud</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_precip</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_pressure</span></span><br><span class="line"></span><br><span class="line"><span class="string">sensor.heweather_vis</span></span><br></pre></td></tr></table></figure><ol start="4"><li>关于两个预警信息</li></ol><p>灾害预警有具体有配置实体：sensor.heweather_disaster_warn，为了方便做相关自动化，传感器状态为on时，表示有相关灾害，灾害信息存在States里</p><img src="/posts/undefined/image-20240110160125898.png" class="" title="image-20240110160125898"><p>近一小时天气预警：</p><p>需要自己在template里配置一个sensor模板，可以参考我的配置（读取小时级天气预报，然后判断是否有雨雪天气，有的话sensor的状态会被置为on，同时sensor的states的值即为具体的天气信息和降水概率）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">template:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">trigger:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">time_pattern</span></span><br><span class="line">       <span class="attr">hours:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">   <span class="attr">action:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">weather.get_forecast</span></span><br><span class="line">       <span class="attr">target:</span></span><br><span class="line">         <span class="attr">entity_id:</span> <span class="string">weather.he_feng_tian_qi</span></span><br><span class="line">       <span class="attr">data:</span></span><br><span class="line">         <span class="attr">type:</span> <span class="string">hourly</span></span><br><span class="line">       <span class="attr">response_variable:</span> <span class="string">forecast</span></span><br><span class="line">   <span class="attr">sensor:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">heweather_rain_warn</span></span><br><span class="line">       <span class="attr">unique_id:</span> <span class="string">heweather_rain_warn</span></span><br><span class="line">       <span class="attr">state:</span> <span class="string">&gt;</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">forecast.forecast</span>[<span class="number">0</span>]<span class="string">.condition</span> <span class="string">in</span> <span class="string">(&#x27;sunny&#x27;</span>,<span class="string">&#x27;cloudy&#x27;</span>,<span class="string">&#x27;partlyclou                                                          dy&#x27;</span>,<span class="string">&#x27;windy&#x27;</span><span class="string">)</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">off</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">else</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">on</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">       <span class="attr">attributes:</span></span><br><span class="line">         <span class="attr">states:</span> <span class="string">&gt;</span></span><br><span class="line">                  &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">forecast.forecast</span>[<span class="number">0</span>]<span class="string">.condition</span> <span class="string">in</span> <span class="string">(&#x27;sunny&#x27;</span>,<span class="string">&#x27;cloudy&#x27;</span>,<span class="string">&#x27;pa                                                          rtlycloudy&#x27;</span>,<span class="string">&#x27;windy&#x27;</span><span class="string">)</span> <span class="string">%</span>&#125;</span><br><span class="line">                   <span class="string">未来一小时，天气&#123;&#123;forecast.forecast[0].text&#125;&#125;，没有降雨</span></span><br><span class="line">                  &#123;<span class="string">%</span> <span class="string">else</span> <span class="string">%</span>&#125;</span><br><span class="line">                   <span class="string">接下来一小时会有&#123;&#123;forecast.forecast[0].text&#125;&#125;，降水概率为</span> &#123;&#123;                                                           <span class="string">forecast.forecast</span>[<span class="number">0</span>]<span class="string">.precipitation_probability</span>&#125;&#125;<span class="string">%</span></span><br><span class="line">                  &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/posts/undefined/image-20240110160208167.png" class="" title="image-20240110160208167"><h1 id="自动化能做的"><a href="#自动化能做的" class="headerlink" title="自动化能做的"></a>自动化能做的</h1><p>每日起床第一次出卧室的天气tts播报，或类似的日常播报需求</p><p>根据自然灾害预警的信息发信息通知</p><p>根据小时天气预警的内容进行信息通告 </p><p>》》》<a href="https://www.bilibili.com/read/cv18078640/">和风天气自动化分享</a><br><strong>就是下文内容</strong></p><h1 id="HomeAssistant-和风天气插件的自动化分享"><a href="#HomeAssistant-和风天气插件的自动化分享" class="headerlink" title="HomeAssistant 和风天气插件的自动化分享"></a>HomeAssistant 和风天气插件的自动化分享</h1><h2 id="前置要求"><a href="#前置要求" class="headerlink" title="前置要求"></a>前置要求</h2><ol><li><p>HomeAssistant （这个都没有的话您可以关网页了）</p></li><li><p>和风天气插件<br>github地址：<a href="https://github.com/c1pher-cn/heweather">https://github.com/c1pher-cn/heweather</a><br>之前的专栏介绍：<a href="https://www.bilibili.com/read/cv17792717">https://www.bilibili.com/read/cv17792717</a><br>（优先看github，有些bug修了可能来不及更新文章，另外其他插件也是大同小异，可供参考）</p></li><li><p>tts<br>我这里用的我家的homepodmini，edge_tts 每家的设备不一样，选择适合你的</p></li><li><p>消息推送<br>是我这里使用的是iosApp内置的推送功能，推送给我和我老婆两个人的手机</p></li></ol><h2 id="我做了哪些天气自动化："><a href="#我做了哪些天气自动化：" class="headerlink" title="我做了哪些天气自动化："></a>我做了哪些天气自动化：</h2><ol><li>雨雪天气报，tts播报，手机推送</li><li>自然灾害预警，tts播报，手机推送</li><li>每天起床后的第一次tts天气播报</li></ol><h2 id="天气、灾害预警"><a href="#天气、灾害预警" class="headerlink" title="天气、灾害预警"></a>天气、灾害预警</h2><p>预警中主要使用和风天气插件的这个两个实体<br>sensor.heweather_rain_warn      （模板配置）<br>sensor.heweather_disaster_warn（插件自带）<br>在2023年11月更新heweather之后，天气预警需要手工在template里配置，配置方式详见<a href="https://www.bilibili.com/read/cv17792717">https://www.bilibili.com/read/cv17792717</a></p><p>新的传感器在写代码的时候就考虑了自动化的实现，所以我们只判断传感器状态是否为on即可，on即说明对应传感器有异常天气，然后在tts或者通知里将属性中的status打出来即可，已经提前设置好。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">alias:</span> <span class="string">一小时天气预警</span></span><br><span class="line"><span class="attr">trigger:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">state</span></span><br><span class="line">    <span class="attr">entity_id:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sensor.heweather_rain_warn</span></span><br><span class="line">    <span class="attr">from:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">    <span class="attr">to:</span> <span class="string">&quot;on&quot;</span></span><br><span class="line"><span class="attr">action:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">notify.mobile_app_iphone_xr_2</span></span><br><span class="line">    <span class="attr">data:</span></span><br><span class="line">      <span class="attr">title:</span> <span class="string">天气预警</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">&quot;注意注意! <span class="template-variable">&#123;&#123;state_attr(&#x27;sensor.heweather_rain_warn&#x27;, &#x27;states&#x27;)&#125;&#125;</span> &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">tts.edge_tts_say</span></span><br><span class="line">    <span class="attr">data_template:</span></span><br><span class="line">      <span class="attr">entity_id:</span> <span class="string">media_player.ke_ting</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">&quot;注意注意! <span class="template-variable">&#123;&#123;state_attr(&#x27;sensor.heweather_rain_warn&#x27;, &#x27;states&#x27;)&#125;&#125;</span> &quot;</span></span><br><span class="line"><span class="attr">initial_state:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">alias:</span> <span class="string">自然灾害预警</span></span><br><span class="line"><span class="attr">trigger:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">state</span></span><br><span class="line">    <span class="attr">entity_id:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">sensor.heweather_disaster_warn</span></span><br><span class="line">    <span class="attr">from:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">    <span class="attr">to:</span> <span class="string">&quot;on&quot;</span></span><br><span class="line"><span class="attr">action:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">tts.edge_tts_say</span></span><br><span class="line">    <span class="attr">data_template:</span></span><br><span class="line">      <span class="attr">entity_id:</span> <span class="string">media_player.ke_ting</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">&quot;注意注意!!! <span class="template-variable">&#123;&#123;state_attr(&#x27;sensor.heweather_disaster_warn&#x27;,&#x27;states&#x27;) &#125;&#125;</span> &quot;</span></span><br><span class="line"><span class="attr">initial_state:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="起床天气播报"><a href="#起床天气播报" class="headerlink" title="起床天气播报"></a>起床天气播报</h2><p>天气播报这里我做了一个脚本来实现的，因为播报这个动作是很多情况都可能需要的，比如起床需要播报，想出家门或者家里其他人也想触发的情况，避免重复，我写了一个播报脚本，然后需要触发播报的时候只要触发脚本即可。</p><ol><li>起床触发-&gt;天气播报</li><li>按钮触发-&gt;天气播报</li></ol><p><strong>天气播报脚本</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">alias:</span> <span class="string">客厅广播</span></span><br><span class="line"><span class="attr">sequence:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">service:</span> <span class="string">tts.edge_tts_say</span></span><br><span class="line">    <span class="attr">data_template:</span></span><br><span class="line">      <span class="attr">entity_id:</span> <span class="string">media_player.ke_ting</span></span><br><span class="line">      <span class="attr">message:</span> <span class="string">&gt;</span></span><br><span class="line">        &#123;<span class="string">%</span> <span class="string">set</span> <span class="string">timenow</span> <span class="string">=</span> <span class="string">now().time().strftime(&quot;%H&quot;)</span> <span class="string">|</span> <span class="string">int</span> <span class="string">%</span>&#125;</span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">timenow</span> <span class="string">&gt;</span> <span class="number">8</span> <span class="string">and</span> <span class="string">timenow</span> <span class="string">&lt;</span> <span class="number">12</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">主人，早上好</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">elif</span> <span class="string">timenow</span> <span class="string">&gt;=</span> <span class="number">12</span> <span class="string">and</span> <span class="string">timenow</span> <span class="string">&lt;</span> <span class="number">14</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">主人，中午好</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">elif</span> <span class="string">timenow</span> <span class="string">&gt;=</span> <span class="number">14</span> <span class="string">and</span> <span class="string">timenow</span> <span class="string">&lt;</span> <span class="number">18</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">主人，下午好</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">elif</span> <span class="string">timenow</span> <span class="string">&gt;=</span> <span class="number">18</span> <span class="string">and</span> <span class="string">timenow</span> <span class="string">&lt;</span> <span class="number">23</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">主人，晚上好</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">else</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">你好。</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">现在天气&#123;&#123;states(&#x27;sensor.heweather_text&#x27;)&#125;&#125;，</span></span><br><span class="line">          <span class="string">空气质量等级为&#123;&#123;states(&#x27;sensor.heweather_category&#x27;)&#125;&#125;</span></span><br><span class="line">          <span class="string">主要污染物为&#123;&#123;states(&#x27;sensor.heweather_primary&#x27;)&#125;&#125;，</span></span><br><span class="line">          <span class="string">室外湿度&#123;&#123;states(&#x27;sensor.heweather_humidity&#x27;)&#125;&#125;%，</span></span><br><span class="line">          <span class="string">室外温度&#123;&#123;states(&#x27;sensor.heweather_temperature&#x27;)&#125;&#125;℃，</span></span><br><span class="line">            <span class="string">室外体感温度&#123;&#123;states(&#x27;sensor.heweather_feelslike&#x27;)&#125;&#125;℃，</span></span><br><span class="line">            <span class="string">室内湿度是&#123;&#123;states(&#x27;sensor.4c65a8dbf864_humidity&#x27;)&#125;&#125;%,</span></span><br><span class="line">            <span class="string">室内温度是&#123;&#123;states(&#x27;sensor.qdhkl_ac_0106_temperature&#x27;)&#125;&#125;℃，</span></span><br><span class="line">            &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">states(&#x27;sensor.heweather_precip&#x27;)</span> <span class="string">|</span> <span class="string">float</span> <span class="string">&gt;</span> <span class="number">0</span> <span class="string">%</span>&#125;</span><br><span class="line">              <span class="string">所在地区的降雨量为&#123;&#123;states(&#x27;sensor.heweather_precip&#x27;)&#125;&#125;毫米</span></span><br><span class="line">            &#123;<span class="string">%</span> <span class="string">else</span> <span class="string">%</span>&#125;</span><br><span class="line">            &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">             &#123;&#123;<span class="string">state_attr(&#x27;sensor.heweather_rain_warn&#x27;</span>, <span class="string">&#x27;states&#x27;</span><span class="string">)</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">mode:</span> <span class="string">single</span></span><br></pre></td></tr></table></figure><p>如何定义起床？这里我是在客厅装了个人体传感器，把每天早晨第一次有人经过时定义为起床，在这个时候播报，后面再有人经过不再进行播报。所以我这里需要一个计数器，每天定时清零，然后早晨有人经过从0到1时触发起床自动化，启动播报脚本。</p><p> 计数器：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">counter:</span></span><br><span class="line">  <span class="attr">livingroom_counter:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">humancnt</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">mdi:account-plus</span></span><br><span class="line"><span class="string">计数器清零的自动化，这里不要问我为什么配置3点清零，因为我们家都是夜行动物</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">alias:</span> <span class="string">计数器清零</span></span><br><span class="line">  <span class="attr">initial_state:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">platform:</span> <span class="string">time</span></span><br><span class="line">    <span class="attr">at:</span> <span class="number">03</span><span class="string">:00:00</span></span><br><span class="line">  <span class="attr">action:</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">counter.reset</span></span><br><span class="line">    <span class="attr">target:</span></span><br><span class="line">      <span class="attr">entity_id:</span> <span class="string">counter.livingroom_counter</span></span><br></pre></td></tr></table></figure><p>计数器增加的自动化，人体传感器从off到on计数器就+1</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">alias:</span> <span class="string">有人经过计数器增加</span></span><br><span class="line">  <span class="attr">initial_state:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">platform:</span> <span class="string">state</span></span><br><span class="line">    <span class="attr">entity_id:</span> <span class="string">binary_sensor.motion_sensor_158d000121c2c4</span></span><br><span class="line">    <span class="attr">from:</span> <span class="string">&#x27;off&#x27;</span></span><br><span class="line">    <span class="attr">to:</span> <span class="string">&#x27;on&#x27;</span></span><br><span class="line">  <span class="attr">action:</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">counter.increment</span></span><br><span class="line">    <span class="attr">target:</span></span><br><span class="line">      <span class="attr">entity_id:</span> <span class="string">counter.livingroom_counter</span></span><br></pre></td></tr></table></figure><p>上面说清楚了，起床就自动化就很简单了，计数器从0到1的时候就是有人起床啦，触发播报脚本即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">alias:</span> <span class="string">起床播报</span></span><br><span class="line">  <span class="attr">initial_state:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">trigger:</span></span><br><span class="line">    <span class="attr">platform:</span> <span class="string">state</span></span><br><span class="line">    <span class="attr">entity_id:</span> <span class="string">counter.livingroom_counter</span></span><br><span class="line">    <span class="attr">to:</span> <span class="string">&#x27;1&#x27;</span></span><br><span class="line">  <span class="attr">action:</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">script.toggle</span></span><br><span class="line">    <span class="attr">target:</span></span><br><span class="line">      <span class="attr">entity_id:</span> <span class="string">script.send_getup_broadcast</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><p><a href="https://www.bilibili.com/read/cv17792717/">和风天气（heweather） HomeAssistant插件使用说明（２０２３年１１月重大更新）</a></p></li><li><p><a href="https://www.bilibili.com/read/cv18078640/">HomeAssistant 和风天气插件的自动化分享</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">HomeAssistant使用和风天气插件</summary>
    
    
    
    <category term="ubuntu" scheme="https://zml3589110.github.io/categories/ubuntu/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/categories/HomeAssistant/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/categories/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="和风天气" scheme="https://zml3589110.github.io/categories/%E5%92%8C%E9%A3%8E%E5%A4%A9%E6%B0%94/"/>
    
    
    <category term="智能家居" scheme="https://zml3589110.github.io/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/tags/HomeAssistant/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="天气" scheme="https://zml3589110.github.io/tags/%E5%A4%A9%E6%B0%94/"/>
    
    <category term="和风天气" scheme="https://zml3589110.github.io/tags/%E5%92%8C%E9%A3%8E%E5%A4%A9%E6%B0%94/"/>
    
  </entry>
  
  <entry>
    <title>HomeAssistant的Docker配置</title>
    <link href="https://zml3589110.github.io/posts/3638770522.html"/>
    <id>https://zml3589110.github.io/posts/3638770522.html</id>
    <published>2024-01-10T07:24:20.000Z</published>
    <updated>2024-01-10T07:43:09.242Z</updated>
    
    <content type="html"><![CDATA[<p>【通用账号】：能修改的使用root，不能修改的一般为admin</p><h1 id="一、配置Portainer"><a href="#一、配置Portainer" class="headerlink" title="一、配置Portainer"></a>一、配置Portainer</h1><blockquote><p>Portainer 是一个用于 Docker <a href="https://so.csdn.net/so/search?q=%E5%AE%B9%E5%99%A8&spm=1001.2101.3001.7020">容器</a>管理的可视化界面工具。方便管理容器和卷。</p></blockquote><ol><li>创建 Portainer 数据卷：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create portainer_data</span><br></pre></td></tr></table></figure><ol start="2"><li>运行 Portainer 容器：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9000:9000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce</span><br></pre></td></tr></table></figure><p>指令的解释：<br>-d：表示在后台模式运行容器。<br>-p 9000:9000：这将宿主机的 9000 端口映射到容器的 9000 端口。<br>–name portainer：为容器指定一个名称。<br>–restart always：确保容器在任何情况下都会重新启动。<br>-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock：这允许 Portainer 直接访问 Docker API。<br>-v portainer_data:&#x2F;data：将前面创建的数据卷挂载到容器内。<br>完成上述步骤后，你可以通过浏览器访问 http:&#x2F;&#x2F;&lt;你的服务器IP&gt;:9000 来使用 Portainer 界面进行 Docker 容器的管理。</p><ol start="3"><li>配置<br>访问http:&#x2F;&#x2F;&lt;你的服务器IP&gt;:9000，进行账密配置。</li></ol><h2 id="二、配置HA的docker"><a href="#二、配置HA的docker" class="headerlink" title="二、配置HA的docker"></a>二、配置HA的docker</h2><blockquote><p>要在 Docker 中安装 Home Assistant，你可以使用官方的 Home Assistant Docker 映像。</p></blockquote><ol><li>创建一个数据卷 (用于存储 Home Assistant 的配置和数据)：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create homeassistant_data</span><br></pre></td></tr></table></figure><ol start="2"><li>运行 Home Assistant 容器：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name=<span class="string">&quot;home-assistant&quot;</span> -v homeassistant_data:/config -e <span class="string">&quot;TZ=Asia/Shanghai&quot;</span> --net=host homeassistant/home-assistant:stable</span><br></pre></td></tr></table></figure><p>指令的解释：<br>-d：表示在后台模式运行容器。<br>–name&#x3D;“home-assistant”：为容器指定一个名称。<br>-v homeassistant_data:&#x2F;config：将前面创建的数据卷挂载到容器内，用于存储 Home Assistant 的配置。<br>-e “TZ&#x3D;Asia&#x2F;Shanghai”：设置时区为上海 (你可以根据需要修改为其他时区)。<br>–net&#x3D;host：这允许 Home Assistant 使用宿主机的网络，有助于自动发现和控制本地网络上的设备。<br>homeassistant&#x2F;home-assistant:stable：使用稳定版的 Home Assistant 映像。<br>完成上述步骤后，你应该可以通过浏览器访问 http:&#x2F;&#x2F;&lt;你的服务器IP&gt;:8123 来访问 Home Assistant 的界面，并进行初始设置。</p><ol start="3"><li>配置<br>访问http:&#x2F;&#x2F;&lt;你的服务器IP&gt;:8123 ，进行账密配置。其他配置在后续说明</li></ol><h1 id="三、配置MQTT服务器（Eclipse-Mosquitto）"><a href="#三、配置MQTT服务器（Eclipse-Mosquitto）" class="headerlink" title="三、配置MQTT服务器（Eclipse Mosquitto）"></a>三、配置MQTT服务器（Eclipse Mosquitto）</h1><blockquote><p>对于 MQTT 服务器，经常推荐使用的是 Eclipse Mosquitto。Mosquitto 是一个开源的 MQTT 代理，非常轻量级且可靠，可以很好地与 Home Assistant 和 Node-RED 配合使用。<br>额外参考：<a href="https://zhuanlan.zhihu.com/p/452896841">https://zhuanlan.zhihu.com/p/452896841</a></p></blockquote><ol><li>创建 Mosquitto 数据卷:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker volume create mosquitto_config</span><br><span class="line">docker volume create mosquitto_data</span><br><span class="line">docker volume create mosquitto_log</span><br></pre></td></tr></table></figure><ol start="2"><li>配置 mosquitto.conf 文件：</li></ol><p>在<code>mosquitto_config</code>下创建文件<code>mosquitto.conf</code>，特别注意，由于使用docker volume创建，应该是在mosquitto_config的_data文件夹下。实际路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/docker/volumes/mosquitto_config/_data</span><br><span class="line">touch mosquitto.conf</span><br><span class="line">chmod 755 mosquitto.conf<span class="comment"># 需要给权限，因为容器可能要读写</span></span><br><span class="line">nano mosquitto.conf</span><br></pre></td></tr></table></figure><p>写入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">persistence <span class="literal">true</span></span><br><span class="line">persistence_location /mosquitto/data/</span><br><span class="line">log_dest file /mosquitto/<span class="built_in">log</span>/mosquitto.log</span><br><span class="line">allow_anonymous <span class="literal">true</span></span><br><span class="line">listener 1883</span><br></pre></td></tr></table></figure><ol start="3"><li>运行 Mosquitto 容器：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name mosquitto \</span><br><span class="line">  --privileged \</span><br><span class="line">  -p 1883:1883 \</span><br><span class="line">  -p 9001:9001 \</span><br><span class="line">  -v mosquitto_config:/mosquitto/config \</span><br><span class="line">  -v mosquitto_data:/mosquitto/data \</span><br><span class="line">  -v mosquitto_log:/mosquitto/<span class="built_in">log</span> \</span><br><span class="line">  --restart always \</span><br><span class="line">  eclipse-mosquitto</span><br></pre></td></tr></table></figure><h1 id="三、配置MariaDB数据库"><a href="#三、配置MariaDB数据库" class="headerlink" title="三、配置MariaDB数据库"></a>三、配置MariaDB数据库</h1><blockquote><p>Home Assistant 默认使用 SQLite 数据库，但在大型设置或长时间使用后，使用 MariaDB 或 PostgreSQL 可能更高效。<br>为了长时间运行的稳定，那还是设置吧</p></blockquote><ol><li>创建一个持久化存储数据的 Docker 卷：<br>MariaDB 将其数据存储在 &#x2F;var&#x2F;lib&#x2F;mysql，所以为了确保数据的持久性，我们应该为这个路径创建一个 Docker 卷。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create mariadb_data</span><br></pre></td></tr></table></figure><ol start="2"><li>启动 MariaDB 容器：<br>使用以下命令运行 MariaDB 容器，注意替换 password 为您自己的值。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name mariadb \</span><br><span class="line">  --privileged \</span><br><span class="line">  --restart always \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=password \</span><br><span class="line">  -e MYSQL_DATABASE=homeassistant \</span><br><span class="line">  -e MYSQL_USER=root \</span><br><span class="line">  -e MYSQL_PASSWORD=password \</span><br><span class="line">  -v mariadb_data:/var/lib/mysql \</span><br><span class="line">  -p <span class="number">3306</span>:<span class="number">3306</span> \</span><br><span class="line">  mariadb:latest</span><br></pre></td></tr></table></figure><ol start="3"><li>配置 Home Assistant 使用 MariaDB：<br>如之前所述，您需要更新 Home Assistant 的 configuration.yaml 文件，指向这个新的 MariaDB 实例。修改password。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">recorder:</span><br><span class="line">  db_url: mysql://root:password@127.0.0.1/homeassistant?charset=utf8</span><br></pre></td></tr></table></figure><ol start="4"><li>之后重启HA<br>使用数据库工具DBeaver，连接这个数据库进行查看，可以看到正常。</li></ol><h2 id="四、配置Node-RED"><a href="#四、配置Node-RED" class="headerlink" title="四、配置Node-RED"></a>四、配置Node-RED</h2><blockquote><p>Node-RED 是一个基于流的开发工具，用于连接硬件设备、API 和在线服务。</p></blockquote><ol><li>创建 Node-RED 数据卷 (用于存储 Node-RED 的配置和数据)：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create nodered_data</span><br></pre></td></tr></table></figure><ol start="2"><li>运行 Node-RED 容器：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name nodered -p 1880:1880 -v nodered_data:/data --user node-red --restart always nodered/node-red:latest</span><br></pre></td></tr></table></figure><p>指令的解释：<br>-d: 表示在后台模式运行容器。<br>–name nodered: 为容器指定一个名称。<br>-p 1880:1880: 这将宿主机的 1880 端口映射到容器的 1880 端口。<br>-v nodered_data:&#x2F;data: 将前面创建的数据卷挂载到容器内，用于存储 Node-RED 的配置。<br>–user node-red: 以 node-red 用户身份运行 Node-RED，增加安全性。<br>–restart always: 确保容器在任何情况下都会重新启动。<br>nodered&#x2F;node-red:latest: 使用最新版本的 Node-RED Docker 映像。</p><p>完成上述步骤后，你应该可以通过浏览器访问 http:&#x2F;&#x2F;&lt;你的服务器IP&gt;:1880 来访问 Node-RED 的界面并开始构建你的流。</p><h1 id="五、配置ESPHome"><a href="#五、配置ESPHome" class="headerlink" title="五、配置ESPHome"></a>五、配置ESPHome</h1><blockquote><p>ESPHome 是一个很好的选择，尤其是如果你计划使用 ESP8266 或 ESP32 微控制器来扩展你的 Home Assistant 设置。</p></blockquote><ol><li>创建 ESPHome 数据卷 (用于存储 ESPHome 的配置和数据):</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume create esphome_data</span><br></pre></td></tr></table></figure><ol start="2"><li>运行 ESPHome 容器:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --privileged \</span><br><span class="line">  --net=host \</span><br><span class="line">  --name esphome \</span><br><span class="line">  -p 6052:6052 \</span><br><span class="line">  -v esphome_data:/config \</span><br><span class="line">  --restart always \</span><br><span class="line">  esphome/esphome</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>完成上述步骤后，你应该可以通过浏览器访问 http:&#x2F;&#x2F;&lt;你的服务器IP&gt;:6052 来访问 ESPHome 的界面，并开始创建和管理你的设备配置。<br>必须使用host和privileged ，否则esphome无法发现设备。</p><h1 id="六、配置Duplicati"><a href="#六、配置Duplicati" class="headerlink" title="六、配置Duplicati"></a>六、配置Duplicati</h1><blockquote><p>Duplicati 是一个备份软件，用于存储加密的、增量的、压缩的备份到云或本地存储。下面是在 Docker 中安装 Duplicati 的步骤：</p></blockquote><ol><li>创建 Duplicati 的数据卷 (用于存储配置和备份数据):</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker volume create duplicati_backups</span><br><span class="line">docker volume create duplicati_config</span><br><span class="line">docker volume create duplicati_data</span><br></pre></td></tr></table></figure><ol start="2"><li>运行 Duplicati 容器:<br>注意替换&#x2F;opt&#x2F;docker&#x2F;volumes为你需要备份的文件夹。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name duplicati \</span><br><span class="line">  -p 8200:8200 \</span><br><span class="line">  -v duplicati_backups:/backups \</span><br><span class="line">  -v duplicati_config:/config \</span><br><span class="line">  -v duplicati_data:/data \</span><br><span class="line">  -v /opt/docker/volumes:/<span class="built_in">source</span>:ro \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  duplicati/duplicati</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>配置<br>首先在设置中设置密码。<br>随后创建备份，使用onedrive或其他进行备份。</li></ol><h1 id="七、配置HA的HACS"><a href="#七、配置HA的HACS" class="headerlink" title="七、配置HA的HACS"></a>七、配置HA的HACS</h1><blockquote><p>参考官方：<a href="https://hacs.xyz/docs/setup/download/%EF%BC%8C%E4%BD%BF%E7%94%A8container%E7%9A%84%E6%95%99%E7%A8%8B">https://hacs.xyz/docs/setup/download/，使用container的教程</a></p></blockquote><ol><li>打开HA的bash，输入如下指令即可</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https://get.hacs.xyz | bash -</span><br></pre></td></tr></table></figure><ol start="2"><li>打开HA中的高级模式</li><li>添加集成HACS，并进行相应配置，即可显示HACS内容</li></ol><h1 id="八、配置HA的Node-Red"><a href="#八、配置HA的Node-Red" class="headerlink" title="八、配置HA的Node-Red"></a>八、配置HA的Node-Red</h1><ol><li>HACS安装Node-Red</li><li>添加集成Node-Red</li><li>HA导航栏添加Node-Red<br>配置configuration.yaml，添加如下内容后重启HA。（顺带把ESPhome的也添加进来）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">panel_iframe:</span><br><span class="line"> nodered:</span><br><span class="line">   title: <span class="string">&#x27;Node-Red&#x27;</span></span><br><span class="line">   icon: <span class="string">&#x27;mdi:shuffle-variant&#x27;</span></span><br><span class="line">   <span class="comment">#填写node-red的地址</span></span><br><span class="line">   url: <span class="string">&#x27;http://192.168.5.1:1880/&#x27;</span></span><br><span class="line"></span><br><span class="line"> esphome:</span><br><span class="line">   title: <span class="string">&#x27;ESPHome&#x27;</span></span><br><span class="line">   icon: <span class="string">&#x27;mdi:car-esp&#x27;</span></span><br><span class="line">   <span class="comment">#填写node-red的地址</span></span><br><span class="line">   url: <span class="string">&#x27;http://192.168.5.1:6052/&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/posts/undefined/2f6af19978d94ee79e3bf9ca4e53425c.png" class="" title="在这里插入图片描述"><h1 id="九、配置Node-Red"><a href="#九、配置Node-Red" class="headerlink" title="九、配置Node-Red"></a>九、配置Node-Red</h1><ol><li>在Node-Red中添加节点node-red-contrib-home-assistant-websocket，并安装</li><li>拖入一个HA节点，随后进行HA的配置，如下：</li></ol><img src="/posts/undefined/549b65ea99da41d3809b246519e722f9.png" class="" title="在这里插入图片描述"><ol start="3"><li>其中的令牌在HA中创建并复制</li><li>测试一下，获取IP并显示<img src="/posts/undefined/3e7126a8b1ff41978119cae592e04d1f.png" class="" title="在这里插入图片描述"></li></ol><h1 id="十、配置MQTT"><a href="#十、配置MQTT" class="headerlink" title="十、配置MQTT"></a>十、配置MQTT</h1><ol><li><p>HA添加集成MQTT，并配置如下：</p><img src="/posts/undefined/682cafd00f714962b12f0bc70eb8f3eb.png" class="" title="在这里插入图片描述"></li><li><p>进行测试</p><img src="/posts/undefined/3cc98d4da9024cfcab90cfcdece206ee.png" class="" title="在这里插入图片描述"></li><li><p>使用MQTT发布一个传感器给HA的教程，请参考另外一个博客。</p></li></ol><h1 id="十一、配置彩云天气"><a href="#十一、配置彩云天气" class="headerlink" title="十一、配置彩云天气"></a>十一、配置彩云天气</h1><ol><li>HACS搜索彩云天气，安装组件和卡片<img src="/posts/undefined/092e818e32954ec8acc8cc6987a8713c.png" class="" title="在这里插入图片描述"></li><li>添加集成Colorfuclouds，并进行相应配置</li><li>在主页中添加卡片，为了高级使用，要学会使用编辑器。</li></ol><img src="/posts/undefined/b6a7d7a8e60343ddaf658a164051d963.png" class="" title="在这里插入图片描述"><h2 id="十二、配置mini-graph-card"><a href="#十二、配置mini-graph-card" class="headerlink" title="十二、配置mini-graph-card"></a>十二、配置mini-graph-card</h2><blockquote><p>可以在主页显示好看的时序数据，比如温湿度、流量、等等</p></blockquote><ol><li><p>HACS搜索并安装</p></li><li><p>添加如下卡片：</p><img src="/posts/undefined/981c72d8d5f94c9aaaadf066b26d8946.png" class="" title="在这里插入图片描述"></li><li><p>手动添加卡片到资源中<br>可能会出现卡片无法检索到，需要手动添加。<br>首先在HACS的该卡片，打开源获得该卡片路径：<a href="http://192.168.5.1:8123/hacsfiles/mini-graph-card/mini-graph-card-bundle.js">http://192.168.5.1:8123/hacsfiles/mini-graph-card/mini-graph-card-bundle.js</a><br>其次，在配置-仪表盘-资源（右上角选择），添加如下资源。可以看到，这里还包括的彩云天气得到资源</p></li></ol><img src="/posts/undefined/627fc3ba3abd42279597057f5c6b9d6e.png" class="" title="在这里插入图片描述"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/Hot_Ant/article/details/133973682">Homeassistant docker配置</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">HomeAssistant的Docker配置</summary>
    
    
    
    <category term="ubuntu" scheme="https://zml3589110.github.io/categories/ubuntu/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/categories/HomeAssistant/"/>
    
    <category term="HACS" scheme="https://zml3589110.github.io/categories/HACS/"/>
    
    <category term="Docker" scheme="https://zml3589110.github.io/categories/Docker/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="智能家居" scheme="https://zml3589110.github.io/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="Debain" scheme="https://zml3589110.github.io/tags/Debain/"/>
    
    <category term="docker" scheme="https://zml3589110.github.io/tags/docker/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/tags/HomeAssistant/"/>
    
    <category term="HACS" scheme="https://zml3589110.github.io/tags/HACS/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="Portainer" scheme="https://zml3589110.github.io/tags/Portainer/"/>
    
    <category term="Mosquitto" scheme="https://zml3589110.github.io/tags/Mosquitto/"/>
    
    <category term="MariaDB数据库" scheme="https://zml3589110.github.io/tags/MariaDB%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="Node-RED" scheme="https://zml3589110.github.io/tags/Node-RED/"/>
    
    <category term="ESPHome" scheme="https://zml3589110.github.io/tags/ESPHome/"/>
    
    <category term="Duplicati" scheme="https://zml3589110.github.io/tags/Duplicati/"/>
    
    <category term="彩云天气" scheme="https://zml3589110.github.io/tags/%E5%BD%A9%E4%BA%91%E5%A4%A9%E6%B0%94/"/>
    
    <category term="mini-graph-card" scheme="https://zml3589110.github.io/tags/mini-graph-card/"/>
    
  </entry>
  
  <entry>
    <title>HomeAssistant的Docker版本安装HACS等插件</title>
    <link href="https://zml3589110.github.io/posts/3425107628.html"/>
    <id>https://zml3589110.github.io/posts/3425107628.html</id>
    <published>2024-01-10T07:10:20.000Z</published>
    <updated>2024-01-10T07:19:56.026Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进入-docker-中的-HomeAssistant（这个最主要-因为好难找到对应文件件）"><a href="#进入-docker-中的-HomeAssistant（这个最主要-因为好难找到对应文件件）" class="headerlink" title="进入 docker 中的 HomeAssistant（这个最主要-因为好难找到对应文件件）"></a>进入 docker 中的 HomeAssistant（这个最主要-因为好难找到对应文件件）</h1><h2 id="1-查找-HomeAssistant-的-CONTAINER-ID"><a href="#1-查找-HomeAssistant-的-CONTAINER-ID" class="headerlink" title="1.查找 HomeAssistant 的 CONTAINER ID"></a>1.查找 HomeAssistant 的 CONTAINER ID</h2><p>连接上<a href="https://so.csdn.net/so/search?q=%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8&spm=1001.2101.3001.7020">云服务器</a>（宿主机）后，终端内进入 root ，输入：</p><blockquote><p><strong>zml:一定一定要从root进入</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>找到了 docker 的 container ID</p><img src="/posts/undefined/3f0be25574bb4c1f97a10155e935003a.png" class="" title="在这里插入图片描述"><h2 id="2-config-HomeAssistant"><a href="#2-config-HomeAssistant" class="headerlink" title="2.config HomeAssistant"></a>2.config HomeAssistant</h2><p>输入下面的命令（把 CONTAINER_ID 换成你自己的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it CONTAINER_ID /bin/bash</span><br></pre></td></tr></table></figure><img src="/posts/undefined/ce44b2b180464576bfdfb138acb2e875.png" class="" title="在这里插入图片描述"><p>在这一步中，有的人 ls 后显示的可能和我不一样，那么你可以进入 config 目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> config</span><br></pre></td></tr></table></figure><p>当然，如果已经显示出我上面类似的内容，则 不执行 上面的命令。</p><h2 id="3-进入-custom-components-目录"><a href="#3-进入-custom-components-目录" class="headerlink" title="3.进入 custom_components 目录"></a>3.进入 custom_components 目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> custom_components</span><br></pre></td></tr></table></figure><h3 id="二、github-或者其他渠道下载-HACS"><a href="#二、github-或者其他渠道下载-HACS" class="headerlink" title="二、github 或者其他渠道下载 HACS"></a>二、github 或者其他渠道下载 HACS</h3><h2 id="1-下载-HACS"><a href="#1-下载-HACS" class="headerlink" title="1.下载 HACS"></a>1.下载 HACS</h2><p><a href="https://github.com/hacs/integration/releases/">https://github.com/hacs/integration/releases/</a></p><p><a href="https://gitcode.com/mirrors/hacs/integration/overview">github加速计划地址</a></p><img src="/posts/undefined/d1e6b4f6ecbd43e2b5c0460a9c021e0f.png" class="" title="在这里插入图片描述"><h2 id="2-在-custom-components-目录-新建文件夹-hacs"><a href="#2-在-custom-components-目录-新建文件夹-hacs" class="headerlink" title="2.在 custom_components 目录 新建文件夹 hacs"></a>2.在 custom_components 目录 新建文件夹 hacs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir hacs</span><br></pre></td></tr></table></figure><h2 id="3-进入-custom-components-x2F-hacs-目录，打开-Xtfp，将刚下载好的-hacs-zip-传入"><a href="#3-进入-custom-components-x2F-hacs-目录，打开-Xtfp，将刚下载好的-hacs-zip-传入" class="headerlink" title="3.进入 custom_components &#x2F; hacs 目录，打开 Xtfp，将刚下载好的 hacs.zip 传入"></a>3.进入 custom_components &#x2F; hacs 目录，打开 Xtfp，将刚下载好的 hacs.zip 传入</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hacs</span><br></pre></td></tr></table></figure><img src="/posts/undefined/22e3d5a65fb2450aaad868bcbf77fded.png" class="" title="在这里插入图片描述"><h2 id="4-解压-hacs-zip"><a href="#4-解压-hacs-zip" class="headerlink" title="4.解压 hacs.zip"></a>4.解压 hacs.zip</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip hacs.zip</span><br></pre></td></tr></table></figure><h2 id="5-重启-HomeAssistant"><a href="#5-重启-HomeAssistant" class="headerlink" title="5.重启 HomeAssistant"></a>5.重启 HomeAssistant</h2><p>退出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>重启（把 CONTAINER_ID 换成你自己的）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart CONTAINER_ID</span><br></pre></td></tr></table></figure><img src="/posts/undefined/49055f35644e4af784bc2a2f33dc2c3f.png" class="" title="在这里插入图片描述"><h2 id="6-网页进入-HomeAssistant-，hacs-已经安装成功"><a href="#6-网页进入-HomeAssistant-，hacs-已经安装成功" class="headerlink" title="6.网页进入 HomeAssistant ，hacs 已经安装成功"></a>6.网页进入 HomeAssistant ，hacs 已经安装成功</h2><img src="/posts/undefined/9a9dfcadc573463982948087a56725f2.png" class="" title="步骤我使用图片表示："><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qq_43768851/article/details/132343591">【自用】云服务器 docker 环境下 HomeAssistant 安装 HACS 教程</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">HomeAssistant的Docker版本安装HACS等插件，主要是解决找不到custom_components等文件夹在哪里了</summary>
    
    
    
    <category term="ubuntu" scheme="https://zml3589110.github.io/categories/ubuntu/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/categories/HomeAssistant/"/>
    
    <category term="HACS" scheme="https://zml3589110.github.io/categories/HACS/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="智能家居" scheme="https://zml3589110.github.io/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="Debain" scheme="https://zml3589110.github.io/tags/Debain/"/>
    
    <category term="docker" scheme="https://zml3589110.github.io/tags/docker/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/tags/HomeAssistant/"/>
    
    <category term="HACS" scheme="https://zml3589110.github.io/tags/HACS/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="config" scheme="https://zml3589110.github.io/tags/config/"/>
    
    <category term="custom_components" scheme="https://zml3589110.github.io/tags/custom-components/"/>
    
  </entry>
  
  <entry>
    <title>Cploar安装并实现远程连接</title>
    <link href="https://zml3589110.github.io/posts/1083353105.html"/>
    <id>https://zml3589110.github.io/posts/1083353105.html</id>
    <published>2024-01-10T06:58:20.000Z</published>
    <updated>2024-01-10T07:05:32.186Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原因-没有公网IP"><a href="#原因-没有公网IP" class="headerlink" title="原因-没有公网IP"></a>原因-没有公网IP</h1><p>现在我有个想法，就是希望通过外网能够远程连接到我的开发板。这里我们就需要使用到一种技术，内网穿透。</p><p>内网穿透是一种将内部网络中的设备通过外网进行访问的技术。在linux系统中，实现内网穿透有多种方式，其中最常见的方法是使用ngrok和frp。</p><p>以frp为例，frp是一个专注于内网穿透的高性能的反向代理应用，支持TCP、UDP、HTTP、HTTPS 等多种协议。 可以将内网服务以安全、便捷的方式通过具有公网IP节点的中转暴露到公网。</p><p>然而由于我自己并没有公网IP，因此这里采用了一款内网穿透软件cpolar，不限制流量，还可以永久免费使用。完成软件的配置后，会默认安装ssh隧道，只需要启动，就可以获取到ssh隧道，映射22端口的公网地址，比较简单。</p><h1 id="一、内网穿透"><a href="#一、内网穿透" class="headerlink" title="一、内网穿透"></a>一、内网穿透</h1><h4 id="1-1-注册免费的cpolar账号"><a href="#1-1-注册免费的cpolar账号" class="headerlink" title="1.1 注册免费的cpolar账号"></a>1.1 注册免费的<code>cpolar</code>账号</h4><p><code>cpolar</code>官网地址：<a href="https://i.cpolar.com/m/55wq"><code>https://i.cpolar.com/m/55wq</code></a>，官网注册账号。账号注册号之后，点击右上角用户设置，进行重置<code>AuthToken</code>；</p><img src="/posts/undefined/202311122127790.png" class="" title="img"><p>并保存自己的<code>Authtoken</code>;</p><img src="/posts/undefined/202311122142693.png" class="" width="20230111103532"><h4 id="1-2-安装cpolar客户端"><a href="#1-2-安装cpolar客户端" class="headerlink" title="1.2 安装cpolar客户端"></a>1.2 安装<code>cpolar</code>客户端</h4><p>下载<code>cpolar</code>安装脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@rk3399:/data# mkdir cpolar</span><br><span class="line">root@rk3399:/data# wget https://www.cpolar.com/static/downloads/install-release-cpolar.sh </span><br><span class="line">root@rk3399:/data# mv install-release-cpolar.sh ./cpolar/</span><br><span class="line">root@rk3399:/data# mv install-release-cpolar.sh ./cpolar/</span><br><span class="line">root@rk3399:/data# cd cpolar/</span><br><span class="line">root@rk3399:/data/cpolar# ls -l</span><br><span class="line">total 24</span><br><span class="line">-rw-r--r-- 1 root root 21833 Apr  5  2023 install-release-cpolar.sh</span><br><span class="line">root@rk3399:/data/cpolar# chmod +x install-release-cpolar.sh</span><br></pre></td></tr></table></figure><p>开始安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">root@rk3399:/data/cpolar# ./install-release-cpolar.sh</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0</span><br><span class="line">100 21833  100 21833    0     0  61849      0 --:--:-- --:--:-- --:--:-- 61849</span><br><span class="line">info: Installing Cpolar 3.3.12 for aarch64</span><br><span class="line">Downloading Cpolar archive: http://static.cpolar.com/downloads/releases/3.3.12/cpolar-stable-linux-arm64.zip</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 6716k  100 6716k    0     0   9.7M      0 --:--:-- --:--:-- --:--:-- 9995k</span><br><span class="line">info: Extract the Cpolar package to /tmp/tmp.zNY8gPayfj and prepare it for installation.</span><br><span class="line">Downloading Cpolar demo config file: http://static.cpolar.com/downloads/cpolar.demo.yml</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   186  100   186    0     0   4650      0 --:--:-- --:--:-- --:--:--  4650</span><br><span class="line">Downloading Cpolar service config file: http://static.cpolar.com/downloads/cpolar.service</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   384  100   384    0     0  11294      0 --:--:-- --:--:-- --:--:-- 11294</span><br><span class="line">Downloading Cpolar service@ config file: http://static.cpolar.com/downloads/cpolar@.service</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   380  100   380    0     0  11875      0 --:--:-- --:--:-- --:--:-- 11875</span><br><span class="line">rm: cannot remove &#x27;/etc/systemd/system/cpolar.service.d/10-donot_touch_multi_conf.conf&#x27;: No such file or directory</span><br><span class="line">rm: cannot remove &#x27;/etc/systemd/system/cpolar@.service.d/10-donot_touch_multi_conf.conf&#x27;: No such file or directory</span><br><span class="line">info: Systemd service files have been installed successfully!</span><br><span class="line">warning: The following are the actual parameters for the cpolar service startup.</span><br><span class="line">warning: Please make sure the configuration file path is correctly set.</span><br><span class="line"><span class="meta">#</span><span class="bash"> /etc/systemd/system/cpolar.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Cpolar Service</span><br><span class="line">Documentation=https://www.cpolar.com/docs</span><br><span class="line">After=network.target nss-lookup.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=nobody</span><br><span class="line">NoNewPrivileges=true</span><br><span class="line">ExecStart=/usr/local/bin/cpolar start-all -dashboard=on -daemon=on -config=/usr/local/etc/cpolar/cpolar.yml -log=/var/log/cpolar/access.log</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartPreventExitStatus=23</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">installed: /usr/local/bin/cpolar</span><br><span class="line">installed link: /usr/bin/cpolar</span><br><span class="line">installed: /usr/local/etc/cpolar/cpolar.yml</span><br><span class="line">installed: /var/log/cpolar/</span><br><span class="line">installed: /var/log/cpolar/access.log</span><br><span class="line">installed: /var/log/cpolar/error.log</span><br><span class="line">installed: /etc/systemd/system/cpolar.service</span><br><span class="line">installed: /etc/systemd/system/cpolar@.service</span><br><span class="line">removed: /tmp/tmp.zNY8gPayfj</span><br><span class="line">info: Cpolar 3.3.12 is installed.</span><br><span class="line">You may need to execute a command to remove dependent software: apt purge curl unzip</span><br><span class="line">Please execute the command: systemctl enable cpolar; systemctl start cpolar</span><br></pre></td></tr></table></figure><p>查看<code>cpolar</code>版本信息,如果正常显示，则安装成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@rk3399:/data/cpolar# cpolar version</span><br><span class="line">cpolar version 3.3.12</span><br></pre></td></tr></table></figure><p>进行<code>token</code>认证：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@rk3399:/data/cpolar# cpolar authtoken 配置第一步中获取的Authtoken</span><br><span class="line">Authtoken saved to configuration file: /usr/local/etc/cpolar/cpolar.yml</span><br></pre></td></tr></table></figure><p>配置<code>cpolar</code>开机自启动：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@rk3399:/data/cpolar# systemctl enable cpolar</span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/cpolar.service → /etc/systemd/system/cpolar.service.</span><br></pre></td></tr></table></figure><p>守护进程方式，启动<code>cpolar</code>:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@rk3399:/data/cpolar# systemctl start cpolar</span><br></pre></td></tr></table></figure><p>查看<code>cpolar</code>守护进程状态；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@rk3399:/data/cpolar# systemctl status cpolar</span><br><span class="line">● cpolar.service - Cpolar Service</span><br><span class="line">     Loaded: loaded (/etc/systemd/system/cpolar.service; enabled; vendor preset: enabled)</span><br><span class="line">     Active: active (running) since Sun 2023-11-12 21:21:04 CST; 17s ago</span><br><span class="line">       Docs: https://www.cpolar.com/docs</span><br><span class="line">   Main PID: 6768 (cpolar)</span><br><span class="line">      Tasks: 22 (limit: 4569)</span><br><span class="line">     Memory: 18.1M</span><br><span class="line">     CGroup: /system.slice/cpolar.service</span><br><span class="line">             ├─6768 cpolar: master process</span><br><span class="line">             └─6779 cpolar: worker process</span><br><span class="line"></span><br><span class="line">Nov 12 21:21:04 rk3399 systemd[1]: Started Cpolar Service.</span><br></pre></td></tr></table></figure><h4 id="1-3-获取ssh隧道的公网地址"><a href="#1-3-获取ssh隧道的公网地址" class="headerlink" title="1.3 获取ssh隧道的公网地址"></a>1.3 获取<code>ssh</code>隧道的公网地址</h4><p><code>cpolar</code>会默认安装两个样例隧道，一个是<code>Website</code>隧道指向<code>http 8080</code>端口，一个是<code>ssh</code>隧道，指向<code>tcp 22</code>端口；</p><p>在<code>PC</code>机器浏览器访问：<code>http://192.168.0.102:9200</code>，登录<code>cpolar web UI</code>管理界面；其中<code>192.168.0.102</code>是我的开发板的内网<code>IP</code>地址。</p><p>在状态—&gt;在线隧道列表，就可以获取到<code>ssh</code>隧道的公网地址；</p><img src="/posts/undefined/202311122130953.png" class="" title="img"><h4 id="1-4-公网ssh远程linux服务"><a href="#1-4-公网ssh远程linux服务" class="headerlink" title="1.4 公网ssh远程linux服务"></a>1.4 公网<code>ssh</code>远程<code>linux</code>服务</h4><p>在外网设备上执行命令，就可以<code>ssh</code>远程内网的<code>linux</code>服务；</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh $&#123;linux用户名&#125;@$&#123;cpolar所生成的公网地址&#125; -p $&#123;cpolar生成的端口号&#125;</span><br></pre></td></tr></table></figure><p>其中：</p><ul><li><code>linux</code>用户名为开发板的用户名；</li><li><code>cpolar</code>所生成的公网地址：不包含上图公网地址列中的协议名和后面的端口号；</li></ul><p>比如我这里运行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@test2 ~]# ssh zhengyang@5.tcp.vip.cpolar.cn -p 14318</span><br></pre></td></tr></table></figure><blockquote><p><strong>zml:如果使用ssh工具，那么地址为去掉前面的“tcp:&#x2F;&#x2F;”，只留 5.tcp.vip.cpolar.cn 即可，然后端口根据自己分配到的填入即可</strong></p></blockquote><p>注意：免费使用<code>cpolar</code>，所生成的公网地址是随机的，不定时会变化，如果是需要后期长期使用，可以升级套餐，配置固定的域名地址，增大带宽，价格也不高，而且还支持21天退款保证。</p><p><strong>参考文章</strong></p><p><strong>[1] <a href="https://www.cpolar.com/docs?_gl=1*1b9mx0c*_ga*MTQyNTc3MTY5MS4xNjk5Nzk0MjIz*_ga_WF16DPKZZ1*MTY5OTc5NDIyMi4xLjEuMTY5OTc5NjQwNC4yMC4wLjA.#tcp"><code>cpolar</code>入门指南</a></strong></p><p><strong>[2] <a href="https://www.cpolar.com/blog/build-a-website-on-ubuntu-system">在<code>Ubuntu</code>搭建<code>Web</code>站点，并将其发布到公网访问</a></strong></p><p><strong>[3] <a href="https://blog.csdn.net/weixin_43025343/article/details/132357145">国产的内网穿透工具也很优秀，这10款工具推荐正在寻找的你</a></strong></p><h1 id="外网通过Cploar远程控制"><a href="#外网通过Cploar远程控制" class="headerlink" title="外网通过Cploar远程控制"></a>外网通过Cploar远程控制</h1><p>文章【1.HomeAssistant通过cpolar内网穿透】有说明使用方式，一定要注意设置好访问IP后重启homeassistant才生效</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.cnblogs.com/zyly/p/17827958.html">通过cpolar实现外网ssh远程连接linux</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Cploar安装并实现远程连接，分别实现SSH隧道控制跟HomeAssistant远程控制</summary>
    
    
    
    <category term="技术类" scheme="https://zml3589110.github.io/categories/%E6%8A%80%E6%9C%AF%E7%B1%BB/"/>
    
    <category term="内网穿透" scheme="https://zml3589110.github.io/categories/%E6%8A%80%E6%9C%AF%E7%B1%BB/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    <category term="Cploar" scheme="https://zml3589110.github.io/categories/Cploar/"/>
    
    <category term="linux" scheme="https://zml3589110.github.io/categories/linux/"/>
    
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/tags/HomeAssistant/"/>
    
    <category term="内网穿透" scheme="https://zml3589110.github.io/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="Cploar" scheme="https://zml3589110.github.io/tags/Cploar/"/>
    
    <category term="ssh" scheme="https://zml3589110.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>HomeAssistant通过cpolar内网穿透</title>
    <link href="https://zml3589110.github.io/posts/1505516202.html"/>
    <id>https://zml3589110.github.io/posts/1505516202.html</id>
    <published>2024-01-10T06:38:20.000Z</published>
    <updated>2024-01-10T06:50:46.988Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装HomeAssistant"><a href="#安装HomeAssistant" class="headerlink" title="安装HomeAssistant"></a>安装HomeAssistant</h1><p>Home Assistant（以下简称HA）是个开源的智能家居平台,也叫家庭助手，就像一个软件，比如我们的QQ软件，微信软件。</p><p>Home Assistant把家中的智能家居设备整合到HA中，它能够接入的设备非常的多比如大名鼎鼎的小米、博联、易微联、飞利浦、特斯拉…，也可以接入软件，让后让各个品牌之间的设备可以联网。</p><p>一个设备，在没接入HA之前，它是个单一设备，只能在自己的生态里面联动，一旦接入到HA上，它就活了，它可以在所有接入的平台里面自己联动，实现各种各样的自动化。</p><blockquote><p><strong>安装方法网上很多，目前选用的是玩客云的debain系统下使用docker安装</strong></p></blockquote><h1 id="安装cpolar内网穿透"><a href="#安装cpolar内网穿透" class="headerlink" title="安装cpolar内网穿透"></a>安装cpolar内网穿透</h1><p>在局域网下的浏览器访问成功后，我们接下来用cpolar内网穿透将其映射到公网上，实现在公网环境下也可以远程访问家里的HA，不需要公网IP，也无需设置路由器。</p><blockquote><p>cpolar官网：<a href="https://www.cpolar.com/">https://www.cpolar.com/</a></p></blockquote><p>访问cpolar官网，注册一个账号，然后下载并安装客户端，具体安装教程可以参考官网文档教程。</p><h3 id="1-windows系统"><a href="#1-windows系统" class="headerlink" title="1 windows系统"></a>1 windows系统</h3><p>在cpolar官网下载安装包后，双击安装包一路默认安装即可。</p><h3 id="2-Linux系统"><a href="#2-Linux系统" class="headerlink" title="2 Linux系统"></a>2 Linux系统</h3><p>cpolar支持一键自动安装脚本，详细请参考文章教程</p><ul><li><a href="https://www.cpolar.com/blog/linux-system-installation-cpolar">Linux安装cpolar内网穿透</a></li></ul><h3 id="3-macOS系统"><a href="#3-macOS系统" class="headerlink" title="3 macOS系统"></a>3 macOS系统</h3><p>可通过homebrew安装，可参考文章教程</p><ul><li><a href="https://www.cpolar.com/blog/macos-installation-cpolar">macOS安装cpolar内网穿透</a></li></ul><img src="/posts/undefined/19be94898b169cdbeffbc1cf75445297.png" class="" width="20230130105715"><h1 id="映射Home-Assistant端口"><a href="#映射Home-Assistant端口" class="headerlink" title="映射Home Assistant端口"></a>映射Home Assistant端口</h1><p>cpolar安装成功后，在浏览器上访问本地9200端口，访问cpolar web UI管理界面【<a href="http://localhost:9200/">http://localhost:9200</a>】，使用cpolar账号登录。</p><img src="/posts/undefined/c57ed57245d586d1609b1916bb1f7955.png" class="" width="20230130105810"><p>点击左侧仪表盘的隧道管理——创建隧道，创建一个http隧道，指向8123端口 ,即Home Assistant的端口</p><ul><li><code>隧道名称</code>：可自定义命名，注意不要与已有的隧道名称重复</li><li><code>协议</code>：选择http</li><li><code>本地地址</code>：home assistant 局域网ip+端口</li><li><code>域名类型</code>：免费选择随机域名</li><li><code>地区</code>：选择China vip</li></ul><p>点击<code>创建</code></p><img src="/posts/undefined/ee3521d57eb92e0496bdd7d8e3ed05bf.png" class="" title="image-20230329151644131"><p>隧道创建成功后，点击左侧的状态——在线隧道列表,查看所生成的公网地址，然后复制地址</p><img src="/posts/undefined/66cfd54093a818b660907d1c8df19db9.png" class="" title="image-20230329151724274"><h1 id="公网访问Home-Assistant"><a href="#公网访问Home-Assistant" class="headerlink" title="公网访问Home Assistant"></a>公网访问Home Assistant</h1><p>打开浏览器,使用刚刚获取的公网地址进行连接访问,此时会出现一个400的错误,如果没有的话,可以跳过此步骤</p><img src="/posts/undefined/16bc5820d8e38c896c89efd77b147b3e.png" class="" title="image-20230330113646549"><p>我们查看日志,看一下提示具体错误,点击左下角配置,点击系统</p><img src="/posts/undefined/98d3ba7646644425024a651c02e68e31.png" class="" title="image-20230330115658528"><p>可以看到日志,点击日志</p><img src="/posts/undefined/8d0c12e1ea0a1992a4ea5e660f75634a.png" class="" title="image-20230330130245362"><p>打开日志后,我们可以看到这么一个问题,大致意思是:从192.168.191.1收到来自反向代理的请求，但HTTP集成未针对反向代理进行设置,所以我们需要修改一下配置文件</p><img src="/posts/undefined/eca73f8f8249f1720d15aac72429f5e3.png" class="" title="image-20230330130645997"><p>解决方法:打开面板,找到左下角配置,点击加载项</p><img src="/posts/undefined/24888fadeca70ead49fd7bb1c144c5ae.png" class="" title="image-20230330113824049"><p>去商店下载一个文件编辑器,我们需要修改一个配置文件</p><img src="/posts/undefined/6ffc336877c21d80717afdc7fe43045e.png" class="" title="image-20230330113845841"><p>找到File editor 文件编辑器</p><img src="/posts/undefined/df02c492e2c269c5ecdbeeb3fabfc04e.png" class="" title="image-20230330113950556"><p>点击安装这个File editor</p><img src="/posts/undefined/239bd5f653e3c84c71dee79f90215a85.png" class="" title="image-20230330114133188"><p>安装成功后点击启动</p><img src="/posts/undefined/7a7afefd0519df3f8cc0c95965a71f98.png" class="" title="image-20230330114417659"><p>然后为了方便下次使用,可以勾选一个在侧边栏显示</p><img src="/posts/undefined/9244586efca651570bf4ebc0ff7a85e1.png" class="" title="image-20230330114525062"><p>开启后,我们从侧边栏即可进入,然后点击左上角文件目录</p><img src="/posts/undefined/c1c98883facc1001c27b25cbfc5fd92f.png" class="" title="image-20230330114704791"><p>找到并且点击configuration.yaml的文件,点击一下即可</p><img src="/posts/undefined/c1d657d9d0fba87128d78fcb609f9963.png" class="" title="image-20230330114807991"><p>在文件上添加如下配置,下面ip地址就是我们上面查看日志提示的那个ip地址:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http:</span><br><span class="line">  use_x_forwarded_for: true</span><br><span class="line">  trusted_proxies:</span><br><span class="line">    - 192.168.191.1</span><br></pre></td></tr></table></figure><img src="/posts/undefined/99727579590679df57e85a13782af155.png" class="" title="image-20230330131216892"><p>然后我们打开虚拟机关机,重启虚拟机,接着再次输入公网地址访问,即可成功</p><img src="/posts/undefined/c1aca3c522d6436ad7c056cb712873c5.png" class="" title="image-20230330131548575"><h1 id="固定公网地址（这个需要付费-没付费的话24H会被更改连接地址，感觉影响不大）"><a href="#固定公网地址（这个需要付费-没付费的话24H会被更改连接地址，感觉影响不大）" class="headerlink" title="固定公网地址（这个需要付费-没付费的话24H会被更改连接地址，感觉影响不大）"></a>固定公网地址（这个需要付费-没付费的话24H会被更改连接地址，感觉影响不大）</h1><p>由于以上使用cpolar所创建的隧道使用的是随机公网地址，24小时内会随机变化，不利于长期远程访问。因此我们可以为其配置二级子域名，该地址为固定地址，不会随机变化。</p><blockquote><p>注意需要将cpolar套餐升级至基础套餐或以上，且每个套餐对应的带宽不一样。</p></blockquote><h3 id="1-保留一个固定二级子域名"><a href="#1-保留一个固定二级子域名" class="headerlink" title="1 保留一个固定二级子域名"></a>1 保留一个固定二级子域名</h3><p>登录cpolar官网，点击左侧的预留，选择保留二级子域名，设置一个二级子域名名称，点击保留,保留成功后复制保留的二级子域名名称</p><img src="/posts/undefined/8bcb6125b8861048f7643c0468c545b9.png" class="" title="image-20230330132159756"><p>保留成功后复制保留的二级子域名地址</p><img src="/posts/undefined/c44b04a80330ae90d1e55eced5b1cee1.png" class="" title="image-20230330132218331"><h3 id="2-配置固定二级子域名"><a href="#2-配置固定二级子域名" class="headerlink" title="2 配置固定二级子域名"></a>2 配置固定二级子域名</h3><p>访问<a href="http://127.0.0.1:9200/%EF%BC%8C%E7%99%BB%E5%BD%95cpolar">http://127.0.0.1:9200/，登录cpolar</a> web UI管理界面，点击左侧仪表盘的隧道管理——隧道列表，找到所要配置的Home Assistant隧道，点击右侧的编辑</p><img src="/posts/undefined/4eab320f87b70aa97df22ccdec5489fb.png" class="" title="image-20230330131957337"><p>修改隧道信息，将保留成功的二级子域名配置到隧道中</p><ul><li><code>域名类型</code>：选择二级子域名</li><li><code>Sub Domain</code>：填写保留成功的二级子域名</li></ul><p>点击<code>更新</code></p><img src="/posts/undefined/1ab6f8b187946050f3951fe68869de30.png" class="" title="image-20230330132252714"><p>更新完成后,打开在线隧道列表,此时可以看到公网地址已经发生变化,地址名称也变成了保留过的二级子域名名称,将其复制下来</p><img src="/posts/undefined/350fde17725940aec954a3a9c494e277.png" class="" title="image-20230330132345392"><p>然后使用固定https地址打开浏览器访问,同样访问成功,且域名不会发生变化.</p><img src="/posts/undefined/1fe79638ad53222c2007d799ddbe9ba4.png" class="" title="image-20230330132444605"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/m0_74760716/article/details/129982813">【智能家居】Home Assistant入门安装并内网穿透实现远程安全控制</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">HomeAssistant通过cpolar内网穿透，在外面也能控制家里智能设备</summary>
    
    
    
    <category term="ubuntu" scheme="https://zml3589110.github.io/categories/ubuntu/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/categories/HomeAssistant/"/>
    
    <category term="cpolar" scheme="https://zml3589110.github.io/categories/cpolar/"/>
    
    <category term="内网穿透" scheme="https://zml3589110.github.io/categories/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="智能家居" scheme="https://zml3589110.github.io/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="Debain" scheme="https://zml3589110.github.io/tags/Debain/"/>
    
    <category term="docker" scheme="https://zml3589110.github.io/tags/docker/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/tags/HomeAssistant/"/>
    
    <category term="cpolar" scheme="https://zml3589110.github.io/tags/cpolar/"/>
    
    <category term="内网穿透" scheme="https://zml3589110.github.io/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>ESP01S使用ESPHome接入HomeAssistant</title>
    <link href="https://zml3589110.github.io/posts/656768886.html"/>
    <id>https://zml3589110.github.io/posts/656768886.html</id>
    <published>2023-12-27T01:48:20.000Z</published>
    <updated>2023-12-27T01:57:53.422Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>  ESP-01&#x2F;01S应该是目前最便宜的ESP8266系列模块了。在未涨价之前，单个模块价格在3-4块之间，不知为啥现在都涨价了&#x3D; &#x3D;、现在价格在6-8块之间，安信可官方店里卖10块，加上一个继电器模块，总价在10-15块之间。</p><p><a href="https://pic.codess.cc/images/2019/09/02/902213720.md.png"><img src="/posts/656768886/902213720.md.png" class="" title="902213720.png"></a></p><p>(ESP01&#x2F;01S模块)</p><p><a href="https://pic.codess.cc/images/2019/09/02/902213757.md.png"><img src="/posts/656768886/902213757.md.png" class="" title="902213757.png"></a></p><p>（ESP01&#x2F;01S + 继电器 模块）</p><p>也就是说：通过研读本篇文章，你只需花3-4瓶快乐水的钱，即可让你桌面上的台灯接入HomeAssistant，实现APP or Siri 智能控制。如果换成是现成的设备呢？</p><p><a href="https://pic.codess.cc/images/2019/09/02/902214136.md.png"><img src="/posts/656768886/902214136.md.png" class="" title="902214136.png"></a></p><p>(HomeKit认证的插座 288块，够我买半年快乐水了，打扰了…)</p><p><a href="https://pic.codess.cc/images/2019/09/02/902214222.md.png"><img src="/posts/656768886/902214222.md.png" class="" title="902214222.png"></a></p><p>(小米米家插座，49块)</p><p>这么一看，小米是真的很良心啊！确实，价格屠夫嘛，可是米家设备闭源，不支持开放协议，虽然也可以通过米家Aqara二代网关接入，但是，二代网关多少钱？比我半年快乐水还多23333…</p><hr><p>好了进入正题，本篇文章讲的是如何使用ESP01&#x2F;01S通过刷ESPHome固件接入HomeAssistant 的过程，可能会比较长，但是比较简单，跟着教程基本能100%实现。本篇文章会分两个部分，第一部分为ESPHome固件的编译与烧录；第二部分为ESPHome设备添加到HomeAssistant实现智能控制。</p><h3 id="第一部分"><a href="#第一部分" class="headerlink" title="第一部分"></a>第一部分</h3><h4 id="第一步：准备工作"><a href="#第一步：准备工作" class="headerlink" title="第一步：准备工作"></a>第一步：准备工作</h4><p>准备材料、工具、环境：</p><ul><li>准备材料：ESP01&#x2F;01S(注意：这是两个不同的模块，01和01S都可以)，继电器模块。可以直接买上面一套的那种，10.2 元的，还需要有一个<a href="https://item.taobao.com/item.htm?spm=a1z10.3-c-s.w4002-14787471870.9.3b686865MIRaa8&id=592475960151">烧录工具</a></li><li>工具：小螺丝刀，烧录工具，杜邦线等</li><li>环境：HomeAssistant ，ESPHome 环境，参考前两篇连载文章；</li></ul><p><a href="https://pic.codess.cc/images/2019/09/02/902221007.md.png"><img src="/posts/656768886/902221007.md.png" class="" title="902221007.png"></a></p><p>（需使用到的模块）</p><p>最右边的是一个烧录工具，它与上面我提供的链接里的不一样，但是功能是一样的。提供链接里的烧录器不需要上电<code>GPIO-0</code>拉高，但我图中的这种是需要拉高，才能进去烧录模式。</p><hr><h3 id="第二步：添加ESPHome硬件"><a href="#第二步：添加ESPHome硬件" class="headerlink" title="第二步：添加ESPHome硬件"></a>第二步：添加ESPHome硬件</h3><p>在局域网内，打开ESPHome管理界面，浏览器输入<code>群晖IP：6052</code>，打开主界面。点击右上角<code>加号</code>，开始添加设备的操作</p><p>1、在第一栏输入设备名称，可以自定义，只能由小写字母，不能大写字母开头，可以使用下划线、拼音，不遵循驼峰命名法则，写好之后点击蓝色按钮<code>CONITNUE</code></p><p><a href="https://pic.codess.cc/images/2019/09/02/902222115.md.png"><img src="/posts/656768886/902222115.md.png" class="" title="902222115.png"></a></p><p>2、设备类型选择：<code>Generic ESP8266</code>即默认的就可以。点击<code>CONITNUE</code></p><p><a href="https://pic.codess.cc/images/2019/09/02/902222357.md.png"><img src="/posts/656768886/902222357.md.png" class="" title="902222357.png"></a></p><p>3、输入Wifi信息，<code>注意：ESP8266 只支持2.4G wifi，不支持5G wifi</code>，请不要搞错了。OTA &amp; HA 连接密码，我这里填的是<code>1</code>，这里需要记住，后面要用到。</p><p><a href="https://pic.codess.cc/images/2019/09/02/wifipsw.md.png"><img src="/posts/656768886/wifipsw.md.png" class="" title="wifipsw.png"></a></p><p>4、输入完成之后，最后一步点击<code>SUBMIT</code>即可完成对设备的初步设定。<br><a href="https://pic.codess.cc/images/2019/09/02/902222640.md.png"><img src="/posts/656768886/902222640.md.png" class="" title="902222640.png"></a></p><hr><h3 id="第三步：编写配置文件代码"><a href="#第三步：编写配置文件代码" class="headerlink" title="第三步：编写配置文件代码"></a>第三步：编写配置文件代码</h3><p>这是关键的一步，在这里你需要通过编写一些配置代码，实现对这个设备的控制，一些简单的控制逻辑、传感器算法也是在这里配置的。不会很难，很简单的 &#x3D; &#x3D;、</p><p><a href="https://pic.codess.cc/images/2019/09/02/902224453.png"><img src="/posts/656768886/902224453.png" class="" title="902224453.png"></a></p><p>回到ESPHome配置界面，找到刚刚新建出来的<code>switch</code>硬件，点击②<code>EDIT</code> 进入编辑，代码如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">esphome:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">switch</span>        <span class="comment">##这里的名称一定要与你建立这个模块时的名称相同;</span></span><br><span class="line">  <span class="attr">platform:</span> <span class="string">ESP8266</span>   <span class="comment">##这里不能变;</span></span><br><span class="line">  <span class="attr">board:</span> <span class="string">esp01_1m</span>     <span class="comment">##这里不能变;</span></span><br><span class="line">  <span class="attr">esp8266_restore_from_flash:</span> <span class="literal">yes</span>  <span class="comment">## 是否断电记忆继电器状态;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">wifi:</span></span><br><span class="line">  <span class="attr">ssid:</span> <span class="string">&quot;test-wifi&quot;</span>     <span class="comment">## wifi账号;</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;12345678&quot;</span>  <span class="comment">## wifi密码;</span></span><br><span class="line">  <span class="attr">manual_ip:</span></span><br><span class="line">    <span class="attr">static_ip:</span> <span class="number">192.168</span><span class="number">.123</span><span class="number">.159</span>    <span class="comment">##固定此设备IP地址为192.168.123.156;</span></span><br><span class="line">    <span class="attr">gateway:</span> <span class="number">192.168</span><span class="number">.123</span><span class="number">.1</span>        <span class="comment">##路由器、网关地址;</span></span><br><span class="line">    <span class="attr">subnet:</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>         <span class="comment">##子网掩码;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable logging</span></span><br><span class="line"><span class="attr">logger:</span>                           <span class="comment">##输出Log；</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable Home Assistant API</span></span><br><span class="line"><span class="attr">api:</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;1&quot;</span>  <span class="comment">## api密码，用于链接ha验证；</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ota:</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">&quot;1&quot;</span>  <span class="comment">## ota密码，用于后续在线升级;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">web_server:</span>  <span class="comment">## web控制，添加了这2行，就可以在网页端打开设备ip;</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">switch:</span>                           <span class="comment">##设备类型;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">platform:</span> <span class="string">gpio</span>                <span class="comment">##平台;</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">&quot;test switch relay&quot;</span>      <span class="comment">##自定义名称，最好起关联的名称;</span></span><br><span class="line">    <span class="attr">pin:</span> <span class="string">GPIO0</span>                    <span class="comment">##ESP01/01S 是GPIO0脚;</span></span><br><span class="line">    <span class="attr">id:</span> <span class="string">relay</span>                     <span class="comment">##ID 为继电器开关;</span></span><br><span class="line">    <span class="attr">inverted:</span> <span class="literal">yes</span>                 <span class="comment">## inverted 参数，表示低电平有效，即继电器是低电平触发;</span></span><br></pre></td></tr></table></figure><h2 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a><strong>YAML</strong></h2><h3 id="第四步：校验-编译-下载"><a href="#第四步：校验-编译-下载" class="headerlink" title="第四步：校验-编译-下载"></a>第四步：校验-编译-下载</h3><p><code>.yaml</code>配置文件对空格、换行敏感，请特别注意！编写好了之后，点击右下角<code>SAVE</code>，然后点击④<code>VALIDATE</code> 检查一下配置文件有没有错误，如下图，出现右上角标志，表示配置文件没有错误，能通过校验。</p><p><a href="https://pic.codess.cc/images/2019/09/02/902230852.png"><img src="/posts/656768886/902230852.png" class="" title="902230852.png"></a></p><p>通过校验之后，点击<code>CLOSE</code>关闭校验窗口，回到主界面，点击<code>switch</code>右上角三个点，弹出来选择<code>Compile</code>开始编译固件，大概需要3-5分钟即可完成编译。</p><p><a href="https://pic.codess.cc/images/2019/09/02/902232232.png"><img src="/posts/656768886/902232232.png" class="" title="902232232.png"></a></p><p>（开始编译）</p><p><a href="https://pic.codess.cc/images/2019/09/02/902232501.png"><img src="/posts/656768886/902232501.png" class="" title="902232501.png"></a></p><p>（编译成功）</p><p>然后点击<code>DOWNLOAD BINARY</code>将固件下载到桌面。</p><p>2019.9.4，接着更…</p><p>上面编译完成的固件下载保存到桌面之后之后，就需要通过下载工具烧录到ESP01&#x2F;01S中了。</p><h3 id="第五步：烧录固件"><a href="#第五步：烧录固件" class="headerlink" title="第五步：烧录固件"></a>第五步：烧录固件</h3><p>烧录软件点击下面链接获取</p><p>复制地址到浏览器打开:<code>http://www.codess-yun.top:6860/index.php?share/file&amp;user=1&amp;sid=mZRfKghx</code></p><p>提取密码:<code>EkEe9</code></p><p>或者Github下载：<a href="https://github.com/esphome/esphome-flasher/releases">下载工具</a></p><p>首先，把ESP01&#x2F;01S接上烧录工具，注意方向，否则直接烧报废，还有<code>GPIO0需要拉低才能进入擦除Flash模式</code>，也就是:<code>拉低GPIO0再插入电脑USB</code></p><p><a href="https://pic.codess.cc/images/2019/09/05/905223706.png"><img src="/posts/656768886/905223706.png" class="" title="905223706.png"></a></p><p>(烧录成功)</p><hr><h3 id="第六步：接入HomeAssistant"><a href="#第六步：接入HomeAssistant" class="headerlink" title="第六步：接入HomeAssistant"></a>第六步：接入HomeAssistant</h3><p>让ESP插上继电器模块接入5v电源，**<code>注意：ESP01/01S模块的CH_PD引脚需要拉高至VCC才能正常工作！</code>**，如下图：</p><p><a href="https://pic.codess.cc/images/2019/09/05/905232320.png"><img src="/posts/656768886/905232320.png" class="" title="905232320.png"></a></p><p>(这里是为了演示引脚接法，实际使用中请不要直接使用焊锡飞线)</p><p>稍等一会儿在路由器管理界面就能看到接入的ESP设备，地址就是上面配置文件中你设置的地址，在这里就能测试继电器模块是否能正常工作，能显示这个界面，肯定是能工作的。</p><p><a href="https://pic.codess.cc/images/2019/09/05/905231755.png"><img src="/posts/656768886/905231755.png" class="" title="905231755.png"></a></p><p>(WEB管理界面，也可以在这里进行固件的升级)</p><p>然后打开 HomeAssistant管理界面，配置-Server Control ,重启一下服务，稍等一会儿，再刷新一下就能看到一个新设备了。</p><p><a href="https://pic.codess.cc/images/2019/09/05/905233358.png"><img src="/posts/656768886/905233358.png" class="" title="905233358.png"></a></p><p>按照步骤添加就行了</p><p><a href="https://pic.codess.cc/images/2019/09/05/905233504.png"><img src="/posts/656768886/905233504.png" class="" title="905233504.png"></a></p><p>下面的是你设置的连接HA密码，我设的是<code>1</code>;<br><a href="https://pic.codess.cc/images/2019/09/05/905233530.png"><img src="/posts/656768886/905233530.png" class="" title="905233530.png"></a></p><p>然后，在主界面，点击右上角三个点，“未使用的实体” 就能发现你刚添加的继电器了，然后“配置UI” — “原始UI编辑器” 加上下面的卡片代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">entities:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">switch.test_switch_relay</span></span><br><span class="line">  <span class="attr">show_header_toggle:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">测试房间</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">entities</span></span><br></pre></td></tr></table></figure><p><strong>YAML</strong></p><p>(注意：这里只是一张自定义卡片，请严格遵循缩进)</p><p>卡片示意图：</p><p><a href="https://pic.codess.cc/images/2019/09/05/905235118.png"><img src="/posts/656768886/905235118.png" class="" title="905235118.png"></a></p><p>打开HomeAssistant APP 和 Apple家庭应用：</p><p><a href="https://pic.codess.cc/images/2019/09/06/090611262320_0IMG_0357.png"><img src="/posts/656768886/090611262320_0IMG_0357.png" class="" title="090611262320_0IMG_0357.png"></a></p><p>自动添加，完美~</p><p>此时呼唤一句：嘿~ Siri，打开“测试开关”试试？</p><p>到了这里，台灯的智能改造已经完成95%了，至于后面怎么接入、改造台灯部分，那就自己发挥啦，强电一定要注意安全哦。</p><p>这篇教程终于写完了，难倒是不难，可是写教程真的非常耗费时间啊啊啊….</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://codess.cc/archives/277.html">智能家居篇-3：ESP-01&#x2F;01S 接入HomeAssistant，实现Siri控制</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP01S使用自带ESPHome来接入Home Assistant</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESPHome" scheme="https://zml3589110.github.io/categories/ESPHome/"/>
    
    <category term="Home Assistant" scheme="https://zml3589110.github.io/categories/Home-Assistant/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="ESPHome" scheme="https://zml3589110.github.io/tags/ESPHome/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP01S" scheme="https://zml3589110.github.io/tags/ESP01S/"/>
    
    <category term="Home Assistant" scheme="https://zml3589110.github.io/tags/Home-Assistant/"/>
    
  </entry>
  
  <entry>
    <title>ESP01S使用Tasmota接入MQTT</title>
    <link href="https://zml3589110.github.io/posts/3246252773.html"/>
    <id>https://zml3589110.github.io/posts/3246252773.html</id>
    <published>2023-12-27T01:39:20.000Z</published>
    <updated>2023-12-27T01:57:53.429Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://ota.tasmota.com/tasmota/release/">Tasmota 地址</a></p><h1 id="使用好处"><a href="#使用好处" class="headerlink" title="使用好处"></a>使用好处</h1><p>这个bin可以自定义设置各种脚位和MQTT功能，直接使用配置，很像AT固件，通过这个可以连接MQTT，也就是说能够实现数据上传下载功能啦，至少不会定死脚位跟功能，这点是很好！实现原理无非就是登陆配置并保存配置，只是这个功能很是齐全！</p><p><strong>创作立场声明：</strong>本文所测商品为自购，纯技术陪玩娱乐</p><p>大家好，我是一个混迹于各个奇怪时间地点，喜欢划水的小妖怪，人称划水怪。</p><p>应一个好友的邀请，加入了Home Assistant 进行智能设备的娱乐。</p><p>泛学科学习总是收益颇丰，这得益于查理·芒格的启发。（阅读是终身受益的项目）</p><p>因为是陪玩项目，一些东西不会在这里赘述。诸如如何安装Home Assistant（以下简称“HA”），如何部署MQTT服务器等等，烦请自行找寻资料。</p><p>因为本次玩的项目涉及到强点部分，对于物理知识薄弱，没有电工基础的朋友是不建议尝试，仅仅当作一个科普文章 “趣”阅读其实也挺好的。</p><p>在HA中加入了粗粮（“某知名智能设备品牌”）的智能设备，第一个自己做的智能设备项目是给家里安装了一个联网的“电表“。</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_2/"><img src="/posts/3246252773/61ab6e3d6b63a8121.png_e1080.jpg" class="" title="划水怪的第一个陪玩项目：如何用ESP01S打造一个智能插座"></a></p><p>再次基础上又向一个新的项目，如何通过ESP01S 打造一个智能<a href="https://www.smzdm.com/fenlei/chazuo/">插座</a>进行了新的学习和尝试。</p><p>材料:</p><p>ESP01S 模块，USB转TTL CH340模块， WIFI<a href="https://www.smzdm.com/ju/s2yvr10/">继电器</a>Relay 模块，220V转5V 1A 模块，为了更好地展示细节，我还采购了一个标准的插座底座，模拟一个装修场景。</p><p>以下开始我们本次探索之旅：</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_3/"><img src="/posts/3246252773/61ab5cb54abe99012.jpg_e1080.jpg" class="" title="模块们"></a>模块们</p><p>关于CH340烧录，因为我之前有折腾过给杂粮的网关刷固件，所以自己手上有这个简单版的，如果第一次购买，建议直接买那个专用的，这样不会有一个意想不到的坑，这个一会也会提及。</p><p>第一步是给ESP01S烧录固件。</p><h1 id="本次构建用的事-Home-Assistant-Tasmota-MQTT"><a href="#本次构建用的事-Home-Assistant-Tasmota-MQTT" class="headerlink" title="本次构建用的事 Home Assistant + Tasmota +MQTT"></a>本次构建用的事 Home Assistant + Tasmota +MQTT</h1><p>所以第一步是给ESP01S刷上Tasmota的固件，以下是文件下载地址</p><p><a href="http://ota.tasmota.com/tasmota/release/">http://ota.tasmota.com/tasmota/release/</a> 选择 tasmota-CN.bin 这个固件就可以了，</p><p>烧录软件 <a href="https://docs.ai-thinker.com/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B72">开发工具清单 | 安信可科技 (ai-thinker.com)</a></p><p>如果你们买的专用的烧录，那么可能就是这般简单</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_4/"><img src="/posts/3246252773/61ab5ecbca3a14830.png_e1080.jpg" class="" title="划水怪的第一个陪玩项目：如何用ESP01S打造一个智能插座"></a></p><p>但是我用的不是这个就得折腾一点：</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_5/"><img src="/posts/3246252773/61ab5f6e7b46f5189.jpg_e1080.jpg" class="" title="烧录"></a>烧录</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_6/"><img src="/posts/3246252773/61ab5f77011fe605.jpg_e1080.jpg" class="" title="ESP01S"></a>ESP01S</p><p>这里有两个重点，一个是RX接TX,TX接RX。另一个重点是IO0这个需要先接地，然后在烧录过程中拔掉。所以建议直接买现成的专用工具。</p><p>启动烧录软件：</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_7/"><img src="/posts/3246252773/61ab5ff9346e92148.png_e1080.jpg" class="" title="烧录初始界面"></a>烧录初始界面</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_8/"><img src="/posts/3246252773/61ab600c4e84d6720.png_e1080.jpg" class="" title="串口"></a>串口</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_9/"><img src="/posts/3246252773/61ab602515b842689.png_e1080.jpg" class="" title="烧录中"></a>烧录中</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_10/"><img src="/posts/3246252773/61ab605638f934584.png_e1080.jpg" class="" title="烧录完成"></a>烧录完成</p><p>把USB拔出来，TX和RX线可以不用了，然后重新插到电脑上。</p><p>这个时候ESP01S就会开始广播WIFI了</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_11/"><img src="/posts/3246252773/61ab61c839c707278.jpg_e1080.jpg" class="" title="连接WIFI"></a>连接WIFI</p><p>只要连上WIFI就会自动跳转到192.168.4.1的网关界面。这个时候给ESP01S连上你们自己的网络。等待联网和重启。一般会提示新的网关地址，也有可能不提示，那么你们就需要到路由器里面去找到这个模块的IP，因为名字是</p><p>Tasmota开头的，所以比较好认，这里不赘述。</p><p>接下来我们就是给模块连接到MQTT。</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_12/"><img src="/posts/3246252773/61ab62f289efc2015.png_e1080.jpg" class="" title="设置MQTT"></a>设置MQTT</p><p>接下来我们就要设置模块，通过以下这张图我们我们可以清楚地了解到我们的控制是通过GIO0实现的。</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_13/"><img src="/posts/3246252773/61ab63b0db9e784.jpg_e1080.jpg" class="" title="ESP01S电路图"></a>ESP01S电路图</p><p>这个时候我们就可以为我们这个娱乐项目创建一个模板</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_14/"><img src="/posts/3246252773/61ab6428a672a8380.png_e1080.jpg" class="" title="设置控制模板"></a>设置控制模板</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_15/"><img src="/posts/3246252773/61ab6439e09712039.png_e1080.jpg" class="" title="完成控制模板设置"></a>完成控制模板设置</p><p>以上就是最基本的软件设置了。</p><p>接下来，我们就要开始组件我们的硬件们</p><p>电路图</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_16/"><img src="/posts/3246252773/61ab6893066588922.jpg_e1080.jpg" class="" title="Relay模块接线"></a>Relay模块接线</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_17/"><img src="/posts/3246252773/61ab68b4712359604.jpg_e1080.jpg" class="" title="完整的接线"></a>完整的接线</p><p>以下是测试装入底座的可能性</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_18/"><img src="/posts/3246252773/61ab68de5712c5474.jpg_e1080.jpg" class="" title="放入插座底座"></a>放入插座底座</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_19/"><img src="/posts/3246252773/61ab68f7d82af8400.jpg_e1080.jpg" class="" title="仍然有足够的空间"></a>仍然有足够的空间</p><p>最后成品</p><p><a href="https://post.smzdm.com/p/a7d3o2wd/pic_20/"><img src="/posts/3246252773/61ab6a0aeb43e1538.jpg_e1080.jpg" class="" title="完成"></a>完成</p><p>因为没有上传视频，所以未能提供视频展示。</p><p>写在最后的感想：</p><p>第一次试着把自己玩耍的过程记录下载，这是一个好玩的尝试。也深刻体会到在玩的过程中一边做记录的幸苦。如果教程对你们有帮助希望你们都能给这个PO 主精神上予以支持。</p><p>在这次时间的过程中实际也踩了好些奇奇怪怪地坑，翻阅了很多基础的文件。也在实践过程中不断学习，领悟到其中的原理。</p><p>智能家居只是一个引子。一个契机让我们这群老男孩去重新学习一个新的东西，学习一些编程语言。保有爱好让我们自觉更加快乐。</p><p>编程的小物件（不涉及强电）也适合家长和孩子进行互动，探讨，共同学习。</p><p>Stay foolish，Stay Hungry. 致敬乔帮主</p><p>如果能够得到大家的鼓励，我会在不久的将来出一个打造智能<a href="https://www.smzdm.com/fenlei/kaiguan/">开关</a>的陪玩教程。。。下次再见</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://post.smzdm.com/p/a7d3o2wd/">划水怪的第一个陪玩项目：如何用ESP01S打造一个智能插座</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP01S接入Home Assistant + Tasmota +MQTT</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="Tasmota" scheme="https://zml3589110.github.io/categories/Tasmota/"/>
    
    <category term="MQTT" scheme="https://zml3589110.github.io/categories/MQTT/"/>
    
    <category term="Home Assistant" scheme="https://zml3589110.github.io/categories/Home-Assistant/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP01S" scheme="https://zml3589110.github.io/tags/ESP01S/"/>
    
    <category term="Tasmota" scheme="https://zml3589110.github.io/tags/Tasmota/"/>
    
    <category term="MQTT" scheme="https://zml3589110.github.io/tags/MQTT/"/>
    
    <category term="Home Assistant" scheme="https://zml3589110.github.io/tags/Home-Assistant/"/>
    
  </entry>
  
  <entry>
    <title>ESP01S接入苹果homekit</title>
    <link href="https://zml3589110.github.io/posts/149085255.html"/>
    <id>https://zml3589110.github.io/posts/149085255.html</id>
    <published>2023-12-27T00:41:20.000Z</published>
    <updated>2023-12-27T00:41:49.927Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方式一：导入三个文件，认证码-11111111"><a href="#方式一：导入三个文件，认证码-11111111" class="headerlink" title="方式一：导入三个文件，认证码 11111111"></a>方式一：导入三个文件，认证码 11111111</h1><p><a href="https://gitee.com/qcchat/esp-homekit-direct">https://gitee.com/qcchat/esp-homekit-direct</a></p><p><a href="git@gitee.com:dai_jian/Sonoff-Homekit.git">Sonoff-Homekit</a></p><h2 id="bilibili视频使用的文件"><a href="#bilibili视频使用的文件" class="headerlink" title="bilibili视频使用的文件"></a>bilibili视频使用的文件</h2><p>固件和工具下载地址：<br>链接：<a href="https://pan.baidu.com/s/1zppF3IUorvEO7knatS5piQ">https://pan.baidu.com/s/1zppF3IUorvEO7knatS5piQ</a> 提取码：xso7<br>源码地址：<a href="https://github.com/LeeLulin/esp-homekit-direct">https://github.com/LeeLulin/esp-homekit-direct</a></p><h3 id="网盘文件使用说明"><a href="#网盘文件使用说明" class="headerlink" title="网盘文件使用说明"></a>网盘文件使用说明</h3><p>下载网盘上的连接，有三个文件依次烧录即可<br><strong>rboot.bin 0x0<br>blank_config.bin 0x1000<br>switch.bin 0x2000</strong><br>先擦除后下载即可！</p><h3 id="源码说明"><a href="#源码说明" class="headerlink" title="源码说明"></a>源码说明</h3><p>在window上使用git乌龟下载一直失败，在使用git bash 命令拉下来的时候成功了，也不知什么原因！</p><p>这个库使用的使用 esp-open-rtos 系统，所以前面要先把这个环境搭建好！ 这个环境介绍说明的是跟 esp-free-rtos 一样，只是编译模式有所不同，每一个文件工程都独立包含了 esp-open-rtos 工程文件，而 esp-free-rtos 则是把总工程放到一个地方，有点像 SVN 和 GIT 的区别，一个完全copy副本，一个不需要！</p><p>在安装好环境之后就能根据 MD 文件说明操作，但是，在编译的时候会报错，一般报错就根据报错地方修改即可！</p><h4 id="报错一：wifi-config-c文件中找不到html配置信息"><a href="#报错一：wifi-config-c文件中找不到html配置信息" class="headerlink" title="报错一：wifi_config.c文件中找不到html配置信息"></a>报错一：wifi_config.c文件中找不到html配置信息</h4><img src="/posts/149085255/2023-12-26_201506.png" class="" title="html文件"><p>这个故障主要是wifi配置html页面无法生成，故而在编译时也没法找到这些const字段。</p><img src="/posts/149085255/2023-12-26_202430.png" class="" title="embed文件错误"><p>在排查以后才发现主要还是 <strong>esp-homekit-direct\external_libs\wifi_config\tools\embed.py</strong> 文件错误导致的</p><p>两处 print 均报错，需要加上括号后才能通过并编译出相应的 html 字段<br>print ‘Error: no parts found’ 修改为：print (‘Error: no parts found’)<br>print gen_embedded(f.read()) 修改为：print (gen_embedded(f.read()))</p><h4 id="报错二：生成-switch-bin-时设置的内存错误"><a href="#报错二：生成-switch-bin-时设置的内存错误" class="headerlink" title="报错二：生成 switch.bin 时设置的内存错误"></a>报错二：生成 switch.bin 时设置的内存错误</h4><img src="/posts/149085255/2023-12-26_205613.png" class="" title="firmware"><p>在输出内存配置中，选项为 xMB，例如这个模块8MB，但设置的时候为8m，会报错且无法输出 bin 文件。<br>这时候就需要修改 <strong>esp-homekit-direct\sdk\esp-open-rtos\parameters.mk</strong> 文件。</p><img src="/posts/149085255/2023-12-26_202721.png" class="" title="mk文件"><p>然后重新编译就能得到 switch.bin 了</p><p>感觉这个方式接入 homekit 是最方便的了，另一个种 installer 方式接入会等待 github很久而且还不一定成功，可能是因为墙的原因。<br>而这种方式就能很快接入 家庭，不过还未试看能否接入 HomeAssistan 了。</p><h2 id="（步骤详细）ESP8266控制继电器（支持HOMEKIT）"><a href="#（步骤详细）ESP8266控制继电器（支持HOMEKIT）" class="headerlink" title="（步骤详细）ESP8266控制继电器（支持HOMEKIT）"></a>（步骤详细）ESP8266控制继电器（支持HOMEKIT）</h2><p><strong>ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）</strong><br>首先感谢：<a href="https://github.com/RavenSystem/esp-homekit-devices">https://github.com/RavenSystem/esp-homekit-devices</a>   <a href="https://gitcode.com/ravensystem/esp-homekit-devices/overview?utm_source=csdn_github_accelerator&isLogin=1">——&gt;镜像地址</a></p><p><a href="https://github.com/Gruppio/Sonoff-Homekit">https://github.com/Gruppio/Sonoff-Homekit</a>   <a href="https://gitcode.com/mirrors/Gruppio/Sonoff-Homekit/overview">——&gt;镜像地址</a></p><p>主要设备：ESP8266、1路5V继电器、杜邦线若干。</p><img src="/posts/149085255/20190113140601235.jpg" class="" title="ESP8266"><img src="/posts/149085255/image-20231226210852275.png" class="" title="image-20231226210852275"><img src="/posts/149085255/image-20231226210922313.png" class="" title="image-20231226210922313"><p>下面开始进入正题：开始给ESP8266刷固件<br><a href="https://pan.baidu.com/s/1Xp3CvFbdh4McnkBIacfsuQ">https://pan.baidu.com/s/1Xp3CvFbdh4McnkBIacfsuQ</a> （固件自取）</p><p>本次采用esptool.py来刷鞋固件，所以需要给电脑安装python环境。<br><strong><a href="http://安装esptool.py/">安装esptool.py</a></strong><br>pip install esptool<br><strong>切换到python的安装路径不知道在哪的输入</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where python</span><br></pre></td></tr></table></figure><img src="/posts/149085255/20190113142401883.png" class="" title="python路径"><p>cd &#x2F;python路径 切换到python安装目录，在此目录下放上我们要刷写的固件</p><img src="/posts/149085255/20190113142724432.png" class="" title="固件截图"><p>好，开始用micro-USB线将ESP8266连接到计算机（如果不识别自行安装CH340驱动）记住端口号，我的是COM3</p><img src="/posts/149085255/20190113143206883.png" class="" title="端口号"><p>先清空flash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py --port COM3 erase_flash</span><br></pre></td></tr></table></figure><img src="/posts/149085255/2019011314341874.png" class="" title="清空FLASH"><p><strong>刷入固件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p COM3 -b 115200 write_flash -fs 1MB -fm dout -ff 40m 0x0 rboot.bin 0x1000 blank_config.bin 0x2000 Sonoff_ON.bin</span><br></pre></td></tr></table></figure><img src="/posts/149085255/20190113143825879.png" class="" title="刷固件"><p>到这里固件已经刷入完成，搜索WIFI看到名为Switch-******的SSID，连接上后进入192.168.4.1进行设置为其连接上一个可联网的WIFI。</p><img src="/posts/149085255/20190113144217426.png" class="" title="在这里插入图片描述"><p>这时打开ios的家庭APP，添加配件，选择“我没有代码或无法扫描”输入配对码：11111111</p><img src="/posts/149085255/20190113144537603.png" class="" title="在这里插入图片描述"><img src="/posts/149085255/20190113144609464.png" class="" title="在这里插入图片描述"><p>我们可以从串口信息看到正在添加HOMEKIT 客户端</p><img src="/posts/149085255/20190113145119352.png" class="" title="在这里插入图片描述"><p>这时已经成功添加到家庭APP，支持SIRI控制</p><img src="/posts/149085255/20190113145151882.png" class="" title="在这里插入图片描述"><p>接下来，让我们把继电器连接到ESP8266的D6 (GPIO12)口上。ESP8266接笔记本的USB口可能会供电不足导致不能控制继电器。我在这里就用充电宝做电源了。我们可以试试让siri帮你开关继电器了</p><img src="/posts/149085255/2019011314553482.jpg" class="" title="在这里插入图片描述"><img src="/posts/149085255/20190113145902241.png" class="" title="在这里插入图片描述"><h1 id="方式二：一个文件-fullhaabot-bin"><a href="#方式二：一个文件-fullhaabot-bin" class="headerlink" title="方式二：一个文件 fullhaabot.bin"></a>方式二：一个文件 fullhaabot.bin</h1><p><strong>这个方法刷入并设置好WIFI后需要等待很久，看串口日志发现需要下载 github 上的 HAA文件下来，所以十分缓慢，而且 JSON 格式的 GPIO 设置自己还是没弄成功，这个也有相应的库</strong></p><h2 id="20-元将普通电灯接入"><a href="#20-元将普通电灯接入" class="headerlink" title="20 元将普通电灯接入"></a>20 元将普通电灯接入</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最开始我是看到 B 站有刷固件接入 HomeKit 的视频，我了解了一下之后觉得有些问题，他们都用的是统一的一个 Sonoff 固件，刷入之后可以直接通过 NodeMCU D6 <strong>GPIO12</strong> 引脚输出高低电平，但是我甚至没找到这个固件的来源，所有视频都是草草地丢一个下载链接，告诉你下载刷进去就行了…而且这个输出引脚没法修改，后期接线的话会有一些问题。</p><p>后来我在 GitHub 上找到一个项目 <a href="https://github.com/RavenSystem/esp-homekit-devices">RavenSystem&#x2F;esp-homekit-devices</a>，该固件可以刷入采用 8266 芯片的设备，接入 HomeKit 并提供丰富的自定义选项，而我之前在 B 站看到的固件，应该就是基于该项目修改，原本用于 Sonoff 开关的一个固件（查了一下 Sonoff 是深圳一家公司的物联网产品，主打 WiFi 继电器）。那么就可以通过该项目，很轻松地实现我们的目标。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>我们需要这些东西：</p><p><a href="https://imwtx.com/usr/uploads/2020/04/859902515.jpg"><img src="/posts/149085255/859902515.jpg" class="" title="ESP-01"></a></p><p><a href="https://imwtx.com/usr/uploads/2020/04/762280384.jpg"><img src="/posts/149085255/762280384.jpg" class="" title="继电器"></a></p><p><a href="https://imwtx.com/usr/uploads/2020/04/934420998.jpg"><img src="/posts/149085255/934420998.jpg" class="" title="200V 转 5V"></a></p><table><thead><tr><th align="left">材料</th><th align="left">价格</th></tr></thead><tbody><tr><td align="left">ESP-01</td><td align="left">6.02 元</td></tr><tr><td align="left">继电器模块</td><td align="left">8 元</td></tr><tr><td align="left">220V 转 5V 降压模块</td><td align="left">6.25 元</td></tr><tr><td align="left">总计</td><td align="left">20.45 元</td></tr></tbody></table><p>除了这些以外，还需要杜邦线若干，ESP-01 USB 转串口下载器一个。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/348784334.jpg"><img src="/posts/149085255/348784334.jpg" class="" title="杜邦线"></a></p><p><a href="https://imwtx.com/usr/uploads/2020/04/3231254825.jpg"><img src="/posts/149085255/3231254825.jpg" class="" title="USB 转串口"></a></p><p><a href="https://imwtx.com/usr/uploads/2020/04/2888607209.jpg"><img src="/posts/149085255/2888607209.jpg" class="" title="NodeMCU"></a></p><p>为什么不用 NodeMCU 呢，因为开发板体积太大了，不必要的引脚和模块浪费空间，而且 ESP-01 有配套的继电器模块，8 个引脚一一对应，可以直接插在上面，由继电器给 ESP-01 供电，并通过 GPIO 0 引脚控制继电器，避免了复杂的接线。</p><h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><p>首先给 ESP-01 刷入固件。</p><p><del>下载这三个文件 <a href="https://github.com/RavenSystem/haa_ota/releases/latest/download/haaboot.bin">haaboot.bin</a> <a href="https://github.com/SuperHouse/esp-open-rtos/raw/master/bootloader/firmware_prebuilt/rboot.bin">rboot.bin</a> <a href="https://github.com/SuperHouse/esp-open-rtos/raw/master/bootloader/firmware_prebuilt/blank_config.bin">blank_config.bin</a>。</del></p><p><strong>6 月 5 日 更新：</strong></p><p>今天发现 HAA 更新了他们的安装方式，之前的三个文件变成了一个 <a href="https://github.com/RavenSystem/haa/releases/latest/download/fullhaaboot.bin">fullhaabot.bin</a>。现在只需要下载这一个文件就可以了。</p><p>通过下载器让 ESP-01 连接电脑并进入烧录模式（flash-mode）。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/107259591.jpg"><img src="/posts/149085255/107259591.jpg" class="" title="下载"></a></p><p>根据下载器所使用的 USB 转串口芯片安装对应的驱动程序。完成之后在 <code>设备管理器 - 端口</code> 中应该能看到对应设备，记录下设备名之后所对应的串口号。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/2664456500.png"><img src="/posts/149085255/2664456500.png" class="" title="设备管理器"></a></p><p>鼠标右键点击 <code>属性 - 端口设置</code>，在 <code>位/秒(B)</code> 选项中修改当前的波特率，默认应该为 <code>9600</code>，为了下面脚本方便这里改为 <code>115200</code>。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/37624545.png"><img src="/posts/149085255/37624545.png" class="" title="波特率"></a></p><p>这里我们采用 <a href="https://github.com/espressif/esptool">esptool.py</a> 来刷入固件，电脑需要有 Python 环境。</p><p>安装 esptool.py：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install esptool</span><br></pre></td></tr></table></figure><p><strong>Shell</strong></p><p>然后抹除 ESP-01 的闪存：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p /dev/&lt;your_ESPPort&gt; erase_flash</span><br></pre></td></tr></table></figure><p><strong>Shell</strong></p><p>这里的 <code>/dev/&lt;your_ESPPort&gt;</code> 对应刚才在设备管理器中看到的端口号 COMx。</p><p><del>最后刷入刚才下载的三个文件：</del></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p /dev/&lt;your_ESPPort&gt; --baud 115200 write_flash -fs 1MB -fm dout -ff 40m 0x0 rboot.bin 0x1000 blank_config.bin 0x2000 haaboot.bin # 更新之后用下面的方式刷入新文件</span><br></pre></td></tr></table></figure><p><strong>Shell</strong></p><p>现在只需要刷入这一个文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p /dev/&lt;your_ESPPort&gt; --baud 115200 write_flash -fs 1MB -fm dout -ff 40m 0x0 fullhaaboot.bin</span><br></pre></td></tr></table></figure><p><strong>Shell</strong></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>完成之后，ESP-01 会建立一个 SSID 为 <code>HAA-XXXXXX</code> 的开放 2.4GHz WiFi 热点，连接它，等待几秒钟，就会跳转到 Home Accessory Architect 的配置页面。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/3813654022.jpeg"><img src="/posts/149085255/3813654022.jpeg" class="" title="Home Accessory Architect"></a></p><p>这里我们需要写一个 JSON 来配置 ESP-01 的功能，HAA 提供了相当丰富的物联网设备类型供我们选择，这里我们选择相对简单的的开关（Switch）来配置。</p><p>将 wiki 中提供的范例 JSON 稍加修改：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;c&quot;</span>: &#123; <span class="attr">&quot;l&quot;</span>: <span class="number">1</span>, <span class="attr">&quot;b&quot;</span>: [&#123; <span class="attr">&quot;g&quot;</span>: <span class="number">2</span>, <span class="attr">&quot;t&quot;</span>: <span class="number">5</span> &#125;] &#125;,</span><br><span class="line">  <span class="attr">&quot;a&quot;</span>: [&#123;</span><br><span class="line">    <span class="attr">&quot;t&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;s&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;0&quot;</span>: &#123; <span class="attr">&quot;r&quot;</span>: [&#123; <span class="attr">&quot;g&quot;</span>: <span class="number">0</span>, <span class="attr">&quot;v&quot;</span>: <span class="number">1</span> &#125;] &#125;,</span><br><span class="line">    <span class="attr">&quot;1&quot;</span>: &#123; <span class="attr">&quot;r&quot;</span>: [&#123; <span class="attr">&quot;g&quot;</span>: <span class="number">0</span>, <span class="attr">&quot;v&quot;</span>: <span class="number">0</span> &#125;] &#125;,</span><br><span class="line">    <span class="attr">&quot;b&quot;</span>: [&#123; <span class="attr">&quot;g&quot;</span>: <span class="number">2</span> &#125;]</span><br><span class="line">  &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>JSON</strong></p><p>这里表示了一个基本类型的开关（<code>&quot;t&quot;: 1</code>），通过 GPIO 0 控制继电器，因为这个继电器模块是 GPIO 0 低电平时闭合，所以在下面的 <code>&quot;0&quot;</code> 表示开关关闭的选项中 <code>&quot;v&quot;: 1</code> 表示高电平，而 <code>&quot;1&quot;</code> 与之相反。LED 指示灯定义为 GPIO 1，按钮定义为 GPIO 2，<code>&quot;s&quot;: 1</code> 表示通电后默认为开关打开状态。</p><p>详细的配置规则可以参阅原项目的 <a href="https://github.com/RavenSystem/esp-homekit-devices/wiki/Switches">Wiki</a>。</p><p>将 JSON 填入配置页面，并在下方连接 WiFi，注意 ESP-01 仅能连接 2.4GHz 的 WiFi。</p><p>之后点击保存并等待 7 分钟左右，完成后 LED 会亮起几秒钟。</p><p>在设备安装或者更新的时候，可以在 macOS 或 GNU&#x2F;Linux 设备上通过下面的命令检测日志获取设备状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -kulnw0 45678</span><br></pre></td></tr></table></figure><p><strong>Shell</strong></p><h2 id="接线"><a href="#接线" class="headerlink" title="接线"></a>接线</h2><p>将 220V 的火线与零线接到 220V 转 5V 降压模块上。</p><p>降压模块输出 5V 电接入继电器的 VCC 与 GND。将 ESP-01 插在继电器上，因为该继电器自带一个 5V 转 3.3V，所以可以直接给 ESP-01 供电。</p><p>将继电器的常开端（NO）与通用端（COM）与灯泡和 220V 连接，当继电器闭合时即形成回路点亮灯泡。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/3817180843.jpg"><img src="/posts/149085255/3817180843.jpg" class="" title="接线"></a></p><h2 id="添加-HomeKit-设备"><a href="#添加-HomeKit-设备" class="headerlink" title="添加 HomeKit 设备"></a>添加 HomeKit 设备</h2><p>在 iOS 设备中打开「家庭」App，通过下方的设置代码，按照正常步骤添加新配件。大约等待 30 秒即可添加完成。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/3106914530.png"><img src="/posts/149085255/3106914530.png" class="" title="QR-Code"></a>QR-Code</p><p><a href="https://imwtx.com/usr/uploads/2020/04/3727147545.jpg"><img src="/posts/149085255/3727147545.jpg" class="" title="Normal Code"></a>Normal Code</p><p>现在我们就可以在 iOS 设备上通过 HomeKit 控制灯泡了。</p><p><a href="https://imwtx.com/usr/uploads/2020/04/2321898814.png"><img src="/posts/149085255/2321898814.png" class="" title="添加配件"></a></p><p><a href="https://imwtx.com/usr/uploads/2020/04/4139855746.png"><img src="/posts/149085255/4139855746.png" class="" title="设置配件"></a></p><p><a href="https://imwtx.com/usr/uploads/2020/04/1199656558.png"><img src="/posts/149085255/1199656558.png" class="" title="家庭"></a></p><p><a href="https://imwtx.com/usr/uploads/2020/04/208523972.png"><img src="/posts/149085255/208523972.png" class="" title="Siri"></a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.bilibili.com/video/BV1jE411K7AE/?vd_source=a92d344f368228401039c4668df84983">（bilibili视频）仅用20元成本，将esp8266接入HomeKit，用Siri控制你的灯</a></li><li><a href="https://blog.csdn.net/TWTF1998/article/details/86419559">ESP8266控制继电器（支持HOMEKIT）</a></li><li><a href="https://imwtx.com/archives/143/">20 元将普通电灯接入 HomeKit</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP01S接入homekit，实现苹果家庭控制</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP01S" scheme="https://zml3589110.github.io/tags/ESP01S/"/>
    
    <category term="homekit" scheme="https://zml3589110.github.io/tags/homekit/"/>
    
    <category term="esp-homekit-direct" scheme="https://zml3589110.github.io/tags/esp-homekit-direct/"/>
    
    <category term="esp-homekit-devices" scheme="https://zml3589110.github.io/tags/esp-homekit-devices/"/>
    
  </entry>
  
  <entry>
    <title>ESP8266及ESP32固件生成及烧录方法</title>
    <link href="https://zml3589110.github.io/posts/2449930636.html"/>
    <id>https://zml3589110.github.io/posts/2449930636.html</id>
    <published>2023-12-23T09:16:20.000Z</published>
    <updated>2023-12-23T09:25:58.137Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>ESP32模块是将天线开关、RF balun、功率放大器、接收低噪声放大器、滤波器、电源管理模块等功能集于一体。ESP32只需极少的外围器件，即可实现强大的处理性能、可靠的安全性能，和 Wi-Fi &amp; 蓝牙功能。</p><p>采购新的ESP32模块的时候，里面是没有AT指令固件的，需要进行烧录，下面以ESP-32S为例进行说明，同时也作为以后工作中使用。</p><p>相关的工具和资料，可以关注我的公众号，回复“ <strong>ESP-32S</strong> ”，进行下载。</p><img src="/posts/2449930636/640" class="" title="null"><p><strong>一、烧录工具介绍</strong></p><p><strong>软件介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在这里，老刘使用的是：  </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flash_download_tool_v3.8.7_0</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们将软件进行解压缩，找到以下图标的exe文件。</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以管理员的模式进行打开。</span><br></pre></td></tr></table></figure><p> <img src="https://mmbiz.qpic.cn/sz_mmbiz_png/wusRysY7oJxqDCBT80Jia11gGTkiaR1lPEgURUVc1jFmBFAprEqmfyoue8tu6o8spficl21yxotrzGibKicEx0cllvA/640?wx_fmt=png" alt="null"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">其中ChipType我们选择“ESP32”，</span><br><span class="line"></span><br><span class="line">          WorkMode我们选择“develop”。点击OK。</span><br><span class="line"></span><br><span class="line">   弹出以下对话框。</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><p>①我们选择SPIDownload</p><p>②点击…找到我们要下载固件的路径，地址为0x0</p><p>③默认的是40MHz</p><p>④默认的DIO模式</p><p>⑤要进行DoNotChgBin的勾选</p><p>⑥开始下载、停止、擦除按钮</p><p>⑦选择电脑识别的COM口，可以在设备管理器里面进行查询，而波特率，个人建议越大越好，下载的速度会快一些。</p><p><strong>硬件连接</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用串口调试助手，连接到模块的&quot;下载固件&#x2F;输出日志&quot;的串口，在这里，根据文档中，ESP-32S模块的&quot;下载固件&#x2F;输出日志&quot;的串口为U0TXD和U0RXD。分别连接到USB转串口的工具上。别忘记连接GND。  </span><br><span class="line"></span><br><span class="line">在下载固件的时候，需要将模块的IO0和GND进行相连。通过ESP-32S的资料可以看出。</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><p><strong>进行下载</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">点击START按键的时候，会有如下提示：</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SYNC等待上电同步，右边的窗口也在等待中，我们将ESP32模块重新上电。</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">软件自动进行下载操作，直到显示FINISH完成</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><p>至此，下载完成，如果不成功，有以下几种可能，需要注意一下：</p><p>a、下载的版本号不对；</p><p>b、选择的bin文件不对；</p><p>c、没有勾选DoNotChgBin</p><p>d、没有选对COM口（USB转串口的COM以及模块的下载串口）</p><p>e、没有将GPIO0和GND相连。</p><p><strong>二、at.py工具的使用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">该工具是用来修改ESP-AT官方发布的固件，包括Wi-Fi配置、证书和密钥配置、串口配置、GATTS配置等等。我们使用这个工具来进行&quot;AT命令响应&quot;串口的配置，配置为GPIO16和GPIO17。  </span><br><span class="line"></span><br><span class="line">方法如下：  </span><br></pre></td></tr></table></figure><p><strong>a、python安装（3.7版本以上，在这里默认安装好了）</strong></p><p>**b、at.py下载（在我的资料包里面有，或者从官网下载） **<img src="/posts/2449930636/640" class="" title="null"></p><p><strong>c、查看at.py的用法</strong></p><p>在命令行中输入以下指令：</p><ul><li></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python at.py modify_bin --help</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">会有详细的说明，我们现在使用更改串口的指令。按照官方的说明进行设置。</span><br></pre></td></tr></table></figure><p><strong>d、修改AT指令的串口</strong><img src="/posts/2449930636/640" class="" title="null"></p><ul><li></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python at.py modify_bin --baud 921600 --tx_pin 17 --rx_pin 16 --cts_pin -1 --rts_pin -1 --input factory_XXX.bin  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 注意factory\_XXX.bin文件可以到官网下载，也可以使用老刘资料包中的文件。</span><br><span class="line"></span><br><span class="line"> 官网下载地址：</span><br></pre></td></tr></table></figure><ul><li></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docs.ai-thinker.com&#x2F;en&#x2F;esp32&#x2F;sdk</span><br></pre></td></tr></table></figure><img src="/posts/2449930636/640" class="" title="null"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">更改之后，生成了新的bin文件。而文件名称是target.bin文件，而且每次生成的都是这个文件名字，可以查看一下at.py文件，可以看见以下的代码，默认的就是target.bin。</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">parser_modify_bin.add_argument(&#39;--output&#39;, &#39;-o&#39;,  </span><br><span class="line"> help&#x3D;&#39;Output filename of AT firmware or parameter partition&#39;,  </span><br><span class="line"> metavar&#x3D;&#39;filename&#39;,  </span><br><span class="line"> type&#x3D;str,  </span><br><span class="line"> default&#x3D;&#39;target.bin&#39;)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   如果想更改其它的参数，也可以使用at.py工具进行修改。  </span><br></pre></td></tr></table></figure><p><strong>结：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">以上为使用at.py工具修改bin文件，以及如何进行烧录的设置。留作备份，后续工作中会使用到。</span><br></pre></td></tr></table></figure><p>延续阅读</p><hr><p>1.<a href="http://mp.weixin.qq.com/s?__biz=MjM5MzAzMjM0OQ==&mid=2455588987&idx=1&sn=7e90dbbb5bf50c08b9d06501e6210df7&chksm=b134c1898643489f64ad4c3f73dda88d9a3aac39115e7942e962f5c5b4684a4c9cc7039aefad&scene=21#wechat_redirect">环境搭建 | VScode与ESP-IDF完美结合让ESP32窜起来</a></p><p>2.<a href="http://mp.weixin.qq.com/s?__biz=MjM5MzAzMjM0OQ==&mid=2455588940&idx=1&sn=65db54c1526503c2da72a3561599682a&chksm=b134c1be864348a8e4e58d3692bd0470bcf877a46fd5890c2e26822d5fe8893296c2f787137a&scene=21#wechat_redirect">环境搭建 | Eclipse与ESP-IDF完美结合让ESP32飞起来</a></p><p>3.<a href="http://mp.weixin.qq.com/s?__biz=MjM5MzAzMjM0OQ==&mid=2455588591&idx=1&sn=7f8d969a497d6392f77f7be6149b8897&chksm=b134df1d8643560b902ae2dfa10020145346922fbe8c413bf71a28697a621f8898f9dbc19dc1&scene=21#wechat_redirect">Python挺酷的 | Thonny MicroPython ESP32 开发环境搭建</a></p><p>4.<a href="http://mp.weixin.qq.com/s?__biz=MjM5MzAzMjM0OQ==&mid=2455588498&idx=1&sn=30ec74449bbf45e7abf210175b602688&chksm=b134df6086435676ca8d9ccc741b29352866b8680c59be400d412d2d4d6063d54f51b704fc9c&scene=21#wechat_redirect">Python挺酷的 | 识别蓝牙MIDI（基于ESP32开发板）</a></p><p>5.<a href="http://mp.weixin.qq.com/s?__biz=MjM5MzAzMjM0OQ==&mid=2455588458&idx=1&sn=9cbc1c622ec4506c5c77fc8b105cdde0&chksm=b134df988643568ed12878ecde1cfecb8f5b3d3a03bd0b6fd43641ac61a9ccf07ea01279601e&scene=21#wechat_redirect">Python挺酷的 | PyCharm MicroPython ESP32 开发环境搭建</a></p><h1 id="出现等待上电同步如何解决"><a href="#出现等待上电同步如何解决" class="headerlink" title="出现等待上电同步如何解决"></a>出现等待上电同步如何解决</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p><a href="https://so.csdn.net/so/search?q=%E5%BC%80%E5%8F%91%E6%9D%BF&spm=1001.2101.3001.7020">开发板</a>：ESP32 DEVKIT V1</p><p>芯片：<a href="https://so.csdn.net/so/search?q=ESP32&spm=1001.2101.3001.7020">ESP32</a>-F</p><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><h6 id="使用乐鑫ESP32-DOWNLOAD-TOOL-V3-9-2向ESP32开发板烧录固件时，点击“START”，出现“等待上电同步”"><a href="#使用乐鑫ESP32-DOWNLOAD-TOOL-V3-9-2向ESP32开发板烧录固件时，点击“START”，出现“等待上电同步”" class="headerlink" title="使用乐鑫ESP32 DOWNLOAD TOOL V3.9.2向ESP32开发板烧录固件时，点击“START”，出现“等待上电同步”"></a>使用乐鑫ESP32 DOWNLOAD TOOL V3.9.2向ESP32开发板烧录固件时，点击“START”，出现“等待上电同步”</h6><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><h6 id="同时按住RST与BOOT持续一秒，然后松开RST键，观察是否开始下载，如果未成功多试几次，已验证。"><a href="#同时按住RST与BOOT持续一秒，然后松开RST键，观察是否开始下载，如果未成功多试几次，已验证。" class="headerlink" title="同时按住RST与BOOT持续一秒，然后松开RST键，观察是否开始下载，如果未成功多试几次，已验证。"></a>同时按住RST与BOOT持续一秒，然后松开RST键，观察是否开始下载，如果未成功多试几次，已验证。</h6><img src="/posts/2449930636/beeee661fbb64fd7b8745897835a2003.png" class="" title="img"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.ai2news.com/blog/3050637/">ESP8266及ESP32固件生成及烧录方法</a></li><li><a href="https://www.ai2news.com/blog/3050637/#">玩转开发板 | ESP8266及ESP32固件生成及烧录方法</a></li><li><a href="https://blog.csdn.net/weixin_52805940/article/details/133931201">ESP32系列烧录固件，出现等待上电同步如何解决</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP8266及ESP32固件生成及烧录方法</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="烧录" scheme="https://zml3589110.github.io/tags/%E7%83%A7%E5%BD%95/"/>
    
    <category term="USB0" scheme="https://zml3589110.github.io/tags/USB0/"/>
    
    <category term="ESP01S" scheme="https://zml3589110.github.io/tags/ESP01S/"/>
    
  </entry>
  
  <entry>
    <title>ESP01S刷MQTT固件</title>
    <link href="https://zml3589110.github.io/posts/4026894451.html"/>
    <id>https://zml3589110.github.io/posts/4026894451.html</id>
    <published>2023-12-23T08:39:20.000Z</published>
    <updated>2023-12-23T09:25:58.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单步骤（这个方法不知为啥连接不上MQTT-可能是公司组mese）"><a href="#简单步骤（这个方法不知为啥连接不上MQTT-可能是公司组mese）" class="headerlink" title="简单步骤（这个方法不知为啥连接不上MQTT-可能是公司组mese）"></a>简单步骤（这个方法不知为啥连接不上MQTT-可能是公司组mese）</h1><p>刷个ESP01S把我卡了将近一天，特难受，记录一下正确的烧录固件方式。之前刷了固件总是没一点返回值(输入AT\r\n)，只是在电源重接时才会接收到一些乱码，总以为是CH340接出的3.3V电压不稳，换成PL2303HXD串口也没是一样没反应，改成用MCU里提供的电源照样没反应，其实就是刷固件的某些细节弄错了。</p><p>所需资料下载：链接：<a href="https://pan.baidu.com/s/1kuAWqa2V5djK2eT4i68HWA?pwd=h9n7%E6%8F%90%E5%8F%96%E7%A0%81%EF%BC%9Ah9n7">https://pan.baidu.com/s/1kuAWqa2V5djK2eT4i68HWA?pwd=h9n7提取码：h9n7</a></p><ol><li>刷固件接线方式</li></ol><p>TTL　　 　　 ESP01S</p><p>3.3V　 ——   3V3</p><p>3.3V　 ——   EN</p><p>GND  ——   IO0</p><p>GND  ——   GND</p><p>RX    ——   TX</p><p>TX　　——   RX</p><ol start="2"><li><p>烧录步骤</p><p>2.1 解压flash_download_tool_3.9.2_0.zip 并进入文件双击运行</p></li></ol><img src="/posts/4026894451/1936955-20230731105510760-1357049533.png" class="" title="img"><p>弹出 　</p><img src="/posts/4026894451/1936955-20230731105628751-1404211892.png" class="" title="img"><p>选择OK。</p><p>2.2 解压<img src="/posts/4026894451/1936955-20230731110417699-1172226695.png" class="" title="img">得到<img src="/posts/4026894451/1936955-20230731110452034-556921523.png" class="" title="img"><br>2.3  </p><img src="/posts/4026894451/1936955-20230731114235777-1672014936.png" class="" title="img"><p>2.4 <img src="/posts/4026894451/1936955-20230731114523241-1402549596.png" class="" title="img">等待呈现<img src="/posts/4026894451/1936955-20230731114606370-1158057307.png" class="" title="img">烧录完成。</p><p>2.5 烧录完成后接线方式（注意：先把TTL USB接口取下断电）</p><p>　　　　　　TTL　　 　　 ESP01S</p><p>　　　　　　3.3V　 ——   3V3</p><p>　　　　　　GND  ——   GND</p><p>　　　　　　RX    ——   TX</p><p>　　　　　　TX　　——   RX</p><p>2.6 测试MQTT固件是否刷成功</p><p>2.6.1 出bug <img src="/posts/4026894451/1936955-20230731122639613-1596493463.png" class="" title="img">， 其实重新上电就好了(把ESP01S的3V3针脚线拔了，重新接上就OK了)。<br>2.6.2 打开安信可的串口调试助手 <img src="/posts/4026894451/1936955-20230731123926859-2023667097.png" class="" title="img"><br>测试成功<img src="/posts/4026894451/1936955-20230731124139808-207517086.png" class="" title="img"></p><h2 id="所需文件下载地址："><a href="#所需文件下载地址：" class="headerlink" title="所需文件下载地址："></a>所需文件下载地址：</h2><p>1.烧录WIFI固件工具：ESP_DOWNLOAD_TOOL<br>下载地址：<a href="https://www.espressif.com/sites/default/files/tools/flash_download_tool_3.9.2_0.zip">https://www.espressif.com/sites/default/files/tools/flash_download_tool_3.9.2_0.zip</a></p><p>2.安信可串口调试助手<br>下载地址：<a href="https://docs.ai-thinker.com/_media/tools/aithinker_serial_tool_v1.2.3.7z">https://docs.ai-thinker.com/_media/tools/aithinker_serial_tool_v1.2.3.7z</a></p><p>3.MQTT透传AT固件(固件号：1471)<br>下载地址：<a href="https://docs.ai-thinker.com/_media/1471_esp8266-at_mqtt-1m.zip">https://docs.ai-thinker.com/_media/1471_esp8266-at_mqtt-1m.zip</a></p><h1 id="ESP-01S-ESP8266详情"><a href="#ESP-01S-ESP8266详情" class="headerlink" title="ESP-01S ESP8266详情"></a>ESP-01S ESP8266详情</h1><h2 id="产品概述"><a href="#产品概述" class="headerlink" title="产品概述"></a>产品概述</h2><p>ESP-01S ESP8266 是基于乐鑫ESP8266开发的低功耗WiFi模块，可以方便地进行二次开发，接入云端服务，实现手机3&#x2F;4G全球随时随地的控制，加速产品原型设计。</p><p>模块核心处理器 ESP8266 在较小尺寸封装中集成了业界领先的 Tensilica L106 超低功耗 32 位微型 MCU，带有 16 位精简模式，主频支持 80 MHz 和 160 MHz，支持 RTOS，集成 Wi-Fi MAC&#x2F; BB&#x2F;RF&#x2F;PA&#x2F;LNA。支持标准的 IEEE802.11 b&#x2F;g&#x2F;n 协议，完整的 TCP&#x2F;IP 协议栈。用户可以使用该模块为现有的设备添加联网功能，也可以构建独立的网络控制器。</p><p>ESP8266 是高性能无线 SoC，以最低成本提供最大实用性，为 Wi-Fi 功能嵌入其他系统提供无限可能。</p><h3 id="产品特点"><a href="#产品特点" class="headerlink" title="产品特点"></a>产品特点</h3><ul><li>体积超小的802.11b&#x2F;g&#x2F;n WiFi SOC模块</li><li>采用低功率32位CPU，可兼作应用处理器</li><li>主频最高可达160MHz</li><li>支持USART、GPIO等接口</li><li>支持多种休眠模式，深度睡眠电流低至20uA</li><li>内嵌LWIP协议栈</li><li>支持STA、AP、STA+AP工作模式</li><li>支持smart config、AirKiss一键配网</li><li>通用AT指令可快速上手</li><li>支持SDK二次开发</li><li>支持串口本地升级和远程固件升级（FOTA）</li></ul><h2 id="选型列表"><a href="#选型列表" class="headerlink" title="选型列表"></a>选型列表</h2><p>模组认证对比：</p><ul><li><a href="https://wiki.diustou.com/cn/ESP-01_ESP8266">ESP-01</a>：暂无</li><li><a href="https://wiki.diustou.com/cn/ESP-01M_ESP8285">ESP-01M</a>：FCC&#x2F;CE&#x2F;SRRC&#x2F;REACH&#x2F;RoHs</li><li>ESP-01S：RoHs</li><li><a href="https://wiki.diustou.com/cn/ESP-07_ESP8266">ESP-07</a>：暂无</li><li><a href="https://wiki.diustou.com/cn/ESP-07S_ESP8266">ESP-07S</a>：FCC&#x2F;CE&#x2F;SRRC&#x2F;REACH&#x2F;RoHs</li><li><a href="https://wiki.diustou.com/cn/ESP-12F_ESP8266">ESP-12F</a>：FCC&#x2F;CE&#x2F;SRRC&#x2F;IC&#x2F;KCC&#x2F;NCC&#x2F;REACH&#x2F;TELEC&#x2F;ANATEL&#x2F;RoHs</li><li><a href="https://wiki.diustou.com/cn/ESP-12S_ESP8266">ESP-12S</a>：FCC&#x2F;CE&#x2F;SRRC&#x2F;RoHs&#x2F;阿里飞燕认证</li><li><a href="https://wiki.diustou.com/cn/ESP-15F_ESP8266">ESP-15F</a>：SRRC</li></ul><p>电气参数对比：</p><table><thead><tr><th align="center">型号</th><th align="center">芯片方案</th><th align="center">天线形式</th><th align="center">封装形式</th><th align="center">尺寸 (mm)</th><th align="center">传输距离 (米)</th><th align="center">供电电压</th><th align="center">SPI Flash</th><th align="center">IO 数</th><th align="center">Modem Sleep</th><th align="center">Light Sleep</th><th align="center">Deep Sleep</th></tr></thead><tbody><tr><td align="center"><a href="https://wiki.diustou.com/cn/ESP-01_ESP8266">ESP-01</a></td><td align="center">ESP8266</td><td align="center">板载天线</td><td align="center">DIP-8</td><td align="center">24.7 * 14.4 * 11.0</td><td align="center">50</td><td align="center">3.3V</td><td align="center">8Mbit</td><td align="center">2</td><td align="center">20mA</td><td align="center">2mA</td><td align="center">20uA</td></tr><tr><td align="center"><a href="https://wiki.diustou.com/cn/ESP-01M_ESP8285">ESP-01M</a></td><td align="center">ESP8285</td><td align="center">板载天线</td><td align="center">DIP-18</td><td align="center">18.0 * 18.0 * 2.8</td><td align="center">40</td><td align="center">3.3V</td><td align="center">8Mbit &#x2F; 16Mbit</td><td align="center">11</td><td align="center">20mA</td><td align="center">2mA</td><td align="center">20uA</td></tr><tr><td align="center">ESP-01S</td><td align="center">ESP8266</td><td align="center">板载天线</td><td align="center">DIP-8</td><td align="center">24.7 * 14.4 * 11.0</td><td align="center">50</td><td align="center">3.3V</td><td align="center">8Mbit</td><td align="center">2</td><td align="center">20mA</td><td align="center">2mA</td><td align="center">20uA</td></tr><tr><td align="center"><a href="https://wiki.diustou.com/cn/ESP-07_ESP8266">ESP-07</a></td><td align="center">ESP8266</td><td align="center">IPEX座 &#x2F; 陶瓷天线</td><td align="center">SMD-16</td><td align="center">21.2 * 16.0 * 3.0</td><td align="center">50</td><td align="center">3.3V</td><td align="center">8Mbit</td><td align="center">9</td><td align="center">20mA</td><td align="center">2mA</td><td align="center">20uA</td></tr><tr><td align="center"><a href="https://wiki.diustou.com/cn/ESP-07S_ESP8266">ESP-07S</a></td><td align="center">ESP8266</td><td align="center">IPEX座 &#x2F; 陶瓷天线</td><td align="center">SMD-16</td><td align="center">17.0 * 16.0 * 3.0</td><td align="center">100</td><td align="center">3.3V</td><td align="center">32Mbit</td><td align="center">9</td><td align="center">20mA</td><td align="center">2mA</td><td align="center">20uA</td></tr><tr><td align="center"><a href="https://wiki.diustou.com/cn/ESP-12F_ESP8266">ESP-12F</a></td><td align="center">ESP8266</td><td align="center">板载天线</td><td align="center">SMD-22</td><td align="center">24.0 * 16.0 * 3.0</td><td align="center">80</td><td align="center">3.3V</td><td align="center">32Mbit</td><td align="center">9</td><td align="center">20mA</td><td align="center">2mA</td><td align="center">20uA</td></tr><tr><td align="center"><a href="https://wiki.diustou.com/cn/ESP-12S_ESP8266">ESP-12S</a></td><td align="center">ESP8266</td><td align="center">板载天线</td><td align="center">SMD-16</td><td align="center">24.0 * 16.0 * 3.0</td><td align="center">80</td><td align="center">3.3V</td><td align="center">32Mbit</td><td align="center">9</td><td align="center">20mA</td><td align="center">2mA</td><td align="center">20uA</td></tr><tr><td align="center"><a href="https://wiki.diustou.com/cn/ESP-15F_ESP8266">ESP-15F</a></td><td align="center">ESP8266</td><td align="center">板载天线 &#x2F; IPEX座</td><td align="center">PH2.54接线器</td><td align="center">41.3 * 24.1 * 6.6</td><td align="center">50</td><td align="center">5V</td><td align="center">32Mbit</td><td align="center">3</td><td align="center">多种</td><td align="center">多种</td><td align="center">多种</td></tr></tbody></table><ul><li>通信协议：完整的802.11b&#x2F;g&#x2F;n WiFi SoC模块</li><li>工作频段：2400~2483.5MHz</li></ul><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>ESP-01S ESP8266 出厂时已默认内置 AT 固件，且默认波特率为 115200，可参考 <a href="https://wiki.diustou.com/cn/index.php?title=ESP-01S_ESP8266&printable#.E8.AE.BE.E8.AE.A1.E6.8C.87.E5.8D.97">#设计指南</a> 搭建最小系统电路，之后即可进行 AT 指令操作。</p><p>串口与网络调试助手下载：<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Sscom5.13.1.zip">串口调试助手</a></p><h3 id="硬件连接"><a href="#硬件连接" class="headerlink" title="硬件连接"></a>硬件连接</h3><table><thead><tr><th align="center"><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Icon-warning.png"><img src="/posts/4026894451/20px-Icon-warning.png" class="" title="Icon-warning.png"></a>注意</th></tr></thead><tbody><tr><td align="center">由于模块功率较大，尽量请勿使用 USB 转 TTL 的 3.3V 供电。建议使用 3 节干电池或经过 LDO 转换后的 3.3V。</td></tr></tbody></table><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01S_ESP8266_Connection.png"><img src="/posts/4026894451/800px-ESP-01S_ESP8266_Connection.png" class="" title="ESP-01S ESP8266 Connection.png"></a></p><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><p>本章节讲解如何在 PC 端通过串口配置 2 个 ESP-01S ESP8266 通过 TCP 相互通信。</p><table><thead><tr><th align="center"><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Icon-warning.png"><img src="/posts/4026894451/20px-Icon-warning.png" class="" title="Icon-warning.png"></a>注意</th></tr></thead><tbody><tr><td align="center">所有的 AT 命令都需要以 \r\n 结束（回车换行）。如果在 PC 端进行测试，可通过 PC 端代替一端模块建立相应的连接。</td></tr></tbody></table><p>更多示例请参考：</p><ul><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_instruction_set_cn.pdf">AT指令集</a></li><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_instruction_set_en.pdf">AT Instruction Set</a></li><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_command_examples_cn.pdf">ESP8266 AT 指令使⽤用示例</a></li><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_command_examples_en.pdf">ESP8266 AT Command Examples</a></li></ul><h4 id="TCP-通信测试"><a href="#TCP-通信测试" class="headerlink" title="TCP 通信测试"></a>TCP 通信测试</h4><p>本实验需要用到 2 个模块，如果用 PC 端作为服务器的话，单个模块也可以进行这个实验，见<a href="https://wiki.diustou.com/cn/index.php?title=ESP-01S_ESP8266&printable#HTTP_.E9.80.9A.E4.BF.A1.E6.B5.8B.E8.AF.95">#HTTP 通信测试</a>。</p><p><strong>TCP Server 端配置：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">AT+CWMODE&#x3D;2                                 &#x2F;&#x2F;配置为 AP 模式，响应：OK</span><br><span class="line">AT+CWSAP_DEF&#x3D;&quot;TCP_Server&quot;,&quot;12345678&quot;,5,4    &#x2F;&#x2F;配置 AP 信息，响应：OK</span><br><span class="line">AT+CIFSR                                    &#x2F;&#x2F;查询本机 IP 地址</span><br><span class="line">AT+CIPMUX&#x3D;1                                 &#x2F;&#x2F;开启多链接</span><br><span class="line">AT+CIPSERVER&#x3D;1                              &#x2F;&#x2F;开启服务器</span><br></pre></td></tr></table></figure><p><strong>TCP Client 端配置：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AT+CWMODE&#x3D;1                                 &#x2F;&#x2F;配置为Station 模式</span><br><span class="line">AT+CWJAP_DEF&#x3D;&quot;TCP_Server&quot;,&quot;12345678&quot;        &#x2F;&#x2F;连接到AP</span><br><span class="line">AT+CIFSR                                    &#x2F;&#x2F;查询本机IP 地址</span><br><span class="line">AT+CIPMUX&#x3D;0                                 &#x2F;&#x2F;开启单链接</span><br><span class="line">AT+CIPSTART&#x3D;&quot;TCP&quot;,&quot;192.168.4.1&quot;,333         &#x2F;&#x2F;连接到TCP 服务器</span><br><span class="line">AT+CIPSEND&#x3D;12                               &#x2F;&#x2F;发送 12 个字节的数据到服务器端</span><br></pre></td></tr></table></figure><p>出现 <strong>&gt;</strong> 符号之后，串口发送任意 12 个字节，如 Hello world! （不带回车换行）</p><p>此时Server端的串口打印：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+IPD,0,12:Hello world!</span><br></pre></td></tr></table></figure><p>上述操作如果执行成功的话，预期结果如下：</p><table><thead><tr><th>Server 端：</th><th>Client 端：</th></tr></thead><tbody><tr><td><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_6.png"><img src="/posts/4026894451/ESP-01_07_12_ESP8266_User_Manual_6.png" class="" title="ESP-01 07 12 ESP8266 User Manual 6.png"></a></td><td><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_7.png"><img src="/posts/4026894451/ESP-01_07_12_ESP8266_User_Manual_7.png" class="" title="ESP-01 07 12 ESP8266 User Manual 7.png"></a></td></tr></tbody></table><p>TCP Server 端通信完成之后，如需关闭服务器，则发送：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AT+CIPSERVER&#x3D;0                              &#x2F;&#x2F;关闭服务器</span><br></pre></td></tr></table></figure><h3 id="HTTP-通信测试"><a href="#HTTP-通信测试" class="headerlink" title="HTTP 通信测试"></a>HTTP 通信测试</h3><p>如果只有一个模块的话，用户只要能把它连接到路由器中，也可以对单个模块进行测试。本例子中，模块是 Client 端，以访问本网页为例。</p><p><strong>Client 端配置：</strong></p><p>串口依次发送：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AT+CWMODE&#x3D;1                                 &#x2F;&#x2F;配置为Station 模式</span><br><span class="line">AT+CWJAP_DEF&#x3D;&quot;SSID&quot;,&quot;password&quot;              &#x2F;&#x2F;SSID是路由器的名称，password是密码</span><br><span class="line">AT+CIPCLOSE                                 &#x2F;&#x2F;尝试关闭连接。如果之前没有连接则会报错，可忽略</span><br><span class="line">AT+CIPSTART&#x3D;&quot;TCP&quot;,&quot;wiki.diustou.com&quot;,80     &#x2F;&#x2F;连接到服务器</span><br><span class="line">AT+CIPMODE&#x3D;1                                &#x2F;&#x2F;透传模式</span><br><span class="line">AT+CIPSEND                                  &#x2F;&#x2F;发送内容</span><br></pre></td></tr></table></figure><p>出现 <strong>&gt;</strong> 符号之后，串口发送 GET 请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F; HTTP&#x2F;1.1</span><br><span class="line">Host: wiki.diustou.com:80</span><br><span class="line">Connection: keep-alive</span><br><span class="line">\r\n\r\n（结束符）</span><br></pre></td></tr></table></figure><p>之后服务器便会返回响应的内容。</p><p>退出透传，不要勾选新行（\r\n）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+++</span><br></pre></td></tr></table></figure><p>退出连接。</p><h2 id="固件烧录方法"><a href="#固件烧录方法" class="headerlink" title="固件烧录方法"></a>固件烧录方法</h2><h3 id="管脚电平"><a href="#管脚电平" class="headerlink" title="管脚电平"></a>管脚电平</h3><p>进入下载模式的时候，需要把 GPIO0管脚拉低，EN拉高，其他IO管脚悬空。管脚分布图见 <a href="https://wiki.diustou.com/cn/index.php?title=ESP-01S_ESP8266&printable#.E4.BA.A7.E5.93.81.E5.B0.BA.E5.AF.B8">#产品尺寸</a>。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>\1. 打开烧录软件：<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP_Download_Tool_v3.8.5.zip">ESP Download Tool</a>。</p><p>\2. 依次点击 Developer Mode –&gt; ESP8266 DownloadTool。</p><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_8.png"><img src="/posts/4026894451/ESP-01_07_12_ESP8266_User_Manual_8.png" class="" title="ESP-01 07 12 ESP8266 User Manual 8.png"></a></p><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_9.png"><img src="/posts/4026894451/ESP-01_07_12_ESP8266_User_Manual_9.png" class="" title="ESP-01 07 12 ESP8266 User Manual 9.png"></a></p><p>\3. 点击 […]，选择所需固件，固件下载请参见 <a href="https://wiki.diustou.com/cn/index.php?title=ESP-01S_ESP8266&printable#ESP8266_.E5.9B.BA.E4.BB.B6.E6.B1.87.E6.80.BB">#ESP8266 固件汇总</a>。</p><p>\4. 选择之后记得勾选固件，勾选之后固件路径会变绿。</p><p>\5. 填入固件的起始位置，一般是 0x0，详见对应固件的说明。</p><p>\6. CrystalFreq：26M，<strong>此处禁止修改</strong>。</p><p>\7. SPI SPEED：40M，<strong>此处禁止修改</strong>。</p><p>\8. SPI MODE：DOUT</p><p>\9. FLASH SIZE：8Mbit</p><p>\10. 选择相应的串口，波特率任意。建议使用 FT232 串口模块，可以支持更高的波特率，有些串口模块不支持超过 1M 的波特率。</p><p>\11. 断开电源，点击 START，等待上电同步。</p><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_10.png"><img src="/posts/4026894451/ESP-01_07_12_ESP8266_User_Manual_10.png" class="" title="ESP-01 07 12 ESP8266 User Manual 10.png"></a></p><p>\12. 重新上电便会开始下载。如果烧录成功，Download Panel 将提示：FINISH。</p><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_11.png"><img src="/posts/4026894451/ESP-01_07_12_ESP8266_User_Manual_11.png" class="" title="ESP-01 07 12 ESP8266 User Manual 11.png"></a></p><h2 id="产品尺寸"><a href="#产品尺寸" class="headerlink" title="产品尺寸"></a>产品尺寸</h2><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_ESP8266_Dimensions.png"><img src="/posts/4026894451/400px-ESP-01_ESP8266_Dimensions.png" class="" title="ESP-01 ESP8266 Dimensions.png"></a></p><h2 id="管脚定义"><a href="#管脚定义" class="headerlink" title="管脚定义"></a>管脚定义</h2><table><thead><tr><th align="center">#</th><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">2</td><td align="center">IO2</td><td align="center">U1_TXD，I2C_SDA，I2SO_WS</td></tr><tr><td align="center">3</td><td align="center">IO0</td><td align="center">GPIO0，HSPI_MISO，I2SI_DATA</td></tr><tr><td align="center">4</td><td align="center">RXD</td><td align="center">GPIO3，I2SO_DATA</td></tr><tr><td align="center">5</td><td align="center">TXD</td><td align="center">GPIO1</td></tr><tr><td align="center">6</td><td align="center">EN</td><td align="center">芯片使能端，高电平有效</td></tr><tr><td align="center">7</td><td align="center">RST</td><td align="center">复位引脚，低电平有效</td></tr><tr><td align="center">8</td><td align="center">VCC</td><td align="center">模组供电引脚，电压范围 3.0~3.6V</td></tr></tbody></table><h2 id="启动模式"><a href="#启动模式" class="headerlink" title="启动模式"></a>启动模式</h2><table><thead><tr><th align="center">模式</th><th align="center">CH_PD (EN)</th><th align="center">RST</th><th align="center">GPIO15</th><th align="center">GPIO0</th><th align="center">GPIO2</th><th align="center">TXD0</th></tr></thead><tbody><tr><td align="center">下载模式</td><td align="center">高</td><td align="center">高</td><td align="center">低</td><td align="center">低</td><td align="center">高</td><td align="center">高</td></tr><tr><td align="center">运行模式</td><td align="center">高</td><td align="center">高</td><td align="center">低</td><td align="center">高</td><td align="center">高</td><td align="center">高</td></tr><tr><td align="center">测试模式</td><td align="center">高</td><td align="center">高</td><td align="center">-</td><td align="center">-</td><td align="center">-</td><td align="center">低</td></tr></tbody></table><h2 id="电气特性"><a href="#电气特性" class="headerlink" title="电气特性"></a>电气特性</h2><h3 id="最大额定值"><a href="#最大额定值" class="headerlink" title="最大额定值"></a>最大额定值</h3><table><thead><tr><th align="center">额定值</th><th align="center">条件</th><th align="center">值</th><th align="center">单位</th></tr></thead><tbody><tr><td align="center">存储温度</td><td align="center">-</td><td align="center">-40 ~ 125</td><td align="center">℃</td></tr><tr><td align="center">最大焊接温度</td><td align="center">-</td><td align="center">250</td><td align="center">℃</td></tr><tr><td align="center">工作电压</td><td align="center">IPC&#x2F;JEDEC J-STD-020</td><td align="center">+3.0 ~ +3.6</td><td align="center">V</td></tr></tbody></table><h3 id="建议工作环境"><a href="#建议工作环境" class="headerlink" title="建议工作环境"></a>建议工作环境</h3><table><thead><tr><th>工作温度</th><th>-20</th><th>25</th><th>70</th><th>℃</th></tr></thead><tbody><tr><td>供电电压</td><td>3.0</td><td>3.3</td><td>3.6</td><td>V</td></tr></tbody></table><h3 id="数字端口特征"><a href="#数字端口特征" class="headerlink" title="数字端口特征"></a>数字端口特征</h3><table><thead><tr><th align="center">说明</th><th align="center">名称</th><th align="center">最小值</th><th align="center">典型值</th><th align="center">最大值</th><th align="center">单位</th></tr></thead><tbody><tr><td align="center">输入逻辑电平低</td><td align="center">VIL</td><td align="center">-0.3</td><td align="center">-</td><td align="center">0.25 * VDD</td><td align="center">V</td></tr><tr><td align="center">输入逻辑电平高</td><td align="center">VIH</td><td align="center">0.75 * VDD</td><td align="center">-</td><td align="center">VDD + 0.3</td><td align="center">V</td></tr><tr><td align="center">输出逻辑电平低</td><td align="center">VOL</td><td align="center">N</td><td align="center">-</td><td align="center">0.1 * VDD</td><td align="center">V</td></tr><tr><td align="center">输出逻辑电平高</td><td align="center">VOH</td><td align="center">0.8 * VDD</td><td align="center">-</td><td align="center">N</td><td align="center">V</td></tr></tbody></table><ul><li>注意：如无特殊说明，测试条件为：VDD &#x3D; 3.3 V，温度为 25 ℃。</li></ul><h3 id="功耗"><a href="#功耗" class="headerlink" title="功耗"></a>功耗</h3><p>所有测量均在没有 SAW 滤波器的情况下，于天线接口处完成。</p><p>所有发射数据是基于 90% 的占空比，在持续发射的模式下测得的。</p><table><thead><tr><th align="center">模式</th><th align="center">典型值</th><th align="center">单位</th></tr></thead><tbody><tr><td align="center">传送 802.11b, CCK 11Mbps, POUT&#x3D;+17dBm</td><td align="center">170</td><td align="center">mA</td></tr><tr><td align="center">传送 802.11g, OFDM 54Mbps, POUT &#x3D;+15dBm</td><td align="center">140</td><td align="center">mA</td></tr><tr><td align="center">传送 802.11n, MCS7, POUT &#x3D;+13dBm</td><td align="center">120</td><td align="center">mA</td></tr><tr><td align="center">接收 802.11b,包长 1024 字节, -80dBm</td><td align="center">50</td><td align="center">mA</td></tr><tr><td align="center">接收 802.11g,包长 1024 字节, -70dBm</td><td align="center">56</td><td align="center">mA</td></tr><tr><td align="center">接收 802.11n,包长 1024 字节, -65dBm</td><td align="center">56</td><td align="center">mA</td></tr><tr><td align="center">Modem-Sleep①</td><td align="center">20</td><td align="center">mA</td></tr><tr><td align="center">Light-Sleep②</td><td align="center">2</td><td align="center">mA</td></tr><tr><td align="center">Deep-Sleep③</td><td align="center">20</td><td align="center">uA</td></tr><tr><td align="center">Power Off</td><td align="center">0.5</td><td align="center">uA</td></tr></tbody></table><ul><li>注①：Modem-Sleep⽤于需要 CPU 一直处于工作状态如 PWM 或 I2S 应⽤等。在保持 WiFi 连接时，如果没有数据传输，可根据 802.11 标准 (如 U-APSD)，关闭 WiFi Modem 电路来省电。例如，在 DTIM3 时，每 sleep 300mS，醒来 3mS 接收 AP 的 Beacon 包等，则整体平均电流约 20mA。</li><li>注②：Light-Sleep 用于 CPU 可暂停的应用，如 WiFi 开关。在保持 WiFi 连接时，如果没有数据传输，可根据 802.11 标准(如 U-APSD)，关闭 WiFi Modem 电路并暂停 CPU 来省电。例如，在 DTIM3 时，每 sleep 300 ms，醒来 3ms 接收 AP 的 Beacon 包等，则整体平均电流约 2 mA。</li><li>注③：Deep-Sleep 用于不需一直保持 WiFi 连接，很长时间才发送一次数据包的应用，如每 100 秒测量⼀次温度的传感器。每 300 s 醒来后需 0.3s - 1s 连上 AP 发送数据,则整体平均电流可远小于 1mA。</li></ul><h3 id="发射功率"><a href="#发射功率" class="headerlink" title="发射功率"></a>发射功率</h3><table><thead><tr><th align="center">描述</th><th align="center">最小值</th><th align="center">典型值</th><th align="center">最大值</th><th align="center">单位</th></tr></thead><tbody><tr><td align="center">802.11b@11Mbps</td><td align="center">14</td><td align="center">16</td><td align="center">18</td><td align="center">dBm</td></tr><tr><td align="center">802.11g@54Mbps</td><td align="center">12</td><td align="center">14</td><td align="center">16</td><td align="center">dBm</td></tr><tr><td align="center">802.11n@HT20, MCS7</td><td align="center">11</td><td align="center">13</td><td align="center">15</td><td align="center">dBm</td></tr></tbody></table><h3 id="接收灵敏度"><a href="#接收灵敏度" class="headerlink" title="接收灵敏度"></a>接收灵敏度</h3><table><thead><tr><th align="center">参数</th><th align="center">典型值</th><th align="center">单位</th></tr></thead><tbody><tr><td align="center">DSSS, 1 Mbps</td><td align="center">-90</td><td align="center">dBm</td></tr><tr><td align="center">CCK, 11 Mbps</td><td align="center">-85</td><td align="center">dBm</td></tr><tr><td align="center">6 Mbps (1&#x2F;2 BPSK)</td><td align="center">-88</td><td align="center">dBm</td></tr><tr><td align="center">54 Mbps (3&#x2F;4 64-QAM)</td><td align="center">-70</td><td align="center">dBm</td></tr><tr><td align="center">HT20, MCS7 (65 Mbps, 72.2 Mbps)</td><td align="center">-67</td><td align="center">dBm</td></tr></tbody></table><h2 id="设计指南"><a href="#设计指南" class="headerlink" title="设计指南"></a>设计指南</h2><h3 id="天线摆放说明"><a href="#天线摆放说明" class="headerlink" title="天线摆放说明"></a>天线摆放说明</h3><p>为了使终端产品获得最佳的射频性能，请注意根据本指南合理设计模块及天线在底板上的摆放位置。</p><ul><li>方案 1（推荐）：将模块沿 PCB 板边放置，且天线在板框外；</li><li>方案 2：将模块沿 PCB 板边放置，天线沿板边放置且下方挖空；</li></ul><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-12S_Antenna_Location.png"><img src="/posts/4026894451/400px-ESP-12S_Antenna_Location.png" class="" title="ESP-12S Antenna Location.png"></a></p><h3 id="模块外围走线说明"><a href="#模块外围走线说明" class="headerlink" title="模块外围走线说明"></a>模块外围走线说明</h3><ol><li>模块外围引出了一些 GPIO 口，如需使用建议在 IO 口上串联 10-100 欧姆的电阻。这样可以抑制过冲，是两边电平更平稳。对 EMI 和 ESD 都有帮助。</li><li>特殊 IO 口的上下拉，需参考规格书的使用说明，此处会影响到模块的启动配置。</li><li>模块的 IO 口是 3.3V 如果主控与模块的 IO 电平不匹配，需要增加电平转换电路。</li><li>如果 IO 口直连到外围接口，或者排针等端子，建议在 IO 走线靠近端子处预留 ESD 器件。</li></ol><h3 id="GPIO-电平转换"><a href="#GPIO-电平转换" class="headerlink" title="GPIO 电平转换"></a>GPIO 电平转换</h3><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_1.png"><img src="/posts/4026894451/400px-ESP-01_07_12_ESP8266_User_Manual_1.png" class="" title="ESP-01 07 12 ESP8266 User Manual 1.png"></a></p><h3 id="电源参考设计"><a href="#电源参考设计" class="headerlink" title="电源参考设计"></a>电源参考设计</h3><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_2.png"><img src="/posts/4026894451/400px-ESP-01_07_12_ESP8266_User_Manual_2.png" class="" title="ESP-01 07 12 ESP8266 User Manual 2.png"></a></p><h3 id="ADC-参考设计"><a href="#ADC-参考设计" class="headerlink" title="ADC 参考设计"></a>ADC 参考设计</h3><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_3.png"><img src="/posts/4026894451/400px-ESP-01_07_12_ESP8266_User_Manual_3.png" class="" title="ESP-01 07 12 ESP8266 User Manual 3.png"></a></p><h3 id="自动下载电路"><a href="#自动下载电路" class="headerlink" title="自动下载电路"></a>自动下载电路</h3><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_4.png"><img src="/posts/4026894451/400px-ESP-01_07_12_ESP8266_User_Manual_4.png" class="" title="ESP-01 07 12 ESP8266 User Manual 4.png"></a></p><h3 id="回流焊炉温曲线"><a href="#回流焊炉温曲线" class="headerlink" title="回流焊炉温曲线"></a>回流焊炉温曲线</h3><p><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP-01_07_12_ESP8266_User_Manual_5.png"><img src="/posts/4026894451/400px-ESP-01_07_12_ESP8266_User_Manual_5.png" class="" title="ESP-01 07 12 ESP8266 User Manual 5.png"></a></p><h2 id="资源下载"><a href="#资源下载" class="headerlink" title="资源下载"></a>资源下载</h2><p>ESP8266 和 ESP8285 资源通用。</p><h3 id="用户手册"><a href="#用户手册" class="headerlink" title="用户手册"></a>用户手册</h3><ul><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_series_modules_user_manual_zh_v1.5.pdf">ESP8266系列模组用户手册</a></li><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_series_modules_user_manual_en.pdf">ESP8266 Series Modules User Manual</a></li></ul><h3 id="示例程序"><a href="#示例程序" class="headerlink" title="示例程序"></a>示例程序</h3><ul><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_stm32_demo.zip">ESP8266 的 STM32 AT 指令工程</a></li></ul><h3 id="ESP8266-固件汇总"><a href="#ESP8266-固件汇总" class="headerlink" title="ESP8266 固件汇总"></a>ESP8266 固件汇总</h3><p><strong>博安通 AT 固件</strong></p><ul><li>特性：操作简单，任何mcu均可直接接入</li><li>下载地址： <a href="https://docs.ai-thinker.com/_media/esp8266/bat_at_v1.7.1.0.rar">博安通出厂固件</a></li><li>更新时间：2019年12月22日</li><li>更新说明： v1.7.1.0 AT Firmware，内含 8Mbit 和 32Mbit 两个版本，请客户根据自己产品的flash大小来烧录</li></ul><p><strong>直连腾讯开发平台的AT固件</strong></p><ul><li>特性：可连接腾讯开发平台</li><li>下载地址： <a href="https://docs.ai-thinker.com/_media/esp8266/aithinker_qcloud_at.rar">安信可腾讯云AT固件</a></li><li>更新说明：2020年02月28日更新，串口引脚为 txd&#x3D;GPIO15, rxd&#x3D;GPIO13.</li></ul><p><strong>MQTT 透传AT固件 (默认)</strong></p><ul><li>特性：支持TLS连接，务必注意通讯引脚为（ txd&#x3D;GPIO15, rxd&#x3D;GPIO13）</li><li>下载地址： <a href="https://docs.ai-thinker.com/_media/esp8266/mqtt%E5%9B%BA%E4%BB%B6.rar">MQTT固件</a></li><li>使用说明： <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP8266-MQTT%E6%8C%87%E4%BB%A4%E6%89%8B%E5%86%8C.pdf">ESP8266-MQTT指令手册</a></li><li>更新时间：2020年2月21日</li><li>更新说明：IO13为RX、IO15为TX作为AT串口与单片机TX&#x2F;RX接线连接，串口1作为log串口，默认波特率为115200。测试TCP直连服务器使用 EMQ，测试TLS连接服务器使用 AWS。</li></ul><p><strong>MQTT透传AT固件（AT通讯串口改为UART0）</strong></p><ul><li>特性：支持TLS连接</li><li>下载地址：<a href="https://docs.ai-thinker.com/_media/mqtt.zip">MQTT固件（改）</a></li><li>使用说明：<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP8266-MQTT%E6%8C%87%E4%BB%A4%E6%89%8B%E5%86%8C.pdf">ESP8266-MQTT指令手册</a></li><li>更新时间：2020年5月09日</li><li>更新说明：正常的RX、TX作为AT串口与单片机TX&#x2F;RX接线连接，串口1作为log串口，默认波特率为115200。测试TCP直连服务器使用 EMQ，测试TLS连接服务器使用 AWS。</li></ul><p><strong>出厂默认 AT 固件</strong></p><ul><li>特性：一条指令即可连接到安信可云服务，操作简单，任何mcu均可直接接入</li><li>下载地址：<a href="https://docs.ai-thinker.com/_media/esp8266/ai-thinker_esp8266_at_firmware_dout_v1.5.4.1-a_20171130.rar">默认出厂固件</a></li><li>更新时间：2017年11月30日</li><li>更新说明：v1.5.4.1 AT Firmware，内含 8Mbit 和 32Mbit 两个版本 ，注意：1MByte flash的模组因为内存不足，所有带AiCloud2.0的AT固件都不能使用，flash大于或等于2MByte。使用CIUPDATE命令升级前，请确认模组的flash大于或等于2M！</li></ul><h3 id="ESP8266-开发工具"><a href="#ESP8266-开发工具" class="headerlink" title="ESP8266 开发工具"></a>ESP8266 开发工具</h3><p><strong>SDK 一体化开发环境：</strong></p><ul><li>下载地址：<a href="https://pan.baidu.com/s/1Mbi2xoHQxyYM35lnJEUBTA">网盘链接</a> 提取码： fzfd</li><li>更新时间：2019.07.22</li><li>更新说明：支持 ESP32&#x2F;ESP8266</li></ul><p><strong>烧录WiFi固件工具：</strong></p><ul><li>下载地址：<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:ESP_Download_Tool_v3.8.5.zip">ESP Download Tool</a></li><li>更新时间：2020.8.15</li><li>更新说明：支持ESP32&#x2F;ESP32-S2&#x2F;ESP8266&#x2F;ESP8285</li></ul><h3 id="AT-指令"><a href="#AT-指令" class="headerlink" title="AT 指令"></a>AT 指令</h3><ul><li>ESP8266 AT指令集 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_instruction_set_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_instruction_set_en.pdf">英文</a></li><li>ESP8266 AT 指令使用示例 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_command_examples_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_at_command_examples_en.pdf">英文</a></li></ul><h3 id="官方应用文档"><a href="#官方应用文档" class="headerlink" title="官方应用文档"></a>官方应用文档</h3><ul><li>ESP8266 SSL加密使用手册 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_sdk_ssl_user_manual_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_sdk_ssl_user_manual_en.pdf">英文</a></li><li>ESP8266 低功耗解决方案 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266-low_power_solutions_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266-low_power_solutions_en.pdf">英文</a></li><li>ESP8266 flash读写说明 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_flash_rw_operation_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Espressif_iot_flash_rw_operation_en.pdf">英文</a></li><li>ESP8266 云端升级指南<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_fota_upgrade_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_fota_guide_en_.pdf">英文</a></li><li>ESP8266 固件下载协议<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266-sdk_application_note_firmware_download_protocol_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266-sdk_application_note_firmware_download_protocol_en.pdf">英文</a></li><li>ESP8266 技术参考 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266-technical_reference_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266-technical_reference_en.pdf">英文</a></li><li>ESP8266 常见问题 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Espressif_faq_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Espressif_faq_en.pdf">英文</a></li><li>ESP8266 硬件设计指南 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_hardware_design_guidelines_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_hardware_design_guidelines_en.pdf">英文</a></li><li>ESP8266 WIFI信道选择指南 <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_hardware_design_guidelines_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_hardware_design_guidelines_en.pdf">英文</a></li><li>ESP8266_RTOS_SDK 编程手册（RTOS SDK V2.X 及之前版本） <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_rtos_sdk_programming_guide_cn.pdf">中文</a>，<a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_rtos_sdk_programming_guide_en.pdf">英文</a></li><li>ESP8266_RTOS_SDK API参考（RTOS SDK V2.X 及之前版本） <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_rtos_sdk_api_reference.pdf">中文</a></li><li>ESP8266_RTOS_SDK V3.0 及之后版本<a href="https://docs.ai-thinker.com/lib/exe/fetch.php?tok=cc983e&media=https://github.com/espressif/ESP8266_RTOS_SDK">编程代码</a> <a href="https://docs.ai-thinker.com/lib/exe/fetch.php?tok=b5555b&media=https://docs.espressif.com/projects/esp8266-rtos-sdk/en/latest/get-started/index.html">编程指南</a></li></ul><h3 id="产品规格书"><a href="#产品规格书" class="headerlink" title="产品规格书"></a>产品规格书</h3><ul><li><a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp-01s_product_specification_zh_v1.0.pdf">产品规格书</a></li></ul><h3 id="SDK-二次开发资料"><a href="#SDK-二次开发资料" class="headerlink" title="SDK 二次开发资料"></a>SDK 二次开发资料</h3><ul><li>硬件资源： <a href="https://wiki.diustou.com/cn/%E6%96%87%E4%BB%B6:Esp8266_modules_libraries.zip">ESP8266PCB封装文件</a></li><li><a href="http://aiclouds3.0-docs.aithinker.com/#/2.device/configuration_windows">Windows平台 SDK二次开发环境搭建</a></li><li><a href="http://aiclouds3.0-docs.aithinker.com/#/2.device/configuration_linux">Linux (Ubuntu) 平台 SDK二次开发环境搭建</a></li></ul><h4 id="云平台对接示例"><a href="#云平台对接示例" class="headerlink" title="云平台对接示例"></a>云平台对接示例</h4><ul><li><a href="https://github.com/Ai-Thinker-Open/Ai-Thinker-Open-qcloud-esp-wifi">对接腾讯物联开发平台 （不支持任何音响语音控制）</a></li><li><a href="https://blog.csdn.net/Boantong_/article/details/104633166">AT对接亚马逊云平台（不支持任何音响语音控制）</a></li><li><a href="https://blog.csdn.net/Boantong_/article/details/104791452">AT透传指令接入阿里云物联网平台笔记（非天猫精灵语音控制）</a></li><li><a href="https://blog.csdn.net/Boantong_/article/details/104836750">AT透传指令接入微软IOT物联网平台</a></li><li><a href="https://blog.csdn.net/Boantong_/article/details/106059991">接入天猫精灵IOT平台控制单路插座的教程 （支持天猫精灵语音控制）</a></li><li><a href="https://blog.csdn.net/Boantong_/article/details/105970895">接入天猫精灵IOT平台实现控制RGB冷暖灯的教程 （支持天猫精灵语音控制）</a></li><li><a href="https://blog.csdn.net/Boantong_/article/details/105676625">接入阿里生活飞燕平台国际版，实现亚马逊Alexa Echo音响语音控制； （不支持天猫精灵语音控制）</a></li><li><a href="https://blog.csdn.net/Boantong_/article/details/105651819">接入阿里飞燕 , 轻松天猫精灵语音控制单片机。 （天猫精灵语音控制）</a></li><li>小程序MQTT通过连接百度天工远程控制安信可ESP8266开发板； （不支持任何音响语音控制）<ul><li><a href="https://github.com/Ai-Thinker-Open/WCMiniColorControl">小程序源码</a></li><li><a href="https://github.com/Ai-Thinker-Open/AiClouds3.0-Device/tree/master/Ai-examples/4.BaiDu-rgb-esp8266">设备端源码</a></li></ul></li></ul><h1 id="ESP8266上云实验"><a href="#ESP8266上云实验" class="headerlink" title="ESP8266上云实验"></a>ESP8266上云实验</h1><p>由于AT固件的配置过于麻烦，所以使用了MQTT固件进行配置。</p><p>ESP8266 - MQTT固件<br>由于购买回来的ESP8266-01S默认的是AT固件，现在需要用到MQTT指令，所以需要将其刷到AT固件</p><p>MQTT 固件 ： <a href="https://docs.ai-thinker.com/_media/1471_esp8266-at_mqtt-1m.zip">https://docs.ai-thinker.com/_media/1471_esp8266-at_mqtt-1m.zip</a></p><p>刷固件软件 ：<a href="https://docs.ai-thinker.com/_media/flash_download_tool_v3.8.5_1.zip">https://docs.ai-thinker.com/_media/flash_download_tool_v3.8.5_1.zip</a></p><p>将以上两个文件均下载，保存。</p><p>打开刷固件软件 - 选择ESP8266 -&gt; DOWNLOADTOLL -&gt; 将固件包导入</p><p>其余配置如图所示，配置完可以点击START</p><img src="/posts/4026894451/ffb8c69fbdd56aae1211da570d6ede69.png" class="" title="img"><h5 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h5><ol><li>RST和INT0需用杜邦线接地，然后把RST悬空。点击START后，会显示等待上电同步，需插拔一下3.3V电源线，然后就能跑起来</li><li>设置SPI SPEED 为 20Mhz 和 SPI MODE 为 DIO、 波特率为115200</li><li>没有勾选固件，也是能跑，但跑了个寂寞</li><li>刷完固件，需重新启动一下，然后通过串口查询当前的固件版本 AT+GMR</li></ol><h4 id="ESP8266-MQTT配置指令"><a href="#ESP8266-MQTT配置指令" class="headerlink" title="ESP8266 - MQTT配置指令"></a>ESP8266 - MQTT配置指令</h4><table><thead><tr><th><strong>指令</strong></th><th></th></tr></thead><tbody><tr><td>配置 STA 模式</td><td>AT+CWMODE&#x3D;1</td></tr><tr><td>连接路由器</td><td>AT+CWJAP&#x3D;”wifi_Name”,”wifi_Password”</td></tr></tbody></table><table><thead><tr><th>配置MQTT属性</th><th>AT+MQTTUSERCFG&#x3D;0,1,”clientID”,”username”,”password”,0,0,””</th></tr></thead><tbody><tr><td>连接制定的 MQTT broker</td><td>AT+MQTTCONN&#x3D;0,”47.111.117.220”,1883,0</td></tr></tbody></table><table><thead><tr><th>查询 MQTT 连接状态</th><th>AT+MQTTCONN?</th></tr></thead><tbody><tr><td>订阅 topic 数据</td><td>AT+MQTTSUB&#x3D;0,”topicName”,1</td></tr></tbody></table><table><thead><tr><th>发布 topic 数据</th><th>AT+MQTTPUB&#x3D;0,”topicName”,”payload”,1,0</th></tr></thead><tbody><tr><td></td><td></td></tr></tbody></table><p>指令解析</p><p><a href="https://docs.espressif.com/projects/esp-at/zh_CN/release-v2.2.0.0_esp8266/AT_Command_Set/MQTT_AT_Commands.html#">MQTT AT Commands — ESP-AT 用户指南 文档 (espressif.com)</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><p><a href="https://www.cnblogs.com/xilimiss510/p/17592856.html">ESP01S刷MQTT固件</a></p></li><li><p><a href="https://wiki.diustou.com/cn/index.php?title=ESP-01S_ESP8266&printable">ESP-01S ESP8266</a></p></li><li><p><a href="https://blog.csdn.net/qq_45249507/article/details/129007327">基于ESP8266上云实验</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP01S刷MQTT固件</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="烧录" scheme="https://zml3589110.github.io/tags/%E7%83%A7%E5%BD%95/"/>
    
    <category term="ESP01S" scheme="https://zml3589110.github.io/tags/ESP01S/"/>
    
    <category term="MQTT" scheme="https://zml3589110.github.io/tags/MQTT/"/>
    
  </entry>
  
  <entry>
    <title>STM32F错误收集</title>
    <link href="https://zml3589110.github.io/posts/2741096271.html"/>
    <id>https://zml3589110.github.io/posts/2741096271.html</id>
    <published>2023-12-22T03:14:20.000Z</published>
    <updated>2023-12-22T03:20:51.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="STM32常见错误error"><a href="#STM32常见错误error" class="headerlink" title="STM32常见错误error"></a>STM32常见错误error</h1><h2 id="268-declaration-may-not-appear-after-executable-statement"><a href="#268-declaration-may-not-appear-after-executable-statement" class="headerlink" title="268: declaration may not appear after executable statement"></a>268: declaration may not appear after executable statement</h2><h3 id="STM32常见错误error-268-declaration-may-not-appear-after-executable-statement"><a href="#STM32常见错误error-268-declaration-may-not-appear-after-executable-statement" class="headerlink" title="STM32常见错误error: #268: declaration may not appear after executable statement"></a><a href="https://blog.csdn.net/stm32_newlearner/article/details/79654188">STM32常见错误error: #268: declaration may not appear after executable statement</a></h3><p>此错误中文意思：声明不能在可执行语句后出现<br>表示有变量在函数后面声明，应该改为在函数开头声明变量。<br>在Keil环境中编译程序，变量的声明应在主函数起始位置，如果有此报错，一定是变量声明在执行函数后。</p><h3 id="Error-260-D-explicit-type-is-missing-“int”-assumed-的解决方法"><a href="#Error-260-D-explicit-type-is-missing-“int”-assumed-的解决方法" class="headerlink" title="Error: #260-D: explicit type is missing (“int” assumed)的解决方法"></a><a href="https://blog.csdn.net/youngwah292/article/details/88734737">Error: #260-D: explicit type is missing (“int” assumed)的解决方法</a></h3><p>今天编译一个STM32程序的时候，遇到了一个问题，编译通不过。</p><p>输出的错误信息是：</p><p>..\SYSTEM\usart\usart.c(41): error:  #260-D: explicit type is missing (“int” assumed)</p><p>借鉴他人的解决方法：</p><p>双击这个错误，定位到USART.C文件中的第41行。</p><img src="/posts/2741096271/2019032210355174.png" class="" title="img"><p>然后在_sys_exit前面加上void。</p><img src="/posts/2741096271/20190322103709153.png" class="" title="img"><p>编译就可以通过了。</p><h3 id="SYSTEM-usart-usart-c-48-error-260-D-explicit-type-is-missing-“int”-assumed"><a href="#SYSTEM-usart-usart-c-48-error-260-D-explicit-type-is-missing-“int”-assumed" class="headerlink" title="..\SYSTEM\usart\usart.c(48): error: #260-D: explicit type is missing (“int” assumed)"></a><a href="https://blog.csdn.net/qq_40860986/article/details/88883523/">..\SYSTEM\usart\usart.c(48): error: #260-D: explicit type is missing (“int” assumed)</a></h3><p>最近移植正点原子的sys文件夹发现有一个错误，不管是F103还是F407都会有这个错误提醒：<br>错误提醒：…\SYSTEM\usart\usart.c(48): error: #260-D: explicit type is missing (“int” assumed)</p><p>定义错误位置：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FILE __stdout;       </span><br><span class="line"><span class="comment">//定义_sys_exit()以避免使用半主机模式    </span></span><br><span class="line">_sys_exit(<span class="keyword">int</span> x) </span><br><span class="line">&#123; </span><br><span class="line">x = x; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>定义 _sys_exit(int x) 以避免使用半主机模式,函数没有返回类型，假定其返回类型为int，可以写为 void _sys_exit(int x) ，否则编译器会默认为返回int类型，故会出现上述警告。</p><p><strong>解决办法：</strong><br>将_sys_exit(int x) 写成void _sys_exit(int x)</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://www.cnblogs.com/zhjblogs/p/12712575.html">（stm32f103学习总结）—RTC独立定时器—实时时钟实验 </a></li><li><a href="https://blog.csdn.net/zhai17863966493/article/details/104361466">STM32F103的RTC实时时钟配置</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">STM32F错误和警告收集</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/categories/STM32/"/>
    
    <category term="ERROR" scheme="https://zml3589110.github.io/categories/ERROR/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="RTC" scheme="https://zml3589110.github.io/tags/RTC/"/>
    
    <category term="错误" scheme="https://zml3589110.github.io/tags/%E9%94%99%E8%AF%AF/"/>
    
    <category term="ERROR" scheme="https://zml3589110.github.io/tags/ERROR/"/>
    
    <category term="declaration" scheme="https://zml3589110.github.io/tags/declaration/"/>
    
    <category term="USART" scheme="https://zml3589110.github.io/tags/USART/"/>
    
  </entry>
  
  <entry>
    <title>U8G2的OLED库基础</title>
    <link href="https://zml3589110.github.io/posts/4084148530.html"/>
    <id>https://zml3589110.github.io/posts/4084148530.html</id>
    <published>2023-12-22T02:39:20.000Z</published>
    <updated>2023-12-22T03:20:51.710Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p> <a href="https://so.csdn.net/so/search?q=OLED&spm=1001.2101.3001.7020">OLED</a>图形库众多，如Adafruit_GFX 和 Adafruit_SSD1306库。但是，今天要使用的是 U8g2图形库。</p><p><a href="https://blog.csdn.net/dpjcn1990/article/details/92831760?ops_request_misc=%7B%22request_id%22:%22168193238616800197030830%22,%22scm%22:%2220140713.130102334.pc_all.%22%7D&request_id=168193238616800197030830&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~hot_rank-1-92831760-null-null.142%5Ev85%5Econtrol,239%5Ev2%5Einsert_chatgpt&utm_term=u8g2&spm=1018.2226.3001.4187">参考文章：深入学习Arduino u8g2 OLED库，一篇就够</a><br><a href="https://github.com/olikraus/u8g2/wiki/u8g2reference">参考文章：GitHub–&gt;u8g2reference</a></p><h3 id="1-1-U8g2库百度脑图"><a href="#1-1-U8g2库百度脑图" class="headerlink" title="1.1 U8g2库百度脑图"></a>1.1 U8g2库百度脑图</h3><img src="/posts/4084148530/c2f06932d54243d1a46d9319cceedd9f.png" class="" title="U8g2库百度脑图"><p>可以分为四大类：</p><ul><li>基本函数</li><li>绘制相关函数</li><li>显示配置相关函数</li><li>缓存相关函数</li></ul><h2 id="2-U8g2库函数详解"><a href="#2-U8g2库函数详解" class="headerlink" title="2 U8g2库函数详解"></a>2 U8g2库函数详解</h2><h3 id="2-1-基本函数（干货从这里开始）"><a href="#2-1-基本函数（干货从这里开始）" class="headerlink" title="2.1 基本函数（干货从这里开始）"></a>2.1 基本函数（干货从这里开始）</h3><h4 id="2-1-1-u8g2-t-u8g2"><a href="#2-1-1-u8g2-t-u8g2" class="headerlink" title="2.1.1 u8g2_t u8g2;"></a>2.1.1 u8g2_t u8g2;</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">u8g2_t</span> u8g2;<span class="comment">// 显示器初始化结构体</span></span><br></pre></td></tr></table></figure><h4 id="2-1-2-u8g2Init-u8g2-t-u8g2"><a href="#2-1-2-u8g2Init-u8g2-t-u8g2" class="headerlink" title="2.1.2 u8g2Init(u8g2_t *u8g2)"></a>2.1.2 u8g2Init(u8g2_t *u8g2)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">u8g2_t</span> u8g2;<span class="comment">// 显示器初始化结构体</span></span><br><span class="line">u8g2Init(&amp;u8g2);   <span class="comment">//显示器调用初始化函数</span></span><br></pre></td></tr></table></figure><h4 id="2-1-3-u8g2-InitDisplay-u8g2"><a href="#2-1-3-u8g2-InitDisplay-u8g2" class="headerlink" title="2.1.3 u8g2_InitDisplay(u8g2)"></a>2.1.3 u8g2_InitDisplay(u8g2)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2Init</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8g2_Setup_ssd1306_128x64_noname_f(u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_stm32_gpio_and_delay); </span><br><span class="line">u8g2_InitDisplay(u8g2);     <span class="comment">//初始化显示</span></span><br><span class="line">u8g2_SetPowerSave(u8g2, <span class="number">0</span>); <span class="comment">//开启显示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-1-4-u8g2-SetPowerSave-u8g2-is-enable"><a href="#2-1-4-u8g2-SetPowerSave-u8g2-is-enable" class="headerlink" title="2.1.4 u8g2_SetPowerSave(u8g2, is_enable);"></a>2.1.4 u8g2_SetPowerSave(u8g2, is_enable);</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetPowerSave(&amp;u8g2, <span class="number">0</span>);   <span class="comment">//开启显示</span></span><br></pre></td></tr></table></figure><ul><li>不管是启用还是禁用，显示器需要的内存消耗是不变的，说到底就是为了关闭屏幕，做到省电；</li><li>所以这里就可以理解为什么初始化需要 <strong>u8g2_SetPowerSave(u8g2, 0);</strong> 来开启显示</li></ul><h4 id="2-1-5-u8g2-ClearDisplay-u8g2-t-u8g2"><a href="#2-1-5-u8g2-ClearDisplay-u8g2-t-u8g2" class="headerlink" title="2.1.5 u8g2_ClearDisplay(u8g2_t *u8g2)"></a>2.1.5 u8g2_ClearDisplay(u8g2_t *u8g2)</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_ClearDisplay(&amp;u8g2);    <span class="comment">//清除屏幕缓冲区</span></span><br></pre></td></tr></table></figure><ul><li>不要在 firstPage 和 nextPage 函数之间调用该方法。</li></ul><h4 id="2-1-6-u8g2-ClearBuffer-u8g2-t-u8g2-——-清除缓冲区"><a href="#2-1-6-u8g2-ClearBuffer-u8g2-t-u8g2-——-清除缓冲区" class="headerlink" title="2.1.6 u8g2_ClearBuffer(u8g2_t *u8g2) —— 清除缓冲区"></a>2.1.6 u8g2_ClearBuffer(u8g2_t *u8g2) —— 清除缓冲区</h4><ul><li>一般这个函数是与u8g2_SendBuffer函数配对使用，通常用法如下：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Buffer</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span> </span>&#123;</span><br><span class="line">  u8g2_ClearBuffer(u8g2); </span><br><span class="line">  <span class="comment">// ... 向缓冲区写入内容</span></span><br><span class="line">  u8g2_SendBuffer(u8g2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-绘制相关函数（进阶）"><a href="#2-2-绘制相关函数（进阶）" class="headerlink" title="2.2 绘制相关函数（进阶）"></a>2.2 绘制相关函数（进阶）</h3><h4 id="2-2-1-u8g2-DrawBox-——-画实心矩形"><a href="#2-2-1-u8g2-DrawBox-——-画实心矩形" class="headerlink" title="2.2.1 u8g2_DrawBox() —— 画实心矩形"></a>2.2.1 u8g2_DrawBox() —— 画实心矩形</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画实心矩形，左上角坐标为(x,y),宽度为w，高度为h</span></span><br><span class="line"><span class="comment"> * @param x 左上角的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 左上角的y坐标</span></span><br><span class="line"><span class="comment"> * @param w 方形的宽度</span></span><br><span class="line"><span class="comment"> * @param h 方形的高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawBox</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> w, <span class="keyword">u8g2_uint_t</span> h)</span></span></span><br></pre></td></tr></table></figure><ul><li>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</li><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_DrawBox(&amp;u8g2,<span class="number">3</span>,<span class="number">7</span>,<span class="number">25</span>,<span class="number">15</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/8191fc123ee6418699ad146264e97090.png" class="" title="画实心矩形"><ul><li>显示一个简单的进度条</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u8g2_FirstPage(&amp;u8g2);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">u8g2_DrawBox(&amp;u8g2,<span class="number">0</span>,<span class="number">32</span>,i++,<span class="number">15</span>);</span><br><span class="line">HAL_Delay(<span class="number">50</span>);</span><br><span class="line">&#125;<span class="keyword">while</span> (u8g2_NextPage(&amp;u8g2));</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/65f75b333baf4315a770716d97ea2779.gif" class="" title="显示进度条"><h4 id="2-2-2-u8g2-DrawCircle-——-画空心圆"><a href="#2-2-2-u8g2-DrawCircle-——-画空心圆" class="headerlink" title="2.2.2 u8g2_DrawCircle() —— 画空心圆"></a>2.2.2 u8g2_DrawCircle() —— 画空心圆</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画空心圆，圆心坐标为(x0,y0),半径为rad</span></span><br><span class="line"><span class="comment"> * @param x0 圆点的x坐标</span></span><br><span class="line"><span class="comment"> * @param y0 圆点的y坐标</span></span><br><span class="line"><span class="comment"> * @param rad 圆形的半径</span></span><br><span class="line"><span class="comment"> * @param opt 圆形选项</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_ALL 整个圆</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_UPPER_RIGHT 右上部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_UPPER_LEFT  左上部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_LOWER_LEFT  左下部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_LOWER_RIGHT 右下部分的圆弧</span></span><br><span class="line"><span class="comment"> *        选项可以通过 | 操作符来组合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawCircle</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x0, <span class="keyword">u8g2_uint_t</span> y0, <span class="keyword">u8g2_uint_t</span> rad, <span class="keyword">uint8_t</span> option)</span></span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">20</span>,<span class="number">25</span>,<span class="number">10</span>,U8G2_DRAW_ALL);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/868b1d7cdb13488d869704318979a534.png" class="" title="画空心圆"><ul><li>动态测试</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">u8g2_FirstPage(&amp;u8g2);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">63</span>,<span class="number">31</span>,i++,U8G2_DRAW_ALL ); </span><br><span class="line"><span class="comment">//    u8g2_DrawCircle(&amp;u8g2,63,31,i++,U8G2_DRAW_UPPER_RIGHT|U8G2_DRAW_LOWER_LEFT); </span></span><br><span class="line">HAL_Delay(<span class="number">50</span>);</span><br><span class="line">&#125;<span class="keyword">while</span> (u8g2_NextPage(&amp;u8g2));</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/9cd754e22b8149ebaca6e8d2a6bd20cb.gif" class="" title="空心圆测试all"><img src="/posts/4084148530/3bcba1fc7fb8419cb0cd054aadfb256d.gif" class="" title="空心圆测试"><h4 id="2-2-3-u8g2-DrawDisc-——-画实心圆"><a href="#2-2-3-u8g2-DrawDisc-——-画实心圆" class="headerlink" title="2.2.3 u8g2_DrawDisc() —— 画实心圆"></a>2.2.3 u8g2_DrawDisc() —— 画实心圆</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画实心圆，圆心坐标为(x0,y0),半径为rad</span></span><br><span class="line"><span class="comment"> * @param x0 圆点的x坐标</span></span><br><span class="line"><span class="comment"> * @param y0 圆点的y坐标</span></span><br><span class="line"><span class="comment"> * @param rad 圆形的半径</span></span><br><span class="line"><span class="comment"> * @param opt 圆形选项</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_ALL 整个圆</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_UPPER_RIGHT 右上部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_UPPER_LEFT  左上部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_LOWER_LEFT  左下部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_LOWER_RIGHT 右下部分的圆弧</span></span><br><span class="line"><span class="comment"> *       选项可以通过 | 操作符来组合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawDisc</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x0, <span class="keyword">u8g2_uint_t</span> y0, <span class="keyword">u8g2_uint_t</span> rad, <span class="keyword">uint8_t</span> option)</span></span></span><br></pre></td></tr></table></figure><ul><li><p>直径等于2rad + 1；</p></li><li><p>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</p></li><li><p>示例</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u8g2_FirstPage(&amp;u8g2);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">u8g2_DrawDisc(&amp;u8g2,<span class="number">63</span>,<span class="number">31</span>,i++,U8G2_DRAW_UPPER_RIGHT|U8G2_DRAW_LOWER_LEFT); </span><br><span class="line">HAL_Delay(<span class="number">50</span>);</span><br><span class="line">&#125;<span class="keyword">while</span> (u8g2_NextPage(&amp;u8g2));</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/d53ebc9940b34a448af82ee91610af7f.gif" class="" title="实心圆测试"><h4 id="2-2-4-u8g2-DrawEllipse-——-画空心椭圆"><a href="#2-2-4-u8g2-DrawEllipse-——-画空心椭圆" class="headerlink" title="2.2.4 u8g2_DrawEllipse() —— 画空心椭圆"></a>2.2.4 u8g2_DrawEllipse() —— 画空心椭圆</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画空心椭圆，圆心坐标为(x0,y0),半径为rad</span></span><br><span class="line"><span class="comment"> * @param x0 圆点的x坐标</span></span><br><span class="line"><span class="comment"> * @param y0 圆点的y坐标</span></span><br><span class="line"><span class="comment"> * @param rx 椭圆形水平x方向的半径</span></span><br><span class="line"><span class="comment"> * @param ry 椭圆形竖直y方向的半径</span></span><br><span class="line"><span class="comment"> * @param opt 圆形选项</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_ALL 整个椭圆</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_UPPER_RIGHT 右上部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_UPPER_LEFT  左上部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_LOWER_LEFT  左下部分的圆弧</span></span><br><span class="line"><span class="comment"> *        U8G2_DRAW_LOWER_RIGHT 右下部分的圆弧</span></span><br><span class="line"><span class="comment"> *        选项可以通过 | 操作符来组合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawEllipse</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x0, <span class="keyword">u8g2_uint_t</span> y0, <span class="keyword">u8g2_uint_t</span> rx, <span class="keyword">u8g2_uint_t</span> ry, <span class="keyword">uint8_t</span> option)</span></span></span><br></pre></td></tr></table></figure><ul><li>rx*ry 在8位模式的u8g2必须小于512（博主也没有理解）；</li><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_DrawEllipse(&amp;u8g2,<span class="number">20</span>,<span class="number">25</span>,<span class="number">15</span>,<span class="number">10</span>,U8G2_DRAW_ALL);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/2e5a5bd77f154b01aa25622e2a01852b.png" class="" title="画空心椭圆"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">u8g2_FirstPage(&amp;u8g2);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">u8g2_DrawEllipse(&amp;u8g2,<span class="number">63</span>,<span class="number">31</span>,i++,<span class="number">30</span>,U8G2_DRAW_UPPER_RIGHT|U8G2_DRAW_LOWER_LEFT); </span><br><span class="line">HAL_Delay(<span class="number">50</span>);</span><br><span class="line">&#125;<span class="keyword">while</span> (u8g2_NextPage(&amp;u8g2));</span><br></pre></td></tr></table></figure><h4 id="2-2-5-u8g2-DrawFilledEllipse-——-画实心椭圆"><a href="#2-2-5-u8g2-DrawFilledEllipse-——-画实心椭圆" class="headerlink" title="2.2.5 u8g2_DrawFilledEllipse() —— 画实心椭圆"></a>2.2.5 u8g2_DrawFilledEllipse() —— 画实心椭圆</h4><h4 id="2-2-6-u8g2-DrawFrame-——-画空心矩形"><a href="#2-2-6-u8g2-DrawFrame-——-画空心矩形" class="headerlink" title="2.2.6 u8g2_DrawFrame() —— 画空心矩形"></a>2.2.6 u8g2_DrawFrame() —— 画空心矩形</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 画空心方形，左上角坐标为(x,y),宽度为w，高度为h</span></span><br><span class="line"><span class="comment"> * @param x 左上角的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 左上角的y坐标</span></span><br><span class="line"><span class="comment"> * @param w 方形的宽度</span></span><br><span class="line"><span class="comment"> * @param h 方形的高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawFrame</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> w, <span class="keyword">u8g2_uint_t</span> h)</span></span></span><br></pre></td></tr></table></figure><ul><li>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</li><li>示例</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_DrawFrame(&amp;u8g2,<span class="number">3</span>,<span class="number">7</span>,<span class="number">25</span>,<span class="number">15</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/7615177436624106b325e32e6de3448d.png" class="" title="画空心矩形"><ul><li>进度条示例</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">u8g2_FirstPage(&amp;u8g2);</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">uint8_t</span> i=<span class="number">0</span>;i&lt;=<span class="number">99</span>;i=i+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">u8g2_ClearBuffer(&amp;u8g2); </span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buff[<span class="number">20</span>];</span><br><span class="line">u8g2_SetFont(&amp;u8g2,u8g2_font_ncenB08_tf);<span class="comment">//字体</span></span><br><span class="line"><span class="built_in">sprintf</span>(buff,<span class="string">&quot;%d%%&quot;</span>,(<span class="keyword">int</span>)(i/<span class="number">100.0</span>*<span class="number">100</span>));</span><br><span class="line">u8g2_DrawStr(&amp;u8g2,<span class="number">105</span>,<span class="number">49</span>,buff);<span class="comment">//当前进度显示</span></span><br><span class="line"></span><br><span class="line">u8g2_DrawBox(&amp;u8g2,<span class="number">2</span>,<span class="number">40</span>,i,<span class="number">10</span>);<span class="comment">//填充框实心矩形框</span></span><br><span class="line">u8g2_DrawFrame(&amp;u8g2,<span class="number">0</span>,<span class="number">38</span>,<span class="number">103</span>,<span class="number">14</span>);<span class="comment">//空心矩形框</span></span><br><span class="line"></span><br><span class="line">HAL_Delay(<span class="number">200</span>);</span><br><span class="line">u8g2_SendBuffer(&amp;u8g2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">while</span> (u8g2_NextPage(&amp;u8g2));</span><br></pre></td></tr></table></figure><h4 id="2-2-7-u8g2-DrawGlyph-——-绘制字体字集的符号"><a href="#2-2-7-u8g2-DrawGlyph-——-绘制字体字集的符号" class="headerlink" title="2.2.7 u8g2_DrawGlyph() —— 绘制字体字集的符号"></a>2.2.7 u8g2_DrawGlyph() —— 绘制字体字集的符号</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制字体字集里面定义的符号</span></span><br><span class="line"><span class="comment"> * @param x 左上角的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 左上角的y坐标</span></span><br><span class="line"><span class="comment"> * @param encoding 字符的unicode值</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 u8g2_SetFont</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_DrawGlyph</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">uint16_t</span> encoding)</span></span></span><br></pre></td></tr></table></figure><ul><li>U8g2支持16位以内的unicode字符集，也就是说encoding的范围为0-65535，DrawGlyph方法只能绘制存在于所使用的字体字集中的unicode值；</li><li>这个绘制方法依赖于当前的字体模式和绘制颜色；</li></ul><h4 id="2-2-8-u8g2-DrawHLine-——-绘制水平线"><a href="#2-2-8-u8g2-DrawHLine-——-绘制水平线" class="headerlink" title="2.2.8 u8g2_DrawHLine() —— 绘制水平线"></a>2.2.8 u8g2_DrawHLine() —— 绘制水平线</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制水平线</span></span><br><span class="line"><span class="comment"> * @param x 左上角的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 左上角的y坐标</span></span><br><span class="line"><span class="comment"> * @param w 水平线的长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawHLine</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> len)</span></span></span><br></pre></td></tr></table></figure><ul><li>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</li></ul><h4 id="2-2-9-u8g2-DrawLine-——-两点之间绘制线"><a href="#2-2-9-u8g2-DrawLine-——-两点之间绘制线" class="headerlink" title="2.2.9 u8g2_DrawLine() —— 两点之间绘制线"></a>2.2.9 u8g2_DrawLine() —— 两点之间绘制线</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制线，从坐标(x0,y0) 到(x1,y1)</span></span><br><span class="line"><span class="comment"> * @param x0 端点0的x坐标</span></span><br><span class="line"><span class="comment"> * @param y0 端点0的y坐标</span></span><br><span class="line"><span class="comment"> * @param x1 端点1的x坐标</span></span><br><span class="line"><span class="comment"> * @param y1 端点1的y坐标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawLine</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x1, <span class="keyword">u8g2_uint_t</span> y1, <span class="keyword">u8g2_uint_t</span> x2, <span class="keyword">u8g2_uint_t</span> y2)</span></span></span><br></pre></td></tr></table></figure><ul><li>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</li><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_DrawLine(&amp;u8g2,<span class="number">20</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">32</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/e376b3b50d0b4303bae30a939f47fc5b.png" class="" title="两点之间绘制线"><h4 id="2-2-10-u8g2-DrawPixel-——-绘制像素点"><a href="#2-2-10-u8g2-DrawPixel-——-绘制像素点" class="headerlink" title="2.2.10 u8g2_DrawPixel() —— 绘制像素点"></a>2.2.10 u8g2_DrawPixel() —— 绘制像素点</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制像素点，坐标(x,y)</span></span><br><span class="line"><span class="comment"> * @param x 像素点的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 像素点的y坐标</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 setDrawColor</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawPixel</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y)</span></span></span><br></pre></td></tr></table></figure><ul><li><p>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</p></li><li><p>你会发现很多绘制方法的底层都是调用**u8g2_DrawPixel()**，毕竟像素属于最小颗粒度；</p></li><li><p>我们可以利用这个绘制方法自定义自己的图形显示；</p></li></ul><h4 id="2-2-11-u8g2-DrawRBox-——-绘制圆角实心方形"><a href="#2-2-11-u8g2-DrawRBox-——-绘制圆角实心方形" class="headerlink" title="2.2.11 u8g2_DrawRBox() —— 绘制圆角实心方形"></a>2.2.11 u8g2_DrawRBox() —— 绘制圆角实心方形</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制圆角实心方形，左上角坐标为(x,y),宽度为w，高度为h，圆角半径为r</span></span><br><span class="line"><span class="comment"> * @param x 左上角的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 左上角的y坐标</span></span><br><span class="line"><span class="comment"> * @param w 方形的宽度</span></span><br><span class="line"><span class="comment"> * @param h 方形的高度</span></span><br><span class="line"><span class="comment"> * @param r 圆角半径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawRBox</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> w, <span class="keyword">u8g2_uint_t</span> h, <span class="keyword">u8g2_uint_t</span> r)</span></span></span><br></pre></td></tr></table></figure><ul><li>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</li><li>要求，w &gt;&#x3D; 2(r+1) 并且 h &gt;&#x3D; 2(r+1)，这是显而易见的限制；</li></ul><h4 id="2-2-12-u8g2-DrawRFrame-——-绘制圆角空心方形"><a href="#2-2-12-u8g2-DrawRFrame-——-绘制圆角空心方形" class="headerlink" title="2.2.12 u8g2_DrawRFrame() —— 绘制圆角空心方形"></a>2.2.12 u8g2_DrawRFrame() —— 绘制圆角空心方形</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制圆角空心方形，左上角坐标为(x,y),宽度为w，高度为h，圆角半径为r</span></span><br><span class="line"><span class="comment"> * @param x 左上角的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 左上角的y坐标</span></span><br><span class="line"><span class="comment"> * @param w 方形的宽度</span></span><br><span class="line"><span class="comment"> * @param h 方形的高度</span></span><br><span class="line"><span class="comment"> * @param r 圆角半径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawRFrame</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> w, <span class="keyword">u8g2_uint_t</span> h, <span class="keyword">u8g2_uint_t</span> r)</span></span></span><br></pre></td></tr></table></figure><ul><li>如果支持绘制颜色（也就是不是单色显示器），那么由**u8g2_SetDrawColor(u8g2_t *u8g2, uint8_t color)**设置；</li><li>要求，w &gt;&#x3D; 2(r+1) 并且 h &gt;&#x3D; 2(r+1)，这是显而易见的限制</li><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_DrawRFrame(&amp;u8g2,<span class="number">20</span>,<span class="number">15</span>,<span class="number">30</span>,<span class="number">22</span>,<span class="number">7</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/f0a216708f884e12ba4878fbdd311976.png" class="" title="绘制圆角空心方形"><h4 id="2-2-13-u8g2-DrawStr-——-绘制字符串"><a href="#2-2-13-u8g2-DrawStr-——-绘制字符串" class="headerlink" title="2.2.13 u8g2_DrawStr() —— 绘制字符串"></a>2.2.13 u8g2_DrawStr() —— 绘制字符串</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制字符串</span></span><br><span class="line"><span class="comment"> * @param x 左上角的x坐标</span></span><br><span class="line"><span class="comment"> * @param y 左上角的y坐标</span></span><br><span class="line"><span class="comment"> * @param s 绘制字符串内容</span></span><br><span class="line"><span class="comment"> * @return 字符串的长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_DrawStr</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br></pre></td></tr></table></figure><ul><li><p>需要先设置字体，调用**u8g2_SetFont()**方法；</p></li><li><p>这个方法不能绘制encoding超过256的，超过256需要用**u8g2_DrawUTF8()**或者**u8g2_DrawGlyph()**；说白了就是一般用来显示英文字符；</p></li><li><p>x，y属于字符串左下角的坐标；</p></li><li><p>我们可以用它来<strong>显示变量</strong>；</p></li><li><p>示例：</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetFont(&amp;u8g2,u8g2_font_ncenB14_tr);</span><br><span class="line">u8g2_DrawStr(&amp;u8g2,<span class="number">0</span>,<span class="number">15</span>,<span class="string">&quot;Hello World!&quot;</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/9c2442f1854347d8a608957695640f8b.png" class="" title="绘制字符串"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">uint8_t</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">u8g2_ClearBuffer(&amp;u8g2); </span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> buff[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">sprintf</span>(buff,<span class="string">&quot;%d&quot;</span>,(<span class="keyword">int</span>)(i/<span class="number">100.0</span>*<span class="number">100</span>));</span><br><span class="line">u8g2_SetFont(&amp;u8g2,u8g2_font_inb24_mf);</span><br><span class="line">       u8g2_DrawStr(&amp;u8g2,<span class="number">127</span><span class="number">-41</span>,<span class="number">24</span>,buff);</span><br><span class="line">    u8g2_SendBuffer(&amp;u8g2);</span><br><span class="line">       HAL_Delay(<span class="number">100</span>);  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h4 id="2-2-14-u8g2-DrawTriangle-——-绘制实心三角形"><a href="#2-2-14-u8g2-DrawTriangle-——-绘制实心三角形" class="headerlink" title="2.2.14 u8g2_DrawTriangle() —— 绘制实心三角形"></a>2.2.14 u8g2_DrawTriangle() —— 绘制实心三角形</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制实心三角形，定点坐标分别为(x0,y0),(x1,y1),(x2,y2)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawTriangle</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">int16_t</span> x0, <span class="keyword">int16_t</span> y0, <span class="keyword">int16_t</span> x1, <span class="keyword">int16_t</span> y1, <span class="keyword">int16_t</span> x2, <span class="keyword">int16_t</span> y2)</span></span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><img src="/posts/4084148530/c4fd193817e145c090255271849494a3.png" class="" title="绘制实心三角形"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">uint8_t</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">       u8g2_ClearBuffer(&amp;u8g2); </span><br><span class="line"></span><br><span class="line">       u8g2_DrawTriangle(&amp;u8g2,<span class="number">20</span>,<span class="number">5</span>, <span class="number">27</span>,<span class="number">50</span>, i,<span class="number">32</span>);</span><br><span class="line">       HAL_Delay(<span class="number">100</span>);  </span><br><span class="line">       u8g2_SendBuffer(&amp;u8g2);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h4 id="2-2-15-u8g2-DrawUTF8-——-绘制UTF8编码的字符"><a href="#2-2-15-u8g2-DrawUTF8-——-绘制UTF8编码的字符" class="headerlink" title="2.2.15 u8g2_DrawUTF8() —— 绘制UTF8编码的字符"></a>2.2.15 u8g2_DrawUTF8() —— 绘制UTF8编码的字符</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制UTF8编码的字符串</span></span><br><span class="line"><span class="comment"> * @param x 字符串在屏幕上的左下角x坐标</span></span><br><span class="line"><span class="comment"> * @param y 字符串在屏幕上的左下角y坐标</span></span><br><span class="line"><span class="comment"> * @param s 需要绘制的UTF-8编码字符串</span></span><br><span class="line"><span class="comment"> * @return 返回字符串的长度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_DrawUTF8</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br></pre></td></tr></table></figure><ul><li><p>使用该方法，有两个前提。首先是你的编译器需要支持UTF-8编码，对于绝大部分Arduino板子已经支持；其次，显示的字符串需要存为“UTF-8”编码，Arduino IDE上默认支持；</p></li><li><p>该方法需要依赖于fontMode（setFont）以及drawing Color，也就是说如果你传进来的字符串编码必须在font定义里面；</p></li><li><p>Keil v5 mdk 编译UTF8字符串报错的解决办法–no-multibyte-chars</p></li></ul><img src="/posts/4084148530/1492d7f3a54745deafb6a590272da21d.png" class="" title="UTF8字符串报错的解决办法"><ul><li>示例</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetFont(&amp;u8g2,u8g2_font_unifont_t_symbols);</span><br><span class="line">u8g2_DrawUTF8(&amp;u8g2,<span class="number">5</span>, <span class="number">20</span>, <span class="string">&quot;Snowman: ☃&quot;</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/2812e16384f34423b8a8cf23f6fb34fe.png" class="" title="绘制UTF8编码的字符"><h4 id="2-2-16-u8g2-DrawVLine-——-绘制竖直线"><a href="#2-2-16-u8g2-DrawVLine-——-绘制竖直线" class="headerlink" title="2.2.16 u8g2_DrawVLine() —— 绘制竖直线"></a>2.2.16 u8g2_DrawVLine() —— 绘制竖直线</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制竖直线</span></span><br><span class="line"><span class="comment"> * @param x 左上角坐标x</span></span><br><span class="line"><span class="comment"> * @param y 左上角坐标y</span></span><br><span class="line"><span class="comment"> * @param h 高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawVLine</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> len)</span></span></span><br></pre></td></tr></table></figure><h4 id="2-2-17-u8g2-DrawXBM-x2F-u8g2-DrawXBMP-——-绘制图像"><a href="#2-2-17-u8g2-DrawXBM-x2F-u8g2-DrawXBMP-——-绘制图像" class="headerlink" title="2.2.17 u8g2_DrawXBM()&#x2F;u8g2_DrawXBMP() —— 绘制图像"></a>2.2.17 u8g2_DrawXBM()&#x2F;u8g2_DrawXBMP() —— 绘制图像</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制图像</span></span><br><span class="line"><span class="comment"> * @param x 左上角坐标x</span></span><br><span class="line"><span class="comment"> * @param y 左上角坐标y</span></span><br><span class="line"><span class="comment"> * @param w 图形宽度</span></span><br><span class="line"><span class="comment"> * @param h 图形高度</span></span><br><span class="line"><span class="comment"> * @param bitmap 图形内容</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 setBitmapMode</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawXBM</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> w, <span class="keyword">u8g2_uint_t</span> h, <span class="keyword">const</span> <span class="keyword">uint8_t</span> *bitmap)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_DrawXBMP</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> x, <span class="keyword">u8g2_uint_t</span> y, <span class="keyword">u8g2_uint_t</span> w, <span class="keyword">u8g2_uint_t</span> h, <span class="keyword">const</span> <span class="keyword">uint8_t</span> *bitmap)</span></span></span><br></pre></td></tr></table></figure><ul><li><strong>u8g2_DrawXBM</strong>和<strong>u8g2_DrawXBMP</strong>区别在于 <strong>XBMP</strong>支持<strong>PROGMEM</strong>；</li></ul><h4 id="2-2-18-u8g2-FirstPage-x2F-u8g2-NextPage-——-绘制命令"><a href="#2-2-18-u8g2-FirstPage-x2F-u8g2-NextPage-——-绘制命令" class="headerlink" title="2.2.18 u8g2_FirstPage()&#x2F;u8g2_NextPage() —— 绘制命令"></a>2.2.18 u8g2_FirstPage()&#x2F;u8g2_NextPage() —— 绘制命令</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制图像</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_FirstPage</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_NextPage</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br></pre></td></tr></table></figure><ul><li><p><strong>u8g2_FirstPage</strong>方法会把当前页码位置变成0；</p></li><li><p>修改内容处于<strong>u8g2_FirstPage</strong>和<strong>u8g2_NextPage</strong>之间，每次都是重新渲染所有内容；</p></li><li><p>该方法消耗的ram空间，比<strong>u8g2_SendBuffer</strong>消耗的RAM空间要少；</p></li><li><p>示例：</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">u8g2_FirstPage(&amp;u8g2);</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">u8g2_SetFont(&amp;u8g2,u8g2_font_ncenB14_tr);</span><br><span class="line">u8g2_DrawStr(&amp;u8g2,<span class="number">0</span>,<span class="number">15</span>,<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">while</span> (u8g2_NextPage(&amp;u8g2));</span><br></pre></td></tr></table></figure><ul><li>库源码解析：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_FirstPage</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( u8g2-&gt;is_auto_page_clear )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//清除缓冲区</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//设置当前缓冲区的Tile Row 一个Tile等于8个像素点的高度</span></span><br><span class="line">  u8g2_SetBufferCurrTileRow(u8g2, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_NextPage</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">uint8_t</span> row;</span><br><span class="line">  u8g2_send_buffer(u8g2);</span><br><span class="line">  row = u8g2-&gt;tile_curr_row;</span><br><span class="line">  row += u8g2-&gt;tile_buf_height;</span><br><span class="line">  <span class="keyword">if</span> ( row &gt;= u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height )</span><br><span class="line">  &#123; </span><br><span class="line">  <span class="comment">//如果row已经到达最后一行，触发refreshDisplay调用，表示整个页面已经刷完了</span></span><br><span class="line">    u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( u8g2-&gt;is_auto_page_clear )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//清除缓冲区</span></span><br><span class="line">    u8g2_ClearBuffer(u8g2);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//不断更新TileRow 这是非常关键的一步</span></span><br><span class="line">  u8g2_SetBufferCurrTileRow(u8g2, row);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-2-19-u8g2-SendBuffer-——-绘制缓冲区的内容"><a href="#2-2-19-u8g2-SendBuffer-——-绘制缓冲区的内容" class="headerlink" title="2.2.19 u8g2_SendBuffer() —— 绘制缓冲区的内容"></a>2.2.19 u8g2_SendBuffer() —— 绘制缓冲区的内容</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 绘制缓冲区的内容</span></span><br><span class="line"><span class="comment"> * @Note 关联方法  clearBuffer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SendBuffer</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br></pre></td></tr></table></figure><ul><li><strong>u8g2_SendBuffer</strong>的<strong>RAM</strong>占用空间大，需要结合构造器的buffer选项使用；</li><li>不管是<strong>u8g2_FirstPage</strong>、<strong>u8g2_NextPage</strong>还是<strong>u8g2_SendBuffer</strong>，都涉及到一个叫做 <strong>current page position</strong>的概念；</li><li>库源码解析：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SendBuffer</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  u8g2_send_buffer(u8g2);</span><br><span class="line">  u8x8_RefreshDisplay( u8g2_GetU8x8(u8g2) );  </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">u8g2_send_tile_row</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">uint8_t</span> src_tile_row, <span class="keyword">uint8_t</span> dest_tile_row)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">uint8_t</span> *ptr;</span><br><span class="line">  <span class="keyword">uint16_t</span> offset;</span><br><span class="line">  <span class="keyword">uint8_t</span> w;</span><br><span class="line">  </span><br><span class="line">  w = u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_width;</span><br><span class="line">  offset = src_tile_row;</span><br><span class="line">  ptr = u8g2-&gt;tile_buf_ptr;</span><br><span class="line">  offset *= w;</span><br><span class="line">  offset *= <span class="number">8</span>;</span><br><span class="line">  ptr += offset;</span><br><span class="line">  u8x8_DrawTile(u8g2_GetU8x8(u8g2), <span class="number">0</span>, dest_tile_row, w, ptr);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">  write the buffer to the display RAM. </span></span><br><span class="line"><span class="comment">  For most displays, this will make the content visible to the user.</span></span><br><span class="line"><span class="comment">  Some displays (like the SSD1606) require a u8x8_RefreshDisplay()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">u8g2_send_buffer</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span> U8X8_NOINLINE</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">u8g2_send_buffer</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">uint8_t</span> src_row;</span><br><span class="line">  <span class="keyword">uint8_t</span> src_max;</span><br><span class="line">  <span class="keyword">uint8_t</span> dest_row;</span><br><span class="line">  <span class="keyword">uint8_t</span> dest_max;</span><br><span class="line"> </span><br><span class="line">  src_row = <span class="number">0</span>;</span><br><span class="line">  src_max = u8g2-&gt;tile_buf_height;</span><br><span class="line">  dest_row = u8g2-&gt;tile_curr_row;</span><br><span class="line">  dest_max = u8g2_GetU8x8(u8g2)-&gt;display_info-&gt;tile_height;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    u8g2_send_tile_row(u8g2, src_row, dest_row);</span><br><span class="line">    src_row++;</span><br><span class="line">    dest_row++;</span><br><span class="line">  &#125; <span class="keyword">while</span>( src_row &lt; src_max &amp;&amp; dest_row &lt; dest_max );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>示例</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Buffer</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span> </span>&#123;</span><br><span class="line">u8g2_ClearBuffer(u8g2);</span><br><span class="line"><span class="comment">// ... write something to the buffer </span></span><br><span class="line">u8g2_SendBuffer(u8g2);</span><br><span class="line">HAL_Delay(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-显示配置相关函数（并不是很有用，再进阶）"><a href="#2-3-显示配置相关函数（并不是很有用，再进阶）" class="headerlink" title="2.3 显示配置相关函数（并不是很有用，再进阶）"></a>2.3 显示配置相关函数（并不是很有用，再进阶）</h3><h4 id="2-3-1-u8g2-GetAscent-——-获取基准线以上的高度"><a href="#2-3-1-u8g2-GetAscent-——-获取基准线以上的高度" class="headerlink" title="2.3.1 u8g2_GetAscent() —— 获取基准线以上的高度"></a>2.3.1 u8g2_GetAscent() —— 获取基准线以上的高度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取基准线以上的高度</span></span><br><span class="line"><span class="comment"> * @return 返回高度值</span></span><br><span class="line"><span class="comment"> * @Note 关联方法  setFont getDescent setFontRefHeightAll</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int8_t</span> <span class="title">u8g2_GetAscent</span><span class="params">(&amp;u8g2)</span></span></span><br></pre></td></tr></table></figure><ul><li>跟字体有关（u8g2_SetFont）；</li><li>示例：<br>下面例子，ascent是18</li></ul><img src="/posts/4084148530/719839ae60974a95b8e5426c38b407df.png" class="" title="获取基准线以上的高度"><h4 id="2-3-2-u8g2-GetDescent-——-获取基准线以下的高度"><a href="#2-3-2-u8g2-GetDescent-——-获取基准线以下的高度" class="headerlink" title="2.3.2 u8g2_GetDescent() —— 获取基准线以下的高度"></a>2.3.2 u8g2_GetDescent() —— 获取基准线以下的高度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取基准线以下的高度</span></span><br><span class="line"><span class="comment"> * @return 返回高度值</span></span><br><span class="line"><span class="comment"> * @Note 关联方法  setFont setFontRefHeightAll</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int8_t</span> <span class="title">u8g2_GetDescent</span><span class="params">(&amp;u8g2)</span></span>;</span><br></pre></td></tr></table></figure><ul><li>跟字体有关（setFont）；</li><li>示例：<br>下面例子，descent是-5</li></ul><img src="/posts/4084148530/da5eb213190a4538aa7f0983e23f6966.png" class="" title="获取基准线以下的高度"><h4 id="2-3-3-u8g2-GetDisplayHeight-——-获取显示器的高度"><a href="#2-3-3-u8g2-GetDisplayHeight-——-获取显示器的高度" class="headerlink" title="2.3.3 u8g2_GetDisplayHeight() —— 获取显示器的高度"></a>2.3.3 u8g2_GetDisplayHeight() —— 获取显示器的高度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取显示器的高度</span></span><br><span class="line"><span class="comment"> * @return 返回高度值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_GetDisplayHeight</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br></pre></td></tr></table></figure><h4 id="2-3-4-u8g2-GetDisplayWidth-——-获取显示器的宽度"><a href="#2-3-4-u8g2-GetDisplayWidth-——-获取显示器的宽度" class="headerlink" title="2.3.4 u8g2_GetDisplayWidth() —— 获取显示器的宽度"></a>2.3.4 u8g2_GetDisplayWidth() —— 获取显示器的宽度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取显示器的宽度</span></span><br><span class="line"><span class="comment"> * @return 返回宽度值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_GetDisplayWidth</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br></pre></td></tr></table></figure><h4 id="2-3-5-u8g2-GetMaxCharHeight-——-获取当前字体里的最大字符的高度"><a href="#2-3-5-u8g2-GetMaxCharHeight-——-获取当前字体里的最大字符的高度" class="headerlink" title="2.3.5 u8g2_GetMaxCharHeight() —— 获取当前字体里的最大字符的高度"></a>2.3.5 u8g2_GetMaxCharHeight() —— 获取当前字体里的最大字符的高度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前字体里的最大字符的高度</span></span><br><span class="line"><span class="comment"> * @return 返回高度值</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 setFont</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_GetMaxCharHeight</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><h4 id="2-3-6-u8g2-GetMaxCharWidth-——-获取当前字体里的最大字符的宽度"><a href="#2-3-6-u8g2-GetMaxCharWidth-——-获取当前字体里的最大字符的宽度" class="headerlink" title="2.3.6 u8g2_GetMaxCharWidth() —— 获取当前字体里的最大字符的宽度"></a>2.3.6 u8g2_GetMaxCharWidth() —— 获取当前字体里的最大字符的宽度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前字体里的最大字符的宽度</span></span><br><span class="line"><span class="comment"> * @return 返回宽度值</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 setFont</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">u8g2_uint_t</span> u8g2_GetMaxCharWidth</span><br></pre></td></tr></table></figure><h4 id="2-3-7-u8g2-GetStrWidth-——-获取字符串的像素宽度"><a href="#2-3-7-u8g2-GetStrWidth-——-获取字符串的像素宽度" class="headerlink" title="2.3.7 u8g2_GetStrWidth() —— 获取字符串的像素宽度"></a>2.3.7 u8g2_GetStrWidth() —— 获取字符串的像素宽度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取字符串的像素宽度</span></span><br><span class="line"><span class="comment"> * @param s 绘制字符串</span></span><br><span class="line"><span class="comment"> * @return 返回字符串的像素宽度值</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 setFont drawStr</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_GetStrWidth</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">const</span> <span class="keyword">char</span> *s)</span></span></span><br></pre></td></tr></table></figure><h4 id="2-3-8-u8g2-GetUTF8Width-——-获取UTF-8字符串的像素宽度"><a href="#2-3-8-u8g2-GetUTF8Width-——-获取UTF-8字符串的像素宽度" class="headerlink" title="2.3.8 u8g2_GetUTF8Width() —— 获取UTF-8字符串的像素宽度"></a>2.3.8 u8g2_GetUTF8Width() —— 获取UTF-8字符串的像素宽度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取UTF-8字符串的像素宽度</span></span><br><span class="line"><span class="comment"> * @param s 绘制字符串</span></span><br><span class="line"><span class="comment"> * @return 返回字符串的像素宽度值</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 setFont drawStr</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_GetUTF8Width</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br></pre></td></tr></table></figure><h4 id="2-3-9-u8g2-SetAutoPageClear-——-设置自动清除缓冲区"><a href="#2-3-9-u8g2-SetAutoPageClear-——-设置自动清除缓冲区" class="headerlink" title="2.3.9 u8g2_SetAutoPageClear() —— 设置自动清除缓冲区"></a>2.3.9 u8g2_SetAutoPageClear() —— 设置自动清除缓冲区</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否自动清除缓冲区</span></span><br><span class="line"><span class="comment"> * @param mode 0 表示关闭</span></span><br><span class="line"><span class="comment"> *             1 表示开启，默认是开启</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">u8g2_uint_t</span> <span class="title">u8g2_SetAutoPageClear</span><span class="params">()</span> </span></span><br></pre></td></tr></table></figure><h4 id="2-3-10-u8g2-SetBitmapMode-——-设置位图模式"><a href="#2-3-10-u8g2-SetBitmapMode-——-设置位图模式" class="headerlink" title="2.3.10 u8g2_SetBitmapMode() —— 设置位图模式"></a>2.3.10 u8g2_SetBitmapMode() —— 设置位图模式</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置位图模式（定义drawXBM方法是否绘制背景颜色）</span></span><br><span class="line"><span class="comment"> * @param is_transparent</span></span><br><span class="line"><span class="comment"> *         0 绘制背景颜色，不透明，默认是该值</span></span><br><span class="line"><span class="comment"> *         1 不绘制背景颜色，透明</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 drawXBM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetBitmapMode</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">uint8_t</span> is_transparent)</span></span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetDrawColor(&amp;u8g2,<span class="number">1</span>);</span><br><span class="line">u8g2_SetBitmapMode(&amp;u8g2,<span class="number">0</span>);</span><br><span class="line">u8g2_DrawXBM(&amp;u8g2,<span class="number">4</span>,<span class="number">3</span>, u8g2_logo_97x51_width, u8g2_logo_97x51_height,  u8g2_logo_97x51_bits);</span><br><span class="line">u8g2_DrawXBM(&amp;u8g2,<span class="number">12</span>,<span class="number">11</span>, u8g2_logo_97x51_width, u8g2_logo_97x51_height,  u8g2_logo_97x51_bits);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/5def81f3580d4e45b70e907cc3f3c69c.png" class="" title="设置位图模式1"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetDrawColor(&amp;u8g2,<span class="number">1</span>);</span><br><span class="line">u8g2_SetBitmapMode(&amp;u8g2,<span class="number">1</span>);</span><br><span class="line">u8g2_DrawXBM(&amp;u8g2,<span class="number">4</span>,<span class="number">3</span>, u8g2_logo_97x51_width, u8g2_logo_97x51_height,  u8g2_logo_97x51_bits);</span><br><span class="line">u8g2_DrawXBM(&amp;u8g2,<span class="number">12</span>,<span class="number">11</span>, u8g2_logo_97x51_width, u8g2_logo_97x51_height,  u8g2_logo_97x51_bits);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/f4c5a187659b46cebca8d8c17e982cb8.png" class="" title="设置位图模式2"><h4 id="2-3-11-u8g2-SetClipWindow-——-设置采集窗口大小"><a href="#2-3-11-u8g2-SetClipWindow-——-设置采集窗口大小" class="headerlink" title="2.3.11 u8g2_SetClipWindow() —— 设置采集窗口大小"></a>2.3.11 u8g2_SetClipWindow() —— 设置采集窗口大小</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置采集窗口，窗口范围从左上角(x0,y0)到右下角(x1,y1)</span></span><br><span class="line"><span class="comment"> * 也就是我们绘制的内容只能在规范范围内显示</span></span><br><span class="line"><span class="comment"> * @param x0 左上角x坐标</span></span><br><span class="line"><span class="comment"> * @param y0 左上角y坐标</span></span><br><span class="line"><span class="comment"> * @param x1 右上角x坐标</span></span><br><span class="line"><span class="comment"> * @param y1 右上角y坐标</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 begin</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetClipWindow</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">u8g2_uint_t</span> clip_x0, <span class="keyword">u8g2_uint_t</span> clip_y0, <span class="keyword">u8g2_uint_t</span> clip_x1, <span class="keyword">u8g2_uint_t</span> clip_y1 )</span></span></span><br></pre></td></tr></table></figure><ul><li>可以通过 u8g2_SetMaxClipWindow去掉该限制</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetMaxClipWindow</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetClipWindow(&amp;u8g2,<span class="number">10</span>, <span class="number">10</span>, <span class="number">85</span>, <span class="number">30</span>);</span><br><span class="line">u8g2_SetDrawColor(&amp;u8g2,<span class="number">1</span>);</span><br><span class="line">u8g2_DrawStr(&amp;u8g2,<span class="number">3</span>, <span class="number">32</span>, <span class="string">&quot;U8g2&quot;</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/731363022d3b4fd1af6e6b1356bac1e0.png" class="" title="设置采集窗口大小"><h4 id="2-3-14-u8g2-SetDisplayRotation-——-设置显示器的旋转角度"><a href="#2-3-14-u8g2-SetDisplayRotation-——-设置显示器的旋转角度" class="headerlink" title="2.3.14 u8g2_SetDisplayRotation() —— 设置显示器的旋转角度"></a>2.3.14 u8g2_SetDisplayRotation() —— 设置显示器的旋转角度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置显示器的旋转角度</span></span><br><span class="line"><span class="comment"> * @param u8g2_cb 旋转选项</span></span><br><span class="line"><span class="comment"> *        U8G2_R0 不做旋转 水平</span></span><br><span class="line"><span class="comment"> *        U8G2_R1 旋转90度</span></span><br><span class="line"><span class="comment"> *        U8G2_R2 旋转180度</span></span><br><span class="line"><span class="comment"> *        U8G2_R3 旋转270度</span></span><br><span class="line"><span class="comment"> *        U8G2_MIRROR 不做旋转 水平，显示内容是镜像的，暂时不理解</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetDisplayRotation</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">const</span> <span class="keyword">u8g2_cb_t</span> *u8g2_cb)</span></span></span><br></pre></td></tr></table></figure><h4 id="2-3-15-u8g2-SetDrawColor-——-设置绘制颜色（反色）"><a href="#2-3-15-u8g2-SetDrawColor-——-设置绘制颜色（反色）" class="headerlink" title="2.3.15 u8g2_SetDrawColor() —— 设置绘制颜色（反色）"></a>2.3.15 u8g2_SetDrawColor() —— 设置绘制颜色（反色）</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置绘制颜色（暂时还没有具体去了解用法）</span></span><br><span class="line"><span class="comment">  Assign the draw color for all drawing functions.</span></span><br><span class="line"><span class="comment">  color may be 0 or 1. The actual color is defined by the display.</span></span><br><span class="line"><span class="comment">  With color = 1 the drawing function will set the display memory to 1.</span></span><br><span class="line"><span class="comment">  For OLEDs this ususally means, that the pixel is enabled and the LED </span></span><br><span class="line"><span class="comment">  at the pixel is turned on.</span></span><br><span class="line"><span class="comment">  On an LCD it usually means that the LCD segment of the pixel is enabled, </span></span><br><span class="line"><span class="comment">  which absorbs the light.</span></span><br><span class="line"><span class="comment">  For eInk/ePaper it means black ink.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">  7 Jan 2017: Allow color value 2 for XOR operation.</span></span><br><span class="line"><span class="comment">  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetDrawColor</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">uint8_t</span> color)</span></span></span><br></pre></td></tr></table></figure><h4 id="2-3-16-u8g2-SetFont-——-设置字体集"><a href="#2-3-16-u8g2-SetFont-——-设置字体集" class="headerlink" title="2.3.16 u8g2_SetFont() —— 设置字体集"></a>2.3.16 u8g2_SetFont() —— 设置字体集</h4><p>  <strong>这是一个非常重要的方法，非常重要！！！</strong><br>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置字体集（字体集用于字符串绘制方法或者glyph绘制方法）</span></span><br><span class="line"><span class="comment"> * @param font 具体的字体集</span></span><br><span class="line"><span class="comment"> * @Note 关联方法  drawUTF8 drawStr drawGlyph print</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetFont</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">const</span> <span class="keyword">uint8_t</span>  *font)</span></span></span><br></pre></td></tr></table></figure><ul><li>Font会根据像素点高度做了很多区分，具体font请参考 <a href="https://github.com/olikraus/u8g2/wiki/fntlistall">Fntlistall iki</a>。</li><li>如果我们需要用到中文字符，可以在wiki里面搜索一下chinese，你就会发现很多中文font，比如：</li></ul><img src="/posts/4084148530/89ed285ab0284c9abb99513124069533.png" class="" title="字体集"><img src="/posts/4084148530/b5c62b928189461ea513fad74716ca9f.png" class="" title="设置字体集1"><img src="/posts/4084148530/aba9fc370509443db372ef6b7436b857.png" class="" title="设置字体集2"><h4 id="2-3-17-u8g2-SetFontDirection-——-设置字体方向"><a href="#2-3-17-u8g2-SetFontDirection-——-设置字体方向" class="headerlink" title="2.3.17 u8g2_SetFontDirection() —— 设置字体方向"></a>2.3.17 u8g2_SetFontDirection() —— 设置字体方向</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义字符串绘制或者图形绘制的方向</span></span><br><span class="line"><span class="comment"> * @param dir 方向</span></span><br><span class="line"><span class="comment"> * @param 关联方法 drawStr</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetFontDirection</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">uint8_t</span> dir)</span></span></span><br></pre></td></tr></table></figure><ul><li><strong>Description:</strong> The arguments defines the drawing direction of all strings or glyphs.</li></ul><table><thead><tr><th>Argument</th><th>String Rotation</th><th>Description</th></tr></thead><tbody><tr><td>0</td><td>0 degree</td><td>Left to right</td></tr><tr><td>1</td><td>90 degree</td><td>Top to down</td></tr><tr><td>2</td><td>180 degree</td><td>Right to left</td></tr><tr><td>3</td><td>270 degree</td><td>Down to top</td></tr></tbody></table><ul><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetFont(u8g2_font_ncenB14_tf);</span><br><span class="line">u8g2_SetFontDirection(<span class="number">0</span>);</span><br><span class="line">u8g2_DrawStr(<span class="number">15</span>, <span class="number">20</span>, <span class="string">&quot;Abc&quot;</span>);</span><br><span class="line">u8g2_SetFontDirection(<span class="number">1</span>);</span><br><span class="line">u8g2_DrawStr(<span class="number">15</span>, <span class="number">20</span>, <span class="string">&quot;Abc&quot;</span>);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/08609654bd0b43449199b7e04f4d29a6.png" class="" title="设置字体方向"><h3 id="2-4-缓存相关函数（了解了解）"><a href="#2-4-缓存相关函数（了解了解）" class="headerlink" title="2.4 缓存相关函数（了解了解）"></a>2.4 缓存相关函数（了解了解）</h3><h4 id="2-4-1-u8g2-GetBufferPtr-——-获取缓存空间的地址"><a href="#2-4-1-u8g2-GetBufferPtr-——-获取缓存空间的地址" class="headerlink" title="2.4.1 u8g2_GetBufferPtr() —— 获取缓存空间的地址"></a>2.4.1 u8g2_GetBufferPtr() —— 获取缓存空间的地址</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取缓存空间的地址</span></span><br><span class="line"><span class="comment"> * @return 返回缓存空间起始地址</span></span><br><span class="line"><span class="comment"> * @Note 关联方法 getBufferTileHeight, getBufferTileWidth, clearBuffer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_GetBufferPtr</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><h4 id="2-4-2-u8g2-GetBufferTileHeight-——-获取缓冲区的Tile高度"><a href="#2-4-2-u8g2-GetBufferTileHeight-——-获取缓冲区的Tile高度" class="headerlink" title="2.4.2 u8g2_GetBufferTileHeight() —— 获取缓冲区的Tile高度"></a>2.4.2 u8g2_GetBufferTileHeight() —— 获取缓冲区的Tile高度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取缓冲区的Tile高度</span></span><br><span class="line"><span class="comment"> * @return 返回高度值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_GetBufferTileHeight</span><span class="params">()</span> </span></span><br></pre></td></tr></table></figure><h4 id="2-4-3-u8g2-GetBufferTileWidth-——-获取缓冲区的Tile宽度"><a href="#2-4-3-u8g2-GetBufferTileWidth-——-获取缓冲区的Tile宽度" class="headerlink" title="2.4.3 u8g2_GetBufferTileWidth() —— 获取缓冲区的Tile宽度"></a>2.4.3 u8g2_GetBufferTileWidth() —— 获取缓冲区的Tile宽度</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取缓冲区的Tile宽度</span></span><br><span class="line"><span class="comment"> * @return 返回宽度值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_GetBufferTileWidth</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><h4 id="2-4-4-u8g2-GetBufferCurrTileRow-——-获取缓冲区的当前Tile-row"><a href="#2-4-4-u8g2-GetBufferCurrTileRow-——-获取缓冲区的当前Tile-row" class="headerlink" title="2.4.4 u8g2_GetBufferCurrTileRow() —— 获取缓冲区的当前Tile row"></a>2.4.4 u8g2_GetBufferCurrTileRow() —— 获取缓冲区的当前Tile row</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取缓冲区的当前Tile row行数</span></span><br><span class="line"><span class="comment"> * @return 返回当前的tilerow</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_GetBufferCurrTileRow</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><h4 id="2-4-5-u8g2-SetBufferCurrTileRow-——-设置缓冲区的当前Tile-row"><a href="#2-4-5-u8g2-SetBufferCurrTileRow-——-设置缓冲区的当前Tile-row" class="headerlink" title="2.4.5 u8g2_SetBufferCurrTileRow() —— 设置缓冲区的当前Tile row"></a>2.4.5 u8g2_SetBufferCurrTileRow() —— 设置缓冲区的当前Tile row</h4><p>函数说明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置缓冲区的当前Tile row</span></span><br><span class="line"><span class="comment"> * @param 当前的tilerow</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_SetBufferCurrTileRow</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">uint8_t</span> row)</span></span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">u8g2_SetBufferCurrTileRow(&amp;u8g2,<span class="number">0</span>);       <span class="comment">// let y=0 be the topmost row of the buffer</span></span><br><span class="line">u8g2_ClearBuffer(&amp;u8g2);</span><br><span class="line">u8g2_SetFont(&amp;u8g2,u8g2_font_helvB08_tr);</span><br><span class="line">u8g2_DrawStr(&amp;u8g2,<span class="number">2</span>, <span class="number">8</span>, <span class="string">&quot;abcdefg&quot;</span>);</span><br><span class="line"> </span><br><span class="line">u8g2_SetBufferCurrTileRow(&amp;u8g2,<span class="number">2</span>);   <span class="comment">// write the buffer to tile row 2 (y=16) on the display</span></span><br><span class="line">u8g2_SendBuffer(&amp;u8g2);</span><br><span class="line">u8g2_SetBufferCurrTileRow(&amp;u8g2,<span class="number">4</span>);   <span class="comment">// write the same buffer to tile row 4 (y=32) on the display</span></span><br><span class="line">u8g2_SendBuffer(&amp;u8g2);</span><br></pre></td></tr></table></figure><img src="/posts/4084148530/fe840e6183ae4189a53bce879497e94e.png" class="" title="设置缓冲区的当前Tile row"><ul><li>在 <strong>u8g2_FirstPage&#x2F;u8g2_NextPage</strong> 循环时，由于底层调用了**u8g2_SetBufferCurrTileRow(u8g2, row);**，所以尽量不要自己手动调用该方法；</li></ul><h3 id="3-如何运用U8G2库"><a href="#3-如何运用U8G2库" class="headerlink" title="3.如何运用U8G2库"></a>3.如何运用U8G2库</h3><img src="/posts/4084148530/3d24b3a0200048afb0607f990e4dba09.gif" class="" title="如此这般运用"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_51096702/article/details/130257230">玩转u8g2 OLED库，一篇就够——基于SMT32、HAL</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">U8G2的OLED库基础知识</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="U8G2" scheme="https://zml3589110.github.io/categories/U8G2/"/>
    
    <category term="OLED" scheme="https://zml3589110.github.io/categories/OLED/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="U8G2" scheme="https://zml3589110.github.io/tags/U8G2/"/>
    
    <category term="OLED" scheme="https://zml3589110.github.io/tags/OLED/"/>
    
  </entry>
  
  <entry>
    <title>U8G2移植STM32类</title>
    <link href="https://zml3589110.github.io/posts/2286740127.html"/>
    <id>https://zml3589110.github.io/posts/2286740127.html</id>
    <published>2023-12-21T12:53:20.000Z</published>
    <updated>2023-12-22T03:20:51.705Z</updated>
    
    <content type="html"><![CDATA[<h1 id="移植准备（实验使用的是GD32）"><a href="#移植准备（实验使用的是GD32）" class="headerlink" title="移植准备（实验使用的是GD32）"></a>移植准备（实验使用的是GD32）</h1><ol><li>STM32F407VET6模板工程(Keil)</li><li>u8g2源码</li><li>STM32f407vet6开发板+4线IIC驱动的0.96寸oled屏</li></ol><h1 id="U8G2源码下载"><a href="#U8G2源码下载" class="headerlink" title="U8G2源码下载"></a>U8G2源码下载</h1><p><a href="https://gitee.com/penjun71/u8g2">gitee仓库</a><br><a href="https://github.com/olikraus/u8g2">github仓库</a></p><ol><li>git工具克隆仓库：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://gitee.com/penjun71/u8g2.git  <span class="comment">#gitee</span></span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/olikraus/u8g2.git <span class="comment">#github</span></span><br></pre></td></tr></table></figure><ol start="2"><li>通过仓库下载压缩包。<br>文件目录：</li></ol><img src="/posts/2286740127/7bde2616834e4f459cd26d590575c134.png" class="" title="文件目录"><h1 id="U8G2移植"><a href="#U8G2移植" class="headerlink" title="U8G2移植"></a>U8G2移植</h1><h2 id="1、将源码加入模板工程（KEIL）"><a href="#1、将源码加入模板工程（KEIL）" class="headerlink" title="1、将源码加入模板工程（KEIL）"></a>1、将源码加入模板工程（KEIL）</h2><p>（1）将文件夹中csrc文件夹复制至工程中，改名为u8g2</p><img src="/posts/2286740127/c5ec7169cdf34912b586df5f7d736f36.png" class="" title="源码复制"><p>（2）剔除多余驱动文件：<code>u8x8_d_xxxx.c</code> 仅保留 <code>u8x8_d_ssd1306_128x64_noname.c</code></p><img src="/posts/2286740127/083345891f504839bba1a72e55cc90eb.png" class="" title="保留对应驱动文件"><p>（3）创建 <code>Group</code> <code>u8g2</code>，并将剔除后文件夹中C文件全部加入此组中</p><img src="/posts/2286740127/a79fec9bc3d04353b3cd951e80ab6523.png" class="" title="在这里插入图片描述"><p>（4）将u8g2文件夹加入头文件搜索路径</p><img src="/posts/2286740127/c45cf6140f4a4bc7abc39748997ab879.png" class="" title="加入头文件搜索路径"><p>（5）勾选Keil-option C99 支持（由于库中包含有未在函数开始定义的所以需要打开C99支持，如果不打开，编译后对应的错误点可以自行修改为函数开头定义变量。）<strong>（注意：这个很重要-其他文章没说明，一直报错，到这里才发现讲得详细些！）</strong></p><img src="/posts/2286740127/0a46599adb2c471ebae6306cb31e8b74.png" class="" title="勾选C99 mode"><h2 id="2、编写驱动接口"><a href="#2、编写驱动接口" class="headerlink" title="2、编写驱动接口"></a>2、编写驱动接口</h2><p><strong>补充：可以使用后边提供的方法（快捷键 ctrl+A 全选以后，直接把全部文件注释了），先全部注释，然后取消注释头文件，并且找到你屏幕驱动对应的那个函数取消注释！</strong></p><p>（1）修改<code>u8g2_d_setup.c</code>仅仅保留函数（对应自己驱动以及ram空间保留自己对应的启动函数）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_Setup_ssd1306_i2c_128x64_noname_f</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">const</span> <span class="keyword">u8g2_cb_t</span> *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)</span></span></span><br></pre></td></tr></table></figure><img src="/posts/2286740127/0fe9c8632542420cb6ee4b41bd239e38.png" class="" title="u8g2_d_setup"><p>（2）修改<code>u8g2_d_memery.c</code>仅保留</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint8_t</span> *<span class="title">u8g2_m_16_8_f</span><span class="params">(<span class="keyword">uint8_t</span> *page_cnt)</span></span></span><br></pre></td></tr></table></figure><img src="/posts/2286740127/eed66ef6e04c49f1ab20da1dc7ffafe6.png" class="" title="u8g2_d_memery.c"><p>（3）编写启动所需的回调函数（即<code>u8g2_d_setup.c</code>中保留的函数的最后一个参数）并调用启动函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_Setup_ssd1306_i2c_128x64_noname_f</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            <span class="keyword">const</span> <span class="keyword">u8g2_cb_t</span> *rotation, </span></span></span><br><span class="line"><span class="function"><span class="params">                                            u8x8_msg_cb byte_cb,</span></span></span><br><span class="line"><span class="function"><span class="params">                                            u8x8_msg_cb gpio_and_delay_cb)</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p><code>u8g2_t *u8g2</code>:u8g2 句柄结构体指针.</p><p><code>const u8g2_cb_t *rotation</code>：定义屏幕方向.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//u8g2_cb_t *rotation可选参数↓</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> U8G2_R0(&amp;u8g2_cb_r0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> U8G2_R1(&amp;u8g2_cb_r1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> U8G2_R2(&amp;u8g2_cb_r2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> U8G2_R3(&amp;u8g2_cb_r3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> U8G2_MIRROR(&amp;u8g2_cb_mirror)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> U8G2_MIRROR_VERTICAL(&amp;u8g2_cb_mirror_vertical)</span></span><br></pre></td></tr></table></figure><p><code>u8x8_msg_cb byte_cb</code>:确定读写接口.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//可选函数位于u8g2_byte.c</span></span><br></pre></td></tr></table></figure><p><code>u8x8_msg_cb gpio_and_delay_cb</code>:对接IO初始化、IO读写、延时函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//u8x8_msg_cb 是一个函数指针编写此函数的状态：</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_gpio_and_delay_stm32_soft_iic</span><span class="params">(U8X8_UNUSED <span class="keyword">u8x8_t</span> *u8x8, U8X8_UNUSED <span class="keyword">uint8_t</span> msg, U8X8_UNUSED <span class="keyword">uint8_t</span> arg_int, U8X8_UNUSED <span class="keyword">void</span> *arg_ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(msg)&#123;</span><br><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_AND_DELAY_INIT:        <span class="comment">//此状态下初始化IO以及延时函数</span></span><br><span class="line"><span class="comment">//本人用HAL库进行配置未使用到这里配置io与延时</span></span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_DELAY_MILLI:                <span class="comment">//此状态下对接ms延时函数，延时arg_int ms</span></span><br><span class="line">bsp_delay_ms(arg_int);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_DELAY_10MICRO:              <span class="comment">//此状态下对接10usus延时函数</span></span><br><span class="line">bsp_delay_us(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_DELAY_100NANO:              <span class="comment">//此状态下对接100ns延时函数</span></span><br><span class="line">    __NOP();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_DELAY_I2C:                  <span class="comment">//此状态下对接IIC延时函数</span></span><br><span class="line"> bsp_delay_us(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_I2C_DATA:              <span class="comment">//此状态下修改IIC SDA信号线电平</span></span><br><span class="line">        <span class="keyword">if</span> (arg_int) HAL_GPIO_WritePin(LCD_SDA_GPIO_Port, LCD_SDA_Pin, GPIO_PIN_SET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(LCD_SDA_GPIO_Port, LCD_SDA_Pin, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_I2C_CLOCK:             <span class="comment">//此状态下修改IIC SCL信号线电平</span></span><br><span class="line"><span class="keyword">if</span> (arg_int) HAL_GPIO_WritePin(LCD_SCL_GPIO_Port, LCD_SCL_Pin, GPIO_PIN_SET);</span><br><span class="line"><span class="keyword">else</span> HAL_GPIO_WritePin(LCD_SCL_GPIO_Port, LCD_SCL_Pin, GPIO_PIN_RESET);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        u8x8_SetGPIOResult(u8x8, <span class="number">1</span>); <span class="comment">// default return value</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// command processed successfully.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充：这里主要是设置IIC脚位的高低电平跟他有点不同，以下是使用于自己的脚位模式-zmlong</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IIC_SCL </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCL_GPIOClock    RCC_APB2Periph_GPIOB</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCL_GPIO         GPIOB</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SCL_GPIO_Pin     GPIO_Pin_4</span></span><br><span class="line"><span class="comment">//IIC_SDA </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDA_GPIOClock    RCC_APB2Periph_GPIOB</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDA_GPIO         GPIOB</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDA_GPIO_Pin     GPIO_Pin_5</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">        <span class="keyword">if</span> (arg_int) GPIO_SetBits(SDA_GPIO,SDA_GPIO_Pin);</span><br><span class="line"><span class="keyword">else</span> GPIO_ResetBits(SDA_GPIO,SDA_GPIO_Pin);</span><br><span class="line">            </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_I2C_CLOCK:             <span class="comment">//此状态下修改IIC SCL信号线电平</span></span><br><span class="line"><span class="comment">// if (arg_int) HAL_GPIO_WritePin(LCD_SCL_GPIO_Port, LCD_SCL_Pin, GPIO_PIN_SET);</span></span><br><span class="line"><span class="comment">// else HAL_GPIO_WritePin(LCD_SCL_GPIO_Port, LCD_SCL_Pin, GPIO_PIN_RESET);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (arg_int) GPIO_SetBits(SCL_GPIO,SCL_GPIO_Pin);</span><br><span class="line"><span class="keyword">else</span> GPIO_ResetBits(SCL_GPIO,SCL_GPIO_Pin);</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="3、u8g2初始化"><a href="#3、u8g2初始化" class="headerlink" title="3、u8g2初始化"></a>3、u8g2初始化</h2><p>完成后调用函数进行启动：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">u8g2_t</span> u8g2;</span><br><span class="line"><span class="comment">//初始化u8g2</span></span><br><span class="line">u8g2_Setup_ssd1306_i2c_128x64_noname_f(&amp;u8g2, U8G2_R0, u8x8_byte_sw_i2c, u8g2_gpio_and_delay_stm32_soft_iic);</span><br><span class="line"><span class="comment">//屏幕初始化</span></span><br><span class="line">u8g2_InitDisplay(&amp;u8g2);</span><br><span class="line"><span class="comment">//开启电源</span></span><br><span class="line">u8g2_SetPowerSave(&amp;u8g2, <span class="number">0</span>);</span><br><span class="line"><span class="comment">//清除显存内容</span></span><br><span class="line">u8g2_ClearBuffer(&amp;u8g2);</span><br></pre></td></tr></table></figure><h2 id="4、编写测试程序-和-结果展示"><a href="#4、编写测试程序-和-结果展示" class="headerlink" title="4、编写测试程序 和 结果展示"></a>4、编写测试程序 和 结果展示</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">64</span>,<span class="number">32</span>,<span class="number">10</span>,U8G2_DRAW_ALL);  <span class="comment">//在62，32位置画一个半径为10的圆</span></span><br><span class="line">u8g2_SendBuffer(&amp;u8g2);<span class="comment">//发送显存到屏幕上</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/posts/2286740127/e63bd80d02d7474cad093ca2dc2d96af.jpeg" class="" title="在这里插入图片描述"><ol><li>测试2<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">LED=~LED;</span><br><span class="line"><span class="comment">// delay_ms(100);</span></span><br><span class="line">       <span class="comment">// u8g2_DrawCircle(&amp;u8g2,64,32,10,U8G2_DRAW_ALL);  //在62，32位置画一个半径为10的圆</span></span><br><span class="line">       <span class="comment">// u8g2_SendBuffer(&amp;u8g2);//发送显存到屏幕上</span></span><br><span class="line">       delay_ms(<span class="number">500</span>);</span><br><span class="line">       <span class="comment">// u8g2_ClearBuffer(&amp;u8g2); </span></span><br><span class="line"></span><br><span class="line">u8g2_ClearBuffer(&amp;u8g2); </span><br><span class="line"><span class="keyword">if</span>(++t &gt;= <span class="number">32</span>) t = <span class="number">1</span>;</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">64</span>,<span class="number">32</span>,t,U8G2_DRAW_ALL);</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">32</span>,<span class="number">32</span>,t,U8G2_DRAW_ALL);</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">96</span>,<span class="number">32</span>,t,U8G2_DRAW_ALL);</span><br><span class="line">u8g2_SendBuffer(&amp;u8g2);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/2286740127/6765a75a8f2349cbbaa65f64facb7b8f.jpg" class="" title="在这里插入图片描述"><h1 id="以下为其他移植补充参考"><a href="#以下为其他移植补充参考" class="headerlink" title="以下为其他移植补充参考"></a>以下为其他移植补充参考</h1><p>上面的方法其实已经很完美契合模拟IIC驱动OLED实现U8G2图形库驱动显示啦，后边是收集补充部分，大部分使用的是SPI方式，效果应该好一些，以后有时间可以研究硬件IIC跟DMA方式。</p><h1 id="一、stm32移植U8G2图像库指南"><a href="#一、stm32移植U8G2图像库指南" class="headerlink" title="一、stm32移植U8G2图像库指南"></a>一、stm32移植U8G2图像库指南</h1><p>U8g2：用于单色显示的库，版本 2</p><p>U8g2 是一个用于嵌入式设备的单色图形库。U8g2支持单色OLED和LCD，包括以下控制器：SSD1305, SSD1306, SSD1309, SSD1316, SSD1320, SSD1322, SSD1325, SSD1327, SSD1329, SSD1606, SSD1607,895, SH11607,84D1607,SH11607,84D1607,94D1607,94D1607,84D1607,4D1607,4D1607,4D1607,84D1807 ，PCF8812，HX1230，UC1601，UC1604，UC1608，UC1610，UC1611，UC1617，UC1638，UC1701，ST7511，ST7528，ST7565，ST7567，ST7571，ST7586，ST7588，ST75256，ST75320，NT7534，ST7920，IST3020，IST7920，LD7032，KS0108 、KS0713、HD44102、T7932、SED1520、SBN1661、IL3820、MAX7219（完整列表见此处）。</p><p>Arduino 库 U8g2 可以从 Arduino IDE 的库管理器安装。U8g2 还包括 U8x8 库：</p><ol><li>U8g2：</li></ol><ul><li>包括所有图形程序（线&#x2F;框&#x2F;圆绘制）。</li><li>支持多种字体。（几乎）对字体高度没有限制。</li><li>需要微控制器中的一些内存来呈现显示。</li></ul><ol start="2"><li>U8x8：</li></ol><ul><li>仅文本输出（字符）设备。</li><li>仅允许适合 8x8 像素网格的字体。</li><li>直接写入显示器。微控制器中不需要缓冲器。</li></ul><h2 id="移植准备工作"><a href="#移植准备工作" class="headerlink" title="移植准备工作"></a>移植准备工作</h2><p>移植U8G2图像库需要准备好，U8G2的源码<br>U8g2下载地址: <a href="https://github.com/olikraus/u8g2">https://github.com/olikraus/u8g2</a><br>准备一份KEIL工程，我这里使用了一份我自己写的时间片轮询程序（唯一的要求，带屏幕的初始化就行）</p><img src="/posts/2286740127/c1f6a4de64e14f3d87be7d1d06dc41d8.png" class="" title="在这里插入图片描述"><h2 id="开始移植文件"><a href="#开始移植文件" class="headerlink" title="开始移植文件"></a>开始移植文件</h2><p>U8G2源码中，这个csrc是c语言版的源码，直接把他复制到keil的工程里。</p><img src="/posts/2286740127/32a47383e3e447a19ddc75920b7168a2.png" class="" title="在这里插入图片描述"><p>我将csrc文件复制到keil工程中的，HARDWARE文件夹内，改名为OLED_U8G2。（名字和位置，可以根据实际情况更改）</p><img src="/posts/2286740127/3ade7ad1b3c746acaf26441bf6dbbc56.png" class="" title="在这里插入图片描述"><h2 id="修改keil配置"><a href="#修改keil配置" class="headerlink" title="修改keil配置"></a>修改keil配置</h2><p>添加一个分组，把U8G2的文件全部添加进去（注：可以先在外面整理好后再添加好一些）</p><img src="/posts/2286740127/01a45ac5019940048e3d13654cb45052.png" class="" title="在这里插入图片描述"><p>但是，里面有好多u8g2_d_xxx.c格式的文件，里面有三个文件的必要的。其中一个需要根据你OLED屏幕的驱动芯片和像素（如这里选择的文件，就是ssd1306，这个驱动芯片。128*64的像素）</p><img src="/posts/2286740127/27c06eb0e2c54413992d2d9f99d3cdad.png" class="" title="在这里插入图片描述"><p>还有这两个文件也是必要的，除了这三个文件以后的u8g2_d_xxx的文件全部删除。</p><img src="/posts/2286740127/eef4c3082efb4597b1ff7296f2890fd3.png" class="" title="在这里插入图片描述"><p>这四个文件也删除了</p><img src="/posts/2286740127/ca49edc1b41b4eae846f40c25d1e0512.png" class="" title="在这里插入图片描述"><p>然后，添加一下环境配置中的c&#x2F;c++，让keil可以找到这些文件。</p><h2 id="修改U8G2源码"><a href="#修改U8G2源码" class="headerlink" title="修改U8G2源码"></a>修改U8G2源码</h2><p>重点就是修改，u8g2_d_memory.c 与 u8g2_d_setup.c 这两个文件</p><p><strong>u8g2_d_setup.c修改</strong></p><p>快捷键 ctrl+A 全选以后，直接把全部文件注释了</p><img src="/posts/2286740127/b9167a4a0c304eca832a851f821851a9.png" class="" title="在这里插入图片描述"><p>然后，取消注释头文件，并且找到你屏幕驱动对应的那个函数取消注释</p><img src="/posts/2286740127/a2cea0c5836240f6944870a29a29c441.png" class="" title="在这里插入图片描述"><p>这里找到了，跟我ssd1306 128*64对应的函数，取消注释。最后一个英文字母f代表的是内存。就是一次传输多少字节的数据。f为1024个字节，2为256个字节，1为128个字节。这个主要是根据单片机的性能来选择的。比如是stmf103c8t6这种小容量的芯片，就选择后缀为1的函数。<br><strong>u8g2_d_memory.c修改</strong></p><p>同样的操作，ctrl+A把全部文件注释了以后，取消对头文件的注释。</p><img src="/posts/2286740127/ca40c0ef1a1d499e821d4ebf58f81f9e.png" class="" title="在这里插入图片描述"><p>然后，在u8g2_d_memory.c文件中，查找下图红框框里的函数，把对应的函数，取消注释。</p><img src="/posts/2286740127/54d216cebcf3457a974c859562f1f46a.png" class="" title="在这里插入图片描述"><p>取消注释</p><img src="/posts/2286740127/aba2059d692d4203b64944fd03355463.png" class="" title="在这里插入图片描述"><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>上面的所有操作，需要根据屏幕的驱动芯片</li><li>f 代表的是一次刷新屏幕的字节数（根据芯片选择 f 、 2 、1）</li></ul><h2 id="U8G2接口程序"><a href="#U8G2接口程序" class="headerlink" title="U8G2接口程序"></a>U8G2接口程序</h2><p>u8g2_Setup_ssd1306_128x64_noname_f就是刚刚选择的屏幕驱动函数。<br>下面两句就是开打屏幕的显示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u8g2_Setup_ssd1306_128x64_noname_f(&amp;u8g2, U8G2_R0, u8x8_byte_4wire_sw_spi, u8x8_stm32_gpio_and_delay);  </span><br><span class="line">u8g2_InitDisplay(&amp;u8g2);</span><br><span class="line">u8g2_SetPowerSave(&amp;u8g2,<span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重点是u8x8_stm32_gpio_and_delay这个函数，这个回调函数，需要由我们使用者来写。他主要就是给U8G2提供的延时函数和通信接口。<br>这里使用的是4线的spi通信</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_stm32_gpio_and_delay</span><span class="params">(U8X8_UNUSED <span class="keyword">u8x8_t</span> *u8x8,</span></span></span><br><span class="line"><span class="function"><span class="params">    U8X8_UNUSED <span class="keyword">uint8_t</span> msg, U8X8_UNUSED <span class="keyword">uint8_t</span> arg_int,</span></span></span><br><span class="line"><span class="function"><span class="params">    U8X8_UNUSED <span class="keyword">void</span> *arg_ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">switch</span>(msg)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_DELAY_100NANO:<span class="comment">// delay arg_int * 100 nano seconds</span></span><br><span class="line">__NOP();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_DELAY_10MICRO:<span class="comment">// delay arg_int * 10 micro seconds</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">uint16_t</span> n = <span class="number">0</span>; n &lt; <span class="number">320</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line">__NOP();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_DELAY_MILLI:                <span class="comment">// delay arg_int * 1 milli second</span></span><br><span class="line">delay_ms(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_DELAY_I2C:            <span class="comment">// arg_int is the I2C speed in 100KHz, e.g. 4 = 400 KHz</span></span><br><span class="line">delay_us(<span class="number">5</span>);</span><br><span class="line"><span class="keyword">break</span>;                <span class="comment">// arg_int=1: delay by 5us, arg_int = 4: delay by 1.25us</span></span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_SPI_DATA:</span><br><span class="line">  <span class="keyword">if</span>(arg_int == <span class="number">1</span>)                                     <span class="comment">// arg_int=1: Input dir with pullup high for I2C clock pin</span></span><br><span class="line">        GPIO_SetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arg_int == <span class="number">0</span>)</span><br><span class="line">        GPIO_ResetBits(GPIOA,GPIO_Pin_1);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_SPI_CLOCK:</span><br><span class="line">  <span class="keyword">if</span>(arg_int == <span class="number">1</span>)                                     <span class="comment">// arg_int=1: Input dir with pullup high for I2C clock pin</span></span><br><span class="line">        GPIO_SetBits(GPIOA,GPIO_Pin_0);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arg_int == <span class="number">0</span>)</span><br><span class="line">        GPIO_ResetBits(GPIOA,GPIO_Pin_0);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_CS:</span><br><span class="line">  <span class="keyword">if</span>(arg_int == <span class="number">1</span>)                                     <span class="comment">// arg_int=1: Input dir with pullup high for I2C clock pin</span></span><br><span class="line">        GPIO_SetBits(GPIOA,GPIO_Pin_4);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arg_int == <span class="number">0</span>)</span><br><span class="line">        GPIO_ResetBits(GPIOA,GPIO_Pin_4);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_DC:</span><br><span class="line">  <span class="keyword">if</span>(arg_int == <span class="number">1</span>)                                     <span class="comment">// arg_int=1: Input dir with pullup high for I2C clock pin</span></span><br><span class="line">        GPIO_SetBits(GPIOA,GPIO_Pin_3);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arg_int == <span class="number">0</span>)</span><br><span class="line">        GPIO_ResetBits(GPIOA,GPIO_Pin_3);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> U8X8_MSG_GPIO_RESET:</span><br><span class="line">  <span class="keyword">if</span>(arg_int == <span class="number">1</span>)                                     <span class="comment">// arg_int=1: Input dir with pullup high for I2C clock pin</span></span><br><span class="line">        GPIO_SetBits(GPIOA,GPIO_Pin_2);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arg_int == <span class="number">0</span>)</span><br><span class="line">        GPIO_ResetBits(GPIOA,GPIO_Pin_2);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_SELECT:</span><br><span class="line">        u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu select pin state */</span> <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_NEXT:</span><br><span class="line">        u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu next pin state */</span> <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_PREV:</span><br><span class="line">        u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu prev pin state */</span> <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_HOME:</span><br><span class="line">        u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu home pin state */</span> <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        u8x8_SetGPIOResult(u8x8, <span class="number">1</span>);         <span class="comment">// default return value</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">u8g2_t</span> u8g2; </span><br><span class="line">delay_init(<span class="number">168</span>);</span><br><span class="line">LED_Init();<span class="comment">//初始化LED</span></span><br><span class="line">OLED_Init();<span class="comment">//初始化OLED</span></span><br><span class="line">LED0=<span class="number">0</span>;</span><br><span class="line">u8g2_Setup_ssd1306_128x64_noname_f(&amp;u8g2, U8G2_R0, u8x8_byte_4wire_sw_spi, u8x8_stm32_gpio_and_delay);  </span><br><span class="line">u8g2_InitDisplay(&amp;u8g2);</span><br><span class="line">u8g2_SetPowerSave(&amp;u8g2,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">LED0=~LED0;</span><br><span class="line">delay_ms(<span class="number">100</span>);</span><br><span class="line">u8g2_ClearBuffer(&amp;u8g2); </span><br><span class="line"><span class="keyword">if</span>(++t &gt;= <span class="number">32</span>) t = <span class="number">1</span>;</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">64</span>,<span class="number">32</span>,t,U8G2_DRAW_ALL);</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">32</span>,<span class="number">32</span>,t,U8G2_DRAW_ALL);</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">96</span>,<span class="number">32</span>,t,U8G2_DRAW_ALL);</span><br><span class="line">u8g2_SendBuffer(&amp;u8g2);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/6765a75a8f2349cbbaa65f64facb7b8f.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5rKI5rqq5rqq,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="硬件IIC"><a href="#硬件IIC" class="headerlink" title="硬件IIC"></a>硬件IIC</h1><p>前面的准备工作一致</p><p>硬件 I2C 效率上比软件 I2C 快了非常多，因此特别适合 U8g2 这种大型 UI 框架。下面基于标准库介绍硬件 I2C 的移植方式。</p><p>如果使用硬件 I2C ，需要在调用该函数（或类似函数）时，使用自己的硬件读写函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">u8g2_Setup_ssd1306_i2c_128x64_noname_f</span><span class="params">(<span class="keyword">u8g2_t</span> *u8g2, <span class="keyword">const</span> <span class="keyword">u8g2_cb_t</span> *rotation, u8x8_msg_cb byte_cb, u8x8_msg_cb gpio_and_delay_cb)</span></span>;</span><br></pre></td></tr></table></figure><p>首先还是需要编写一个 <code>gpio_and_delay()</code> 回调函数。不过由于这里是使用硬件 I2C ，因此不再需要提供 GPIO 和时序操作的支持，只需要提供一个毫秒级的延时即可：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_gpio_and_delay_hw</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (msg) &#123;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_100NANO: <span class="comment">// delay arg_int * 100 nano seconds</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_10MICRO: <span class="comment">// delay arg_int * 10 micro seconds</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_MILLI: <span class="comment">// delay arg_int * 1 milli second</span></span><br><span class="line">            Delay_ms(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_DELAY_I2C: <span class="comment">// arg_int is the I2C speed in 100KHz, e.g. 4 = 400 KHz</span></span><br><span class="line">            <span class="keyword">break</span>;                    <span class="comment">// arg_int=1: delay by 5us, arg_int = 4: delay by 1.25us</span></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_I2C_CLOCK: <span class="comment">// arg_int=0: Output low at I2C clock pin</span></span><br><span class="line">            <span class="keyword">break</span>;                    <span class="comment">// arg_int=1: Input dir with pullup high for I2C clock pin</span></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_I2C_DATA:  <span class="comment">// arg_int=0: Output low at I2C data pin</span></span><br><span class="line">            <span class="keyword">break</span>;                    <span class="comment">// arg_int=1: Input dir with pullup high for I2C data pin</span></span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_SELECT:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu select pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_NEXT:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu next pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_PREV:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu prev pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_GPIO_MENU_HOME:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="comment">/* get menu home pin state */</span> <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            u8x8_SetGPIOResult(u8x8, <span class="number">1</span>); <span class="comment">// default return value</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是使用硬件 I2C ，那么需要自行编写硬件驱动函数，向 OLED 写入字节。这个函数的编写可以参考官方提供的软件驱动函数 <code>u8x8_byte_sw_i2c()</code> ，一个编写示例为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_byte_hw_i2c</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span>* data = (<span class="keyword">uint8_t</span>*) arg_ptr;</span><br><span class="line">    <span class="keyword">switch</span>(msg) &#123;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_SEND:</span><br><span class="line">            <span class="keyword">while</span>( arg_int-- &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">                I2C_SendData(I2C1, *data++);</span><br><span class="line">                <span class="keyword">while</span> (!I2C_CheckEvent(I2C1, I2C_EVENT_MASTER_BYTE_TRANSMITTED))</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_INIT:</span><br><span class="line">        <span class="comment">/* add your custom code to init i2c subsystem */</span></span><br><span class="line">            RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2C1, ENABLE);</span><br><span class="line">            I2C_InitTypeDef I2C_InitStructure = &#123;</span><br><span class="line">                .I2C_Mode = I2C_Mode_I2C,</span><br><span class="line">                .I2C_DutyCycle = I2C_DutyCycle_2,</span><br><span class="line">                .I2C_OwnAddress1 = <span class="number">0x10</span>,</span><br><span class="line">                .I2C_Ack = I2C_Ack_Enable,</span><br><span class="line">                .I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit,</span><br><span class="line">                .I2C_ClockSpeed = <span class="number">400000</span></span><br><span class="line">            &#125;;</span><br><span class="line">            I2C_Init(I2C1, &amp;I2C_InitStructure);</span><br><span class="line">            I2C_Cmd(I2C1, ENABLE);  </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_SET_DC:</span><br><span class="line">        <span class="comment">/* ignored for i2c */</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_START_TRANSFER:</span><br><span class="line">            <span class="keyword">while</span>(I2C_GetFlagStatus(I2C1, I2C_FLAG_BUSY));</span><br><span class="line">            I2C_GenerateSTART(I2C1, ENABLE);</span><br><span class="line">            <span class="keyword">while</span>(!I2C_CheckEvent(I2C1, I2C_EVENT_MASTER_MODE_SELECT))</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            I2C_Send7bitAddress(I2C1, <span class="number">0x78</span>, I2C_Direction_Transmitter);</span><br><span class="line">            <span class="keyword">while</span>(!I2C_CheckEvent(I2C1, I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED))</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> U8X8_MSG_BYTE_END_TRANSFER:</span><br><span class="line">            I2C_GenerateSTOP(I2C1, ENABLE);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从各个 <code>case</code> 标签可以很明白地看出一个 I2C 的读写过程：<code>U8X8_MSG_BYTE_INIT</code> 标签下需要初始化 I2C 外设，<code>U8X8_MSG_BYTE_START_TRANSFER</code> 标签产生起始信号并发出目标地址，<code>U8X8_MSG_BYTE_SEND</code> 标签开始发送字节，并且发送的字节存储在 <code>*arg_ptr</code> 参数中，<code>arg_int</code> 是字节的总长度（ U8g2 库似乎一次不会传输多余 32 字节的信息）。最后，<code>U8X8_MSG_BYTE_END_TRANSFER</code> 标签处产生停止信号。</p><ul><li><strong>注意在使用硬件 I2C 时，GPIO 需要设置为复用开漏输出模式 <code>GPIO_Mode_AF_OD</code> 。</strong></li></ul><p>最后一步，用以上编写的硬件函数初始化 U8g2 驱动：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u8g2_Setup_ssd1306_i2c_128x64_noname_f(u8g2, U8G2_R0, u8x8_byte_hw_i2c, u8x8_gpio_and_delay_hw);</span><br></pre></td></tr></table></figure><h2 id="u8x8-byte-xxxx-xxxx-xxxx函数的编写方法"><a href="#u8x8-byte-xxxx-xxxx-xxxx函数的编写方法" class="headerlink" title="u8x8_byte_xxxx_xxxx_xxxx函数的编写方法"></a>u8x8_byte_xxxx_xxxx_xxxx函数的编写方法</h2><p>这个回调函数就是你要用的通信协议啦，如果你想用模拟IIC或者模拟SPI的话，其实官方是有写好给你直接用的，官方是这么说的：</p><img src="/posts/2286740127/fa66909509e54d8c8cc710547e8e80e6.png" class="" title="img"><p>就是说，如果想用软件模拟时序的话，官方已经把模拟时序的相关函数写好了，这些函数里面相关的引脚电平设置函数和延时函数用的就是我们在第八步里面告诉它的。可以直接用上面表格第一列的几个函数作为你的回调函数，这样就不用再写了，因而用软件模拟的话可以跳到下一步也行。</p><p>不过本篇主要是介绍硬件IIC的方式啦，那么就需要我们自己来写这个回调函数。这个回调函数是这种形式的：typedef uint8_t (*u8x8_msg_cb)(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)。一样的，函数名字可以随意，但输入参数没错就好了。官方给出了硬件SPI和硬件IIC的模板，分别如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_byte_arduino_hw_spi</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">uint8_t</span> *data;</span><br><span class="line">  <span class="keyword">uint8_t</span> internal_spi_mode; </span><br><span class="line">  <span class="keyword">switch</span>(msg) &#123;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_SEND:</span><br><span class="line">      data = (<span class="keyword">uint8_t</span> *)arg_ptr;</span><br><span class="line">      <span class="keyword">while</span>( arg_int &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        SPI.transfer((<span class="keyword">uint8_t</span>)*data);</span><br><span class="line">        data++;</span><br><span class="line">        arg_int--;</span><br><span class="line">      &#125;  </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_INIT:</span><br><span class="line">      u8x8_gpio_SetCS(u8x8, u8x8-&gt;display_info-&gt;chip_disable_level);</span><br><span class="line">      SPI.begin();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_SET_DC:</span><br><span class="line">      u8x8_gpio_SetDC(u8x8, arg_int);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_START_TRANSFER:</span><br><span class="line">      <span class="comment">/* SPI mode has to be mapped to the mode of the current controller, at least Uno, Due, 101 have different SPI_MODEx values */</span></span><br><span class="line">      internal_spi_mode =  <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">switch</span>(u8x8-&gt;display_info-&gt;spi_mode) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>: internal_spi_mode = SPI_MODE0; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>: internal_spi_mode = SPI_MODE1; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>: internal_spi_mode = SPI_MODE2; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>: internal_spi_mode = SPI_MODE3; <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      SPI.beginTransaction(SPISettings(u8x8-&gt;display_info-&gt;sck_clock_hz, MSBFIRST, internal_spi_mode));</span><br><span class="line">      u8x8_gpio_SetCS(u8x8, u8x8-&gt;display_info-&gt;chip_enable_level);  </span><br><span class="line">      u8x8-&gt;gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8-&gt;display_info-&gt;post_chip_enable_wait_ns, <span class="literal">NULL</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_END_TRANSFER:      </span><br><span class="line">      u8x8-&gt;gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, u8x8-&gt;display_info-&gt;pre_chip_disable_wait_ns, <span class="literal">NULL</span>);</span><br><span class="line">      u8x8_gpio_SetCS(u8x8, u8x8-&gt;display_info-&gt;chip_disable_level);</span><br><span class="line">      SPI.endTransaction();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_byte_i2c</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint8_t</span> buffer[<span class="number">32</span>];<span class="comment">/* u8g2/u8x8 will never send more than 32 bytes between START_TRANSFER and END_TRANSFER */</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint8_t</span> buf_idx;</span><br><span class="line">  <span class="keyword">uint8_t</span> *data;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">switch</span>(msg)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_SEND:</span><br><span class="line">      data = (<span class="keyword">uint8_t</span> *)arg_ptr;      </span><br><span class="line">      <span class="keyword">while</span>( arg_int &gt; <span class="number">0</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        buffer[buf_idx++] = *data;</span><br><span class="line">        data++;</span><br><span class="line">        arg_int--;</span><br><span class="line">      &#125;      </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_INIT:</span><br><span class="line">      <span class="comment">/* add your custom code to init i2c subsystem */</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_SET_DC:</span><br><span class="line">      <span class="comment">/* ignored for i2c */</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_START_TRANSFER:</span><br><span class="line">      buf_idx = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_END_TRANSFER:</span><br><span class="line">      i2c_transfer(u8x8_GetI2CAddress(u8x8) &gt;&gt; <span class="number">1</span>, buf_idx, buffer);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就照猫画虎，跟着硬件IIC的模板稍微改一下就好了。主要是两个地方：</p><ul><li>一个是IIC初始化，我们的HAL库自动生成了初始化代码并且在主函数调用了，这里我们不填也行</li><li>另外一个是那个i2c_transfer()函数要换成HAL库的。HAL库的IIC写函数有两个，一个是HAL_I2C_Master_Transmit()，另外一个是HAL_I2C_Mem_Write()，后者一般用于器件中还有内存或者寄存器地址的情况，比如EEPROM等。所以我们用前者。</li><li>还有一个需要注意的事情，大坑，就是u8x8_GetI2CAddress(u8x8)这里返回来的是已经右移了的器件地址，0.96寸oled一般是0x78，然后HAL库里面的也是要我们填右移了的器件地址，所以不要像模板那样再往左移动一位了（可能别的啥库函数需要左移后的原始地址吧，为啥不统一呢，太坑了！！！）<br>  over，综上，我们的代码如下：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_byte_hw_i2c</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint8_t</span> buffer[<span class="number">32</span>];<span class="comment">/* u8g2/u8x8 will never send more than 32 bytes between START_TRANSFER and END_TRANSFER */</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">uint8_t</span> buf_idx;</span><br><span class="line">  <span class="keyword">uint8_t</span> *data;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">switch</span>(msg)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_SEND:</span><br><span class="line">      data = (<span class="keyword">uint8_t</span> *)arg_ptr;      </span><br><span class="line">      <span class="keyword">while</span>( arg_int &gt; <span class="number">0</span> )&#123;</span><br><span class="line">buffer[buf_idx++] = *data;</span><br><span class="line">data++;</span><br><span class="line">arg_int--;</span><br><span class="line">&#125;      </span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_INIT:</span><br><span class="line">      <span class="comment">/* add your custom code to init i2c subsystem */</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_START_TRANSFER:</span><br><span class="line">      buf_idx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> U8X8_MSG_BYTE_END_TRANSFER:</span><br><span class="line">      HAL_I2C_Master_Transmit(&amp;hi2c1,u8x8_GetI2CAddress(u8x8), buffer, buf_idx,<span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>调用第四步剩下的u8g2_Setup_ssd1306_i2c_128x64_noname_f()这个函数来初始化，第一个参数是一个空的结构体地址，第二个参数表示是否旋转，第四个参数是我们写的gpio的那个回调函数名字，第三个参数是我们写的另外一个回调函数名或者我截图表格里那几个模拟时序的函数名。<br><em><strong>*代码如下：*</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;u8g2.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8x8_byte_hw_i2c</span><span class="params">(<span class="keyword">u8x8_t</span> *u8x8, <span class="keyword">uint8_t</span> msg, <span class="keyword">uint8_t</span> arg_int, <span class="keyword">void</span> *arg_ptr)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">u8g2_gpio_and_delay_stm32</span><span class="params">(U8X8_UNUSED <span class="keyword">u8x8_t</span> *u8x8, U8X8_UNUSED <span class="keyword">uint8_t</span> msg, U8X8_UNUSED <span class="keyword">uint8_t</span> arg_int, U8X8_UNUSED <span class="keyword">void</span> *arg_ptr)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">u8g2_t</span> u8g2;</span><br><span class="line"> </span><br><span class="line">u8g2_Setup_ssd1306_i2c_128x64_noname_f(&amp;u8g2,U8G2_R0,u8x8_byte_hw_i2c,u8g2_gpio_and_delay_stm32);</span><br><span class="line">u8g2_InitDisplay(&amp;u8g2); <span class="comment">// send init sequence to the display, display is in sleep mode after this,</span></span><br><span class="line">u8g2_SetPowerSave(&amp;u8g2, <span class="number">0</span>); <span class="comment">// wake up display</span></span><br><span class="line">u8g2_ClearDisplay(&amp;u8g2);</span><br><span class="line">u8g2_SetFont(&amp;u8g2, u8g2_font_wqy16_t_chinese1);</span><br><span class="line">u8g2_DrawCircle(&amp;u8g2,<span class="number">60</span>,<span class="number">30</span>,<span class="number">20</span>,U8G2_DRAW_ALL);</span><br><span class="line">u8g2_DrawUTF8(&amp;u8g2,<span class="number">10</span>,<span class="number">50</span>,<span class="string">&quot;你好,world&quot;</span>);</span><br><span class="line">u8g2_SendBuffer(&amp;u8g2);</span><br><span class="line">HAL_Delay(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure><p>上面的代码记得按照cubemx的要求放到代码中的相应部分，不然一更新用户代码就没了。</p><p>要显示中文的话，一定要把编译器的编码格式改成UTF-8，不然可能啥都显示不了。另外好像能显示的中文有限，改成俺的名字就直接编译错误了，应该是字库没有这些字的原因，后面再研究下咋整。</p><p>一次可以设置多个图形，这个图形数据会以叠加的方式更新到原有的buf里面，然后调用u8g2_SendBuffer(&amp;u8g2)这个函数把buf一下子全写入到oled里面进行更新。也就是说不调用这个函数做再多操作也只是再更新buf而不会更新oled显示。、</p><img src="/posts/2286740127/3c762303990f49c9baedf8745d6c0044.png" class="" title="img"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><p><a href="https://blog.csdn.net/qq_42385764/article/details/132667262">(强推)U8G2 软件 IIC 移植至STM32(以STM32F407为例)</a></p></li><li><p><a href="https://blog.csdn.net/qq_51183186/article/details/120348070">stm32移植U8G2图像库指南</a></p></li><li><p><a href="https://www.bilibili.com/read/cv15583426/">u8g2的stm32f103c8t6移植</a></p></li><li><p><a href="https://www.cnblogs.com/tangwc/p/17300439.html">(这个个人博客也很好)U8g2图形库移植</a></p></li><li><p><a href="https://frozencandles.fun/archives/301">(有讲硬件IIC-博主也有说明LVGV)U8g2图形库与STM32移植</a></p></li><li><p><a href="https://www.iotword.com/16582.html">STM32硬件IIC移植U8g2库教程详解</a></p></li><li><p><a href="https://blog.csdn.net/qq_43862401/article/details/121809470">(这个还没试过-看评论应该可以)u8g2库stm32移植记录(硬件IIC）</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">U8G2移植STM32、GD32等MCU中，不使用 Arduino 实现调用</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="U8G2" scheme="https://zml3589110.github.io/categories/U8G2/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="U8G2" scheme="https://zml3589110.github.io/tags/U8G2/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式</title>
    <link href="https://zml3589110.github.io/posts/3383621347.html"/>
    <id>https://zml3589110.github.io/posts/3383621347.html</id>
    <published>2023-12-04T07:35:20.000Z</published>
    <updated>2023-12-04T08:15:23.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重要问题"><a href="#重要问题" class="headerlink" title="重要问题"></a>重要问题</h1><h2 id="“-”导致匹配不上"><a href="#“-”导致匹配不上" class="headerlink" title="“+”导致匹配不上"></a>“+”导致匹配不上</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span>ABS+PC,抗跌落和震动<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://www.lazycat.cc/Doctor/Application/Doctor/View/css/bower_components/jquery/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">replaceAll</span>(<span class="params">obj ,oldStr, newStr</span>) </span></span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="javascript">             <span class="keyword">return</span> obj.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;&gt;[\\s]*&quot;</span>+oldStr+<span class="string">&quot;[\\s]*&lt;&quot;</span>,<span class="string">&quot;gm&quot;</span>),<span class="function"><span class="keyword">function</span>(<span class="params">word</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                 <span class="keyword">return</span> <span class="string">&quot;&gt;&quot;</span>+newStr+<span class="string">&quot;&lt;&quot;</span>&#125;</span></span><br><span class="line">          ); </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> body=$(<span class="string">&quot;body&quot;</span>).html();</span></span><br><span class="line"><span class="javascript">        body=replaceAll(body,<span class="string">&quot;ABS+PC,抗跌落和震动&quot;</span>,<span class="string">&quot;ssssss&quot;</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;body&quot;</span>).html(body);</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>像这样有个加号，文本不会被替换，但是删除两个加号后就能正常被替换了</p><p><strong>解决办法是进行转义</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">+号在正则表达式中是有意义的，要转义</span><br><span class="line"> oldStr = oldStr.replace(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;\\+&#x27;</span>);</span><br><span class="line"> <span class="keyword">return</span> obj.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;&gt;[\\s]*&quot;</span>+oldStr+<span class="string">&quot;[\\s]*&lt;&quot;</span>,<span class="string">&quot;gm&quot;</span>),<span class="function"><span class="keyword">function</span>(<span class="params">word</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">return</span> <span class="string">&quot;&gt;&quot;</span>+newStr+<span class="string">&quot;&lt;&quot;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>+需要转义，它表示多个字符，+才是字面的加号。</li><li>+在正则里有自己的含义，若要当普通字符使用，需要写成“+”</li></ul><h1 id="replace-函数使用"><a href="#replace-函数使用" class="headerlink" title="replace()函数使用"></a>replace()函数使用</h1><blockquote><p>语法：<br>string.replace(regexp, replacement)<br>参数：<br>regexp：必需。要搜索的值或正则表达式。<br>replacement：必需。指定替换文本或生成替换文本的函数。<br>返回值：已替换指定值的新字符串。<br>w3school：<a href="https://www.w3school.com.cn/jsref/jsref_replace.asp">JavaScript String replace() 方法</a></p></blockquote><h2 id="一、常规使用"><a href="#一、常规使用" class="headerlink" title="一、常规使用"></a>一、常规使用</h2><ul><li>将aaa替换为111：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa,bbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="string">&#x27;aaa&#x27;</span>, <span class="string">&quot;111&quot;</span>);<span class="comment">//输出&#x27;111,bbb,ccc&#x27;</span></span><br></pre></td></tr></table></figure></li><li>将连续的字母替换为111：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaaaaaa,bbbbbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/\w+/g</span>, <span class="string">&quot;111&quot;</span>);<span class="comment">//输出&#x27;111,111,111&#x27;</span></span><br></pre></td></tr></table></figure></li><li>将所有字母全部替换为1：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa,bbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/\w/g</span>, <span class="string">&quot;1&quot;</span>);<span class="comment">//输出&#x27;111,111,111&#x27;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="二、-1、-2、…、-99等使用"><a href="#二、-1、-2、…、-99等使用" class="headerlink" title="二、$1、$2、…、$99等使用"></a>二、$1、$2、…、$99等使用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa,bbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/(\w+),(\w+),(\w+)/</span>, <span class="string">&quot;$3,$2,$1&quot;</span>);<span class="comment">//输出&#x27;ccc,bbb,aaa&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>$1代表第一个(\w+)匹配到的内容，即aaa</li><li>$2代表第一个(\w+)匹配到的内容，即bbb</li><li>$3代表第一个(\w+)匹配到的内容，即ccc</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaa、bbb、ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/(\w)+、(\w)+、(\w)+/</span>, <span class="string">&quot;$3$2$1&quot;</span>);<span class="comment">//输出&#x27;cba&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>$1代表第一个(\w)匹配到的内容，即a</li><li>$2代表第一个(\w)匹配到的内容，即b</li><li>$3代表第一个(\w)匹配到的内容，即c</li></ul><p><strong>结论：</strong>$1、$2、…、$99 表示正则表达式中的括号匹配项的结果。</p><h2 id="三、函数"><a href="#三、函数" class="headerlink" title="三、函数"></a>三、函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出&#x27;hello,world&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/[A-Z]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> val.toLowerCase()</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//输出&#x27;HELLO,WORLD&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;Hello,World&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/[a-z]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> val.toUpperCase()</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//输出&#x27;000,000,111&#x27;</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;aaaaaaa,bbbbbb,ccc&quot;</span>;</span><br><span class="line">str.replace(<span class="regexp">/\w+/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> val === <span class="string">&#x27;ccc&#x27;</span> ? <span class="string">&#x27;111&#x27;</span>:<span class="string">&#x27;000&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>**一个经典的例子——模板字符匹配： **</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">    title:<span class="string">&#x27;标题&#x27;</span>,</span><br><span class="line">    subTitle: <span class="string">&#x27;副标题&#x27;</span>,</span><br><span class="line">    content:<span class="string">&#x27;内容&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str=<span class="string">&#x27;这是一段内容，标题是&#123;&#123;title&#125;&#125;，副标题是&#123;&#123;subTitle&#125;&#125;，内容是&#123;&#123;content&#125;&#125;&#x27;</span></span><br><span class="line"> </span><br><span class="line">str.replace(<span class="regexp">/\&#123;\&#123;(.*?)\&#125;\&#125;/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">val,key</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> data[key]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>输出：这是一段内容，标题是标题，副标题是副标题，内容是内容</p><p>这里函数的第一个参数是匹配的内容，第二个参数是括号匹配的结果</p><h2 id="四、其他常用正则表达式"><a href="#四、其他常用正则表达式" class="headerlink" title="四、其他常用正则表达式"></a>四、其他常用正则表达式</h2><p>邮箱格式：^[a-z0-9A-Z]+[- | a-z0-9A-Z . _]+@([a-z0-9A-Z]+(-[a-z0-9A-Z]+)?\.)+[a-z]{2,}$</p><p>正整数：^<a href="%5B0-9%5D">1-9</a>*$</p><img src="/posts/3383621347/eb3ab4539ef44e6988a629b517891091.png" class="" title="img"><ul><li>身份证号<br>^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$</li><li>ip地址<br>^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$</li><li>数字或英文字母<br>^([0-9a-zA-Z]+)$</li><li>手机号码<br>^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\d{8}$</li><li>日期时间格式YYYY-MM-DD HH:mm:ss<br>^(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2})$</li><li>日期格式YYYY-MM-DD<br>^(\d{4}-\d{2}-\d{2})$</li><li>合法url<br>(https?|ftp|file):&#x2F;&#x2F;[-A-Za-z0-9+&amp;@#&#x2F;%?&#x3D;<del>_|!:,.;]+[-A-Za-z0-9+&amp;@#&#x2F;%&#x3D;</del>_|]</li><li>最多三位小数<br>^(?:[1-9]\d*|0)(?:\.\d{1,3})?$</li><li>大于等于0且最多三位小数<br>^(?!0+(?:\.0+)?$)(?:[1-9]\d*|0)(?:\.\d{1,3})?$</li><li>最多两位小数<br>^(?:[1-9]\d*|0)(?:\.\d{1,2})?$</li><li>大于等于0且最多两位小数<br>^(?!0+(?:\.0+)?$)(?:[1-9]\d*|0)(?:\.\d{1,2})?$</li><li>至少两个字符，中文或英文<br>^([a-zA-Z\u4E00-\u9FA5]+)$</li><li>3-15个字符，仅限数字、字母、斜杠、横杠、点<br>^[-&#x2F;0-9A-Za-z.]{3,15}$</li></ul><h2 id="replace-函数详细说明"><a href="#replace-函数详细说明" class="headerlink" title="replace()函数详细说明"></a>replace()函数详细说明</h2><h3 id="1-方法简介"><a href="#1-方法简介" class="headerlink" title="1. 方法简介"></a>1. 方法简介</h3><p>该方法的签名是：replace([RegExp|String],[String|Function])。</p><p>该方法 返回一个新的字符串，但并不改变字符串本身。</p><p>该方法接收2个参数，<br>第一个参数可以是字符串，也可以是一个正则表达式；<br>第二个参数可以是一个字符串，也可以是一个函数。</p><h3 id="2-replace-使用"><a href="#2-replace-使用" class="headerlink" title="2. replace()使用"></a>2. replace()使用</h3><p>2.1 replace(字符串,字符串)<br>假如我们有一个字符串中出现了错别字”背景“，需要用”北京“来替换，那么我们可以如下搞定：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="string">&#x27;背景&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(str);   <span class="comment">// 输出结果：我爱北京天安门</span></span><br></pre></td></tr></table></figure><p>但这个用法有一个问题：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="string">&#x27;背景&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出结果：我爱北京天安门，但是背景雾霾太严重</span></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><blockquote><p>我们发现，如果字符串str中有多个待替换的子串，比如本例中的“背景”，出现了2次，那么replace()方法只能给我们用目标字符串(北京）替换掉第1次出现的”背景”。<br>如果想把所有的”背景”都给替换了，就必须调用多次。</p></blockquote><p><strong>此使用方法bug：</strong> 只能替换一次 多次替换需要多次调用</p><p>2.2 replace(正则表达式,字符串)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="regexp">/背景/g</span>,<span class="string">&#x27;北京&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出结果：我爱北京天安门，但是北京雾霾太严重</span></span><br><span class="line"><span class="built_in">console</span>.log(str); </span><br></pre></td></tr></table></figure><blockquote><p>这里需要说明的是，str.replace(&#x2F;背景&#x2F;g,“北京”)的第一个参数 ”&#x2F;背景&#x2F;g“ 是一个正则表达式，使用&#x2F; &#x2F;的正则写法是JavaScript中正则表达式的字面量写法。<br>在此处，正则表达式的末尾有个g，它表示match源字符串str中所有匹配项。<br>这里如果没有g，那么也只能匹配到第一个错别字”背景“，只有加了这个g，才能匹配到所有的”背景“。</p></blockquote><p>2.3 replace(正则表达式,function(){})<br>以上的用法还是比较直观的，但是能实现的功能也比较简单，如果需要做一些复杂的字符串替换运算，那么就需要使用较为高级（复杂）的用法，就是 正则+function 的用法。说白了就是第一参数传一个正则表达式，我们下面称之为RegArg；第二个参数给一个函数，我们下面称之为FuncArg。这也是replace()的核心用法。</p><p>本质 ：对str使用RegArg做match()匹配，如果匹配到多项结果（比如使用了全局匹配g，或者分组），那么每一个匹配结果都将执行一次FuncArg函数，并且用该函数的返回值替代源字符串中的匹配项。</p><p>2.3.1 简单用法，正则表达式不使用分组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="regexp">/背景/</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><img src="/posts/3383621347/84ea0b39e14e41738840c6405b511077.png" class="" title="在这里插入图片描述"><p><strong>解析：</strong></p><ul><li>本例的目的是：把原字符串中的’背景’，替换为’北京’。</li><li>正则表达式没有使用全局匹配符g，所以只替换了源字符串中第一个‘背景’子串，FuncArg只执行了一次。</li></ul><p><strong>replace()函数第一个参数是简单正则表达式，第二个参数是函数时：</strong><br>这个函数是有参数的，而且这些参数是默认的。</p><ul><li>arguments[0]是匹配到的子字符串</li><li>arguments[1]是匹配到的子串的索引位置</li><li>arguments[2]是源字符串本身</li></ul><p>本例如果想替换所有的‘背景’为‘北京’，只需要让正则表达式后加个g。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">&#x27;我爱背景天安门，但是背景雾霾太严重&#x27;</span>;</span><br><span class="line">str = str.replace(<span class="regexp">/背景/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str);</span><br></pre></td></tr></table></figure><img src="/posts/3383621347/90fd02cee026464d87b56035ff97284a.png" class="" title="在这里插入图片描述"><blockquote><p>我们可以看到，输出了2个Arguments，因为我们使用全局匹配g后，会match到2个项，所以就执行了2次function。<br>第一个跟前边一样，第二个arugments的索引位置是10，因为源字符串中第二个‘背景’的索引是10.</p></blockquote><p>eg：把捐款是100元以下的金额数用‘**’来替换掉。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt =<span class="string">&#x27;刘菲:50元。张常成:150元。孙玉杰:200元。李明轩:20元。李子豪:1500元。&#x27;</span>;</span><br><span class="line">txt = txt.replace(<span class="regexp">/\d+/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>].length &gt; <span class="number">2</span> ? <span class="built_in">arguments</span>[<span class="number">0</span>] : <span class="string">&#x27;**&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(txt);</span><br></pre></td></tr></table></figure><img src="/posts/3383621347/84030ddbfe344667bdbbb213d617483e.png" class="" title="在这里插入图片描述"><p>2.3.2 复杂用法，正则表达式使用分组<br>eg：这个例子的意图是：把所有以“万”为单位的捐款，其金额改为‘元’。比如 ：4万，改为40000元</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt =<span class="string">&#x27;刘菲:5万。张常成:5000元。孙玉杰:2000元。李明轩:20万。李子豪:8500元。&#x27;</span>;</span><br><span class="line">txt = txt.replace(<span class="regexp">/(\d+)(万)/g</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">1</span>] + <span class="string">&#x27;0000&#x27;</span> + <span class="string">&#x27;元&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(txt);</span><br></pre></td></tr></table></figure><p><strong>输出结果是：</strong></p><img src="/posts/3383621347/e476abd35cb94a5e95021a201632c627.png" class="" title="在这里插入图片描述"><p><strong>replace()函数第一个参数是分组正则表达式，第二个参数是函数时：</strong></p><ul><li>arguments[0]是匹配到的子字符串</li><li>arguments[1]是匹配到的第1个分组项</li><li>arguments[2]是匹配到的第2个分组项</li><li>arguments[3]是匹配到的字符串的索引位置</li><li>arguments[4]是源字符串本身</li></ul><h1 id="正则匹配RegExp"><a href="#正则匹配RegExp" class="headerlink" title="正则匹配RegExp"></a>正则匹配RegExp</h1><p><a href="https://blog.csdn.net/a15297701931/article/details/126479577">JS高级 之 RegExp - 正则表达式</a><br><a href="https://blog.csdn.net/XSL_HR/article/details/130190704">JS 正则表达式（正则匹配RegExp）</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://ask.csdn.net/questions/257783">关于js正则匹配的问题，怎么加上一个”+”就匹配不上了</a></li><li><a href="https://blog.csdn.net/sxww_zyt/article/details/130258920">js正则表达式replace中参数为$1、$2、…、$99、函数等用法以及常用的正则表达式</a></li><li><a href="https://blog.csdn.net/qq_46658751/article/details/123390095">【JavaScript】详解JavaScript中的replace()函数</a></li><li><a href="https://www.runoob.com/jsref/jsref-replace.html">JavaScript replace() 方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">JavaScript正则表达式相关知识</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="HTML" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/HTML/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/categories/JavaScript/"/>
    
    <category term="RegExp" scheme="https://zml3589110.github.io/categories/RegExp/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="HTML" scheme="https://zml3589110.github.io/tags/HTML/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="加号匹配" scheme="https://zml3589110.github.io/tags/%E5%8A%A0%E5%8F%B7%E5%8C%B9%E9%85%8D/"/>
    
    <category term="RegExp" scheme="https://zml3589110.github.io/tags/RegExp/"/>
    
  </entry>
  
  <entry>
    <title>Hexo的常用指令合集</title>
    <link href="https://zml3589110.github.io/posts/2069770813.html"/>
    <id>https://zml3589110.github.io/posts/2069770813.html</id>
    <published>2023-12-04T07:14:20.000Z</published>
    <updated>2023-12-04T08:15:23.335Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>hexo有许多主题，其实最火爆的是NexT、Matery等，复制关键词到GitHub或者baidu都能搜到。权衡利弊最终我还是选择了大多数人使用的next。</p></blockquote><h1 id="常用命令说明"><a href="#常用命令说明" class="headerlink" title="常用命令说明"></a>常用命令说明</h1><ul><li>（1）hexo g或hexo generate<br>该命令执行后在hexo站点根目录下生成public文件夹</li></ul><img src="/posts/2069770813/7683010350d24da995d50c154352b35d.png" class="" title="在这里插入图片描述"><ul><li>（2）hexo clean</li></ul><p>把（1）中的public文件夹删除</p><ul><li>（3）hexo s或hexo server<br>启动服务，默认地址为<a href="http://localhost:4000/%EF%BC%8C4000%E7%AB%AF%E5%8F%A3">http://localhost:4000/，4000端口</a></li></ul><img src="/posts/2069770813/185e5eec8e4e4769b821f6157468d87d.png" class="" title="在这里插入图片描述"><ul><li><p>（4）hexo d或hexo deploy<br>部署站点，在本地生成.deploy_git文件夹，并将编译后的文件上传至 GitHub。</p></li><li><p>（5）hexo new [layout] <title><br>例如： hexo new photo “my-first-blog”<br>上述指令执行时，Hexo 会尝试在 scaffolds 中寻找photo.md布局，若找到，则根据该布局新建文章；若未找到或指令中未指定该参数，则使用post.md新建文章。新建文章的名称在_config.yml中配置。</p></li></ul><img src="/posts/2069770813/35dacad9d318449696f68e6697eab9c7.png" class="" title="在这里插入图片描述"><ul><li>（6）删除文章<br>只需在本地把source&#x2F;_posts文件夹下的文章源文件删除后，执行以下命令重新部署即可。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s // 一定要先 clean，防止灵异事件发生</span><br></pre></td></tr></table></figure><ul><li>（7）备份&#x2F;迁移你的Hexo博客</li></ul><ol><li>备份根目录</li></ol><img src="/posts/2069770813/8b7829cea05440408b386a27bc71cade.png" class="" title="在这里插入图片描述"><ol start="2"><li>参考<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju">文档3：hexo-script使用文档</a>重新安装hexo</li><li>使用备份的目录覆盖新装的hexo目录</li></ol><img src="/posts/2069770813/56e7368f24dc4f258cdf2f2141543328.png" class="" title="在这里插入图片描述"><ol start="4"><li>最后使用下面的命令直接运行即可<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure></li><li>生成新的SSH公钥并上传至GitHub<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;a237440035&quot;</span><br><span class="line">git config --global user.email &quot;237440035@qq.com&quot;</span><br><span class="line">ssh-keygen -t ed25519 -C &quot;237440035@qq.com&quot;</span><br></pre></td></tr></table></figure></li></ol><img src="/posts/2069770813/878226dbaf9849fb8528198ef9ad2ac4.png" class="" title="在这里插入图片描述"><p>公钥为：SHA256:57GWXC&#x2F;PLymwxMVw9NoNKMpaoSI71Mum7Y9tPZZbgPI <a href="mailto:&#x32;&#51;&#55;&#x34;&#x34;&#48;&#x30;&#51;&#x35;&#x40;&#x71;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#x32;&#51;&#55;&#x34;&#x34;&#48;&#x30;&#51;&#x35;&#x40;&#x71;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a><br>也可以在文件C:\Users\Administrator.ssh\id_ed25519.pub中查看<br>将公钥复制在GitHub中即可使用hexo d命令</p><img src="/posts/2069770813/018945bae1274b7783e02631b033d741.png" class="" title="在这里插入图片描述"><h5 id="个性化定制你的Hexo博客"><a href="#个性化定制你的Hexo博客" class="headerlink" title="个性化定制你的Hexo博客"></a>个性化定制你的Hexo博客</h5><blockquote><p><a href="https://blog.csdn.net/qq_42889280/article/details/103087433">1、Hexo博客+Next主题深度优化与定制</a><br><a href="https://www.jianshu.com/p/baab04284923">2、备份你的Hexo博客</a><br><a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju">3、hexo-script使用文档</a><br><a href="https://www.jianshu.com/p/78c218f9d1e7">4、Hexo-设置阅读全文</a></p></blockquote><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/vpqtxzmzezeqjj9977/article/details/122982320">Hexo的常用指令合集</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">收集常用hexo命令</summary>
    
    
    
    <category term="HEXO" scheme="https://zml3589110.github.io/categories/HEXO/"/>
    
    
    <category term="HEXO技术" scheme="https://zml3589110.github.io/tags/HEXO%E6%8A%80%E6%9C%AF/"/>
    
    <category term="命令" scheme="https://zml3589110.github.io/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>HEXO插件说明</title>
    <link href="https://zml3589110.github.io/posts/1804493672.html"/>
    <id>https://zml3589110.github.io/posts/1804493672.html</id>
    <published>2023-12-04T07:07:20.000Z</published>
    <updated>2023-12-04T08:15:23.320Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 有强大的插件系统，使您能轻松扩展功能而不用修改核心模块的源码。在 Hexo 中有两种形式的插件：</p><h3 id="脚本（Scripts）"><a href="#脚本（Scripts）" class="headerlink" title="脚本（Scripts）"></a>脚本（Scripts）</h3><p>如果您的代码很简单，建议您编写脚本，您只需要把 JavaScript 文件放到 <code>scripts</code> 文件夹，在启动时就会自动加载。</p><h3 id="插件（Packages）"><a href="#插件（Packages）" class="headerlink" title="插件（Packages）"></a>插件（Packages）</h3><p>如果您的代码较复杂，或是您想要发布到 NPM 上，建议您编写插件。首先，在 <code>node_modules</code> 文件夹中建立文件夹，文件夹名称开头必须为 <code>hexo-</code>，如此一来 Hexo 才会在启动时加载；否则 Hexo 将会忽略它。</p><p>文件夹内至少要包含 2 个文件：一个是主程序，另一个是 <code>package.json</code>，描述插件的用途和所依赖的插件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── index.js</span><br><span class="line">└── package.json</span><br></pre></td></tr></table></figure><p><code>package.json</code> 中至少要包含 <code>name</code>, <code>version</code>, <code>main</code> 属性，例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">package.json&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;hexo-my-plugin&quot;</span>,</span><br><span class="line">  <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.0.1&quot;</span>,</span><br><span class="line">  <span class="string">&quot;main&quot;</span>: <span class="string">&quot;index&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>您可以使用 Hexo 提供的官方工具插件来加速开发：</p><ul><li><a href="https://github.com/hexojs/hexo-fs">hexo-fs</a>：文件 IO</li><li><a href="https://github.com/hexojs/hexo-util">hexo-util</a>：工具程式</li><li><a href="https://github.com/hexojs/hexo-i18n">hexo-i18n</a>：本地化（i18n）</li><li><a href="https://github.com/hexojs/hexo-pagination">hexo-pagination</a>：生成分页数据</li></ul><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>当您完成插件后，可以考虑将它发布到 <a href="https://hexo.io/plugins">插件列表</a>，让更多人能够使用您的插件。发布插件的步骤和 <a href="https://hexo.io/zh-cn/docs/contributing.html#%E6%9B%B4%E6%96%B0%E6%96%87%E6%A1%A3">更新文档</a> 非常类似。</p><ol><li><p>Fork <a href="https://github.com/hexojs/site">hexojs&#x2F;site</a></p></li><li><p>把库（repository）复制到电脑上，并安装所依赖的插件。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="comment">//github.com/&lt;username&gt;/site.git</span></span><br><span class="line">$ cd site</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>在 <code>source/_data/plugins/</code> 中创建一个新的 yaml 文件，使用您的插件名称作为文件名。</p></li><li><p>编辑 <code>source/_data/plugins/&lt;your-plugin-name&gt;.yml</code> 并添加您的插件。例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">description: Server <span class="built_in">module</span> <span class="keyword">for</span> Hexo.</span><br><span class="line">link: https:<span class="comment">//github.com/hexojs/hexo-server</span></span><br><span class="line">tags:</span><br><span class="line">  - official</span><br><span class="line">  - server</span><br><span class="line">  - <span class="built_in">console</span></span><br></pre></td></tr></table></figure></li><li><p>推送（push）分支。</p></li><li><p>建立一个新的合并申请（pull request）并描述改动。</p></li></ol><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://hexo.io/zh-cn/docs/plugins">Hexo插件说明</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">hexo插件基础</summary>
    
    
    
    <category term="HEXO" scheme="https://zml3589110.github.io/categories/HEXO/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/categories/HEXO/%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="插件" scheme="https://zml3589110.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="HEXO" scheme="https://zml3589110.github.io/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Typora + 开发Hexo插件 解决图片路径不一致</title>
    <link href="https://zml3589110.github.io/posts/653633827.html"/>
    <id>https://zml3589110.github.io/posts/653633827.html</id>
    <published>2023-12-04T06:07:20.000Z</published>
    <updated>2023-12-05T09:29:46.252Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h1><p>在文章中，Typora编写时显示的很正常，但推送上去后就不行了，图片集体挂掉，无法显示出来，后来才找到这个方法！<br>这个方法的核心是源文章使用的是 Typora 图片引用方式，但推送编译时就更改路径方式，使用本地引用方法。<br>hexo-asset-img 这个文件夹中的 index.js 也是遵循 JavaScript 语法，自己研究之后发现他是使用正则表达式来替换路径，也就是说先识别出 typora 下图片路径，然后替换成hexo能使用的路径就行了！</p><p><strong>问题点：</strong></p><p>使用时发现一直没有替换，最后一层层调出才发现，使用正则表达式时，“+”是有效字符，需要正则化才行，费了一早上才知道！</p><p><a href="https://ask.csdn.net/questions/257783">关于js正则匹配的问题，怎么加上一个”+”就匹配不上了？</a></p><p>这篇文章有说明：<br>+号在正则表达式中是有意义的，要转义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">oldStr = oldStr.replace(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;\\+&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用这个才对-要不然多个+号还不行</span></span><br><span class="line">fileName = fileName.replace(<span class="regexp">/\+/g</span>,<span class="string">&#x27;\\+&#x27;</span>);<span class="comment">//转义所有+</span></span><br></pre></td></tr></table></figure><h1 id="1-下载安装-Typora"><a href="#1-下载安装-Typora" class="headerlink" title="1. 下载安装 Typora"></a>1. 下载安装 Typora</h1><p><a href="https://typora.io/">https://typora.io/</a></p><h1 id="2-配置-Typora-图片路径"><a href="#2-配置-Typora-图片路径" class="headerlink" title="2. 配置 Typora 图片路径"></a>2. 配置 Typora 图片路径</h1><img src="/posts/653633827/image-5f4b358d49ecff6196bdedac1b022c2a.png" class="" title="img"><img src="/posts/653633827/image-c3df7eb6e26d520ff42b722a2c83f2bb.png" class="" title="img"><p>图片文件保存路径: .&#x2F;${filename} 即保存到与 当前正在编辑的文件名 相同的同级文件夹下</p><p>下面三项依次为</p><ul><li><p>对本地位置的图片应用上述规则</p></li><li><p>对网络位置的图片应用上述规则</p></li><li><p>优先使用相对路径</p></li></ul><p><strong>建议都勾选上，至少要勾选上第一项</strong></p><p>PS：使用 Ctrl+V 粘贴 即可复制图片到Typora图片文件夹</p><h1 id="3-配置-Hexo-图片文件夹"><a href="#3-配置-Hexo-图片文件夹" class="headerlink" title="3. 配置 Hexo 图片文件夹"></a>3. 配置 Hexo 图片文件夹</h1><img src="/posts/653633827/image-4fefcdb6876c6f7ec8e002cdcddde463.png" class="" title="img"><p>在 Hexo 根目录打开配置文件 <strong>_config.yml</strong></p><p><strong>搜索 post_asset_folder，false 改为 true</strong></p><img src="/posts/653633827/image-b288223fe2dd6816890d13f9e580be35.png" class="" title="img"><p>这样修改后，每次 ‘hexo new page’ 生成新文章，都会在文章文件同级目录创建一个与文章文件名同名的文件夹，我们就在这里存放此文章的图片。</p><img src="/posts/653633827/image-303f4cfea59a8aa80059fc9b56e96cc0.png" class="" title="img"><p><strong>PS: 这被称为 文章资源文件夹, 参考官方文档： <a href="https://hexo.io/zh-cn/docs/asset-folders">https://hexo.io/zh-cn/docs/asset-folders</a></strong></p><h1 id="4-开发-Hexo-转换图片路径-插件"><a href="#4-开发-Hexo-转换图片路径-插件" class="headerlink" title="4. 开发 Hexo 转换图片路径 插件"></a>4. 开发 Hexo 转换图片路径 插件</h1><p><strong>注意：自己最后使用的是npm直接下载方式安装，不过这个方式也刚好可以学习插件开发了</strong></p><p>现在，我们在 Typora下使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![example](postname/example.jpg)</span><br></pre></td></tr></table></figure><p>引用图片，享受实时预览，但需发布到 Hexo，使之发布后能正确加载我们的图片，还需要做以下转换:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![example](postname/example.jpg) --&gt; &#123;% asset_img example.jpg example %&#125;</span><br></pre></td></tr></table></figure><p>而这个转换我们需要在文章编译为html之前，在编译过程中转换为 这样的标签</p><p><strong>PS: <a href="https://hexo.io/zh-cn/docs/asset-folders#%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E7%9A%84%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6">Hexo官方文档 - 相对路径引用的标签插件</a></strong></p><h2 id="4-1-创建文件夹-hexo-asset-img，初始化npm包"><a href="#4-1-创建文件夹-hexo-asset-img，初始化npm包" class="headerlink" title="4.1 创建文件夹 hexo-asset-img，初始化npm包"></a>4.1 创建文件夹 hexo-asset-img，初始化npm包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo-asset-img</span><br><span class="line"><span class="built_in">cd</span> hexo-asset-img</span><br><span class="line">npm init</span><br></pre></td></tr></table></figure><img src="/posts/653633827/image-2c872375cf8af43072ef10ed213b13d6.png" class="" title="img"><h2 id="4-2-编写插件-index-js"><a href="#4-2-编写插件-index-js" class="headerlink" title="4.2 编写插件 index.js"></a>4.2 编写插件 index.js</h2><p><strong>创建 index.js，编写代码如下</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;hexo-log&#x27;</span>)(&#123; <span class="string">&#x27;debug&#x27;</span>: <span class="literal">false</span>, <span class="string">&#x27;slient&#x27;</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * md文件返回 true</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>data </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ignore</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 好奇怪，试了一下, md返回true, 但却需要忽略 取反!</span></span><br><span class="line">    <span class="keyword">var</span> source = data.source;</span><br><span class="line">    <span class="keyword">var</span> ext = source.substring(source.lastIndexOf(<span class="string">&#x27;.&#x27;</span>)).toLowerCase();</span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;md&#x27;</span>,].indexOf(ext) &gt; -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reverseSource = data.source.split(<span class="string">&quot;&quot;</span>).reverse().join(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> fileName = reverseSource.substring(<span class="number">3</span>, reverseSource.indexOf(<span class="string">&quot;/&quot;</span>)).split(<span class="string">&quot;&quot;</span>).reverse().join(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ![example](postname/example.jpg)  --&gt;  &#123;% asset_img example.jpg example %&#125;</span></span><br><span class="line">    <span class="keyword">var</span> regExp = <span class="built_in">RegExp</span>(<span class="string">&quot;!\\[(.*?)\\]\\(&quot;</span> + fileName + <span class="string">&#x27;/(.+?)\\)&#x27;</span>, <span class="string">&quot;g&quot;</span>);</span><br><span class="line">    <span class="comment">// hexo g</span></span><br><span class="line">    data.content = data.content.replace(regExp, <span class="string">&quot;&#123;% asset_img $2 $1 %&#125;&quot;</span>,<span class="string">&quot;g&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// log.info(`hexo-asset-img: filename: $&#123;fileName&#125;, title: $&#123;data.title.trim()&#125;`);</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">&#x27;before_post_render&#x27;</span>,<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!ignore(data))&#123;</span><br><span class="line">        action(data)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="4-3-本地测试插件"><a href="#4-3-本地测试插件" class="headerlink" title="4.3 本地测试插件"></a>4.3 本地测试插件</h2><ol><li>Hexo根目录下 package.json 中 dependencies添加一行 “hexo-asset-img”: “^1.0.0”,</li><li>将 hexo-asset-img文件夹复制到 Hexo根目录下 node_modules文件夹下</li></ol><p><strong>注意：二者缺一不可，笔者试过不修改 package.json ，但没成功加载插件</strong></p><ul><li>重新生成文章</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s # 本地预览</span><br><span class="line"></span><br><span class="line">ps:也可以直接  hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><strong>PS：当然之后你还需要修正以前文章的图片路径</strong></p><p>public&#x2F;posts 生成结果如下图所示，成功</p><img src="/posts/653633827/image-49faf02cc39fc79b7d41181b34026384.png" class="" title="img"><p>图片路径被转换成功</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;/posts/hexo-typora/image-2c872375cf8af43072ef10ed213b13d6.png&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;&quot;</span> title=<span class="string">&quot;image-20201128103300470&quot;</span>&gt;</span><br></pre></td></tr></table></figure><ul><li><strong>后话：</strong><br>所说的问题就出现在了这里，一直是以为没什么问题，然而，多次尝试发现图片地址并未被改变，以为插件不起作用，但文件夹确确实实生成了，无奈只能研究其中代码含义，才有前面说的结果。<br>这里是作者列出详细步骤，实际上使用的话直接npm下载插件也行的了。</li></ul><h2 id="4-4-发布插件"><a href="#4-4-发布插件" class="headerlink" title="4.4 发布插件"></a>4.4 发布插件</h2><p>注意: 你需要先登录 npm login</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish --registry https://registry.npmjs.org</span><br></pre></td></tr></table></figure><img src="/posts/653633827/image-b0e539a443bb2dcc1aca24229a412d5b.png" class="" title="img"><h2 id="5-使用插件"><a href="#5-使用插件" class="headerlink" title="5. 使用插件"></a>5. 使用插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-img --save</span><br></pre></td></tr></table></figure><p>关联 GitHub<br><a href="https://github.com/yiyungent/hexo-asset-img">yiyungent&#x2F;hexo-asset-img: Hexo插件: 转换 图片相对路径 为 asset_img</a></p><p><a href="https://github.com/yiyungent/hexo-asset-img">https://github.com/yiyungent/hexo-asset-img</a></p><h1 id="作者说明"><a href="#作者说明" class="headerlink" title="作者说明"></a>作者说明</h1><h2 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h2><p>hexo-asset-image 已无效, 大概是从 Hexo 5 开始，并且此仓库已 archive</p><p>Q: 为什么使用本地图片 而不是网络图片 (图床) ?<br>A:</p><ol><li>第三方图床不稳定, 容易丢失图片</li><li>自行搭建图床, 随着上传错误图片, 删除文章而没有删除关联图片 次数的增多, 未引用图片越来越多, 图床中也越来越多的无用冗余图片, 还不方便删除, 也容易误删除</li><li>本地图片 与 文章在一个文件夹, 易打包, 在无网络或网络较差时也能预览</li><li>本地图片 放在与 文章文件名同名文件夹内 方便管理</li></ol><p><code>补充:</code><br>很多 <code>markdown编辑器</code> 提供粘贴图片到本地图片文件夹, 这些图片文件名通常不易读, 较长, 如果每次删除文章中的图片引用, 都手动去删除相应图片, 以及删除文章, 手动删除关联图片文件夹, 比较麻烦, 但不删除, 未引用图片又会越来越多, 因此 <code>删除未引用图片工具</code> 应运而生!</p><ul><li><a href="https://gitee.com/link?target=https://github.com/yiyungent/clear-image-action">yiyungent&#x2F;clear-image-action: 🔧 Image detection. | 图片检测 | 清理未引用图片 | 删除未引用图片 | 检查引用的图片是否有效 | GitHub Actions</a></li><li><a href="https://gitee.com/link?target=https://github.com/yiyungent/coo">yiyungent&#x2F;coo: 🧰 .NET 自用CLI, 工具集</a></li></ul><h2 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h2><ul><li><a href="https://gitee.com/link?target=https://github.com/yiyungent/clear-image-action">yiyungent&#x2F;clear-image-action: 🔧 Image detection. | 图片检测 | 清理未引用图片 | 删除未引用图片 | 检查引用的图片是否有效 | GitHub Actions</a></li><li><a href="https://gitee.com/link?target=https://github.com/xcodebuild/hexo-asset-image">xcodebuild&#x2F;hexo-asset-image</a></li><li><a href="https://gitee.com/link?target=https://github.com/cocowool/hexo-image-link">cocowool&#x2F;hexo-image-link</a></li><li><a href="https://gitee.com/link?target=https://github.com/cnzsb/hexo-asset">cnzsb&#x2F;hexo-asset</a></li></ul><h1 id="NET-自用-CLI-工具集-清理未引用图片"><a href="#NET-自用-CLI-工具集-清理未引用图片" class="headerlink" title=".NET 自用 CLI | 工具集(清理未引用图片)"></a>.NET 自用 CLI | 工具集(清理未引用图片)</h1><blockquote><p>需要先在本地安装 <code>.NET 6 SDK</code></p></blockquote><ul><li><a href="https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-6.0.100-windows-x64-installer">Windows | .NET 6 SDK | 下载</a></li><li><a href="https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-6.0.100-macos-x64-installer">macOS | .NET 6 SDK | 下载</a></li><li><a href="https://docs.microsoft.com/dotnet/core/install/linux?WT.mc_id=dotnet-35129-website">Linux | .NET 6 SDK</a></li></ul><p>然后 安装 <code>coo</code> 工具集</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet tool install -g coo</span><br></pre></td></tr></table></figure><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><h4 id="1-mdimg"><a href="#1-mdimg" class="headerlink" title="1. mdimg"></a>1. mdimg</h4><blockquote><ol><li>清理 md文件的未引用图片: 例如使用 <code>Hexo</code>, 采用本地图片文件 (图片放在md同名文件夹下) 等</li></ol></blockquote><p><code>&quot;F:\Com\me\Repos\notebook\source\_posts&quot;</code> 为 <code>Hexo文章目录</code>, 本人图片与文章处于同一目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 统计分析</span><br><span class="line">coo mdimg &quot;F:\Com\me\Repos\notebook\source\_posts&quot;</span><br><span class="line"># 统计分析 并删除未引用图片</span><br><span class="line">coo mdimg -d &quot;F:\Com\me\Repos\notebook\source\_posts&quot;</span><br></pre></td></tr></table></figure><blockquote><p>补充:</p><ol><li><code>所有图片数量=引用图片数+未引用图片数</code><br>这个等式匹配不上 <code>属于正常现象</code>, 因为 匹配 所有图片 时, 目前仅匹配了 <code>png,jpg,jpeg,gif</code>, 而 你在md中引用的图片可能还有其它<br>因此 <code>所有图片数量&lt;=引用图片数+未引用图片数</code></li><li>Windows, macOS 不区分路径大小写, 但 Linux 区分大小写<br>本工具匹配时, 忽略大小写, 因此不用担心 引用时, 大小写不一致 而导致工具以为 未引用此图片 而误删,<br>因此工具 可能存在漏删, 但不会误删除引用图片</li><li>本工具通过检测 <code>文章.md</code> 中图片的相对路径引用, 并转换为绝对路径, 与目标目录的所有存在图片的绝对路径进行匹配, 来找出哪些图片未引用</li></ol></blockquote><h4 id="2-cimg"><a href="#2-cimg" class="headerlink" title="2. cimg"></a>2. cimg</h4><blockquote><ol><li>清理 未引用图片 (<code>mdimg</code> 升级版)<br>支持识别 <code>md,html,htm</code></li></ol></blockquote><blockquote><p>支持 <code>相对路径</code>: 相对于当前命令行执行所在路径</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">coo cimg -d --ignore-paths=<span class="string">&quot;IgnoreDir1,IgnoreDir2,images/1.png&quot;</span> <span class="string">&quot;source/_posts&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>--ignore-paths=&quot;IgnoreDir1,IgnoreDir2,images/1.png&quot;</code> 这些图片地址忽略, 不会被删除</p></blockquote><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>卸载 coo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dotnet tool uninstall -g coo</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://moeci.com/posts/hexo-typora/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85-typora">Hexo + Typora + 开发Hexo插件 解决图片路径不一致</a></li><li><a href="https://gitee.com/yiyungent/hexo-asset-img/">gitee hexo-asset-img</a></li><li><a href="https://zhuanlan.zhihu.com/p/645679541">(这个方法过时-思路可参考)解决Hexo+Github+Typora图片无法正确显示的问题</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">hexo图片显示问题，Typora 添加图片时顺便下载下来，这样离线也能查看了</summary>
    
    
    
    <category term="gihub" scheme="https://zml3589110.github.io/categories/gihub/"/>
    
    <category term="Typora" scheme="https://zml3589110.github.io/categories/gihub/Typora/"/>
    
    <category term="图片" scheme="https://zml3589110.github.io/categories/%E5%9B%BE%E7%89%87/"/>
    
    
    <category term="RegExp" scheme="https://zml3589110.github.io/tags/RegExp/"/>
    
    <category term="图片" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E7%89%87/"/>
    
    <category term="HEXO" scheme="https://zml3589110.github.io/tags/HEXO/"/>
    
    <category term="Typora" scheme="https://zml3589110.github.io/tags/Typora/"/>
    
    <category term="正则表达式" scheme="https://zml3589110.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    <category term="replace" scheme="https://zml3589110.github.io/tags/replace/"/>
    
  </entry>
  
  <entry>
    <title>小熊派鸿蒙系统环境搭建</title>
    <link href="https://zml3589110.github.io/posts/1932715036.html"/>
    <id>https://zml3589110.github.io/posts/1932715036.html</id>
    <published>2023-12-04T02:04:01.986Z</published>
    <updated>2022-05-11T01:17:04.892Z</updated>
    
    <content type="html"><![CDATA[<h1 id="系统环境选择"><a href="#系统环境选择" class="headerlink" title="系统环境选择"></a>系统环境选择</h1><p>​</p><h3 id="引脚定义"><a href="#引脚定义" class="headerlink" title="引脚定义"></a>引脚定义</h3><table><thead><tr><th align="left">引脚</th><th align="left">符号</th><th align="left">I&#x2F;O类型</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">NC</td><td align="left">&#x2F;</td><td align="left">悬空不接，为了兼容其他模组</td></tr><tr><td align="left">2</td><td align="left">A_7</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_7，硬件PWM，IC Pin21</td></tr><tr><td align="left">3</td><td align="left">EN</td><td align="left">I&#x2F;O</td><td align="left">模组使能引脚，高电平有效，模组已上拉高电平，用户可外部控制该引脚</td></tr><tr><td align="left">4</td><td align="left">A_11</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_11，硬件PWM，IC Pin25</td></tr><tr><td align="left">5</td><td align="left">A_2</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_2，硬件PWM，IC Pin18</td></tr><tr><td align="left">6</td><td align="left">A_3</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_3，硬件PWM，IC Pin19</td></tr><tr><td align="left">7</td><td align="left">A_4</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_4，硬件PWM，IC Pin20</td></tr><tr><td align="left">8</td><td align="left">VCC</td><td align="left">P</td><td align="left">模组电源引脚（3.3V）</td></tr><tr><td align="left">9</td><td align="left">GND</td><td align="left">P</td><td align="left">电源参考地</td></tr><tr><td align="left">10</td><td align="left">A_12</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_12，硬件PWM，IC Pin26</td></tr><tr><td align="left">11</td><td align="left">A_16</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_16，UART_Log_TXD(用于打印模组内部信息)，可配置成普通GPIO</td></tr><tr><td align="left">12</td><td align="left">A_17</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_17，硬件PWM，IC Pin38</td></tr><tr><td align="left">13</td><td align="left">A_18</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_18，硬件PWM，IC Pin39</td></tr><tr><td align="left">14</td><td align="left">A_19</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_19，硬件PWM，IC Pin40</td></tr><tr><td align="left">15</td><td align="left">RXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_13，UART0_RXD（用户串口）</td></tr><tr><td align="left">16</td><td align="left">TXD</td><td align="left">I&#x2F;O</td><td align="left">GPIOA_14，UART0_TXD（用户串口）</td></tr></tbody></table><blockquote><p><strong>说明</strong>：P表示电源引脚，I&#x2F;O表示输入输出引脚。</p></blockquote>]]></content>
    
    
    <summary type="html">使用小熊派开发板(BEARPI-HM.Nano)搭建鸿蒙开发环境</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="鸿蒙" scheme="https://zml3589110.github.io/tags/%E9%B8%BF%E8%92%99/"/>
    
    <category term="C语言" scheme="https://zml3589110.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="小熊派" scheme="https://zml3589110.github.io/tags/%E5%B0%8F%E7%86%8A%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>收集好网站</title>
    <link href="https://zml3589110.github.io/posts/2614359431.html"/>
    <id>https://zml3589110.github.io/posts/2614359431.html</id>
    <published>2023-12-04T02:03:59.496Z</published>
    <updated>2022-05-04T07:19:23.338Z</updated>
    
    <content type="html"><![CDATA[<p>配置美化相关</p><p>hexo个人博客搭建（二）butterfly主题配置: <a href="https://blog.csdn.net/YR_112233/article/details/122778691">Link</a></p><p>图片显示相关<br>Hexo + Typora + 开发Hexo插件 解决图片路径不一致: <a href="https://moeci.com/posts/hexo-typora/">Link</a><br>Hexo引用显示本地图片: <a href="https://www.xilixili.net/2019/03/26/hexo-markdown-use-images/">Link</a><br>Hexo butterfly 自定义文章封面 &amp;&amp; 主页顶部图片更改: <a href="https://blog.csdn.net/qq_43857095/article/details/108306164">Link</a></p><p>部署相关<br>Hexo 部署到 Gitee: <a href="https://blog.csdn.net/qq_38157825/article/details/112783631">Link</a><br>Hexo阶段三 – 将Hexo部署到github: <a href="https://blog.csdn.net/Night__breeze/article/details/117607049">Link</a></p><p>导航栏相关<br>Hexo 修改导航栏、标签、分类、归档图标，一分钟搞定: <a href="https://blog.csdn.net/h_kaka/article/details/119655493">Link</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;配置美化相关&lt;/p&gt;
&lt;p&gt;hexo个人博客搭建（二）butterfly主题配置: &lt;a href=&quot;https://blog.csdn.net/YR_112233/article/details/122778691&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;图片显示相关&lt;br&gt;H</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zml3589110.github.io/posts/1243066710.html"/>
    <id>https://zml3589110.github.io/posts/1243066710.html</id>
    <published>2023-12-04T02:03:59.477Z</published>
    <updated>2022-05-04T07:19:23.317Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
