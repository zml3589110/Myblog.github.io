<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2023-10-30T13:05:49.081Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>蓝牙相关知识收集</title>
    <link href="https://zml3589110.github.io/posts/4036844216.html"/>
    <id>https://zml3589110.github.io/posts/4036844216.html</id>
    <published>2023-10-30T12:58:20.000Z</published>
    <updated>2023-10-30T13:05:49.081Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h1><ol><li><a href="https://blog.csdn.net/guoqx/article/details/129174436">蓝牙 - 如何在Windows下抓取蓝牙数据</a><br>首先，要在Windows上安装一个工具：Bluetooth Virtual Sniffer (btvs.exe)。<br>下载路径：</li></ol><p>访问：Get the Microsoft Bluetooth Test Platform software package - Windows drivers | Microsoft Learn</p><p>点击下载：<a href="https://download.microsoft.com/download/e/e/e/eeed3cd5-bdbd-47db-9b8e-ca9d2df2cd29/BluetoothTestPlatformPack-1.14.0.msi">https://download.microsoft.com/download/e/e/e/eeed3cd5-bdbd-47db-9b8e-ca9d2df2cd29/BluetoothTestPlatformPack-1.14.0.msi</a></p><p>下一步安装WireShark</p><p>在命令行终端里，运行btvs.exe程序。</p><p>c:\BTP\v1.14.0\x86&gt;btvs.exe -Mode Wireshark</p><p>然后就会启动Wireshark，开始抓取蓝牙数据。要抓取成功，要打开电脑的蓝牙功能，才会有数据出现。</p><ol start="2"><li><a href="https://blog.csdn.net/linan101/article/details/124007791">蓝牙 BLE 广播包信息解析</a><br>低功耗蓝牙 BLE 广播数据解析：</li></ol><p>低功耗蓝牙包含两类报文：广播报文 &amp; 数据报文；<br>在广播的时候使用3个信道，顺序广播；</p><p>广播包 有效数据部分 无效数据部分</p><h1 id="包解析"><a href="#包解析" class="headerlink" title="包解析"></a>包解析</h1><ol><li><a href="https://sleepingbug.blog.csdn.net/article/details/50628568">蓝牙4.0 BLE 广播包解析</a></li></ol><h1 id="阿里云蓝牙"><a href="#阿里云蓝牙" class="headerlink" title="阿里云蓝牙"></a>阿里云蓝牙</h1><ol><li><a href="https://help.aliyun.com/document_detail/173318.html">蓝牙BLE非交互式广播规范</a></li></ol><h1 id="C-蓝牙开发"><a href="#C-蓝牙开发" class="headerlink" title="C#蓝牙开发"></a>C#蓝牙开发</h1><ol><li><p><a href="https://blog.csdn.net/A244108451/article/details/128664207">使用C#进行蓝牙开发-接收BLE广播</a></p></li><li><p><a href="https://blog.csdn.net/allexw/article/details/129127168">使用C#进行低功耗蓝牙BLE开发</a></p></li><li><p><a href="https://www.jb51.net/article/273720.htm">C#连接蓝牙设备的实现示例</a></p></li><li><p><a href="https://blog.csdn.net/Ikaros_521/article/details/118700495">win10 蓝牙调试工具 Bluetooth LE Explorer 简单使用</a></p></li><li><p><a href="https://blog.csdn.net/code_long/article/details/105636398">C# ble 4.0 低能耗 蓝牙交互</a></p></li><li><p><a href="https://blog.csdn.net/shengfakun1234/article/details/110928783">Win10 平台C#与低功耗蓝牙BLE设备通信案例</a></p></li></ol><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">蓝牙知识合集</summary>
    
    
    
    <category term="蓝牙" scheme="https://zml3589110.github.io/categories/%E8%93%9D%E7%89%99/"/>
    
    <category term="抓包" scheme="https://zml3589110.github.io/categories/%E6%8A%93%E5%8C%85/"/>
    
    <category term="Wireshark" scheme="https://zml3589110.github.io/categories/Wireshark/"/>
    
    <category term="Bluetooth Test Platform" scheme="https://zml3589110.github.io/categories/Bluetooth-Test-Platform/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/C/"/>
    
    
    <category term="蓝牙知识" scheme="https://zml3589110.github.io/tags/%E8%93%9D%E7%89%99%E7%9F%A5%E8%AF%86/"/>
    
    <category term="抓包" scheme="https://zml3589110.github.io/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Homeassistant环境Docker配置</title>
    <link href="https://zml3589110.github.io/posts/1724428249.html"/>
    <id>https://zml3589110.github.io/posts/1724428249.html</id>
    <published>2023-10-30T09:10:20.000Z</published>
    <updated>2023-10-30T09:22:31.443Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu下使用docker"><a href="#Ubuntu下使用docker" class="headerlink" title="Ubuntu下使用docker"></a>Ubuntu下使用docker</h1><ol><li><p><a href="https://blog.csdn.net/Tester_muller/article/details/131440306">最详细的ubuntu 安装 docker教程</a></p></li><li><p><a href="https://blog.csdn.net/root_1314/article/details/128050433">Ubuntu-卸载Docker</a></p></li></ol><h2 id="安装hass"><a href="#安装hass" class="headerlink" title="安装hass"></a>安装hass</h2><ol><li><p><a href="https://blog.csdn.net/qq_41830158/article/details/131605397">docker安装Homeassist</a></p></li><li><p><a href="https://www.fastboard.cn/150/">Home Assistant基本搭建(Docker方式)</a></p></li></ol><p><strong>根据这个安装hass成功</strong></p><ol><li><a href="https://blog.51cto.com/u_16175446/7071164">ubuntu docker 安装homeassistant</a></li></ol><p>安装HomeAssistant<br>在安装HomeAssistant之前，我们需要先创建一个Docker容器来运行HomeAssistant。以下是整个安装过程的步骤：</p><p>步骤描述<br>1拉取HomeAssistant镜像<br>2创建HomeAssistant容器<br>3配置HomeAssistant<br>步骤1：拉取HomeAssistant镜像<br>首先，我们需要从Docker Hub上拉取HomeAssistant的镜像。HomeAssistant的官方镜像名称是homeassistant&#x2F;home-assistant。执行以下命令来拉取镜像：</p><p>docker pull homeassistant&#x2F;home-assistant<br>1.<br>步骤2：创建HomeAssistant容器<br>完成镜像的拉取后，我们可以通过创建一个Docker容器来运行HomeAssistant。为了方便管理，我们可以给容器起一个有意义的名称，并将一些配置文件和数据文件挂载到容器内部。执行以下命令来创建容器：</p><p>docker run -d –name&#x3D;homeassistant <br>  –restart unless-stopped <br>  -v &#x2F;path&#x2F;to&#x2F;config:&#x2F;config <br>  -v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro <br>  –network&#x3D;host <br>  homeassistant&#x2F;home-assistant<br>上述命令中的参数解释如下：</p><p>-d：表示以后台模式运行容器<br>–name&#x3D;homeassistant：给容器起一个名称，这里使用homeassistant<br>–restart unless-stopped：设置容器在退出后自动重新启动<br>-v &#x2F;path&#x2F;to&#x2F;config:&#x2F;config：将配置文件挂载到容器的&#x2F;config目录下，其中&#x2F;path&#x2F;to&#x2F;config是你本地存放HomeAssistant配置文件的路径<br>-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime:ro：将宿主机的时区挂载到容器中，确保时间同步<br>–network&#x3D;host：使用主机网络模式，使得HomeAssistant能够访问本地网络设备<br>homeassistant&#x2F;home-assistant：此为之前拉取的HomeAssistant镜像名称<br>步骤3：配置HomeAssistant<br>现在，我们已经成功创建了HomeAssistant容器。接下来，我们需要进行一些配置，以便访问和管理HomeAssistant。以下是几个重要的配置项：</p><p>Web界面访问：HomeAssistant的Web界面默认监听在8123端口，使用浏览器访问<a href="http://localhost:8123即可进入界面。">http://localhost:8123即可进入界面。</a><br>配置文件：容器中的配置文件位于&#x2F;config目录下，你可以通过编辑本地配置文件来修改HomeAssistant的配置。<br>插件安装：HomeAssistant支持通过插件来扩展功能，你可以在Web界面的”插件商店”中安装和管理插件。</p><h1 id="整合部分"><a href="#整合部分" class="headerlink" title="整合部分"></a>整合部分</h1><ol><li><a href="https://ranlychan.top/archives/489.html">物联网 | HASS+MQTT+树莓派室内监测小型物联网系统</a></li></ol><h1 id="配置hass下的yaml文件"><a href="#配置hass下的yaml文件" class="headerlink" title="配置hass下的yaml文件"></a>配置hass下的yaml文件</h1><p><strong>通过这个办法找到yaml文件啦</strong></p><ol><li><a href="https://www.bilibili.com/read/cv14045974/">怎样修改homeassistant 的配置文件configuration.yaml</a><br>二．直接连接容器修改<br>1.通过ssh连接修改(使用的是这个)<br>     sudo docker exec -it homeassistant bash<br>    vi configuration.yaml<br>2.vnc 连接修改<br>   进入 &#x2F;usr&#x2F;share&#x2F;hassio&#x2F;homeassistant文件夹找configuration.yaml<br>3.通过破portainer连接修改<br>    vi configuration.yaml</li></ol><p><strong>参考这个修改实体成功</strong><br>2. <a href="https://blog.csdn.net/weixin_61908666/article/details/130186243">homeassistant配置MQTT集成以及传感器实体（STM32连接进入homeassistant）</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">各种HASS相关内容收集呀</summary>
    
    
    
    <category term="ubuntu" scheme="https://zml3589110.github.io/categories/ubuntu/"/>
    
    <category term="hass" scheme="https://zml3589110.github.io/categories/hass/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="智能家居" scheme="https://zml3589110.github.io/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="Homeassistant" scheme="https://zml3589110.github.io/tags/Homeassistant/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu文件压缩、解压缩等操作</title>
    <link href="https://zml3589110.github.io/posts/2452845339.html"/>
    <id>https://zml3589110.github.io/posts/2452845339.html</id>
    <published>2023-10-17T00:36:20.000Z</published>
    <updated>2023-10-17T02:22:55.416Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打包、压缩、解压缩-Lnux需先打包成一个文件再压缩"><a href="#打包、压缩、解压缩-Lnux需先打包成一个文件再压缩" class="headerlink" title="打包、压缩、解压缩(Lnux需先打包成一个文件再压缩)"></a>打包、压缩、解压缩(Lnux需先打包成一个文件再压缩)</h1><p>在具体总结各类压缩文件之前，首先要弄清两个概念：打包和压缩。</p><p>打包是指将一大堆文件或目录什么的变成一个总的文件，压缩则是将一个大的文件通过一些压缩算法变成一个小文件。为什么要区分这两个概念呢？其实这源于Linux中的很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你就得先借助另外的工具将这一大堆文件先打成一个包，然后再就原来的压缩程序进行压缩。</p><p>Linux下最常用的打包程序就是tar了，使用tar程序打出来的包我们常称为tar包，tar包文件的命令通常都是以.tar结尾的。生成tar包后，就可以用其它的程序来进行压缩了。</p><p><img src="https://img-blog.csdnimg.cn/709ccabc1f6949d488eec8d0925544ad.png"></p><h2 id="课堂笔记-tar既能打包又能解压缩"><a href="#课堂笔记-tar既能打包又能解压缩" class="headerlink" title="课堂笔记(tar既能打包又能解压缩)"></a>课堂笔记(tar既能打包又能解压缩)</h2><img src="https://img-blog.csdnimg.cn/709ccabc1f6949d488eec8d0925544ad.png"><img src="https://img-blog.csdnimg.cn/2c517ed25b014ad8a9c52c0147af2bd1.png"><img src="https://img-blog.csdnimg.cn/d53dc1dfb3f24c11b5f1e9d272853263.png"><p><strong>上面笔记中打包顺序写反了：tar - vcf test.tar test</strong></p><img src="https://img-blog.csdnimg.cn/ba8e0dd368e645e7aebb93bc1b8b2c99.png"><p><strong>tar提供打包解包的同时还具有压缩和解压缩功能：</strong></p><img src="https://img-blog.csdnimg.cn/b44a581f7de9455bb5037a6beebe4bff.png"><img src="https://img-blog.csdnimg.cn/13723a96f7b348b5a2969aed4e033b26.png"><p><strong>注意：不好用的时候，把参数Z去掉，或者你文件从Windows传到虚拟机有问题。</strong></p><img src="https://img-blog.csdnimg.cn/80d88168445c4d08a6a767dbfc04f3b2.png"><h1 id="打包解包-带软链接"><a href="#打包解包-带软链接" class="headerlink" title="打包解包(带软链接)"></a>打包解包(带软链接)</h1><img src="https://img-blog.csdnimg.cn/b5315f38e46542ebbb51724d0a836496.png"><p><strong>解包提示有问题的话，直接用 tar -vxf test.tar 解包软链接也生效。</strong></p><h2 id="1-拷贝文件-带软链接"><a href="#1-拷贝文件-带软链接" class="headerlink" title="1.拷贝文件(带软链接)"></a>1.拷贝文件(带软链接)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -d dep/libs/*  到开发板的/usr/lib下</span><br></pre></td></tr></table></figure><h2 id="2-拷贝文件夹"><a href="#2-拷贝文件夹" class="headerlink" title="2.拷贝文件夹"></a>2.拷贝文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r certs  到开发板的/mnt/user_data/iot_data下</span><br></pre></td></tr></table></figure><h2 id="3-命令实现"><a href="#3-命令实现" class="headerlink" title="3.命令实现"></a>3.命令实现</h2><p><strong>解包 .tar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf FileName.tar</span><br></pre></td></tr></table></figure><p><strong>打包.tar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf FileName.tar DirName  <span class="comment"># tar是打包，不是压缩！</span></span><br></pre></td></tr></table></figure><p><strong>解压.tar.gz 和 .tgz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf FileName.tar.gz</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.gz 和 .tgz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf FileName.tar.gz DirName</span><br></pre></td></tr></table></figure><p><strong>解压.zip：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip FileName.zip</span><br></pre></td></tr></table></figure><p><strong>压缩.zip：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r FileName.zip DirName</span><br></pre></td></tr></table></figure><p>-r 表示递归</p><p><strong>解包.tgz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf FileName.tgz</span><br></pre></td></tr></table></figure><p><strong>解压.gz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip FileName.gz</span><br></pre></td></tr></table></figure><p><strong>解压.gz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip -d FileName.gz</span><br></pre></td></tr></table></figure><p><strong>压缩.gz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip FileName</span><br></pre></td></tr></table></figure><p><strong>解压.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -d FileName.bz2</span><br></pre></td></tr></table></figure><p><strong>解压.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bunzip2 FileName.bz2</span><br></pre></td></tr></table></figure><p><strong>压缩.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -z FileName</span><br></pre></td></tr></table></figure><p><strong>解压.tar.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -jxvf FileName.tar.bz2</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.bz2：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar- jcvf FileName.tar.bz2 DirName</span><br></pre></td></tr></table></figure><p><strong>解压.bz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -d FileName.bz</span><br></pre></td></tr></table></figure><p><strong>解压.bz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bunzip2 FileName.bz</span><br></pre></td></tr></table></figure><p><strong>解压.tar.bz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar jxvf FileName.tar.bz</span><br></pre></td></tr></table></figure><p><strong>.tar.xz 这是两层压缩，外面是xz压缩方式，里层是tar压缩</strong><br>所以可以分两步实现解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ xz -d filename.tar.xz</span><br><span class="line">$ tar -xvf filename.tar</span><br></pre></td></tr></table></figure><p><strong>也可以直接解压</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xvJf filename.tar.xz</span><br><span class="line">or</span><br><span class="line">tar -Jxf filename.tar.xz</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.xz：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -Jcf filename.tar.xz filename</span><br></pre></td></tr></table></figure><p><strong>解压.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uncompress FileName.Z</span><br></pre></td></tr></table></figure><p><strong>压缩.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compress FileName</span><br></pre></td></tr></table></figure><p><strong>解压.tar.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -Zxvf FileName.tar.Z</span><br></pre></td></tr></table></figure><p><strong>压缩.tar.Z：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar Zcvf FileName.tar.Z DirName</span><br></pre></td></tr></table></figure><p><strong>解压.rar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rar -x FileName.rar</span><br></pre></td></tr></table></figure><p><strong>压缩.rar：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rar -a FileName.rar DirName</span><br></pre></td></tr></table></figure><p><strong>解压.lha：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lha -e FileName.lha</span><br></pre></td></tr></table></figure><p><strong>压缩.lha：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lha -a FileName.lha FileName</span><br></pre></td></tr></table></figure><p><strong>解包.rpm：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm2cpio FileName.rpm | cpio -div</span><br></pre></td></tr></table></figure><p><strong>解包.deb：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar p FileName.deb data.tar.gz | tar -zxf </span><br></pre></td></tr></table></figure><p><strong>解压.tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sEx x FileName.*</span><br></pre></td></tr></table></figure><p><strong>压缩.tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sEx a FileName.* FileName</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/zhuguanlin121/article/details/118726551">Ubuntu文件压缩、解压缩、打包解包(带软链接)、拷贝文件(带软链接)、拷贝文件夹</a></li><li><a href="https://blog.csdn.net/weixin_45309916/article/details/107791294">Ubuntu 命令解压文件大全</a></li><li><a href="https://blog.csdn.net/ji519974770/article/details/81916468">打包和压缩的概念和区别</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Ubuntu文件压缩、解压缩、打包解包(带软链接)、拷贝文件(带软链接)、拷贝文件夹</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="zar" scheme="https://zml3589110.github.io/categories/zar/"/>
    
    <category term="文件管理" scheme="https://zml3589110.github.io/categories/%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="zar" scheme="https://zml3589110.github.io/tags/zar/"/>
    
    <category term="压缩" scheme="https://zml3589110.github.io/tags/%E5%8E%8B%E7%BC%A9/"/>
    
    <category term="解压" scheme="https://zml3589110.github.io/tags/%E8%A7%A3%E5%8E%8B/"/>
    
    <category term="软链接" scheme="https://zml3589110.github.io/tags/%E8%BD%AF%E9%93%BE%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>HEXO打包到github报错</title>
    <link href="https://zml3589110.github.io/posts/3701598706.html"/>
    <id>https://zml3589110.github.io/posts/3701598706.html</id>
    <published>2023-07-08T06:29:20.000Z</published>
    <updated>2023-07-08T06:37:18.267Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>在文章写好之后打包静态网页并发送到github中时，提示一下错误<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</p><p>一度以为ssh导致问题，重新创建几次都不成功<br>而且也已经放弃使用了一段时间</p><p>直到今天想重新安装esp8266环境时才想起</p><p>然后各种找原因，各种尝试</p><p>最终在这篇文章下找到了答案</p><p>就是把 C:\Users\Administrator.ssh\known_hosts 文件删除就行</p><h1 id="解决参考"><a href="#解决参考" class="headerlink" title="解决参考"></a>解决参考</h1><p>本地ubuntu20.04 通过ssh连接腾讯云 云主机ubuntu20.04出现以下提示</p><p>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @<br>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@<br>IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!<br>Someone could be eavesdropping on you right now (man-in-the-middle attack)!<br>It is also possible that a host key has just been changed.<br>The fingerprint for the ECDSA key sent by the remote host is<br>SHA256:lWEJCiuk2DsPYdodOxj8w7WFY3b+RF+9f5ns.<br>Please contact your system administrator.<br>Add correct host key in &#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts to get rid of this message.<br>Offending ECDSA key in &#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts:6<br>  remove with:<br>  ssh-keygen -f “&#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts” -R “43.<em><strong>.</strong>.</em><strong>“<br>ECDSA host key for 43.</strong><em>.**.*</em> has changed and you have requested strict checking.<br>Host key verification failed.</p><p>将known_hosts文件删除就行了,看它的提示，文件位置在哪里，改成你的文件位置即可。</p><p>rm -rf &#x2F;home&#x2F;su&#x2F;.ssh&#x2F;known_hosts<br>然后出现</p><p>Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?<br>敲yes就行了，然后输入你的密码即可。</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/crazytire/article/details/125964956">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! 解决办法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">hexo文章推送时报错 IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</summary>
    
    
    
    <category term="gihub" scheme="https://zml3589110.github.io/categories/gihub/"/>
    
    <category term="ssh" scheme="https://zml3589110.github.io/categories/gihub/ssh/"/>
    
    <category term="known_hosts" scheme="https://zml3589110.github.io/categories/known-hosts/"/>
    
    
    <category term="HEXO" scheme="https://zml3589110.github.io/tags/HEXO/"/>
    
    <category term="github" scheme="https://zml3589110.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu使用minicom串口工具</title>
    <link href="https://zml3589110.github.io/posts/2500108762.html"/>
    <id>https://zml3589110.github.io/posts/2500108762.html</id>
    <published>2023-03-28T06:56:20.000Z</published>
    <updated>2023-03-28T07:17:02.830Z</updated>
    
    <content type="html"><![CDATA[<h1 id="linux查看usb转串口设备使用的端口号"><a href="#linux查看usb转串口设备使用的端口号" class="headerlink" title="linux查看usb转串口设备使用的端口号"></a>linux查看usb转串口设备使用的端口号</h1><p><strong>查看使用的端口号：</strong></p><img src="https://img-blog.csdnimg.cn/20210613112924873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY3MzYwMw==,size_16,color_FFFFFF,t_70"><p><strong>也可以输入以下命令查看：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /dev/ttyUSB*</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210613114213709.png"><p><strong>可以看到有几个设备挂载。</strong></p><p>设置端口号：<br>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo minicom -s</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210613113046237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY3MzYwMw==,size_16,color_FFFFFF,t_70"><p>运行代码：<br>完成</p><h1 id="退出方法"><a href="#退出方法" class="headerlink" title="退出方法"></a>退出方法</h1><p>1）需使用Ctrl+a 进入设置状态<br>2）按z进入设置菜单<br>（1）S键：发送文件到目标系统中；<br>（2）W键：自动卷屏。当显示的内容超过一行之後，自动将後面的内容换行。这个功能在查看内核的啓动信息时很有用。<br>（3）C键：清除屏幕的显示内容；<br>（4）B键：浏览minicom的历史显示；<br>（5）X键：退出mInicom，会提示确认退出。</p><h1 id="minicom常用指令"><a href="#minicom常用指令" class="headerlink" title="minicom常用指令"></a>minicom常用指令</h1><p>因为现在电脑基本不配备串行接口，所以，usb转串口成为硬件调试时的必然选择。目前知道的，PL2303的驱动是有的，在dev下的名称是ttyUSB#。</p><p>minicom，tkterm都是linux下应用比较广泛的串口软件，这里简单介绍minicom使用。</p><p>一，安装</p><p>debian 系，比如 ubuntu、mint等：</p><p>sudo apt-get install minicom</p><p>二，配置</p><p>首先，查看串口设备是否可用。linux下的所有操作面向用户的都是文件操作，在对串口操作之前，我们应该先确认自己对该文件有没有读写权限。</p><p>ls -l &#x2F;dev&#x2F;ttyUSB*</p><p>linux下的usb串口命名为ttyUSB，运行上面命令，可以看到有几个设备挂载。</p><p>我们这里是：</p><p>crw-rw—- 1 root dialout 188, 0 Apr 10 17:10 &#x2F;dev&#x2F;ttyUSB0</p><p>只有ttuUSB0.</p><p>但是正如上面显示，ttyUSB0这个设备是root所有的，所以，我们以普通用户身份打开minicom是没法访问该文件的。</p><p>然后，运行$ sudo minicom -s ， 设置串口。</p><p>进入minicom的配置界面，使用上下键选择Serial port setup，回车。此时光标在“change which setting”后面停留，它的上面有如下菜单：</p><p>Serial port setup [Enter]+————————————————————-+</p><p>| A – Serial Device : &#x2F;dev&#x2F;ttyUSB0 |</p><p>| B – Lockfile Location : &#x2F;var&#x2F;lock |</p><p>| C – Callin Program : |</p><p>| D – Callout Program -: |</p><p>| E – Bps&#x2F;Par&#x2F;Bits : 115200 8N1 |</p><p>| F – Hardware Flow Control : No |</p><p>| G – Software Flow Control : No |</p><p>| |</p><p>| Change which setting? |</p><p>+————————————————————-+</p><p>我们只需输入上面对应的字母，就可以进如相应的菜单进行设置。设置完成，回车，光标会回到“change which setting”后面，如此重复。完成按回车返回主菜单即可。</p><p>注意：如果不是 USB 转串口，而是直接使用串口，那么 Serial Device 要配置为 &#x2F;dev&#x2F;ttyS0(具体哪个设备，系统不同名字不同，如果你不知道，那就看你运气了)。</p><p>返回主菜单后，选择“Save setup as dfl”，将其保存为默认设置，然后选择 Exit 退出，注意，不是退出 minicom。</p><p>三，使用</p><p>如果上面设置顺利，重新给开发板上电后，此时，窗口里就有信息打印出来了。minicom基本操作如下：</p><p>1)组合键 Ctrl+a 进入设置状态；</p><p>2)按 z 打开帮助菜单，或者你用的熟练的话，直接输入菜单对应的字母即可；</p><p>(1)S键：发送文件到目标系统中；</p><p>(2)W键：自动卷屏。当显示的内容超过一行之後，自动将後面的内容换行。这个功能在查看内核的啓动信息时很有用。</p><p>(3)C键：清除屏幕的显示内容；</p><p>(4)B键：浏览minicom的历史显示；</p><p>(5)X键：退出mInicom，会提示确认退出。</p><ol start="3"><li>比如，使用 Ctrl-A–&gt;O 进入 minicom 配置菜单：</li></ol><p>+—–[configuration]——+</p><p>| Filenames and paths |</p><p>| File transfer protocols -|</p><p>| Serial port setup |</p><p>| Modem and dialing |</p><p>| Screen and keyboard |</p><p>| Save setup as dfl |</p><p>| Save setup as.. |</p><p>| Exit |</p><p>+————————–+</p><p>我们可以配置使用 Ctrl-A-S 发送文件时的默认路径，可选择”Filenames and paths”进行配置：</p><p>+———————————————————————–+</p><p>| A – Download directory : &#x2F;home&#x2F;crliu |</p><p>| B – Upload directory : &#x2F;tmp |</p><p>| C – Script directory : |</p><p>| D – Script program : runscript |</p><p>| E – Kermit program : |</p><p>| F – Logging options |</p><p>| |</p><p>| Change which setting? |</p><p>+———————————————————————–+</p><p>如上，A – download 下载文件的存放位置(开发板 —&gt; PC, rz)开发板上的文件将被传输到PC机上的&#x2F;home&#x2F;crliu目录下。</p><p>B – upload 从此处读取上传的文件(PC —&gt; 开发板, sz)PC机向开发板发送文件，需要发送的文件在&#x2F;tmp目录下(PC机上的目录)。</p><p>四，其他技巧</p><p>启动 minicom 的时候，会检测 MINICOM 环境变量，将它们作为命令参数，如果命令中指定了某个参数，那么这个 MINICOM 中的相应的某个参数会被替换。</p><p>我们在 ~&#x2F;.bashrc 文件中添加这一行，使得 minicom 默认每次都进入彩色模式，并自动进入串口配置：</p><p>export MINICOM&#x3D;’-s -c on’</p><p>The configuration 参数更有趣。通常，minicom从文件“minirc.dfl”中获取其缺省值。不过，若你给minicom一个参数，它将尝试从文件“minirc.configuration”中获取缺省值。因此，为不同端口、不同用户等创建多个配置文件是可能的。最好使用设备名，如：tty1， tty64，sio2等。如果用户创建了自己的配置文件，那么该文件将以“.minirc.dfl”为名出现在他的home目录中。</p><p>minicom的全局配置文件通常在&#x2F;etc&#x2F;minirc.dfl. minicom将其配置文件保存在一个目录中，通常是：&#x2F;var&#x2F;lib&#x2F;minicom, &#x2F;usr&#x2F;local&#x2F;etc或者&#x2F;etc。要想知道minicom编译时内定的缺省目录，可用命令“minicom -h”，在那儿你可能还会找到runscript(1) 的demo文件。</p><p>配置文件的文件名格式：minirc.user。minicom默认加载配置文件minirc.df1，但你也可以仿照minirc.df1编辑自己的配置文件minirc.user，输入minicom user启动时则加载minirc.user。如在本机上，我做了一个minirc.root，输入minicom root 启动minicom，则系统自动加载&#x2F;etc&#x2F;minirc.root中的配置。</p><p>$HOME&#x2F;.minirc.*</p><p>$HOME&#x2F;.dialdir</p><p>$HOME&#x2F;minicom.log</p><p>&#x2F;usr&#x2F;share&#x2F;locale&#x2F;*&#x2F;LC_MESSAGES&#x2F;minicom.mo</p><p>*命令行启动minicom的参数</p><p>更多的参数，参见”man minicom”的输出。</p><p>-s</p><p>设置。 root 使用此选项在&#x2F;etc&#x2F;minirc.dfl中编辑系统范围的缺省值。使用此参数后，minicom 将 不 进行初始化， 而是直接进入配置菜单。如果因为你的系统被改变，或者第一次运行minicom时，minicom不能启动，这个参数就会很有用。对于多数系统，已经内定了比较合适的缺省值。</p><p>-o</p><p>不进行初始化。minicom 将跳过初始化代码。如果你未复位(reset)就退出了minicom，又想重启一次会话(session)，那么用这个选项就比较爽(不会再有错误提示：modem is locked —- 注)。但是也有潜在的危险：由于未对lock文件等进行检查，因此一般用户可能会与uucp之类的东东发生冲突……也许以后这个参数会被去掉。现在姑且假定，使用modem的用户对自己的行为足够负责。</p><p>-m</p><p>用Meta或Alt键重载命令键。在1.80版中这是缺省值，也可以在minicom 菜单中配置这个选项。不过若你一直使用不同的终端，其中有些没有Meta或Alt键，那么方便的做法还是把缺省的命令键设置为Ctrl-A，当你有了支持 Meta或Alt键的键盘时再使用此选项。Minicom假定你的Meta键发送ESC前缀，而不是设置字符最高位的那一种(见下)。</p><p>-M</p><p>跟“-m”一样，但是假定你的Meta键设置字符高端的第八位(发送128+字符代码)。</p><p>-z</p><p>使用终端状态行。仅当终端支持，并且在其termcap或terminfo<a href="https://cloud.tencent.com/solution/database?from=10680">数据库</a>入口中有相关信息时才可用。</p><p>-l</p><p>逐字翻译 高位被置位的字符。使用此标志， minicom将不再尝试将IBM行字符翻译为ASCII码，而是将其直接传送。许多PC-Unix克隆不经翻译也能正确显示它们(Linux使用专门的模式：Coherent和Sco)。</p><p>-w</p><p>在启动的时候就自动换行，这样启动之后不用运行 w进行设置了，详细参考后面。</p><p>-a</p><p>特性使用。 有些终端，特别是televideo终端， 有个很讨厌的特性处理(串行而非并行)。minicom缺省使用‘-a on’，但若你在用这样的终端，你就可以(必须!)加上选项‘-a off’。尾字‘on’或‘off’需要加上。</p><p>-t</p><p>终端类型。使用此标志， 你可以重载环境变量TERM， 这在环境变量MINICOM 中使用很方便； 你可以创建一个专门的 termcap 入口以备minicom 在控制台上使用，它将屏幕初始化为raw模式， 这样，连同‘-l’标志一起，就可以不经翻译而显示IBM行字符。</p><p>-c</p><p>颜色使用。些终端(如Linux控制台)支持标准ANSI转义序列色彩。由于termcap显然没有对于色彩的支持，因而minicom 硬性内置了这些转义序列的代码。所以此选项缺省为off。使用‘-c on’可以打开此项。把这个标志，还有‘-m’放入MINICOM环境变量中是个不错的选择。</p><p>-S</p><p>脚本。 启动时执行给定名字的脚本。到目前为止，还不支持将用户名和口令传送给启动脚本。如果你还使用了‘-d’选项，以在启动时开始拨号，此脚本将在拨号之前运行，拨号项目入口由‘-d’指明。</p><p>-p</p><p>要使用的伪终端。 它超载配置文件中定义的终端端口，但仅当其为伪tty设备。提供的文件名必须采用这样的形式：(&#x2F;dev&#x2F;)tty[p-z][0-f]</p><p>-C</p><p>文件名。 启动时打开捕获文件。</p><p>-8</p><p>不经修改地传送8位字符。“连续”意指未对地点&#x2F;特性进行真正改变，就不插入地点&#x2F;特性控制序列。此模式用于显示8位多字节字符，比如日本字(TMD！应该是中国字!!)。不是8位字符的语言都需要(例如显示芬兰文字就不需要这个)。</p><h1 id="linux-查看所有USB端口"><a href="#linux-查看所有USB端口" class="headerlink" title="linux 查看所有USB端口"></a>linux 查看所有USB端口</h1><p>1、查看串口是否可用</p><p>可以对串口发送数据比如对com1口，echo &#x2F;dev&#x2F;ttyS0</p><p>2、查看串口名称使用</p><p>ls -l &#x2F;dev&#x2F;ttyS*</p><p>一般情况下串口的名称全部在dev下面，如果你没有外插串口卡的话默认是dev下的ttyS*,一般ttyS0对应com1，ttyS1对应com2，当然也不一定是必然的；</p><p>3、查看串口驱动</p><p>cat&#x2F;proc&#x2F;tty&#x2F;drivers&#x2F;serial</p><p>4、查看串口设备</p><p>dmesg | grep ttyS*</p><p>5、查一下板子上的串口有没有设备</p><p>grep tty&#x2F;proc&#x2F;devices</p><p>如果有ttyS设备，再看&#x2F;dev&#x2F;有没有ttyS*，如没有就建立一个：mknod &#x2F;dev&#x2F;ttyS0 c 4 64</p><p>如果板子的设备中没有标准串口设备ttyS0，也没有ttySAC0。&#x2F;dev下应该有一个USB串口：&#x2F;dev&#x2F;ttyUSB0.</p><p>当一个串行卡或数据卡被侦测到时，它会被指定成为第一个可用的串行设备。通常是&#x2F;dev&#x2F;ttyS1(cua1)或&#x2F;dev&#x2F;ttyS2(cua2)，这完成看原已内建的串口数目。ttyS*设备会被报告在&#x2F;var&#x2F;run&#x2F;stab内。</p><p>PC上的串口一般是ttyS，板子上Linux的串口一般叫做ttySAC</p><p>补充:</p><p>如果需要查看这个串口设备输出</p><p>cat ttyUSB0</p><p>如果需要对这个设备输入</p><p>echo aaaaa&gt;ttyUSB0</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/weixin_43673603/article/details/117871650">linux查看usb转串口设备使用的端口号</a></li><li><a href="https://blog.csdn.net/jhyworkspace/article/details/53572284">minicom退出方法</a></li><li><a href="https://cloud.tencent.com/developer/article/2070441">minicom指令_Minicom 使用初步</a></li><li><a href="https://blog.csdn.net/weixin_34489089/article/details/116677110">linux 查看所有USB端口,linux查看所有串口和usb设备方法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Ubuntu开启Samba服务，主要是针对esp32编译环境需要软链接，之前用虚拟机共享出现Windows没有软链接功能导致异常</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="minicom" scheme="https://zml3589110.github.io/categories/minicom/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="串口" scheme="https://zml3589110.github.io/tags/%E4%B8%B2%E5%8F%A3/"/>
    
    <category term="minicom" scheme="https://zml3589110.github.io/tags/minicom/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu烧录下载时找不到USB0报错</title>
    <link href="https://zml3589110.github.io/posts/3713584928.html"/>
    <id>https://zml3589110.github.io/posts/3713584928.html</id>
    <published>2023-03-28T06:45:20.000Z</published>
    <updated>2023-03-28T07:17:02.839Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ESP编译好后下载时发现找不到端口"><a href="#ESP编译好后下载时发现找不到端口" class="headerlink" title="ESP编译好后下载时发现找不到端口"></a>ESP编译好后下载时发现找不到端口</h1><p>问题:<br>在linux环境，使用esp32 MDK进行烧录程序时， 当执行到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">idf.py -p dev/ttfUSB0 flash</span><br></pre></td></tr></table></figure><p>时候报错，无法操作。</p><h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><p>只有root用户和属于dialout组的用户会有读写权限</p><h2 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h2><p>该方法重启就会失效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>永久生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG dialout user //user替换为自己的用户名</span><br></pre></td></tr></table></figure><h2 id="reboot-x2F-x2F-必须要重启一下才会生效"><a href="#reboot-x2F-x2F-必须要重启一下才会生效" class="headerlink" title="reboot &#x2F;&#x2F;必须要重启一下才会生效"></a>reboot &#x2F;&#x2F;必须要重启一下才会生效</h2><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/amimax/article/details/128244634">【问题解决】ESP32报错：could not open port &#x2F;dev&#x2F;ttyUSB0: [Errno 13] Permission denied: ‘&#x2F;dev&#x2F;ttyUSB0</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP下载程序时报错 could not open port /dev/ttyUSB0</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="烧录" scheme="https://zml3589110.github.io/tags/%E7%83%A7%E5%BD%95/"/>
    
    <category term="USB0" scheme="https://zml3589110.github.io/tags/USB0/"/>
    
  </entry>
  
  <entry>
    <title>ESP32环境(Ubuntu) 问题集锦</title>
    <link href="https://zml3589110.github.io/posts/2527818842.html"/>
    <id>https://zml3589110.github.io/posts/2527818842.html</id>
    <published>2023-03-27T08:12:20.000Z</published>
    <updated>2023-03-27T08:45:04.354Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装好环境后报错"><a href="#安装好环境后报错" class="headerlink" title="安装好环境后报错"></a>安装好环境后报错</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fatal: 不是 git 仓库：’/home/geeloong/esp/esp-idf/.git’</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;cmake&quot;</span> must be available on the PATH to use idf.py</span><br></pre></td></tr></table></figure><p><strong>解决办法:</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">sudo apt install cmake</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/Aspiration_H/article/details/124168414">ESP32开发环境搭建，Linux，SDK，IDF，Ubuntu，乐鑫</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Ubuntu下搭建ESP32开发环境时遇到的问题收集</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="文件共享" scheme="https://zml3589110.github.io/categories/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="开发环境" scheme="https://zml3589110.github.io/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
    <category term="安装问题" scheme="https://zml3589110.github.io/tags/%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>通过HOMEKIT让ESP8266控制继电器</title>
    <link href="https://zml3589110.github.io/posts/442091668.html"/>
    <id>https://zml3589110.github.io/posts/442091668.html</id>
    <published>2023-03-25T08:13:20.000Z</published>
    <updated>2023-03-27T00:14:26.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）"><a href="#ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）" class="headerlink" title="ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）"></a>ESP8266控制继电器（支持HOMEKIT，无需homebridge，可用SIRI控制）</h1><p><strong>首先感谢：</strong><br><a href="https://github.com/RavenSystem/esp-homekit-devices">https://github.com/RavenSystem/esp-homekit-devices</a><br><a href="https://github.com/Gruppio/Sonoff-Homekit">https://github.com/Gruppio/Sonoff-Homekit</a><br>主要设备：ESP8266、1路5V继电器、杜邦线若干。</p><img src="https://img-blog.csdnimg.cn/20190113140601235.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190113140616914.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190113140633662.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>下面开始进入正题：</p><h2 id="开始给ESP8266刷固件"><a href="#开始给ESP8266刷固件" class="headerlink" title="开始给ESP8266刷固件"></a>开始给ESP8266刷固件</h2><p><a href="https://pan.baidu.com/s/1Xp3CvFbdh4McnkBIacfsuQ">https://pan.baidu.com/s/1Xp3CvFbdh4McnkBIacfsuQ</a> （固件自取）<br>本次采用esptool.py来刷鞋固件，所以需要给电脑安装python环境。</p><h2 id="安装esptool-py"><a href="#安装esptool-py" class="headerlink" title="安装esptool.py"></a>安装esptool.py</h2><p>pip install esptool<br>切换到python的安装路径不知道在哪的输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">where</span> python</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20190113142401883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p><strong>cd &#x2F;python路径 切换到python安装目录，在此目录下放上我们要刷写的固件</strong></p><img src="https://img-blog.csdnimg.cn/20190113142724432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>好，开始用micro-USB线将ESP8266连接到计算机（如果不识别自行安装CH340驱动）记住端口号，我的是COM3</p><img src="https://img-blog.csdnimg.cn/20190113143206883.png"><h2 id="先清空flash"><a href="#先清空flash" class="headerlink" title="先清空flash"></a>先清空flash</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py --port COM3 erase_flash</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/2019011314341874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><h2 id="刷入固件"><a href="#刷入固件" class="headerlink" title="刷入固件"></a>刷入固件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esptool.py -p COM3 -b 115200 write_flash -fs 1MB -fm dout -ff 40m 0x0 rboot.bin 0x1000 blank_config.bin 0x2000 Sonoff_ON.bin</span><br></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20190113143825879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>**到这里固件已经刷入完成，搜索WIFI看到名为Switch-****<strong>的SSID，连接上后进入192.168.4.1进行设置为其连接上一个可联网的WIFI。</strong></p><img src="https://img-blog.csdnimg.cn/20190113144217426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>这时打开ios的家庭APP，添加配件，选择“我没有代码或无法扫描”<strong>输入配对码：11111111</strong></p><img src="https://img-blog.csdnimg.cn/20190113144537603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><img src="https://img-blog.csdnimg.cn/20190113144609464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><h2 id="我们可以从串口信息看到正在添加HOMEKIT-客户端"><a href="#我们可以从串口信息看到正在添加HOMEKIT-客户端" class="headerlink" title="我们可以从串口信息看到正在添加HOMEKIT 客户端"></a>我们可以从串口信息看到正在添加HOMEKIT 客户端</h2><img src="https://img-blog.csdnimg.cn/20190113145119352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><h2 id="这时已经成功添加到家庭APP，支持SIRI控制"><a href="#这时已经成功添加到家庭APP，支持SIRI控制" class="headerlink" title="这时已经成功添加到家庭APP，支持SIRI控制"></a>这时已经成功添加到家庭APP，支持SIRI控制</h2><img src="https://img-blog.csdnimg.cn/20190113145151882.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>接下来，让我们把继电器连接到ESP8266的D6 (GPIO12)口上。ESP8266接笔记本的USB口可能会供电不足导致不能控制继电器。我在这里就用充电宝做电源了。我们可以试试让siri帮你开关继电器了</p><img src="https://img-blog.csdnimg.cn/2019011314553482.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><p>这里附上一张继电器接220V用电器的示意图</p><img src="https://img-blog.csdnimg.cn/20190113145902241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RXVEYxOTk4,size_16,color_FFFFFF,t_70"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/TWTF1998/article/details/86419559">ESP8266控制继电器（支持HOMEKIT）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过HOMEKIT让ESP8266控制继电器，通过esptool下载程序</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/categories/ESP8266/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP8266" scheme="https://zml3589110.github.io/tags/ESP8266/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="HOMEKIT" scheme="https://zml3589110.github.io/tags/HOMEKIT/"/>
    
    <category term="esptool.py" scheme="https://zml3589110.github.io/tags/esptool-py/"/>
    
  </entry>
  
  <entry>
    <title>C 使用 sizeof 判断数组大小报错</title>
    <link href="https://zml3589110.github.io/posts/2501953460.html"/>
    <id>https://zml3589110.github.io/posts/2501953460.html</id>
    <published>2023-03-03T02:57:20.000Z</published>
    <updated>2023-03-27T00:14:26.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="extern关联数组"><a href="#extern关联数组" class="headerlink" title="extern关联数组"></a>extern关联数组</h1><p>在写代码时，我想用extern来关联一个数组，然后利用sizeof计算数组的大小，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> a[];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> b size=(sizeof(a)/sizeof(a[0]))</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>编译报错：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">invalid application of `<span class="keyword">sizeof</span><span class="number">&#x27;</span> to incomplete type `<span class="keyword">char</span>[] &#x27;</span><br></pre></td></tr></table></figure><p>主要原因是sizeof不能用在extern变量：<br>sizeof 的计算是在代码编译的时刻。<br>而extern是在链接的时刻。<br>所以 sizeof 在计算时，并不知道这个extern修饰的符号到底占用了多少空间。</p><p>解决办法：</p><p>1.把sizeof()和数组写到一个文件中</p><p>2.不用宏定义b，而是在定义数组a的那个文件里定义 size&#x3D;(sizeof(a)&#x2F;sizeof(a[0]));<br>然后在其他文件中<br>extern int size;<br>extern char a[];</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.programminghunter.com/article/53431378866/#:~:text=invalid%20application%20of%20%60%20sizeof%27%20to%20incomplete,type%20%60char%20%5B%5D%20%27%20%E4%B8%BB%E8%A6%81%E5%8E%9F%E5%9B%A0%E6%98%AFsizeof%E4%B8%8D%E8%83%BD%E7%94%A8%E5%9C%A8extern%E5%8F%98%E9%87%8F%EF%BC%9A%20sizeof%20%E7%9A%84%E8%AE%A1%E7%AE%97%E6%98%AF%E5%9C%A8%E4%BB%A3%E7%A0%81%E7%BC%96%E8%AF%91%E7%9A%84%E6%97%B6%E5%88%BB%E3%80%82">invalid application of <code>sizeof&#39; to incomplete type </code>char[] ‘</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C 使用 sizeof 判断数组大小报错 invalid application of `sizeof&#39; to incomplete type `char[] &#39;</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="关键字" scheme="https://zml3589110.github.io/categories/%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="sizeof" scheme="https://zml3589110.github.io/tags/sizeof/"/>
    
    <category term="extern" scheme="https://zml3589110.github.io/tags/extern/"/>
    
    <category term="关键字" scheme="https://zml3589110.github.io/tags/%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    
    <category term="数组" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>C# 程序编译时自动更新版本号方法</title>
    <link href="https://zml3589110.github.io/posts/996856330.html"/>
    <id>https://zml3589110.github.io/posts/996856330.html</id>
    <published>2023-02-23T09:02:20.000Z</published>
    <updated>2023-03-27T00:14:26.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件"><a href="#1-创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件" class="headerlink" title="1.创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件"></a>1.创建控制台工程AutoUpdateVersion，复制如下代码，生成exe文件</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line">    <span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="comment">//by txwtech</span></span><br><span class="line">    <span class="keyword">namespace</span> <span class="title">AutoUpdateVersion</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UpdateVersion</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">string</span> line</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">var</span> first = line.IndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> second = line.LastIndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> sVersion = line.Substring(first + <span class="number">1</span>, second - first - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">var</span> arrVersion = sVersion.Split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span> (arrVersion.Length &lt; <span class="number">4</span>) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">var</span> major = Convert.ToInt32(arrVersion[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">var</span> minor = Convert.ToInt32(arrVersion[<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">var</span> build = Convert.ToInt32(arrVersion[<span class="number">2</span>]);</span><br><span class="line">                <span class="keyword">var</span> amendment = Convert.ToInt32(arrVersion[<span class="number">3</span>]);</span><br><span class="line">                <span class="keyword">if</span> (++amendment &gt; <span class="number">999</span>) ++build;</span><br><span class="line">                <span class="keyword">if</span> (build &gt; <span class="number">99</span>) ++minor;</span><br><span class="line">                <span class="keyword">if</span> (minor &gt; <span class="number">9</span>) ++major;</span><br><span class="line">                <span class="keyword">var</span> sNewVersion = <span class="string">$&quot;<span class="subst">&#123;major&#125;</span>.<span class="subst">&#123;minor&#125;</span>.<span class="subst">&#123;build&#125;</span>.<span class="subst">&#123;amendment&#125;</span>&quot;</span>;</span><br><span class="line">                line = line.Replace(sVersion, sNewVersion);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;this is updateversion app&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>            &#123;</span><br><span class="line">                <span class="keyword">if</span> (args.Length != <span class="number">1</span> || !File.Exists(args[<span class="number">0</span>])) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">var</span> lines = File.ReadAllLines(args[<span class="number">0</span>]);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = lines.Length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyFileVersion&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyVersion&quot;</span>) &amp;&amp; !lines[i].Contains(<span class="string">&quot;*&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                File.WriteAllLines(args[<span class="number">0</span>], lines);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="2-拷贝文件"><a href="#2-拷贝文件" class="headerlink" title="2. 拷贝文件"></a>2. 拷贝文件</h1><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220422171616543-110909714.jpg"><h1 id="3-复制到另外一个项目，需要自动更新版本号的项目"><a href="#3-复制到另外一个项目，需要自动更新版本号的项目" class="headerlink" title="3.复制到另外一个项目，需要自动更新版本号的项目"></a>3.复制到另外一个项目，需要自动更新版本号的项目</h1><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220422171541867-2022955841.jpg"><h1 id="4-打开项目属性进行设置；"><a href="#4-打开项目属性进行设置；" class="headerlink" title="4. 打开项目属性进行设置；"></a>4. 打开项目属性进行设置；</h1><p>start AutoUpdateVersion $(ProjectDir)Properties\AssemblyInfo.cs</p><p>或者：</p><p>AutoUpdateVersion $(ProjectDir)Properties\AssemblyInfo.cs</p><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220422171844330-228246739.jpg"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/txwtech/p/16179740.html">C#程序编译时自动更新版本号方法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 程序编译时自动更新版本号方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="版本号" scheme="https://zml3589110.github.io/categories/%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="版本号" scheme="https://zml3589110.github.io/tags/%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    
    <category term="自动更新" scheme="https://zml3589110.github.io/tags/%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0/"/>
    
  </entry>
  
  <entry>
    <title>C# 十进制与十六进制之间的转换</title>
    <link href="https://zml3589110.github.io/posts/1935384656.html"/>
    <id>https://zml3589110.github.io/posts/1935384656.html</id>
    <published>2023-02-23T08:17:20.000Z</published>
    <updated>2023-03-27T00:14:26.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="转换进制方法一"><a href="#转换进制方法一" class="headerlink" title="转换进制方法一"></a>转换进制方法一</h1><h2 id="一、十进制转换为十六进制"><a href="#一、十进制转换为十六进制" class="headerlink" title="一、十进制转换为十六进制"></a>一、十进制转换为十六进制</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> a = <span class="number">654</span>;</span><br><span class="line"><span class="built_in">string</span> A = a.ToString(<span class="string">&quot;X6&quot;</span>);</span><br></pre></td></tr></table></figure><p>上面Tostring(“X6”)是将整型a转化成16进制数；</p><p>其中：</p><p><strong>（1） “x”小写输出十六进制的的字母为小写字母，”X”大写则输出的十六进制字母为大写；</strong></p><p><strong>（2） 后面的数字6是表示自动补0补足6位；</strong></p><h2 id="二、十六进制转为十进制"><a href="#二、十六进制转为十进制" class="headerlink" title="二、十六进制转为十进制"></a>二、十六进制转为十进制</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = Convert.ToInt64(A, <span class="number">16</span>);</span><br></pre></td></tr></table></figure><p>将十六进制数A转化为整型a</p><p>其中：</p><p><strong>（1）var关键字：匿名类型，可以代替任何类型</strong></p><p><strong>（2） ToInt64(String value,Int frombase)是Convert里面的一个方法，是将制定技术的数字的字符串表示形式转换为等效的64位有符号整数，Value是需要转化的字符串，frombase是数字基数，即2，8，10，16，这里是将16进制转化，所以是16</strong></p><h1 id="将整数转换为十六进制"><a href="#将整数转换为十六进制" class="headerlink" title="将整数转换为十六进制"></a>将整数转换为十六进制</h1><p><strong>将整数转换为十六进制</strong></p><p>可以使用string.ToString()扩展方法将整数转换为十六进制。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer Value: <span class="number">500</span></span><br><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br></pre></td></tr></table></figure><p><strong>将十六进制转换为整数</strong>-</p><p>可以使用int.Parse或convert.ToInt32将十六进制值转换为整数</p><p>**int.Parse-**将数字的字符串表示形式转换为其等效的32位有符号整数。返回值指示操作是否成功。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><p>**Convert.ToInt32-**将指定的值转换为32位带符号整数。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><p><strong>将整数转换为十六进制</strong>-</p><p><strong>字符串hexValue &#x3D; integerValue.ToString（“ X”）;</strong></p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DemoApplication</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">int</span> integerValue = <span class="number">500</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Integer Value: <span class="subst">&#123;integerValue&#125;</span>&quot;</span>);</span><br><span class="line">         <span class="built_in">string</span> hexValue = integerValue.ToString(<span class="string">&quot;X&quot;</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Hexadecimal Value: <span class="subst">&#123;hexValue&#125;</span>&quot;</span>);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p>上面代码的输出是</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Integer Value: <span class="number">500</span></span><br><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br></pre></td></tr></table></figure><p><strong>将十六进制转换为整数</strong>-</p><p><strong>使用int.Parse的示例</strong>-</p><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DemoApplication</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">string</span> hexValue = <span class="string">&quot;1F4&quot;</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Hexadecimal Value: <span class="subst">&#123;hexValue&#125;</span>&quot;</span>);</span><br><span class="line">         <span class="built_in">int</span> integerValue = <span class="built_in">int</span>.Parse(hexValue, System.Globalization.NumberStyles.HexNumber);</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Integer Value: <span class="subst">&#123;integerValue&#125;</span>&quot;</span>);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p>上面代码的输出是</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><p><strong>使用Convert.ToInt32的示例</strong>-</p><h2 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DemoApplication</span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Program</span>&#123;</span><br><span class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         <span class="built_in">string</span> hexValue = <span class="string">&quot;1F4&quot;</span>;</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Hexadecimal Value: <span class="subst">&#123;hexValue&#125;</span>&quot;</span>);</span><br><span class="line">         <span class="built_in">int</span> integerValue = Convert.ToInt32(hexValue, <span class="number">16</span>);</span><br><span class="line">         Console.WriteLine(<span class="string">$&quot;Integer Value: <span class="subst">&#123;integerValue&#125;</span>&quot;</span>);</span><br><span class="line">         Console.ReadLine();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果</p><p>上面代码的输出是</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexadecimal Value: <span class="number">1F</span>4</span><br><span class="line">Integer Value: <span class="number">500</span></span><br></pre></td></tr></table></figure><h1 id="数据互转-16进制-amp-16进制字符串-amp-字符串"><a href="#数据互转-16进制-amp-16进制字符串-amp-字符串" class="headerlink" title="数据互转 16进制&amp;16进制字符串&amp;字符串"></a>数据互转 16进制&amp;16进制字符串&amp;字符串</h1><h2 id="1、字符串过滤-or-提取字符串"><a href="#1、字符串过滤-or-提取字符串" class="headerlink" title="1、字符串过滤 or 提取字符串"></a>1、字符串过滤 or 提取字符串</h2><p>提取字符串：在C# .net开发中 “ToString()”方法是最常见的，用于将文本转为字符串；</p><p>字符串过滤：在处理字符串数据或者hex数据时，一般都需要去掉 空格 数组标识0x 标点符号 等等字符，方便后续进一步处理；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将文本转为字符串</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="built_in">string</span> str = textBox1.Text.ToString();</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//过滤字符串</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> pattern = <span class="string">&quot;[A-Za-z0-9]&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> strRet = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//正则匹配，只保留字母和数字</span></span><br><span class="line">    MatchCollection results = Regex.Matches(ReadString(), pattern);</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="keyword">var</span> v <span class="keyword">in</span> results)</span><br><span class="line">    &#123;</span><br><span class="line">        strRet += v.ToString();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> strRet.Replace(<span class="string">&quot;0x&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、字符串与16进制数组互转"><a href="#2、字符串与16进制数组互转" class="headerlink" title="2、字符串与16进制数组互转"></a>2、字符串与16进制数组互转</h2><p>从字符串转16进制数组，字符串的每一个字符就是一个byte；</p><p>可以用Encoding类的方法完成格式转换，Encoding位于System.Text命名空间下；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//str为输入字符串</span></span><br><span class="line"><span class="built_in">byte</span>[] bytes = Encoding.Default.GetBytes(str);</span><br></pre></td></tr></table></figure><p><strong>同样的，字节数组转字符串；</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bytes为输入字节数组</span></span><br><span class="line"><span class="built_in">string</span> str = Encoding.Default.GetString(bytes);</span><br></pre></td></tr></table></figure><h2 id="3、16进制数组与16进制字符串互转"><a href="#3、16进制数组与16进制字符串互转" class="headerlink" title="3、16进制数组与16进制字符串互转"></a>3、16进制数组与16进制字符串互转</h2><ul><li>16进制数组无法直接打印和显示（否则会出现乱码），这就需要转成对应的字符串；</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">//利用for循环将16进制数组转成对应的16进制字符串</span></span><br><span class="line"><span class="comment">//如 0x7E,0x5D,0x5A =&gt; &quot;7E5D5A&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">string</span> strTemp = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; bytes.Length; i++)</span><br><span class="line">&#123;</span><br><span class="line">strTemp += bytes[i].ToString(<span class="string">&quot;X2&quot;</span>);</span><br><span class="line">strTemp += <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一般对于嵌入式硬件底层，收到的数据都是字节流，不需要转换，可以直接处理；</p><p>但是对于PC、Android等非底层驱动，拿到的数据都是字符串形式，这就需要将16进制字符串转16进制数组；</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">//str为过滤之后的字符串，只包含字母和数字</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">string</span> strTemp = <span class="string">&quot;&quot;</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; str.Length/<span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">strTemp += str.Substring(<span class="number">2</span> * i, <span class="number">2</span>);</span><br><span class="line">strTemp += <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、字符串与16进制字符串"><a href="#4、字符串与16进制字符串" class="headerlink" title="4、字符串与16进制字符串"></a>4、字符串与16进制字符串</h2><p>二者互转又多了一层。</p><ol><li><p>字符串转16进制字符串：先将字符串转为16进制数组，再将16进制数组转为16进制字符串；</p></li><li><p>16进制字符串转字符串：先将16进制字符串转为16进制数组，再将16进制数组转为字符串；</p></li></ol><h2 id="5、其它常见转换操作"><a href="#5、其它常见转换操作" class="headerlink" title="5、其它常见转换操作"></a>5、其它常见转换操作</h2><p><strong>5.1 字符串替换</strong><br>小节1中介绍了正则匹配来过滤字符串的方法，string类本身也有很多方法实现过滤和替换</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//去掉字符串中的控制字符</span></span><br><span class="line"><span class="built_in">string</span> str2 = str1.Replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;,&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\t&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>).Replace(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>5.2 格式转换</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Encoding为编码格式转换</span></span><br><span class="line"><span class="comment">//Convert为数据格式转换</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//常见的转换有</span></span><br><span class="line"> </span><br><span class="line">Convert.ToByte();</span><br><span class="line">Convert.ToUInt16();</span><br><span class="line">Convert.ToUInt32();</span><br><span class="line">Convert.ToUInt64();</span><br><span class="line">Convert.ToDateTime();</span><br><span class="line">Convert.ToString();</span><br><span class="line">Convert.ToBase64String();</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/DKDUCK/article/details/120427693">C#中十进制与十六进制之间的转换</a></li><li><a href="https://www.nhooo.com/note/qa02fr.html">如何在C#中将整数转换为十六进制，反之亦然？</a></li><li><a href="https://blog.csdn.net/weixin_38743772/article/details/128653936">C# 数据互转 16进制&amp;16进制字符串&amp;字符串</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 十进制与十六进制之间的转换</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="数据" scheme="https://zml3589110.github.io/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="进制转换" scheme="https://zml3589110.github.io/categories/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="数据" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="进制转换" scheme="https://zml3589110.github.io/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>C# 获取本机IP</title>
    <link href="https://zml3589110.github.io/posts/1056828438.html"/>
    <id>https://zml3589110.github.io/posts/1056828438.html</id>
    <published>2023-02-23T07:48:20.000Z</published>
    <updated>2023-03-27T00:14:26.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取本机IP"><a href="#获取本机IP" class="headerlink" title="获取本机IP"></a>获取本机IP</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetLocalIp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span>获取本地的IP地址</span></span><br><span class="line">    <span class="built_in">string</span> AddressIP = <span class="built_in">string</span>.Empty;</span><br><span class="line">    <span class="keyword">foreach</span> (IPAddress _IPAddress <span class="keyword">in</span> Dns.GetHostEntry(Dns.GetHostName()).AddressList)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_IPAddress.AddressFamily.ToString() == <span class="string">&quot;InterNetwork&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            AddressIP = _IPAddress.ToString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> AddressIP;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/txwtech/p/16201403.html">c#获取本机IP</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 使用代码获取本地IP</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="IP" scheme="https://zml3589110.github.io/categories/IP/"/>
    
    <category term="网络编程" scheme="https://zml3589110.github.io/categories/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="网络" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="IP地址" scheme="https://zml3589110.github.io/tags/IP%E5%9C%B0%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十八（十字光标-交叉线跟随鼠标移动）</title>
    <link href="https://zml3589110.github.io/posts/884599238.html"/>
    <id>https://zml3589110.github.io/posts/884599238.html</id>
    <published>2023-02-23T07:44:20.000Z</published>
    <updated>2023-03-27T00:14:26.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><h2 id="设置ChartAre属性："><a href="#设置ChartAre属性：" class="headerlink" title="设置ChartAre属性："></a>设置ChartAre属性：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserEnabled = <span class="literal">true</span>;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorY.IsUserEnabled = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h2 id="对Chart添加MouseMove事件，在方法内实现如下代码："><a href="#对Chart添加MouseMove事件，在方法内实现如下代码：" class="headerlink" title="对Chart添加MouseMove事件，在方法内实现如下代码："></a>对Chart添加MouseMove事件，在方法内实现如下代码：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">chart1.ChartAreas[<span class="number">0</span>].CursorX.SetCursorPixelPosition(<span class="keyword">new</span> PointF(e.X, e.Y), <span class="literal">true</span>);</span><br><span class="line">    chart1.ChartAreas[<span class="number">0</span>].CursorY.SetCursorPixelPosition(<span class="keyword">new</span> PointF(e.X, e.Y), <span class="literal">true</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://zhuanlan.zhihu.com/p/337384925">C# Chart 十字光标&#x2F;交叉线跟随鼠标移动</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 C# chart 图表时十字光标-交叉线跟随鼠标移动</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十七（隐藏与显示某一系列曲线方法vs2019-示例）</title>
    <link href="https://zml3589110.github.io/posts/1984843230.html"/>
    <id>https://zml3589110.github.io/posts/1984843230.html</id>
    <published>2023-02-23T07:39:20.000Z</published>
    <updated>2023-03-27T00:14:26.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图表隐藏与显示方法"><a href="#图表隐藏与显示方法" class="headerlink" title="图表隐藏与显示方法"></a>图表隐藏与显示方法</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(checkBox1.Checked==<span class="literal">true</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//  chart1.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line">        <span class="comment">//  chart2.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line">        chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">true</span>;      </span><br><span class="line">        <span class="comment">//by txwtech</span></span><br><span class="line">            </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// chart1.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">        chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// chart1.Series[0].Points.Clear();</span></span><br><span class="line">        <span class="comment">//  chart2.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="https://img2022.cnblogs.com/blog/1677779/202204/1677779-20220429164428048-2096736696.jpg"><h1 id="完整代码示例"><a href="#完整代码示例" class="headerlink" title="完整代码示例"></a>完整代码示例</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms.DataVisualization.Charting;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">draw_chart_practice</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line">        ToolTip toolTip = <span class="keyword">new</span> ToolTip();</span><br><span class="line">        <span class="built_in">string</span> postion11 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span>[] xx = <span class="keyword">new</span> <span class="built_in">string</span> []&#123;<span class="string">&quot;1月&quot;</span>,<span class="string">&quot;2月&quot;</span>, <span class="string">&quot;3月&quot;</span>,<span class="string">&quot;4月&quot;</span>, <span class="string">&quot;5月&quot;</span>, <span class="string">&quot;6月&quot;</span>,<span class="string">&quot;7月&quot;</span>, <span class="string">&quot;8月&quot;</span>, <span class="string">&quot;9月&quot;</span>, <span class="string">&quot;10月&quot;</span>, <span class="string">&quot;11月&quot;</span>, <span class="string">&quot;12月&quot;</span> &#125;;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">int</span>[] yy = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">88</span>,<span class="number">99</span>,<span class="number">100</span>, <span class="number">88</span>, <span class="number">99</span>, <span class="number">100</span> , <span class="number">88</span>, <span class="number">99</span>, <span class="number">100</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">5</span> &#125;;</span><br><span class="line">        <span class="built_in">int</span>[] yy2 = <span class="keyword">new</span> <span class="built_in">int</span>[] &#123; <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">18</span>, <span class="number">95</span>, <span class="number">105</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">7</span> &#125;;</span><br><span class="line">      <span class="comment">//  string[] yy3 = new string[] &#123; &quot;1月&quot;, &quot;2月&quot;, &quot;3月&quot;, &quot;4月&quot;, &quot;5月&quot;, &quot;6月&quot;, &quot;7月&quot;, &quot;8月&quot;, &quot;9月&quot;, &quot;10月&quot;, &quot;11月&quot;, &quot;12月&quot; &#125;;</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">modify</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">          <span class="comment">//  static void Main(string[] args)</span></span><br><span class="line">            &#123;</span><br><span class="line">                DirectoryInfo directoryInfo = <span class="keyword">new</span> DirectoryInfo(Application.StartupPath);</span><br><span class="line">                <span class="built_in">string</span> path = directoryInfo.Parent.Parent.FullName + <span class="string">@&quot;\Properties\AssemblyInfo.cs&quot;</span>; <span class="comment">//上上级目录</span></span><br><span class="line"></span><br><span class="line">             <span class="comment">//   if (args.Length != 1 || !File.Exists(args[0])) return;     </span></span><br><span class="line">                <span class="keyword">var</span> lines = File.ReadAllLines(path);</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = lines.Length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyFileVersion&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (lines[i].Contains(<span class="string">&quot;assembly: AssemblyVersion&quot;</span>) &amp;&amp; !lines[i].Contains(<span class="string">&quot;*&quot;</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        UpdateVersion(<span class="keyword">ref</span> lines[i]); </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                File.WriteAllLines(path, lines); </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddLogInfo_IP</span>(<span class="params"><span class="built_in">string</span> log_text</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">              <span class="comment">//  lock (Obj)</span></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="built_in">string</span> data = log_text;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">string</span> strNow, strDate;</span><br><span class="line"></span><br><span class="line">                    System.DateTime currentTime = <span class="keyword">new</span> System.DateTime();</span><br><span class="line">                    currentTime = System.DateTime.Now;</span><br><span class="line">                    strNow = currentTime.ToString();<span class="comment">//记录具体时间</span></span><br><span class="line">                    strDate = currentTime.ToString(<span class="string">&quot;yyyyMMdd&quot;</span>);</span><br><span class="line">                    strDate = <span class="string">&quot;\\\\172.17.50.89\\txw\\box_verification_ip\\&quot;</span> + strDate + <span class="string">&quot;box_verification.txt&quot;</span>; <span class="comment">//创建文件名</span></span><br><span class="line">                                                                                      <span class="comment">//  strDate = &quot;\</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="literal">true</span>)<span class="comment">//</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        data = strNow + <span class="string">&quot; &quot;</span> + data + <span class="string">&quot;\r\n&quot;</span>;                      </span><br><span class="line">                        File.AppendAllText(strDate, data, Encoding.UTF8);</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (IOException e)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                MessageBox.Show(<span class="string">&quot;日志记录写入错误\r\n&quot;</span> + e.StackTrace + <span class="string">&quot;\r\n&quot;</span> + e.Message);</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;日志记录写入错误\r\n&quot;</span> + ex.StackTrace + <span class="string">&quot;\r\n&quot;</span> + ex.Message);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetLocalIp</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment"><span class="doctag">///</span>获取本地的IP地址</span></span><br><span class="line">            <span class="built_in">string</span> AddressIP = <span class="built_in">string</span>.Empty;</span><br><span class="line">            <span class="keyword">foreach</span> (IPAddress _IPAddress <span class="keyword">in</span> Dns.GetHostEntry(Dns.GetHostName()).AddressList)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//if (_IPAddress.AddressFamily.ToString() == &quot;InterNetwork&quot;)</span></span><br><span class="line">                &#123;</span><br><span class="line">                   <span class="comment">// AddressIP = _IPAddress.ToString();</span></span><br><span class="line">                &#125;</span><br><span class="line">                AddLogInfo_IP(_IPAddress.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> AddressIP;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//GetLocalIp();</span></span><br><span class="line">            <span class="comment">//   modify();</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(1, 168);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(3, 122);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(4, 153);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(5, 172);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(6, 100);</span></span><br><span class="line">            <span class="comment">//chart1.Series[0].Points.AddXY(100, 120);</span></span><br><span class="line">            <span class="comment">//chart1.Series[1].Points.AddXY(2, 2);</span></span><br><span class="line">            <span class="comment">//chart1.Series[1].Points.AddXY(4, 6);</span></span><br><span class="line">            xx[<span class="number">0</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">1</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">2</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">3</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">4</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            xx[<span class="number">5</span>] = System.DateTime.Now.ToString();</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.DataBindXY(xx,yy);</span><br><span class="line">            chart1.Series[<span class="number">1</span>].Points.DataBindXY(xx, yy2);</span><br><span class="line">            chart2.Series[<span class="number">0</span>].Points.DataBindXY(xx, yy);</span><br><span class="line">            <span class="comment">// chart1.Series[0].Label = &quot;#VAL&quot;;//每个点的值显示</span></span><br><span class="line">            chart1.Series[<span class="number">0</span>].ToolTip = <span class="string">&quot;#VALX:#VAL&quot;</span>;</span><br><span class="line">            chart1.Series[<span class="number">1</span>].ToolTip = <span class="string">&quot;#VALX:#VAL&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (checkBox1.Checked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].IsVisibleInLegend = <span class="literal">false</span>;</span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">              <span class="comment">//  chart1.Series[0].Points.Clear();</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (checkBox2.Checked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">//chart1.Series[1].Points.Clear();</span></span><br><span class="line">            &#125;</span><br><span class="line">            InitChart(chart1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">UpdateVersion</span>(<span class="params"><span class="keyword">ref</span> <span class="built_in">string</span> line</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> first = line.IndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> second = line.LastIndexOf(<span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> sVersion = line.Substring(first + <span class="number">1</span>, second - first - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> arrVersion = sVersion.Split(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (arrVersion.Length &lt; <span class="number">4</span>) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">var</span> major = Convert.ToInt32(arrVersion[<span class="number">0</span>]);</span><br><span class="line">            <span class="keyword">var</span> minor = Convert.ToInt32(arrVersion[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">var</span> build = Convert.ToInt32(arrVersion[<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">var</span> amendment = Convert.ToInt32(arrVersion[<span class="number">3</span>]);</span><br><span class="line">            <span class="keyword">if</span> (++amendment &gt; <span class="number">999</span>) ++build;</span><br><span class="line">            <span class="keyword">if</span> (build &gt; <span class="number">99</span>) ++minor;</span><br><span class="line">            <span class="keyword">if</span> (minor &gt; <span class="number">9</span>) ++major;</span><br><span class="line">            <span class="keyword">var</span> sNewVersion = <span class="string">$&quot;<span class="subst">&#123;major&#125;</span>.<span class="subst">&#123;minor&#125;</span>.<span class="subst">&#123;build&#125;</span>.<span class="subst">&#123;amendment&#125;</span>&quot;</span>;</span><br><span class="line">            line = line.Replace(sVersion, sNewVersion);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitChart</span>(<span class="params">System.Windows.Forms.DataVisualization.Charting.Chart chart1</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].CursorX.Interval = <span class="number">0</span>;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserEnabled = <span class="literal">true</span>;</span><br><span class="line">            chart1.ChartAreas[<span class="number">0</span>].CursorX.IsUserSelectionEnabled = <span class="literal">true</span>;</span><br><span class="line">            chart1.MouseClick += <span class="keyword">new</span> System.Windows.Forms.MouseEventHandler(chart1_MouseClick);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> area = chart1.ChartAreas[<span class="number">0</span>];</span><br><span class="line">           <span class="comment">// var area = chart1.Series[0];</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//      double xvalue = area.AxisX.PixelPositionToValue(e.X);</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">//  double yvalue = area.AxisY.PixelPositionToValue(e.Y);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// textbox1.text = string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue);</span></span><br><span class="line">        <span class="comment">//    postion11=(string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue));</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseHover</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> area = chart1.ChartAreas[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           <span class="comment">// double xvalue = area.AxisX.PixelPositionToValue(e.X);</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">// double yvalue = area.AxisY.PixelPositionToValue(e.Y);</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// textbox1.text = string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue);</span></span><br><span class="line">           <span class="comment">// MessageBox.Show(string.Format(&quot;&#123;0:f0&#125;,&#123;1:f0&#125;&quot;, xvalue, yvalue));</span></span><br><span class="line">          <span class="comment">//  toolTip.SetToolTip(chart1, postion11);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//  private void chart1_Click(object sender, EventArgs e)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseClick</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Chart chart1 = sender <span class="keyword">as</span> Chart;</span><br><span class="line">              </span><br><span class="line">          <span class="comment">//  string aa = chart1.Series[0].ToolTip = &quot;#VALX:#VAL&quot;;</span></span><br><span class="line">         <span class="comment">//   MessageBox.Show(aa);</span></span><br><span class="line">            <span class="keyword">if</span> (e.Button == MouseButtons.Right)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.ChartAreas[<span class="number">0</span>].AxisX.ScaleView.ZoomReset(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox1_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span>(checkBox1.Checked==<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="comment">//  chart1.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line">              <span class="comment">//  chart2.Series[0].IsVisibleInLegend = true;</span></span><br><span class="line"></span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//by txwtech</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">               <span class="comment">// chart1.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">                chart1.Series[<span class="number">0</span>].Enabled = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">// chart1.Series[0].Points.Clear();</span></span><br><span class="line">              <span class="comment">//  chart2.Series[0].IsVisibleInLegend = false;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBox2_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (checkBox2.Checked == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chart1.Series[<span class="number">1</span>].IsVisibleInLegend = <span class="literal">false</span>;</span><br><span class="line">                <span class="comment">//chart1.Series[1].Points.Clear();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/txwtech/p/16207210.html">c#ms chart图表隐藏与显示某一系列曲线方法vs2019</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 C# chart 图表隐藏与显示某一系列曲线</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="图表" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
    <category term="显示隐藏曲线" scheme="https://zml3589110.github.io/tags/%E6%98%BE%E7%A4%BA%E9%9A%90%E8%97%8F%E6%9B%B2%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十六（在鼠标移动到Series上时显示节点及数据）</title>
    <link href="https://zml3589110.github.io/posts/1504952015.html"/>
    <id>https://zml3589110.github.io/posts/1504952015.html</id>
    <published>2023-02-23T07:21:20.000Z</published>
    <updated>2023-03-27T00:14:26.690Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、效果与思路"><a href="#一、效果与思路" class="headerlink" title="一、效果与思路"></a>一、效果与思路</h1><h2 id="解决方案1"><a href="#解决方案1" class="headerlink" title="解决方案1"></a>解决方案1</h2><p>用chart的mousemove时间，实时跟踪鼠标最近的X轴的位置，然后把cursorX设置到那个位置上，让用户知道我是选的那一个X的值，同时用tooltip显示该X轴上所有的Y值，结贴了谢谢大家。</p><p>至于如何显示鼠标移动到的那个series上的数据节点，可以在Mousmove时，用一个击中测试，判断。</p><p><strong>参考代码，击中测试获得点数据点的索引：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (e.HitTestResult.ChartElementType == ChartElementType.DataPoint)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = e.HitTestResult.PointIndex;</span><br><span class="line">    DataPoint dp = e.HitTestResult.Series.Points[i];</span><br><span class="line">    e.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;1:F3&#125;&quot;</span>, dp.XValue, dp.YValues[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解决方案2"><a href="#解决方案2" class="headerlink" title="解决方案2"></a>解决方案2</h2><p>用的是vs的chart控件。我在页面上的chart中写的是这种方式显示tooltip的（chart1是我的chart的名字）</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">chart1.GetToolTipText += <span class="keyword">new</span> EventHandler&lt;ToolTipEventArgs&gt;(chart_GetToolTipText);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chart_GetToolTipText</span>(<span class="params"><span class="built_in">object</span> sender, ToolTipEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.HitTestResult.ChartElementType == ChartElementType.DataPoint)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> i = e.HitTestResult.PointIndex;</span><br><span class="line">        DataPoint dp = e.HitTestResult.Series.Points[i];</span><br><span class="line">        e.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;&#123;1:F3&#125;&quot;</span>, dp.XValue, dp.YValues[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是这个鼠标悬停的判断范围也好窄好窄好窄好窄，选一个点要选半天，鼠标晃来晃去都不能出现tooltip，这个根本没办法用。请问高手有没有好的方式可以让图形可以容忍一定的偏斜，就是说即使没有选到这个点，到这个点附近多少范围之类也可以出现tooltip</p><p><strong>思路：</strong><br>1、记得以前有一个软件，当你的鼠标移动到你需要指点的附近时，它就会“磁吸”到点那里去，你也可以这样，挑最近的吸过去。<br>2、如果你开发的是分析软件，而且精度要求很高的话，建议采用加粗放大方式，点击后“标点”再缩小回去。</p><blockquote><p>参考</p></blockquote><p>#VALX         &#x2F;&#x2F;x轴数据<br>#VALY         &#x2F;&#x2F;y轴数据<br>#PERCENT      &#x2F;&#x2F;百分比<br>#AVG          &#x2F;&#x2F;平均值<br>#INDEX        &#x2F;&#x2F;索引值<br>#MAX          &#x2F;&#x2F;最大值<br>#MIN          &#x2F;&#x2F;最小值<br>#TOTAL        &#x2F;&#x2F;合计<br>#LEGENDTEXT   &#x2F;&#x2F;显示Legend的text<br>#SER          &#x2F;&#x2F;显示Series名称</p><h1 id="二、参考示例"><a href="#二、参考示例" class="headerlink" title="二、参考示例"></a>二、参考示例</h1><p>ChartControl.RuntimeHitTesting属性一定要设为True。</p><p>Line Series markers的Visible一定要弄成True。CalcHitInfo的SeriesPoint一直为null，最后跑到devexpress support center上问的。<br>我的dev版本是13.1.5，设置属性的方法是Series-&gt;View-&gt;MarkerVisibility。有的 版本可能是Series -&gt; LineMarkerOptions -&gt; Visible。</p><p>我的是以曲线图Spline为例，下面就是代码。</p><h2 id="1-鼠标点击点弹出Messagebox"><a href="#1-鼠标点击点弹出Messagebox" class="headerlink" title="1.鼠标点击点弹出Messagebox"></a>1.鼠标点击点弹出Messagebox</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_MouseClick</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    ChartHitInfo hitInfo = chartControl4.CalcHitInfo(e.Location); </span><br><span class="line">    <span class="keyword">if</span> (hitInfo.SeriesPoint != <span class="literal">null</span>) </span><br><span class="line">    &#123; </span><br><span class="line">        MessageBox.Show(hitInfo.SeriesPoint.Values[<span class="number">0</span>].ToString()); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><img src="https://img-blog.csdn.net/20140328173729296?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20140328173746609?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h2 id="2-鼠标移动用ToolTipController显示值"><a href="#2-鼠标移动用ToolTipController显示值" class="headerlink" title="2.鼠标移动用ToolTipController显示值"></a>2.鼠标移动用ToolTipController显示值</h2><ul><li>外面定义</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ToolTipController toolTipController = <span class="keyword">new</span> ToolTipController();  </span><br></pre></td></tr></table></figure><ul><li>下面是dev的源码：</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>)  </span></span><br><span class="line"><span class="function"></span>    &#123;  </span><br><span class="line">        ChartHitInfo hitInfo = chartControl4.CalcHitInfo(e.Location);  </span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InDiagram)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In diagram&quot;</span>);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InNonDefaultPane)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In non-default pane: &quot;</span> + hitInfo.NonDefaultPane.Name);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InAxis)  </span><br><span class="line">        &#123;  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In axis: &quot;</span> + hitInfo.Axis.Name);  </span><br><span class="line">            <span class="keyword">if</span> (hitInfo.AxisLabelItem != <span class="literal">null</span>)  </span><br><span class="line">                builder.AppendLine(<span class="string">&quot;  Label item: &quot;</span> + hitInfo.AxisLabelItem.Text);  </span><br><span class="line">            <span class="keyword">if</span> (hitInfo.AxisTitle != <span class="literal">null</span>)  </span><br><span class="line">                builder.AppendLine(<span class="string">&quot;  Axis title: &quot;</span> + hitInfo.AxisTitle.Text);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InChartTitle)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In chart title: &quot;</span> + hitInfo.ChartTitle.Text);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InLegend)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In legend&quot;</span>);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InSeries)  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In series: &quot;</span> + ((Series)hitInfo.Series).Name);  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.InSeriesLabel)  </span><br><span class="line">        &#123;  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;In series label&quot;</span>);  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;  Series: &quot;</span> + ((Series)hitInfo.Series).Name);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (hitInfo.SeriesPoint != <span class="literal">null</span>)  </span><br><span class="line">        &#123;  </span><br><span class="line">            builder.AppendLine(<span class="string">&quot;  Argument: &quot;</span> + hitInfo.SeriesPoint.Argument);  </span><br><span class="line">            <span class="keyword">if</span> (!hitInfo.SeriesPoint.IsEmpty)  </span><br><span class="line">                builder.AppendLine(<span class="string">&quot;  Value: &quot;</span> + hitInfo.SeriesPoint.Values[<span class="number">0</span>]);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span> (builder.Length &gt; <span class="number">0</span>)  </span><br><span class="line">            toolTipController.ShowHint(<span class="string">&quot;Hit-testing results:\n&quot;</span> + builder.ToString(), chartControl4.PointToScreen(e.Location));  </span><br><span class="line">        <span class="keyword">else</span>  </span><br><span class="line">            toolTipController.HideHint();  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>MouseLeave事件代码</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_MouseLeave</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    toolTipController.HideHint(); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><img src="https://img-blog.csdn.net/20140328174521500?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h2 id="3-另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。"><a href="#3-另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。" class="headerlink" title="3.另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。"></a>3.另一种鼠标移动显示信息的方法，用CustomDrawCrosshair事件，从别人那里学习的。这种还可以显示图片。</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chartControl4_CustomDrawCrosshair</span>(<span class="params"><span class="built_in">object</span> sender, CustomDrawCrosshairEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">foreach</span> (CrosshairElement element <span class="keyword">in</span> e.CrosshairElements) </span><br><span class="line">    &#123; </span><br><span class="line">        SeriesPoint point = element.SeriesPoint; </span><br><span class="line">        element.LabelElement.MarkerImage = Image.FromFile(<span class="string">@&quot;F:\Resources\Add.png&quot;</span>);<span class="comment">// 设置图片路径 </span></span><br><span class="line">        element.LabelElement.MarkerImageSizeMode = ChartImageSizeMode.Stretch; </span><br><span class="line">        element.LabelElement.MarkerSize = <span class="keyword">new</span> Size(<span class="number">100</span>, <span class="number">100</span>); <span class="comment">// 大小 </span></span><br><span class="line">        element.LabelElement.Text = point.Values[<span class="number">0</span>].ToString();<span class="comment">//显示要显示的文字 </span></span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><img src="https://img-blog.csdn.net/20140328174741250?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaHlqXzEz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><p>这里有devexpress用CustomDrawCrosshair事件显示点信息的Demo<a href="https://documentation.devexpress.com/#WindowsForms/customdocument3440">How to: Show a Tooltip with a Series Point’s Data</a></p><p>参考</p><p>1.<a href="http://my.csdn.net/hustaiyaya">hustaiyaya</a>， <a href="http://bbs.csdn.net/topics/390754014">winform chart控件鼠标悬停显示Y值</a>。</p><p>2.<a href="http://my.csdn.net/huang369509940">黄大仙儿</a>，<a href="http://blog.csdn.net/hyj_13/article/details/22416029">c#—devexpress chartcontrol 鼠标点击chart上的点事件，鼠标移动显示值</a>，2014-3。</p><p>\3. <a href="http://blog.csdn.net/rztyfx/article/details/45912821">c# chart 鼠标放在数据点上出现的小提示。</a></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/arxive/p/5862471.html">C# chart，有关如何在鼠标移动到Series上时显示节点及数据 （有待继续更新）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 C# chart 图表时在鼠标移动到Series上时显示节点及数据</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之十五（C#实现图表中鼠标移动并显示数据-这个方法超好用）</title>
    <link href="https://zml3589110.github.io/posts/675811459.html"/>
    <id>https://zml3589110.github.io/posts/675811459.html</id>
    <published>2023-02-23T07:10:20.000Z</published>
    <updated>2023-03-27T00:14:26.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img.jbzj.com/file_images/article/202202/2022212134233486.jpg?2022112134243"><img src="https://img.jbzj.com/file_images/article/202202/2022212134255210.jpg?202211213433"><h1 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h1><h2 id="1-首先在页面上添加一个label控件并默认隐藏："><a href="#1-首先在页面上添加一个label控件并默认隐藏：" class="headerlink" title="1.首先在页面上添加一个label控件并默认隐藏："></a>1.首先在页面上添加一个label控件并默认隐藏：</h2><img src="https://img.jbzj.com/file_images/article/202202/2022212134316760.jpg?2022112134325"><h2 id="2-给该图表添加MouseMove鼠标移动事件："><a href="#2-给该图表添加MouseMove鼠标移动事件：" class="headerlink" title="2.给该图表添加MouseMove鼠标移动事件："></a>2.给该图表添加MouseMove鼠标移动事件：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 鼠标经过时发生</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_MouseMove</span>(<span class="params"><span class="built_in">object</span> sender, MouseEventArgs e</span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">   &#123;</span><br><span class="line">       HitTestResult Result = <span class="keyword">new</span> HitTestResult();</span><br><span class="line">       Result = chart1.HitTest(e.X, e.Y);</span><br><span class="line">       <span class="keyword">if</span> (Result.Series != <span class="literal">null</span> &amp;&amp; Result.Object != <span class="literal">null</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">// 获取当前焦点x轴的值</span></span><br><span class="line">           <span class="built_in">string</span> xValue = ObjectUtil.GetPropertyValue(Result.Object, <span class="string">&quot;AxisLabel&quot;</span>).ToString();</span><br><span class="line">           <span class="comment">// 获取当前焦点所属区域名称</span></span><br><span class="line">           <span class="built_in">string</span> areaName = ObjectUtil.GetPropertyValue(Result.Object, <span class="string">&quot;LegendText&quot;</span>).ToString();</span><br><span class="line">           <span class="comment">// 获取当前焦点y轴的值</span></span><br><span class="line">           <span class="built_in">double</span> yValue = Result.Series.Points[Result.PointIndex].YValues[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 鼠标经过时label显示</span></span><br><span class="line">           skinLabel4.Visible = <span class="literal">true</span>;</span><br><span class="line">           skinLabel4.Text = <span class="string">&quot;时间：&quot;</span>+ xValue + <span class="string">&quot;\n&quot;</span>+ areaName + <span class="string">&quot;：&quot;</span>+ yValue + <span class="string">&quot;ug/m^3&quot;</span>;</span><br><span class="line">           skinLabel4.Location = <span class="keyword">new</span> Point(e.X, e.Y - <span class="number">20</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">// 鼠标离开时label隐藏</span></span><br><span class="line">           skinLabel4.Visible = <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   catch (Exception se)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="comment">// 鼠标离开时label隐藏</span></span><br><span class="line">       skinLabel4.Visible = <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-其中GetPropertyValue-获取对象中的某个属性-方法如下："><a href="#3-其中GetPropertyValue-获取对象中的某个属性-方法如下：" class="headerlink" title="3.其中GetPropertyValue() 获取对象中的某个属性 方法如下："></a>3.其中GetPropertyValue() 获取对象中的某个属性 方法如下：</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ObjectUtil</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> 获取某个对象中的属性值</span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;info&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;field&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">   <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">object</span> <span class="title">GetPropertyValue</span>(<span class="params"><span class="built_in">object</span> info, <span class="built_in">string</span> field</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       <span class="keyword">if</span> (info == <span class="literal">null</span>) <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">       Type t = info.GetType();</span><br><span class="line">       IEnumerable&lt;System.Reflection.PropertyInfo&gt; property = <span class="keyword">from</span> pi <span class="keyword">in</span> t.GetProperties() <span class="keyword">where</span> pi.Name.ToLower() == field.ToLower() <span class="keyword">select</span> pi;</span><br><span class="line">       <span class="keyword">return</span> property.First().GetValue(info, <span class="literal">null</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最后（以下与上述无关）图表添加数据后绑定实现提示："><a href="#最后（以下与上述无关）图表添加数据后绑定实现提示：" class="headerlink" title="最后（以下与上述无关）图表添加数据后绑定实现提示："></a>最后（以下与上述无关）图表添加数据后绑定实现提示：</h2><img src="https://img.jbzj.com/file_images/article/202202/2022212134343874.jpg?2022112134352"><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 扬尘监测、噪音监测、温度检测、湿度监测</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;_Chart&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ChartTemperatureMethod</span>(<span class="params">Chart _Chart</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;<span class="built_in">string</span>&gt; xData = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt;() &#123;<span class="string">&quot;0&quot;</span>, <span class="string">&quot;4:00&quot;</span>, <span class="string">&quot;8:00&quot;</span>, <span class="string">&quot;12:00&quot;</span>, <span class="string">&quot;16:00&quot;</span>, <span class="string">&quot;20:00&quot;</span>, <span class="string">&quot;24:00&quot;</span> &#125;;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; yData = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">0</span>,<span class="number">21</span>, <span class="number">35</span>, <span class="number">48</span>, <span class="number">40</span>, <span class="number">27</span>, <span class="number">7</span> &#125;;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; yData1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">0</span>,<span class="number">5</span>, <span class="number">18</span>, <span class="number">25</span>, <span class="number">68</span>, <span class="number">50</span>, <span class="number">30</span> &#125;;</span><br><span class="line">    <span class="built_in">string</span> iss = <span class="string">&quot;#VALX&quot;</span>;</span><br><span class="line">    <span class="comment">// 需要提示的信息</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series1&quot;</span>].ToolTip = <span class="string">&quot;时间：#VALX\nPM2.5：#VALYug/m^3\tPM10：&quot;</span> + yData1[xData.IndexOf(<span class="string">&quot;#VALX&quot;</span>) + <span class="number">1</span>] + <span class="string">&quot;ug/m^3&quot;</span>;</span><br><span class="line">    <span class="comment">// 标签显示 Inside：内部，Outside：外部，Disabled：禁用</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series1&quot;</span>][<span class="string">&quot;PieLabelStyle&quot;</span>] = <span class="string">&quot;Outside&quot;</span>;</span><br><span class="line">    chart1.Series[<span class="string">&quot;Series1&quot;</span>].Points.DataBindXY(xData, yData);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 需要提示的信息</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series2&quot;</span>].ToolTip = <span class="string">&quot;时间：#VALX\nPM2.5：&quot;</span> + yData[xData.IndexOf(<span class="string">&quot;#VALX&quot;</span>) + <span class="number">1</span>] + <span class="string">&quot;ug/m^3\tPM10：#VALYug/m^3&quot;</span>;</span><br><span class="line">    <span class="comment">// 标签显示 Inside：内部，Outside：外部，Disabled：禁用</span></span><br><span class="line">    chart1.Series[<span class="string">&quot;Series2&quot;</span>][<span class="string">&quot;PieLabelStyle&quot;</span>] = <span class="string">&quot;Outside&quot;</span>;</span><br><span class="line">    chart1.Series[<span class="string">&quot;Series2&quot;</span>].Points.DataBindXY(xData, yData1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.jb51.net/article/237273.htm">C#实现图表中鼠标移动并显示数据</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 C# chart 实现图表中鼠标移动并跟随显示数据</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
    <category term="图表" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
    <category term="鼠标" scheme="https://zml3589110.github.io/tags/%E9%BC%A0%E6%A0%87/"/>
    
    <category term="显示数据" scheme="https://zml3589110.github.io/tags/%E6%98%BE%E7%A4%BA%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>C#控件CheckedListBox之二（ListControl.SelectedValueChanged事件用法）</title>
    <link href="https://zml3589110.github.io/posts/1849315500.html"/>
    <id>https://zml3589110.github.io/posts/1849315500.html</id>
    <published>2023-02-23T07:01:20.000Z</published>
    <updated>2023-03-27T00:14:26.663Z</updated>
    
    <content type="html"><![CDATA[<p><strong>可以参看类</strong><a href="https://vimsky.com/examples/detail/csharp-class-system.windows.forms.listcontrol.html"><code>System.Windows.Forms.ListControl</code></a>的用法示例</p><h1 id="示例1-ListBox"><a href="#示例1-ListBox" class="headerlink" title="示例1: ListBox"></a>示例1: ListBox</h1><p><strong>主要是使用到了 ListBox1_SelectedValueChanged 事件</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入命名空间</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MyListControlSample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListBoxSample3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> ListBox ListBox1 = <span class="keyword">new</span> ListBox();</span><br><span class="line">        <span class="keyword">private</span> Label label1 = <span class="keyword">new</span> Label();</span><br><span class="line">        <span class="keyword">private</span> TextBox textBox1 = <span class="keyword">new</span> TextBox();</span><br><span class="line"></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Run(<span class="keyword">new</span> ListBoxSample3());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ListBoxSample3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> Size(<span class="number">307</span>, <span class="number">206</span>);</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;ListBox Sample3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            ListBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">16</span>);</span><br><span class="line">            ListBox1.Name = <span class="string">&quot;ListBox1&quot;</span>;</span><br><span class="line">            ListBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">130</span>);</span><br><span class="line"></span><br><span class="line">            label1.Location = <span class="keyword">new</span> Point(<span class="number">14</span>, <span class="number">150</span>);</span><br><span class="line">            label1.Name = <span class="string">&quot;label1&quot;</span>;</span><br><span class="line">            label1.Size = <span class="keyword">new</span> Size(<span class="number">40</span>, <span class="number">24</span>);</span><br><span class="line">            label1.Text = <span class="string">&quot;Value&quot;</span>;</span><br><span class="line"></span><br><span class="line">            textBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">150</span>);</span><br><span class="line">            textBox1.Name = <span class="string">&quot;textBox1&quot;</span>;</span><br><span class="line">            textBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">24</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">this</span>.Controls.AddRange(<span class="keyword">new</span> Control[] &#123; ListBox1, label1, textBox1 &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Populate the list box using an array as DataSource.</span></span><br><span class="line">            ArrayList USStates = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Alabama&quot;</span>, <span class="string">&quot;AL&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Washington&quot;</span>, <span class="string">&quot;WA&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;West Virginia&quot;</span>, <span class="string">&quot;WV&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wisconsin&quot;</span>, <span class="string">&quot;WI&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wyoming&quot;</span>, <span class="string">&quot;WY&quot;</span>));</span><br><span class="line">            ListBox1.DataSource = USStates;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set the long name as the property to be displayed and the short</span></span><br><span class="line">            <span class="comment">// name as the value to be returned when a row is selected.  Here</span></span><br><span class="line">            <span class="comment">// these are properties; if we were binding to a database table or</span></span><br><span class="line">            <span class="comment">// query these could be column names.</span></span><br><span class="line">            ListBox1.DisplayMember = <span class="string">&quot;LongName&quot;</span>;</span><br><span class="line">            ListBox1.ValueMember = <span class="string">&quot;ShortName&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Bind the SelectedValueChanged event to our handler for it.</span></span><br><span class="line">            ListBox1.SelectedValueChanged += </span><br><span class="line">                <span class="keyword">new</span> EventHandler(ListBox1_SelectedValueChanged);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Ensure the form opens with no rows selected.</span></span><br><span class="line">            ListBox1.ClearSelected();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ListBox1_SelectedValueChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ListBox1.SelectedIndex != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                textBox1.Text = ListBox1.SelectedValue.ToString();</span><br><span class="line">                <span class="comment">// If we also wanted to get the displayed text we could use</span></span><br><span class="line">                <span class="comment">// the SelectedItem item property:</span></span><br><span class="line">                <span class="comment">// string s = ((USState)ListBox1.SelectedItem).LongName;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">USState</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myShortName;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myLongName;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">USState</span>(<span class="params"><span class="built_in">string</span> strLongName, <span class="built_in">string</span> strShortName</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.myShortName = strShortName;</span><br><span class="line">            <span class="keyword">this</span>.myLongName = strLongName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ShortName</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myShortName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> LongName</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myLongName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="示例1-ListBoxSample3"><a href="#示例1-ListBoxSample3" class="headerlink" title="示例1: ListBoxSample3"></a>示例1: ListBoxSample3</h1><p><strong>ListControl类属于System.Windows.Forms命名空间，在下文中一共展示了ListControl类的1个代码示例</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入命名空间</span></span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">MyListControlSample</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ListBoxSample3</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> ListBox ListBox1 = <span class="keyword">new</span> ListBox();</span><br><span class="line">        <span class="keyword">private</span> Label label1 = <span class="keyword">new</span> Label();</span><br><span class="line">        <span class="keyword">private</span> TextBox textBox1 = <span class="keyword">new</span> TextBox();</span><br><span class="line"></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.Run(<span class="keyword">new</span> ListBoxSample3());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ListBoxSample3</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> Size(<span class="number">307</span>, <span class="number">206</span>);</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">&quot;ListBox Sample3&quot;</span>;</span><br><span class="line"></span><br><span class="line">            ListBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">16</span>);</span><br><span class="line">            ListBox1.Name = <span class="string">&quot;ListBox1&quot;</span>;</span><br><span class="line">            ListBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">130</span>);</span><br><span class="line"></span><br><span class="line">            label1.Location = <span class="keyword">new</span> Point(<span class="number">14</span>, <span class="number">150</span>);</span><br><span class="line">            label1.Name = <span class="string">&quot;label1&quot;</span>;</span><br><span class="line">            label1.Size = <span class="keyword">new</span> Size(<span class="number">40</span>, <span class="number">24</span>);</span><br><span class="line">            label1.Text = <span class="string">&quot;Value&quot;</span>;</span><br><span class="line"></span><br><span class="line">            textBox1.Location = <span class="keyword">new</span> Point(<span class="number">54</span>, <span class="number">150</span>);</span><br><span class="line">            textBox1.Name = <span class="string">&quot;textBox1&quot;</span>;</span><br><span class="line">            textBox1.Size = <span class="keyword">new</span> Size(<span class="number">240</span>, <span class="number">24</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">this</span>.Controls.AddRange(<span class="keyword">new</span> Control[] &#123; ListBox1, label1, textBox1 &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Populate the list box using an array as DataSource.</span></span><br><span class="line">            ArrayList USStates = <span class="keyword">new</span> ArrayList();</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Alabama&quot;</span>, <span class="string">&quot;AL&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Washington&quot;</span>, <span class="string">&quot;WA&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;West Virginia&quot;</span>, <span class="string">&quot;WV&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wisconsin&quot;</span>, <span class="string">&quot;WI&quot;</span>));</span><br><span class="line">            USStates.Add(<span class="keyword">new</span> USState(<span class="string">&quot;Wyoming&quot;</span>, <span class="string">&quot;WY&quot;</span>));</span><br><span class="line">            ListBox1.DataSource = USStates;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set the long name as the property to be displayed and the short</span></span><br><span class="line">            <span class="comment">// name as the value to be returned when a row is selected.  Here</span></span><br><span class="line">            <span class="comment">// these are properties; if we were binding to a database table or</span></span><br><span class="line">            <span class="comment">// query these could be column names.</span></span><br><span class="line">            ListBox1.DisplayMember = <span class="string">&quot;LongName&quot;</span>;</span><br><span class="line">            ListBox1.ValueMember = <span class="string">&quot;ShortName&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Bind the SelectedValueChanged event to our handler for it.</span></span><br><span class="line">            ListBox1.SelectedValueChanged += </span><br><span class="line">                <span class="keyword">new</span> EventHandler(ListBox1_SelectedValueChanged);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Ensure the form opens with no rows selected.</span></span><br><span class="line">            ListBox1.ClearSelected();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ListBox1_SelectedValueChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ListBox1.SelectedIndex != <span class="number">-1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                textBox1.Text = ListBox1.SelectedValue.ToString();</span><br><span class="line">                <span class="comment">// If we also wanted to get the displayed text we could use</span></span><br><span class="line">                <span class="comment">// the SelectedItem item property:</span></span><br><span class="line">                <span class="comment">// string s = ((USState)ListBox1.SelectedItem).LongName;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">USState</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myShortName;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">string</span> myLongName;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">USState</span>(<span class="params"><span class="built_in">string</span> strLongName, <span class="built_in">string</span> strShortName</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.myShortName = strShortName;</span><br><span class="line">            <span class="keyword">this</span>.myLongName = strLongName;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> ShortName</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myShortName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> LongName</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> myLongName;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://vimsky.com/examples/detail/csharp-event-system.windows.forms.listcontrol.selectedvaluechanged.html">C# ListControl.SelectedValueChanged事件代码示例</a></li><li><a href="https://vimsky.com/examples/detail/csharp-class-system.windows.forms.listcontrol.html">C# ListControl类代码示例</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#控件CheckedListBox 中 ListControl.SelectedValueChanged 事件发生，即参数变化时处理事件</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="CheckedListBox" scheme="https://zml3589110.github.io/tags/CheckedListBox/"/>
    
    <category term="ListControl.SelectedValueChanged" scheme="https://zml3589110.github.io/tags/ListControl-SelectedValueChanged/"/>
    
  </entry>
  
  <entry>
    <title>C#控件CheckedListBox之一（基本使用方法）</title>
    <link href="https://zml3589110.github.io/posts/509147200.html"/>
    <id>https://zml3589110.github.io/posts/509147200.html</id>
    <published>2023-02-23T03:32:20.000Z</published>
    <updated>2023-03-27T00:14:26.638Z</updated>
    
    <content type="html"><![CDATA[<blockquote><ol><li>有时候特殊的场景，要求鼠标点击一下时节点就要选中，因此可以做如下设置：</li></ol></blockquote><p><strong>在初始化的时候load事件里，加上这条设置</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.checkedListBox1.CheckOnClick = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h1 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h1><p><strong>（1）CheckOnClick属性</strong></p><p>CheckOnClick属性是布尔类型的值，如果为True，那么单击条目就能将条目勾选；如果为false，则要双击条目才能将其勾选。</p><p><strong>（2）ColumnWidth属性</strong></p><p>ColumnWitdh属性是整型数据，表示多列条目各列的列宽。该属性只有在MultiColumn属性（允许多列显示）设置为true时才有意义。</p><p><strong>（3）MultiColumn属性</strong></p><p>MultiColumn属性是布尔类型的值，指示是否开启多列显示条目。该属性是配合ColumnWidth属性一起使用。</p><p><strong>（4）SelectMode属性</strong></p><p>该属性指示列表将是单选还是多选，这里的“选”表示选中而不是“勾选”，选中后条目会高亮，但条目左边的小方框不会勾选。在CheckedLIstBox控件中，不支持多项选择，该属性只有两个值是有效的，分别是None和One。None表示条目不能被选中，左边的小方框也不能被勾选；One表示只有一个条目可以被选中（但勾选可以选多项）。</p><p><strong>（5）Sorted属性</strong></p><p>该属性是布尔累心的值，如果为true，则条目会根据字母进行排序，如果为false，则不进行排序。</p><p><strong>（6）Count属性</strong></p><p>该属性表示列表中条目的总量。</p><blockquote><p>用法如下：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> conut=checkedListBox1.Items.Count</span><br></pre></td></tr></table></figure><p><strong>（7）Items属性</strong></p><p>获取列表中条目的集合，通过下标获取指定条目。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">object</span> item=checkedListBox1.Items[i];</span><br></pre></td></tr></table></figure><p><strong>（8）SelectedItem属性和SelectedItems属性</strong></p><p>SelectedItem属性作用是获取选中的条目，而SelectedItems属性是一个数组，保存着被选中的条目的集合，可通过下标来获取条目。</p><blockquote><p>用法如下：</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">object</span> item =checkedListBox1.SelectedItem;</span><br><span class="line"></span><br><span class="line"><span class="built_in">object</span> item=checkedListBox1.SelectedItems[i];</span><br><span class="line"></span><br><span class="line">checkedListBox1.Items.Add(item);</span><br></pre></td></tr></table></figure><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><p><strong>（1）Add方法</strong></p><p>该方法用于动态添加条目。用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.Add（“条目一”）；<span class="comment">//参数可以是一个字符串或者是一个条目</span></span><br><span class="line"><span class="comment">//或</span></span><br><span class="line">checkedListBox1.Items.Add（“条目一”，<span class="literal">true</span>）；<span class="comment">//第二个参数是布尔类型的，指示是否让条目被勾选</span></span><br></pre></td></tr></table></figure><p><strong>（2）RemoveAt方法</strong></p><p>该方法用于移除指定的条目，参数是条目的索引值。</p><p><strong>用法如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.RemoveAt(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><strong>（3）Insert方法</strong></p><p>该方法的作用是在指定位置插入一个条目，有两个参数，分别是index和item。index是条目的索引，item可以是一个条目，也可以是一个字符窜。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.Insert(i,“条目一”)；</span><br></pre></td></tr></table></figure><p><strong>（4）GetItemChecked方法</strong></p><p>该方法返回第i项条目是否被勾选（不是选中），如果是则返回true,否则为false。参数是条目的索引值。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bool</span> isChecked=checkedListBox1.GetItemChecked(i)；</span><br></pre></td></tr></table></figure><p><strong>（5）SetItemChecked方法</strong></p><p>设置第i项条目是否被选中，参数有两个，第一个是索引，第二个是布尔值。第二个参数如果选true，则将第i项设置为勾选，否则设置为不勾选。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.SetItemChecked（i，<span class="literal">true</span>）；</span><br></pre></td></tr></table></figure><p><strong>（6）Clear方法</strong></p><p>该方法的作用是清除所有的条目。其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Clear（）；</span><br></pre></td></tr></table></figure><h1 id="常用事件"><a href="#常用事件" class="headerlink" title="常用事件"></a>常用事件</h1><p><strong>（1）ItemCheck事件</strong></p><p>当条目被勾选时发生，其用法如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkedListBox1_ItemCheck</span>(<span class="params"><span class="built_in">object</span> sender, ItemCheckEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//通过索引引用勾选的条目</span></span><br><span class="line">textBox1.Text = textBox1.Text +<span class="string">&quot;\r\n&quot;</span>+ checkedListBox1.Items[e.Index].ToString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（2）SelectedIndexChanged和SelectedValuedChanged事件</strong></p><p>这两个事件都是在条目被选中时发生（不一定被勾选）</p><h1 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h1><h2 id="1、遍历打勾的值"><a href="#1、遍历打勾的值" class="headerlink" title="1、遍历打勾的值"></a>1、遍历打勾的值</h2><p>初次接触CheckedListBox控件一般认为：foreach (object obj in checkedListBox1.SelectedItems)即可遍历选中的值。<br>其实这里遍历的只是高亮的值并不是打勾的值。</p><p>遍历打勾的值要用下面的代码：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">    &#123;</span><br><span class="line">        MessageBox.Show(checkedListBox1.GetItemText(checkedListBox1.Items[i]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、添加项"><a href="#2、添加项" class="headerlink" title="2、添加项"></a>2、添加项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.Items.Add(<span class="string">&quot;蓝色&quot;</span>);</span><br><span class="line">checkedListBox1.Items.Add(<span class="string">&quot;红色&quot;</span>);</span><br><span class="line">checkedListBox1.Items.Add(<span class="string">&quot;黄色&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="3、判断第i项是否选中-选中为true-否则为false"><a href="#3、判断第i项是否选中-选中为true-否则为false" class="headerlink" title="3、判断第i项是否选中,选中为true,否则为false"></a>3、判断第i项是否选中,选中为true,否则为false</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>（checkedListBox1.GetItemChecked(i)）</span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、设置第i项是否选中"><a href="#4、设置第i项是否选中" class="headerlink" title="4、设置第i项是否选中"></a>4、设置第i项是否选中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">checkedListBox1.SetItemChecked(i, <span class="literal">true</span>);  <span class="comment">//true改为false为没有选中。</span></span><br></pre></td></tr></table></figure><h2 id="5、设置全选"><a href="#5、设置全选" class="headerlink" title="5、设置全选"></a>5、设置全选</h2><p><strong>添加一个名为select_all的checkbox控件，由其控制checkedListBox是全选还是全不选</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">select_all_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(select_all.Checked)</span><br><span class="line">&#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; checkedListBox1.Items.Count; j++)</span><br><span class="line">               checkedListBox1.SetItemChecked(j, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> j =<span class="number">0</span>; j &lt; checkedListBox1.Items.Count; j++)</span><br><span class="line">      checkedListBox1.SetItemChecked(j, <span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、得到全部选中的值-，并将选中的项的文本组合成为一个字符串"><a href="#6、得到全部选中的值-，并将选中的项的文本组合成为一个字符串" class="headerlink" title="6、得到全部选中的值 ，并将选中的项的文本组合成为一个字符串"></a>6、得到全部选中的值 ，并将选中的项的文本组合成为一个字符串</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> strCollected = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span> (strCollected == <span class="built_in">string</span>.Empty)</span><br><span class="line">          &#123;</span><br><span class="line">               strCollected = </span><br><span class="line">                   checkedListBox1.GetItemText(checkedListBox1.Items[i]);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">               strCollected = strCollected + <span class="string">&quot;/&quot;</span> + </span><br><span class="line">                   checkedListBox1.GetItemText(checkedListBox1.Items[i]);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、设置CheckedListBox中第i项的Checked状态"><a href="#7、设置CheckedListBox中第i项的Checked状态" class="headerlink" title="7、设置CheckedListBox中第i项的Checked状态"></a>7、设置CheckedListBox中第i项的Checked状态</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1：</span></span><br><span class="line">checkedListBox1.SetItemCheckState(i, CheckState.Checked);</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2：</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (checkedListBox1.GetSelected(i))</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(checkedListBox1.CheckedItems.ToString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法3：</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">checkBoxAll_CheckedChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (checkBoxAll.Checked)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="comment">//被选择了则将CheckedListBox中的所有条目都变为Checked状态</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBoxLayerControl.Items.Count; i++)</span><br><span class="line">        &#123;    </span><br><span class="line">checkedListBoxLayerControl.SetItemCheckState(i, CheckState.Checked);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">     <span class="comment">//否则变成Unchecked状态</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBoxLayerControl.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">checkedListBoxLayerControl.SetItemCheckState(i,CheckState.Unchecked);</span><br><span class="line">&#125;             </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8、checkedListBox-单选设置-代码实现"><a href="#8、checkedListBox-单选设置-代码实现" class="headerlink" title="8、checkedListBox 单选设置(代码实现)"></a>8、checkedListBox 单选设置(代码实现)</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chkl_ItemAuditing_ItemCheck</span>(<span class="params"><span class="built_in">object</span> sender, ItemCheckEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (chkl_ItemAuditing.CheckedItems.Count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">         <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; chkl_ItemAuditing.Items.Count; i++)</span><br><span class="line">         &#123;</span><br><span class="line"><span class="keyword">if</span> (i != e.Index)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.chkl_ItemAuditing.SetItemCheckState(i,</span><br><span class="line">System.Windows.Forms.CheckState.Unchecked);</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9、checkedListBox1显示一个数据库中关键字对应的所有记录"><a href="#9、checkedListBox1显示一个数据库中关键字对应的所有记录" class="headerlink" title="9、checkedListBox1显示一个数据库中关键字对应的所有记录"></a>9、checkedListBox1显示一个数据库中关键字对应的所有记录</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; table.Rows.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> name = table.Rows[<span class="string">&quot;myname&quot;</span>].ToString();</span><br><span class="line">    <span class="built_in">string</span> paw = table.Rows[<span class="string">&quot;mypaw&quot;</span>].ToString();</span><br><span class="line">    checkedListBox1.Items.Add(name + paw);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10、根据名设置选中"><a href="#10、根据名设置选中" class="headerlink" title="10、根据名设置选中"></a>10、根据名设置选中</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;CheckedListBox.Items.Count;i++)  </span><br><span class="line">&#123;  </span><br><span class="line">    <span class="keyword">if</span>(CheckedListBox.GetItemText(CheckedListBox.Items)==<span class="string">&quot;你得到的值&quot;</span>)  </span><br><span class="line">&#123;  </span><br><span class="line">      CheckedListBox.SetItemChecked(i,<span class="literal">true</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11、清除checkedListBox1中所有的选项"><a href="#11、清除checkedListBox1中所有的选项" class="headerlink" title="11、清除checkedListBox1中所有的选项"></a>11、清除checkedListBox1中所有的选项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox1.Items.Clear();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12、设置索引为index的项为选中状态"><a href="#12、设置索引为index的项为选中状态" class="headerlink" title="12、设置索引为index的项为选中状态"></a>12、设置索引为index的项为选中状态</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox1.SetItemChecked(i, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13、选中checkedListBox1所有的选项"><a href="#13、选中checkedListBox1所有的选项" class="headerlink" title="13、选中checkedListBox1所有的选项"></a>13、选中checkedListBox1所有的选项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法1：</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)        </span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox1.SetItemCheckState(i, CheckState.Checked);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2：</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123; </span><br><span class="line"><span class="comment">//如果checkedListBox1的第i项被选中，则显示checkedListBox1对应的值</span></span><br><span class="line"><span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">&#123;</span><br><span class="line">     MessageBox.Show(checkedListBox1.Items.ToString());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14、反向选择checkedListBox1的选项"><a href="#14、反向选择checkedListBox1的选项" class="headerlink" title="14、反向选择checkedListBox1的选项"></a>14、反向选择checkedListBox1的选项</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.Items.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (checkedListBox1.GetItemChecked(i))</span><br><span class="line">   &#123;</span><br><span class="line">       checkedListBox1.SetItemChecked(i, <span class="literal">false</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">       checkedListBox1.SetItemChecked(i, <span class="literal">true</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15、checkedListBox1中选定的项-gt-checkedListBox2"><a href="#15、checkedListBox1中选定的项-gt-checkedListBox2" class="headerlink" title="15、checkedListBox1中选定的项-&gt;checkedListBox2"></a>15、checkedListBox1中选定的项-&gt;checkedListBox2</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; checkedListBox1.CheckedItems.Count; i++)</span><br><span class="line">&#123;</span><br><span class="line">    checkedListBox2.Items.Add(<span class="keyword">this</span>.checkedListBox1.CheckedItems);</span><br><span class="line"><span class="comment">//remove是除去一个具体的值，不是index，注意了</span></span><br><span class="line">    <span class="keyword">this</span>.checkedListBox1.Items.Remove(<span class="keyword">this</span>.checkedListBox1.CheckedItems);      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/opencv220/article/details/109616788">c#学习笔记：CheckedListBox控件的用法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#控件CheckedListBox 基本用法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="CheckedListBox" scheme="https://zml3589110.github.io/tags/CheckedListBox/"/>
    
    <category term="基本使用" scheme="https://zml3589110.github.io/tags/%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>C#控件DataGridView之三（控件中至少有一列没有单元格模板）</title>
    <link href="https://zml3589110.github.io/posts/520108804.html"/>
    <id>https://zml3589110.github.io/posts/520108804.html</id>
    <published>2023-02-23T03:22:20.000Z</published>
    <updated>2023-03-27T00:14:26.655Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景需求"><a href="#背景需求" class="headerlink" title="背景需求"></a>背景需求</h1><p>一个Form窗体，一个Button按钮，一个DataGridView控件，我要实现的是点击按钮，DataGridView控件增加一列。</p><h2 id="第一次尝试-报错"><a href="#第一次尝试-报错" class="headerlink" title="第一次尝试-报错"></a>第一次尝试-报错</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DataGridViewColumn column = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    column.Name = <span class="string">&quot;Column0&quot;</span>;</span><br><span class="line">    column.HeaderText = <span class="string">&quot;选择&quot;</span>;      </span><br><span class="line">    dataGridView1.Columns.Add(column);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题：</strong></p><img src="https://img-blog.csdn.net/20180404165123659"><h2 id="第二次尝试-重复增加这一列"><a href="#第二次尝试-重复增加这一列" class="headerlink" title="第二次尝试-重复增加这一列"></a>第二次尝试-重复增加这一列</h2><p><strong>多次单击按钮，就会重复增加这一列</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DataGridViewColumn column = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    column.Name = <span class="string">&quot;Column0&quot;</span>;</span><br><span class="line">    column.HeaderText = <span class="string">&quot;选择&quot;</span>;</span><br><span class="line">    DataGridViewCell dgvcell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">    column.CellTemplate = dgvcell;</span><br><span class="line">    dataGridView1.Columns.Add(column);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三次尝试-达到要求"><a href="#第三次尝试-达到要求" class="headerlink" title="第三次尝试-达到要求"></a>第三次尝试-达到要求</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    dataGridView1.Columns.Clear();</span><br><span class="line">    DataGridViewColumn column = <span class="keyword">new</span> DataGridViewColumn();</span><br><span class="line">    column.Name = <span class="string">&quot;Column0&quot;</span>;</span><br><span class="line">    column.HeaderText = <span class="string">&quot;选择&quot;</span>;</span><br><span class="line">    DataGridViewCell dgvcell = <span class="keyword">new</span> DataGridViewTextBoxCell();</span><br><span class="line">    column.CellTemplate = dgvcell;</span><br><span class="line">    dataGridView1.Columns.Add(column);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/Luyanc/article/details/79819517">DataGridView控件中至少有一列没有单元格模板</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#控件DataGridView 错误提示控件中没有单元格模板</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/tags/DataGridView/"/>
    
    <category term="错误" scheme="https://zml3589110.github.io/tags/%E9%94%99%E8%AF%AF/"/>
    
    <category term="一列没有单元格" scheme="https://zml3589110.github.io/tags/%E4%B8%80%E5%88%97%E6%B2%A1%E6%9C%89%E5%8D%95%E5%85%83%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>C# 控件Groupbox之一（动态添加checkbox）</title>
    <link href="https://zml3589110.github.io/posts/3607925543.html"/>
    <id>https://zml3589110.github.io/posts/3607925543.html</id>
    <published>2023-02-23T03:10:20.000Z</published>
    <updated>2023-03-27T00:14:26.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p><strong>添加都是在groupbox的text的位置，每添加一个就不前面加的覆盖了</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>(DataRow dr <span class="keyword">in</span> dt.Rows)</span><br><span class="line"></span><br><span class="line">         &#123;</span><br><span class="line"></span><br><span class="line">            CheckBox chkbox = <span class="keyword">new</span> CheckBox();</span><br><span class="line"></span><br><span class="line">            chkbox.Text = dr[<span class="string">&quot;模块名称&quot;</span>].ToString();</span><br><span class="line"></span><br><span class="line">            gpboxBrow.Controls.Add(chkbox);</span><br><span class="line"></span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><h2 id="添加位置坐标来解决问题"><a href="#添加位置坐标来解决问题" class="headerlink" title="添加位置坐标来解决问题"></a>添加位置坐标来解决问题</h2><ul><li><p>方法一：</p><p>在你的代码中添加这样的代码：</p></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chkbox.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">349</span>, <span class="number">210</span>);</span><br><span class="line">chkbox.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br></pre></td></tr></table></figure><p><strong>例如：动态添加两个Button</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// button1</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Button btn = <span class="keyword">new</span> Button();</span><br><span class="line">btn.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">349</span>, <span class="number">210</span>);</span><br><span class="line">btn.Name = <span class="string">&quot;button1&quot;</span>;</span><br><span class="line">btn.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line">btn.TabIndex = <span class="number">2</span>;</span><br><span class="line">btn.Text = <span class="string">&quot;button1&quot;</span>;</span><br><span class="line">btn.UseVisualStyleBackColor = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.Controls.Add(btn);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// button2</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Button btn2 = <span class="keyword">new</span> Button();</span><br><span class="line">btn2.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">349</span>, <span class="number">240</span>);</span><br><span class="line">btn2.Name = <span class="string">&quot;button2&quot;</span>;</span><br><span class="line">btn2.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">75</span>, <span class="number">23</span>);</span><br><span class="line">btn2.TabIndex = <span class="number">3</span>;</span><br><span class="line">btn2.Text = <span class="string">&quot;button2&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>.Controls.Add(btn2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="或者设置chkbox-Location属性"><a href="#或者设置chkbox-Location属性" class="headerlink" title="或者设置chkbox.Location属性"></a>或者设置chkbox.Location属性</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">foreach</span>(DataRow dr <span class="keyword">in</span> dt.Rows)</span><br><span class="line">         &#123;</span><br><span class="line">            y += <span class="number">30</span>;</span><br><span class="line">            CheckBox chkbox = <span class="keyword">new</span> CheckBox();</span><br><span class="line">            chkbox.Location = <span class="keyword">new</span> Point(<span class="number">10</span>,y);</span><br><span class="line">            chkbox.Text = dr[<span class="string">&quot;模块名称&quot;</span>].ToString();</span><br><span class="line">            gpboxBrow.Controls.Add(chkbox);</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://bbs.csdn.net/topics/290088852?list=559332">groupbox 里动态添加checkbox的问题</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 在控件Groupbox内动态添加 checkbox 复选框</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="Groupbox" scheme="https://zml3589110.github.io/categories/Groupbox/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="Groupbox" scheme="https://zml3589110.github.io/tags/Groupbox/"/>
    
    <category term="checkbox" scheme="https://zml3589110.github.io/tags/checkbox/"/>
    
  </entry>
  
</feed>
