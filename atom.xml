<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2024-08-01T03:55:38.714Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ESP-IDF网络编程之mDNS</title>
    <link href="https://zml3589110.github.io/posts/251041743.html"/>
    <id>https://zml3589110.github.io/posts/251041743.html</id>
    <published>2024-08-01T03:28:20.000Z</published>
    <updated>2024-08-01T03:55:38.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h1><p>官网地址 <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-reference/protocols/mdns.html">mDNS 服务</a></p><p>注意：<br>之前使用esp8266完成了mDNS对主机域名解析，这次是想用这个办法使用在esp32中，本以为把之前文件直接复制就行了，谁知是不行的！查询发现是因为没有添加这个组件，官放已经迁出至独立的仓库！根据官方说明添加到组件库即可！</p><p>mDNS 是一种组播 UDP 服务，用来提供本地网络服务和主机发现。</p><p>自 v5.0 版本起，ESP-IDF 组件 <code>mDNS</code> 已从 ESP-IDF 中迁出至独立的仓库：</p><ul><li><p>GitHub 上 <a href="https://github.com/espressif/esp-protocols/tree/master/components/mdns">mDNS 组件</a></p></li><li><p>GitHub 上 <a href="https://github.com/espressif/esp-protocols/tree/master/components/mdns/examples/query_advertise">mDNS 示例</a></p></li></ul><p>运行 <code>idf.py add-dependency espressif/mdns</code>，在项目中添加 mDNS 组件。</p><p>托管的文档</p><p>请点击如下链接，查看 mDNS 的相关文档：</p><ul><li><a href="https://docs.espressif.com/projects/esp-protocols/mdns/docs/latest/zh_CN/index.html">mDNS 文档</a></li></ul><h1 id="mDNS学习使用"><a href="#mDNS学习使用" class="headerlink" title="mDNS学习使用"></a>mDNS学习使用</h1><h2 id="mDNS的作用"><a href="#mDNS的作用" class="headerlink" title="mDNS的作用"></a>mDNS的作用</h2><p>mDNS 是一种组播 UDP 服务，用来提供本地网络服务和主机发现。</p><ul><li>你要和设备通信，需要记住IP地址不好记。用了mDNS只要几个名字就行。</li><li>你需要快速知道局域网内是否有你想要的服务，用mDNS查一下就行。</li><li>这个协议只在局域网内有效。</li><li>先简单了解下什么是组播–一种被预先定义好的IP地址数字。用于实现一对多的通信。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">组播是一对多。</span></span><br><span class="line"><span class="string">广播是一对所有。</span></span><br></pre></td></tr></table></figure><h2 id="mDNS涉及到的标准文件"><a href="#mDNS涉及到的标准文件" class="headerlink" title="mDNS涉及到的标准文件"></a>mDNS涉及到的标准文件</h2><ul><li><a href="https://datatracker.ietf.org/doc/html/rfc6762">rfc6762</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc6763">rfc6763</a></li></ul><h2 id="组播地址"><a href="#组播地址" class="headerlink" title="组播地址"></a>组播地址</h2><ul><li>因为有IPV4和IPV6两类地址，因此组播也分两类。</li><li>多播地址在网络通信中用于发送数据到多个接收器，而不是单一接收器或广播到所有接收器。多播地址有其特定的规则和范围</li></ul><h3 id="IPv4-多播地址"><a href="#IPv4-多播地址" class="headerlink" title="IPv4 多播地址"></a>IPv4 多播地址</h3><p>IPv4 多播地址范围是 224.0.0.0 到 239.255.255.255。这些地址进一步细分为特定用途的子范围：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">局部网络控制块： 224.0.0.0 到 224.0.0.255</span><br><span class="line"><span class="code">    这些地址保留用于本地网络内的协议控制消息，不会被路由器转发到其他网络。</span></span><br><span class="line"><span class="code">    例如，224.0.0.1 是所有主机的多播地址，224.0.0.2 是所有路由器的多播地址。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">预留多播地址： 224.0.1.0 到 238.255.255.255</span></span><br><span class="line"><span class="code">    这些地址用于全球范围的多播应用，且路由器会转发这些地址的数据包。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">本地管理地址： 239.0.0.0 到 239.255.255.255</span></span><br><span class="line"><span class="code">    这些地址保留用于组织内部的多播，不会被全球路由。</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><h3 id="IPv6-多播地址"><a href="#IPv6-多播地址" class="headerlink" title="IPv6 多播地址"></a>IPv6 多播地址</h3><p>IPv6 多播地址以 ff00::&#x2F;8 前缀开头，并具有不同的范围标识符和子范围：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">范围标识符（Scope Identifier）：</span><br><span class="line"><span class="code">    ff01:: 链路本地（Link-Local）</span></span><br><span class="line"><span class="code">    ff02:: 本地网络（Local Network）</span></span><br><span class="line"><span class="code">    ff05:: 站点本地（Site-Local）</span></span><br><span class="line"><span class="code">    ff08:: 组织本地（Organization-Local）</span></span><br><span class="line"><span class="code">    ff0e:: 全球范围（Global）</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">预定义多播地址：</span></span><br><span class="line"><span class="code">    ff02::1 所有节点地址（所有主机）</span></span><br><span class="line"><span class="code">    ff02::2 所有路由器地址</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><h3 id="预先定义好的组播地址"><a href="#预先定义好的组播地址" class="headerlink" title="预先定义好的组播地址"></a>预先定义好的组播地址</h3><p>不同的标准，如果用到组播地址，会定义出组播地址的值。下面列出常见的。</p><p><strong>常见IPv4 预定义组播地址</strong><br>这些地址用于局域网内的控制消息，通常不被路由器转发。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">224.0.0.1: 所有主机</span><br><span class="line">224.0.0.2: 所有路由器</span><br><span class="line">224.0.0.4: DVMRP 路由器</span><br><span class="line">224.0.0.5: OSPF 路由器</span><br><span class="line">224.0.0.6: OSPF 指定路由器</span><br><span class="line">224.0.0.9: RIPv2 路由器</span><br><span class="line">224.0.0.10: EIGRP 路由器</span><br><span class="line">224.0.0.13: PIM 路由器</span><br><span class="line">224.0.0.18: VRRP 路由器</span><br><span class="line">224.0.0.22: IGMPv3</span><br><span class="line">224.0.0.251: mDNS (Multicast DNS)</span><br><span class="line">224.0.0.252: Link-Local Multicast Name Resolution (LLMNR)</span><br><span class="line">224.0.1.1: NTP (Network Time Protocol)</span><br><span class="line">224.0.1.22: H.323 网关发现</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>常见IPv4 预定义预留多播地址（224.0.1.0 - 238.255.255.255）</strong></p><p>这些地址用于全球范围的多播应用，路由器会转发这些地址的数据包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">224.0.1.2: SGI-Dogfight（多用户虚拟现实游戏）</span><br><span class="line">224.0.1.35: SVRLOC (Service Location Protocol)</span><br><span class="line">224.0.1.60: AAP (AOL Access Protocol)</span><br><span class="line">239.255.255.250: SSDP (Simple Service Discovery Protocol)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>常见IPv4 预定义本地管理地址（239.0.0.0 - 239.255.255.255）</strong></p><p>这些地址用于组织内部的多播，不会被全球路由。</p><p><strong>常见IPv6 预定义组播地址</strong><br>范围标识符（Scope Identifier）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ff01::: 节点本地（Node-Local）</span><br><span class="line">ff02::: 链路本地（Link-Local）</span><br><span class="line">ff05::: 站点本地（Site-Local）</span><br><span class="line">ff08::: 组织本地（Organization-Local）</span><br><span class="line">ff0e::: 全球范围（Global）</span><br></pre></td></tr></table></figure><p>预定义多播地址</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ff02::1: 所有节点（All Nodes）</span><br><span class="line">ff02::2: 所有路由器（All Routers）</span><br><span class="line">ff02::5: OSPF 路由器</span><br><span class="line">ff02::6: OSPF 指定路由器</span><br><span class="line">ff02::9: RIPv2 路由器</span><br><span class="line">ff02::a: EIGRP 路由器</span><br><span class="line">ff02::d: PIM 路由器</span><br><span class="line">ff02::16: MLDv2（Multicast Listener Discovery version 2）</span><br><span class="line">ff02::fb: mDNS (Multicast DNS)</span><br><span class="line">ff02::1:3: Link-Local Multicast Name Resolution (LLMNR)</span><br><span class="line">ff05::1:3: DHCPv6 服务器/中继代理</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>备注：</strong><br>“组播”和“多播”在网络通信中基本上是同一个概念。两者指的是同一种技术。</p><h2 id="mDNS调试工具"><a href="#mDNS调试工具" class="headerlink" title="mDNS调试工具"></a>mDNS调试工具</h2><p>在电脑端，有两款，</p><ul><li>一款是Apple开发的Bonjour 的服务（有windows版本），这款我下载安装了，不会用尴尬，好像只能识别打印机服务。</li><li>一款是在linux平台下的avahi（默认已安装），也有图形界面。后面会有这款工具的截图。</li></ul><h2 id="例程"><a href="#例程" class="headerlink" title="例程"></a>例程</h2><p>ESP的mDNS文档和例程都放在下面的git 库里面</p><p><a href="https://github.com/espressif/esp-protocols/tree/master/components/mdns/examples/query_advertise">例程</a></p><ol><li>git下来后vscode打开例程。</li><li>设置wifi账号密码</li></ol><img src="/posts/undefined/538244caafa8445c8084938d4666fdad.png" class="" title="在这里插入图片描述"><p><strong>编译和运行测试</strong><br>运行命令avahi-discover，打开图形界面，如下所示。</p><img src="/posts/undefined/07e2bccc2fd64b7ca1e271f87eefa7ee.png" class="" title="在这里插入图片描述"><p>点击任意一项，就可以看到解析出来的数据。如下所示。</p><img src="/posts/undefined/ca6e9312a0be46119b9b8d8bc9eef283.png" class="" title="在这里插入图片描述"><p>直接ping域名也是可以ping通的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping esp32-mdns.local</span><br></pre></td></tr></table></figure><img src="/posts/undefined/9c17ec314b18418286b9c1d9453e921c.png" class="" title="在这里插入图片描述"><p>按下按钮0，打印如下信息。查询到局域网里有这些服务。</p><img src="/posts/undefined/40056e1148b44637a2c0fec6d850c129.png" class="" title="在这里插入图片描述"><h2 id="mDNS如何开发和使用"><a href="#mDNS如何开发和使用" class="headerlink" title="mDNS如何开发和使用"></a>mDNS如何开发和使用</h2><p>开发主要看需求，分两个需求：注册服务和查询服务。<br>根据自己的需求决定是否要做这两个动作。<br>下面只是把关键的代码片段拿出来，完整代码，请看例程。</p><p><strong>初始化mdns</strong><br>mdns_init() 这一步是通用的，不管是注册还是查询，都要先初始化。</p><h3 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h3><ol><li><p>设置主机名<br>mdns_hostname_set(hostname)</p></li><li><p>设置实例名<br>mdns_instance_name_set(EXAMPLE_MDNS_INSTANCE)</p></li><li><p>注册服务</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mdns_service_add(<span class="string">&quot;ESP32-WebServer&quot;</span>, <span class="string">&quot;_http&quot;</span>, <span class="string">&quot;_tcp&quot;</span>, <span class="number">80</span>, serviceTxtData, <span class="number">3</span>) </span><br><span class="line">mdns_service_subtype_add_for_host(<span class="string">&quot;ESP32-WebServer&quot;</span>, <span class="string">&quot;_http&quot;</span>, <span class="string">&quot;_tcp&quot;</span>, <span class="literal">NULL</span>, <span class="string">&quot;_server&quot;</span>) </span><br></pre></td></tr></table></figure></li></ol><h3 id="查询服务"><a href="#查询服务" class="headerlink" title="查询服务"></a>查询服务</h3><p>例程将查询服务做了一次封装，只需要输入服务名和使用协议，就可以查网络中是否存在有这个服务。</p><p>在例程里，只要按一下按钮0，就回调用这个函数，并将查询结果在串口打印。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">query_mdns_service</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *service_name, <span class="keyword">const</span> <span class="keyword">char</span> *proto)</span></span></span><br></pre></td></tr></table></figure><p>上面的函数实际是调用库函数，实现查询</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdns_query_ptr()</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/zhu378287521/article/details/140667971">ESP32和mDNS学习</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF使用 组播 UDP 服务的 mDNS 功能实现局域网内域名解析，通过名字直接解析出IP地址</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/categories/Components/"/>
    
    <category term="mDNS" scheme="https://zml3589110.github.io/categories/mDNS/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="网络编程" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/tags/Components/"/>
    
    <category term="mDNS" scheme="https://zml3589110.github.io/tags/mDNS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 添加随机文章功能</title>
    <link href="https://zml3589110.github.io/posts/883659004.html"/>
    <id>https://zml3589110.github.io/posts/883659004.html</id>
    <published>2024-08-01T02:21:20.000Z</published>
    <updated>2024-08-01T03:14:53.224Z</updated>
    
    <content type="html"><![CDATA[<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>hexo 自带有这个插件 <code>hexo-generator-random</code></p><p>GitHub 项目地址：<a href="https://github.com/Drew233/hexo-generator-random">https://github.com/Drew233/hexo-generator-random</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>npm 先需要安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">npm install object-assign</span><br></pre></td></tr></table></figure><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">npm install hexo-generator-random --save</span><br></pre></td></tr></table></figure><p>然后再照常 <code>hexo d -g</code>，public 下就会有个 <code>random.html</code> 的文件了</p><p>菜单栏可以添加上该地址</p><p>menu:<br>Random | 随机文章： &#x2F;random.html || fas fa-random</p><p>注：是在主题里边的menu修改，自己使用的是 hexo-theme-butterfly</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://ednovas.xyz/2021/07/16/hexorandom/">Hexo 添加随机文章功能</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">hexo实现随机文章推送</summary>
    
    
    
    <category term="HEXO" scheme="https://zml3589110.github.io/categories/HEXO/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/categories/HEXO/%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="插件" scheme="https://zml3589110.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="HEXO" scheme="https://zml3589110.github.io/tags/HEXO/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>唯一ID进行程序加密实现</title>
    <link href="https://zml3589110.github.io/posts/733777082.html"/>
    <id>https://zml3589110.github.io/posts/733777082.html</id>
    <published>2024-07-20T09:40:20.000Z</published>
    <updated>2024-07-20T09:45:01.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-背景说明"><a href="#一-背景说明" class="headerlink" title="一 背景说明"></a>一 背景说明</h2><p>​    项目程序需要进行加密处理。</p><p>​    考虑利用嵌入式芯片的唯一UID，结合Flash读写来实现。</p><p>​    加密后的程序，可以使得从芯片Flash中读取出来的文件（一般为HEX格式）不能用于其他的芯片。</p><h2 id="二-原理介绍"><a href="#二-原理介绍" class="headerlink" title="二 原理介绍"></a>二 原理介绍</h2><p>​    【1】芯片唯一ID</p><p>​    芯片提供了器件<a href="https://so.csdn.net/so/search?q=%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D&spm=1001.2101.3001.7020">电子签名</a>，即唯一身份标识。该信息存储在产品唯一身份标识寄存器中：</p><img src="/posts/733777082/f39fac80c16546a7b84d44902f65b03e.png" class="" title="img"><p>​    UID寄存器描述如下：</p><img src="/posts/733777082/35c1a34630de455d94b2a4c6f03a0462.png" class="" title="img"><p>​    其中，UID1、UID2均为16位，UID3为32位，UID4为32位。    </p><p>​    这样就可以从0x0x1FFFF7E8地址读取3个32bit的数据，获取它的唯一ID。</p><p>​    【2】程序加密逻辑说明</p><p>​    在讲解简单的程序加密方法之前，先了解一下通常的MCU程序复制方法。</p><p>​    通过烧写器（或者其他手段），将MCU内部程序存储区中的内容全部读出，就获取了烧写文件。如果烧写文件没有被加密，则可以直接将它烧写到别的MCU中运行，就完成了复制。</p><p>​    有没有办法可以使得对方即使获取了烧写文件，也不能直接烧写到别的MCU中运行呢？</p><p>​    我们可以利用芯片的唯一ID来实现一种简单的程序加密方法。由于每个芯片的唯一ID是不同的，我们只要在程序中检查ID的合法性即可，主要的步骤如下：</p><p>​    （i）程序首次运行时，读出芯片的唯一ID；</p><p>​    （ii）将ID使用加密算法，计算出一个特殊值，写入到非易失存储区中（需要掉电能保存）；</p><p>​    （iii）以后每次运行时，读出芯片唯一ID，通过算法计算后，与非易失存储区中保存的值比对，如果一致，则正常运行；如果不对，停止运行。</p><p>​    由于每个芯片中的ID是不同的，由加密算法算出的值也是不同的，所以，即使有人获取了我们的烧写文件，烧写到另一片MCU中，由于ID不同，最后也会比对出错，无法执行。</p><p>​    </p><h2 id="三-设计实现"><a href="#三-设计实现" class="headerlink" title="三 设计实现"></a>三 设计实现</h2><p>​    【1】编写获取并加密ID的接口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UID_BASE (0x1FFFF7E8)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： getEncryptID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 获取并加密ID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">u32 <span class="title">getEncryptID</span><span class="params">(u32 *p_id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">0</span>] = *(vu32*)(UID_BASE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">1</span>] = *(vu32*)(UID_BASE + <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">2</span>] = *(vu32*)(UID_BASE + <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ((p_id[<span class="number">0</span>] &gt;&gt; <span class="number">3</span>) + (p_id[<span class="number">1</span>] &gt;&gt; <span class="number">1</span>) + (p_id[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>));  <span class="comment">//加密算法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    【2】编写判断加密ID的接口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> u32 uid_save = <span class="number">0xFFFFFFFF</span>;    <span class="comment">//CPUID保存</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： judgeEncryptID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 判断加密ID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">u8 <span class="title">judgeEncryptID</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_encid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_cpuid[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_addr = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_flashid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    t_encid = <span class="built_in">getEncryptID</span>(t_cpuid);    <span class="comment">//读本机UID</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    t_addr = (u32)&amp;uid_save;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(*(vu32 *)t_addr == <span class="number">0xFFFFFFFF</span>)   <span class="comment">//第一次烧写将加密后的UID写入FLASH</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_Unlock</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_ClearFlag</span>(FLASH_FLAG_BSY|FLASH_FLAG_EOP|FLASH_FLAG_PGERR|FLASH_FLAG_WRPRTERR);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_ProgramWord</span>(t_addr, t_encid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_Lock</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    t_flashid = *(vu32 *)t_addr;        <span class="comment">//第一次上电存完了之后需要再读一遍</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (t_flashid == t_encid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    【3】主函数初始化中执行上面的判断：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断加密UID（若不匹配，则报错并陷入死循环）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(! <span class="built_in">judgeEncryptID</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//主循环</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    【注意点】：</p><p>​        （i）注意 const u32 uid_save 的类型定义，我使用的 keil 环境中不能加 volatile 修饰，如果加了会被定义到RAM区，而非Flash区，这样起不到加密的效果。</p><p>​            如果用的是IAR环境，可能必须加 volatile 修饰，同时工程选项Options-&gt;Debugger-&gt;Download中选择: use flash loader。不这样做的后果是按速度优化编译，再判断加密值，不会重新读取加密值，导致判断出错；</p><p>​        （ii）注意 const u32 uid_save 的初始化值定义为全F，和擦除后的状态一致，所以程序中省略了擦除的操作，可以直接写入；</p><p>​        （iii）唯一ID存储地址 0x1FFFF7E8 应该尽量隐蔽，尽量避免在程序中直接出现该值：</p><img src="/posts/733777082/22584012e28942ba97f8e80f5045b120.png" class="" title="img"><p>​        更好的做法可以参考下面的方案：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： getEncryptID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 获取并加密ID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">u32 <span class="title">getEncryptID</span><span class="params">(u32 *p_id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">volatile</span> u32 UID_BASE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    UID_BASE = <span class="number">0x20000006</span>;    <span class="comment">//让逆向的人误以为是ram变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    UID_BASE -= <span class="number">0x800</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    UID_BASE -= <span class="number">0x1e</span>;         <span class="comment">//等于id的基地址0x1FFFF7E8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">0</span>] = *(vu32*)(UID_BASE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">1</span>] = *(vu32*)(UID_BASE + <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">2</span>] = *(vu32*)(UID_BASE + <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ((p_id[<span class="number">0</span>] &gt;&gt; <span class="number">3</span>) + (p_id[<span class="number">1</span>] &gt;&gt; <span class="number">1</span>) + (p_id[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>));  <span class="comment">//加密算法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-参考资料"><a href="#四-参考资料" class="headerlink" title="四 参考资料"></a>四 <a href="https://so.csdn.net/so/search?q=%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99&spm=1001.2101.3001.7020">参考资料</a></h2><p>​    【1】<a href="https://blog.csdn.net/zhj903/article/details/15029375?ops_request_misc=%7B%22request_id%22:%22169528226516800182780231%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=169528226516800182780231&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-15029375-null-null.142%5Ev94%5Einsert_down28v1&utm_term=stm32%E5%8A%A0%E5%AF%86">STM32 的加密实现_stn32加密-CSDN博客</a></p><p>​    【2】<a href="https://blog.csdn.net/little_grapes/article/details/122711456?ops_request_misc=&request_id=&biz_id=102&utm_term=%E8%8A%AF%E7%89%87ID%E5%8A%A0%E5%AF%86&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-122711456.142%5Ev94%5Einsert_down28v1&spm=1018.2226.3001.4187">【STM32+cubemx】0025 HAL库开发：唯一ID获取和简单的程序加密_mcu唯一uid加密-CSDN博客</a></p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/sinat_33408502/article/details/133355405">【嵌入式】使用嵌入式芯片唯一ID进行程序加密实现</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">嵌入式芯片通过唯一ID进行程序加密实现</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="加密" scheme="https://zml3589110.github.io/categories/%E5%8A%A0%E5%AF%86/"/>
    
    
    <category term="加密" scheme="https://zml3589110.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="唯一ID" scheme="https://zml3589110.github.io/tags/%E5%94%AF%E4%B8%80ID/"/>
    
  </entry>
  
  <entry>
    <title>STM32芯片使用12864串口屏(驱动为ST7567)</title>
    <link href="https://zml3589110.github.io/posts/2271611938.html"/>
    <id>https://zml3589110.github.io/posts/2271611938.html</id>
    <published>2024-07-20T09:26:20.000Z</published>
    <updated>2024-07-20T09:45:01.367Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-背景说明"><a href="#一-背景说明" class="headerlink" title="一 背景说明"></a>一 背景说明</h2><p>拿到一款由ST7567驱动的128×64<a href="https://so.csdn.net/so/search?q=%E7%82%B9%E9%98%B5&spm=1001.2101.3001.7020">点阵</a>液晶屏，准备连接STM32主控连接它并点亮屏幕。</p><h2 id="二-驱动原理"><a href="#二-驱动原理" class="headerlink" title="二 驱动原理"></a>二 驱动原理</h2><p>​    我用的这款LCD屏幕，驱动IC是ST7567。其原理是通过驱动芯片与128×64的液晶模组进行交互，结合背光板，就能指定哪些点阵被点亮，从而得到想要的图形。驱动芯片与屏幕、背光的原理图如下：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/b3c7ba7ce154415f87dc28bd13d9c8a5.png" alt="img"></p><p>​    </p><p>【1】驱动IC——ST7567</p><p>​    （i）驱动引脚：</p><p>​    驱动引脚如下，其中主要用到了SDA&#x2F;SCL&#x2F;RS&#x2F;RES&#x2F;CS这5个引脚进行屏幕配置和数据交互：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/f66f7a1371904158b06a94e5195b4168.png" alt="img"></p><p>​     </p><p>​    （ii）驱动时序：</p><p>​    驱动时序如下，其中：</p><blockquote><p>​    CSB即引脚CS，片选引脚，为低电平的时候，才能写入数据或命令；<br>​    A0即引脚RS，数据或命令选择引脚；<br>​    SCL时钟引脚，为低电平期间，写入数据，<br>​    SDA数据引脚，数据低位在前，高位在后；</p></blockquote><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/a6a801b97e484dd19ae56a7e48858bed.png" alt="img"></p><p>​    复位时序如下，其中：</p><blockquote><p>RSTB也就是RES，复位引脚，拉低即可复位，但是要注意拉低再拉高后要延时一段时间才能操作LCD。</p></blockquote><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/74b055af75744134aebf6422fc2b29e8.png" alt="img"></p><p>​    </p><p>​    （iii）驱动命令：</p><p>​     驱动命令如下，通过RS脚来实现数据与命令的切换：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/9bc21ffcc0c8414f9388c18556fedb53.png" alt="img"></p><p>【2】128×64液晶模组</p><p>​    一共128列，64行（其中每8行作为一页，共8页）：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/0bdd694e92db44509340ebebd80c61ec.png" alt="img"></p><p>【3】BL背光模块</p><p>​    由背光正极性端LED+（LEDA）和背光负极性端LED-（LEDK）控制背光亮灭。</p><h2 id="三-LCD接线"><a href="#三-LCD接线" class="headerlink" title="三 LCD接线"></a>三 LCD接线</h2><p>​    驱动芯片的引脚加上背光的引脚则形成了用户需要外接的所有引脚，其中主要关注CS0&#x2F;RST&#x2F;A0&#x2F;SCK&#x2F;SDA几个引脚，另外V0和XV0之间接1uf电容  VG和VSS之间接1uF电容：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/7603ff8c9d7b4b348ed894a9310c0cf3.png" alt="img"></p><h2 id="四-屏幕初始化"><a href="#四-屏幕初始化" class="headerlink" title="四 屏幕初始化"></a>四 屏幕<a href="https://so.csdn.net/so/search?q=%E5%88%9D%E5%A7%8B%E5%8C%96&spm=1001.2101.3001.7020">初始化</a></h2><p>【1】IO口初始化：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//12864点阵屏引脚定义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_PORT     (GPIOC)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_PIN      (GPIO_Pin_5)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_PORT     (GPIOB)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_PIN      (GPIO_Pin_0)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_PORT     (GPIOB)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_PIN      (GPIO_Pin_1)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_PORT    (GPIOB)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_PIN     (GPIO_Pin_2)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_PORT    (GPIOC)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_PIN     (GPIO_Pin_7)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_L()      GPIO_ResetBits(LDZ_CS_PORT, LDZ_CS_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_H()      GPIO_SetBits(LDZ_CS_PORT, LDZ_CS_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_L()      GPIO_ResetBits(LDZ_RE_PORT, LDZ_RE_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_H()      GPIO_SetBits(LDZ_RE_PORT, LDZ_RE_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_L()      GPIO_ResetBits(LDZ_DC_PORT, LDZ_DC_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_H()      GPIO_SetBits(LDZ_DC_PORT, LDZ_DC_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_L()     GPIO_ResetBits(LDZ_SCK_PORT, LDZ_SCK_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_H()     GPIO_SetBits(LDZ_SCK_PORT, LDZ_SCK_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_L()     GPIO_ResetBits(LDZ_SDA_PORT, LDZ_SDA_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_H()     GPIO_SetBits(LDZ_SDA_PORT, LDZ_SDA_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_Init</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： LDZ初始化</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">RCC_AHBPeriphClockCmd</span>(RCC_AHBPeriph_GPIOB | RCC_AHBPeriph_GPIOC, ENABLE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_CS_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_CS_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_RE_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_RE_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_DC_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_DC_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_SCK_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_SCK_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_SDA_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_SDA_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SCK_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SDA_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_RE_H</span>(); <span class="built_in">Ddl_Delay1ms</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_RE_L</span>(); <span class="built_in">Ddl_Delay1ms</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_RE_H</span>(); <span class="built_in">Ddl_Delay1ms</span>(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【2】写命令&#x2F;写数据（通过DC口即上面的A0引脚来控制，其中高电平为写数据，低电平为写命令）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_SendBit</span><span class="params">(u8 bit)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">u8 i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i ++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_SCK_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(bit &amp; <span class="number">0x80</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">LDZ_SDA_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">LDZ_SDA_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_SCK_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bit &lt;&lt;= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_WriteCMD/LDZ_WriteDAT</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 写命令/写数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_WriteCMD</span><span class="params">(u8 cmd)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_DC_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SendBit</span>(cmd);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_WriteDAT</span><span class="params">(u8 dat)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_DC_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SendBit</span>(dat);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【3】配置屏幕</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_Cfg</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 配置屏幕</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_Cfg</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xE2</span>); <span class="comment">//reset</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Ddl_Delay1ms</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xA2</span>); <span class="comment">//设置偏压比为1/9</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xA0</span>); <span class="comment">//设置seg扫描正向seg0~seg131</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xC8</span>); <span class="comment">//设置com扫描反向com63~com0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x24</span>); <span class="comment">//对比度粗调</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x81</span>); <span class="comment">//对比度双指令</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x2B</span>); <span class="comment">//对比度微调</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x2F</span>); <span class="comment">//电源控制</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xB0</span>); <span class="comment">//设置页地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xAF</span>); <span class="comment">//显示打开</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xA6</span>); <span class="comment">//正常显示不反转</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【4】几个功能接口，包括设置地址&#x2F;清整屏&#x2F;清整页：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_SetAddr/LDZ_ClearPage/LDZ_Clear</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 设置地址/清整页/清全屏</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_SetAddr</span><span class="params">(u8 page, u8 col)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xB0</span>|page);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>((col &gt;&gt; <span class="number">4</span>)| <span class="number">0x10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(col &amp; <span class="number">0x0F</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ClearPage</span><span class="params">(u8 page)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SetAddr</span>(page, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">128</span>;i ++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_WriteDAT</span>(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_Clear</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i ++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ClearPage</span>(i);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    至此，屏幕初始化便完成了，下面准备显示内容。</p><h2 id="五-显示字符-x2F-汉字"><a href="#五-显示字符-x2F-汉字" class="headerlink" title="五 显示字符&#x2F;汉字"></a>五 显示字符&#x2F;汉字</h2><p>​    需要用到16和32两种大小的字体，根据ASC字符与汉字的差异可以分别放在如下的数组中：</p><blockquote><p>​    （i）小字符（8×16）放到数组ASC16[ ]；</p><p>​    （ii）小汉字（16×16）放到数组CHN16[ ]；</p><p>​    （iii）大字符（16×32）放到数组ASC32[ ]；</p><p>​    （iv）大汉字（32×32）放到数组CHN32[ ]；</p></blockquote><p>【1】字体取模：</p><p>​    要想显示字符&#x2F;汉字，需要预先进行字体取模。我这边用到了 PCtoLCD2002 这款软件。软件的具体使用不再赘述，我这边设置是这样的：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/b2bd7a4df6c444358cea78963aae285e.png" alt="img"></p><p>​    生成的字库如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> ASC16[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="comment">/*&quot;0&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;1&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x98</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x14</span>,<span class="number">0x12</span>,<span class="number">0x11</span>,<span class="number">0x10</span>,<span class="comment">/*&quot;2&quot;,2*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x09</span>,<span class="number">0x07</span>,<span class="comment">/*&quot;3&quot;,3*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x05</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0x04</span>,<span class="comment">/*&quot;4&quot;,4*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xB8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="comment">/*&quot;5&quot;,5*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x09</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="comment">/*&quot;6&quot;,6*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;7&quot;,7*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x98</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x11</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x19</span>,<span class="number">0x0F</span>,<span class="comment">/*&quot;8&quot;,8*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x98</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x90</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="comment">/*&quot;9&quot;,9*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> CHN16[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x42</span>,<span class="number">0xCC</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0xA0</span>,<span class="number">0x9E</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x9E</span>,<span class="number">0xA0</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x40</span>,<span class="number">0x43</span>,<span class="number">0x2C</span>,<span class="number">0x10</span>,<span class="number">0x28</span>,<span class="number">0x46</span>,<span class="number">0x41</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;设&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x17</span>,<span class="number">0x15</span>,<span class="number">0xD5</span>,<span class="number">0x55</span>,<span class="number">0x57</span>,<span class="number">0x55</span>,<span class="number">0x7D</span>,<span class="number">0x55</span>,<span class="number">0x57</span>,<span class="number">0x55</span>,<span class="number">0xD5</span>,<span class="number">0x15</span>,<span class="number">0x17</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x7F</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x7F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;置&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> ASC32[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0xFE</span>,<span class="number">0xFF</span>,<span class="number">0x07</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x7F</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xE0</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;0&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x1C</span>,<span class="number">0x0C</span>,<span class="number">0x0E</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;1&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x81</span>,<span class="number">0xE3</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0x60</span>,<span class="number">0x70</span>,<span class="number">0x38</span>,<span class="number">0x18</span>,<span class="number">0x1C</span>,<span class="number">0x0E</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="comment">/*&quot;2&quot;,2*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xE1</span>,<span class="number">0xF3</span>,<span class="number">0xBF</span>,<span class="number">0xBF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0xE0</span>,<span class="number">0xE0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x81</span>,<span class="number">0xC3</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;3&quot;,3*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0xF0</span>,<span class="number">0x78</span>,<span class="number">0x3C</span>,<span class="number">0x1E</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x1E</span>,<span class="number">0x1F</span>,<span class="number">0x1F</span>,<span class="number">0x1B</span>,<span class="number">0x19</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x18</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;4&quot;,4*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x6F</span>,<span class="number">0x61</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x70</span>,<span class="number">0x60</span>,<span class="number">0xE0</span>,<span class="number">0xC0</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0xE0</span>,<span class="number">0xE0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xE0</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;5&quot;,5*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0xFC</span>,<span class="number">0xFE</span>,<span class="number">0x8F</span>,<span class="number">0xC3</span>,<span class="number">0xC1</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0xC1</span>,<span class="number">0xC3</span>,<span class="number">0x87</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x7F</span>,<span class="number">0xFF</span>,<span class="number">0xE1</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC1</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;6&quot;,6*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0xF8</span>,<span class="number">0x3C</span>,<span class="number">0x0E</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0xFE</span>,<span class="number">0x7F</span>,<span class="number">0x0F</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;7&quot;,7*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0xE1</span>,<span class="number">0xE1</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xE1</span>,<span class="number">0xE1</span>,<span class="number">0xFF</span>,<span class="number">0x3F</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xC3</span>,<span class="number">0x81</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x81</span>,<span class="number">0xC3</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;8&quot;,8*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x7C</span>,<span class="number">0xFE</span>,<span class="number">0xFF</span>,<span class="number">0x87</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x83</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0xE1</span>,<span class="number">0xE1</span>,<span class="number">0xC3</span>,<span class="number">0x83</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x83</span>,<span class="number">0xC3</span>,<span class="number">0xF1</span>,<span class="number">0x7F</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;9&quot;,9*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> CHN32[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0xF8</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xFC</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0xF0</span>,<span class="number">0x10</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x58</span>,<span class="number">0x4E</span>,<span class="number">0xC7</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x47</span>,<span class="number">0x4F</span>,<span class="number">0xEC</span>,<span class="number">0xCC</span>,<span class="number">0x4C</span>,<span class="number">0x0C</span>,<span class="number">0x0C</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x60</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0x78</span>,<span class="number">0x1F</span>,<span class="number">0x07</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x47</span>,<span class="number">0x43</span>,<span class="number">0x41</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x08</span>,<span class="number">0x0C</span>,<span class="number">0x06</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x06</span>,<span class="number">0x0E</span>,<span class="number">0x0C</span>,<span class="number">0x1C</span>,<span class="number">0x18</span>,<span class="number">0x38</span>,<span class="number">0x30</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;设&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xFC</span>,<span class="number">0xFC</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x13</span>,<span class="number">0x13</span>,<span class="number">0x51</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0xF3</span>,<span class="number">0xFD</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x95</span>,<span class="number">0x95</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0xD1</span>,<span class="number">0xD1</span>,<span class="number">0x91</span>,<span class="number">0x1B</span>,<span class="number">0x1B</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x3F</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x3F</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;置&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>【2】显示字符&#x2F;汉字接口：</p><p>​    用四个定制化的接口，来显示上面不同字体的字库内容：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_ShowASC16/LDZ_ShowASC32/LDZ_ShowCHN16/LDZ_ShowCHN32</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 显示字符</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 参数说明： [1]页地址 / [2]列地址 / [3]字符位于对应数组中的序号</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowASC16</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">2</span>;i ++)<span class="comment">//一共2行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">8</span>;j ++)  <span class="comment">//一行8字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(ASC16[j + i*<span class="number">8</span> + id*<span class="number">16</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowCHN16</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">2</span>;i ++)   <span class="comment">//一共2行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">16</span>;j ++)  <span class="comment">//一行16字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(CHN16[j + i*<span class="number">16</span> + id*<span class="number">32</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowASC32</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)   <span class="comment">//一共4行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">16</span>;j ++)  <span class="comment">//一行16字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(ASC32[j+ i*<span class="number">16</span> + id*<span class="number">64</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowCHN32</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)   <span class="comment">//一共4行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">32</span>;j ++)  <span class="comment">//一行32字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(CHN32[j + i*<span class="number">32</span> + id*<span class="number">128</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    至此，定制化的字符&#x2F;汉字显示接口已经完成，接下来就是在主函数中使用。</p><h2 id="六-实际效果"><a href="#六-实际效果" class="headerlink" title="六 实际效果"></a>六 实际效果</h2><p>​    在主函数中调用初始化以及字符显示接口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//LCD初始化/配置命令/清屏</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_Init</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_Cfg</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_Clear</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);    <span class="comment">//显示0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">8</span>, <span class="number">1</span>);    <span class="comment">//显示1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">16</span>, <span class="number">2</span>);    <span class="comment">//显示2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">24</span>, <span class="number">3</span>);    <span class="comment">//显示3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN16</span>(<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);    <span class="comment">//显示“设”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN16</span>(<span class="number">2</span>, <span class="number">16</span>, <span class="number">1</span>);    <span class="comment">//显示“置”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC32</span>(<span class="number">4</span>, <span class="number">0</span>, <span class="number">4</span>);    <span class="comment">//显示4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC32</span>(<span class="number">4</span>, <span class="number">16</span>, <span class="number">5</span>);    <span class="comment">//显示5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN32</span>(<span class="number">4</span>, <span class="number">32</span>, <span class="number">0</span>);    <span class="comment">//显示“设”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN32</span>(<span class="number">4</span>, <span class="number">64</span>, <span class="number">1</span>);    <span class="comment">//显示“置”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    实际运行屏幕效果如下:</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/150b20c3cde940e281653cef848ea89c.png" alt="img"></p><h2 id="七-附录"><a href="#七-附录" class="headerlink" title="七 附录"></a>七 附录</h2><p>【1】<a href="https://blog.csdn.net/sinat_33408502/article/details/119913561?spm=1001.2014.3001.5502">【嵌入式】MCU(HC32F460)+SPI接口LCD液晶屏ILI9341 移植emWin记录1—-点亮LCD屏_ili9341是spi 还是i2c-CSDN博客</a></p><p>【2】<a href="https://blog.csdn.net/freemote/article/details/127808624">【开源】使用HK32F030驱动ST7567 LCD-CSDN博客</a></p><p>【3】<a href="https://blog.csdn.net/weixin_46251230/article/details/127942339">LX12864P1屏幕使用介绍（ST7567驱动），显示横线、字符、图形-CSDN博客</a></p><p>【4】[<a href="https://blog.csdn.net/ic2121/article/details/126943905">STM32F1]使用STM32F103驱动ST7567液晶屏_st7567单片机驱动程序-CSDN博客</a></p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://www.cnblogs.com/zhjblogs/p/12712575.html">（stm32f103学习总结）—RTC独立定时器—实时时钟实验 </a></li><li><a href="https://blog.csdn.net/zhai17863966493/article/details/104361466">STM32F103的RTC实时时钟配置</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">STM32芯片使用12864串口屏(驱动为ST7567)</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/categories/STM32/"/>
    
    <category term="LCD" scheme="https://zml3589110.github.io/categories/LCD/"/>
    
    <category term="ST7567" scheme="https://zml3589110.github.io/categories/ST7567/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="LCD" scheme="https://zml3589110.github.io/tags/LCD/"/>
    
    <category term="ST7567" scheme="https://zml3589110.github.io/tags/ST7567/"/>
    
  </entry>
  
  <entry>
    <title>LVGL页面切换</title>
    <link href="https://zml3589110.github.io/posts/435688621.html"/>
    <id>https://zml3589110.github.io/posts/435688621.html</id>
    <published>2024-07-20T08:24:20.000Z</published>
    <updated>2024-07-20T09:45:01.376Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在LVGL中，大多情况下是有多个页面的，一般来说页面的切换有两种情况：</p><ol><li>删除当前的页面，创建新页面加载</li><li>保留当前的页面，创建新页面加载</li></ol><p>我们来分析一下这两种情况，比如页面1有一个列表框，有三个选项，每个选项对应进入一个页面。假设此时我们的焦点落在第二个选项上，然后点击进入页面2，我们要是想返回，我们是希望焦点还是保留在列表的第二个选项上的。基于这种情况来说，我们希望能够在保留页面1的同时(同时也保留了焦点)，创建页面2并加载。同时对于页面2来说，只是想用户选择的时候再加载，每次进入都处于初始状态，所以在从页面2返回页面1时，我们会希望删除页面2，再创建页面1并加载。</p><p>所以这两种切换方式我们都需要了解，下面就来看看在LVGL中如何完成页面切换。</p><h1 id="页面切换原理和页面管理实现"><a href="#页面切换原理和页面管理实现" class="headerlink" title="页面切换原理和页面管理实现"></a>页面切换原理和页面管理实现</h1><h2 id="1-页面切换函数"><a href="#1-页面切换函数" class="headerlink" title="1 页面切换函数"></a>1 页面切换函数</h2><p>首先，无论对于哪种情况，我们都需要创建一个新页面进行加载。在LVGL中是采用函数<code>lv_scr_load</code>来加载一个新页面的，它的调用关系如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lv_scr_load(scr)</span><br><span class="line">lv_disp_load_scr(scr)</span><br><span class="line">lv_scr_load_anim(scr, LV_SCR_LOAD_ANIM_NONE, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我们不对<code>lv_scr_load_anim</code>进行深入分析，我们只需要知道这个函数最终可以用来显示一个页面就行了，其中<code>anim</code>表示animation，即页面加载时可以有一些动画。<code>lv_scr_load</code>函数则是不用任何动画而是直接加载页面。所以我们也可以直接使用<code>lv_scr_load_anim</code>进行加载页面。</p><p>有了这个函数，实际上页面切换就很简单了，对于每个页面来说，一个<code>lv_obj_t</code>基础对象表示一个页面，我们只需要让所有的组件都以这个页面<code>lv_obj_t</code>为父类即可，然后用<code>lv_scr_load_anim</code>函数进行加载就行了。</p><p><strong>隐藏页面切换法？</strong><br>隐藏页面切换法就是调用<code>lv_obj_add_flag(obj, LV_OBJ_FLAG_HIDDEN)</code>和<code>lv_obj_clear_flag(obj, LV_OBJ_FLAG_HIDDEN)</code>来隐藏&#x2F;显示页面以实现页面的切换。如果想多个页面显示在一起，即有上下层叠的关系，可以指定所有页面有一个共有的父类。</p><p>但对于<code>lv_scr_load_anim</code>函数来说，仅支持单个页面的显示，参数是哪个页面，显示的就是哪个页面，即使上一个页面没有被删除，也不会被显示出来。如果将所有的页面都建立于一个<code>lv_obj</code>上，不仅浪费内存，而且页面之间的管理也非常乱。所以在我看来，没有什么所谓的隐藏页面切换法。</p><h2 id="2-页面切换的条件及原因"><a href="#2-页面切换的条件及原因" class="headerlink" title="2 页面切换的条件及原因"></a>2 页面切换的条件及原因</h2><p>对于实际的页面切换来说，我们还需要考虑一些事，比如从当前页面切换出去，是要删除还是保留当前页面及其所有子对象。我们就以GUI Guider生成的代码为例，看看它是如何删除页面、如何调用<code>lv_scr_load_anim</code>进行页面的切换的，毕竟这种软件上生成的代码肯定是非常严谨的。</p><hr><p>这里插一句嘴，网上很多信息都不太严谨，我之前下了一个LVGL源码学习，在单片机中运行没问题，但在Codeblocks模拟就有可能会崩溃。这并不是CodeBlocks不兼容，而是代码本身就有内存越界访问的问题。</p><p>还有比如BootLoader，如果开启了某个外设的中断、Cache、GPIO时钟等，在退出BootLoader前一定要关掉，即恢复之前的状态。我有亲身经历，同事的BootLoader在退出前没有关串口的中断，然后进入APP后一个常量字符串的某一位莫名其妙的被修改了。</p><ul><li>感兴趣的话可以看一下我的这篇文章：<a href="https://blog.csdn.net/tilblackout/article/details/134621320">单片机(STM32,GD32,NXP等)中BootLoader的严谨实现详解</a></li></ul><p>网上很多内容都是不严谨的，可能表面上确实可以用，但也留下了一些潜在的错误。我的建议是参考官方SDK或Github中Star很多的代码。</p><hr><p>如下图所示，我们先创键两个页面：</p><img src="/posts/435688621/cc58ff8cce864f7f8063969eac73b712.png" class="" title="在这里插入图片描述"><p>我们希望页面一的按钮按下后切换到页面二，页面二的按钮按下后切换到页面一。在GUI Guider中选中按钮，在右侧添加Events，如下图所示，左边为页面一的Events，右边为页面二的Events。</p><img src="/posts/435688621/6cf3cfe40ffc405eb02eef7ec3cc276a.png" class="" title="在这里插入图片描述"><p>以页面一为例，上图表示按钮按下后，将载入页面二。另外，我们注意到，在GUI Guider中，还有一个<code>Delete current screen</code>的选项，而且选上之后又出现一个<code>Free memory of current screen before loading new screen</code>选项。三种情况下，点击按钮后切换页面的代码如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 未选中Delete current screen */</span></span><br><span class="line"><span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (guider_ui.screen_2_del == <span class="literal">true</span>)</span><br><span class="line">setup_scr_screen_2(&amp;guider_ui);</span><br><span class="line">lv_scr_load_anim(guider_ui.screen_2, LV_SCR_LOAD_ANIM_NONE, <span class="number">100</span>, <span class="number">100</span>, <span class="literal">false</span>);</span><br><span class="line">guider_ui.screen_1_del = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选中Delete current screen */</span></span><br><span class="line"><span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (guider_ui.screen_2_del == <span class="literal">true</span>)</span><br><span class="line">setup_scr_screen_2(&amp;guider_ui);</span><br><span class="line">lv_scr_load_anim(guider_ui.screen_2, LV_SCR_LOAD_ANIM_NONE, <span class="number">100</span>, <span class="number">100</span>, <span class="literal">true</span>);</span><br><span class="line">guider_ui.screen_1_del = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选中Delete current screen和Free memory of current screen before loading new screen */</span></span><br><span class="line"><span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line">lv_obj_clean(act_scr);</span><br><span class="line"><span class="keyword">if</span> (guider_ui.screen_2_del == <span class="literal">true</span>)</span><br><span class="line">setup_scr_screen_2(&amp;guider_ui);</span><br><span class="line">lv_scr_load_anim(guider_ui.screen_2, LV_SCR_LOAD_ANIM_NONE, <span class="number">100</span>, <span class="number">100</span>, <span class="literal">true</span>);</span><br><span class="line">guider_ui.screen_1_del = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看出如果设置待加载的页面为要删除，则需要在每次加载新页面前，都需要调用<code>setup_scr_screen_2</code>来重新初始化页面中的组件，然后<code>lv_scr_load_anim</code>的最后一个参数<code>auto_del</code>设置为true，表示加载后自动删除原页面中的对象。如果想要在加载新页面前就把原页面中的内容释放掉，调用<code>lv_obj_clean</code>即可。</p><p>现在再来分析一下上面代码的共同特征：</p><p>（1）<code>lv_obj_t * act_scr = lv_scr_act()</code>：获取当前屏幕中正在显示的页面的<code>lv_obj_t</code>类型的指针<br>（2）<code>lv_disp_t * d = lv_obj_get_disp(act_scr);</code>：获取当前屏幕对象关联的显示器对象<br>（3）<code>d-&gt;prev_scr == NULL</code><br>        LVGL支持页面切换动画，如从左到右切换，<code>prev_scr</code>就用作于此。当<code>prev_scr</code>不为<code>NULL</code>时，表示当前屏幕对象正在进行切换动画，并且可以通过<code>prev_scr</code>引用到前一个屏幕对象。当<code>prev_scr</code>为<code>NULL</code>时才能切换页面，这样做是为了防止在动画执行过程中对前一个屏幕对象进行删除操作，以及避免可能的资源冲突或不一致性。<br>（4）<code>(d-&gt;scr_to_load == NULL || d-&gt;scr_to_load == act_scr)</code><br>        只有在<code>scr_to_load </code>等于<code>NULL</code>或等于<code>act_scr</code>时才能切换页面。<code>NULL</code>表示当前没有在执行切换页面的动画(已经执行完毕)，<code>act_scr</code>表示当前正处于从别的页面切换为当前页面的过程中。其它情况下，如当前页面1(<code>act_scr</code>)正准备切换到页面2时，执行切换到页面3是不被允许的。<br>（5）<code>lv_obj_clean</code><br>        表示在载入新的页面之前，删除当前页面的所有子对象。但当<code>lv_scr_load_anim</code>的最后一个参数为true时，会在下一次切换屏幕时调用<code>lv_obj_del</code>删除前一个页面及其子对象。但实际上我们先删除其子对象也不影响动画切换的效果，这是因为子对象已经绘制在<code>act_scr</code>中了，我们只需要当前页面的一个显示状态即可完成动画的过渡效果。</p><p>这里我仅仅是用文字对函数的执行过程进行了描述，具体的原理请参考<code>lv_disp.c</code>。如果有必要的话，我会写一篇源码分析的文章。</p><h2 id="3-页面切换的模块化实现"><a href="#3-页面切换的模块化实现" class="headerlink" title="3 页面切换的模块化实现"></a>3 页面切换的模块化实现</h2><p>从上面可以发现，其实页面切换就是调用那几行代码，但是在每个页面的回调函数中都写那几行又感觉有点冗余，所以干脆我们就写一个页面切换的函数，将所有页面管理起来，调用函数进行相互之间的切换。<br><strong>（1）定义页面结构体PageStruct_t和页面标识符PAGE_ID</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">PAGE_NULL = <span class="number">-1</span>,</span><br><span class="line"><span class="comment">/* 假设有两个页面：LOGO和MAIN，增加页面后自行在此添加对应的枚举类型 */</span></span><br><span class="line">PAGE_LOGO, </span><br><span class="line">PAGE_MAIN,</span><br><span class="line">&#125;PAGE_ID;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span><span class="params">(*page_init_handle)</span><span class="params">(<span class="keyword">lv_obj_t</span>* root)</span></span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">uint8_t</span> page_id;</span><br><span class="line"><span class="keyword">lv_obj_t</span>* root;</span><br><span class="line">page_init_handle init_handler;  <span class="comment">//页面中所有组件的初始化函数,以root为父对象</span></span><br><span class="line">&#125;PageStruct_t;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（2）添加和创建页面</strong><br>这里实现了一个链表，来管理每个界面，链表实现很普遍而代码量很长，就不贴代码了。<code>page_find</code>和<code>list_rpush</code>为链表相关函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">page_add</span><span class="params">(PageStruct_t* page)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/* 遍历链表看是否page_id是否被加入过 */</span></span><br><span class="line"><span class="keyword">list_node_t</span>* node = page_find(page-&gt;page_id);</span><br><span class="line"><span class="keyword">if</span>(node != <span class="literal">NULL</span>) </span><br><span class="line">&#123;</span><br><span class="line">PRINTF(<span class="string">&quot;page has been added!\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">node = list_rpush(page_list, list_node_new(page));</span><br><span class="line"><span class="keyword">if</span>(node != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">PRINTF(<span class="string">&quot;page %d adds successfully!\r\n&quot;</span>, page-&gt;page_id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> PageStruct_t* <span class="title">page_create</span><span class="params">(<span class="keyword">uint8_t</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PageStruct_t* page = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">list_node_t</span>* node = page_find(id);</span><br><span class="line"><span class="keyword">if</span>(node != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">page = node-&gt;val;</span><br><span class="line">page-&gt;root = lv_obj_create(<span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">/* 每个页面的大小与LCD屏幕大小对应 */</span></span><br><span class="line">lv_obj_set_size(page-&gt;root, DEMO_PANEL_WIDTH, DEMO_PANEL_HEIGHT);</span><br><span class="line">page-&gt;init_handler(page-&gt;root);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（3）页面切换</strong><br>页面切换实际上就是在刚刚GUI Guider生成的代码的基础上加上了链表的查询操作。这里当<code>del</code>为1时，默认在切换页面前都调用<code>lv_obj_clean</code>把当前页面的子对象清理掉。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @param:arg 页面ID</span></span><br><span class="line"><span class="comment"> * @param:del 页面内存释放标志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">page_callback</span><span class="params">(PAGE_ID arg, <span class="keyword">lv_scr_load_anim_t</span> animation, <span class="keyword">bool</span> del)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> id = (<span class="keyword">uint8_t</span>)arg;</span><br><span class="line">PageStruct_t *page;</span><br><span class="line"><span class="keyword">lv_obj_t</span> *act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> *d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">list_node_t</span>* p_node = page_find_root(act_scr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p_node == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">page = p_node-&gt;val;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(del)</span><br><span class="line">&#123;</span><br><span class="line">lv_obj_clean(act_scr);</span><br><span class="line">page-&gt;root = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 根据待切换屏幕的page_id找到其结构体 */</span></span><br><span class="line">p_node = page_find(id);</span><br><span class="line"><span class="keyword">if</span>(p_node == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="comment">//page_cur = id;</span></span><br><span class="line">page = p_node-&gt;val;</span><br><span class="line"><span class="comment">/* 如果屏幕中的组件被删除了,重新创建 */</span></span><br><span class="line"><span class="keyword">if</span>(page-&gt;root == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">page_create(id);</span><br><span class="line"><span class="keyword">if</span>(page-&gt;root == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 加载新页面:这里固定了animation的时间,如有必要可以在每个页面结构体里添加这些参数 */</span></span><br><span class="line">lv_scr_load_anim(page-&gt;root, animation, <span class="number">150</span>, <span class="number">50</span>, del);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（4）LOGO页面添加例子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> PageStruct_t page_logo = &#123;</span><br><span class="line">.page_id = PAGE_LOGO,</span><br><span class="line">.init_handler = gui_logo_init,   <span class="comment">//初始化页面中的各个组件的函数</span></span><br><span class="line">.root = <span class="literal">NULL</span>,</span><br><span class="line">&#125;;</span><br><span class="line">page_add(&amp;page_logo);</span><br><span class="line">page_callback(PAGE_LOGO,  LV_SCR_LOAD_ANIM_MOVE_LEFT,  <span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本文就不贴完整的代码了，本文主要是介绍页面切换部分的函数。至于页面之间的管理，实际上就缺一个链表的实现。大家自己去github找一个链表实现一下，同时也有助于理解代码。对于页面切换时焦点保存和恢复的问题，可以参考<a href="https://blog.csdn.net/tilblackout/article/details/131146111">LVGL学习(5)：物理按键切换焦点之焦点保存和恢复</a>。</p><h1 id="界面切换以及显示优化"><a href="#界面切换以及显示优化" class="headerlink" title="界面切换以及显示优化"></a>界面切换以及显示优化</h1><h2 id="一-界面切换"><a href="#一-界面切换" class="headerlink" title="一 界面切换"></a>一 界面切换</h2><p>利用lvgl框架绘制GUI免不了需要实现多个页面的切换，毕竟把所有功能和接口都放在一页上有些不太优雅，而且对于嵌入式硬件的小屏幕也有些过于困难。因此这里就需要实现多个页面（或者说lvgl里的screen）及其互相切换。</p><p>实现方案（参考文章《<a href="https://blog.csdn.net/m0_37187962/article/details/125526292">LVGL V8应用——通过按键切换页面</a>》），有以下两类实现方案：</p><h3 id="【1】通过LV-OBJ-FLAG-HIDDEN隐藏属性实现页面切换："><a href="#【1】通过LV-OBJ-FLAG-HIDDEN隐藏属性实现页面切换：" class="headerlink" title="【1】通过LV_OBJ_FLAG_HIDDEN隐藏属性实现页面切换："></a>【1】通过LV_OBJ_FLAG_HIDDEN隐藏属性实现页面切换：</h3><p>显示窗口1之前给窗口2的容器设置LV_OBJ_FLAG_HIDDEN隐藏属性，显示窗口2之前给窗口1的容器设置LV_OBJ_FLAG_HIDDEN隐藏属性。</p><h3 id="【2】切换到窗口2时，删除窗口1的容器"><a href="#【2】切换到窗口2时，删除窗口1的容器" class="headerlink" title="【2】切换到窗口2时，删除窗口1的容器:"></a>【2】切换到窗口2时，删除窗口1的容器:</h3><p>这边的具体实现也可以分为两种方法：</p><ol><li><p>切换到窗口2时，可以在回调函数中删除窗口1的容器，这样可以删除窗口1下的所有子对象，这种方式适用于运存较小的设备。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">win_btn_event_callback1</span><span class="params">(<span class="keyword">lv_event_t</span>* event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_event_code_t</span> code = lv_event_get_code(event);</span><br><span class="line">    <span class="keyword">if</span> (code == LV_EVENT_CLICKED)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 删除窗口1的win1_contanier容器，这样就可以把win1_contanier上的子对象全部删除，然后显示窗口2</span></span><br><span class="line">        lv_obj_del(win1_contanier);</span><br><span class="line">        show_button_win2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">win_btn_event_callback2</span><span class="params">(<span class="keyword">lv_event_t</span>* event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_event_code_t</span> code = lv_event_get_code(event);</span><br><span class="line">    <span class="keyword">if</span> (code == LV_EVENT_CLICKED)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 删除窗口2的win2_contanier容器，这样就可以把win2_contanier上的子对象全部删除，然后显示窗口1</span></span><br><span class="line">        lv_obj_del(win2_contanier);</span><br><span class="line">        show_button_win1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用函数lv_scr_load_anim和lv_scr_load加载和切换屏幕：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 直接加载该屏幕scr</span></span><br><span class="line"><span class="comment">参数1：要加载的屏幕 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">lv_scr_load</span><span class="params">(<span class="keyword">lv_obj_t</span> * scr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lv_disp_load_scr(scr);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 通过动画的方式显示</span></span><br><span class="line"><span class="comment">参数1：要加载的屏幕</span></span><br><span class="line"><span class="comment">参数2：动画类别</span></span><br><span class="line"><span class="comment">参数3：切换动画需要的时间</span></span><br><span class="line"><span class="comment">参数4：为true时则会在切换界面后将旧界面删除，节约内存*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_scr_load_anim</span><span class="params">(<span class="keyword">lv_obj_t</span> * scr, <span class="keyword">lv_scr_load_anim_t</span> anim_type, <span class="keyword">uint32_t</span> time, <span class="keyword">uint32_t</span> delay, <span class="keyword">bool</span> auto_del)</span></span>;</span><br></pre></td></tr></table></figure></li></ol><p>我这边用到的是第二类方式，即GUI Guider中自动生成的事件+加载页面动作的方式：</p><img src="/posts/435688621/20e9faae6733aa0c0e80787387886212.png" class="" title="img"><h2 id="二-显示优化"><a href="#二-显示优化" class="headerlink" title="二 显示优化"></a>二 显示优化</h2><p>因为用到界面的切换，涉及整屏（320*240）的刷新，如果绘制较为复杂的画面，界面切换的过程中会有拉窗帘的效果，非常影响美观。所以显示的优化就不得不考虑了。</p><p>参考《<a href="https://www.bilibili.com/read/cv17894963">LVGL显示优化—基本优化</a>》、《<a href="https://blog.csdn.net/weixin_43862847/article/details/109318017">LVGL 优化帧率技巧</a>》，有以下几种优化方法以供参考：</p><h3 id="【1】disp-flush刷屏方法改进"><a href="#【1】disp-flush刷屏方法改进" class="headerlink" title="【1】disp_flush刷屏方法改进"></a>【1】disp_flush刷屏方法改进</h3><p>这一点之前移植的时候也提过（《<a href="https://blog.csdn.net/sinat_33408502/article/details/129199633">【LVGL】学习笔记–(1)Keil中嵌入式系统移植LVGL</a>》），在disp_flush中用封装好的LCD_Fill_LVGL刷屏函数替代原先默认的画点函数。</p><h3 id="【2】LVGL帧率限制"><a href="#【2】LVGL帧率限制" class="headerlink" title="【2】LVGL帧率限制"></a>【2】LVGL帧率限制</h3><p>LVGL是有一个帧率刷新周期的宏定义，在lv_conf.h里。LVGL会通过LVGL内部的tick，定时去刷屏幕，也就是说该宏定义限定了LVGL刷屏帧率的上限，默认满帧33帧。</p><p>这里我们直接改成10ms刷新一次，满帧100帧。顺手再把输入设备读取周期也改成10ms。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Default display refresh period. LVG will redraw changed areas with this period time*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_DISP_DEF_REFR_PERIOD 10      <span class="comment">/*[ms]*/</span>  <span class="comment">//默认30</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Input device read period in milliseconds*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_INDEV_DEF_READ_PERIOD 10     <span class="comment">/*[ms]*/</span>  <span class="comment">//默认30</span></span></span><br></pre></td></tr></table></figure><h3 id="【3】LV-DPI-DEF配置"><a href="#【3】LV-DPI-DEF配置" class="headerlink" title="【3】LV_DPI_DEF配置"></a>【3】LV_DPI_DEF配置</h3><p>在lv_conf.h里配置DPI：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  * LV_DPI_DEF 注意这里，虽然LVGL的作者说这个没这么重要，但他会严重影响到LVGL的动画效果</span></span><br><span class="line"><span class="comment">  * 你应该进行DPI的手动计算，例如320*240分辨率3.2英寸的屏幕，那么 DPI = (320*320+240*240)^0.5 / 3.2 = 125</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_DPI_DEF                  125     <span class="comment">/*[px/inch]*/</span></span></span><br></pre></td></tr></table></figure><h3 id="【4】编译器版本以及代码优化等级"><a href="#【4】编译器版本以及代码优化等级" class="headerlink" title="【4】编译器版本以及代码优化等级"></a>【4】编译器版本以及代码优化等级</h3><p>编译器版本尽量用arm compiler5。代码优化等级可以提高到Level 2：</p><img src="/posts/435688621/cb69e6d5a3945468b931d24b4669d405.png" class="" title="img"><h3 id="【5】堆栈设置"><a href="#【5】堆栈设置" class="headerlink" title="【5】堆栈设置"></a>【5】堆栈设置</h3><ol><li><p>栈设置：</p><p>官方推荐：</p><img src="/posts/435688621/ecdf3d4b2e71520b25977de4d3f97997.png" class="" title="img"><p>在启动文件startup_hc32f460.s中设置大一点，我这边设置为8K：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Stack_Size      EQU     0x00002000</span><br><span class="line"> </span><br><span class="line">                AREA    STACK, NOINIT, READWRITE, ALIGN&#x3D;3</span><br><span class="line">Stack_Mem       SPACE   Stack_Size</span><br><span class="line">__initial_sp</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">; &lt;h&gt; Heap Configuration</span><br><span class="line">;   &lt;o&gt;  Heap Size (in Bytes) &lt;0x0-0xFFFFFFFF:8&gt;</span><br><span class="line">; &lt;&#x2F;h&gt;</span><br><span class="line"> </span><br><span class="line">Heap_Size       EQU     0x00000200</span><br><span class="line"> </span><br><span class="line">                AREA    HEAP, NOINIT, READWRITE, ALIGN&#x3D;3</span><br><span class="line">__heap_base</span><br><span class="line">Heap_Mem        SPACE   Heap_Size</span><br><span class="line">__heap_limit</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                PRESERVE8</span><br><span class="line">                THUMB</span><br></pre></td></tr></table></figure></li><li><p>堆设置：<br>lv_conf.h中的LV_MEM_SIZE进行设置，上面推荐大于32K，我这边设为了48K：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Size of the memory available for `lv_mem_alloc()` in bytes (&gt;= 2kB)*/</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> LV_MEM_SIZE (48U * 1024U)          <span class="comment">/*[bytes]*/</span></span></span><br></pre></td></tr></table></figure></li></ol><h3 id="【6】显存类型"><a href="#【6】显存类型" class="headerlink" title="【6】显存类型"></a>【6】显存类型</h3><p>LVGL其实提供了三种显存类型。三种分别对应不同环境，都可以试试 （B站有大神进行过三种类型的测试<a href="https://www.bilibili.com/video/BV1BL4y1n7hV/">LVGL 最优配置测试 (STM32)</a>，可以参考一下，我自己测了单BUFFER和非全尺寸双BUFFER，区别不大）。先看下结论：</p><img src="/posts/435688621/79d226740a9ad9327b330cdc0e1de14d.png" class="" title="img"><ol><li><p>单BUFFER<br>画面会被拆分成buffer的size大小，分块刷新，当只有局部刷新时，比如说点击了一个按钮按钮变高亮，那么他就只会刷局部画面。官方推荐 1&#x2F;10 screen size，拆分太小，刷屏接口又慢的话，不仅帧率低，还会有感人的拉窗帘。整屏幕刷速度快是快，但是太占内存了。我这边调整为1&#x2F;4全屏，效果还不错：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 单缓冲区示例) */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_disp_draw_buf_t</span> draw_buf_dsc_1;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_color_t</span> buf_1[MY_DISP_HOR_RES * MY_DISP_VER_RES / <span class="number">4</span>]; </span><br><span class="line">lv_disp_draw_buf_init(&amp;draw_buf_dsc_1, buf_1, <span class="literal">NULL</span>, MY_DISP_HOR_RES * MY_DISP_VER_RES / <span class="number">4</span>);   <span class="comment">/*Initialize the display buffer*/</span></span><br></pre></td></tr></table></figure></li><li><p>非全尺寸双BUFFER<br>顾名思义，两个buffer，实际上就是PING-PONG模式，这种情况适合有dma或者其他显存加速设备的芯片，在一块buffer使用dma等外设后台刷屏时，lvgl可以再前台渲染显示进另一块显存，也就是说渲染和刷屏并发执行，理论是比单显存要好的，不过跟硬件和屏幕大小有关，具体要实测。</p></li><li><p>全尺寸双BUFFER<br>两个全尺寸buffer，虽然直觉看上去和非全尺寸双buffer应该区别不大，但实际上，这个是专门为带TFT驱动的MCU准备的。双全尺寸与前两种不同，在任何时候，给出的buffer都是全屏大小的buffer，而不是局部刷新只提供刷新部分的buffer窗口，这么做的的好处是刷屏，只需要更改TFT驱动的显存地址，而不需要将LVGL的buffer再搬运到TFT驱动的显存，就可完成刷屏动作。</p></li></ol><p>以上。</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/tilblackout/article/details/131058317">（这个博主技术厉害！）LVGL学习(3)：页面切换原理和页面管理实现</a></li><li><a href="https://blog.csdn.net/sinat_33408502/article/details/129242824">（这个也厉害）【LVGL】学习笔记–(3)界面切换以及显示优化</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">LVGL基本页面切换</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/categories/LVGL/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
  </entry>
  
  <entry>
    <title>LVGL输入设备对接</title>
    <link href="https://zml3589110.github.io/posts/2588001421.html"/>
    <id>https://zml3589110.github.io/posts/2588001421.html</id>
    <published>2024-07-20T07:47:20.000Z</published>
    <updated>2024-07-20T09:45:01.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="外部按键对接之ESP32"><a href="#外部按键对接之ESP32" class="headerlink" title="外部按键对接之ESP32"></a>外部按键对接之ESP32</h1><h2 id="一、任务目标"><a href="#一、任务目标" class="headerlink" title="一、任务目标"></a>一、任务目标</h2><p>ui创建有三个button的页面，通过外部实体按键可在这三个button间实现聚焦与切换，点击button切换至有滑动条的页面，通过按键使滑动条数值增加。</p><p>有三个实体按键，它们分别实现：</p><p>1）控件聚焦与切换（LV_KEY_NEXT）</p><p>2）控件选择（LV_KEY_ENTER）</p><p>3）控件数值变化（LV_KEY_RIGHT）</p><h2 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h2><p>芯片平台：ESP32S3 LVGL版本：V8.3  ESP-IDF版本：v5.2</p><ol><li><p>已完成屏幕显示功能</p></li><li><p>已完成lvgl库移植到esp32s3</p></li><li><p>已完成底层按键驱动（最好）</p></li></ol><h2 id="三、输入设备移植"><a href="#三、输入设备移植" class="headerlink" title="三、输入设备移植"></a>三、输入设备移植</h2><h3 id="1-创建输入设备组件"><a href="#1-创建输入设备组件" class="headerlink" title="1.创建输入设备组件"></a>1.创建输入设备组件</h3><p>在工程的components&#x2F;lvgl&#x2F;examples&#x2F;porting&#x2F;文件夹下找到 lv_port_indev_template.c 和lv_port_indev_template.h 两个文件，将其复制拷贝到新的 lv_port_indev 组件文件夹下并改名为 lv_port_indev.c 和 lv_port_indev.h，并创建CMakeLists.txt 文件。结构如下：</p><img src="/posts/2588001421/f764326ecfa74551bae086e42915d973.png" class="" title="img"><h3 id="2-底层代码的实现"><a href="#2-底层代码的实现" class="headerlink" title="2.底层代码的实现"></a>2.底层代码的实现</h3><h4 id="1-修改lv-port-indev-h"><a href="#1-修改lv-port-indev-h" class="headerlink" title="1.修改lv_port_indev.h"></a>1.修改lv_port_indev.h</h4><p>lv_port_indev.h 只需要修改把#if 0 改为 #if 1 即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file lv_port_indev_templ.h</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Copy this file as &quot;lv_port_indev.h&quot; and set this value to &quot;1&quot; to enable content*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> LV_PORT_INDEV_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_PORT_INDEV_H</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      INCLUDES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl/lvgl.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      DEFINES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      TYPEDEFS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> * GLOBAL PROTOTYPES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_port_indev_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      MACROS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125; <span class="comment">/*extern &quot;C&quot;*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/*LV_PORT_INDEV_TEMPL_H*/</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/*Disable/Enable content*/</span></span></span><br></pre></td></tr></table></figure><h4 id="2-修改lv-port-indev-c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）"><a href="#2-修改lv-port-indev-c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）" class="headerlink" title="2. 修改lv_port_indev.c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）"></a>2. 修改lv_port_indev.c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）</h4><p>因为我们这里使用的输入方式是keypad，所以把其它几种输入方式的代码先删掉，只保留indev_keypad相关代码。其中，</p><p>keypad_init()是底层按键检测代码，需要用户自己实现，这里我们初始化了3个io按键。</p><p>keypad_get_key()是将实体按键与lvgl输入设备关联，这里我们选择关联LV_KEY_NEXT、LV_KEY_RIGHT和LV_KEY_ENTER。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file lv_port_indev_templ.c</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Copy this file as &quot;lv_port_indev.c&quot; and set this value to &quot;1&quot; to enable content*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      INCLUDES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lv_port_indev.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hal_btn.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      DEFINES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      TYPEDEFS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *  STATIC PROTOTYPES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_read</span><span class="params">(<span class="keyword">lv_indev_drv_t</span> * indev_drv, <span class="keyword">lv_indev_data_t</span> * data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint32_t</span> <span class="title">keypad_get_key</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *  STATIC VARIABLES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"><span class="keyword">lv_indev_t</span> * indev_keypad;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">// lv_group_t *key_group;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      MACROS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *   GLOBAL FUNCTIONS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_port_indev_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Here you will find example implementation of input devices supported by LittelvGL:</span></span><br><span class="line"><span class="comment">     *  - Touchpad</span></span><br><span class="line"><span class="comment">     *  - Mouse (with cursor support)</span></span><br><span class="line"><span class="comment">     *  - Keypad (supports GUI usage only with key)</span></span><br><span class="line"><span class="comment">     *  - Encoder (supports GUI usage only with: left, right, push)</span></span><br><span class="line"><span class="comment">     *  - Button (external buttons to press points on the screen)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *  The `..._read()` function are only examples.</span></span><br><span class="line"><span class="comment">     *  You should shape them according to your hardware</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_indev_drv_t</span> indev_drv;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*------------------</span></span><br><span class="line"><span class="comment">     * Keypad</span></span><br><span class="line"><span class="comment">     * -----------------*/</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Initialize your keypad or keyboard if you have*/</span></span><br><span class="line">    keypad_init();</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Register a keypad input device*/</span></span><br><span class="line">    lv_indev_drv_init(&amp;indev_drv);</span><br><span class="line">    indev_drv.type = LV_INDEV_TYPE_KEYPAD;</span><br><span class="line">    indev_drv.read_cb = keypad_read;</span><br><span class="line">    indev_keypad = lv_indev_drv_register(&amp;indev_drv);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Later you should create group(s) with `lv_group_t * group = lv_group_create()`,</span></span><br><span class="line"><span class="comment">     *add objects to the group with `lv_group_add_obj(group, obj)`</span></span><br><span class="line"><span class="comment">     *and assign this input device to group to navigate in it:</span></span><br><span class="line"><span class="comment">     *`lv_indev_set_group(indev_keypad, group);`*/</span></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *   STATIC FUNCTIONS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*------------------</span></span><br><span class="line"><span class="comment"> * Keypad</span></span><br><span class="line"><span class="comment"> * -----------------*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Initialize your keypad*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    btn_init(<span class="number">0</span>,UP);</span><br><span class="line">    btn_init(<span class="number">20</span>,UP);</span><br><span class="line">    btn_init(<span class="number">19</span>,UP);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Will be called by the library to read the mouse*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_read</span><span class="params">(<span class="keyword">lv_indev_drv_t</span> * indev_drv, <span class="keyword">lv_indev_data_t</span> * data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint32_t</span> last_key = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Get the current x and y coordinates*/</span></span><br><span class="line">    <span class="comment">// mouse_get_xy(&amp;data-&gt;point.x, &amp;data-&gt;point.y);</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Get whether the a key is pressed and save the pressed key*/</span></span><br><span class="line">    <span class="keyword">uint32_t</span> act_key = keypad_get_key();</span><br><span class="line">    <span class="comment">// printf(&quot;key:%d\n&quot;,act_key);</span></span><br><span class="line">    <span class="keyword">if</span>(act_key != <span class="number">0</span>) &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*Translate the keys to LVGL control characters according to your key definitions*/</span></span><br><span class="line">        <span class="keyword">switch</span>(act_key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                act_key = LV_KEY_NEXT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                act_key = LV_KEY_PREV;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                act_key = LV_KEY_LEFT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                act_key = LV_KEY_RIGHT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                act_key = LV_KEY_ENTER;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        last_key = act_key;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    data-&gt;key = last_key;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Get the currently being pressed key.  0 if no key is pressed*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint32_t</span> <span class="title">keypad_get_key</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(btn_get_level(<span class="number">0</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(btn_get_level(<span class="number">20</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(btn_get_level(<span class="number">19</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h4 id="3-CMakeLists-txt-的实现"><a href="#3-CMakeLists-txt-的实现" class="headerlink" title="3.CMakeLists.txt 的实现"></a>3.CMakeLists.txt 的实现</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">file</span>(GLOB_RECURSE srcs *.c)</span><br><span class="line"> </span><br><span class="line">idf_component_register(</span><br><span class="line">    SRCS <span class="variable">$&#123;srcs&#125;</span></span><br><span class="line">    INCLUDE_DIRS .</span><br><span class="line">    REQUIRES lvgl hal_btn</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>到了这一步我们的lvgl 按键输入差不多就移植好了，接下来来实现我们的任务目标。</p><h2 id="四、目标工程的实现"><a href="#四、目标工程的实现" class="headerlink" title="四、目标工程的实现"></a>四、目标工程的实现</h2><h3 id="1-ui设计"><a href="#1-ui设计" class="headerlink" title="1.ui设计"></a>1.ui设计</h3><p>首先，我们需要创建好我们的ui并移植到我们的工程中。这里我们在screen页面创建三个不同颜色的button，其中，通过点击红色的btn1可跳转至页面screen_1,通过按键实现滑动条数值的增加，并通过点击back返回screen页面。</p><p>screen：</p><img src="/posts/2588001421/d1edb2afb6f342428da02dc0bb272ab0.png" class="" title="img"><p>screen_1:</p><img src="/posts/2588001421/21ab87674ac24376bcb5173f8ebdfde7.png" class="" title="img"><h3 id="2-组的添加"><a href="#2-组的添加" class="headerlink" title="2.组的添加"></a>2.组的添加</h3><p>通过lvgl的注释我们知道，想要让我们的按键控制ui的功能能实现还需要创建一个组（group），并且将我们的ui控件添加进这个组中，并将输入设备的句柄与组相关联。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Later you should create group(s) with `lv_group_t * group = lv_group_create()`,</span></span><br><span class="line"><span class="comment">     *add objects to the group with `lv_group_add_obj(group, obj)`</span></span><br><span class="line"><span class="comment">     *and assign this input device to group to navigate in it:</span></span><br><span class="line"><span class="comment">     *`lv_indev_set_group(indev_keypad, group);`*/</span></span><br></pre></td></tr></table></figure><p>在文件setup_scr_screen.c和setup_scr_screen_1.c里找到ui控件创建函数并添加相应的代码。</p><p>也可以直接在lv_port_indev_init（）中添加默认组，这样后续创建的控件将会自动加入默认组。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">extern</span> <span class="keyword">lv_indev_t</span> * indev_keypad;</span><br><span class="line"><span class="keyword">lv_group_t</span> *group=lv_group_create();</span><br><span class="line">   lv_indev_set_group(indev_keypad, group);<span class="comment">//将组绑定到输入设备</span></span><br><span class="line"></span><br><span class="line">   lv_group_set_editing(group, <span class="literal">false</span>);   <span class="comment">//导航模式</span></span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_btn_1);</span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_btn_2);</span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_btn_3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   lv_group_add_obj(group ,ui-&gt;screen_1_btn_1);</span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_1_slider_1);</span><br></pre></td></tr></table></figure><img src="/posts/2588001421/336174331acd4a04a8a9dba3bc5d58fa.png" class="" title="img"><img src="/posts/2588001421/86fd91abef264c598ceb19954c33ec91.png" class="" title="img"><h3 id="3-修改main-c"><a href="#3-修改main-c" class="headerlink" title="3.修改main.c"></a>3.修改main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_log.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;nvs_flash.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/event_groups.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl_helpers.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;gui_guider.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;custom.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lv_port_indev.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;demos/lv_demos.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">lv_ui guider_ui;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LVGL_TICK_MS 1</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TAG <span class="meta-string">&quot;main&quot;</span></span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_tick_task</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lv_tick_inc(LVGL_TICK_MS);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">esp_err_t</span> ret = nvs_flash_init();</span><br><span class="line">    <span class="keyword">if</span> (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND)</span><br><span class="line">    &#123;</span><br><span class="line">        ESP_ERROR_CHECK(nvs_flash_erase());</span><br><span class="line">        ret = nvs_flash_init();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* Initialize SPI or I2C bus used by the drivers */</span></span><br><span class="line">    lvgl_driver_init();</span><br><span class="line"> </span><br><span class="line">    lv_init();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">lv_color_t</span> *buf1 = heap_caps_malloc(DISP_BUF_SIZE * <span class="keyword">sizeof</span>(<span class="keyword">lv_color_t</span>), MALLOC_CAP_DMA);</span><br><span class="line">    assert(buf1 != <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_color_t</span> *buf2 = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_disp_draw_buf_t</span> disp_buf;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">uint32_t</span> size_in_px = DISP_BUF_SIZE;</span><br><span class="line">    lv_disp_draw_buf_init(&amp;disp_buf, buf1, buf2, size_in_px);</span><br><span class="line">    <span class="keyword">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">    lv_disp_drv_init(&amp;disp_drv);</span><br><span class="line">    disp_drv.hor_res = BOARD_LCD_H_RES;</span><br><span class="line">    disp_drv.ver_res = BOARD_LCD_V_RES;</span><br><span class="line">    disp_drv.flush_cb = disp_driver_flush;</span><br><span class="line">    disp_drv.draw_buf = &amp;disp_buf;</span><br><span class="line">    lv_disp_drv_register(&amp;disp_drv);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">esp_timer_create_args_t</span> periodic_timer_args = &#123;</span><br><span class="line">        .callback = &amp;lv_tick_task,</span><br><span class="line">        .name = <span class="string">&quot;periodic_gui&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">esp_timer_handle_t</span> periodic_timer;</span><br><span class="line">    ESP_ERROR_CHECK(esp_timer_create(&amp;periodic_timer_args, &amp;periodic_timer));</span><br><span class="line">    ESP_ERROR_CHECK(esp_timer_start_periodic(periodic_timer, <span class="number">1</span> * <span class="number">1000</span>));</span><br><span class="line"> </span><br><span class="line">    lv_port_indev_init();  <span class="comment">//输入设备初始化</span></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// lvgl demo演示</span></span><br><span class="line">    <span class="comment">// lv_demo_music();</span></span><br><span class="line">    <span class="comment">// lv_demo_stress();</span></span><br><span class="line"> </span><br><span class="line">    setup_ui(&amp;guider_ui);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Delay 1 tick (assumes FreeRTOS tick is 10ms */</span></span><br><span class="line">        vTaskDelay(pdMS_TO_TICKS(<span class="number">10</span>));</span><br><span class="line">        lv_task_handler();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="六、其它"><a href="#六、其它" class="headerlink" title="六、其它"></a><code>六、其它</code></h2><h3 id="1-按键驱动参考"><a href="#1-按键驱动参考" class="headerlink" title="1.按键驱动参考"></a><code>1.按键驱动参考</code></h3><p>hal_btn.c:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/queue.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_log.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hal_btn.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> s_btn_disable = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> s_btn_level = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">btn_cb_t</span> s_btn_cb = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_init</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num, <span class="keyword">pull_mode_t</span> pull_mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gpio_pad_select_gpio(gpio_num);</span><br><span class="line">    gpio_set_direction(gpio_num, GPIO_MODE_INPUT);</span><br><span class="line">    gpio_pad_select_gpio(gpio_num);</span><br><span class="line">    gpio_set_direction(gpio_num, GPIO_MODE_INPUT);</span><br><span class="line">    <span class="keyword">switch</span> (pull_mode)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> UP:</span><br><span class="line">        gpio_set_pull_mode(gpio_num, GPIO_PULLUP_ONLY);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DOWN:</span><br><span class="line">        gpio_set_pull_mode(gpio_num, GPIO_PULLDOWN_ONLY);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> FLOATING:</span><br><span class="line">        gpio_set_pull_mode(gpio_num, GPIO_FLOATING);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_set_disable</span><span class="params">(<span class="keyword">bool</span> disable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s_btn_disable = disable;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_send_level</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s_btn_level = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">btn_get_level</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> level = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (s_btn_disable)</span><br><span class="line">    &#123;</span><br><span class="line">        s_btn_level = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s_btn_level)</span><br><span class="line">    &#123;</span><br><span class="line">        s_btn_level = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    level = gpio_get_level(gpio_num);</span><br><span class="line">    <span class="keyword">if</span> (s_btn_cb != <span class="literal">NULL</span> &amp;&amp; level == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s_btn_cb();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> level;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_set_callback</span><span class="params">(<span class="keyword">btn_cb_t</span> btn_cb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s_btn_cb = btn_cb;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>hal_btn.h:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/gpio.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        UP = <span class="number">0</span>,</span><br><span class="line">        DOWN,</span><br><span class="line">        FLOATING</span><br><span class="line">    &#125; <span class="keyword">pull_mode_t</span>;</span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*<span class="keyword">btn_cb_t</span>)</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_init</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num, <span class="keyword">pull_mode_t</span> pull_mode)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_set_disable</span><span class="params">(<span class="keyword">bool</span> disable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_send_level</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">btn_get_level</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_set_callback</span><span class="params">(<span class="keyword">btn_cb_t</span> btn_cb)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="2-lv-event-send-的使用"><a href="#2-lv-event-send-的使用" class="headerlink" title="2.lv_event_send 的使用"></a>2.lv_event_send 的使用</h3><p>虽然通过上面的按键操作也可以实现通过点击back按钮返回上一页面的功能，但这种点击方式更常用于以触摸屏作为输入设备的时候，而在以外部按键作为输入设备的工程中，通常会有一个单独的实体按键来固定返回之前页面这一功能，而不会在ui上显示这一虚拟按钮，这是便需要使用lv_event_send 来手动发送事件。</p><p>比如，我们在一个实体按键的按键回调中使用lv_event_send：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">button_short_down_cb</span><span class="params">(<span class="keyword">void</span> *arg, <span class="keyword">void</span> *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ESP_LOGI(TAG, <span class="string">&quot;BTN BUTTON_short_DOWN&quot;</span>);</span><br><span class="line">    <span class="keyword">lv_obj_t</span> *root = lv_obj_get_child(lv_scr_act(), <span class="literal">NULL</span>);<span class="comment">/*获得当前页面创建的第一个控件（按创建顺序）*/</span></span><br><span class="line"> </span><br><span class="line">    lv_event_send(root, LV_EVENT_CANCEL, <span class="literal">NULL</span>);<span class="comment">//手动发送LV_EVENT_CANCEL事件</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在滑动条的事件中添加LV_EVENT_CANCEL事件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> LV_EVENT_CANCEL:</span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">//切换页面</span></span><br><span class="line"><span class="comment">//Write the load screen code.</span></span><br><span class="line">    <span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line">    <span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line">    <span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr)) &#123;</span><br><span class="line">lv_obj_clean(act_scr);</span><br><span class="line">        <span class="keyword">if</span> (guider_ui.main_del == <span class="literal">true</span>) &#123;</span><br><span class="line">          setup_scr_main(&amp;guider_ui);</span><br><span class="line">        &#125;</span><br><span class="line">        lv_scr_load_anim(guider_ui.main, LV_SCR_LOAD_ANIM_NONE, <span class="number">200</span>, <span class="number">200</span>, <span class="literal">true</span>);</span><br><span class="line">        guider_ui.main_del = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>这样我们按下相应的实体按键即可返回之前的页面，而不再需要通过back按钮的点击事件了（滑动条控件需要在其所在页面被第一个创建）。</p><h2 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h2><iframe id="tqr0sln3-1695622077321" frameborder="0" src="https://live.csdn.net/v/embed/330563" allowfullscreen="true" data-mediaembed="csdn" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-synthesis-style: auto; overflow-wrap: break-word; display: block; width: 730px; height: 365px;"></iframe><p>esp32_keypad_indev</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/m0_55986987/article/details/133171860">ESP32系列之LVGL（四）：输入设备（外部按键）对接</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">LVGL各种输入设备对接，实现页面控制</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/categories/LVGL/"/>
    
    <category term="indev" scheme="https://zml3589110.github.io/categories/indev/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="indev" scheme="https://zml3589110.github.io/tags/indev/"/>
    
    <category term="输入设备" scheme="https://zml3589110.github.io/tags/%E8%BE%93%E5%85%A5%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF之MQTT</title>
    <link href="https://zml3589110.github.io/posts/1702633171.html"/>
    <id>https://zml3589110.github.io/posts/1702633171.html</id>
    <published>2024-07-20T07:36:20.000Z</published>
    <updated>2024-08-01T02:02:38.902Z</updated>
    
    <content type="html"><![CDATA[<h1 id="错误及其处理"><a href="#错误及其处理" class="headerlink" title="错误及其处理"></a>错误及其处理</h1><h2 id="error-：MQTT-CLIENT-Error-parse-uri"><a href="#error-：MQTT-CLIENT-Error-parse-uri" class="headerlink" title="error ：MQTT_CLIENT: Error parse uri"></a>error ：MQTT_CLIENT: Error parse uri</h2><p>esp使用mqtt进行连接AWS出现下面error<br>error ：MQTT_CLIENT: Error parse uri</p><p>查一查是不是配置出错。<br>url：应该为：（ mqtts:&#x2F;&#x2F; ）+（endpoint）的格式<br>port：上云查看端口是否一致</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/Cmy_894/article/details/129767322">esp 使用mqtt进行连接云台</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF下 使用MQTT通讯 MQTT_CLIENT Error parse uri</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    <category term="MQTT" scheme="https://zml3589110.github.io/categories/MQTT/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="网络编程" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    <category term="MQTT" scheme="https://zml3589110.github.io/tags/MQTT/"/>
    
  </entry>
  
  <entry>
    <title>ESP32­-PICO-­D4芯片开发板</title>
    <link href="https://zml3589110.github.io/posts/3931543859.html"/>
    <id>https://zml3589110.github.io/posts/3931543859.html</id>
    <published>2024-07-20T06:47:20.000Z</published>
    <updated>2024-07-20T09:45:01.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ul><li><p>尺寸仅为 (7.000±0.100) mm × (7.000±0.100) mm × (0.940±0.100) mm</p></li><li><p>集成1 个 4 MB 串行外围设备接口 (SPI) flash</p></li><li><p>集成 2.4 GHz Wi-Fi 和蓝牙双模的单芯片方案，采用台积电(TSMC) 超低功耗的 40 纳米工艺</p></li><li><p>已将晶振、 flash、滤波电容、 RF 匹配链路等所有外围器件无缝集成进封装内，不再需要外围元器件即可工作</p></li></ul><img src="/posts/3931543859/9e322b0e45b0430bb6cc469aadf653d4.png" class="" title="在这里插入图片描述"><h1 id="管脚"><a href="#管脚" class="headerlink" title="管脚"></a>管脚</h1><img src="/posts/3931543859/5befaaab810c4b6cab18680db0f0f985.png" class="" title="在这里插入图片描述"><img src="/posts/3931543859/e06f03c194e04c0786f0da86a0a977b8.png" class="" title="在这里插入图片描述"><img src="/posts/3931543859/80b3e5c189d74e9594f2ef85ffd99cbf.png" class="" title="在这里插入图片描述"><img src="/posts/3931543859/97d07773131a459388bbd3e22cc49de0.png" class="" title="在这里插入图片描述"><ol><li>嵌入式 flash 连接至 VDD_SDIO(26脚)，由 VDD3P3_RTC 通过约 6 Ω 电阻直接供电。因此， VDD_SDIO 相对 VDD3P3_RTC(19脚)会有一定电压降。</li><li>IO16(25脚)、 IO17(27脚)、 CMD(30脚)、 CLK(31脚)、 SD0(32脚) 和 SD1(33脚) 用于连接嵌入式 flash，不可用于其他功能。</li><li>如果要外接 PSRAM，推荐使用 SD3 (GPIO10) 用于 PSRAM_CS。</li></ol><h1 id="Strapping-管脚"><a href="#Strapping-管脚" class="headerlink" title="Strapping 管脚"></a>Strapping 管脚</h1><p>ESP32 共有 5 个 Strapping 管脚：MTDI（18脚）、GPIO0（23脚）、GPIO2（22脚）、MTDO（21脚）、GPIO5（34脚）</p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>  软件可以读取寄存器“GPIO_STRAPPING”中这 5 个管脚 strapping 的值。<br>  在芯片的系统复位（上电复位、 RTC 看门狗复位、欠压复位）放开的过程中，Strapping 管脚对电平采样并存储到锁存器中，锁存为“0”或“1”，并一直保持到芯片掉电或关闭。<br>  每一个 Strapping 管脚都会连接内部上拉&#x2F;下拉。如果一个 Strapping 管脚没有外部连接或者连接的外部线路处于高阻抗状态，内部弱上拉&#x2F;下拉将决定 Strapping 管脚输入电平的默认值。<br>  为改变 Strapping 的值，用户可以应用外部下拉&#x2F;上拉电阻，或者应用主机 MCU 的 GPIO 控制 ESP32 上电复位放开时的 Strapping 管脚电平。<br>  复位放开后， Strapping 管脚和普通管脚功能相同。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>MTDI控制内置LDO的输出电压，VDD_SDIO（26脚）</p><img src="/posts/3931543859/1d1c373b77bb4cf2b61fe827c84a2239.png" class="" title="在这里插入图片描述"><p>GPIO0、GPIO2控制启动模式，从内部的SPI Flash正常启动还是进入下载模式。</p><img src="/posts/3931543859/d73cf349c37e444eaa20da9d3f5fb162.png" class="" title="在这里插入图片描述"><p>MTDO在系统启动过程中，控制 U0TXD 打印</p><img src="/posts/3931543859/d6b4439857034451bdb493a5d20e92fb.png" class="" title="在这里插入图片描述"><p>MTDO、GPIO5控制SDIO 从机信号输入输出时序</p><img src="/posts/3931543859/a4dfe1a1fe824819ac34d8e76700bb66.png" class="" title="在这里插入图片描述"><h1 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h1><h2 id="CPU-和片上存储"><a href="#CPU-和片上存储" class="headerlink" title="CPU 和片上存储"></a>CPU 和片上存储</h2><p>ESP32-PICO-D4 搭载 2 个低功耗 Xtensa® 32-bit LX6 微处理器。<br>ESP32-PICO-D4 片上存储包括：</p><ul><li><p>448 KB 的 ROM，用于程序启动和内核功能调用</p></li><li><p>用于数据和指令存储的 520 KB 片上 SRAM</p></li><li><p>RTC 快速存储器，为 8 KB 的 SRAM，可以在 Deep-sleep 模式下 RTC 启动时用于数据存储以及被主CPU 访问</p></li><li><p>RTC 慢速存储器，为 8 KB 的 SRAM，可以在 Deep-sleep 模式下被协处理器访问</p></li><li><p>1 Kbit 的 eFuse，其中 256 bit 为系统专用（MAC 地址和芯片设置） ; 其余 768 bit 保留给用户程序, 这些程序包括 flash 加密和芯片 ID</p></li></ul><h3 id="外部-Flash-和-SRAM"><a href="#外部-Flash-和-SRAM" class="headerlink" title="外部 Flash 和 SRAM"></a>外部 Flash 和 SRAM</h3><p>ESP32 支持多个外部 QSPI flash 和静态随机存储器 (SRAM)。详情可参考《ESP32 技术参考手册》 中的 SPI 章节。 ESP32 还支持基于 AES 的硬件加解密功能，从而保护开发者 flash 中的程序和数据。</p><p>ESP32 可通过高速缓存访问外部 QSPI flash 和 SRAM：</p><ul><li>外部 flash 可以同时映射到 CPU 指令和只读数据空间。<ul><li>当映射到 CPU 指令空间时，一次最多可映射 11 MB + 248 KB。如果一次映射超过 3 MB + 248 KB，则 cache 性能可能由于 CPU 的推测性读取而降低。</li><li>当映射到只读数据空间时，一次最多可以映射 4 MB。支持 8-bit、 16-bit 和 32-bit 读取。</li></ul></li><li>外部 SRAM 可映射到 CPU 数据空间。一次最多可映射 4 MB。支持 8-bit、 16-bit 和 32-bit 访问。</li></ul><p>ESP32-PICO-D4 集成了 4 MB 的外部 SPI flash。</p><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/posts/3931543859/cc2176d19d074670a5ed17b971c6367a.png" class="" title="在这里插入图片描述"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qlexcel/article/details/122192294">ESP32­-PICO-­D4的使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP32­-PICO-­D4 的 kit 开发板</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="文件共享" scheme="https://zml3589110.github.io/categories/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="开发板" scheme="https://zml3589110.github.io/categories/%E5%BC%80%E5%8F%91%E6%9D%BF/"/>
    
    <category term="ESP32­-PICO-­D4" scheme="https://zml3589110.github.io/categories/ESP32%C2%AD-PICO-%C2%ADD4/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="开发板" scheme="https://zml3589110.github.io/tags/%E5%BC%80%E5%8F%91%E6%9D%BF/"/>
    
    <category term="ESP32­-PICO-­D4" scheme="https://zml3589110.github.io/tags/ESP32%C2%AD-PICO-%C2%ADD4/"/>
    
    <category term="4MB" scheme="https://zml3589110.github.io/tags/4MB/"/>
    
  </entry>
  
  <entry>
    <title>Cshap监听键盘事件</title>
    <link href="https://zml3589110.github.io/posts/3443976773.html"/>
    <id>https://zml3589110.github.io/posts/3443976773.html</id>
    <published>2024-07-20T02:41:20.000Z</published>
    <updated>2024-07-20T09:45:01.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取当前方法事件对应的控件"><a href="#获取当前方法事件对应的控件" class="headerlink" title="获取当前方法事件对应的控件"></a>获取当前方法事件对应的控件</h1><p>例如，button1对应的事件button1_Click()：</p><p>private void button1_Click(object sender, EventArgs e)<br>{</p><p>…</p><p>}<br>我们想在方法内部获得事件方法对应的控件相关参数：名称、内容、数据…</p><p>可以通过事件中传递过来的sender对象获取名称</p><p>因为我们的控件是button类。所以用—&gt;(Button) sender，</p><p>同理，其他类型的控件就是就是—&gt;(控件类) sender</p><p>…</p><p>((ComboBox) sender).Name&#x2F;&#x2F;名称<br>((ComboBox) sender).Text&#x2F;&#x2F;获取文本</p><h1 id="监听按键-创建类来使用"><a href="#监听按键-创建类来使用" class="headerlink" title="监听按键-创建类来使用"></a>监听按键-创建类来使用</h1><p>c#按键键盘事件监控键盘上下左右和其它按键</p><p>重写：protected override bool ProcessDialogKey(Keys keyData)就可以实现了。</p><p>放在窗口类里面</p><p> public partial class Form_XYZ_Jog : Form</p><p>{</p><p>xxxxx</p><p>}</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="built_in">bool</span> <span class="title">ProcessDialogKey</span>(<span class="params">Keys keyData</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// MessageBox.Show(keyData.ToString());</span></span><br><span class="line">    <span class="built_in">string</span> direction2 = keyData.ToString();</span><br><span class="line">    <span class="built_in">string</span> Left = <span class="string">&quot;A&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Right = <span class="string">&quot;D&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Front = <span class="string">&quot;W&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Back = <span class="string">&quot;S&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Up = <span class="string">&quot;Up&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Down = <span class="string">&quot;Down&quot;</span>;</span><br><span class="line">    label_press_msg.Text = <span class="string">&quot;已按下：&quot;</span> + direction2;</span><br><span class="line">    Console.WriteLine(DateTime.Now.ToString()+ label_press_msg.Text);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (direction2 ==Left)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_left.Focus();</span><br><span class="line"> </span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(direction2 == Right)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_right.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Front)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_front.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Back)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_back.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Up)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_down.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">false</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Down)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_up.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">false</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">base</span>.ProcessDialogKey(keyData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="全局监听"><a href="#全局监听" class="headerlink" title="全局监听"></a>全局监听</h1><p>C#如何获取键盘和鼠标处于空闲状态下的时间  可以通过windows api 函数 GetLastInputInfo或者全局钩子HOOK来实现</p><p>用 GetLastInputInfo 写（键鼠空闲15分钟自动弹出一个页面）</p><h2 id="新建windows-应用程序项目"><a href="#新建windows-应用程序项目" class="headerlink" title="新建windows 应用程序项目"></a>新建windows 应用程序项目</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">APPDEMO</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> VedioForm vf = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> System.Windows.Forms.Timer timer1 = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//启用定时器</span></span><br><span class="line">            <span class="keyword">if</span> (timer1 == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                timer1 = <span class="keyword">new</span> Timer();</span><br><span class="line">            &#125;</span><br><span class="line">            timer1.Interval = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">            timer1.Tick += <span class="keyword">new</span> EventHandler(timer1_Tick);</span><br><span class="line">            timer1.Start();</span><br><span class="line">            Application.Run(<span class="keyword">new</span> MainForm());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//判断空闲时间是否超过15分钟,超过则自动弹出视频播放窗口</span></span><br><span class="line">            <span class="keyword">if</span> (GetIdleTick() / <span class="number">1000</span> &gt;= <span class="number">15</span> * <span class="number">60</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ShowVidioForm();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 打开视频播放窗口</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ShowVidioForm</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (vf == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    vf = <span class="keyword">new</span> VedioForm();</span><br><span class="line">                &#125;</span><br><span class="line">                vf.ShowDialog();</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取鼠标键盘空闲时间</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">long</span> <span class="title">GetIdleTick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            LASTINPUTINFO lastInputInfo = <span class="keyword">new</span> LASTINPUTINFO();</span><br><span class="line">            lastInputInfo.cbSize = Marshal.SizeOf(lastInputInfo);</span><br><span class="line">            <span class="keyword">if</span> (!GetLastInputInfo(<span class="keyword">ref</span> lastInputInfo)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> Environment.TickCount - (<span class="built_in">long</span>)lastInputInfo.dwTime;</span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="meta">StructLayout(LayoutKind.Sequential)</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">struct</span> LASTINPUTINFO</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="meta">MarshalAs(UnmanagedType.U4)</span>]</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> cbSize;</span><br><span class="line">            [<span class="meta">MarshalAs(UnmanagedType.U4)</span>]</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">uint</span> dwTime;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 调用windows API获取鼠标键盘空闲时间</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;plii&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">bool</span> <span class="title">GetLastInputInfo</span>(<span class="params"><span class="keyword">ref</span> LASTINPUTINFO plii</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用HOOK钩子来实现-创建钩子类"><a href="#用HOOK钩子来实现-创建钩子类" class="headerlink" title="用HOOK钩子来实现 创建钩子类"></a>用HOOK钩子来实现 创建钩子类</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">TengDa.Core</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">KeyboardHook</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> KeyEventHandler KeyDownEvent;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> KeyPressEventHandler KeyPressEvent;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> KeyEventHandler KeyUpEvent;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">HookProc</span>(<span class="params"><span class="built_in">int</span> nCode, Int32 wParam, IntPtr lParam</span>)</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> hKeyboardHook = <span class="number">0</span>; <span class="comment">//声明键盘钩子处理的初始值</span></span><br><span class="line">                                      <span class="comment">//值在Microsoft SDK的Winuser.h里查询</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> WH_KEYBOARD_LL = <span class="number">13</span>;   <span class="comment">//线程键盘钩子监听鼠标消息设为2，全局键盘监听鼠标消息设为13</span></span><br><span class="line">        HookProc KeyboardHookProcedure; <span class="comment">//声明KeyboardHookProcedure作为HookProc类型</span></span><br><span class="line">                                        <span class="comment">//键盘结构</span></span><br><span class="line">        [<span class="meta">StructLayout(LayoutKind.Sequential)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KeyboardHookStruct</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> vkCode;  <span class="comment">//定一个虚拟键码。该代码必须有一个价值的范围1至254</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> scanCode; <span class="comment">// 指定的硬件扫描码的关键</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> flags;  <span class="comment">// 键标志</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> time; <span class="comment">// 指定的时间戳记的这个讯息</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> dwExtraInfo; <span class="comment">// 指定额外信息相关的信息</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用此功能，安装了一个钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">SetWindowsHookEx</span>(<span class="params"><span class="built_in">int</span> idHook, HookProc lpfn, IntPtr hInstance, <span class="built_in">int</span> threadId</span>)</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//调用此函数卸载钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">bool</span> <span class="title">UnhookWindowsHookEx</span>(<span class="params"><span class="built_in">int</span> idHook</span>)</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//使用此功能，通过信息钩子继续下一个钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">CallNextHookEx</span>(<span class="params"><span class="built_in">int</span> idHook, <span class="built_in">int</span> nCode, Int32 wParam, IntPtr lParam</span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 取得当前线程编号（线程钩子需要用到）</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;kernel32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">GetCurrentThreadId</span>(<span class="params"></span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//使用WINDOWS API函数代替获取当前实例的函数,防止钩子失效</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;kernel32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">GetModuleHandle</span>(<span class="params"><span class="built_in">string</span> name</span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 安装键盘钩子</span></span><br><span class="line">            <span class="keyword">if</span> (hKeyboardHook == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                KeyboardHookProcedure = <span class="keyword">new</span> HookProc(KeyboardHookProc);</span><br><span class="line">                hKeyboardHook = SetWindowsHookEx(WH_KEYBOARD_LL, KeyboardHookProcedure, GetModuleHandle(System.Diagnostics.Process.GetCurrentProcess().MainModule.ModuleName), <span class="number">0</span>);</span><br><span class="line">                <span class="comment">//hKeyboardHook = SetWindowsHookEx(WH_KEYBOARD_LL, KeyboardHookProcedure, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]), 0);</span></span><br><span class="line">                <span class="comment">//************************************</span></span><br><span class="line">                <span class="comment">//键盘线程钩子</span></span><br><span class="line">                SetWindowsHookEx(<span class="number">13</span>, KeyboardHookProcedure, IntPtr.Zero, GetCurrentThreadId());<span class="comment">//指定要监听的线程idGetCurrentThreadId(),</span></span><br><span class="line">                                                                                               <span class="comment">//键盘全局钩子,需要引用空间(using System.Reflection;)</span></span><br><span class="line">                                                                                               <span class="comment">//SetWindowsHookEx( 13,MouseHookProcedure,Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]),0);</span></span><br><span class="line">                                                                                               <span class="comment">//</span></span><br><span class="line">                                                                                               <span class="comment">//关于SetWindowsHookEx (int idHook, HookProc lpfn, IntPtr hInstance, int threadId)函数将钩子加入到钩子链表中，说明一下四个参数：</span></span><br><span class="line">                                                                                               <span class="comment">//idHook 钩子类型，即确定钩子监听何种消息，上面的代码中设为2，即监听键盘消息并且是线程钩子，如果是全局钩子监听键盘消息应设为13，</span></span><br><span class="line">                                                                                               <span class="comment">//线程钩子监听鼠标消息设为7，全局钩子监听鼠标消息设为14。lpfn 钩子子程的地址指针。如果dwThreadId参数为0 或是一个由别的进程创建的</span></span><br><span class="line">                                                                                               <span class="comment">//线程的标识，lpfn必须指向DLL中的钩子子程。 除此以外，lpfn可以指向当前进程的一段钩子子程代码。钩子函数的入口地址，当钩子钩到任何</span></span><br><span class="line">                                                                                               <span class="comment">//消息后便调用这个函数。hInstance应用程序实例的句柄。标识包含lpfn所指的子程的DLL。如果threadId 标识当前进程创建的一个线程，而且子</span></span><br><span class="line">                                                                                               <span class="comment">//程代码位于当前进程，hInstance必须为NULL。可以很简单的设定其为本应用程序的实例句柄。threaded 与安装的钩子子程相关联的线程的标识符</span></span><br><span class="line">                                                                                               <span class="comment">//如果为0，钩子子程与所有的线程关联，即为全局钩子</span></span><br><span class="line">                                                                                               <span class="comment">//************************************</span></span><br><span class="line">                                                                                               <span class="comment">//如果SetWindowsHookEx失败</span></span><br><span class="line">                <span class="keyword">if</span> (hKeyboardHook == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Stop();</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;安装键盘钩子失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Stop</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">bool</span> retKeyboard = <span class="literal">true</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (hKeyboardHook != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                retKeyboard = UnhookWindowsHookEx(hKeyboardHook);</span><br><span class="line">                hKeyboardHook = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (!(retKeyboard)) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;卸载钩子失败！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//ToAscii职能的转换指定的虚拟键码和键盘状态的相应字符或字符</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">ToAscii</span>(<span class="params"><span class="built_in">int</span> uVirtKey, //[<span class="keyword">in</span>] 指定虚拟关键代码进行翻译。</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">int</span> uScanCode, // [<span class="keyword">in</span>] 指定的硬件扫描码的关键须翻译成英文。高阶位的这个值设定的关键，如果是（不压）</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">byte</span>[] lpbKeyState, // [<span class="keyword">in</span>] 指针，以<span class="number">256</span>字节数组，包含当前键盘的状态。每个元素（字节）的数组包含状态的一个关键。如果高阶位的字节是一套，关键是下跌（按下）。在低比特，如果设置表明，关键是对切换。在此功能，只有肘位的CAPS LOCK键是相关的。在切换状态的NUM个锁和滚动锁定键被忽略。</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">byte</span>[] lpwTransKey, // [<span class="keyword">out</span>] 指针的缓冲区收到翻译字符或字符。</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">int</span> fuState</span>)</span>; <span class="comment">// [in] Specifies whether a menu is active. This parameter must be 1 if a menu is active, or 0 otherwise.</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取按键的状态</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">GetKeyboardState</span>(<span class="params"><span class="built_in">byte</span>[] pbKeyState</span>)</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">short</span> <span class="title">GetKeyState</span>(<span class="params"><span class="built_in">int</span> vKey</span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_KEYDOWN = <span class="number">0x100</span>;<span class="comment">//KEYDOWN</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_KEYUP = <span class="number">0x101</span>;<span class="comment">//KEYUP</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_SYSKEYDOWN = <span class="number">0x104</span>;<span class="comment">//SYSKEYDOWN</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_SYSKEYUP = <span class="number">0x105</span>;<span class="comment">//SYSKEYUP</span></span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">KeyboardHookProc</span>(<span class="params"><span class="built_in">int</span> nCode, Int32 wParam, IntPtr lParam</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 侦听键盘事件</span></span><br><span class="line">            <span class="keyword">if</span> ((nCode &gt;= <span class="number">0</span>) &amp;&amp; (KeyDownEvent != <span class="literal">null</span> || KeyUpEvent != <span class="literal">null</span> || KeyPressEvent != <span class="literal">null</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                KeyboardHookStruct MyKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure(lParam, <span class="keyword">typeof</span>(KeyboardHookStruct));</span><br><span class="line">                <span class="comment">// raise KeyDown</span></span><br><span class="line">                <span class="keyword">if</span> (KeyDownEvent != <span class="literal">null</span> &amp;&amp; (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN))</span><br><span class="line">                &#123;</span><br><span class="line">                    Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;</span><br><span class="line">                    KeyEventArgs e = <span class="keyword">new</span> KeyEventArgs(keyData);</span><br><span class="line">                    KeyDownEvent(<span class="keyword">this</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//键盘按下</span></span><br><span class="line">                <span class="keyword">if</span> (KeyPressEvent != <span class="literal">null</span> &amp;&amp; wParam == WM_KEYDOWN)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] keyState = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">256</span>];</span><br><span class="line">                    GetKeyboardState(keyState);</span><br><span class="line"> </span><br><span class="line">                    <span class="built_in">byte</span>[] inBuffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (ToAscii(MyKeyboardHookStruct.vkCode, MyKeyboardHookStruct.scanCode, keyState, inBuffer, MyKeyboardHookStruct.flags) == <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        KeyPressEventArgs e = <span class="keyword">new</span> KeyPressEventArgs((<span class="built_in">char</span>)inBuffer[<span class="number">0</span>]);</span><br><span class="line">                        KeyPressEvent(<span class="keyword">this</span>, e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">// 键盘抬起</span></span><br><span class="line">                <span class="keyword">if</span> (KeyUpEvent != <span class="literal">null</span> &amp;&amp; (wParam == WM_KEYUP || wParam == WM_SYSKEYUP))</span><br><span class="line">                &#123;</span><br><span class="line">                    Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;</span><br><span class="line">                    KeyEventArgs e = <span class="keyword">new</span> KeyEventArgs(keyData);</span><br><span class="line">                    KeyUpEvent(<span class="keyword">this</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果返回1，则结束消息，这个消息到此为止，不再传递。</span></span><br><span class="line">            <span class="comment">//如果返回0或调用CallNextHookEx函数则消息出了这个钩子继续往下传递，也就是传给消息真正的接受者</span></span><br><span class="line">            <span class="keyword">return</span> CallNextHookEx(hKeyboardHook, nCode, wParam, lParam);</span><br><span class="line">        &#125;</span><br><span class="line">        ~KeyboardHook()</span><br><span class="line">        &#123;</span><br><span class="line">            Stop();</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用-方法"><a href="#调用-方法" class="headerlink" title="调用 方法"></a>调用 方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">hook_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="comment">//  这里写具体实现</span></span><br><span class="line">           <span class="keyword">if</span> (e.KeyCode.Equals(Keys.PrintScreen))</span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 开始监听</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startListen</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           myKeyEventHandeler = <span class="keyword">new</span> KeyEventHandler(hook_KeyDown);</span><br><span class="line">           k_hook.KeyDownEvent += myKeyEventHandeler;<span class="comment">//钩住键按下</span></span><br><span class="line">           k_hook.Start();<span class="comment">//安装键盘钩子</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 结束监听</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopListen</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">if</span> (myKeyEventHandeler != <span class="literal">null</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               k_hook.KeyDownEvent -= myKeyEventHandeler;<span class="comment">//取消按键事件</span></span><br><span class="line">               myKeyEventHandeler = <span class="literal">null</span>;</span><br><span class="line">               k_hook.Stop();<span class="comment">//关闭键盘钩子</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/87obxr/p/18199029">c# 获取当前方法事件对应的控件</a></li><li><a href="https://blog.csdn.net/txwtech/article/details/131445158">c#按键键盘事件监控上下左右和其它按键</a></li><li><a href="https://blog.csdn.net/weixin_44779911/article/details/129814815/">C#全局监听键盘事件</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 程序编译时自动更新版本号方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="键盘" scheme="https://zml3589110.github.io/categories/%E9%94%AE%E7%9B%98/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="键盘" scheme="https://zml3589110.github.io/tags/%E9%94%AE%E7%9B%98/"/>
    
    <category term="输入" scheme="https://zml3589110.github.io/tags/%E8%BE%93%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF找不到example_connect</title>
    <link href="https://zml3589110.github.io/posts/2798208739.html"/>
    <id>https://zml3589110.github.io/posts/2798208739.html</id>
    <published>2024-07-20T02:26:20.000Z</published>
    <updated>2024-07-20T09:45:01.336Z</updated>
    
    <content type="html"><![CDATA[<h1 id="example-connect"><a href="#example-connect" class="headerlink" title="example_connect"></a>example_connect</h1><p>这是常用WIFI连接程序，内包含连接例程，一般调用之后即可连接，但是自己使用时找不到，其实是调用不对，要么通过 CmakeLists 修改，要么直接查找到这个文件夹并复制到 Components 下，最后自己使用的是第二个方法，复制过来当组件使用方便些，而且也能查看修改源码！</p><img src="/posts/2798208739/image-20240720102911131.png" class="" title="image-20240720102911131"><h1 id="来自网上解答"><a href="#来自网上解答" class="headerlink" title="来自网上解答"></a>来自网上解答</h1><h2 id="环境修改"><a href="#环境修改" class="headerlink" title="环境修改"></a>环境修改</h2><p>这个方法是能解决 .h 文件问题，但还是没法解决 c 中函数，因为并没有进行编译！<br>而且， .h 文件是在 $ENV{IDF_PATH}&#x2F;examples&#x2F;common_components&#x2F;protocol_examples_common&#x2F;include 下，应该是5.0后更改了放置地方，所以直接复制组件好一点！</p><ol><li>对于 ” 一直显示头文件protocol_examples_common.h找不到“<br>这个是你需要在你的项目的cmakelist里面加<br><code>set(EXTRA_COMPONENT_DIRS</code> $ENV{IDF_PATH}&#x2F;examples&#x2F;common_components&#x2F;protocol_examples_common)&#96;</li><li>对于你说的连接失败，应该是 http 地址或者端口不正确导致的。</li></ol><h2 id="参照官方编译"><a href="#参照官方编译" class="headerlink" title="参照官方编译"></a>参照官方编译</h2><p>注：官方给的 demo 是能正常编译，而且也没有放到组件！主要差别还是在 yml 文件下，尝试过直接复制 yml 文件到工程目录下还是不行，应该是哪里没有配置好！</p><p>我看了看官方给的那个例程，是要在idf_component.yml文件里面加入 protocol_examples_common:<br>path: ${IDF_PATH}&#x2F;examples&#x2F;common_components&#x2F;protocol_examples_common这个的，像我下面那个一样（不过我下面那个还加了摄像头需要的）</p><img src="/posts/2798208739/image-20240720103555377.png" class="" title="image-20240720103555377"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://github.com/espressif/esp-mdf/issues/288">使用官方例程下的simple_ota_example.c一直显示头文件protocol_examples_common.h找不到</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF下 自己田间 WIFI 功能时 找不到 example_connect 相关内容</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/categories/Components/"/>
    
    <category term="CmakeLists" scheme="https://zml3589110.github.io/categories/CmakeLists/"/>
    
    <category term="example_connect" scheme="https://zml3589110.github.io/categories/example-connect/"/>
    
    
  </entry>
  
  <entry>
    <title>IGBT相关</title>
    <link href="https://zml3589110.github.io/posts/1225844187.html"/>
    <id>https://zml3589110.github.io/posts/1225844187.html</id>
    <published>2024-07-20T01:44:20.000Z</published>
    <updated>2024-07-20T09:45:01.323Z</updated>
    
    <content type="html"><![CDATA[<p><strong>常用查询网站：</strong></p><ol><li><a href="https://www.dianziaihaozhe.com/jingtiguan/">晶体管元件查询</a></li></ol><h1 id="infineon-英飞凌"><a href="#infineon-英飞凌" class="headerlink" title="infineon 英飞凌"></a><a href="https://www.infineon.com/cms/cn/">infineon 英飞凌</a></h1><h2 id="H20PR5"><a href="#H20PR5" class="headerlink" title="H20PR5"></a>H20PR5</h2><img src="/posts/1225844187/image-20240720095441287.png" class="" title="image-20240720095441287"><img src="/posts/1225844187/image-20240720095452603.png" class="" title="image-20240720095452603"><h2 id="H30PR5"><a href="#H30PR5" class="headerlink" title="H30PR5"></a>H30PR5</h2><img src="/posts/1225844187/image-20240720095336558.png" class="" title="image-20240720095336558"><img src="/posts/1225844187/image-20240720095347577.png" class="" title="image-20240720095347577"><h2 id="G50T60"><a href="#G50T60" class="headerlink" title="G50T60"></a>G50T60</h2><img src="/posts/1225844187/image-20240720095017557.png" class="" title="image-20240720095017557"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">收集IGBT相关资料</summary>
    
    
    
    <category term="硬件" scheme="https://zml3589110.github.io/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="IGBT" scheme="https://zml3589110.github.io/categories/IGBT/"/>
    
    
    <category term="硬件" scheme="https://zml3589110.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="IGBT" scheme="https://zml3589110.github.io/tags/IGBT/"/>
    
    <category term="英飞凌" scheme="https://zml3589110.github.io/tags/%E8%8B%B1%E9%A3%9E%E5%87%8C/"/>
    
    <category term="infineon" scheme="https://zml3589110.github.io/tags/infineon/"/>
    
    <category term="H20PR5" scheme="https://zml3589110.github.io/tags/H20PR5/"/>
    
    <category term="H30PR5" scheme="https://zml3589110.github.io/tags/H30PR5/"/>
    
    <category term="G50T60" scheme="https://zml3589110.github.io/tags/G50T60/"/>
    
  </entry>
  
  <entry>
    <title>LVGL组件 lv_bar</title>
    <link href="https://zml3589110.github.io/posts/2299103280.html"/>
    <id>https://zml3589110.github.io/posts/2299103280.html</id>
    <published>2024-07-18T03:30:20.000Z</published>
    <updated>2024-07-18T03:45:43.654Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、Bar简介"><a href="#一、Bar简介" class="headerlink" title="一、Bar简介"></a>一、Bar简介</h2><h3 id="1-1-Overview（概述）"><a href="#1-1-Overview（概述）" class="headerlink" title="1.1 Overview（概述）"></a>1.1 Overview（概述）</h3><p>进度条指示器的宽度根据进度条的当前值自动设置。如果设置进度条的宽度小于其高度，就可以创建出垂直摆放的进度条。可以通过设置进度条的值，从而改变指标的开始位置。<br>进度条的PART与style都比较简单和明确，本文重点在于对进度条模式mode的理解。</p><h3 id="1-2-Parts-and-Styles（部分和风格）"><a href="#1-2-Parts-and-Styles（部分和风格）" class="headerlink" title="1.2 Parts and Styles（部分和风格）"></a>1.2 Parts and Styles（部分和风格）</h3><ul><li>LV_PART_MAIN 进度条的背景，它使用典型的背景样式属性。 添加填充会让指示器变小或变大。 如果值设置为 LV_ANIM_ON<br>，则可以继续通过设置 anim_time 样式属性设置动画的时间。</li><li>LV_PART_INDICATOR 指示器本身； 也是使用所有典型的背景属性。</li></ul><p>如图，绿色部分是LV_PART_INDICATOR ，暗红色是LV_PART_MAIN 。</p><img src="/posts/2299103280/3745e28e970542a88c97d35abaf2eb2f.png" class="" title="在这里插入图片描述"><h2 id="二、Bar-使用"><a href="#二、Bar-使用" class="headerlink" title="二、Bar 使用"></a>二、Bar 使用</h2><h3 id="2-1-Value-and-range（值和范围）"><a href="#2-1-Value-and-range（值和范围）" class="headerlink" title="2.1 Value and range（值和范围）"></a>2.1 Value and range（值和范围）</h3><p>设置进度条的范围：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_range</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">int32_t</span> min, <span class="keyword">int32_t</span> max)</span></span>;</span><br></pre></td></tr></table></figure><p>设置进度条起始值，可选择是否开启动画LV_ANIM_ON\OFF</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_start_value</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">int32_t</span> start_value, <span class="keyword">lv_anim_enable_t</span> anim)</span></span>;</span><br></pre></td></tr></table></figure><p>设置进度条新值，可选择是否开启动画LV_ANIM_ON\OFF</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_value</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">int32_t</span> value, <span class="keyword">lv_anim_enable_t</span> anim)</span></span>;</span><br></pre></td></tr></table></figure><p>涉及到动画，直接LV_ANIM_ON，并不会完全生效，因为动画时间默认设置为 0 ，这里还需要调一下样式的接口函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_obj_set_style_anim_time</span><span class="params">(struct <span class="keyword">_lv_obj_t</span>* obj, <span class="keyword">uint32_t</span> value, <span class="keyword">lv_style_selector_t</span> selector)</span></span>;</span><br></pre></td></tr></table></figure><p>Bar控件提供的API接口并不多，但是使用的时候还是有些小技巧，初次使用设置bar的值可能会遇到lv_bar_set_start_value这个接口不生效的情况，这是为什么呢？</p><img src="/posts/2299103280/a1d80436858943feb1c91bbe9a2b96a0.png" class="" title="在这里插入图片描述"><p>上图是lv_bar_set_start_value函数的实现，一眼就能发现关键点，bar控件的默认mode是LV_BAR_MODE_NORMAL(普通模式)，只有在LV_BAR_MODE_RANGE(范围模式下该函数才能生效)</p><h3 id="2-1-Modes（模式）"><a href="#2-1-Modes（模式）" class="headerlink" title="2.1 Modes（模式）"></a>2.1 Modes（模式）</h3><p>bar控件一共有三个模式：</p><ul><li><strong>LV_BAR_MODE_NORMAL</strong> 像上文所说的普通进度条(默认)</li><li><strong>LV_BAR_MODE_SYMMETRICAL</strong> 这个模式下可以指定负的最小范围。但是只能从零值到当前值绘制指示器。</li><li><strong>LV_BAR_MODE_RANGE</strong> 这个模式下也可以指定负的最小范围。这样进度条的起始值可以不是0，而是你指定的数值，但是这样设置的起始值(lv_bar_set_start_value)必须小于结束值</li></ul><p>设置bar模式接口</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_mode</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">lv_bar_mode_t</span> mode)</span></span>;</span><br></pre></td></tr></table></figure><p>普通模式：LV_BAR_MODE_NORMAL<br>可以指定负的最小范围，只能从最左边当前值绘制指示器。 下图范围(-100,100)</p><img src="/posts/2299103280/65e6411058884c30834ce59248b496a6.png" class="" title="在这里插入图片描述"><p>对称模式：LV_BAR_MODE_NORMAL<br>可以指定负的最小范围，但是只能从零值到当前值绘制指示器。 下图范围(-100,100)</p><img src="/posts/2299103280/bab59d005eb747179c48c8ba5c780ce5.png" class="" title="在这里插入图片描述"><p>0点会根据开始值和结束值计算位置 下图范围(-20,100)</p><img src="/posts/2299103280/b9aadb15942f4f0d88a92403bd156a6b.png" class="" title="在这里插入图片描述"><p>范围模式：LV_BAR_MODE_RANGE<br>和对称模式类似，可以指定负的最小范围，注意这里默认的起始位置start_value 是0；这里可以通过设置起始值来设置。下图范围(-100,100) ，起始值是-50，结束值是20</p><img src="/posts/2299103280/f0376682cec14be3a57b433e1424cab3.png" class="" title="在这里插入图片描述"><p>可以通过图片看出，设置了开始值，指示器就会从设置的值开始向右开始绘制，范围模式下结束值不能小于开始值，也就是说范围设置是(-100,100)，但是我设置了开始值为-50，那么进度条的背景是已经绘制(-100,100)，但是(-100,-50)这个区间的指示器是不能被绘制的，因为已经限定了开始值为-50，只能从-50 的位置开始绘制指示器</p><h2 id="三、Bar-API"><a href="#三、Bar-API" class="headerlink" title="三、Bar API"></a>三、Bar API</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">lv_obj_t</span> * <span class="title">lv_bar_create</span><span class="params">(<span class="keyword">lv_obj_t</span> * parent)</span></span>;<span class="comment">//创建一个bar对象</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_value</span><span class="params">(<span class="keyword">lv_obj_t</span> * obj, <span class="keyword">int32_t</span> value, <span class="keyword">lv_anim_enable_t</span> anim)</span></span>;<span class="comment">//在栏上设置一个新值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_start_value</span><span class="params">(<span class="keyword">lv_obj_t</span> * obj, <span class="keyword">int32_t</span> start_value, <span class="keyword">lv_anim_enable_t</span> anim)</span></span>;<span class="comment">//在工具条上设置一个新的起始值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_range</span><span class="params">(<span class="keyword">lv_obj_t</span> * obj, <span class="keyword">int32_t</span> min, <span class="keyword">int32_t</span> max)</span></span>;<span class="comment">//设置一个bar的最小值和最大值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_bar_set_mode</span><span class="params">(<span class="keyword">lv_obj_t</span> * obj, <span class="keyword">lv_bar_mode_t</span> mode)</span></span>;<span class="comment">//设置栏的类型。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int32_t</span> <span class="title">lv_bar_get_value</span><span class="params">(<span class="keyword">const</span> <span class="keyword">lv_obj_t</span> * obj)</span></span>;<span class="comment">//获取一个bar的值</span></span><br><span class="line"><span class="function"><span class="keyword">int32_t</span> <span class="title">lv_bar_get_start_value</span><span class="params">(<span class="keyword">const</span> <span class="keyword">lv_obj_t</span> * obj)</span></span>;<span class="comment">//获取一个条的起始值</span></span><br><span class="line"><span class="function"><span class="keyword">int32_t</span> <span class="title">lv_bar_get_min_value</span><span class="params">(<span class="keyword">const</span> <span class="keyword">lv_obj_t</span> * obj)</span></span>;<span class="comment">//获取一个条形图的最小值</span></span><br><span class="line"><span class="function"><span class="keyword">int32_t</span> <span class="title">lv_bar_get_max_value</span><span class="params">(<span class="keyword">const</span> <span class="keyword">lv_obj_t</span> * obj)</span></span>;<span class="comment">//获取一个bar的最大值</span></span><br><span class="line"><span class="function"><span class="keyword">lv_bar_mode_t</span> <span class="title">lv_bar_get_mode</span><span class="params">(<span class="keyword">lv_obj_t</span> * obj)</span></span>;<span class="comment">//获取bar的类型。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="LVGL–进度条部件（lv-bar"><a href="#LVGL–进度条部件（lv-bar" class="headerlink" title="LVGL–进度条部件（lv_bar)"></a>LVGL–进度条部件（lv_bar)</h1><h2 id="进度条部件（lv-bar"><a href="#进度条部件（lv-bar" class="headerlink" title="进度条部件（lv_bar)"></a><a href="https://so.csdn.net/so/search?q=%E8%BF%9B%E5%BA%A6%E6%9D%A1&spm=1001.2101.3001.7020">进度条</a>部件（lv_bar)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">进度条部件常用于显示当前任务的完成进度。</span><br></pre></td></tr></table></figure><img src="/posts/2299103280/73faf6c4098e405280cc6979598a327b.png" class="" title="在这里插入图片描述"><p>进度条部件组成部分：<br>主体：LV_PART_MAIN<br>指示器：LV_PART_INDICATOR</p><h3 id="进度条部件的相关API函数"><a href="#进度条部件的相关API函数" class="headerlink" title="进度条部件的相关API函数"></a>进度条部件的相关API函数</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//知识点1：创建一个进度条部件</span></span><br><span class="line">    <span class="keyword">lv_obj_t</span> *bar = lv_bar_create(lv_scr_act());<span class="comment">//创建一个进度条部件</span></span><br><span class="line">    lv_obj_set_size(bar, <span class="number">200</span>,<span class="number">20</span>);<span class="comment">//设置尺寸大小</span></span><br><span class="line">    lv_obj_set_align(bar,LV_ALIGN_CENTER);<span class="comment">//设置在画面的中心位置</span></span><br><span class="line">    <span class="comment">//设置进度条的大小，当前值，范围值</span></span><br><span class="line">    lv_bar_set_range(bar,<span class="number">-100</span>,<span class="number">100</span>);<span class="comment">//设置进度条的范围值</span></span><br><span class="line">    lv_obj_set_style_anim_time(bar,<span class="number">1000</span>,LV_STATE_DEFAULT);<span class="comment">//设置动画效果，注意需要在当前值设置之前</span></span><br><span class="line">    lv_bar_set_value(bar,<span class="number">-50</span>,LV_ANIM_ON);<span class="comment">//设置进度条的当前值</span></span><br><span class="line">    <span class="comment">//拓展知识点：设置模式，起始值</span></span><br><span class="line">    lv_bar_set_mode(bar,LV_BAR_MODE_SYMMETRICAL);<span class="comment">//修改模式,</span></span><br><span class="line"><span class="comment">//    lv_bar_set_start_value(bar,-50,LV_ANIM_OFF);//修改起始位置</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span>&#123;</span></span><br><span class="line">LV_BAR_MODE_NORMAL,<span class="comment">/*默认模式*/</span></span><br><span class="line">LV_BAR_MODE_SYSMMERTICAL,<span class="comment">/*从零绘制到当前值（当前值可以小于0）*/</span></span><br><span class="line">LV_BAR_MODE_RANGE<span class="comment">/*允许设置起始值，但起始值必须小于当前值*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="进度条使用注意事项（v8-2）版本"><a href="#进度条使用注意事项（v8-2）版本" class="headerlink" title="进度条使用注意事项（v8.2）版本"></a>进度条使用注意事项（v8.2）版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@当进度条高度大于宽度时，其方向变为垂直。</span><br><span class="line">@动画事件设置需要放在当前值之前，否则看不到动画。</span><br><span class="line">@动画事件指的是旧值刷新到新值的绘图时间，并不是现实中当前值变化所需要的时间。</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/smicd/article/details/135928980">分LVGL8.3 –lv_bar 进度条</a></li><li><a href="https://blog.csdn.net/m0_63472758/article/details/136229482">LVGL–进度条部件（lv_bar)</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">LVGL 进度条组件 lv_bar</summary>
    
    
    
    <category term="LVGL组件" scheme="https://zml3589110.github.io/categories/LVGL%E7%BB%84%E4%BB%B6/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="lv_bar" scheme="https://zml3589110.github.io/categories/LVGL%E7%BB%84%E4%BB%B6/lv-bar/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/categories/LVGL/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
    <category term="组件" scheme="https://zml3589110.github.io/tags/%E7%BB%84%E4%BB%B6/"/>
    
    <category term="lv_bar" scheme="https://zml3589110.github.io/tags/lv-bar/"/>
    
  </entry>
  
  <entry>
    <title>LVGL启动过程</title>
    <link href="https://zml3589110.github.io/posts/4122746189.html"/>
    <id>https://zml3589110.github.io/posts/4122746189.html</id>
    <published>2024-07-18T03:06:20.000Z</published>
    <updated>2024-07-18T03:45:43.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本启动流程"><a href="#基本启动流程" class="headerlink" title="基本启动流程"></a>基本启动流程</h1><p>![img](3. LVGL模拟器NXP GUI Guider使用&#x2F;2109578-20220821111715583-1999413560.png)</p><p>lvgl是gui层负责绘制gui并根据输入设备的事件来响应重绘 ，然后把绘制的缓冲区发送给显示驱动去实际显示。</p><p>以下代码参考lvgl arduino官方例程，gui guider模拟器例程，例如 stm32 fsmc lvgl例程</p><h2 id="第一步-时钟"><a href="#第一步-时钟" class="headerlink" title="第一步 时钟"></a>第一步 时钟</h2><p>时钟是lvgl绘制gui的节拍器。获取时钟在这个文件里  ..\lvgl\src\hal\lv_hal_tick.c</p><p>在arduino 中时钟是从 millis（）这个函数获得的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_TICK_CUSTOM 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> LV_TICK_CUSTOM</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> LV_TICK_CUSTOM_INCLUDE <span class="meta-string">&quot;Arduino.h&quot;</span>         <span class="comment">/*Header for the system time function*/</span></span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> LV_TICK_CUSTOM_SYS_TIME_EXPR (millis())    <span class="comment">/*Expression evaluating to current system time in ms*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>   <span class="comment">/*LV_TICK_CUSTOM*/</span></span></span><br></pre></td></tr></table></figure><p>stm32使用硬件timer</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HardwareTimer *MyTim;</span><br><span class="line">    <span class="comment">/*Initialize the graphics library&#x27;s tick*/</span></span><br><span class="line">    MyTim = <span class="keyword">new</span> HardwareTimer(TIM2);</span><br><span class="line">    MyTim-&gt;setMode(<span class="number">2</span>, TIMER_OUTPUT_COMPARE);  <span class="comment">// In our case, channekFalling is configured but not really used. Nevertheless it would be possible to attach a callback to channel compare match.</span></span><br><span class="line">    MyTim-&gt;setOverflow(<span class="number">1000</span>/LVGL_TICK_PERIOD, HERTZ_FORMAT); <span class="comment">// period in Hz</span></span><br><span class="line">    MyTim-&gt;attachInterrupt(lv_tick_handler);</span><br><span class="line">    MyTim-&gt;resume();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">lv_tick_handler</span><span class="params">(HardwareTimer*)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    lv_tick_inc(LVGL_TICK_PERIOD);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>linux等使用 mingw标准库   &lt;stddef.h&gt;  里的宏定义  sys_time</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> !LV_TICK_CUSTOM</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * You have to call this function periodically</span></span><br><span class="line"><span class="comment"> * @param tick_period the call period of this function in milliseconds</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">LV_ATTRIBUTE_TICK_INC <span class="keyword">void</span> <span class="title">lv_tick_inc</span><span class="params">(<span class="keyword">uint32_t</span> tick_period)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tick_irq_flag = <span class="number">0</span>;</span><br><span class="line">    sys_time += tick_period;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="第二步-核心初始化"><a href="#第二步-核心初始化" class="headerlink" title="第二步 核心初始化"></a>第二步 核心初始化</h2><p>lv核心初始化 完成各种结构体与函数的初始化   </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lv_init();</span><br></pre></td></tr></table></figure><h2 id="第三步-硬件抽象层"><a href="#第三步-硬件抽象层" class="headerlink" title="第三步  硬件抽象层"></a>第三步  硬件抽象层</h2><p>硬件虚拟层需要 完成  display, input devices, tick     也就是与驱动的对接，与输入设备的对接   完成tick （节拍）？</p><h3 id="1-先看display"><a href="#1-先看display" class="headerlink" title="1 先看display"></a>1 先看display</h3><ul><li><p>先实例化底层显示驱动    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SDL驱动      monitor_init();</span><br><span class="line"></span><br><span class="line">TFT espi驱动      tft.begin();          <span class="comment">/* TFT init TFT初始化*/</span> </span><br><span class="line">tft.setRotation( <span class="number">1</span> ); <span class="comment">/* Landscape orientation, flipped 设置方向*/</span></span><br></pre></td></tr></table></figure></li><li><p>创造缓冲区</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Create a display buffer  SDL样式的*/</span>  </span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">lv_disp_draw_buf_t</span> disp_buf1;</span><br><span class="line">   <span class="keyword">static</span> <span class="keyword">lv_color_t</span> buf1_1[<span class="number">480</span> * <span class="number">10</span>];</span><br><span class="line">   lv_disp_draw_buf_init(&amp;disp_buf1, buf1_1, <span class="literal">NULL</span>, <span class="number">480</span> * <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">lv_disp_buf_init(&amp;disp_buf, buf, <span class="literal">NULL</span>, LV_HOR_RES_MAX * <span class="number">10</span>);</span><br></pre></td></tr></table></figure><ul><li>完成display到实际底层驱动的填充函数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Display flushing 显示填充  espi样式  */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_disp_flush</span><span class="params">( <span class="keyword">lv_disp_drv_t</span> *disp, <span class="keyword">const</span> <span class="keyword">lv_area_t</span> *area, <span class="keyword">lv_color_t</span> *color_p )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> w = ( area-&gt;x2 - area-&gt;x1 + <span class="number">1</span> );</span><br><span class="line">    <span class="keyword">uint32_t</span> h = ( area-&gt;y2 - area-&gt;y1 + <span class="number">1</span> );</span><br><span class="line"></span><br><span class="line">    tft.startWrite();</span><br><span class="line">    tft.setAddrWindow( area-&gt;x1, area-&gt;y1, w, h );</span><br><span class="line">    tft.pushColors( ( <span class="keyword">uint16_t</span> * )&amp;color_p-&gt;full, w * h, <span class="literal">true</span> );</span><br><span class="line">    tft.endWrite();</span><br><span class="line"></span><br><span class="line">    lv_disp_flush_ready( disp );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>直接写GRAM样式</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_disp_flush</span><span class="params">(<span class="keyword">lv_disp_drv_t</span> *disp, <span class="keyword">const</span> <span class="keyword">lv_area_t</span> *area, <span class="keyword">lv_color_t</span> *color_p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    u16 height,width;</span><br><span class="line">    u16 i,j;</span><br><span class="line">    width=area-&gt;x2 - area-&gt;x1+<span class="number">1</span>;             <span class="comment">//得到填充的宽度</span></span><br><span class="line">    height=area-&gt;y2 - area-&gt;y1+<span class="number">1</span>;            <span class="comment">//高度</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;height;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LCD_SetCursor(area-&gt;x1,area-&gt;y1+i);       <span class="comment">//设置光标位置</span></span><br><span class="line">        LCD_WriteRAM_Prepare();     <span class="comment">//开始写入GRAM</span></span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;width;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            LCD_TYPE-&gt;LCD_RAM=color_p-&gt;full;<span class="comment">//写入数据</span></span><br><span class="line">            color_p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    lv_disp_flush_ready(disp); <span class="comment">/* tell lvgl that flushing is done */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>SDL样式</li></ul><p>monitor_flush</p><p>创造display</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Initialize the display初始化display*/</span></span><br><span class="line">   <span class="keyword">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">   lv_disp_drv_init(&amp;disp_drv);</span><br><span class="line">   disp_drv.hor_res = LV_HOR_RES_MAX;</span><br><span class="line">   disp_drv.ver_res = LV_VER_RES_MAX;</span><br><span class="line">   disp_drv.flush_cb = my_disp_flush;<span class="comment">//  这里就用到了填充函数</span></span><br><span class="line">   disp_drv.buffer = &amp;disp_buf;</span><br><span class="line">   lv_disp_drv_register(&amp;disp_drv);</span><br></pre></td></tr></table></figure><h3 id="2-再看输入层"><a href="#2-再看输入层" class="headerlink" title="2 再看输入层"></a>2 再看输入层</h3><ul><li>先初始化硬件接口</li></ul><p>TFT-esp 这样 触摸屏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">uint16_t</span> calData[<span class="number">5</span>] = &#123; <span class="number">187</span>, <span class="number">3596</span>, <span class="number">387</span>, <span class="number">3256</span>, <span class="number">5</span> &#125;;</span><br><span class="line">tft.setTouch( calData ); <span class="comment">// espi如果设置了touch cs 自动完成触摸的初始化</span></span><br></pre></td></tr></table></figure><p> 独立的xpt2046驱动 触摸屏</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">XPT2046_Touchscreen <span class="title">ts</span><span class="params">(CS_PIN, irq_pin)</span></span>;</span><br></pre></td></tr></table></figure><p> 模拟器的鼠标键盘</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mouse_init();<span class="comment">//在模拟器里也完成了触摸回调函数</span></span><br></pre></td></tr></table></figure><p>其他的滚轮键盘编码器也同样原理</p><h3 id="对接触摸驱动-完成触摸回调函数"><a href="#对接触摸驱动-完成触摸回调函数" class="headerlink" title="对接触摸驱动 完成触摸回调函数"></a>对接触摸驱动 完成触摸回调函数</h3><p>espi</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Read the touchpad*/</span></span><br><span class="line"><span class="comment">/*读取触摸板*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_touchpad_read</span><span class="params">( <span class="keyword">lv_indev_drv_t</span> * indev_driver, <span class="keyword">lv_indev_data_t</span> * data )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> touchX, touchY;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> touched = tft.getTouch( &amp;touchX, &amp;touchY, <span class="number">600</span> );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( !touched )</span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*Set the coordinates*/</span></span><br><span class="line">        data-&gt;point.x = touchX;</span><br><span class="line">        data-&gt;point.y = touchY;</span><br><span class="line"></span><br><span class="line">        Serial.print( <span class="string">&quot;Data x &quot;</span> );</span><br><span class="line">        Serial.println( touchX );</span><br><span class="line"></span><br><span class="line">        Serial.print( <span class="string">&quot;Data y &quot;</span> );</span><br><span class="line">        Serial.println( touchY );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>xpt2046</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">my_touchpad_read</span><span class="params">(<span class="keyword">lv_indev_drv_t</span> * indev, <span class="keyword">lv_indev_data_t</span> * data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_coord_t</span> last_x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_coord_t</span> last_y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Save the state and save the pressed coordinate*/</span></span><br><span class="line">    data-&gt;state = ts.touched() ? LV_INDEV_STATE_PR : LV_INDEV_STATE_REL;</span><br><span class="line">    <span class="keyword">if</span>(data-&gt;state == LV_INDEV_STATE_PR)&#123;</span><br><span class="line">        TS_Point p = ts.getPoint();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//convert to lcd position</span></span><br><span class="line">        last_x = LV_HOR_RES-(p.x *LV_HOR_RES)/<span class="number">4095</span>;       <span class="comment">/*TODO save the current X coordinate*/</span></span><br><span class="line">        last_y = LV_VER_RES-(p.y *LV_VER_RES)/<span class="number">4095</span>;       <span class="comment">/*TODO save the current Y coordinate*/</span></span><br><span class="line">        </span><br><span class="line">        Serial.print(<span class="string">&quot;touched:&quot;</span>);</span><br><span class="line">        Serial.print(last_x);Serial.print(<span class="string">&quot;,&quot;</span>);Serial.println(last_y);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Set the coordinates (if released use the last pressed coordinates)*/</span></span><br><span class="line">    data-&gt;point.x = last_x;</span><br><span class="line">    data-&gt;point.y = last_y;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">/*Return `false` because we are not buffering and no more data to read*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完成lvgl输入驱动与硬件驱动的对接"><a href="#完成lvgl输入驱动与硬件驱动的对接" class="headerlink" title="完成lvgl输入驱动与硬件驱动的对接"></a>完成lvgl输入驱动与硬件驱动的对接</h3><p>触摸样式</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Initialize the (dummy) input device driver*/</span></span><br><span class="line"><span class="comment">/*初始化（虚拟）输入设备驱动程序*/</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_indev_drv_t</span> indev_drv;</span><br><span class="line">lv_indev_drv_init( &amp;indev_drv );</span><br><span class="line">indev_drv.type = LV_INDEV_TYPE_POINTER;</span><br><span class="line">indev_drv.read_cb = my_touchpad_read;<span class="comment">//上一步的在这用到了</span></span><br><span class="line">lv_indev_drv_register( &amp;indev_drv );</span><br></pre></td></tr></table></figure><p>模拟器样式 使用鼠标</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Add the mouse as input device</span></span><br><span class="line"><span class="comment">  * Use the &#x27;mouse&#x27; driver which reads the PC&#x27;s mouse*/</span></span><br><span class="line"> mouse_init();</span><br><span class="line"> <span class="keyword">lv_indev_drv_t</span> indev_drv;</span><br><span class="line"> lv_indev_drv_init(&amp;indev_drv);          <span class="comment">/*Basic initialization*/</span></span><br><span class="line"> indev_drv.type = LV_INDEV_TYPE_POINTER;</span><br><span class="line"> indev_drv.read_cb = mouse_read;         <span class="comment">/*This function will be called periodically (by the library) to get the mouse position and state*/</span></span><br><span class="line"> <span class="keyword">lv_indev_t</span> * mouse_indev = lv_indev_drv_register(&amp;indev_drv);</span><br></pre></td></tr></table></figure><h2 id="3-初始化节拍"><a href="#3-初始化节拍" class="headerlink" title="3 初始化节拍"></a>3 初始化节拍</h2><p>arduino 自动完成此步骤</p><p>模拟器</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Tick init.</span></span><br><span class="line"><span class="comment"> * You have to call &#x27;lv_tick_inc()&#x27; in periodically to inform LittelvGL about how much time were elapsed</span></span><br><span class="line"><span class="comment"> * Create an SDL thread to do this*/</span></span><br><span class="line">SDL_CreateThread(tick_thread, <span class="string">&quot;tick&quot;</span>, <span class="literal">NULL</span>);</span><br></pre></td></tr></table></figure><p>stm32</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Initialize the graphics library&#x27;s tick*/</span></span><br><span class="line">MyTim = <span class="keyword">new</span> HardwareTimer(TIM2);</span><br><span class="line">MyTim-&gt;setMode(<span class="number">2</span>, TIMER_OUTPUT_COMPARE);  <span class="comment">// In our case, channekFalling is configured but not really used. Nevertheless it would be possible to attach a callback to channel compare match.</span></span><br><span class="line">MyTim-&gt;setOverflow(<span class="number">1000</span>/LVGL_TICK_PERIOD, HERTZ_FORMAT); <span class="comment">// period in Hz</span></span><br><span class="line">MyTim-&gt;attachInterrupt(lv_tick_handler);</span><br><span class="line">MyTim-&gt;resume();</span><br></pre></td></tr></table></figure><p>说实话我没怎么看懂</p><h1 id="第三步-开始绘制gui"><a href="#第三步-开始绘制gui" class="headerlink" title="第三步 开始绘制gui"></a>第三步 开始绘制gui</h1><p>硬件抽象层完成初始化  就可以开始绘制ui</p><p>第一步是初始化sceen</p><p>从sceen里创建各种widget  给widget添加事件回调 然后在无线循环里调用lv_timer_handler()，它会按LVGL_TICK_PERIOD 设置的事件重复的响应输入事件来重绘ui</p><p>这里简单绘制个label，注意label默认不带事件。除非用函数强制开启</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Create a Label on the currently active screen在当前屏幕上生成一个label*/</span></span><br></pre></td></tr></table></figure><p>　　static  lv_obj_t * label1&#x3D; lv_label_create(lv_scr_act());&#x2F;&#x2F; lv_sce_act()可以获得当前屏幕  使用静态指针是避免setup函数结束后指针被释放找不到对象自己</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;*Modify the Label&#39;s text设置文本*&#x2F;</span><br><span class="line">    lv_label_set_text(label1, &quot;Hello world!&quot;);</span><br><span class="line">    </span><br><span class="line">    lv_obj_set_pos(label1, 0, 2);</span><br><span class="line"></span><br><span class="line">    &#x2F;* Align the Label to the center</span><br><span class="line">     * NULL means align on parent (which is the screen now)</span><br><span class="line">     * 0, 0 at the end means an x, y offset after alignment*&#x2F;</span><br><span class="line">&#x2F;&#x2F; </span><br></pre></td></tr></table></figure><p>添加一个带事件的按钮 </p><p> 这里我一开始尝试用模拟器，但是guiguider跟lvgl是是纯c语言的 不支持 c++的String，但是c想实现字符串的动态增长可是无比蛋疼的 这时候arduino的C++特性就很好用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">btn_event_cb</span><span class="params">(<span class="keyword">lv_event_t</span> * e)</span><span class="comment">//回调函数都是静态的 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_event_code_t</span> code = lv_event_get_code(e);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​    <span class="keyword">if</span>(code == LV_EVENT_CLICKED) &#123;</span><br><span class="line"></span><br><span class="line">​      <span class="keyword">static</span> String temp = lv_label_get_text(label);<span class="comment">//临时变量也是静态的</span></span><br><span class="line"></span><br><span class="line">​      temp = temp + <span class="string">&quot;!&quot;</span>;</span><br><span class="line"></span><br><span class="line">​      lv_label_set_text(label1,  temp.c_str());</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lv_obj_t</span> * btn = lv_btn_create(lv_scr_act());     <span class="comment">/*Add a button the current screen*/</span></span><br><span class="line">lv_obj_set_pos(btn, <span class="number">50</span>, <span class="number">50</span>);                            <span class="comment">/*Set its position*/</span></span><br><span class="line">lv_obj_set_size(btn, <span class="number">120</span>, <span class="number">50</span>);                          <span class="comment">/*Set its size*/</span></span><br><span class="line">lv_obj_add_event_cb(btn, btn_event_cb, LV_EVENT_ALL, <span class="literal">NULL</span>);           <span class="comment">/*Assign a callback to the button*/</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://www.cnblogs.com/kyo413/p/16608162.html">分析lvgl的代码启动过程，对比esp32，stm32，linux</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">LVGL基本启动过程</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/categories/LVGL/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
  </entry>
  
  <entry>
    <title>ESP32内存分区</title>
    <link href="https://zml3589110.github.io/posts/1906022834.html"/>
    <id>https://zml3589110.github.io/posts/1906022834.html</id>
    <published>2024-07-18T02:34:20.000Z</published>
    <updated>2024-07-20T09:45:01.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事情起因"><a href="#事情起因" class="headerlink" title="事情起因"></a>事情起因</h1><p>在调试 lvgl 动画跟WIFI的时候报内存分区不够的错误，但是 ESP32-PICO-KIT 使用的是 ESP32-PICO-D 芯片，拥有 4MB 内存才对，选择的默认是 1MB 而已，后边调整选择自带的 CSV 分区文件，仔细看才有 1500kb ，总感觉不对，才又重新根据需求更改 FLASH，通过这个可以知道能自己改大内存的吧！以后有机会得试试看！</p><p><strong>刚刚根据这篇文章将 ESP32-PICO-KIT 开发板中D4芯片ESP32的内存改成了4MB模式，之前最大只到1.5MB，有个地方不同，它计算的方式是kb，而且还是1000为1MB，也就是说设置了4000K内存，同时也要在menuconfig中修改串口flash为4mb，选择相应分区表文件csv即可！</strong></p><h1 id="官方分区表"><a href="#官方分区表" class="headerlink" title="官方分区表"></a>官方<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-guides/partition-tables.html">分区表</a></h1><p>每片 ESP32 的 flash 可以包含多个应用程序，以及多种不同类型的数据（例如校准数据、文件系统数据、参数存储数据等）。因此，我们在 flash 的 默认偏移地址 0x8000 处烧写一张分区表。</p><p>分区表的长度为 0xC00 字节，最多可以保存 95 条分区表条目。MD5 校验和附加在分区表之后，用于在运行时验证分区表的完整性。分区表占据了整个 flash 扇区，大小为 0x1000 (4 KB)。因此，它后面的任何分区至少需要位于 (默认偏移地址) + 0x1000 处。</p><p>分区表中的每个条目都包括以下几个部分：Name（标签）、Type（app、data 等）、SubType 以及在 flash 中的偏移量（分区的加载地址）。</p><p>在使用分区表时，最简单的方法就是打开项目配置菜单（idf.py menuconfig），并在 CONFIG_PARTITION_TABLE_TYPE 下选择一个预定义的分区表：</p><p>“Single factory app, no OTA”</p><p>“Factory app, two OTA definitions”</p><p>在以上两种选项中，出厂应用程序均将被烧录至 flash 的 0x10000 偏移地址处。这时，运行 idf.py partition-table ，即可以打印当前使用分区表的信息摘要。</p><p><a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-guides/tools/idf-py.html#selecting-idf-target">IDF 前端工具 - idf.py</a></p><h1 id="修改分区表适配大于1M的固件"><a href="#修改分区表适配大于1M的固件" class="headerlink" title="修改分区表适配大于1M的固件"></a>修改分区表适配大于1M的固件</h1><p>使用的是esp32的esp-idf  sdk;</p><h2 id="分区列表路径"><a href="#分区列表路径" class="headerlink" title="分区列表路径"></a>分区列表路径</h2><p>相对路径： ~&#x2F;esp-adf&#x2F;esp-idf&#x2F;components&#x2F;partition_table</p><p><strong>注：也可使用环境地址进入  ${IDF_PATH}&#x2F;components&#x2F;partition_table</strong></p><img src="/posts/1906022834/8def580029346adc646b9eca67e5044b.png" class="" title="img"><img src="/posts/1906022834/0e42cb031791ab002f289cb5a4e614fe.png" class="" title="img"><p>里面的几个后缀为.csv的分区文件均可用，具体使用哪个是在menuconfig中设置的; 如下图所示：需要配置两个地方的信息;</p><img src="/posts/1906022834/79e6dea3b260bc5f5939c599f9d7eff0.png" class="" title="img"><h2 id="第一处配置："><a href="#第一处配置：" class="headerlink" title="第一处配置："></a>第一处配置：</h2><p>路径：Component config  —&gt;   ESP32-specific  —&gt;   Core dump destination (None)  —&gt;   </p><p><strong>主：现在使用的 ESP-IDF-5.2.2 版本不用这个也正常，只是当前kit开发板的查看了只有1500K内存！</strong></p><img src="/posts/1906022834/42ff950a98da7648521fc73a36d4dc41.png" class="" title="img"><h2 id="第二处配置："><a href="#第二处配置：" class="headerlink" title="第二处配置："></a>第二处配置：</h2><p>路径：Partition Table  —&gt;   Partition Table (Single factory app, no OTA)  —&gt;  </p><img src="/posts/1906022834/56adaf32838a07c835c2aa2568134db7.png" class="" title="img"><h2 id="修改编译"><a href="#修改编译" class="headerlink" title="修改编译"></a>修改编译</h2><p>这两处配置完后,　就能确定使用哪个配置文件;  然后修改对应的文件：这边对应的是partitions_singleapp.csv</p><p>修改固件存储最大为2M;</p><img src="/posts/1906022834/e31c5334bda5c8e71c8224a7cd385c17.png" class="" title="img"><p>保存后，重新编译固件;</p><p>不使用OTA时，从0x10000地址处加载固件, 如下所示, factory app显示的长度为2M容量;</p><img src="/posts/1906022834/f6e08f3c418ae33c43133455753a8048.png" class="" title="img"><p>大于1M的固件经过上述设置后，可以正常运行了.</p><h1 id="内存不够报错"><a href="#内存不够报错" class="headerlink" title="内存不够报错"></a>内存不够报错</h1><img src="/posts/1906022834/image-20240720142431268.png" class="" title="image-20240720142431268"><img src="/posts/1906022834/image-20240720142758048.png" class="" title="image-20240720142758048"><p>详细内容点击官方分区内容说明即可！</p><h1 id="ESP32-分区表"><a href="#ESP32-分区表" class="headerlink" title="ESP32 分区表"></a>ESP32 分区表</h1><p>当你编译程序，发现 <code>app partition is too small for binary</code> 错误的时候，就涉及到 ESP32 分区表的内容了。</p><h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><p>在了解分区之前，先了解一下以下概率，便于 ESPe32 分区的理解</p><ol><li><p>缓存（cache）<br>缓存是指可以进行高速数据交换的存储器，它先于内存与CPU交换数据，因此速率很快。而缓存分为：一级缓存、二级缓存、三级缓存，原理如下图所示：</p><img src="/posts/1906022834/2406897-20221014104551752-1969656079.png" class="" title="img"><p>从图中可以看出，为了减少争用Cache所造成的冲突，提高了处理器效能，将一级缓存分为：数据缓存（Data Cache，D-Cache）和指令缓存（Instruction Cache，I-Cache），想要了解更多信息，参考<a href="https://baike.baidu.com/item/%E7%BC%93%E5%AD%98/100710?fr=aladdin">缓存</a></p></li><li><p>随机存取存储器（RAM）<br>随机存取存储器（英语：Random Access Memory，缩写：RAM），也叫主存，是与CPU直接交换数据的内部存储器。根据存储单元的工作原理不同， RAM分为静态SRAM和动态DRAM</p><ul><li>SRAM<br>优点：速度快、使用简单、不需刷新、静态功耗极低；常用作Cache。 [8]<br>缺点：元件数多、集成度低、运行功耗大。</li><li>DRAM<br>优点： 集成度远高于SRAM、功耗低，价格也低。 [8]<br>缺点：因需刷新而使外围电路复杂；刷新也使存取速度较SRAM慢，所以在计算机中，DRAM常用于作主存储器。</li></ul><p>了解更多，请参考<a href="https://baike.baidu.com/item/%E9%9A%8F%E6%9C%BA%E5%AD%98%E5%8F%96%E5%AD%98%E5%82%A8%E5%99%A8/4099402">随机存取存储器</a>。</p></li><li><p>只读存储器（ROM）<br>只读存储器（Read-Only Memory，ROM）以非破坏性读出方式工作，只能读出无法写入信息。信息一旦写入后就固定下来，即使切断电源，信息也不会丢失，所以又称为固定存储器。</p><p>ROM有多种类型，且每种只读存储器都有各自的特性和适用范围。从其制造工艺和功能上分，ROM有五种类型，即掩膜编程的只读存储器MROM（Mask-programmedROM）、可编程的只读存储器PROM（Programmable ROM）、可擦除可编程的只读存储器EPROM（Erasable Programmable ROM）、可电擦除可编程的只读存储器 EEPROM（Elecrically Erasable Programmable ROM）和快擦除读写存储器（Flash Memory）。<br>了解更多，请参考<a href="https://baike.baidu.com/item/%E5%8F%AA%E8%AF%BB%E5%AD%98%E5%82%A8%E5%99%A8/2399075">只读存储器</a></p></li><li><p>闪存（Flash）<br>flash存储器又称闪存，它结合了ROM和RAM的长处，不仅具备电子可擦除可编程（EEPROM）的性能，还可以快速读取数据（NVRAM的优势），使数据不会因为断电而丢失。</p></li><li><p>电磁频率(RadioFrequency)<br>RF 是Radio Frequency的缩写，表示可以辐射到空间的电磁频率，频率范围从300KHz～30GHz之间。</p></li><li><p>实时时钟（RTC）<br>实时时钟的缩写是RTC(Real_Time Clock)。RTC 是集成电路，通常称为时钟芯片。</p></li><li><p>安全系统（Security）<br>主要是各种安全算法，确保系统和数据的安全</p></li></ol><p>了解完成后上面的基本概念后，我们在看一下ESP32 的架构就很容易了，如下图所示：</p><img src="/posts/1906022834/2406897-20221014114717723-840966795.png" class="" title="img"><h2 id="二、芯片配置"><a href="#二、芯片配置" class="headerlink" title="二、芯片配置"></a>二、芯片配置</h2><p>分区配置需要根据自己芯片的 Flash 大小进行配置的，所以在配置之前首先得了解自己芯片的信息，如下图所示：</p><img src="/posts/1906022834/2406897-20221014115912361-2139796268.png" class="" title="img"><h2 id="三、选择分区方式"><a href="#三、选择分区方式" class="headerlink" title="三、选择分区方式"></a>三、选择分区方式</h2><ol><li><p>设置 flash 大小，并选择分区方式</p><img src="/posts/1906022834/2406897-20221014120315237-1406957361.png" class="" title="img"><p><strong>注意：</strong>这个可以主要可以分为两种配置方式，除自定义（Custom partition table CSV）分区方式外，其他的都是预定义分区，主要分析自定义分区方式</p></li><li><p>设置自定义分区</p><img src="/posts/1906022834/2406897-20221014134436890-1287873577.png" class="" title="img"></li><li><p>在工程文件中创建 <code>partitions.csv</code> 文件，如下图所示：</p><img src="/posts/1906022834/2406897-20221014134605190-988454499.png" class="" title="img"></li><li><p>在 <code>partitions.csv</code> 文件中添加自定义分区内容</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># ESP-IDF Partition Table</span></span><br><span class="line"><span class="meta"># Name,   Type, SubType, Offset,  Size, Flags</span></span><br><span class="line"><span class="title">nvs</span>,      <span class="class"><span class="keyword">data</span>, nvs,     0x9000,  0x4000,</span></span><br><span class="line"><span class="title">otadata</span>,  <span class="class"><span class="keyword">data</span>, ota,     0xd000,  0x2000,</span></span><br><span class="line"><span class="title">phy_init</span>, <span class="class"><span class="keyword">data</span>, phy,     0xf000,  0x1000,</span></span><br><span class="line"><span class="title">factory</span>,  app,  factory, <span class="number">0x10000</span>,  <span class="number">4</span>M,</span><br></pre></td></tr></table></figure></li></ol><h2 id="三、分区类容"><a href="#三、分区类容" class="headerlink" title="三、分区类容"></a>三、分区类容</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Name,   Type, SubType,  Offset,   Size,  Flags</span></span><br><span class="line"><span class="title">nvs</span>,      <span class="class"><span class="keyword">data</span>, nvs,      0x9000,  0x4000</span></span><br><span class="line"><span class="title">otadata</span>,  <span class="class"><span class="keyword">data</span>, ota,      0xd000,  0x2000</span></span><br><span class="line"><span class="title">phy_init</span>, <span class="class"><span class="keyword">data</span>, phy,      0xf000,  0x1000</span></span><br><span class="line"><span class="title">factory</span>,  app,  factory,  <span class="number">0x10000</span>,  <span class="number">1</span>M</span><br><span class="line"><span class="title">ota_0</span>,    app,  ota_0,    ,         <span class="number">1</span>M</span><br><span class="line"><span class="title">ota_1</span>,    app,  ota_1,    ,         <span class="number">1</span>M</span><br><span class="line"><span class="title">nvs_key</span>,  <span class="class"><span class="keyword">data</span>, nvs_keys, ,        0x1000</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><ul><li>字段之间的空格会被忽略，任何以 # 开头的行（注释）也会被忽略。</li><li>CSV 文件中的每个非注释行均为一个分区定义。</li><li>每个分区的 Offset 字段可以为空，gen_esp32part.py 工具会从分区表位置的后面开始自动计算并填充该分区的偏移<br>地址，同时确保每个分区的偏移地址正确对齐。</li></ul><h3 id="Name字段"><a href="#Name字段" class="headerlink" title="Name字段"></a>Name字段</h3><p>Name 字段可以是任何有意义的名称，但不能超过 16 个字符（之后的内容将被截断）。该字段对 ESP32-S3 并不是特别重要。</p><h3 id="Type-字段"><a href="#Type-字段" class="headerlink" title="Type 字段"></a>Type 字段</h3><p>Type 字段可以指定为 app (0x00) 或者 data (0x01)，也可以直接使用数字 0-254（或者十六进制 0x00-0xFE）。注意，0x00-0x3F 不得使用（预留给 esp-idf 的核心功能）。</p><p><strong>注意：</strong>启动加载器将忽略 app (0x00) 和 data (0x01) 以外的其他分区类型。</p><h3 id="SubType-字段"><a href="#SubType-字段" class="headerlink" title="SubType 字段"></a>SubType 字段</h3><ul><li>当 Type 定义为 app 时，SubType 字段可以指定为 factory (0x00)、 ota_0 (0x10) … ota_15 (0x1F) 或者 test (0x20)。</li><li>当 Type 定义为 data 时，SubType 字段可以指定为 ota (0x00)、phy (0x01)、nvs (0x02)、nvs_keys (0x04) 或者其他组件特定的子类型</li></ul><h3 id="Offset-字段"><a href="#Offset-字段" class="headerlink" title="Offset 字段"></a>Offset 字段</h3><p>Offset（偏移地址） 为空时，则会紧跟着前一个分区之后开始；若为首个分区，则将紧跟着分区表开始。<br><strong>注意：</strong>app 分区的偏移地址必须要与 0x10000 (64K) 对齐</p><h3 id="Size-字段"><a href="#Size-字段" class="headerlink" title="Size 字段"></a>Size 字段</h3><p>分区的大小</p><h3 id="Flags字段"><a href="#Flags字段" class="headerlink" title="Flags字段"></a>Flags字段</h3><p>当前仅支持 encrypted 标记。如果 Flags 字段设置为 encrypted，且已启用 Flash 加密 功能，则该分区将会被加密。</p><p>详细见 <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/stable/esp32s3/api-guides/partition-tables.html">ESP-IDF 编程指南</a></p><p>配置完成后，在编译过程中会打印 分区配置表的信息，如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis"># ESP-IDF Partition Table</span></span></span><br><span class="line"><span class="strong"><span class="emphasis"># Name, Type, SubType, Offset, Size, Flags</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">nvs,data,nvs,0x9000,16K,</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">otadata,data,ota,0xd000,8K,</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">phy_init,data,phy,0xf000,4K,</span></span></span><br><span class="line"><span class="strong"><span class="emphasis">factory,app,factory,0x10000,4M,</span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">****</span><span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span></span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://baike.baidu.com/item/%E7%BC%93%E5%AD%98/100710?fr=aladdin">缓存</a><br><a href="https://baike.baidu.com/item/%E9%9A%8F%E6%9C%BA%E5%AD%98%E5%8F%96%E5%AD%98%E5%82%A8%E5%99%A8/4099402">随机存取存储器</a><br><a href="https://baike.baidu.com/item/%E5%8F%AA%E8%AF%BB%E5%AD%98%E5%82%A8%E5%99%A8/2399075">只读存储器</a><br><a href="https://baike.baidu.com/item/RF/3756791">RF</a><br><a href="https://baike.baidu.com/item/%E5%AE%9E%E6%97%B6%E6%97%B6%E9%92%9F/5563907">实时时钟</a></p><h1 id="扩大ESP32可用FLASH容量"><a href="#扩大ESP32可用FLASH容量" class="headerlink" title="扩大ESP32可用FLASH容量"></a>扩大ESP32可用FLASH容量</h1><h2 id="起因："><a href="#起因：" class="headerlink" title="起因："></a>起因：</h2><p>由于会用到蓝牙和WIFI以及HTTP OTA功能，导致需要的Flash会比较大。乐鑫原本的分区表是一个固件(factory)和两个OTA(ota_0,ota_1)，而固件(factory)分区是用来兜底的，但是这部分可以用ota_0或ota_1来作为兜底的功能分区。那么固件(factory)分区我们是可以删除，把这部分的flash长度平均到ota_0和ota_1，来扩大可编程flash空间。</p><h2 id="截取有用部分内容参考"><a href="#截取有用部分内容参考" class="headerlink" title="截取有用部分内容参考"></a>截取有用部分内容参考</h2><h3 id="检查容量是否正确"><a href="#检查容量是否正确" class="headerlink" title="检查容量是否正确"></a>检查容量是否正确</h3><p>我使用的是4MB，如果你们使用的是2MB，则要更改分区表ota_0和ota_1的长度和起始位置，<strong>注意ota_0的起始位置0x10000是不更改的</strong></p><img src="/posts/1906022834/8b121cd4a035478081a8968562afe95a.png" class="" title="img"><h3 id="添加并选中自定义分区表"><a href="#添加并选中自定义分区表" class="headerlink" title="添加并选中自定义分区表"></a>添加并选中自定义分区表</h3><p>在工程目录下添加partitions.csv文件，内容可以见红框内 </p><img src="/posts/1906022834/7cabf104ea114c328efec7e29feeb8c2.png" class="" title="img"><p>选中分区表，该作用为，编译阶段会使用你指向的CSV文件生成相应的 <strong>partitions.bin</strong> 文件</p><h1 id="解决ESP32的flash空间不足"><a href="#解决ESP32的flash空间不足" class="headerlink" title="解决ESP32的flash空间不足"></a>解决ESP32的flash空间不足</h1><p>esp32同时使用wifi和蓝牙时，通过编译会发现内存不够。</p><p><strong>编译结果：</strong></p><img src="/posts/1906022834/v2-a80f70cee2b66b656cd5a6735892fc91_720w.webp" class="" title="img"><p>该程序需要1404165bytes内存（1404165&#x2F;1024&#x2F;1024&#x3D;1.34mb），但是可用内存只有1310720bytes（1310720&#x2F;1024&#x2F;1024&#x3D;1.25mb），显然内存是不够的， 但是我们使用的esp-wroom-32的flash总共有4mb，那我们有没有办法增加用来存储程序的内存呢？答案是肯定的。</p><p>esp32内存中有一张分区表，将内存划分成几个不同的区域，用于存储不同的内容，我们只需要对这一张分区表进行修改就能实现我们的目的。</p><p>根据路径 C:\Users\pc.platformio\packages\framework-arduinoespressif32\tools\partitions，打开partitions文件，里面有很多excel表格，这些就是esp32的分区表（在下载platformio时自动下载的）。</p><img src="/posts/1906022834/v2-c1c5c13e035f71f68388b25176b6c2b6_720w.webp" class="" title="img"><p>其中default.csv就是默认的分区表，我们将其打开。</p><img src="/posts/1906022834/v2-61550a388b0ac54c57f7a6d61d329f32_720w.webp" class="" title="img"><p>这里用于存储程序的内存大小为0x140000&#x3D;1310720bytes,与目前编译环境下的内存相同。</p><img src="/posts/1906022834/v2-ba7aac69f6a4aa20df93fdd4b5f9be18_720w.webp" class="" title="img"><p>现在我们采用现存的另一分区表huge_app.csv,我们将其打开。</p><img src="/posts/1906022834/v2-3de683b3107e4a27dc05ac74d68a80cb_720w.webp" class="" title="img"><p>表中用于存储程序的内存为0x300000&#x3D;3145728bytes。</p><p>为了使用该分区表，我们打开paltformio.ini，在其中输入以下命令。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">board_build.partitions=huge_app.csv</span><br></pre></td></tr></table></figure><img src="/posts/1906022834/v2-d3eec08003f28fdac77bb87aad8d337f_720w.webp" class="" title="img"><p>其中命令monitor_speed&#x3D;115200是用于修改波特率的，命令upload_speed&#x3D;921600是用于修改下载速度的，大家可以根据需要使用，修改完成后我们进行编译。</p><img src="/posts/1906022834/v2-9ac5739c7d34f6e5d89132b4e2a6a367_720w.webp" class="" title="img"><p>此时内存变为我们刚才计算的数值3145728bytes（3145728&#x2F;1024&#x2F;1024&#x3D;3mb），此时内存已经绰绰有余了。</p><p>当然我们也可以根据自己的需要来修改分区表，复制一张默认分区表default.csv到工程文件中。</p><img src="/posts/1906022834/v2-af0e164dba3b803c34c970390d5ea244_720w.webp" class="" title="img"><p>将其文件名修改为mymenset.csv，在此处，我对该分区表进行了如下修改（大家可以根据需要自行修改）：</p><img src="/posts/1906022834/v2-64da297f15d7713e5a0663790e2e8943_720w.webp" class="" title="img"><p>此时内存应为0x180000&#x3D;1572864bytes，我们再在platformio.ini中进行对应修改。</p><img src="/posts/1906022834/v2-e5dc8c39f77b5729952e03528ba858cd_720w.webp" class="" title="img"><p>编译结果如下：</p><img src="/posts/1906022834/v2-bc6bcc6d9072284773d6ce1709eaca33_720w.webp" class="" title="img"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qingying00/article/details/88976309">ESP32编译的固件大于1M时, 更改分区列表</a></li><li><a href="https://github.com/espressif/esp-idf/issues/12588">Error: app partition is too small for binary (IDFGH-11454)</a></li><li><a href="https://www.cnblogs.com/jzcn/p/16790598.html">ESP32 分区表</a></li><li><a href="https://blog.csdn.net/qq_33591039/article/details/125154172">【笔记】ESP32修改分区表 – 扩大可编程FLASH容量</a></li><li><a href="https://zhuanlan.zhihu.com/p/591800066">解决ESP32的flash空间不足</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP32手动设置正确分区，以正确使用外部flash内存 ，app partition is too small for binary</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="flash" scheme="https://zml3589110.github.io/categories/flash/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="内存" scheme="https://zml3589110.github.io/tags/%E5%86%85%E5%AD%98/"/>
    
    <category term="flash" scheme="https://zml3589110.github.io/tags/flash/"/>
    
    <category term="固件大于1M" scheme="https://zml3589110.github.io/tags/%E5%9B%BA%E4%BB%B6%E5%A4%A7%E4%BA%8E1M/"/>
    
  </entry>
  
  <entry>
    <title>ESP32使用SPI总线驱动LCD</title>
    <link href="https://zml3589110.github.io/posts/1827825660.html"/>
    <id>https://zml3589110.github.io/posts/1827825660.html</id>
    <published>2024-07-18T02:34:20.000Z</published>
    <updated>2024-07-18T03:45:43.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ST7789液晶屏开发"><a href="#ST7789液晶屏开发" class="headerlink" title="ST7789液晶屏开发"></a>ST7789液晶屏开发</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在前言里面我想告诉你一些在对一款新的处理器的学习中，我们会遇到的那些错误，并且我相信这绝对不会是我一个人会出现的问题，出现这种问题首先原因是处理器的教程不够全面，没有像stm32一样一套保姆级别的教程能够一点一点引导着大家去学习，第二个原因就是esp32更新版本很快，导致一些教程会因为大版本的更新而不能使用。这里我就想站在初学者的角度来进行一番探索，也希望大家看完我出错的的过程后能够有所启发。</p><h2 id="初次尝试"><a href="#初次尝试" class="headerlink" title="初次尝试"></a>初次尝试</h2><p>在学习一款处理器的过程中，如何连接外设，配置外设接口并且成功驱动外设是非常重要的，经过前面的学习，我们结合其他处理器的学习经验，例如stm32，再结合乐鑫官方的教程和示例工程，其实是很容易就能控制一些常规的GPIO口，USART，I2C接口的外设或者通信。</p><p> 但是在我学习到LCD屏幕时，却遇到了很大的阻碍，和往常一样，在我准备配置这块1.3寸的驱动为st7789的屏幕时，我照例打开乐鑫官方的编程指南<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/index.html">ESP-IDF 编程指南 - ESP32 - — ESP-IDF 编程指南 latest 文档 (espressif.com)</a>。</p><p>找到API参考，外设API，进而找到LCD这个目录，然后我就发现没有中文，这种情况我已经不是第一次遇到了，所以我很熟练的进行手册的版本切换，从原来的master版切换到v5.1.3版本，切换完成后我就看到它上面提示到最新稳定版是v5.2.1，所以我就又点击它切换到5.2.1版本。但是令人失望的是依旧没有出现我们想要的中文。那么我就明白了这一个说明大概率是没有中文的，但是没关系，英文版本我们一样看得懂，毕竟现在互联网这么发达，找到一个翻译实在是太容易了。</p><img src="/posts/1827825660/dd1e1868604f49c2854c1d7009017cc3.png" class="" title="img"><p><strong>首先映入眼帘的就是功能概述了，我从中提取到三个关键信息</strong></p><img src="/posts/1827825660/468568ea80d64db1b547a29ef878a501.png" class="" title="img"><ol><li>乐鑫提供了开箱即用的LCD驱动程序</li><li>有安装驱动程序的步骤</li><li>有控制LCD IO的API</li></ol><p>我这一看这不是妥了吗，基本上和之前GPIO，USART，I2C一样，按着官方的教程一步一步来，应该很轻松就能把这个屏幕初始化完成。殊不知这才是噩梦的开始。</p><h2 id="并没有找到驱动"><a href="#并没有找到驱动" class="headerlink" title="并没有找到驱动"></a>并没有找到驱动</h2><p>首先是即使乐鑫官方明说了有st7789的驱动程序，我也没有在乐鑫组件注册表中找到它，上面所提到的两款驱动，st7789和ssd1306，我只能搜索到ssd1306的驱动组件。但是这也无伤大雅，驱动组件中无非是定义着一些有关驱动的参数罢了，相关参数我们完全可以按照stm32开发时的流程，直接在st7789驱动的数据手册里面或者是商家给的驱动说明里面提取即可。</p><h2 id="初次尝试安装SPI-LCD-IO-驱动程序"><a href="#初次尝试安装SPI-LCD-IO-驱动程序" class="headerlink" title="初次尝试安装SPI LCD IO 驱动程序"></a>初次尝试安装SPI LCD IO 驱动程序</h2><p>然后就是去点击<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/api-reference/peripherals/lcd.html#spi-lcd-panel">SPI Interfaced LCD</a>链接进入安装SPI LCD IO 驱动程序然后获取面板句柄的步骤的页面，实际上这些内容就在下面，直接向下滚动就能够看到。</p><img src="/posts/1827825660/631a4fc290534e5d81e3d808f48e3617.png" class="" title="img"><img src="/posts/1827825660/084feadae0f1487593da11e225544202.png" class="" title="img"><img src="/posts/1827825660/7f412e5074f343d1abb0b4c4531c9a16.png" class="" title="img"><p>我这一看，嚯，一二三步骤都标好了，这不就是我最需要的吗，当时我心里还在想，乐鑫官方是真的贴心啊，学习成本大大降低了，之后就是我按照上面的三个步骤，进行我的SPI配置，先创建SPI总线，然后从 SPI 总线分配 LCD IO 设备句柄，最后就是安装液晶屏控制器驱动程序，一切都是那么的水到渠成。</p><h2 id="初次使用控制LCD-IO的API"><a href="#初次使用控制LCD-IO的API" class="headerlink" title="初次使用控制LCD IO的API"></a>初次使用控制LCD IO的API</h2><p> 依旧是点击<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/v5.2.1/esp32/api-reference/peripherals/lcd.html#lcd-panel-operations">LCD 面板 IO 操作</a> 链接，转到下图界面</p><img src="/posts/1827825660/f15c81856f9a46c692785fef6b1870ed.png" class="" title="img"><p>然后我选择了这三个看起来有用的初始化函数，进行一一调用。但是当我调用完成以后，我迷茫了，是的跟着手册一路配置加初始化到这里我不知道我该干什么了，按理说我们现在已经初始化完成了SPI和LCD的相关配置，接着就是收发数据了，但是我完全不知道该如何向LCD屏中发送数据，而手册中唯一和发送数据相关的就是esp_lcd_panel_draw_bitmap()函数，这个函数是将用户提供的颜色缓冲区绘制到LCD屏幕上。</p><p>当时我没有感觉到又哪里不对，心里想的是这不就是个画点函数，有了画点函数我不随便编写其他的绘画函数。所以当时我选择了先编译一下程序看看，一方面是想看初始化完成后到底是个什么情况，另一方面也是要确定我的程序确实没有问题能够运行起来。</p><p>很成功，在解决了编译时出现的小问题后，程序编译成功并且也烧录成功了，但是屏幕这个时候并没有点亮。在了解到初始化完成后屏幕也不会点亮，必须手动填充色块的相关情况后，我决定使用esp_lcd_panel_draw_bitmap()这个函数来试着填充一下屏幕区域，但是这时候我发现了另外的问题，虽然这个函数的参数和画点函数比较相似，都是传递起始坐标和结束坐标，另外就是传递一个颜色指针。但是我如果想填满整个屏幕，我就需要定义一个240x240大小的数组，并且我还要给他填充数据，这也太傻鸟了吧，我在心里忍不住吐槽。于是我就想着只填充几行看看效果就行，定义了一个20x20的数组，将数组的地址传递进去之后，按照它这函数的作用，应该是会显示一个小方块，不过经过我重新烧录验证，屏幕依旧是是没有任何反应。20的数组，将数组的地址传递进去之后，按照它这函数的作用，应该是会显示一个小方块，不过经过我重新烧录验证，屏幕依旧是是没有任何反应。</p><p>到这里我就开始怀疑我的程序到底是不是有问题了，于是我不再局限于官方的编程手册，转而到网络上搜索相关的教程，事实证明我这一步决策是十分正确的，网上的相关教程确实补充了我之前根据官方编程手册的一些不足之处（实际上也是官方的另外的教程罢了）。</p><h2 id="二次尝试"><a href="#二次尝试" class="headerlink" title="二次尝试"></a>二次尝试</h2><p>由于大部分人使用esp32做项目都是用Arduino这个开发环境，所以我在搜索教程时也遇到了一定困难，中间具体的搜索过程我就不细说了，直接讲最后的搜索结果，我在bilibili上找到了一个用esp-idf移植驱动一块触摸屏的教程，起初一段我觉得这个教程讲的十分的详细，所以第二次我就完全按照这个教程来进行学习<a href="https://www.bilibili.com/video/BV1Yc411y7bb/?spm_id_from=333.999.0.0&vd_source=ba7ed6e0e74823b6b98addc6136682c2">ESP32-S3 开发 SPI 屏【DIY 智能手表】_哔哩哔哩_bilibili</a>。</p><p>依照这个教程，我们再次找到了另外的LCD官方教程<a href="https://docs.espressif.com/projects/esp-iot-solution/zh_CN/latest/display/lcd/spi_lcd.html#id3">SPI LCD 详解 - - — ESP-IoT-Solution latest 文档 (espressif.com)</a>， 这次的教程相比之前详细了不少，经过阅读这篇教程（视频前面上其实也是参考了这个教程），我发现我在第一次尝试的时候没有初始化SPI总线 ，也没有配置LCD 驱动 IC 的初始化命令及参数。</p><img src="/posts/1827825660/4cc1efee5ecc4d2b8ffa3ea096b05deb.png" class="" title="img"><p>所以根据视频上的流程，我对之前的代码进行了更改，最后呈现出一下状态，由于我没有使用官方的驱动配置头文件，没有想视频中一样修改一下其他同类型的驱动头文件，所以关于驱动头文件里面声明的结构体我直接放在了我自己的头文件当中：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bsp_spi_lcd.h&quot;</span></span></span><br><span class="line"><span class="comment">// static const char BACK_COLOR[240][240] ;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> *TAG = <span class="string">&quot;st7789-example&quot;</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">st7789_lcd_init_cmd_t</span> lcd_init_cmds [] =&#123;</span><br><span class="line">    <span class="comment">/* &#123;cmd, &#123; data &#125;, data_size, delay_ms&#125; &quot;*/</span></span><br><span class="line">    <span class="comment">// &#123;0x36, (uint8_t [])&#123;0x00&#125;, 1, 0&#125;,</span></span><br><span class="line">    <span class="comment">// &#123;0x3A, (uint8_t [])&#123;0x05&#125;, 1, 0&#125;,</span></span><br><span class="line">    &#123;<span class="number">0xB2</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x0C</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x33</span>,<span class="number">0x33</span>&#125;, <span class="number">5</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xB7</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x35</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xBB</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x19</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xC0</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x2C</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xC2</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x01</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xC3</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x12</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xC4</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x20</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xC6</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x0F</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xD0</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0xA4</span>,<span class="number">0xA1</span>&#125;, <span class="number">2</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xE0</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0xD0</span>,<span class="number">0x04</span>,<span class="number">0x0D</span>,<span class="number">0x11</span>,<span class="number">0x13</span>,<span class="number">0x2B</span>,<span class="number">0x3F</span>,<span class="number">0x54</span>,<span class="number">0x4C</span>,<span class="number">0x18</span>,<span class="number">0x0D</span>,<span class="number">0x0B</span>,<span class="number">0x1F</span>,<span class="number">0x23</span>&#125;, <span class="number">14</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0xE1</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0xD0</span>,<span class="number">0x04</span>,<span class="number">0x0C</span>,<span class="number">0x11</span>,<span class="number">0x13</span>,<span class="number">0x2C</span>,<span class="number">0x3F</span>,<span class="number">0x44</span>,<span class="number">0x51</span>,<span class="number">0x2F</span>,<span class="number">0x1F</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x23</span>&#125;, <span class="number">14</span>, <span class="number">0</span>&#125;,</span><br><span class="line"> </span><br><span class="line">    &#123;<span class="number">0x21</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x00</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0x11</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x00</span>&#125;, <span class="number">1</span>, <span class="number">120</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0x29</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x00</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0x2A</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x00</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0x2B</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x00</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0x2C</span>, (<span class="keyword">uint8_t</span> [])&#123;<span class="number">0x00</span>&#125;, <span class="number">1</span>, <span class="number">0</span>&#125;,</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//初始化接口设备</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Lcd_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">esp_lcd_panel_io_handle_t</span> io_handle = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">esp_lcd_panel_handle_t</span> panel_handle = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="comment">// static lv_disp_draw_buf_t disp_buf;</span></span><br><span class="line">    <span class="comment">// static lv_disp_drv_t disp_drv;</span></span><br><span class="line"> </span><br><span class="line">     <span class="comment">/***************************************** 1.初始化总线 **************************************************/</span></span><br><span class="line">    ESP_LOGI(TAG, <span class="string">&quot;Initialize SPI bus&quot;</span>);</span><br><span class="line">    <span class="keyword">spi_bus_config_t</span> buscfg = &#123;</span><br><span class="line">        .sclk_io_num = PIN_NUM_CLK,   <span class="comment">// 连接 LCD SCK（SCL） 信号的 IO 编号</span></span><br><span class="line">        .mosi_io_num = PIN_NUM_MOSI,  <span class="comment">// 连接 LCD MOSI（SDO、SDA） 信号的 IO 编号</span></span><br><span class="line">        .miso_io_num = <span class="number">-1</span>,  <span class="comment">// 连接 LCD MISO（SDI） 信号的 IO 编号，如果不需要从 LCD 读取数据，可以设为 `-1`</span></span><br><span class="line">        .quadwp_io_num = <span class="number">-1</span>,          <span class="comment">// 必须设置且为 `-1`</span></span><br><span class="line">        .quadhd_io_num = <span class="number">-1</span>,          <span class="comment">// 必须设置且为 `-1`</span></span><br><span class="line">        .max_transfer_sz = LCD_H_RES * LCD_W_RES * <span class="keyword">sizeof</span>(<span class="keyword">uint16_t</span>), <span class="comment">// 表示 SPI 单次传输允许的最大字节数上限，通常设为全屏大小即可</span></span><br><span class="line">    &#125;;</span><br><span class="line">    ESP_ERROR_CHECK(spi_bus_initialize(SPI3_HOST, &amp;buscfg, SPI_DMA_CH_AUTO));</span><br><span class="line">                                          <span class="comment">// 第 1 个参数表示使用的 SPI 主机 ID，和后续创建接口设备时保持一致</span></span><br><span class="line">                                          <span class="comment">// 第 3 个参数表示使用的 DMA 通道号，默认设置为 `SPI_DMA_CH_AUTO` 即可</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/****************************************** 2.创建接口设备 **************************************************/</span></span><br><span class="line">    ESP_LOGI(TAG, <span class="string">&quot;Install panel IO&quot;</span>);</span><br><span class="line">    <span class="keyword">esp_lcd_panel_io_spi_config_t</span> io_config = &#123;</span><br><span class="line">        .dc_gpio_num = PIN_NUM_DC,</span><br><span class="line">        .cs_gpio_num = <span class="number">-1</span>,       <span class="comment">// 连接 LCD CS 信号的 IO 编号，可以设为 `-1` 表示不使用</span></span><br><span class="line">        .pclk_hz = LCD_PIXEL_CLOCK_HZ,           <span class="comment">//Clock out at 20 MHz</span></span><br><span class="line">        .lcd_cmd_bits = LCD_CMD_BITS,       <span class="comment">// 单位 LCD 命令的比特数，应为 8 的整数倍</span></span><br><span class="line">        .lcd_param_bits = LCD_PARAM_BITS,   <span class="comment">// 单位 LCD 参数的比特数，应为 8 的整数倍</span></span><br><span class="line">        .spi_mode = <span class="number">3</span>,         <span class="comment">// SPI 模式（0-3），需根据 LCD 驱动 IC 的数据手册以及硬件的配置确定（如 IM[3:0]）</span></span><br><span class="line">        .trans_queue_depth = <span class="number">10</span>,        <span class="comment">// SPI 设备传输数据的队列深度，一般设为 10 即可</span></span><br><span class="line">        <span class="comment">// .on_color_trans_done = example_notify_lvgl_flush_ready,   // 单次调用 `esp_lcd_panel_draw_bitmap()` 传输完成后的回调函数</span></span><br><span class="line">        <span class="comment">// .user_ctx = &amp;disp_drv,</span></span><br><span class="line">        .flags = &#123;            <span class="comment">// 以下为 SPI 时序的相关参数，需根据 LCD 驱动 IC 的数据手册以及硬件的配置确定</span></span><br><span class="line">            .sio_mode = <span class="number">0</span>,    <span class="comment">// 通过一根数据线（MOSI）读写数据，0: Interface I 型，1: Interface II 型</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// Attach the LCD to the SPI bus</span></span><br><span class="line">    ESP_ERROR_CHECK(esp_lcd_new_panel_io_spi((<span class="keyword">esp_lcd_spi_bus_handle_t</span>)SPI3_HOST, &amp;io_config, &amp;io_handle));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/***************************************** 3.创建 LCD 设备 ***************************************************/</span></span><br><span class="line">    ESP_LOGI(TAG, <span class="string">&quot;Install ST7789 panel driver&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">st7789_vendor_config_t</span> vendor_config = &#123;  <span class="comment">// 用于替换驱动组件中的初始化命令及参数</span></span><br><span class="line">        .init_cmds = lcd_init_cmds,</span><br><span class="line">        .init_cmds_size = <span class="keyword">sizeof</span>(lcd_init_cmds) / <span class="keyword">sizeof</span>(<span class="keyword">st7789_lcd_init_cmd_t</span>),</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">esp_lcd_panel_dev_config_t</span> panel_config = &#123;</span><br><span class="line">        .reset_gpio_num = PIN_NUM_RES,    <span class="comment">// 连接 LCD 复位信号的 IO 编号，可以设为 `-1` 表示不使用</span></span><br><span class="line">        .rgb_ele_order = LCD_RGB_ELEMENT_ORDER_RGB,   <span class="comment">// 像素色彩的元素顺序（RGB/BGR），</span></span><br><span class="line">                                                    <span class="comment">//  一般通过命令 `LCD_CMD_MADCTL（36h）` 控制</span></span><br><span class="line">        .bits_per_pixel = <span class="number">16</span>,  <span class="comment">// 色彩格式的位数（RGB565：16，RGB666：18），</span></span><br><span class="line">                                                    <span class="comment">// 一般通过命令 `LCD_CMD_COLMOD（3Ah）` 控制</span></span><br><span class="line">        .vendor_config = &amp;vendor_config,           <span class="comment">// 用于替换驱动组件中的初始化命令及参数</span></span><br><span class="line">    &#125;;</span><br><span class="line">    ESP_ERROR_CHECK(esp_lcd_new_panel_st7789(io_handle, &amp;panel_config, &amp;panel_handle));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/****************************************** 4.初始化 LCD 设备 *************************************************/</span></span><br><span class="line">    ESP_ERROR_CHECK(esp_lcd_panel_reset(panel_handle));</span><br><span class="line">    ESP_ERROR_CHECK(esp_lcd_panel_init(panel_handle));</span><br><span class="line">    ESP_ERROR_CHECK(esp_lcd_panel_disp_on_off(panel_handle, <span class="literal">true</span>));</span><br><span class="line">    <span class="comment">// esp_lcd_panel_draw_bitmap(panel_handle,0,0,240,240,BACK_COLOR);</span></span><br></pre></td></tr></table></figure><p>当我完成上述代码后，由于视频中是触摸屏，并且还要移植LVGL图形界面，但是我现在还不想一步到位，我只想先实现屏幕能够点亮，能够显示静态的文字跟图片，所以视频后面关于配置触屏I2C以及LVGL的移植代码我就并没有添加。</p><p>到了这一步应该是配置已经事无巨细了，可实际当我满怀信息的去烧录完成等着屏幕点亮，却让我异常失望，屏幕并没有亮，这不禁让我怀疑我的屏是不是有问题。这个想法一下子就让我闻到了成功的气息，而问题的转折点也就出现在这里。</p><h2 id="最终尝试"><a href="#最终尝试" class="headerlink" title="最终尝试"></a>最终尝试</h2><p>为了测试我的屏幕是否有问题，我使用了商家给的代码，并且把代码移植到我自己的F103C8T6程序上，结果是能够使用商家的程序成功点亮这块屏幕，看着keil中熟悉的代码，然后我就有了新的想法，我们不要使用乐鑫教程中普遍使用的官方的配置函数，而是自己通过SPI总线向stm32中一样配置发送命令，发送数据的函数，然后所有的流程都严格依照32中的流程进行，这样不就能够可行了吗。</p><p><strong>所以我最后抛弃掉了所有的教程，开始了自己对32控制lcd屏幕的流程的完全移植，到了最后我重要是功夫不负有心人，在第一次尝试后的第二天完成了屏幕点亮。</strong></p><h1 id="正片"><a href="#正片" class="headerlink" title="正片"></a>正片</h1><h2 id="配置SPI控制器"><a href="#配置SPI控制器" class="headerlink" title="配置SPI控制器"></a>配置SPI控制器</h2><p>由于屏幕使用了SPI协议进行通信，那么我们点亮屏幕的第一步就是配置SPI，这一段在我们之前尝试的时候都有提到，我把代码放在这里，相信大家看到代码后就能理解这一环节到底在做些什么：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PIN_NUM_MISO -1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PIN_NUM_MOSI 23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PIN_NUM_CLK  18</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PIN_NUM_CS   -1</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">vspi_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">spi_device_handle_t</span> spi;    <span class="comment">//创建spi</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">spi_bus_config_t</span> buscfg=&#123;   <span class="comment">//spi定义</span></span><br><span class="line">    .miso_io_num=PIN_NUM_MISO, </span><br><span class="line">    .mosi_io_num=PIN_NUM_MOSI,</span><br><span class="line">    .sclk_io_num=PIN_NUM_CLK,</span><br><span class="line">    .quadwp_io_num=<span class="number">-1</span>,</span><br><span class="line">    .quadhd_io_num=<span class="number">-1</span>,</span><br><span class="line">    .max_transfer_sz=<span class="number">4092</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">spi_device_interface_config_t</span> devcfg = &#123;</span><br><span class="line">    .clock_speed_hz = SPI_MASTER_FREQ_40M,</span><br><span class="line">    .mode = <span class="number">3</span>,</span><br><span class="line">    .spics_io_num   = PIN_NUM_CS,</span><br><span class="line">    .queue_size = <span class="number">7</span></span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">vspi_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    spi_bus_initialize(SPI3_HOST,&amp;buscfg,SPI_DMA_CH_AUTO);</span><br><span class="line">    spi_bus_add_device(SPI3_HOST, &amp;devcfg, &amp;spi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我稍微解释一下，大家可以看到我PIN_NUM_CS和PIN_NUM_MISO都定义为了-1，这是因为我们这块屏幕并没有使用这两根线，所以给-1表示不使用此功能。</p><h2 id="编写LCD屏幕初始化函数"><a href="#编写LCD屏幕初始化函数" class="headerlink" title="编写LCD屏幕初始化函数"></a>编写LCD屏幕初始化函数</h2><h3 id="LCD-Init"><a href="#LCD-Init" class="headerlink" title="LCD_Init"></a>LCD_Init</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*st7789*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    esp_rom_gpio_pad_select_gpio(LCD_RES);   <span class="comment">//gpio_pad_select_gpio(LCD_RES)之前</span></span><br><span class="line">    esp_rom_gpio_pad_select_gpio(LCD_DC);   <span class="comment">//gpio_pad_select_gpio(LCD_DC)</span></span><br><span class="line">    gpio_set_direction(LCD_RES,GPIO_MODE_OUTPUT);    <span class="comment">//设置io22为输出模式</span></span><br><span class="line">    gpio_set_direction(LCD_DC,GPIO_MODE_OUTPUT);    <span class="comment">//设置io21为输出模式</span></span><br><span class="line"> </span><br><span class="line">vspi_init();</span><br><span class="line">LCD_RES_CLR();</span><br><span class="line">DELAY(<span class="number">20</span>);</span><br><span class="line">LCD_RES_SET();</span><br><span class="line">DELAY(<span class="number">20</span>);</span><br><span class="line"><span class="comment">//BLK_OFF();</span></span><br><span class="line"><span class="comment">// DELAY(100);</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// LCD_WR_REG(0x11); </span></span><br><span class="line"><span class="comment">// DELAY(120);</span></span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0x36</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0xc0</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x3A</span>); </span><br><span class="line">LCD_WR_DATA8(<span class="number">0x05</span>);</span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xB2</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x0C</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x0C</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x00</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x33</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x33</span>); </span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xB7</span>); </span><br><span class="line">LCD_WR_DATA8(<span class="number">0x35</span>);  </span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xBB</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x19</span>);</span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xC0</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x2C</span>);</span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xC2</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x01</span>);</span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xC3</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x12</span>);   </span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xC4</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x20</span>);  </span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xC6</span>); </span><br><span class="line">LCD_WR_DATA8(<span class="number">0x0F</span>);    </span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xD0</span>); </span><br><span class="line">LCD_WR_DATA8(<span class="number">0xA4</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0xA1</span>);</span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xE0</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0xD0</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x04</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x0D</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x11</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x13</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x2B</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x3F</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x54</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x4C</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x18</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x0D</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x0B</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x1F</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x23</span>);</span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0xE1</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0xD0</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x04</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x0C</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x11</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x13</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x2C</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x3F</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x44</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x51</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x2F</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x1F</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x1F</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x20</span>);</span><br><span class="line">LCD_WR_DATA8(<span class="number">0x23</span>);</span><br><span class="line"> </span><br><span class="line">LCD_WR_REG(<span class="number">0x21</span>); </span><br><span class="line">LCD_WR_REG(<span class="number">0x11</span>);</span><br><span class="line">LCD_WR_REG(<span class="number">0x29</span>);</span><br><span class="line"> </span><br><span class="line">LCD_Clear(<span class="number">0xFFFF</span>);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一步就是初始化LCD的最关键的步骤，就是发送命令配置屏幕的参数，这一部分基本上就是参考购买屏幕的商家给的示例程序来进行配置</p><p>可以看到我们在初始化的时候用到了发送命令和发送8位数据的函数，这需要我们自己编写，我这里的所有步骤都是基于对stm32的完全模仿，而且这也是我们初学esp32的最好方式，不要一上来就想着使用官方所提供好的功能函数，因为很可能你根本就搞不明白这些功能函数的到底有什么用处。</p><h3 id="LCD-WR-GER"><a href="#LCD-WR-GER" class="headerlink" title="LCD_WR_GER"></a>LCD_WR_GER</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_WR_REG</span><span class="params">(<span class="keyword">uint8_t</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LCD_DC_CLR();<span class="comment">//写命令</span></span><br><span class="line">lcd_cmd(dat);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="LCD-WR-DATA8"><a href="#LCD-WR-DATA8" class="headerlink" title="LCD_WR_DATA8"></a>LCD_WR_DATA8</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_WR_DATA8</span><span class="params">(<span class="keyword">uint8_t</span> dat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LCD_DC_SET();<span class="comment">//写数据</span></span><br><span class="line">lcd_cmd(dat);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="lcd-cmd"><a href="#lcd-cmd" class="headerlink" title="lcd_cmd"></a>lcd_cmd</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lcd_cmd</span><span class="params">(<span class="keyword">const</span> <span class="keyword">uint8_t</span> cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">esp_err_t</span> ret;</span><br><span class="line">    <span class="keyword">spi_transaction_t</span> t;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;t, <span class="number">0</span>, <span class="keyword">sizeof</span>(t));       <span class="comment">//Zero out the transaction</span></span><br><span class="line">    t.length=<span class="number">8</span>;                     <span class="comment">//Command is 8 bits</span></span><br><span class="line">    t.tx_buffer=&amp;cmd;               <span class="comment">//The data is the cmd itself</span></span><br><span class="line">    t.user=(<span class="keyword">void</span>*)<span class="number">0</span>;                <span class="comment">//D/C needs to be set to 0</span></span><br><span class="line">    ret=spi_device_polling_transmit(spi, &amp;t);  <span class="comment">//Transmit!</span></span><br><span class="line">    assert(ret==ESP_OK);            <span class="comment">//Should have had no issues.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面我们就是要解决最后第一个问题了，可以看到的是，我在LCD_Init中最后使用了一个清屏函数，只要我们想办法编写这个刷白函数，就能点亮屏幕，实现全屏颜色显示，而且在上面我们已经编写过传输8位指令或者数据的一个函数lcd_cmd，我们要使用这个函数的话就要循环调用240<em>240</em>2次lcd_cmd函数，这样做可以是可以但是有点拖拉，所以在这个函数的基础上，我们可以编写一个一次能够传送指定数据大小的函数:</p><h4 id="LCD-data-x"><a href="#LCD-data-x" class="headerlink" title="LCD_data_x"></a>LCD_data_x</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_data_x</span><span class="params">(<span class="keyword">uint16_t</span> *dat,<span class="keyword">uint32_t</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">spi_transaction_t</span> t;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;t, <span class="number">0</span>, <span class="keyword">sizeof</span>(t));       <span class="comment">//Zero out the transaction</span></span><br><span class="line">    t.length=len;                     <span class="comment">//Command is 8 bits</span></span><br><span class="line">    t.tx_buffer=dat;               <span class="comment">//The data is the cmd itself</span></span><br><span class="line">    t.user=(<span class="keyword">void</span>*)<span class="number">0</span>;                <span class="comment">//D/C needs to be set to 0</span></span><br><span class="line">    <span class="keyword">esp_err_t</span> ret=spi_device_polling_transmit(spi, &amp;t);  <span class="comment">//Transmit!</span></span><br><span class="line">    assert(ret==ESP_OK);            <span class="comment">//Should have had no issues.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有了这个函数，我们在编写清屏函数时就不用调用如此之多的lcd_cmd了，下面就是我对清屏函数的实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LCD_Clear</span><span class="params">(<span class="keyword">uint16_t</span> Color)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LCD_Address_Set(<span class="number">0</span>,<span class="number">0</span>,LCD_W<span class="number">-1</span>,LCD_H<span class="number">-1</span>);</span><br><span class="line">LCD_DC_SET();<span class="comment">//写数据</span></span><br><span class="line"><span class="keyword">uint16_t</span> color_temp[<span class="number">240</span>*<span class="number">2</span>];</span><br><span class="line"><span class="built_in">memset</span>(color_temp, Color, <span class="keyword">sizeof</span>(color_temp));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">uint16_t</span> i=<span class="number">0</span>;i&lt;LCD_W/<span class="number">2</span>;i++)&#123;</span><br><span class="line"> LCD_data_x(color_temp,<span class="number">240</span>*<span class="number">16</span>*<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现在清屏函数中我一次传输了两行的颜色数据，所以for循环中我只需要循环二分之一的屏幕宽度次就可以了，这样的操作相比于一次传输半个颜色数据在输出效率上会高一些，因为我们使用的16位颜色，但是之前的函数一次才传递8位，意味着我们一个颜色数据就要传输两次才能传输成功，现在这样就显然合理了很多。</p><p><strong>上面的函数里面我们用到了许多宏，这些我都把它放在了头文件中，在下面放出供大家参考使用：</strong></p><h4 id="LCD-Init-h"><a href="#LCD-Init-h" class="headerlink" title="LCD_Init.h"></a>LCD_Init.h</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_W 240</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_H 240</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_RES GPIO_NUM_22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_DC  GPIO_NUM_21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_BLK GPIO_NUM_12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLK_ON()    gpio_set_level(LCD_BLK,1);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLK_OFF()   gpio_set_level(LCD_BLK,0);</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_SCL_SET() gpio_set_level(LCD_SCL,1);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_SCL_CLR() gpio_set_level(LCD_SCL,0);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_SDA_SET() gpio_set_level(LCD_SDA,1);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_SDA_CLR() gpio_set_level(LCD_SDA,0);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_CS_SET() gpio_set_level(LCD_CS,1);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_CS_CLR() gpio_set_level(LCD_CS,0);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_RES_SET() gpio_set_level(LCD_RES,1);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_RES_CLR() gpio_set_level(LCD_RES,0);</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_DC_SET() gpio_set_level(LCD_DC,1);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_DC_CLR() gpio_set_level(LCD_DC,0);</span></span><br></pre></td></tr></table></figure><p>至此，大家可以在主函数中尽情的调用LCD_Init函数来对屏幕进行初始化了，相信初始化完成后，你们也能成功点亮自己LCD屏。</p><h2 id="基于-ESP32-的-LCD-模块（ST7789）开发"><a href="#基于-ESP32-的-LCD-模块（ST7789）开发" class="headerlink" title="基于 ESP32 的 LCD 模块（ST7789）开发"></a>基于 ESP32 的 LCD 模块（ST7789）开发</h2><img src="/posts/1827825660/image-20240718105130913.png" class="" title="image-20240718105130913"><h3 id="初始化命令"><a href="#初始化命令" class="headerlink" title="初始化命令"></a>初始化命令</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">DRAM_ATTR <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> LCD_ORIENTATION_VALUES[]=&#123;</span><br><span class="line">    <span class="number">0x00</span>,   <span class="comment">// PORTRAIT</span></span><br><span class="line">    <span class="number">0xC0</span>,   <span class="comment">// PORTRAIT_INVERTED</span></span><br><span class="line">    <span class="number">0x70</span>,   <span class="comment">// LANDSCAPE</span></span><br><span class="line">    <span class="number">0xA0</span>    <span class="comment">// LANDSCAPE_INVERTED</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> *LCD_ORIENTATION_TAGS[]=&#123;</span><br><span class="line">    <span class="string">&quot;PORTRAIT&quot;</span>,           <span class="comment">// 纵向</span></span><br><span class="line">    <span class="string">&quot;PORTRAIT_INVERTED&quot;</span>,  <span class="comment">// 纵向（颠倒）</span></span><br><span class="line">    <span class="string">&quot;LANDSCAPE&quot;</span>,          <span class="comment">// 横向</span></span><br><span class="line">    <span class="string">&quot;LANDSCAPE_INVERTED&quot;</span>  <span class="comment">// 横向（颠倒）</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_WIDTH       240 <span class="comment">// LCD 宽度像素</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LCD_HEIGHT      240 <span class="comment">// LCD 高度像素</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  VIEW_ORIENTATION   0 <span class="comment">// LCD 方向 取值范围 0-3</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">uint8_t</span> cmd;</span><br><span class="line">    <span class="keyword">uint8_t</span> data[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">uint8_t</span> databytes;</span><br><span class="line">&#125; <span class="keyword">lcd_init_cmd_t</span>;</span><br><span class="line"></span><br><span class="line">DRAM_ATTR <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">lcd_init_cmd_t</span> LCD_INIT_CMDS[]=&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    &#123;<span class="number">0x36</span>, &#123;LCD_ORIENTATION_VALUES[VIEW_ORIENTATION]&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* Interface Pixel Format, 16bits/pixel for RGB/MCU interface */</span></span><br><span class="line">    &#123;<span class="number">0x3A</span>, &#123;<span class="number">0x05</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* Porch Setting */</span></span><br><span class="line">    &#123;<span class="number">0xB2</span>, &#123;<span class="number">0x0c</span>, <span class="number">0x0c</span>, <span class="number">0x00</span>, <span class="number">0x33</span>, <span class="number">0x33</span>&#125;, <span class="number">5</span>&#125;,</span><br><span class="line">    <span class="comment">/* Gate Control, Vgh=13.65V, Vgl=-10.43V */</span></span><br><span class="line">    &#123;<span class="number">0xB7</span>, &#123;<span class="number">0x35</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* VCOM Setting, VCOM=1.35V */</span></span><br><span class="line">    &#123;<span class="number">0xBB</span>, &#123;<span class="number">0x32</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* VDV and VRH Command Enable, enable=1 */</span></span><br><span class="line">    &#123;<span class="number">0xC2</span>, &#123;<span class="number">0x01</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* VRH Set, Vap=4.4+... */</span></span><br><span class="line">    &#123;<span class="number">0xC3</span>, &#123;<span class="number">0x15</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* VDV Set, VDV=0 */</span></span><br><span class="line">    &#123;<span class="number">0xC4</span>, &#123;<span class="number">0x20</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* Frame Rate Control, 60Hz, inversion=0 */</span></span><br><span class="line">    &#123;<span class="number">0xC6</span>, &#123;<span class="number">0x0f</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* Power Control 1, AVDD=6.8V, AVCL=-4.8V, VDDS=2.3V */</span></span><br><span class="line">    &#123;<span class="number">0xD0</span>, &#123;<span class="number">0xA4</span>, <span class="number">0xA1</span>&#125;, <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="comment">/* Positive Voltage Gamma Control */</span></span><br><span class="line">    &#123;<span class="number">0xE0</span>, &#123;<span class="number">0xD0</span>,<span class="number">0x08</span>,<span class="number">0x0E</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x05</span>,<span class="number">0x31</span>,<span class="number">0x33</span>,<span class="number">0x48</span>,<span class="number">0x17</span>,<span class="number">0x14</span>,<span class="number">0x15</span>,<span class="number">0x31</span>,<span class="number">0x34</span>&#125;, <span class="number">14</span>&#125;,</span><br><span class="line">    <span class="comment">/* Negative Voltage Gamma Control */</span></span><br><span class="line">    &#123;<span class="number">0xE1</span>, &#123;<span class="number">0xD0</span>,<span class="number">0x08</span>,<span class="number">0x0E</span>,<span class="number">0x09</span>,<span class="number">0x09</span>,<span class="number">0x15</span>,<span class="number">0x31</span>,<span class="number">0x33</span>,<span class="number">0x48</span>,<span class="number">0x17</span>,<span class="number">0x14</span>,<span class="number">0x15</span>,<span class="number">0x31</span>,<span class="number">0x34</span>&#125;, <span class="number">14</span>&#125;,</span><br><span class="line">    <span class="comment">/* Sleep Out */</span></span><br><span class="line">    &#123;<span class="number">0x11</span>, &#123;<span class="number">0</span>&#125;, <span class="number">0x80</span>&#125;,</span><br><span class="line">    <span class="comment">/* Display On */</span></span><br><span class="line">    &#123;<span class="number">0x29</span>, &#123;<span class="number">0</span>&#125;, <span class="number">0x80</span>&#125;,</span><br><span class="line">    &#123;<span class="number">0</span>, &#123;<span class="number">0</span>&#125;, <span class="number">0xff</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/posts/1827825660/d8edf0ef5488462f90c314696719f4d9.jpg" class="" title="在这里插入图片描述"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/weixin_51803729/article/details/136747907">在esp32上使用tftLCD屏幕（st7789驱动）</a></li><li><a href="https://blog.csdn.net/suyexuan/article/details/120962445">基于 ESP32 的 LCD 模块（ST7789）开发</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP32使用SPI总线驱动LCD液晶屏</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ST7789" scheme="https://zml3589110.github.io/categories/ST7789/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="LCD" scheme="https://zml3589110.github.io/tags/LCD/"/>
    
    <category term="ST7789" scheme="https://zml3589110.github.io/tags/ST7789/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="液晶屏" scheme="https://zml3589110.github.io/tags/%E6%B6%B2%E6%99%B6%E5%B1%8F/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF之头文件问题</title>
    <link href="https://zml3589110.github.io/posts/1109857756.html"/>
    <id>https://zml3589110.github.io/posts/1109857756.html</id>
    <published>2024-07-18T01:22:20.000Z</published>
    <updated>2024-07-20T02:52:10.784Z</updated>
    
    <content type="html"><![CDATA[<h1 id="找不到头文件"><a href="#找不到头文件" class="headerlink" title="找不到头文件"></a>找不到头文件</h1><p>主要分为两种：一种是在 Components 内找不到，另一种是在自己文件夹内找不到</p><h2 id="情况一（在components文件下添加）"><a href="#情况一（在components文件下添加）" class="headerlink" title="情况一（在components文件下添加）"></a>情况一（在components文件下添加）</h2><img src="/posts/1109857756/20210409203320910.png" class="" title="img"><p><strong>就只在官方的DEMO文件里添加了另外一层文件，就出现这个问题。只多了一层“drv”文件夹，如果不要drv文件夹，把uart移动到components下后编译也是正常的。所以出问题肯定是因为makefile出了问题，无法链接编译到需要的文件夹。</strong></p><img src="/posts/1109857756/20210409203839719.png" class="" title="img"><p><strong>这里使用两种方法进行解决：</strong></p><h3 id="第一种：修改工程最外层的makefile和cmakelists-txt连个文件。"><a href="#第一种：修改工程最外层的makefile和cmakelists-txt连个文件。" class="headerlink" title="第一种：修改工程最外层的makefile和cmakelists.txt连个文件。"></a>第一种：修改工程最外层的makefile和cmakelists.txt连个文件。</h3><p>添加如下代码</p><img src="/posts/1109857756/20210409203736579.png" class="" title="img"><img src="/posts/1109857756/20210409203753812.png" class="" title="img"><p>这几句的意思就是让编译器在编译的时候去这几个文件夹下查找需要的文件。<br>在project.cmake文件里有对目录的解释</p><img src="/posts/1109857756/20210409204140984.png" class="" title="img"><p>大概意思就是让编译器在这个目录下进行查找。（具体语句我也不是很清楚，惭愧）<br>添加之后编译就可以通过了。</p><h3 id="第二种："><a href="#第二种：" class="headerlink" title="第二种："></a>第二种：</h3><p>编译器之所以链接不到，是因为编译器只能检测到components文件夹的第一层子目录下，就是drv文件夹，该文件夹的子目录不会去链接，因为没有cmakelists.txt文件。<br>所以第二种方式就是在drv文件夹下创建cmakelists.txt文件.</p><img src="/posts/1109857756/20210409204706701.png" class="" title="img"><p>在该文件夹下添加包含的文件：</p><img src="/posts/1109857756/20210409204749394.png" class="" title="img"><p>这样编译器就能在这里找到drv_uart.c文件了。</p><p>PS:如果采用第一种方法，drv下的cmakelists.txt必须删除掉，否则会报错。语句注释掉也不行。<br>个人建议还是用第一种方法，更正规一点。但是说到底都是编译器没有链接到文件，还是自己学艺不精。<br>这里要感谢一下同事大佬，感谢文哥。</p><p>对了。这个问题并不是很多人说的什么路径问题，我的c_cpp_properties.json文件没有改动。</p><img src="/posts/1109857756/20210409205203282.png" class="" title="img"><h2 id="情况二（在非components文件夹下添加）"><a href="#情况二（在非components文件夹下添加）" class="headerlink" title="情况二（在非components文件夹下添加）"></a>情况二（在非components文件夹下添加）</h2><p><strong>比如我们在IDF提供的，hello_world文件夹下添加一个drv文件。这里我们把hello_world文件夹拷贝为test_project工程。在main的同级目录下创建一个drv目录，在该目录下添加文件。此时编译，发现找不到我们的需要的文件。</strong></p><img src="/posts/1109857756/aaba9ef371c1442f9a9783699bb66a75.png" class="" title="img"><p> 此时，在main文件夹下的<strong>component.mk</strong>文件中，添加如下代码：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COMPONENT_ADD_INCLUDEDIRS := . ../drv</span><br><span class="line">COMPONENT_SRCDIRS  := . ../drv</span><br></pre></td></tr></table></figure><p>这样就能让编译连链接到drv目录下。此时再make 。不会报错。</p><h1 id="报错-No-such-file-or-directory"><a href="#报错-No-such-file-or-directory" class="headerlink" title="报错 No such file or directory"></a>报错 No such file or directory</h1><p>当使用ESP-IDF框架编写项目的时候，往往会在编译的时候碰见这种错误，网上找了很久解决问题的方法，大多数说是路径不对，需要包含进去。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">../main/app_sd.c:15:10: fatal error: esp_vfs_fat.h: No such file or directory</span><br><span class="line"> <span class="comment">#include &quot;esp_vfs_fat.h&quot;</span></span><br><span class="line">          ^~~~~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br><span class="line">[96/108] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_wifi.c.obj</span><br></pre></td></tr></table></figure><p>查找esp_vfs_fot.h文件得知其在fatfs目录下vfs目录下，于是在项目的CMakeList.txt中设置如下</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(EXTRA_COMPONENT_DIRS </span><br><span class="line">    $ENV&#123;IDF_PATH&#125;/components/fatfs)</span><br></pre></td></tr></table></figure><p>编译后依然报错。 </p><p> 进入到fatfs组件中，修改CMakeList.txt，修改component.mk，一通折腾，依然问题如故。</p><p>最终发现问题的根源在于，编译的时候此组件的include压根没有进入编译坏境里，那么需要想办法把这个组件添加进require里</p><p>最后在项目目录的main目录下发现一个CMakeList.txt文件，里面有个require</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span>(COMPONENT_REQUIRES</span><br><span class="line">    esp32-camera</span><br><span class="line">    esp-face</span><br><span class="line">    nvs_flash</span><br><span class="line">    esp_http_server</span><br><span class="line">    fb_gfx</span><br><span class="line">    mdns</span><br><span class="line">    wpa_supplicant</span><br><span class="line">    fatfs</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>于是添加fatfs，编译后终于不出错了。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><p><a href="https://blog.csdn.net/qq_26226375/article/details/115558969">ESP32-IDF 使用VSCODE添加自己的头文件后无法找到的问题</a></p></li><li><p><a href="https://blog.csdn.net/bluesadman/article/details/121802571">ESP-IDF框架下的项目编译出现 No such file or directory的解决方法</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF下 头文件相关内容</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/categories/Components/"/>
    
    <category term="CmakeLists" scheme="https://zml3589110.github.io/categories/CmakeLists/"/>
    
    <category term="require" scheme="https://zml3589110.github.io/categories/require/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/tags/Components/"/>
    
    <category term="require" scheme="https://zml3589110.github.io/tags/require/"/>
    
  </entry>
  
  <entry>
    <title>ESP32环境搭建和LGVL驱动</title>
    <link href="https://zml3589110.github.io/posts/2149552820.html"/>
    <id>https://zml3589110.github.io/posts/2149552820.html</id>
    <published>2024-07-17T12:04:20.000Z</published>
    <updated>2024-07-18T02:48:07.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ESP-IDF-环境搭建"><a href="#ESP-IDF-环境搭建" class="headerlink" title="ESP-IDF 环境搭建"></a>ESP-IDF 环境搭建</h1><p><strong>目前提供的是两个IDF环境，也都能实现编译，这次主要是想重新弄TLT液晶屏下的LVGL，所以从头再弄一次！期间也有挺多问题需要解决，不过Ubuntu环境做的次数相对多一些，所以弄起来顺手点，不过最后发现VSCODE环境更加无脑安装更加方便，就是编译的速度慢了好多，最终还是选择使用Ubuntu</strong></p><h2 id="Ubuntu环境搭建"><a href="#Ubuntu环境搭建" class="headerlink" title="Ubuntu环境搭建"></a>Ubuntu环境搭建</h2><p>这个参考 <a href="https://zml3589110.github.io/posts/2870405859.html">ESP32开发SDK-IDF环境搭建(Ubuntu)</a> 即可<br>基本上能安装并运行demo</p><h2 id="Windows-环境下通过-VSCODE-搭建"><a href="#Windows-环境下通过-VSCODE-搭建" class="headerlink" title="Windows 环境下通过 VSCODE 搭建"></a>Windows 环境下通过 VSCODE 搭建</h2><p>之前没有尝试过，这次感觉使用Ubuntu麻烦，就想着直接使用一个Windows环境看看，这样查代码什么的也方便!</p><h1 id="使用SPI总线驱动LCD（st7789驱动）"><a href="#使用SPI总线驱动LCD（st7789驱动）" class="headerlink" title="使用SPI总线驱动LCD（st7789驱动）"></a>使用SPI总线驱动LCD（st7789驱动）</h1><p>参考文章 <strong>ESP32使用SPI总线驱动LCD</strong></p><h1 id="移植LVGL"><a href="#移植LVGL" class="headerlink" title="移植LVGL"></a>移植LVGL</h1><p><strong>手上的TFT液晶屏是 ST7789 的屏幕，但是默认demo是 ILI9341 这款，虽然跑的时钟 demo 没问题，但是使用 GUI-Guider 生成的UI导入后颜色不对，仔细看才发现使用颜色深度不同，demo驱动使用的8bit，而GUI-Guider只有16或者32，所以就不合适，最后找到了lvgl_esp32_drivers 组件并且修改后才能适配使用，很多地方报错，就拿文件中找不到 drive 目录下gpio.h报错问题来说，其实就是因为 ESP-IDF 从4升级到5后需要在cmake中声明才能使用，不能隐式使用，也算是一种改变，所以还是需要多看官方文档才行！<a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/migration-guides/release-5.x/5.0/build-system.html">迁移构建系统至 ESP-IDF v5.0</a></strong></p><h2 id="ESP32S3移植GUI-Guider下的LVGL（v8-3）"><a href="#ESP32S3移植GUI-Guider下的LVGL（v8-3）" class="headerlink" title="ESP32S3移植GUI-Guider下的LVGL（v8.3）"></a>ESP32S3移植GUI-Guider下的LVGL（v8.3）</h2><p><strong>GUI-Guider安装网上很多，之前自己也记录过文章 <a href="https://zml3589110.github.io/posts/278272964.html">LVGL模拟器NXP GUI Guider使用</a></strong></p><h3 id="一、新建工程"><a href="#一、新建工程" class="headerlink" title="一、新建工程"></a>一、新建工程</h3><p><strong>复制 ESP-IDF 下example&#x2F;get-started&#x2F;sample_project 示例作为基础工程模板,将其拷贝到work目录下并改名为lvgl_base</strong></p><img src="/posts/2149552820/bdc1cbd768b3491dbabe1e60ad79524c.png" class="" title="img"><h3 id="二、移植LVGL"><a href="#二、移植LVGL" class="headerlink" title="二、移植LVGL"></a>二、移植LVGL</h3><ol><li>引入LVGL库</li></ol><p>1.1 创建组件文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir components</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> components</span><br></pre></td></tr></table></figure><p>1.2. 引入LVGL相关库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//这里引入的是release/v8.3版本的库，也可以选择其它版本</span><br><span class="line">git submodule add -b release/v8.3 https://github.com/lvgl/lvgl.git lvgl</span><br><span class="line">//引入esp32工程库，这个库实现了对lcd显示设备的注册，当然也可以使用自己的方式实现</span><br><span class="line">git submodule add https://github.com/lvgl/lvgl_esp32_drivers.git lvgl_esp32_drivers</span><br></pre></td></tr></table></figure><p><strong>如果在引入库时报下面的问题，则只需要在工程中初始化git 仓库即可</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> lvgl_base</span><br><span class="line"></span><br><span class="line">git init</span><br></pre></td></tr></table></figure><img src="/posts/2149552820/ce7a68e45c464da8b831f145e8b4da1c.png" class="" title="img"><p>1.3. 查看工程结构</p><img src="/posts/2149552820/8b6c66b52fd043a38bfa44dbd382170a.png" class="" title="img"><ol start="2"><li>编译工程</li></ol><p>2.1 配置LCD</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">idf.py set-target esp32s3</span><br><span class="line"></span><br><span class="line">idf.py menuconfig</span><br></pre></td></tr></table></figure><img src="/posts/2149552820/image-20240717203757542.png" class="" title="image-20240717203757542"><img src="/posts/2149552820/image-20240717203825186.png" class="" title="image-20240717203825186"><p><strong>1)设置控制器类型为ST7789</strong><br><strong>2)根据屏幕特性选择反色（一些屏幕不需要）</strong><br><strong>2）配置LCD引脚</strong><br><strong>3）配置背光引脚及电平</strong></p><p>2.2 配置LVGL</p><img src="/posts/2149552820/28f2b8f889de45cea4851877682a60d2.png" class="" title="img"><img src="/posts/2149552820/4bb29d58da4646a48d9342854f2e874a.png" class="" title="img"><p><strong>1）根据屏幕特性选择交换颜色字节（一些屏幕不需要）</strong><br><strong>2）使能一些demo用到的字体</strong><br><strong>3）使能music demo</strong></p><ol start="3"><li>主函数代码</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_log.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/event_groups.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl_helpers.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;demos/lv_demos.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TAG <span class="meta-string">&quot;main&quot;</span></span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_tick_task</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lv_tick_inc(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* Initialize SPI or I2C bus used by the drivers */</span></span><br><span class="line">    lvgl_driver_init();</span><br><span class="line"> </span><br><span class="line">    lv_init();</span><br><span class="line">    <span class="keyword">lv_color_t</span> *buf1 = heap_caps_malloc(DISP_BUF_SIZE * <span class="keyword">sizeof</span>(<span class="keyword">lv_color_t</span>), MALLOC_CAP_DMA);</span><br><span class="line">    assert(buf1 != <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_color_t</span> *buf2 = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_disp_draw_buf_t</span> disp_buf;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">uint32_t</span> size_in_px = DISP_BUF_SIZE;</span><br><span class="line">    lv_disp_draw_buf_init(&amp;disp_buf, buf1, buf2, size_in_px);</span><br><span class="line">    <span class="keyword">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">    lv_disp_drv_init(&amp;disp_drv);</span><br><span class="line">    disp_drv.hor_res = LV_HOR_RES_MAX;</span><br><span class="line">    disp_drv.ver_res = LV_VER_RES_MAX;</span><br><span class="line">    disp_drv.flush_cb = disp_driver_flush;</span><br><span class="line">    disp_drv.draw_buf = &amp;disp_buf;</span><br><span class="line">    lv_disp_drv_register(&amp;disp_drv);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">esp_timer_create_args_t</span> periodic_timer_args = &#123;</span><br><span class="line">        .callback = &amp;lv_tick_task,</span><br><span class="line">        .name = <span class="string">&quot;periodic_gui&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">esp_timer_handle_t</span> periodic_timer;</span><br><span class="line">    ESP_ERROR_CHECK(esp_timer_create(&amp;periodic_timer_args, &amp;periodic_timer));</span><br><span class="line">    ESP_ERROR_CHECK(esp_timer_start_periodic(periodic_timer, <span class="number">1</span> * <span class="number">1000</span>));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// lvgl demo演示</span></span><br><span class="line">    lv_demo_music();</span><br><span class="line">    <span class="comment">// lv_demo_stress();</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Delay 1 tick (assumes FreeRTOS tick is 10ms */</span></span><br><span class="line">        vTaskDelay(pdMS_TO_TICKS(<span class="number">10</span>));</span><br><span class="line">        lv_task_handler();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、报错修改"><a href="#三、报错修改" class="headerlink" title="三、报错修改"></a>三、报错修改</h3><h4 id="1-error-‘LV-HOR-RES-MAX’-undeclared"><a href="#1-error-‘LV-HOR-RES-MAX’-undeclared" class="headerlink" title="1.error: ‘LV_HOR_RES_MAX’ undeclared"></a>1.error: ‘LV_HOR_RES_MAX’ undeclared</h4><img src="/posts/2149552820/fe6e01fba7124967a701e19d682c213c.png" class="" title="img"><p><strong>解决方式：在lvgl_helpers.h 中增加如下代码</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_HOR_RES_MAX 320</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_VER_RES_MAX 240</span></span><br><span class="line"><span class="comment">//#define SPI_HOST_MAX 3  在最新的IDF驱动中已经有这个了，加这个会报错误重复</span></span><br></pre></td></tr></table></figure><h4 id="2-E-384-spi-spi-bus-initialize-762-invalid-dma-channel-chip-only-support-spi-dma-channel-auto-alloc"><a href="#2-E-384-spi-spi-bus-initialize-762-invalid-dma-channel-chip-only-support-spi-dma-channel-auto-alloc" class="headerlink" title="2.E (384) spi: spi_bus_initialize(762): invalid dma channel, chip only support spi dma channel auto-alloc"></a>2.E (384) spi: spi_bus_initialize(762): invalid dma channel, chip only support spi dma channel auto-alloc</h4><img src="/posts/2149552820/b5b00eb2286c413ebb727e44ecc43f28.png" class="" title="img"><p><strong>解决方式：在lvgl_helpers.c 中增加如下代码</strong></p><img src="/posts/2149552820/21fddf6323e2486789e3c8e2f0cb9779.png" class="" title="img"><p><strong>在这次实验中并没有报这个错误，所以不需要改 IDF-5.2</strong></p><h4 id="3-找不到-driver-文件下的-gpio-h-和-ledc-h"><a href="#3-找不到-driver-文件下的-gpio-h-和-ledc-h" class="headerlink" title="3. 找不到 driver 文件下的 gpio.h 和 ledc.h"></a>3. 找不到 driver 文件下的 gpio.h 和 ledc.h</h4><p><strong>解决办法：修改使用cmake文件，让组件能找到位置</strong></p><p>根据 <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/migration-guides/release-5.x/5.0/build-system.html">迁移构建系统至 ESP-IDF v5.0</a> 说明迁移后需要在cmake明确指定组件依赖</p><img src="/posts/2149552820/image-20240717205040333.png" class="" title="image-20240717205040333"><p>idf_component_register 新增加 REQUIRES driver 即可</p><p><a href="https://blog.csdn.net/wf19930225/article/details/129196540">2_light_drivers esp-idf5.x报错 Failed to resolve component ‘esp_adc_cal‘</a></p><h4 id="4-报了-gpio等其他"><a href="#4-报了-gpio等其他" class="headerlink" title="4. 报了 gpio等其他"></a>4. 报了 gpio等其他</h4><p><strong>本次就直接把错误的部分代码屏蔽掉即可</strong></p><img src="/posts/2149552820/image-20240717205240035.png" class="" title="image-20240717205240035"><p>例如 <strong>st7789.c</strong> 文件中的 <strong>gpio_pad_select_gpio(ST7789_DC);</strong> 就报错了，直接屏蔽后使用也正常</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在驱动LCD屏幕方面，lvgl_esp32_drivers 库目前只支持了spi以及I2C的方式，对于8080接口是没有支持的，这时候可以使用esp-who 的screen 组件来实现驱屏。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><p><a href="https://blog.csdn.net/m0_55986987/article/details/132875484?spm=1001.2014.3001.5502">ESP32系列之LVGL（二）：ESP32S3移植LVGL（v8.3）</a></p></li><li><p><a href="https://github.com/lvgl/lv_port_esp32">LVGL库</a></p></li><li><p><a href="https://github.com/espressif/esp-who">ESP-WHO库</a></p></li><li><p><a href="https://blog.csdn.net/chentuo2000/article/details/128269394">ESP32 ESP-IDF LVGL8.3.3移植</a></p></li><li><p><a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/migration-guides/release-5.x/5.0/build-system.html">迁移构建系统至 ESP-IDF v5.0</a></p></li><li><p><a href="https://blog.csdn.net/weixin_51803729/article/details/136747907">在esp32上使用tftLCD屏幕（st7789驱动）</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">搭建ESP32开发环境，并实现LVGL液晶屏显示</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="文件共享" scheme="https://zml3589110.github.io/categories/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/categories/LVGL/"/>
    
    <category term="GUI-Guider" scheme="https://zml3589110.github.io/categories/GUI-Guider/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="开发环境" scheme="https://zml3589110.github.io/tags/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    
    <category term="安装问题" scheme="https://zml3589110.github.io/tags/%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    
    <category term="Windows" scheme="https://zml3589110.github.io/tags/Windows/"/>
    
    <category term="VSCODE" scheme="https://zml3589110.github.io/tags/VSCODE/"/>
    
    <category term="GUI-Guider" scheme="https://zml3589110.github.io/tags/GUI-Guider/"/>
    
  </entry>
  
  <entry>
    <title>卸载PHP</title>
    <link href="https://zml3589110.github.io/posts/2401450114.html"/>
    <id>https://zml3589110.github.io/posts/2401450114.html</id>
    <published>2024-05-31T09:22:20.000Z</published>
    <updated>2024-07-17T13:26:21.021Z</updated>
    
    <content type="html"><![CDATA[<h1 id="卸载现有php"><a href="#卸载现有php" class="headerlink" title="卸载现有php"></a>卸载现有php</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get autoremove php7*</span><br><span class="line">find /etc -name <span class="string">&quot;*php*&quot;</span> |xargs  rm -rf</span><br><span class="line">apt purge `dpkg -l | grep php| awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> |tr <span class="string">&quot;\n&quot;</span> <span class="string">&quot; &quot;</span>`</span><br></pre></td></tr></table></figure><p><strong>编译安装php</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install gcc make libxml2 libxml2-dev</span><br><span class="line">wget http://cn2.php.net/distributions/php-7.3.3.tar.bz2</span><br><span class="line">tar -xjf php-7.3.3.tar.bz2</span><br><span class="line">./configure &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h1 id="查看PHP信息"><a href="#查看PHP信息" class="headerlink" title="查看PHP信息"></a>查看PHP信息</h1><p>在.php文件中输入phpinfo();查看mysqli是否成功连接，显示有mysqli就表示成功连接上了</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.cnblogs.com/wdxgg/p/11988884.html">debian 卸载&#x2F;安装php 安装swoole扩展</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">在Debian arm系统上完全卸载PHP</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="PHP" scheme="https://zml3589110.github.io/categories/PHP/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="Debain" scheme="https://zml3589110.github.io/tags/Debain/"/>
    
    <category term="PHP" scheme="https://zml3589110.github.io/tags/PHP/"/>
    
    <category term="卸载" scheme="https://zml3589110.github.io/tags/%E5%8D%B8%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>4Nginx安装并部署vue（Debain系统）</title>
    <link href="https://zml3589110.github.io/posts/975746674.html"/>
    <id>https://zml3589110.github.io/posts/975746674.html</id>
    <published>2024-05-30T13:11:20.000Z</published>
    <updated>2024-05-30T13:23:01.045Z</updated>
    
    <content type="html"><![CDATA[<p>收集的文章：</p><p>按照这个：<br><a href="https://blog.csdn.net/One__buyaomanggu/article/details/136619437">vue项目部署到linx服务器（debian）</a></p><p><a href="https://cloud.tencent.com/developer/article/1834769">一篇文章、三种方法在Debian上轻松安装Nginx</a></p><p><a href="https://www.cnblogs.com/sunxun001/p/14031376.html">Linux安装nginx及部署vue项目</a></p><p><a href="https://www.jb51.net/article/262472.htm">nginx部署vue项目的详细图文教程</a></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">在Debian arm系统上完成nginx服务安装并将VUE放入其中</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Nginx" scheme="https://zml3589110.github.io/categories/Nginx/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="Debain" scheme="https://zml3589110.github.io/tags/Debain/"/>
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="Nginx" scheme="https://zml3589110.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>mysql-debain安装</title>
    <link href="https://zml3589110.github.io/posts/1262246429.html"/>
    <id>https://zml3589110.github.io/posts/1262246429.html</id>
    <published>2024-05-30T12:02:20.000Z</published>
    <updated>2024-08-01T01:59:50.794Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h1><p>最近想在自己玩客云中做一个网页版本的日记记录，能实现数据保存和随机读取推荐的功能，这就打算使用MySQL数据库来保存。<br>实现的方案是：VUE+MySQL+PHP等，这样就基本能实现数据保存和读取了。<br>同时也能为以后各种数据保存跟远程读取打下基础。<br>而且现在也能实现了内网穿透，基本上把前后端打通。</p><p><strong>开始实验了很多次，然而，由于这个CPU使用的是ARM架构，所以基本都会报错，最后是使用了 mariadb 来实现相应功能</strong></p><h1 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h1><p>使用如下命令查询当前linux发行版的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lsb_release -a</span><br><span class="line"></span><br><span class="line">apt install mariadb-server mariadb-client</span><br></pre></td></tr></table></figure><p><strong>安装mariadb之后依旧是使用mysql命令，它是mysql的分支而已</strong></p><h1 id="配置root的密码"><a href="#配置root的密码" class="headerlink" title="配置root的密码"></a>配置root的密码</h1><ol><li><code>sudo mysql_secure_installation</code></li><li>然后提示 Set root password? [Y&#x2F;n]，输入Y</li><li>然后输入两次mysql数据库的密码，此密码会被设置为mysql root的密码</li><li>然后一路回车即可</li></ol><h1 id="配置登录"><a href="#配置登录" class="headerlink" title="配置登录"></a>配置登录</h1><p><strong>这里通过配置解决ERROR 1698 (28000): Access denied for user ‘root’@’localhost’报错，详细参考：</strong></p><p><a href="https://blog.csdn.net/jlu16/article/details/82809937">https://blog.csdn.net/jlu16/article/details/82809937</a></p><p>首先登陆：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root</span><br></pre></td></tr></table></figure><p>然后在mysql中输入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">User</span>, Host, plugin <span class="keyword">FROM</span> mysql.user;</span><br></pre></td></tr></table></figure><p>可以看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+------------------+---------------------------------+</span><br><span class="line">| User             | plugin                          |</span><br><span class="line">+------------------+---------------------------------+</span><br><span class="line">| root             | auth_socket（或是unix_socket）   |</span><br><span class="line">+------------------+---------------------------------+</span><br></pre></td></tr></table></figure><p>此时输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user SET plugin&#x3D;&#39;mysql_native_password&#39; WHERE User&#x3D;&#39;root&#39;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line">exit;</span><br></pre></td></tr></table></figure><p>然后在命令行中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><h1 id="无法登录的问题"><a href="#无法登录的问题" class="headerlink" title="无法登录的问题"></a>无法登录的问题</h1><p>设置好后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root</span><br></pre></td></tr></table></figure><p>还是会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1045 (28000): Access denied <span class="keyword">for</span> user <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> (using password: NO)</span><br></pre></td></tr></table></figure><p>这个是因为设置了密码导致拒绝访问，需要在命令行中添加密码选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root -p</span><br></pre></td></tr></table></figure><p>然后根据提示输入正确密码即可。</p><p><img src="https://img-blog.csdnimg.cn/f75211c350c548f3a8fb8f269cf2fcc1.png" alt="img"></p><h1 id="权限问题（目前只是本机访问要求就不做其他了）"><a href="#权限问题（目前只是本机访问要求就不做其他了）" class="headerlink" title="权限问题（目前只是本机访问要求就不做其他了）"></a>权限问题（目前只是本机访问要求就不做其他了）</h1><h2 id="一、查看3306端口是否开放"><a href="#一、查看3306端口是否开放" class="headerlink" title="一、查看3306端口是否开放"></a>一、查看3306端口是否开放</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an|grep 3306</span><br></pre></td></tr></table></figure><p> 如果看到下图这样的，说明端口并未打开：</p> <h2 id="二、修改访问权限"><a href="#二、修改访问权限" class="headerlink" title="二、修改访问权限"></a>二、修改访问权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mysql/mysql.conf.d/mysqld.cnf</span><br></pre></td></tr></table></figure><p><strong>注意上图中的第一行红色的注释：</strong></p><p><em><strong>“By default we only accept connections from localhost”，这几句话的意思是说“在默认情况下我们只允许本地服务访问MySQL”，</strong></em></p><p>所以我们需要注释掉下方那条配置，直接在它前面加上一个井号即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># bind-address = 127.0.0.1</span></span><br></pre></td></tr></table></figure><p>如下图所是，这条配置也变成了注释：</p><p><strong>拓展一下思路，如果我们出于安全考虑，希望限制只有某台应用服务器可以访问MySQL的话，那么其实就需要调整这条配置项就可以了。</strong></p><h2 id="三、修改端口号"><a href="#三、修改端口号" class="headerlink" title="三、修改端口号"></a>三、修改端口号</h2><p>还是这个配置文件，看到这个配置文件的中间部分的配置项：</p><p>我们需要在其中增加一条端口配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port = 3306</span><br></pre></td></tr></table></figure><p>加完以后整个配置文件看起来是这样的：</p><p>修改完文件之后记得保存。</p><h2 id="四、开放root账户的访问权限"><a href="#四、开放root账户的访问权限" class="headerlink" title="四、开放root账户的访问权限"></a>四、开放root账户的访问权限</h2><p>在第三步中，我们仅仅只是取消了本地访问限制，但是我们还是没有对账户权限进行设置。</p><p>重启MySQL服务，并进入MySQL控制台：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service mysql stop</span><br><span class="line">service mysql start</span><br><span class="line"></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><p>**切换到系统数据库“mysql”中： **</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br></pre></td></tr></table></figure><p><strong>查看一下该数据库中的所有的表：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><p><strong>我们要修改上图中的最后一张表“user”，看一下这张表有哪些字段：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc user;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/20170811103055101?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZnJlZXppbmd4dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="img"></p><p><strong>字段非常多，就不一一罗列了。我们要用到的只是“Host”和“User”两个字段而已：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select host,user from user;</span><br></pre></td></tr></table></figure><p><strong>在这张表里，我们看到root用户仅仅只能在本地访问MySQL服务，所以我们要把它修改为“%”，意思是无论在哪里root账户都能够访问数据库服务：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update user set host&#x3D;&#39;%&#39; where user&#x3D;&#39;root&#39;;</span><br><span class="line">flush privileges;​</span><br></pre></td></tr></table></figure><p><em><strong>注意，在真实的生产环境中，并不建议这么修改，因为安全风险太大。我建议根据实际情况将root用户的host项修改为某个指定的ip地址，或仍然保持localhost</strong></em></p><p>一般情况下 最后一项可以不设置，不看。 </p><p><strong>最后一项设置，开放root账户所有权限：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;你的root账户密码&#39;;</span><br></pre></td></tr></table></figure><p><strong>使各种权限设置立即生效：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;​</span><br></pre></td></tr></table></figure><h2 id="五、再次确认3306端口状态"><a href="#五、再次确认3306端口状态" class="headerlink" title="五、再次确认3306端口状态"></a>五、再次确认3306端口状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an|grep 3306</span><br></pre></td></tr></table></figure><p><strong>如果看到下图这样，就可以了：</strong></p><h1 id="ERROR-1045-28000-错误处理"><a href="#ERROR-1045-28000-错误处理" class="headerlink" title="ERROR 1045 (28000) 错误处理"></a>ERROR 1045 (28000) 错误处理</h1><h2 id="一、问题："><a href="#一、问题：" class="headerlink" title="一、问题："></a>一、问题：</h2><blockquote><p>ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: YES)</p></blockquote><img src="/posts/1262246429/f75211c350c548f3a8fb8f269cf2fcc1.png" class="" title="img"> <p>相信很多刚刚在Linux上装MySQL的用户都会遇到这个问题，到底该怎么解决呢？我在stackoverflow上查找到了答案（我使用了方法1并且十分有效），搬运过来顺便翻译成中文。</p><p>原文地址：<a href="https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost">https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost</a></p><p>回答：</p><p>原因是因为在最近的Ubuntu安装（当然也可能是其他安装）中，MySQL默认使用了UNIX auth_socket plugin插件。</p><p>简单来说这意味着当db_users使用数据库时，将会通过系统用户认证表进行认证。你可以通过下面的命令看看你的root用户是否设置成了这样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mysql -u root # I had to use &quot;sudo&quot; since is new installation</span><br><span class="line"></span><br><span class="line">mysql&gt; USE mysql;</span><br><span class="line">mysql&gt; SELECT User, Host, plugin FROM mysql.user;</span><br><span class="line"></span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| User             | plugin                |</span><br><span class="line">+------------------+-----------------------+</span><br><span class="line">| root             | auth_socket           |</span><br><span class="line">| mysql.sys        | mysql_native_password |</span><br><span class="line">| debian-sys-maint | mysql_native_password |</span><br><span class="line">+------------------+-----------------------+</span><br></pre></td></tr></table></figure><p>就像你在查询语句中看到的那样，root用户在使用auth_socket插件。有两种方法来解决这个问题：</p><p><strong>1. 你可以设置你的root用户使用mysql_native_password插件 2. 你可以创建一个与你的系统用户一致的新的数据库用户（推荐）</strong></p><p>（笔者注：方法2即满足auth_socket插件的要求）</p><p>选择1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mysql -u root # I had to use &quot;sudo&quot; since is new installation</span><br><span class="line"></span><br><span class="line">mysql&gt; USE mysql;</span><br><span class="line">mysql&gt; UPDATE user SET plugin&#x3D;&#39;mysql_native_password&#39; WHERE User&#x3D;&#39;root&#39;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt; exit;</span><br><span class="line"></span><br><span class="line">$ service mysql restart</span><br></pre></td></tr></table></figure><p>选择2（ 用你的操作系统用户名代替YOUR_SYSTEM_USER） ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mysql -u root # I had to use &quot;sudo&quot; since is new installation</span><br><span class="line"></span><br><span class="line">mysql&gt; USE mysql;</span><br><span class="line">mysql&gt; CREATE USER &#39;YOUR_SYSTEM_USER&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;&#39;;</span><br><span class="line">mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &#39;YOUR_SYSTEM_USER&#39;@&#39;localhost&#39;;</span><br><span class="line">mysql&gt; UPDATE user SET plugin&#x3D;&#39;auth_socket&#39; WHERE User&#x3D;&#39;YOUR_SYSTEM_USER&#39;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt; exit;</span><br><span class="line"></span><br><span class="line">$ service mysql restart</span><br></pre></td></tr></table></figure><p>记住如果你选择使用方法2，你应该通过使用你的操作系统用户名来连接到MySQL（mysql -u YOUR_SYSTEM_USER）。</p><p>注意：在一些操作系统中（例如Debian系）‘auth_socket’插件被叫做’unix_socket’，所以相应的SQL命令语句应该为<strong>UPDATE user SET plugin&#x3D;‘unix_socket’ WHERE User&#x3D;‘YOUR_SYSTEM_USER’</strong>。</p><h2 id="二、原因："><a href="#二、原因：" class="headerlink" title="二、原因："></a>二、原因：</h2><blockquote><p>错误 1045 （28000）：用户“root”@“本地主机”的访问被拒绝（使用密码：是）</p><p>简单的说，就是用户root没有使用权限。：</p></blockquote><p><strong>（1） MySQL服务器停止</strong></p><p><strong>（2）密码输入错误</strong></p><h2 id="三、解决方法："><a href="#三、解决方法：" class="headerlink" title="三、解决方法："></a>三、解决方法：</h2><p><strong>（1）若MySQL已经没有启动，重启MySQL服务器</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure><p><strong>（2）修改密码</strong></p><ol><li>修改&#x2F;etc&#x2F;my.cnf文件，在[mysqld]中添加skip-grant-tables（登录时跳过权限检查）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip-grant-tables</span><br></pre></td></tr></table></figure><img src="/posts/1262246429/f4152e1de82b4809a9c0fb1951be82a0.jpeg" class="" title="img"><ol start="2"><li><p>重启数据库（<strong>同上</strong>）</p></li><li><p>修改密码</p></li></ol><p><strong>先登录mysql</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>会让你输入密码，直接点击回车即可。</p><img src="/posts/1262246429/45fd0ac701c246ac83f4c861350fbc96.png" class="" title="img"><p><strong>输入use mysql</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql</span><br></pre></td></tr></table></figure><p><strong>设置密码</strong><br><strong>【MySQL密码不好设置，可以跟我一样设置密码为：Abcdefg@123】</strong></p><p>方法一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password for &#96;root&#96;@&#96;localhost&#96;&#x3D;password(&#39;Abcdefg@123&#39;);</span><br></pre></td></tr></table></figure><p>【问题解决】</p><p>如果遇到</p><blockquote><p>ERROR 1290 (HY000): The MariaDB server is running with the –skip-grant-tables option so it cannot execute this statement </p></blockquote><img src="/posts/1262246429/cec1382d1d6d4067b2fb6f0321a70b0c.png" class="" title="img"><p>输入flush privileges;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><img src="/posts/1262246429/b34e971a5f2143d08938066ce71b59a9.png" class="" title="img"><p><strong>接下来再次输入set password for <code>root</code>@<code>localhost</code>&#x3D;password(‘Abcdefg@123’);即可</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set password for &#96;root&#96;@&#96;localhost&#96;&#x3D;password(&#39;Abcdefg@123&#39;);</span><br></pre></td></tr></table></figure><img src="/posts/1262246429/0af4e99ffbba4d609352b56d6090572b.png" class="" title="img"><p>方法二：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user <span class="keyword">set</span> authentication_string <span class="operator">=</span><span class="string">&#x27;Abcdefg@123&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span>&quot;root&quot;;</span><br></pre></td></tr></table></figure><img src="/posts/1262246429/2ac65c4bf9eb4fbea37c06859437e2a3.png" class="" title="img"><p>4.退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure> <img src="/posts/1262246429/70f5d3cd2a0c4807949d1976e2c9cbcc.png" class="" title="img"><p>5.将my.cnf中的skip-grant-tables去除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;my.cnf</span><br></pre></td></tr></table></figure><p>6.重启服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mariadb</span><br></pre></td></tr></table></figure><p>7.登录</p><p>使用修改后的密码登录即可。</p><p>** 普及：**</p><blockquote><p>不输入密码显示：</p><p>ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: NO)</p></blockquote><img src="/posts/1262246429/7d7866abe12646ee9ebb87a84e67f694.png" class="" title="img"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><p><a href="https://blog.csdn.net/weixin_35757704/article/details/109378675">Linux安装mysql（解决E: Package ‘mysql-server‘ has no installation candidate与ERROR 1698 (28000)）</a></p></li><li><p><a href="https://blog.csdn.net/m0_64304713/article/details/133975710">MySQL登录报错 ERROR 1045 (28000): Access denied for user ‘root‘@‘localhost‘ (using password: YES)</a></p></li><li><p><a href="https://www.cnblogs.com/devjiajun/articles/9635464.html">在Ubuntu&#x2F;Linux环境下使用MySQL：开放&#x2F;修改3306端口、开放访问权限</a></p></li><li><p><a href="https://blog.csdn.net/jlu16/article/details/82809937">解决 MySQL 的 ERROR 1698 (28000): Access denied for user ‘root‘@’localhost’</a></p></li><li><p><a href="https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost">ERROR 1698 (28000): Access denied for user ‘root‘@’localhost’</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">mysql数据库在Debain10系统中的安装</summary>
    
    
    
    <category term="编程来" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E6%9D%A5/"/>
    
    <category term="数据库" scheme="https://zml3589110.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="debain" scheme="https://zml3589110.github.io/tags/debain/"/>
    
    <category term="数据库" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/tags/mysql/"/>
    
    <category term="mariadb" scheme="https://zml3589110.github.io/tags/mariadb/"/>
    
  </entry>
  
</feed>
