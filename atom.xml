<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2022-10-28T03:28:17.137Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C#串口功能之五（串口调试助手温度曲线的显示）</title>
    <link href="https://zml3589110.github.io/posts/526450441.html"/>
    <id>https://zml3589110.github.io/posts/526450441.html</id>
    <published>2022-10-28T03:11:20.000Z</published>
    <updated>2022-10-28T03:28:17.137Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c-串口调试助手、上位机"><a href="#c-串口调试助手、上位机" class="headerlink" title="c#串口调试助手、上位机"></a>c#串口调试助手、上位机</h1><p><strong>简介：</strong><br>此串口调试助手是在windows下开发的，工具是 Visual Studio 2017开发的，串口调试助手支持 600<del>115200波特率，端口号是 CMO1</del>CMO9，支持数据位、停止位、奇偶位，支持数据的接收与发送，接收方式十六进制、字符的选择，对接收端数据的清空，并能对温度传感器数据进行接收与绘折线图，并且能设置正常温度现实的区间，及时判断温度是否显示正常与否，并能对曲线的显示进行刷新重新绘制。</p><p><strong>效果图片：</strong></p><img src="https://img-blog.csdnimg.cn/20181219132507652.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpY2tpbHlnb3U=,size_10,color_FF0000,t_70"><p>源码文件名：Csha_demo-master</p><p><strong>想要源代码的可以关注公众号回复：上位机</strong></p><img src="https://img-blog.csdnimg.cn/20181226195010361.jpg"><h2 id="串口参数介绍"><a href="#串口参数介绍" class="headerlink" title="串口参数介绍"></a>串口参数介绍</h2><p><strong>简介：</strong><br>典型地，串口用于ASCII码字符的传输。通信使用3根线完成：（1）地线，（2）发送，（3）接收。由于串口通信是异步的，端口能够在一根线上发送数据同时在另一根线上接收数据。</p><p><strong>波特率：</strong><br>这是一个衡量符号传输速率的参数。它表示每秒钟传送的符号的个数。例如300波特表示每秒钟发送300个符号。当我们提到时钟周期时，我们就是指波特率，例如如果协议需要4800波特率，那么时钟是4800Hz。这意味着串口通信在数据线上的采样率为4800Hz。通常电话线的波特率为14400，28800和36600。波特率可以远远大于这些值，但是波特率和距离成反比。高波特率常常用于放置的很近的仪器间的通信，典型的例子就是GPIB设备的通信。</p><p><strong>数据位：</strong><br>数据位表示一组数据实际包含的数据位数。数据位紧跟在起始位之后，是通信中的真正有效信息。数据位的位数由通信双方共同约定，一般可以是6位、7位或8位，比如标准的ASCII码是0—127（7位），扩展的ASCII码是0—255（8位）。传输数据时先传送字符的低位，后传送字符的高位，即低位（LSB）在前，高位（MSB）在后。</p><p><strong>奇偶位：</strong><br>奇偶校验通常用在数据通信中来保证数据的有效性。奇偶校验位是一个表示给定位数的二进制数中 1 的个数是奇数还是偶数的二进制数。奇偶校验位是最简单的错误检测码。</p><p><strong>停止位：</strong><br>用于表示单个包的最后一位。典型的值为1，1.5和2位。由于数据是在传输线上定时的，并且每一个设备有其自己的时钟，很可能在通信中两台设备间出现了小小的不同步。因此停止位不仅仅是表示传输的结束，并且提供计算机校正时钟同步的机会。适用于停止位的位数越多，不同时钟同步的容忍程度越大，但是数据传输率同时也越慢。</p><h2 id="串口通信模块-SerialPort"><a href="#串口通信模块-SerialPort" class="headerlink" title="串口通信模块(SerialPort)"></a>串口通信模块(SerialPort)</h2><ul><li><strong>配置IO文件</strong><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.IO.Ports;</span><br></pre></td></tr></table></figure></li><li><strong>图标</strong></li></ul><img src="https://img-blog.csdnimg.cn/20181219154748906.png"><table><thead><tr><th>属性</th><th>介绍</th></tr></thead><tbody><tr><td>BaudRate</td><td>波特率</td></tr><tr><td>DataBits</td><td>数据位</td></tr><tr><td>Parity</td><td>奇偶校验位</td></tr><tr><td>PortName</td><td>端口号</td></tr><tr><td>StopBits</td><td>停止位</td></tr><tr><td>ByteToRead</td><td>获取输入缓冲区的</td></tr><tr><td>IsOpen</td><td>获取是否开启串口</td></tr></tbody></table><ul><li><strong>Serialport 通信模块的事件</strong></li></ul><img src="https://img-blog.csdnimg.cn/2018121915571354.png"><p>在这里我们只用到DataReceived串口接收函数，如需了解另外两个请自己查阅</p><table><thead><tr><th>事件</th><th>介绍</th></tr></thead><tbody><tr><td>DataReceived</td><td>串口接收函数</td></tr><tr><td>ErrorReceived</td><td>串口数据接收错误</td></tr><tr><td>PinChanged</td><td>串口号发生改变</td></tr></tbody></table><h2 id="串口窗口介绍"><a href="#串口窗口介绍" class="headerlink" title="串口窗口介绍"></a>串口窗口介绍</h2><img src="https://img-blog.csdnimg.cn/20181219161228702.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpY2tpbHlnb3U=,size_10,color_FF0000,t_70"><p><strong>由图可以看出正常温度区间设置的是20-25度之间，测试温度的过程中温度曲线黄色的为正常的曲线，红色的曲线为温度异常。温度刷新，温度曲线重新读取画线</strong></p><p>在窗体上添加4个Groupbox控件：</p><ul><li>第一个：串口设置</li><li>第二的：接收数据</li><li>第三个：发送数据</li><li>第四个：温度曲线显示</li></ul><h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><h2 id="串口初始化函数"><a href="#串口初始化函数" class="headerlink" title="串口初始化函数"></a>串口初始化函数</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button_open_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">           <span class="comment">// if(Button_on == 1)</span></span><br><span class="line">            <span class="keyword">if</span> (!serialPort1.IsOpen)<span class="comment">//如果串口是开</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.PortName = comboBox1.Text;<span class="comment">//端口号</span></span><br><span class="line">                serialPort1.BaudRate = Convert.ToInt32(comboBox2.Text, <span class="number">10</span>);<span class="comment">//波特率</span></span><br><span class="line">                <span class="built_in">float</span> f = Convert.ToSingle(comboBox3.Text.Trim());<span class="comment">//trim去除字符串前后的空格</span></span><br><span class="line">                <span class="keyword">if</span> (f == <span class="number">0</span>)<span class="comment">//设置停止位</span></span><br><span class="line">                    serialPort1.StopBits = StopBits.None;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (f == <span class="number">1.5</span>)</span><br><span class="line">                    serialPort1.StopBits = StopBits.OnePointFive;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (f == <span class="number">1</span>)</span><br><span class="line">                    serialPort1.StopBits = StopBits.One;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (f == <span class="number">2</span>)</span><br><span class="line">                    serialPort1.StopBits = StopBits.Two;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    serialPort1.StopBits = StopBits.One;</span><br><span class="line">                <span class="comment">//设置数据位</span></span><br><span class="line">                serialPort1.DataBits = Convert.ToInt32(comboBox4.Text.Trim());</span><br><span class="line">                <span class="comment">//设置奇偶校验位</span></span><br><span class="line">                <span class="built_in">string</span> s = comboBox5.Text.Trim();</span><br><span class="line">                <span class="keyword">if</span> (s.CompareTo(<span class="string">&quot;无&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    serialPort1.Parity = Parity.None;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s.CompareTo(<span class="string">&quot;奇校验&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    serialPort1.Parity = Parity.Odd;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (s.CompareTo(<span class="string">&quot;偶校验&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">                    serialPort1.Parity = Parity.Even;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    serialPort1.Parity = Parity.None;</span><br><span class="line">                <span class="keyword">try</span></span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.Open();     <span class="comment">//打开串口</span></span><br><span class="line">                    button_open.Text = <span class="string">&quot;关闭串口&quot;</span>;</span><br><span class="line">                    comboBox1.Enabled = <span class="literal">false</span>;<span class="comment">//关闭使能</span></span><br><span class="line">                    comboBox2.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox3.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox4.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox5.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox6.Enabled = <span class="literal">false</span>;</span><br><span class="line">                    comboBox7.Enabled = <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                catch</span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;串口打开失败！&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span><span class="comment">//如果串口是打开的则将其关闭</span></span><br><span class="line">            &#123;</span><br><span class="line">                serialPort1.Close();</span><br><span class="line">                button_open.Text = <span class="string">&quot;打开串口&quot;</span>;</span><br><span class="line">                comboBox1.Enabled = <span class="literal">true</span>;<span class="comment">//使能配置</span></span><br><span class="line">                comboBox2.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox3.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox4.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox5.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox6.Enabled = <span class="literal">true</span>;</span><br><span class="line">                comboBox7.Enabled = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="画坐标图"><a href="#画坐标图" class="headerlink" title="画坐标图"></a>画坐标图</h2><img src="https://img-blog.csdnimg.cn/20181219164023414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpY2tpbHlnb3U=,size_16,color_FF0000,t_70"><h3 id="画坐标时用到头文件："><a href="#画坐标时用到头文件：" class="headerlink" title="画坐标时用到头文件："></a>画坐标时用到头文件：</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Drawing2D;</span><br></pre></td></tr></table></figure><h3 id="画线时用到类graphics"><a href="#画线时用到类graphics" class="headerlink" title="画线时用到类graphics"></a><strong>画线时用到类graphics</strong></h3><blockquote><p>graphics是抽象函数不能实例化，并且画线的时候编辑器是以左上角为坐标原点画的，想要把它改成左下角，只能自己计算坐标点，根据自己的需求把它画成称自己想要的，如上图我把（50,218）这个坐标表示成原点</p></blockquote><p><strong>注意：Graphics是在控件Groupbox控件下事件Paint下写的</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">groupBox4_Paint</span>(<span class="params"><span class="built_in">object</span> sender, PaintEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            FontFamily family = <span class="keyword">new</span> FontFamily(<span class="string">&quot;Arial&quot;</span>);<span class="comment">//实例化字体的类型</span></span><br><span class="line">            <span class="built_in">int</span> fontstyle = (<span class="built_in">int</span>)FontStyle.Italic;<span class="comment">//设置字体的样式</span></span><br><span class="line">            GraphicsPath gp = <span class="keyword">new</span> GraphicsPath();</span><br><span class="line">            <span class="built_in">string</span> Str;</span><br><span class="line">            <span class="comment">//Draw y纵向轴绘制</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">14</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Graphics.DrawLine(TablePen, StartPrint + i * Unit_length, StartPrint - <span class="number">32</span>, StartPrint + i * Unit_length, <span class="number">10</span> * Unit_length + <span class="number">18</span>);<span class="comment">//画线</span></span><br><span class="line">                gp.AddString((i * <span class="number">10</span>).ToString(), family, fontstyle, <span class="number">8</span>, <span class="keyword">new</span> RectangleF(StartPrint + i * Unit_length - <span class="number">7</span>, <span class="number">10</span> * Unit_length + <span class="number">18</span> + <span class="number">4</span>, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);<span class="comment">//添加文字</span></span><br><span class="line">            &#125;</span><br><span class="line">            gp.AddString(<span class="string">&quot;时间(s)&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(groupBox4.ClientRectangle.Width / <span class="number">2</span> , <span class="number">9</span> * Unit_length + <span class="number">55</span>, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            Draw X 横向轴绘制</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                e.Graphics.DrawLine(TablePen, StartPrint, i * Unit_length + <span class="number">18</span>, StartPrint + <span class="number">14</span> * Unit_length, i * Unit_length + <span class="number">18</span>);<span class="comment">//画线</span></span><br><span class="line">                Str = Convert.ToString((<span class="number">10</span> - i) * <span class="number">5</span>);</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">                    Str = <span class="string">&quot;50&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">10</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                gp.AddString(Str, family, fontstyle, <span class="number">8</span>, <span class="keyword">new</span> RectangleF(<span class="number">20</span>, i * Unit_length +<span class="number">16</span>, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);<span class="comment">//添加文字</span></span><br><span class="line">            &#125;</span><br><span class="line">            gp.AddString(<span class="string">&quot;温&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(<span class="number">0</span>, groupBox4.ClientRectangle.Height / <span class="number">2</span> - StartPrint, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            gp.AddString(<span class="string">&quot;度&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(<span class="number">0</span>, groupBox4.ClientRectangle.Height / <span class="number">2</span> + <span class="number">18</span> - StartPrint, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            gp.AddString(<span class="string">&quot;°C&quot;</span>, family, fontstyle, <span class="number">12</span>, <span class="keyword">new</span> RectangleF(<span class="number">0</span>, groupBox4.ClientRectangle.Height / <span class="number">2</span> + <span class="number">32</span> - StartPrint, <span class="number">400</span>, <span class="number">50</span>), <span class="literal">null</span>);</span><br><span class="line">            e.Graphics.DrawPath(Pens.White, gp);<span class="comment">//写文字</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="方法介绍"><a href="#方法介绍" class="headerlink" title="方法介绍"></a><strong>方法介绍</strong></h3><p><strong>DrawLine(Pen pen, int x1, int y1, int x2, int y2);</strong></p><blockquote><p>pen：定义线条的宽度、颜色、样式<br>画线由(x1,y1)向(x2,y2)画</p></blockquote><p><strong>public void AddString(string s, FontFamily family, int style, float emSize, RectangleF layoutRect, StringFormat format);</strong></p><blockquote><p>s：绘制的字符<br>family：绘制的字体类型<br>style：字体的样式<br>emsize：方形块的高度<br>layoutRect：文本的矩形<br>format：文本格式设置信息</p></blockquote><h3 id="c-延时函数"><a href="#c-延时函数" class="headerlink" title="c#延时函数"></a><strong>c#延时函数</strong></h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Delay</span>(<span class="params"><span class="built_in">int</span> milliSecond</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">int</span> start = Environment.TickCount;</span><br><span class="line">            <span class="keyword">while</span> (Math.Abs(Environment.TickCount - start) &lt; milliSecond)<span class="comment">//毫秒</span></span><br><span class="line">            &#123;</span><br><span class="line">                Application.DoEvents();<span class="comment">//可执行某无聊的操作</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><strong>关于Math.Abs():</strong><br>Environment.TickCount，内部API是用DWORD GetTickCount()来实现的，该属性的值从系统计时器派生，并以 32 位有符号整数的形式存储。因此，如果系统连续运行，TickCount 将在约 24.9 天内从零递增至 Int32. MaxValue ，然后跳至 Int32. MinValue （这是一个负数），再在接下来的 24.9 天内递增至零。DWORD是无符号的，而 Environment.TickCount属性返回的值是有符号的，所以有一半的值用负数表示！</p><h3 id="串口写函数"><a href="#串口写函数" class="headerlink" title="串口写函数"></a>串口写函数</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button_send_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;<span class="comment">//发送数据</span></span><br><span class="line">            <span class="keyword">if</span>(serialPort1.IsOpen)</span><br><span class="line">            &#123;<span class="comment">//如果串口开启</span></span><br><span class="line">                <span class="keyword">if</span> (textBox_send.Text.Trim() != <span class="string">&quot;&quot;</span>)<span class="comment">//如果框内不为空则</span></span><br><span class="line">                &#123;</span><br><span class="line">                    serialPort1.Write(textBox_send.Text.Trim());<span class="comment">//写数据</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    MessageBox.Show(<span class="string">&quot;发送框没有数据&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                MessageBox.Show(<span class="string">&quot;串口未打开&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="串口读函数（如果是温度传感器并选择温度传感器画温度曲线）"><a href="#串口读函数（如果是温度传感器并选择温度传感器画温度曲线）" class="headerlink" title="串口读函数（如果是温度传感器并选择温度传感器画温度曲线）"></a>串口读函数（如果是温度传感器并选择温度传感器画温度曲线）</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">post_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">float</span> Up, Dw,t;</span><br><span class="line">            Graphics graphics = groupBox4.CreateGraphics();</span><br><span class="line">            <span class="keyword">if</span> (!radioButton1.Checked)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">string</span> str = serialPort1.ReadExisting();<span class="comment">//字符串方式读</span></span><br><span class="line">                <span class="keyword">if</span>(!radioButton3.Checked)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//提取字符串中的数字</span></span><br><span class="line">                    <span class="built_in">string</span> result = System.Text.RegularExpressions.Regex.Replace(str, <span class="string">@&quot;[^0-9]+&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    Console.WriteLine(result);</span><br><span class="line">                    <span class="comment">//设置正常温度上限下限</span></span><br><span class="line">                    Dw = Convert.ToSingle(comboBox6.Text);</span><br><span class="line">                    Up = Convert.ToSingle(comboBox7.Text);</span><br><span class="line">                    <span class="keyword">if</span>(Dw&lt;Up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        t = Dw;</span><br><span class="line">                        Dw = Up;</span><br><span class="line">                        Up = t;</span><br><span class="line">                    &#125;</span><br><span class="line">                    dstr2 = Convert.ToSingle(result);<span class="comment">//字符串的转换成float</span></span><br><span class="line">                    textBox_T.Text = result + <span class="string">&quot;度&quot;</span>;</span><br><span class="line">                    textBox_receive.AppendText(str);</span><br><span class="line">                    <span class="comment">//正常温度的曲线</span></span><br><span class="line">                    <span class="keyword">if</span>(dstr2&gt;=Up&amp;&amp;dstr2&lt;=Dw)</span><br><span class="line">                    &#123;</span><br><span class="line">                        graphics.DrawLine(LinesPen, Origin_x + i * Unit_length, dstr1, Origin_x + (i+<span class="number">0.1f</span>) * Unit_length, Origin_y - dstr2 * <span class="number">4</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span><span class="comment">//异常温度的曲线</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        graphics.DrawLine(LinesEpen, Origin_x + i * Unit_length, dstr1, Origin_x + (i + <span class="number">0.1f</span>) * Unit_length, Origin_y - dstr2 * <span class="number">4</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    i += <span class="number">0.1f</span>;</span><br><span class="line">                    dstr1 = Origin_y - dstr2 * <span class="number">4</span>;</span><br><span class="line">                    Delay(<span class="number">1000</span>);<span class="comment">//不延时的话不显示</span></span><br><span class="line">                    <span class="comment">//textBox_T.Clear();无所谓</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    textBox_receive.AppendText(str);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">byte</span> data;</span><br><span class="line">                data = (<span class="built_in">byte</span>)serialPort1.ReadByte();</span><br><span class="line">                <span class="built_in">string</span> str = Convert.ToString(data, <span class="number">16</span>).ToUpper();<span class="comment">//</span></span><br><span class="line">                textBox_receive.AppendText(<span class="string">&quot;0x&quot;</span> + (str.Length == <span class="number">1</span> ? <span class="string">&quot;0&quot;</span> + str : str) + <span class="string">&quot;  &quot;</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/lickilygou/article/details/85102538">c#串口调试助手温度曲线的显示-上位机的开发-串口参数介绍</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">实现基础串口功能，通过正则表达式解析数据等</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="通讯" scheme="https://zml3589110.github.io/categories/%E9%80%9A%E8%AE%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="串口通讯" scheme="https://zml3589110.github.io/tags/%E4%B8%B2%E5%8F%A3%E9%80%9A%E8%AE%AF/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="曲线" scheme="https://zml3589110.github.io/tags/%E6%9B%B2%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>C# winfrom 全屏自适应屏幕分辨率</title>
    <link href="https://zml3589110.github.io/posts/3006246467.html"/>
    <id>https://zml3589110.github.io/posts/3006246467.html</id>
    <published>2022-10-27T08:41:20.000Z</published>
    <updated>2022-10-27T08:43:01.333Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Rectangle rect = <span class="keyword">new</span> Rectangle();</span><br><span class="line">rect = Screen.GetWorkingArea(<span class="keyword">this</span>);</span><br><span class="line">   </span><br><span class="line"><span class="keyword">this</span>.Width = rect.Width;<span class="comment">//屏幕宽</span></span><br><span class="line"><span class="keyword">this</span>.Height = rect.Height;<span class="comment">//屏幕高</span></span><br><span class="line"><span class="keyword">this</span>.ControlBox = <span class="literal">false</span>;   <span class="comment">// 设置不出现关闭按钮</span></span><br><span class="line"><span class="keyword">this</span>.FormBorderStyle = FormBorderStyle.None;<span class="comment">//无边框</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//名字空间&quot;System.Windows.Forms&quot;中的&quot;Screen&quot;类的GetWorkingArea（）方法</span></span><br><span class="line"><span class="comment">//Rectangle rect = new Rectangle ( ) ;</span></span><br><span class="line"><span class="comment">//rect = Screen.GetWorkingArea ( this ) ;</span></span><br><span class="line"><span class="comment">//&quot;屏幕宽&quot;＝ rect.Width ;</span></span><br><span class="line"><span class="comment">//&quot;屏幕长&quot;＝ rect.Height ;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/winformasp/articles/12065948.html">winfrom 全屏自适应屏幕分辨率</a></li><li><a href="https://bbs.csdn.net/topics/60157463?list=lz">怎样得到桌面的大小？</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# winfrom 全屏自适应屏幕分辨率</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="GetWorkingArea" scheme="https://zml3589110.github.io/tags/GetWorkingArea/"/>
    
    <category term="分辨率" scheme="https://zml3589110.github.io/tags/%E5%88%86%E8%BE%A8%E7%8E%87/"/>
    
  </entry>
  
  <entry>
    <title>C#操作注册表（读写注册表）</title>
    <link href="https://zml3589110.github.io/posts/1321126257.html"/>
    <id>https://zml3589110.github.io/posts/1321126257.html</id>
    <published>2022-10-27T06:01:20.000Z</published>
    <updated>2022-10-27T06:22:44.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注册表起源和作用"><a href="#注册表起源和作用" class="headerlink" title="注册表起源和作用"></a>注册表起源和作用</h1><p>自Windows95以来的所有Windows版本中，注册表是包含Windows安装，用户首选项，以及已安装软件和设备的所有配置信息的核心存储库。目前，几乎所有的商用软件都使用注册表来存储这些信息，COM组件必须把它们的信息存储在注册表中，才能有客户端调用。.NET Framework引入了独立存储器的概念，通过它应用程序可以在文件中存储专用于每个用户的信息，.NET Framework将确保为每个在机器上注册的用户单独地存储数据。<br>注册表的库和.NET库一样复杂，它包括访问注册表的类。其中有两个类涉及注册表，即Registry和RegistryKey，这两个类都在Microsoft Win32 名称控件中。</p><h1 id="注册表简介"><a href="#注册表简介" class="headerlink" title="注册表简介"></a>注册表简介</h1><blockquote><p><strong>注册表的层次结构非常类似于文件系统的层次结构。查看和修改注册表的内容的一般方式是使用regedit或regedt32应用程序。</strong></p></blockquote><p>在运行中输入：regedit，可以看到如下界面：</p><img src="https://img-blog.csdn.net/20170313145601719?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313145719901?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313145726604?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313145909325?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h1 id="NET-注册表类"><a href="#NET-注册表类" class="headerlink" title="NET 注册表类"></a>NET 注册表类</h1><blockquote><p><strong>要访问注册表，就可以使用Registry和RegistryKey。</strong></p></blockquote><p>RegistryKey实例表示一个注册表键。这个类实现的方法可以浏览子键，创建新键，读取或修改键中的值。换句话说，通过这类可以实现对注册建所有的操作，包括设置键的安全级别。<br>Registry类只能对注册表键进行单一的访问，以执行简单的操作。Registry类的另一个作用是提供表示顶级键的RegistryKey实例，以便开始在注册表中定位。Registry通过静态属性来提供这些实例。<br>那么接下来先介绍一下Registry 类<br>作用：提供了 RegistryKey 表示 Windows 注册表中的根键的对象和 static 方法，以访问键&#x2F;值对。</p><h2 id="Registry方法"><a href="#Registry方法" class="headerlink" title="Registry方法"></a>Registry方法</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>GetValue(String, String, Object)</td><td>检索与指定的注册表项中具有指定名称关联的值。 如果未在指定的键中找到的名称，将返回你提供一个默认值或 null 如果指定的键不存在。</td></tr><tr><td>SetValue(String, String, Object)</td><td>设置指定的注册表项指定的名称&#x2F;值对。 如果指定的键不存在，则创建它。</td></tr><tr><td>SetValue(String, String, Object, RegistryValueKind)</td><td>使用指定的注册表数据类型的指定的注册表项设置的名称&#x2F;值对。 如果指定的键不存在，则创建它。</td></tr></tbody></table><h2 id="Registry字段"><a href="#Registry字段" class="headerlink" title="Registry字段"></a>Registry字段</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>ClassesRoot</td><td>定义文档以及与这些类型相关联的属性类型 （或类）。 此字段中读取的 Windows 注册表基项 HKEY_CLASSES_ROOT。</td></tr><tr><td>CurrentConfig</td><td>包含与不是特定于用户的硬件相关的配置信息。 此字段中读取的 Windows 注册表基项 HKEY_CURRENT_CONFIG。</td></tr><tr><td>CurrentUser</td><td>包含有关当前用户首选项的信息。 此字段中读取的 Windows 注册表基项 HKEY_CURRENT_USER</td></tr><tr><td>DynData</td><td>已过时。 包含动态注册表数据。 此字段中读取的 Windows 注册表基项 HKEY_DYN_DATA。</td></tr><tr><td>LocalMachine</td><td>包含为本地计算机的配置数据。 此字段中读取的 Windows 注册表基项 HKEY_LOCAL_MACHINE。</td></tr><tr><td>PerformanceData</td><td>包含软件组件的性能信息。 此字段中读取的 Windows 注册表基项 HKEY_PERFORMANCE_DATA。</td></tr><tr><td>Users</td><td>包含有关默认用户配置信息。 此字段中读取的 Windows 注册表基项 HKEY_USERS。</td></tr></tbody></table><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>此类提供在运行 Windows 的计算机上的注册表中找到的标准的根键的集合。 注册表是有关应用程序、 用户和默认的系统设置的信息存储设施。 例如，应用程序可以使用注册表来存储信息，必须关闭该应用程序之后, 被保留并重新加载应用程序时访问这些信息。 例如，您可以存储颜色首选项、 屏幕位置或窗口的大小。 通过将信息存储在注册表中的其他位置，可以控制每个用户的此数据。<br>基或根 RegistryKey 实例公开的 Registry 类描述的子项和值在注册表中的基本存储机制。 所有键都是只读的因为注册表取决于它们存在。<br><strong>通过公开的项 Registry 是︰</strong></p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>ClassesRoot</td><td>存储有关类型 （类） 的信息以及它们的属性。</td></tr><tr><td>CurrentConfig</td><td>将存储非特定于用户的硬件信息。</td></tr><tr><td>CurrentUser</td><td>存储有关用户首选项的信息。</td></tr><tr><td>DynData</td><td>将动态数据存储。</td></tr><tr><td>LocalMachine</td><td>存储在本地计算机的配置信息。</td></tr><tr><td>PerformanceData</td><td>存储软件组件的性能的信息。</td></tr><tr><td>Users</td><td>存储有关默认用户配置信息。</td></tr></tbody></table><p><strong>一旦确定要在其下存储&#x2F;检索信息从注册表的根密钥，您可以使用 RegistryKey 类来添加或删除子项，并处理给定键的值。</strong><br>硬件设备可以将信息放在使用自动插接口注册表中。 用于安装设备驱动程序软件可以通过写入到标准 Api 在注册表中放信息。<br>用于获取和设置值的静态方法<br>在.NET Framework 2.0 版中， Registry 类还包含 staticGetValue 和 SetValue 用于设置和从注册表项中检索值的方法。 这些方法都将打开和关闭注册表项的每个使用它们，因此它们不会执行的时间以及中的类似方法 RegistryKey 类，当您访问大量的值。<br>RegistryKey 类还提供了允许您设置的注册表项，以进行检索之前，测试一个值的数据类型并删除注册表项的 Windows 访问控制安全性的方法。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h3><p><strong>下面的代码示例演示如何检索 HKEY_USERS 项的子项并打印到屏幕的名称。 使用 OpenSubKey 方法来创建感兴趣的特定子项的一个实例。 然后，可以使用中的其他操作 RegistryKey 来操作该注册表项。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Win32;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title">Reg</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Create a RegistryKey, which will access the HKEY_USERS</span></span><br><span class="line">        <span class="comment">// key in the registry of this machine.</span></span><br><span class="line">        RegistryKey rk = Registry.Users;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print out the keys.</span></span><br><span class="line">        PrintKeys(rk);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">PrintKeys</span>(<span class="params">RegistryKey rkey</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Retrieve all the subkeys for the specified key.</span></span><br><span class="line">        String [] names = rkey.GetSubKeyNames();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> icount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Subkeys of &quot;</span> + rkey.Name);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;-----------------------------------------------&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Print the contents of the array to the console.</span></span><br><span class="line">        <span class="keyword">foreach</span> (String s <span class="keyword">in</span> names) &#123;</span><br><span class="line">            Console.WriteLine(s);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// The following code puts a limit on the number</span></span><br><span class="line">            <span class="comment">// of keys displayed.  Comment it out to print the</span></span><br><span class="line">            <span class="comment">// complete list.</span></span><br><span class="line">            icount++;</span><br><span class="line">            <span class="keyword">if</span> (icount &gt;= <span class="number">10</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h3><p><strong>下面的代码示例将多个数据类型的值存储在一个示例键中创建密钥，因为它这样做了，然后检索并显示的值。 该示例演示如何存储和检索默认 （无名） 的名称&#x2F;值对，以及如何使用 defaultValue 名称&#x2F;值对不存在时。</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> Microsoft.Win32;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">// The name of the key must include a valid root.</span></span><br><span class="line">        <span class="keyword">const</span> <span class="built_in">string</span> userRoot = <span class="string">&quot;HKEY_CURRENT_USER&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="built_in">string</span> subkey = <span class="string">&quot;RegistrySetValueExample&quot;</span>;</span><br><span class="line">        <span class="keyword">const</span> <span class="built_in">string</span> keyName = userRoot + <span class="string">&quot;\\&quot;</span> + subkey;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// An int value can be stored without specifying the</span></span><br><span class="line">        <span class="comment">// registry data type, but long values will be stored</span></span><br><span class="line">        <span class="comment">// as strings unless you specify the type. Note that</span></span><br><span class="line">        <span class="comment">// the int is stored in the default name/value</span></span><br><span class="line">        <span class="comment">// pair.</span></span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;&quot;</span>, <span class="number">5280</span>);</span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestLong&quot;</span>, <span class="number">12345678901234</span>,</span><br><span class="line">            RegistryValueKind.QWord);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Strings with expandable environment variables are</span></span><br><span class="line">        <span class="comment">// stored as ordinary strings unless you specify the</span></span><br><span class="line">        <span class="comment">// data type.</span></span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestExpand&quot;</span>, <span class="string">&quot;My path: %path%&quot;</span>);</span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestExpand2&quot;</span>, <span class="string">&quot;My path: %path%&quot;</span>,</span><br><span class="line">            RegistryValueKind.ExpandString);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Arrays of strings are stored automatically as </span></span><br><span class="line">        <span class="comment">// MultiString. Similarly, arrays of Byte are stored</span></span><br><span class="line">        <span class="comment">// automatically as Binary.</span></span><br><span class="line">        <span class="built_in">string</span>[] strings = &#123;<span class="string">&quot;One&quot;</span>, <span class="string">&quot;Two&quot;</span>, <span class="string">&quot;Three&quot;</span>&#125;;</span><br><span class="line">        Registry.SetValue(keyName, <span class="string">&quot;TestArray&quot;</span>, strings);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Your default value is returned if the name/value pair</span></span><br><span class="line">        <span class="comment">// does not exist.</span></span><br><span class="line">        <span class="built_in">string</span> noSuch = (<span class="built_in">string</span>) Registry.GetValue(keyName, </span><br><span class="line">            <span class="string">&quot;NoSuchName&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Return this default if NoSuchName does not exist.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;\r\nNoSuchName: &#123;0&#125;&quot;</span>, noSuch);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Retrieve the int and long values, specifying </span></span><br><span class="line">        <span class="comment">// numeric default values in case the name/value pairs</span></span><br><span class="line">        <span class="comment">// do not exist. The int value is retrieved from the</span></span><br><span class="line">        <span class="comment">// default (nameless) name/value pair for the key.</span></span><br><span class="line">        <span class="built_in">int</span> tInteger = (<span class="built_in">int</span>) Registry.GetValue(keyName, <span class="string">&quot;&quot;</span>, <span class="number">-1</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;(Default): &#123;0&#125;&quot;</span>, tInteger);</span><br><span class="line">        <span class="built_in">long</span> tLong = (<span class="built_in">long</span>) Registry.GetValue(keyName, <span class="string">&quot;TestLong&quot;</span>,</span><br><span class="line">            <span class="built_in">long</span>.MinValue);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;TestLong: &#123;0&#125;&quot;</span>, tLong);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// When retrieving a MultiString value, you can specify</span></span><br><span class="line">        <span class="comment">// an array for the default return value. </span></span><br><span class="line">        <span class="built_in">string</span>[] tArray = (<span class="built_in">string</span>[]) Registry.GetValue(keyName,</span><br><span class="line">            <span class="string">&quot;TestArray&quot;</span>,</span><br><span class="line">            <span class="keyword">new</span> <span class="built_in">string</span>[] &#123;<span class="string">&quot;Default if TestArray does not exist.&quot;</span>&#125;);</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>; i&lt;tArray.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;TestArray(&#123;0&#125;): &#123;1&#125;&quot;</span>, i, tArray[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// A string with embedded environment variables is not</span></span><br><span class="line">        <span class="comment">// expanded if it was stored as an ordinary string.</span></span><br><span class="line">        <span class="built_in">string</span> tExpand = (<span class="built_in">string</span>) Registry.GetValue(keyName,</span><br><span class="line">             <span class="string">&quot;TestExpand&quot;</span>, </span><br><span class="line">             <span class="string">&quot;Default if TestExpand does not exist.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;TestExpand: &#123;0&#125;&quot;</span>, tExpand);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// A string stored as ExpandString is expanded.</span></span><br><span class="line">        <span class="built_in">string</span> tExpand2 = (<span class="built_in">string</span>) Registry.GetValue(keyName,</span><br><span class="line">            <span class="string">&quot;TestExpand2&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Default if TestExpand2 does not exist.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;TestExpand2: &#123;0&#125;...&quot;</span>,</span><br><span class="line">            tExpand2.Substring(<span class="number">0</span>, <span class="number">40</span>));</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;\r\nUse the registry editor to examine the key.&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Press the Enter key to delete the key.&quot;</span>);</span><br><span class="line">        Console.ReadLine();</span><br><span class="line">        Registry.CurrentUser.DeleteSubKey(subkey);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// This code example produces output similar to the following:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//NoSuchName: Return this default if NoSuchName does not exist.</span></span><br><span class="line"><span class="comment">//(Default): 5280</span></span><br><span class="line"><span class="comment">//TestLong: 12345678901234</span></span><br><span class="line"><span class="comment">//TestArray(0): One</span></span><br><span class="line"><span class="comment">//TestArray(1): Two</span></span><br><span class="line"><span class="comment">//TestArray(2): Three</span></span><br><span class="line"><span class="comment">//TestExpand: My path: %path%</span></span><br><span class="line"><span class="comment">//TestExpand2: My path: D:\Program Files\Microsoft.NET\...</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Use the registry editor to examine the key.</span></span><br><span class="line"><span class="comment">//Press the Enter key to delete the key.</span></span><br></pre></td></tr></table></figure><h1 id="RegistryKey-类"><a href="#RegistryKey-类" class="headerlink" title="RegistryKey 类"></a>RegistryKey 类</h1><img src="https://img-blog.csdn.net/20170313154357183?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><img src="https://img-blog.csdn.net/20170313154403933?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveW91bmdoYWlxaW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast"><h1 id="C-注册表项的创建，打开与删除"><a href="#C-注册表项的创建，打开与删除" class="headerlink" title="C#注册表项的创建，打开与删除"></a>C#注册表项的创建，打开与删除</h1><h2 id="1：创建"><a href="#1：创建" class="headerlink" title="1：创建"></a>1：创建</h2><p><strong>创建注册表项主要用到RegistryKey 的CreateSubKey()方法。如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">RegistryKey software = key.CreateSubKey(<span class="string">&quot;software\\test&quot;</span>);</span><br><span class="line"><span class="comment">//在HKEY_LOCAL_MACHINE\SOFTWARE下新建名为test的注册表项。如果已经存在则不影响！</span></span><br></pre></td></tr></table></figure><h2 id="2：打开"><a href="#2：打开" class="headerlink" title="2：打开"></a>2：打开</h2><p><strong>打开注册表项主要用到RegistryKey 的OpenSubKey()方法。如：<br>注意，如果该注册表项不存在，这调用这个方法会抛出异常</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">RegistryKey software = key.OpenSubKey(<span class="string">&quot;software\\test&quot;</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//注意该方法后面还可以有一个布尔型的参数，true表示可以写入。</span></span><br></pre></td></tr></table></figure><h2 id="3：删除"><a href="#3：删除" class="headerlink" title="3：删除"></a>3：删除</h2><p><strong>删除注册表项主要用到RegistryKey 的DeleteSubKey()方法。如：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">key.DeleteSubKey(<span class="string">&quot;software\\test&quot;</span>,<span class="literal">true</span>); <span class="comment">//该方法无返回值，直接调用即可</span></span><br><span class="line">key.Close();</span><br></pre></td></tr></table></figure><p><strong>注意，如果该注册表项不存在，这调用这个方法会抛出异常</strong></p><h1 id="键值的创建-设置值、修改-，读取和删除"><a href="#键值的创建-设置值、修改-，读取和删除" class="headerlink" title="键值的创建(设置值、修改)，读取和删除"></a>键值的创建(设置值、修改)，读取和删除</h1><h2 id="1：创建-设置值、修改"><a href="#1：创建-设置值、修改" class="headerlink" title="1：创建(设置值、修改)"></a>1：创建(设置值、修改)</h2><p><strong>对键值的创建修改等操作主要用到RegistryKey 的SetValue()方法</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey key = Registry.LocalMachine;</span><br><span class="line">RegistryKey software = key.OpenSubKey(<span class="string">&quot;software\\test&quot;</span>,<span class="literal">true</span>); <span class="comment">//该项必须已存在</span></span><br><span class="line">software.SetValue(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;博客园&quot;</span>);</span><br><span class="line"><span class="comment">//在HKEY_LOCAL_MACHINE\SOFTWARE\test下创建一个名为“test”，值为“博客园”的键值。如果该键值原本已经存在，则会修改替换原来的键值，如果不存在则是创建该键值。</span></span><br><span class="line"><span class="comment">// 注意：SetValue()还有第三个参数，主要是用于设置键值的类型，如：字符串，二进制，Dword等等~~默认是字符串。如：</span></span><br><span class="line"><span class="comment">// software.SetValue(&quot;test&quot;, &quot;0&quot;, RegistryValueKind.DWord); //二进制信息</span></span><br><span class="line">Key.Close();</span><br></pre></td></tr></table></figure><h2 id="2：读取"><a href="#2：读取" class="headerlink" title="2：读取"></a>2：读取</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> info = <span class="string">&quot;&quot;</span>;</span><br><span class="line">RegistryKey Key;</span><br><span class="line">Key = Registry.LocalMachine;</span><br><span class="line">myreg = Key.OpenSubKey(<span class="string">&quot;software\\test&quot;</span>);</span><br><span class="line"><span class="comment">// myreg = Key.OpenSubKey(&quot;software\\test&quot;,true);</span></span><br><span class="line">info = myreg.GetValue(<span class="string">&quot;test&quot;</span>).ToString();</span><br><span class="line">myreg.Close();</span><br></pre></td></tr></table></figure><p><strong>info结果为：博客园</strong></p><h2 id="3：删除-1"><a href="#3：删除-1" class="headerlink" title="3：删除"></a>3：删除</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RegistryKey delKey = Registry.LocalMachine.OpenSubKey(<span class="string">&quot;Software\\test&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">delKey.DeleteValue(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">delKey.Close();</span><br></pre></td></tr></table></figure><blockquote><p><strong>细心的读者可能发现了第二个例子中OpenSubKey()方法参数与其他例子的不同。<br>如果你要修改键值，包括创建、设置、删除键值等都要在方法后面加个布尔参数，设置为true，表示可写可改；如果仅仅只是读取键值可以不加，此时可写关闭，你不能再往里写值(当然，你要加也可以true)！<br>还有读者提到读写默认键值的问题，主要在设置、读取的方法中将键名置空则就是对默认键值的操作。<br>如：<br>software.SetValue(“”, “博客园”); &#x2F;&#x2F; 在HKEY_LOCAL_MACHINE\SOFTWARE\test修改默认键值的值为“博客园”。读取类似！<br>另外，默认的键值是不能删除的，所以不要用DeleteValue()方法去删除，会抛出异常的！</strong></p></blockquote><h1 id="判断注册表项是否存在"><a href="#判断注册表项是否存在" class="headerlink" title="判断注册表项是否存在"></a>判断注册表项是否存在</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsRegeditItemExist</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="built_in">string</span> [] subkeyNames;  </span><br><span class="line">    RegistryKey hkml = Registry.LocalMachine;  </span><br><span class="line">    RegistryKey software = hkml.OpenSubKey(<span class="string">&quot;SOFTWARE&quot;</span>);  </span><br><span class="line">    <span class="comment">//RegistryKey software = hkml.OpenSubKey(&quot;SOFTWARE&quot;, true);  </span></span><br><span class="line">    subkeyNames = software.GetSubKeyNames();  </span><br><span class="line">    <span class="comment">//取得该项下所有子项的名称的序列，并传递给预定的数组中  </span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">string</span> keyName <span class="keyword">in</span> subkeyNames)   </span><br><span class="line">    <span class="comment">//遍历整个数组  </span></span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">if</span> (keyName == <span class="string">&quot;test&quot;</span>)  </span><br><span class="line">        <span class="comment">//判断子项的名称  </span></span><br><span class="line">        &#123;   </span><br><span class="line">            hkml.Close();  </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span> ;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    hkml.Close();  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四：判断键值是否存在这里写代码片"><a href="#四：判断键值是否存在这里写代码片" class="headerlink" title="四：判断键值是否存在这里写代码片"></a>四：判断键值是否存在这里写代码片</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">IsRegeditKeyExit</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">string</span>[] subkeyNames;</span><br><span class="line">  RegistryKey hkml = Registry.LocalMachine;</span><br><span class="line">  RegistryKey software = hkml.OpenSubKey(<span class="string">&quot;SOFTWARE\\test&quot;</span>);</span><br><span class="line">  <span class="comment">//RegistryKey software = hkml.OpenSubKey(&quot;SOFTWARE\\test&quot;, true);</span></span><br><span class="line">  subkeyNames = software.GetValueNames();</span><br><span class="line">  <span class="comment">//取得该项下所有键值的名称的序列，并传递给预定的数组中</span></span><br><span class="line">  <span class="keyword">foreach</span> (<span class="built_in">string</span> keyName  <span class="keyword">in</span> subkeyNames)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> (keyName ==  <span class="string">&quot;test&quot;</span>) <span class="comment">//判断键值的名称</span></span><br><span class="line">    &#123;</span><br><span class="line">        hkml.Close();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;    </span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  hkml.Close();</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/younghaiqing/article/details/61918968">C#读写注册表</a></li><li><a href="https://www.cnblogs.com/txw1958/archive/2012/08/01/csharp-regidit.html">C#操作注册表</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">对注册表读写等基础操作</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Windows" scheme="https://zml3589110.github.io/categories/Windows/"/>
    
    <category term="注册表" scheme="https://zml3589110.github.io/categories/%E6%B3%A8%E5%86%8C%E8%A1%A8/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="注册表" scheme="https://zml3589110.github.io/tags/%E6%B3%A8%E5%86%8C%E8%A1%A8/"/>
    
    <category term="读写" scheme="https://zml3589110.github.io/tags/%E8%AF%BB%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>C#获取硬件信息（封装类）</title>
    <link href="https://zml3589110.github.io/posts/2407017966.html"/>
    <id>https://zml3589110.github.io/posts/2407017966.html</id>
    <published>2022-10-25T01:40:20.000Z</published>
    <updated>2022-10-25T01:51:16.855Z</updated>
    
    <content type="html"><![CDATA[<h1 id="所获取的系统信息"><a href="#所获取的系统信息" class="headerlink" title="所获取的系统信息"></a>所获取的系统信息</h1><p>您可以获取您的系统信息，如处理器 ID、硬盘序列号、系统 MAC 地址、主板制造商、主板产品 ID、CD-DVD 驱动器路径、BIOS 制造商、BIOS 序列号、BIOS 标题、系统帐户名称、物理 RAM 内存, 主板上的 RAM 插槽编号, CPU 制造商, CPU 的当前时钟速度, 默认 IP 网关, CPU 速度, 获取当前语言, 系统信息, 处理器信息, 获取计算机名称。</p><h1 id="创建一个-Windows-窗体应用程序（form1）"><a href="#创建一个-Windows-窗体应用程序（form1）" class="headerlink" title="创建一个 Windows 窗体应用程序（form1）"></a>创建一个 Windows 窗体应用程序（form1）</h1><p>直接默认创建即可。</p><h1 id="添加参考（也可以在cs中添加using来使用）"><a href="#添加参考（也可以在cs中添加using来使用）" class="headerlink" title="添加参考（也可以在cs中添加using来使用）"></a>添加参考（也可以在cs中添加using来使用）</h1><p>添加“ System.Management ”的引用以使用C#获取计算机硬件信息。<br>请参见下图以在项目中添加参考。</p><img src="https://img-blog.csdnimg.cn/315bdf4681894d13b754879a91dbf0bd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWxsd2F5Mg==,size_17,color_FFFFFF,t_70,g_se,x_16"><p><strong>添加参考:</strong></p><img src="https://img-blog.csdnimg.cn/b79ce6757c4941629d1a6cf25e569664.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAYWxsd2F5Mg==,size_20,color_FFFFFF,t_70,g_se,x_16"><p>添加“System.Management”的引用</p><h1 id="添加类文件"><a href="#添加类文件" class="headerlink" title="添加类文件"></a>添加类文件</h1><p>您可能会阅读：<a href="https://codescratcher.com/net-c/passing-parameters-from-one-window-to-another-window-c/">将参数从一个窗口传递到另一个窗口 c#</a></p><p>在您的项目中将类文件名添加为“ HardwareInfo.cs ”。在您的类文件中添加以下代码。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Management;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">HardwareInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Processor Id.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetProcessorId</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;win32_processor&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        String Id = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line"> </span><br><span class="line">            Id = mo.Properties[<span class="string">&quot;processorID&quot;</span>].Value.ToString();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Id;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving HDD Serial No.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetHDDSerialNo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mangnmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_LogicalDisk&quot;</span>);</span><br><span class="line">        ManagementObjectCollection mcol = mangnmt.GetInstances();</span><br><span class="line">        <span class="built_in">string</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject strt <span class="keyword">in</span> mcol)</span><br><span class="line">        &#123;</span><br><span class="line">            result += Convert.ToString(strt[<span class="string">&quot;VolumeSerialNumber&quot;</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving System MAC Address.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetMACAddress</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_NetworkAdapterConfiguration&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        <span class="built_in">string</span> MACAddress = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (MACAddress == String.Empty)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((<span class="built_in">bool</span>)mo[<span class="string">&quot;IPEnabled&quot;</span>] == <span class="literal">true</span>) MACAddress = mo[<span class="string">&quot;MacAddress&quot;</span>].ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            mo.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        MACAddress = MACAddress.Replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> MACAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Motherboard Manufacturer.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBoardMaker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BaseBoard&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Manufacturer&quot;</span>).ToString();</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Board Maker: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Motherboard Product Id.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBoardProductId</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BaseBoard&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Product&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Product: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving CD-DVD Drive Path.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetCdRomDrive</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_CDROMDrive&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Drive&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;CD ROM Drive Letter: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving BIOS Maker.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBIOSmaker</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Manufacturer&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Maker: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving BIOS Serial No.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBIOSserNo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;SerialNumber&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Serial Number: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving BIOS Caption.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetBIOScaption</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Caption&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Caption: Unknown&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving System Account Name.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetAccountName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_UserAccount&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line"> </span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;Name&quot;</span>).ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User Account Name: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Physical Ram Memory.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetPhysicalMemory</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementScope oMs = <span class="keyword">new</span> ManagementScope();</span><br><span class="line">        ObjectQuery oQuery = <span class="keyword">new</span> ObjectQuery(<span class="string">&quot;SELECT Capacity FROM Win32_PhysicalMemory&quot;</span>);</span><br><span class="line">        ManagementObjectSearcher oSearcher = <span class="keyword">new</span> ManagementObjectSearcher(oMs, oQuery);</span><br><span class="line">        ManagementObjectCollection oCollection = oSearcher.Get();</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">long</span> MemSize = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">long</span> mCap = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// In case more than one Memory sticks are installed</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> oCollection)</span><br><span class="line">        &#123;</span><br><span class="line">            mCap = Convert.ToInt64(obj[<span class="string">&quot;Capacity&quot;</span>]);</span><br><span class="line">            MemSize += mCap;</span><br><span class="line">        &#125;</span><br><span class="line">        MemSize = (MemSize / <span class="number">1024</span>) / <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> MemSize.ToString() + <span class="string">&quot;MB&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving No of Ram Slot on Motherboard.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetNoRamSlots</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="built_in">int</span> MemSlots = <span class="number">0</span>;</span><br><span class="line">        ManagementScope oMs = <span class="keyword">new</span> ManagementScope();</span><br><span class="line">        ObjectQuery oQuery2 = <span class="keyword">new</span> ObjectQuery(<span class="string">&quot;SELECT MemoryDevices FROM Win32_PhysicalMemoryArray&quot;</span>);</span><br><span class="line">        ManagementObjectSearcher oSearcher2 = <span class="keyword">new</span> ManagementObjectSearcher(oMs, oQuery2);</span><br><span class="line">        ManagementObjectCollection oCollection2 = oSearcher2.Get();</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> oCollection2)</span><br><span class="line">        &#123;</span><br><span class="line">            MemSlots = Convert.ToInt32(obj[<span class="string">&quot;MemoryDevices&quot;</span>]);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> MemSlots.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Get CPU Temprature.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> method for retrieving the CPU Manufacturer</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> using the WMI class</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> CPU Manufacturer</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetCPUManufacturer</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">string</span> cpuMan = String.Empty;</span><br><span class="line">        <span class="comment">//create an instance of the Managemnet class with the</span></span><br><span class="line">        <span class="comment">//Win32_Processor class</span></span><br><span class="line">        ManagementClass mgmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">        <span class="comment">//create a ManagementObjectCollection to loop through</span></span><br><span class="line">        ManagementObjectCollection objCol = mgmt.GetInstances();</span><br><span class="line">        <span class="comment">//start our loop for all processors found</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> objCol)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cpuMan == String.Empty)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// only return manufacturer from first CPU</span></span><br><span class="line">                cpuMan = obj.Properties[<span class="string">&quot;Manufacturer&quot;</span>].Value.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cpuMan;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> method to retrieve the CPU&#x27;s current</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> clock speed using the WMI class</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Clock speed</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">GetCPUCurrentClockSpeed</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">int</span> cpuClockSpeed = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//create an instance of the Managemnet class with the</span></span><br><span class="line">        <span class="comment">//Win32_Processor class</span></span><br><span class="line">        ManagementClass mgmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">        <span class="comment">//create a ManagementObjectCollection to loop through</span></span><br><span class="line">        ManagementObjectCollection objCol = mgmt.GetInstances();</span><br><span class="line">        <span class="comment">//start our loop for all processors found</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> objCol)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (cpuClockSpeed == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// only return cpuStatus from first CPU</span></span><br><span class="line">                cpuClockSpeed = Convert.ToInt32(obj.Properties[<span class="string">&quot;CurrentClockSpeed&quot;</span>].Value.ToString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//return the status</span></span><br><span class="line">        <span class="keyword">return</span> cpuClockSpeed;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> method to retrieve the network adapters</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> default IP gateway using WMI</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> adapters default IP gateway</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetDefaultIPGateway</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//create out management class object using the</span></span><br><span class="line">        <span class="comment">//Win32_NetworkAdapterConfiguration class to get the attributes</span></span><br><span class="line">        <span class="comment">//of the network adapter</span></span><br><span class="line">        ManagementClass mgmt = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_NetworkAdapterConfiguration&quot;</span>);</span><br><span class="line">        <span class="comment">//create our ManagementObjectCollection to get the attributes with</span></span><br><span class="line">        ManagementObjectCollection objCol = mgmt.GetInstances();</span><br><span class="line">        <span class="built_in">string</span> gateway = String.Empty;</span><br><span class="line">        <span class="comment">//loop through all the objects we find</span></span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject obj <span class="keyword">in</span> objCol)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (gateway == String.Empty)  <span class="comment">// only return MAC Address from first card</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//grab the value from the first network adapter we find</span></span><br><span class="line">                <span class="comment">//you can change the string to an array and get all</span></span><br><span class="line">                <span class="comment">//network adapters found as well</span></span><br><span class="line">                <span class="comment">//check to see if the adapter&#x27;s IPEnabled</span></span><br><span class="line">                <span class="comment">//equals true</span></span><br><span class="line">                <span class="keyword">if</span> ((<span class="built_in">bool</span>)obj[<span class="string">&quot;IPEnabled&quot;</span>] == <span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    gateway = obj[<span class="string">&quot;DefaultIPGateway&quot;</span>].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//dispose of our object</span></span><br><span class="line">            obj.Dispose();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//replace the &quot;:&quot; with an empty space, this could also</span></span><br><span class="line">        <span class="comment">//be removed if you wish</span></span><br><span class="line">        gateway = gateway.Replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="comment">//return the mac address</span></span><br><span class="line">        <span class="keyword">return</span> gateway;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieve CPU Speed.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">double</span>? GetCpuSpeedInGHz()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">double</span>? GHz = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">using</span> (ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> mc.GetInstances())</span><br><span class="line">            &#123;</span><br><span class="line">                GHz = <span class="number">0.001</span> * (UInt32)mo.Properties[<span class="string">&quot;CurrentClockSpeed&quot;</span>].Value;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> GHz;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Current Language</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetCurrentLanguage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"> </span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;root\\CIMV2&quot;</span>, <span class="string">&quot;SELECT * FROM Win32_BIOS&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> wmi.GetPropertyValue(<span class="string">&quot;CurrentLanguage&quot;</span>).ToString();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            catch &#123; &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Maker: Unknown&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Current Language.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">GetOSInformation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementObjectSearcher searcher = <span class="keyword">new</span> ManagementObjectSearcher(<span class="string">&quot;SELECT * FROM Win32_OperatingSystem&quot;</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject wmi <span class="keyword">in</span> searcher.Get())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> ((<span class="built_in">string</span>)wmi[<span class="string">&quot;Caption&quot;</span>]).Trim() + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)wmi[<span class="string">&quot;Version&quot;</span>] + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)wmi[<span class="string">&quot;OSArchitecture&quot;</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            catch &#123; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;BIOS Maker: Unknown&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Processor Information.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetProcessorInformation</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;win32_processor&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        String info = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> name = (<span class="built_in">string</span>)mo[<span class="string">&quot;Name&quot;</span>];</span><br><span class="line">            name = name.Replace(<span class="string">&quot;(TM)&quot;</span>, <span class="string">&quot;™&quot;</span>).Replace(<span class="string">&quot;(tm)&quot;</span>, <span class="string">&quot;™&quot;</span>).Replace(<span class="string">&quot;(R)&quot;</span>, <span class="string">&quot;®&quot;</span>).Replace(<span class="string">&quot;(r)&quot;</span>, <span class="string">&quot;®&quot;</span>).Replace(<span class="string">&quot;(C)&quot;</span>, <span class="string">&quot;©&quot;</span>).Replace(<span class="string">&quot;(c)&quot;</span>, <span class="string">&quot;©&quot;</span>).Replace(<span class="string">&quot;    &quot;</span>, <span class="string">&quot; &quot;</span>).Replace(<span class="string">&quot;  &quot;</span>, <span class="string">&quot; &quot;</span>);</span><br><span class="line"> </span><br><span class="line">            info = name + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)mo[<span class="string">&quot;Caption&quot;</span>] + <span class="string">&quot;, &quot;</span> + (<span class="built_in">string</span>)mo[<span class="string">&quot;SocketDesignation&quot;</span>];</span><br><span class="line">            <span class="comment">//mo.Properties[&quot;Name&quot;].Value.ToString();</span></span><br><span class="line">            <span class="comment">//break;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Retrieving Computer Name.</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">GetComputerName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_ComputerSystem&quot;</span>);</span><br><span class="line">        ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">        String info = String.Empty;</span><br><span class="line">        <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">        &#123;</span><br><span class="line">            info = (<span class="built_in">string</span>)mo[<span class="string">&quot;Name&quot;</span>];</span><br><span class="line">            <span class="comment">//mo.Properties[&quot;Name&quot;].Value.ToString();</span></span><br><span class="line">            <span class="comment">//break;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="设计窗口形式"><a href="#设计窗口形式" class="headerlink" title="设计窗口形式"></a>设计窗口形式</h1><p>请参见下图设计您的 Windows 窗体并生成按钮单击事件以使用 C# 获取计算机硬件信息。</p><p><strong>设计形式：</strong></p><img src="https://img-blog.csdnimg.cn/img_convert/3ad6d4278b9ff44dbc06418abb9eb73c.png"><h1 id="添加代码隐藏源"><a href="#添加代码隐藏源" class="headerlink" title="添加代码隐藏源"></a>添加代码隐藏源</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">HardwareInformation</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">HardwareInfo_CodeScratcher</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">HardwareInfo_CodeScratcher</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HardwareInfo_CodeScratcher_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ProcId_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblPid.Text = HardwareInfo.GetProcessorId();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">HDDSNo_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblHDD.Text = HardwareInfo.GetHDDSerialNo();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BoardMake_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblBM.Text = HardwareInfo.GetBoardMaker();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BIOSMkr_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblBios.Text = HardwareInfo.GetBIOSmaker();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">PhysicalMem_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblPM.Text = HardwareInfo.GetPhysicalMemory();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CPUSpeed_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblCS.Text = HardwareInfo.GetCpuSpeedInGHz().ToString();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CPUMkr_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            lblCM.Text = HardwareInfo.GetCPUManufacturer();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行项目并检查最终输出"><a href="#运行项目并检查最终输出" class="headerlink" title="运行项目并检查最终输出"></a>运行项目并检查最终输出</h1><p><strong>硬件信息 - 输出：</strong></p><img src="https://img-blog.csdnimg.cn/img_convert/358df9e80341ab221277746f8c5e6bfc.gif"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/allway2/article/details/123154410">使用 C# 获取计算机硬件信息</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">设置自定义获取当前电脑硬件信息的类文件功能</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="硬件信息" scheme="https://zml3589110.github.io/tags/%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF/"/>
    
    <category term="自定义类" scheme="https://zml3589110.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>C#加密之一（获取硬件信息base64加解密）</title>
    <link href="https://zml3589110.github.io/posts/376366368.html"/>
    <id>https://zml3589110.github.io/posts/376366368.html</id>
    <published>2022-10-25T01:25:20.000Z</published>
    <updated>2022-10-25T01:51:16.851Z</updated>
    
    <content type="html"><![CDATA[<h1 id="加解密作用和基本思路"><a href="#加解密作用和基本思路" class="headerlink" title="加解密作用和基本思路"></a>加解密作用和基本思路</h1><p>在我们编写好一款软件后，我们不想别人盗用我们的软件，这时候我们可以采用注册的方式来保护我们的作品。这时候我们可能就需要简单了解一下加密解密技术，下面是我的简单总结：<br>第一步：程序获得运行机的唯一标示（比如：网卡号，CPU编号，硬盘号等等）。<br>第二步：程序将获得的唯一标示加密，然后有用户或者程序将加密后的标示发送给你。<br>第三步：你将加密后的标示解密（其实这时候你获得的就是：网卡号，CPU编号，硬盘号）然后你再将网卡号，CPU编号，硬盘号加密发送给客户注册。<br>第四步：程序将你发送的注册号进行解密，解密后的编号其实也是：网卡号，CPU编号，硬盘号。<br>第五步：每当程序启动，首先解密你发送的注册号，然后读取网卡号，CPU编号，硬盘号等等，最好进行验证，看两个标示是否一样。</p><h1 id="获取硬件信息并加密信息"><a href="#获取硬件信息并加密信息" class="headerlink" title="获取硬件信息并加密信息"></a>获取硬件信息并加密信息</h1><h2 id="程序获得运行机的唯一标示：硬盘号，CPU信息"><a href="#程序获得运行机的唯一标示：硬盘号，CPU信息" class="headerlink" title="程序获得运行机的唯一标示：硬盘号，CPU信息"></a>程序获得运行机的唯一标示：硬盘号，CPU信息</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取硬盘号</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetDiskID</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//获取硬盘ID</span></span><br><span class="line">    String HDid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_DiskDrive&quot;</span>);</span><br><span class="line">    ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">    <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">    &#123;</span><br><span class="line">      HDid = (<span class="built_in">string</span>)mo.Properties[<span class="string">&quot;Model&quot;</span>].Value;</span><br><span class="line">    &#125;</span><br><span class="line">    moc = <span class="literal">null</span>;</span><br><span class="line">    mc = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> HDid;</span><br><span class="line">  &#125;</span><br><span class="line">  catch</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">finally</span></span><br><span class="line">  &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取CPU信息</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetCpuInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">string</span> cpuInfo = <span class="string">&quot;&quot;</span>;<span class="comment">//cpu序列号</span></span><br><span class="line">    ManagementClass cimobject = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">    ManagementObjectCollection moc = cimobject.GetInstances();</span><br><span class="line">    <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">    &#123;</span><br><span class="line">      cpuInfo = mo.Properties[<span class="string">&quot;ProcessorId&quot;</span>].Value.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cpuInfo;</span><br><span class="line">  &#125;</span><br><span class="line">  catch</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">this</span>.senRegeditID.Enabled = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.GetId.Enabled = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="程序将获得的唯一标示加密"><a href="#程序将获得的唯一标示加密" class="headerlink" title="程序将获得的唯一标示加密"></a>程序将获得的唯一标示加密</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加密</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Encrypt</span>(<span class="params"><span class="built_in">string</span> PlainText</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> KEY_64 = <span class="string">&quot;dafei250&quot;</span>;</span><br><span class="line">  <span class="built_in">string</span> IV_64 = <span class="string">&quot;DAFEI500&quot;</span>;</span><br><span class="line">  <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">  <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">  DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">  <span class="built_in">int</span> i = cryptoProvider.KeySize;</span><br><span class="line">  MemoryStream ms = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">  CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateEncryptor(byKey, byIV), CryptoStreamMode.Write);</span><br><span class="line">  StreamWriter sw = <span class="keyword">new</span> StreamWriter(cst);</span><br><span class="line">  sw.Write(PlainText);</span><br><span class="line">  sw.Flush();</span><br><span class="line">  cst.FlushFinalBlock();</span><br><span class="line">  sw.Flush();</span><br><span class="line">  <span class="keyword">return</span> Convert.ToBase64String(ms.GetBuffer(), <span class="number">0</span>, (<span class="built_in">int</span>)ms.Length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="解密注册信息"><a href="#解密注册信息" class="headerlink" title="解密注册信息"></a>解密注册信息</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解密</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> CypherText</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">string</span> KEY_64 = <span class="string">&quot;haeren55&quot;</span>; <span class="comment">//必须是8个字符(64Bit)</span></span><br><span class="line">  <span class="built_in">string</span> IV_64 = <span class="string">&quot;HAEREN55&quot;</span>;  <span class="comment">//必须8个字符(64Bit)</span></span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">    <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">    <span class="built_in">byte</span>[] byEnc;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">      byEnc = Convert.FromBase64String(CypherText);</span><br><span class="line">    &#125;</span><br><span class="line">    catch</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">    MemoryStream ms = <span class="keyword">new</span> MemoryStream(byEnc);</span><br><span class="line">    CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateDecryptor(byKey, byIV), CryptoStreamMode.Read);</span><br><span class="line">    StreamReader sr = <span class="keyword">new</span> StreamReader(cst);</span><br><span class="line">    <span class="keyword">return</span> sr.ReadToEnd();</span><br><span class="line">  &#125;</span><br><span class="line">  catch &#123; <span class="keyword">return</span> <span class="string">&quot;无法解密!&quot;</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="自己测试代码"><a href="#自己测试代码" class="headerlink" title="自己测试代码"></a>自己测试代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 加密解密技术</span></span><br><span class="line">    <span class="built_in">string</span> Secretkey;</span><br><span class="line">    <span class="comment">//获取硬盘号</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetDiskID</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取硬盘ID</span></span><br><span class="line">            String HDid = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            ManagementClass mc = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_DiskDrive&quot;</span>);</span><br><span class="line">            ManagementObjectCollection moc = mc.GetInstances();</span><br><span class="line">            <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">            &#123;</span><br><span class="line">                HDid = (<span class="built_in">string</span>)mo.Properties[<span class="string">&quot;Model&quot;</span>].Value;</span><br><span class="line">            &#125;</span><br><span class="line">            moc = <span class="literal">null</span>;</span><br><span class="line">            mc = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span> HDid;</span><br><span class="line">        &#125;</span><br><span class="line">        catch</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取CPU信息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">string</span> <span class="title">GetCpuInfo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> cpuInfo = <span class="string">&quot;&quot;</span>;<span class="comment">//cpu序列号</span></span><br><span class="line">            ManagementClass cimobject = <span class="keyword">new</span> ManagementClass(<span class="string">&quot;Win32_Processor&quot;</span>);</span><br><span class="line">            ManagementObjectCollection moc = cimobject.GetInstances();</span><br><span class="line">            <span class="keyword">foreach</span> (ManagementObject mo <span class="keyword">in</span> moc)</span><br><span class="line">            &#123;</span><br><span class="line">                cpuInfo = mo.Properties[<span class="string">&quot;ProcessorId&quot;</span>].Value.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> cpuInfo;</span><br><span class="line">        &#125;</span><br><span class="line">        catch</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.senRegeditID.Enabled = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">this</span>.GetId.Enabled = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加密</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">public</span> <span class="built_in">string</span> <span class="title">Encrypt</span>(<span class="params"><span class="built_in">string</span> PlainText</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="built_in">string</span> KEY_64 = <span class="string">&quot;dafei250&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> IV_64 = <span class="string">&quot;DAFEI500&quot;</span>;</span><br><span class="line">        <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">        <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">        DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">        <span class="built_in">int</span> i = cryptoProvider.KeySize;</span><br><span class="line">        System.IO.MemoryStream ms = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">        CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateEncryptor(byKey, byIV), CryptoStreamMode.Write);</span><br><span class="line">        StreamWriter sw = <span class="keyword">new</span> StreamWriter(cst);</span><br><span class="line">        sw.Write(PlainText);</span><br><span class="line">        sw.Flush();</span><br><span class="line">        cst.FlushFinalBlock();</span><br><span class="line">        sw.Flush();</span><br><span class="line">        <span class="keyword">return</span> Convert.ToBase64String(ms.GetBuffer(), <span class="number">0</span>, (<span class="built_in">int</span>)ms.Length);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//解密</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">string</span> <span class="title">Decrypt</span>(<span class="params"><span class="built_in">string</span> CypherText</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//string KEY_64 = &quot;haeren55&quot;; //必须是8个字符(64Bit)</span></span><br><span class="line">        <span class="comment">//string IV_64 = &quot;HAEREN55&quot;;  //必须8个字符(64Bit)</span></span><br><span class="line">        <span class="built_in">string</span> KEY_64 = <span class="string">&quot;dafei250&quot;</span>; <span class="comment">//加密解密的标头必须一致</span></span><br><span class="line">        <span class="built_in">string</span> IV_64 = <span class="string">&quot;DAFEI500&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">byte</span>[] byKey = System.Text.ASCIIEncoding.ASCII.GetBytes(KEY_64);</span><br><span class="line">            <span class="built_in">byte</span>[] byIV = System.Text.ASCIIEncoding.ASCII.GetBytes(IV_64);</span><br><span class="line">            <span class="built_in">byte</span>[] byEnc;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                byEnc = Convert.FromBase64String(CypherText);</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            DESCryptoServiceProvider cryptoProvider = <span class="keyword">new</span> DESCryptoServiceProvider();</span><br><span class="line">            MemoryStream ms = <span class="keyword">new</span> MemoryStream(byEnc);</span><br><span class="line">            CryptoStream cst = <span class="keyword">new</span> CryptoStream(ms, cryptoProvider.CreateDecryptor(byKey, byIV), CryptoStreamMode.Read);</span><br><span class="line">            StreamReader sr = <span class="keyword">new</span> StreamReader(cst);</span><br><span class="line">            <span class="keyword">return</span> sr.ReadToEnd();</span><br><span class="line">        &#125;</span><br><span class="line">        catch &#123; <span class="keyword">return</span> <span class="string">&quot;无法解密!&quot;</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">GetId_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        tBoxID.Text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        Secretkey = GetDiskID() + GetCpuInfo();</span><br><span class="line">        UpdateTextBox(tBoxID, Secretkey);</span><br><span class="line">        Secretkey = Encrypt(Secretkey);</span><br><span class="line">        UpdateTextBox(tBoxID, Secretkey);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//Console.WriteLine();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">senRegeditID_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        UpdateTextBox(tBoxID, <span class="string">&quot;解密：&quot;</span>);</span><br><span class="line">        UpdateTextBox(tBoxID, Decrypt(Secretkey)); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/wzhk009/p/14206611.html">C#关于获取硬盘号、CPU信息，加密解密技术</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">获取当前电脑硬件信息，通过Base64进行加解密操作，实现程序注册功能</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="加密" scheme="https://zml3589110.github.io/categories/%E5%8A%A0%E5%AF%86/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="加密" scheme="https://zml3589110.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="Base64" scheme="https://zml3589110.github.io/tags/Base64/"/>
    
    <category term="硬件信息" scheme="https://zml3589110.github.io/tags/%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>QT加密之一（base64加解密）</title>
    <link href="https://zml3589110.github.io/posts/2925598117.html"/>
    <id>https://zml3589110.github.io/posts/2925598117.html</id>
    <published>2022-10-24T02:27:20.000Z</published>
    <updated>2022-10-24T02:38:50.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用加解密方式"><a href="#常用加解密方式" class="headerlink" title="常用加解密方式"></a>常用加解密方式</h1><p>这里提供两种加解密的方法。<br>第一种方法：使用QByteArray的toBase64和fromBase64来实现。<br>第二种方法：使用<a href="https://so.csdn.net/so/search?q=base64&spm=1001.2101.3001.7020">base64</a>.cpp文件中的base64_encode和base64_decode来实现。<a href="https://download.csdn.net/download/weixin_43246170/85784129">下载地址</a></p><h1 id="加解密调用处理"><a href="#加解密调用处理" class="headerlink" title="加解密调用处理"></a>加解密调用处理</h1><p><strong>头文件.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> WIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QtWidgets&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="class"><span class="keyword">class</span> <span class="title">Widget</span>;</span> &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Widget</span> :</span> <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Widget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">Widget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::Widget *ui;</span><br><span class="line"></span><br><span class="line">    QPushButton* m_encryptbtn;</span><br><span class="line">    QPushButton* m_decryptbtn;</span><br><span class="line">    QLineEdit* m_encryptedit;</span><br><span class="line">    QLineEdit* m_decryptedit;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// WIDGET_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>实现文件.cpp</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mycrypto.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    m_encryptbtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;encrypt&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">    m_decryptbtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;decrypt&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    m_decryptedit = <span class="keyword">new</span> <span class="built_in">QLineEdit</span>(<span class="keyword">this</span>);</span><br><span class="line">    m_encryptedit = <span class="keyword">new</span> <span class="built_in">QLineEdit</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    QGridLayout* lay = <span class="keyword">new</span> <span class="built_in">QGridLayout</span>(<span class="keyword">this</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_encryptedit,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_decryptedit,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_encryptbtn,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    lay-&gt;<span class="built_in">addWidget</span>(m_decryptbtn,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setLayout</span>(lay);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">connect</span>(m_encryptbtn,&amp;QPushButton::clicked,<span class="keyword">this</span>,[=]()&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0 <span class="comment">//方法一</span></span></span><br><span class="line">        m_decryptedit-&gt;<span class="built_in">setText</span>(m_encryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toLocal8Bit</span>().<span class="built_in">toBase64</span>());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> <span class="comment">//方法二</span></span></span><br><span class="line">        m_decryptedit-&gt;<span class="built_in">setText</span>(MyCrypto::<span class="built_in">encrypt</span>(m_encryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toStdString</span>()).<span class="built_in">data</span>());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">connect</span>(m_decryptbtn,&amp;QPushButton::clicked,<span class="keyword">this</span>,[=]()&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line">        m_encryptedit-&gt;<span class="built_in">setText</span>(QByteArray::<span class="built_in">fromBase64</span>(m_decryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toLocal8Bit</span>()));</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        m_encryptedit-&gt;<span class="built_in">setText</span>(MyCrypto::<span class="built_in">decrypt</span>(m_decryptedit-&gt;<span class="built_in">text</span>().<span class="built_in">toStdString</span>()).<span class="built_in">data</span>());</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="方法二加解密-base64-decode-处理"><a href="#方法二加解密-base64-decode-处理" class="headerlink" title="方法二加解密 base64_decode 处理"></a>方法二加解密 base64_decode 处理</h1><p><strong>.h</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYCRYPTO_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYCRYPTO_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDataStream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyCrypto</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">const</span> std::string <span class="title">encrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp; orignal)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">const</span> std::string <span class="title">decrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp; orignal)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MYCRYPTO_H</span></span></span><br></pre></td></tr></table></figure><p><strong>.c</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mycrypto.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;base64.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief MyCrypto::encrypt  加密</span></span><br><span class="line"><span class="comment"> * @param orignal</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> std::string <span class="title">MyCrypto::encrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp;orignal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string encoded = <span class="built_in">base64_encode</span>(<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>*&gt;(orignal.<span class="built_in">c_str</span>()), orignal.<span class="built_in">length</span>());</span><br><span class="line">    <span class="keyword">return</span> encoded;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief MyCrypto::decrypt 解密</span></span><br><span class="line"><span class="comment"> * @param orignal</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> std::string <span class="title">MyCrypto::decrypt</span><span class="params">(<span class="keyword">const</span> std::string &amp;orignal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::string decoded = <span class="built_in">base64_decode</span>(orignal);</span><br><span class="line">    <span class="keyword">return</span> decoded;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/weixin_43246170/article/details/125468689">qt base64加解密</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">QT实现base64加解密</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="QT" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/QT/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="加密" scheme="https://zml3589110.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="Base64" scheme="https://zml3589110.github.io/tags/Base64/"/>
    
    <category term="QT" scheme="https://zml3589110.github.io/tags/QT/"/>
    
    <category term="硬件信息读取" scheme="https://zml3589110.github.io/tags/%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%AF%BB%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>QT实现硬件注册机-win</title>
    <link href="https://zml3589110.github.io/posts/1253920059.html"/>
    <id>https://zml3589110.github.io/posts/1253920059.html</id>
    <published>2022-10-24T02:00:20.000Z</published>
    <updated>2022-10-24T02:38:50.505Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用加密方式"><a href="#常用加密方式" class="headerlink" title="常用加密方式"></a>常用加密方式</h1><p>在工作中，为了方便项目调试，一般情况下我们都会选择开发一个上位机来实现简单的控制和数据读取的功能；但是，这个工具仅限于研发人员使用。为了防止别有用心的测试或者其它人员将这个APP通过U盘的形式拷贝走然后到另外一台电脑上运行，我们可以有以下两种简单的设计方案(以下内容默认用户已了解QT上位机开发，故屏蔽许多细节):</p><ol><li><p>设计一个简单的输入密码逻辑，当输入密码与自己设定的密码匹配时，即进入软件界面。这种方法比较简单，也很容易被破解。</p></li><li><p>提前通过另外一个软件读取本机的硬件信息(我们称之为注册机)，然后通过某种编码格式将该信息编码为其它的格式并生成一个文件(将该文件放到系统较为隐蔽的目录下)。当我们使用的APP打开时，按照约定格式打开并将该文件里的数据转换为硬件信息，然后进行匹配，如果发现没有该文件或者硬件信息不匹配，则提示软件未注册，否则，正常打开该软件。</p></li></ol><p>第一种方法比较简单，初学QT应用编程的小白都可以很容易将它实现，我们就不多说了。我们重点来讲解一下第二种方法的实现。</p><p>以下几个命令可以在Window cmd上运行即可以看到对应的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">获取cpu名称</span><br><span class="line">wmic cpu get Name</span><br><span class="line">获取cpu核心数</span><br><span class="line">wmic cpu get NumberOfCores</span><br><span class="line">获取cpu线程数</span><br><span class="line">wmic cpu get NumberOfLogicalProcessors</span><br><span class="line">查询cpu序列号</span><br><span class="line">wmic cpu get processorid</span><br><span class="line">查询主板序列号</span><br><span class="line">wmic baseboard get serialnumber</span><br><span class="line">查询BIOS序列号</span><br><span class="line">wmic bios get serialnumber</span><br><span class="line">查看硬盘</span><br><span class="line">wmic diskdrive get serialnumber</span><br></pre></td></tr></table></figure><p>这是我的电脑硬件信息：</p><img src="https://mmbiz.qpic.cn/mmbiz_png/SYiceJK78CI835ugRj3Erh6lloPQXNNmKyUK6j8EVhO2DwNibQVYL0x3JzflqE5ic4LfmNENFzLwS62ktDcFFyyQg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"><p>其中，CPU序列号是一个唯一的ID号，它是厂家在制造CPU的时候烧入到内部的。我在工作中主要使用这个来进行加密，当然你也可以使用其它的内容。</p><h1 id="注册机原理"><a href="#注册机原理" class="headerlink" title="注册机原理"></a>注册机原理</h1><p>接下来我们可以实现一个简单的注册机逻辑：</p><ul><li>实现获取硬件信息接口</li><li>将硬件信息经过Base64格式转换</li><li>显示Base64格式转换为的结果</li></ul><blockquote><p><strong>参考代码实现：</strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取cpu名称：wmic cpu get Name</span></span><br><span class="line"><span class="comment">//获取cpu核心数：wmic cpu get NumberOfCores</span></span><br><span class="line"><span class="comment">//获取cpu线程数：wmic cpu get NumberOfLogicalProcessors</span></span><br><span class="line"><span class="comment">//查询cpu序列号：wmic cpu get processorid</span></span><br><span class="line"><span class="comment">//查询主板序列号：wmic baseboard get serialnumber</span></span><br><span class="line"><span class="comment">//查询BIOS序列号：wmic bios get serialnumber</span></span><br><span class="line"><span class="comment">//查看硬盘：wmic diskdrive get serialnumber</span></span><br><span class="line"><span class="function">QString <span class="title">MainWindow::getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QByteArray <span class="title">MainWindow::Encode</span><span class="params">(QByteArray data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> data.<span class="built_in">toBase64</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;注册机&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_GenerateCode_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString Code = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="comment">//打开文件，不存在则创建</span></span><br><span class="line">    file.<span class="built_in">open</span>(QIODevice::ReadWrite | QIODevice::Text);</span><br><span class="line">    <span class="comment">//写入文件需要字符串为QByteArray格式</span></span><br><span class="line">    <span class="keyword">if</span>(file.<span class="built_in">write</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>())) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ui-&gt;CodeDisplay-&gt;<span class="built_in">setText</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>()));</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">NULL</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册成功&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">NULL</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册失败&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编译运行后，当我们点击生成注册码时，则会显示硬件信息通过Base64编码的结果，如下所示:</strong></p><img src="https://mmbiz.qpic.cn/mmbiz_png/SYiceJK78CIicjkkVB8erj6E8QSn2ZcrYtUeMmiaLiahzuDyK8vnYDVibSpj3PTs32bLpkgh8Ox3mHzNrLkUviaTD7iaQ/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"><img src="https://mmbiz.qpic.cn/mmbiz_png/SYiceJK78CIicjkkVB8erj6E8QSn2ZcrYtQGbymEEtnp4oL8ghvORrqQichhNHpl0lXJd2r1I5LHtg9h2hyjm4l5A/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1"><h2 id="自己代码实现"><a href="#自己代码实现" class="headerlink" title="自己代码实现"></a>自己代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QProcess&gt;</span></span></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent) :</span><br><span class="line">    <span class="built_in">QMainWindow</span>(parent),</span><br><span class="line">    <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow) &#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;注册机&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>() &#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取cpu名称：wmic cpu get Name</span></span><br><span class="line"><span class="comment">//获取cpu核心数：wmic cpu get NumberOfCores</span></span><br><span class="line"><span class="comment">//获取cpu线程数：wmic cpu get NumberOfLogicalProcessors</span></span><br><span class="line"><span class="comment">//查询cpu序列号：wmic cpu get processorid</span></span><br><span class="line"><span class="comment">//查询主板序列号：wmic baseboard get serialnumber</span></span><br><span class="line"><span class="comment">//查询BIOS序列号：wmic bios get serialnumber</span></span><br><span class="line"><span class="comment">//查看硬盘：wmic diskdrive get serialnumber</span></span><br><span class="line"><span class="function">QString <span class="title">MainWindow::getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span> </span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QByteArray <span class="title">MainWindow::Encode</span><span class="params">(QByteArray data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> data.<span class="built_in">toBase64</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MainWindow::on_GenerateCode_clicked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    QString Code = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="comment">//打开文件，不存在则创建</span></span><br><span class="line">    file.<span class="built_in">open</span>(QIODevice::ReadWrite | QIODevice::Text);</span><br><span class="line">    <span class="comment">//写入文件需要字符串为QByteArray格式</span></span><br><span class="line">    <span class="keyword">if</span>(file.<span class="built_in">write</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>())) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        ui-&gt;CodeDisplay-&gt;<span class="built_in">setText</span>(<span class="built_in">Encode</span>(Code.<span class="built_in">toLatin1</span>()));</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">nullptr</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册成功&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">nullptr</span>, <span class="string">&quot;提示&quot;</span>, <span class="string">&quot;注册失败&quot;</span>, QMessageBox::Ok);</span><br><span class="line">    file.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑："><a href="#一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑：" class="headerlink" title="一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑："></a>一个简单的注册机写完以后，APP在加载运行的时候需要加上以下逻辑：</h1><p><strong>代码参考：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRAY_SIZE(x) (sizeof(x) / sizeof(x[0]))</span></span><br><span class="line"></span><br><span class="line"><span class="function">QString <span class="title">getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> RunFlag = <span class="number">0</span>;</span><br><span class="line">    QByteArray DecodeStr;</span><br><span class="line">    QString CpuSerialNumber;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">//1.获取CPU序列号</span></span><br><span class="line">    CpuSerialNumber = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="comment">//2.打开注册码文件,读取加密字符串并进行匹配加密字符串</span></span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(!file.<span class="built_in">open</span>(QIODevice::ReadOnly))</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">NULL</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码不存在,请导入注册码!&quot;</span>,QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//读取文件所有的内存</span></span><br><span class="line">        QByteArray EncodeStr = file.<span class="built_in">readAll</span>();</span><br><span class="line">        <span class="comment">//将读取的内容进行解码</span></span><br><span class="line">        DecodeStr = <span class="built_in">fromBase64</span>(EncodeStr);</span><br><span class="line">        <span class="comment">//将解码的结果与当前PC的CPU序列号进行比较</span></span><br><span class="line">        <span class="function">QString <span class="title">Str</span><span class="params">(DecodeStr)</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == Str.<span class="built_in">compare</span>(CpuSerialNumber))</span><br><span class="line">             RunFlag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.如果匹配成功,运行软件</span></span><br><span class="line">    <span class="keyword">if</span>(RunFlag)</span><br><span class="line">    &#123;</span><br><span class="line">        MainWindow w;</span><br><span class="line">        w.<span class="built_in">show</span>();</span><br><span class="line">        <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">NULL</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码无效,请联系厂商获取注册码!&quot;</span>,QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="本机上实现代码"><a href="#本机上实现代码" class="headerlink" title="本机上实现代码"></a>本机上实现代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QFile&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QProcess&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ARRAY_SIZE(x) (sizeof(x) / sizeof(x[0]))</span></span><br><span class="line"></span><br><span class="line"><span class="function">QString <span class="title">getMachineInfo</span><span class="params">(<span class="keyword">const</span> QString &amp;cmd)</span> </span>&#123;</span><br><span class="line">    QProcess p;</span><br><span class="line">    p.<span class="built_in">start</span>(cmd);</span><br><span class="line">    p.<span class="built_in">waitForFinished</span>();</span><br><span class="line">    QString result = QString::<span class="built_in">fromLocal8Bit</span>(p.<span class="built_in">readAllStandardOutput</span>());</span><br><span class="line">    QStringList list = cmd.<span class="built_in">split</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">remove</span>(list.<span class="built_in">last</span>(), Qt::CaseInsensitive);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\r&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">replace</span>(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    result = result.<span class="built_in">simplified</span>();</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> RunFlag = <span class="number">0</span>;</span><br><span class="line">    QByteArray DecodeStr;</span><br><span class="line">    QString CpuSerialNumber;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    <span class="comment">//1.获取CPU序列号</span></span><br><span class="line">    CpuSerialNumber = <span class="built_in">getMachineInfo</span>(<span class="string">&quot;wmic cpu get processorid&quot;</span>);</span><br><span class="line">    <span class="comment">//2.打开注册码文件,读取加密字符串并进行匹配加密字符串</span></span><br><span class="line">    <span class="function">QFile <span class="title">file</span><span class="params">(<span class="string">&quot;D:/Register.txt&quot;</span>)</span></span>;</span><br><span class="line">    <span class="keyword">if</span>(!file.<span class="built_in">open</span>(QIODevice::ReadOnly)) &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">nullptr</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码不存在,请导入注册码!&quot;</span>, QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//读取文件所有的内存</span></span><br><span class="line">        QByteArray EncodeStr = file.<span class="built_in">readAll</span>();</span><br><span class="line">        <span class="comment">//将读取的内容进行解码</span></span><br><span class="line">        DecodeStr = QByteArray::<span class="built_in">fromBase64</span>(EncodeStr);</span><br><span class="line">        <span class="comment">//将解码的结果与当前PC的CPU序列号进行比较</span></span><br><span class="line">        <span class="function">QString <span class="title">Str</span><span class="params">(DecodeStr)</span></span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span> == Str.<span class="built_in">compare</span>(CpuSerialNumber))</span><br><span class="line">            RunFlag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.如果匹配成功,运行软件</span></span><br><span class="line">    <span class="keyword">if</span>(RunFlag) &#123;</span><br><span class="line">        MainWindow w;</span><br><span class="line">        w.<span class="built_in">show</span>();</span><br><span class="line">        <span class="keyword">return</span> a.<span class="built_in">exec</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">warning</span>(<span class="literal">nullptr</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;注册码无效,请联系厂商获取注册码!&quot;</span>, QMessageBox::Yes);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="其他注册方式"><a href="#其他注册方式" class="headerlink" title="其他注册方式"></a>其他注册方式</h1><p>实现注册机更好的方案则可以直接将信息写入注册表，然后APP去注册表中读取相应的内容。关于硬件信息的加密和解密方式，用户可以有其它的实现方法。</p><p>这里留一个问题，如何将APP启动信息与其它平台进行关联呢？例如Qt ARM端、Mac端、Android端?</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://mp.weixin.qq.com/s/XlM3WDAA3TtR7KUcPaVrLQ">Qt上位机开发之如何让自己的APP启动与硬件信息绑定(Win端)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">QT实现硬件读取并转化成某一格式保存后作为注册机使用</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="QT" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/QT/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="QT" scheme="https://zml3589110.github.io/tags/QT/"/>
    
    <category term="硬件信息读取" scheme="https://zml3589110.github.io/tags/%E7%A1%AC%E4%BB%B6%E4%BF%A1%E6%81%AF%E8%AF%BB%E5%8F%96/"/>
    
    <category term="注册机" scheme="https://zml3589110.github.io/tags/%E6%B3%A8%E5%86%8C%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之七（简单绘制两条折线图）</title>
    <link href="https://zml3589110.github.io/posts/2179120513.html"/>
    <id>https://zml3589110.github.io/posts/2179120513.html</id>
    <published>2022-10-24T01:15:20.000Z</published>
    <updated>2022-10-24T02:38:50.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="https://img-blog.csdnimg.cn/2020112517480836.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05pY2tTdHVkZW50,size_16,color_FFFFFF,t_70"><h1 id="参考代码实现"><a href="#参考代码实现" class="headerlink" title="参考代码实现"></a>参考代码实现</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms.DataVisualization.Charting;</span><br><span class="line"> </span><br><span class="line">namespace 图表练习</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            <span class="comment">// 设置曲线的样式 </span></span><br><span class="line">            Series series1 = <span class="keyword">new</span> Series();</span><br><span class="line">            series1 = chart1.Series[<span class="number">0</span>];</span><br><span class="line">            series1.ChartType = SeriesChartType.Spline;</span><br><span class="line">            series1.BorderWidth = <span class="number">2</span>;</span><br><span class="line">            series1.Color = Color.Red;</span><br><span class="line">            series1.LegendText = <span class="string">&quot;第一条线&quot;</span>;</span><br><span class="line"> </span><br><span class="line">            Series series2 = <span class="keyword">new</span> Series();</span><br><span class="line">            series2 = chart1.Series[<span class="number">1</span>];</span><br><span class="line">            series2.ChartType = SeriesChartType.Line;</span><br><span class="line">            series2.BorderWidth = <span class="number">2</span>;</span><br><span class="line">            series2.Color = Color.Green;</span><br><span class="line">            series2.LegendText = <span class="string">&quot;第二条线&quot;</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 准备数据 </span></span><br><span class="line">            <span class="built_in">int</span>[] myValues1 = &#123; <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">8</span> &#125;;</span><br><span class="line"> </span><br><span class="line">            <span class="built_in">int</span>[] myValues2 = &#123; <span class="number">13</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">14</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">15</span>, <span class="number">16</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">11</span> &#125;;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 在chart中显示数据 </span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">int</span> xValue1 = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">int</span> xValue2 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> yValue1 <span class="keyword">in</span> myValues1)</span><br><span class="line">            &#123;</span><br><span class="line">                series1.Points.AddXY(xValue1, yValue1);</span><br><span class="line">                xValue1++;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">int</span> yValue2 <span class="keyword">in</span> myValues2)</span><br><span class="line">            &#123;</span><br><span class="line">                series2.Points.AddXY(xValue2, yValue2);</span><br><span class="line">                xValue2++;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 设置显示范围 </span></span><br><span class="line">            ChartArea myChartArea = chart1.ChartAreas[<span class="number">0</span>];</span><br><span class="line">            myChartArea.AxisX.Minimum = <span class="number">0</span>;</span><br><span class="line">            myChartArea.AxisX.Maximum = <span class="number">30</span>;</span><br><span class="line">            myChartArea.AxisY.Minimum = <span class="number">0</span>;</span><br><span class="line">            myChartArea.AxisY.Maximum = <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/NickStudent/article/details/110138031">【C#语言】绘制两条折线图</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过 Chart 简单做两条折线图参考</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#串口问题之一（串口导致界面卡死）</title>
    <link href="https://zml3589110.github.io/posts/10407708.html"/>
    <id>https://zml3589110.github.io/posts/10407708.html</id>
    <published>2022-10-24T01:00:20.000Z</published>
    <updated>2022-10-24T02:38:50.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>当串口接收大量数据且不断更新到text等UI界面时，要是再拖动数据或者处理UI上点击功能等操作时会十分卡顿，若仅接收数据并不更新到UI时正常。<br>后来发现是直接使用 rx.Text &#x3D; 接收到数据; 时会卡顿，参考别人使用 TextBox sender 传参就解决！</p><h1 id="解决参考代码"><a href="#解决参考代码" class="headerlink" title="解决参考代码"></a>解决参考代码</h1><blockquote><p><strong>卡顿代码</strong></p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sp_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender,SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">System.Threading.Thread.Sleep(<span class="number">100</span>); <span class="comment">//延时100ms等待接收完数据</span></span><br><span class="line"><span class="comment">//this.Invoke就是跨线程访问ui的方法</span></span><br><span class="line"><span class="keyword">this</span>.Invoke((EventHandler)(<span class="built_in">delegate</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (isHex == <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">tbxRecvData.Text += sp.ReadLine();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Byte[] ReceivedData = <span class="keyword">new</span> Byte[sp.BytesToRead]; <span class="comment">//创建接收字符数组</span></span><br><span class="line">sp.Read(ReceivedData, <span class="number">0</span>, ReceivedData.Length);</span><br><span class="line">String RecvDataText = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; ReceivedData.Length - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">RecvDataText += (<span class="string">&quot;0x&quot;</span> + ReceivedData[i].ToString(<span class="string">&quot;X2&quot;</span>) + <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">tbxRecvData.Text += RecvDataText;</span><br><span class="line">&#125;</span><br><span class="line">sp.DiscardInBuffer(); <span class="comment">//丢弃接收缓冲区数据</span></span><br><span class="line">&#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">好像是这段代码哪里的问题导致界面卡死</span><br><span class="line">大佬们看一下帮忙改一下</span><br></pre></td></tr></table></figure><blockquote><p><strong>测试答案：简单编写测试，没有问题，可以正常发送接收</strong></p></blockquote><img src="https://img-bbs.csdn.net/upload/201709/12/1505178993_530107.png"><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.IO.Ports;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">COMTest</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            InitializeComponent();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> SerialPort sp = <span class="keyword">new</span> SerialPort();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnOpen_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            sp.PortName = <span class="string">&quot;COM2&quot;</span>;</span><br><span class="line"></span><br><span class="line">            sp.BaudRate = <span class="number">9600</span>;</span><br><span class="line"></span><br><span class="line">            sp.DataBits = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">            sp.StopBits = StopBits.One;</span><br><span class="line"></span><br><span class="line">            sp.Parity = Parity.None;</span><br><span class="line"></span><br><span class="line">            sp.ReadTimeout = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">            sp.ReceivedBytesThreshold = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!sp.IsOpen)</span><br><span class="line"></span><br><span class="line">                sp.Open();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            sp.DataReceived += Sp_DataReceived;</span><br><span class="line"></span><br><span class="line">            btnOpen.Enabled = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Sp_DataReceived</span>(<span class="params"><span class="built_in">object</span> sender, SerialDataReceivedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] data = <span class="keyword">new</span> <span class="built_in">byte</span>[sp.BytesToRead];</span><br><span class="line"></span><br><span class="line">            sp.Read(data, <span class="number">0</span>, data.Length);</span><br><span class="line"></span><br><span class="line">            sp.DiscardInBuffer();</span><br><span class="line"></span><br><span class="line">            UpdateTextBox(texRev, Encoding.Default.GetString(data));</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">btnSend_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span>[] data = Encoding.Default.GetBytes(texData.Text);</span><br><span class="line"></span><br><span class="line">            sp.Write(data, <span class="number">0</span>, data.Length);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateTextBox</span>(<span class="params">TextBox sender, <span class="built_in">string</span> content</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.Invoke((EventHandler) <span class="built_in">delegate</span></span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                sender.AppendText(content + Environment.NewLine);</span><br><span class="line"></span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>例如像 RecvDataText +&#x3D; (“0x” + ReceivedData[i].ToString(“X2”) + “”); 这种代码，以及前边几行代码，根本不操作UI 控件，那么根本不应该放到 Invoke 中。而且只是一般地临时显示的话，使用 BeginInvoke 显然比 Invoke 更好。 你在阻塞 UI 线程（Invoke它）的时候，你执行 sp.ReadLine(); 这样的代码，这个 ReadLine 本身就是卡死、死等、阻塞式的代码，要等待对方传来换行回车或者文件结束符号才能解除阻塞。显然这样编程设计是不合适的。 尤其是通讯程序，要处理粘包、分包概念，更不应该阻塞式 Readline。</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://bbs.csdn.net/topics/392261371">c#串口程序界面卡死问题</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 串口通讯处理高频数据时导致界面卡死，主要是在UI数据刷新上!Invoke应该仅放操作 UI 控件</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="通讯" scheme="https://zml3589110.github.io/categories/%E9%80%9A%E8%AE%AF/"/>
    
    <category term="问题汇总" scheme="https://zml3589110.github.io/categories/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="串口通讯" scheme="https://zml3589110.github.io/tags/%E4%B8%B2%E5%8F%A3%E9%80%9A%E8%AE%AF/"/>
    
    <category term="UI" scheme="https://zml3589110.github.io/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>bat输入路径处理文件</title>
    <link href="https://zml3589110.github.io/posts/3143928547.html"/>
    <id>https://zml3589110.github.io/posts/3143928547.html</id>
    <published>2022-10-18T06:40:20.000Z</published>
    <updated>2022-10-18T09:19:17.892Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、使用到的内容"><a href="#一、使用到的内容" class="headerlink" title="一、使用到的内容"></a>一、使用到的内容</h1><ol><li>获取键盘输入</li><li>判断输入路径是否有效</li><li>批量删除文件</li><li>获取路径文件夹名字</li><li>对文件名进行重命名</li><li>复制移动文件</li></ol><h1 id="二、读取键入参数"><a href="#二、读取键入参数" class="headerlink" title="二、读取键入参数"></a>二、读取键入参数</h1><blockquote><p><strong>使用 set &#x2F;p 命令来获取用户的输入</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> /p name=your name: </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> %name%</span><br></pre></td></tr></table></figure><p>终端会先给出一个提示，然后接收输入，当敲入回车后，输入的行内容会被赋值给 name ，但不包括换行。</p><h1 id="三、判断路径有效性"><a href="#三、判断路径有效性" class="headerlink" title="三、判断路径有效性"></a>三、判断路径有效性</h1><blockquote><p><strong>根据用户输入路径来判断其有效性，有效则下一步，无效则重新输入</strong></p></blockquote><ul><li><strong>判断存在性的代码参考：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IF EXIST %DIR%\.svn ( </span><br><span class="line">    DEL /S %DIR%\.svn</span><br><span class="line">    )</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>BAT循环判断，通过goto跳转来重复输入</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@ECHO OFF</span><br><span class="line">TITLE BAT循环判断进程是否存在 bat 如果存在则继续判断 不存在则重新运行</span><br><span class="line">COLOR A</span><br><span class="line"><span class="built_in">set</span> <span class="string">&quot;file=文件名&quot;</span></span><br><span class="line"><span class="keyword">for</span> /f <span class="string">&quot;delims=&quot;</span> %%I <span class="keyword">in</span> (<span class="string">&quot;%file%&quot;</span>) <span class="keyword">do</span> <span class="built_in">set</span> <span class="string">&quot;image=%%~nxI&quot;</span></span><br><span class="line">:begin</span><br><span class="line">tasklist|find /i <span class="string">&quot;%image%&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;%errorlevel%&quot;</span>==<span class="string">&quot;1&quot;</span> start <span class="string">&quot;&quot;</span> <span class="string">&quot;%file%&quot;</span></span><br><span class="line">goto begin</span><br></pre></td></tr></table></figure><p><strong>将以上两个配合起来即可完成输入判断功能！</strong></p><h1 id="四、批量删除文件夹下文件"><a href="#四、批量删除文件夹下文件" class="headerlink" title="四、批量删除文件夹下文件"></a>四、批量删除文件夹下文件</h1><blockquote><p><strong>注 bat 批处理 解决中文乱码 ：将文件以ANSI格式保存</strong></p></blockquote><blockquote><p><strong>删除文件夹下的文件的操作：</strong><br>使用del命令，单纯的删除文件操作，如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del /f /s /q C:UsersdellAppDataLocalTemp*.*</span><br></pre></td></tr></table></figure><ul><li><strong>其他文件处理参考：</strong></li></ul><blockquote><p><strong>删除文件夹操作：</strong><br>使用rd命令，删除空文件夹，如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rd /s /q C:UsersdellAppDataLocalTempA</span><br></pre></td></tr></table></figure><blockquote><p><strong>删除文件和文件夹操作：</strong><br>使用的是del命令+rd命令，先删除文件，在进入相应文件夹删除文件夹下的文件夹，如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">del /f /s /q C:UsersdellAppDataLocalTemp*.*</span><br><span class="line"><span class="built_in">cd</span> C:UsersdellAppDataLocalTemp</span><br><span class="line">rd /s /q C:UsersdellAppDataLocalTemp</span><br></pre></td></tr></table></figure><blockquote><p><strong>每隔1000s执行一次删除temp文件下的所有文件及文件夹。代码如下：</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:loop</span><br><span class="line">del /f /s /q C:UsersdellAppDataLocalTemp*.*</span><br><span class="line"><span class="built_in">cd</span> C:UsersdellAppDataLocalTemp</span><br><span class="line">rd /s /q C:UsersdellAppDataLocalTemp</span><br><span class="line">@ping 127.0.0.1 -n 1000 &gt;nul</span><br><span class="line">goto loop</span><br></pre></td></tr></table></figure><blockquote><p><strong>删除当前所有子目录下的所有jpeg文件：</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">::chcp utf8</span><br><span class="line">::chcp 65001 就是换成UTF-8代码页</span><br><span class="line">::chcp 936 可以换回默认的GBK</span><br><span class="line">::chcp 437 是美国英语</span><br><span class="line">::del D:A*.jpeg /f /s /q</span><br><span class="line">::保存，更改扩展名为 bat，双击运行即可。</span><br><span class="line">::/f 强制删除只读文件/s 从所有子目录删除指定文件/q 安静模式，删除时不要求确认</span><br><span class="line"><span class="built_in">echo</span> 当前盘符：%~d0</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：%~dp0</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：%~sdp0</span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：%~f0</span><br><span class="line"><span class="built_in">echo</span> 当前CMD默认目录：%<span class="built_in">cd</span>%</span><br><span class="line"><span class="built_in">echo</span> %~dp0 目录下所有的jpeg文件</span><br><span class="line">pause</span><br><span class="line">del %~dp0*.jpeg /f /s /q</span><br><span class="line">::/f 强制删除只读文件/s 从所有子目录删除指定文件/q 安静模式，删除时不要求确认</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><h1 id="五、获取当前路径文件名"><a href="#五、获取当前路径文件名" class="headerlink" title="五、获取当前路径文件名"></a>五、获取当前路径文件名</h1><h2 id="方法一（使用中）、BAT-获取父文件名"><a href="#方法一（使用中）、BAT-获取父文件名" class="headerlink" title="方法一（使用中）、BAT 获取父文件名"></a>方法一（使用中）、BAT 获取父文件名</h2><blockquote><p><strong>获取批处理文件的父文件夹非常简单：</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> %%a <span class="keyword">in</span> (<span class="string">&quot;%~dp0.&quot;</span>) <span class="keyword">do</span> <span class="built_in">set</span> <span class="string">&quot;parent=%%~nxa&quot;</span></span><br><span class="line"><span class="built_in">echo</span> %parent%</span><br></pre></td></tr></table></figure><p><strong>对于文件路径的父级，根据问题：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> %%a <span class="keyword">in</span> (<span class="string">&quot;c:testpacka.txt&quot;</span>) <span class="keyword">do</span> <span class="keyword">for</span> %%b <span class="keyword">in</span> (<span class="string">&quot;%%~dpa.&quot;</span>) <span class="keyword">do</span> <span class="built_in">set</span> <span class="string">&quot;parent=%%~nxb&quot;</span></span><br><span class="line"><span class="built_in">echo</span> %parent%</span><br></pre></td></tr></table></figure><h2 id="方法二、BAT-获取当前文件夹的文件名"><a href="#方法二、BAT-获取当前文件夹的文件名" class="headerlink" title="方法二、BAT 获取当前文件夹的文件名"></a>方法二、BAT 获取当前文件夹的文件名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">pushd</span> %1 &amp; <span class="keyword">for</span> %%i <span class="keyword">in</span> (.) <span class="keyword">do</span> <span class="built_in">set</span> curr=%%~ni</span><br><span class="line"><span class="built_in">echo</span> %curr%</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p><strong>选项语法：</strong></p><table><thead><tr><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">~I</td><td align="center">删除任何引号(“)，扩充 %I</td></tr><tr><td align="center">%~fI</td><td align="center">将 %I 扩充到一个完全合格的路径名</td></tr><tr><td align="center">%~dI</td><td align="center">仅将 %I 扩充到一个驱动器号</td></tr><tr><td align="center">%~pI</td><td align="center">仅将 %I 扩充到一个路径</td></tr><tr><td align="center">%~nI</td><td align="center">仅将 %I 扩充到一个文件名</td></tr><tr><td align="center">%~xI</td><td align="center">仅将 %I 扩充到一个文件扩展名</td></tr><tr><td align="center">%~sI</td><td align="center">扩充的路径只含有短名</td></tr><tr><td align="center">%~aI</td><td align="center">将 %I 扩充到文件的文件属性</td></tr><tr><td align="center">%~tI</td><td align="center">将 %I 扩充到文件的日期&#x2F;时间</td></tr><tr><td align="center">%~zI</td><td align="center">将 %I 扩充到文件的大小</td></tr><tr><td align="center">%~$PATH:I</td><td align="center">查找列在路径环境变量的目录，并将 %I 扩充到找到的第一个完全合格的名称。如果环境变量名未被定义，或者没有找到文件，此组合键会扩充到空字符串</td></tr></tbody></table><p><strong>组合修饰符：</strong></p><table><thead><tr><th align="center">修饰符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">%~dpI</td><td align="center">仅将 %I 扩充到一个驱动器号和路径</td></tr><tr><td align="center">%~nxI</td><td align="center">仅将 %I 扩充到一个文件名和扩展名</td></tr><tr><td align="center">%~fsI</td><td align="center">仅将 %I 扩充到一个带有短名的完整路径名</td></tr><tr><td align="center">%~dp$PATH:i</td><td align="center">查找列在路径环境变量的目录，并将 %I 扩充</td></tr><tr><td align="center">%~ftzaI</td><td align="center">将 %I 扩充到类似输出线路的 DIR</td></tr></tbody></table><p><strong>获取当前目录的绝对路径:  目录中有空格也可以加入””避免找不到路径</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 当前盘符：%~d0　　　　　　　　　　　　　　rem --　　C</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：%~dp0　　　　　　　　　　 rem --　　C:\Working\docs\</span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：%~f0　　　　　　　　　　rem --　　C:\Working\docs\aaa.bat</span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：%~sdp0　　rem --　　C:\Working\docs\</span><br><span class="line"><span class="built_in">echo</span> 当前CMD默认目录：%<span class="built_in">cd</span>%　　　　　　　　　　rem--　　C:\Working\docs</span><br><span class="line"><span class="built_in">echo</span> 当前盘符：<span class="string">&quot;%~d0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径：<span class="string">&quot;%~dp0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前批处理全路径：<span class="string">&quot;%~f0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前盘符和路径的短文件名格式：<span class="string">&quot;%~sdp0&quot;</span></span><br><span class="line"><span class="built_in">echo</span> 当前CMD默认目录：<span class="string">&quot;%cd%&quot;</span></span><br></pre></td></tr></table></figure><h1 id="六、复制和重命名文件"><a href="#六、复制和重命名文件" class="headerlink" title="六、复制和重命名文件"></a>六、复制和重命名文件</h1><blockquote><p><strong>创建副本并重命名</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">rem 创建副本文件并重命名</span><br><span class="line"><span class="built_in">set</span> <span class="comment">#=Any question&amp;set @=WX&amp;set $=Q&amp;set/az=0x53b7e0b4</span></span><br><span class="line">title %<span class="comment">#% +%$%%$%/%@% %z%</span></span><br><span class="line"><span class="built_in">cd</span> /d <span class="string">&quot;%~dp0&quot;</span></span><br><span class="line">copy /y <span class="string">&quot;a.bin&quot;</span> <span class="string">&quot;aaaaaaaa.bin&quot;</span></span><br><span class="line"><span class="built_in">echo</span>;%<span class="comment">#% +%$%%$%/%@% %z%</span></span><br><span class="line">pause</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在文本文档里输入rename命令（即：ren 原文件名 后文件名）:</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">ren a.bat bbb.bat</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h1 id="七、其他知识点"><a href="#七、其他知识点" class="headerlink" title="七、其他知识点"></a>七、其他知识点</h1><blockquote><p><strong>获取文件夹下所有文件的路径名称并导出到txt文件中</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir/s/b &gt; 1.txt</span><br></pre></td></tr></table></figure><blockquote><p><strong>bat批处理 if 命令示例详解</strong><br>if,正如它E文中的意思，就是“如果”的意思，用来进行条件判断。翻译过来的意思就是：如果符合某一条件，便执行后面的命令。<br>主要用来判断：<br>1、两个“字符串”是否相等；<br>2、两个数值是大于、小于、等于,然后执行相应的命令。<br>当然还有特殊用法，如结合errorlevel：if errorlevel 1 echo error<br>或者结合defined（定义的意思）:if defined test (echo It is defined) else echo It isn’t defined<br><a href="https://www.jb51.net/article/14986.htm">IF命令示例详解</a></p></blockquote><blockquote><p><strong>CMD快速进入当前目录</strong><br>由于需要经常需要从cmd中进入当前工作目录,每次手工输入太繁琐了,于是写了以下bat文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">:: 防止中文乱码</span><br><span class="line">chcp 65001</span><br><span class="line">:: 关闭回显</span><br><span class="line">@<span class="built_in">echo</span> off </span><br><span class="line">:: 进入当前目录</span><br><span class="line"><span class="built_in">cd</span>  %~dp0</span><br><span class="line">:: 运行后保持界面一直显示</span><br><span class="line">cmd /k</span><br><span class="line">:: 开启回显</span><br><span class="line">@<span class="built_in">echo</span> on </span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><p><a href="https://zhuanlan.zhihu.com/p/412846122">【BAT脚本学习笔记】获取输入</a></p></li><li><p><a href="https://blog.51cto.com/u_13161667/3303991">BAT判断一个目录是否存在</a></p></li><li><p><a href="https://blog.csdn.net/qq_42462075/article/details/103554158">BAT循环判断进程是否存在 bat 如果存在则继续判断 不存在则重新运行</a></p></li><li><p><a href="http://t.zoukankan.com/BruceKing-p-13151283.html">批处理bat 删除指定文件夹下的文件及文件夹</a></p></li><li><p><a href="https://www.cnblogs.com/hello1123/p/15944980.html">获得目录的文件的父目录名，非路径名</a><br>5-1. <a href="https://www.cnblogs.com/CRobot/p/15337172.html">BAT 获取当前文件夹的文件名</a><br>5-2. <a href="https://www.jb51.net/article/53021.htm">批处理bat命令 获取当前盘符和当前目录和上级目录的代码</a></p></li><li><p><a href="https://blog.csdn.net/qq_25885951/article/details/118656242">bat(cmd)快速进入当前文件目录+防止中文乱码+保持界面一致显示</a></p></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过输入路径来设置修改工程名等文件批处理</summary>
    
    
    
    <category term="小插件类" scheme="https://zml3589110.github.io/categories/%E5%B0%8F%E6%8F%92%E4%BB%B6%E7%B1%BB/"/>
    
    <category term="BAT" scheme="https://zml3589110.github.io/categories/BAT/"/>
    
    
    <category term="计算机" scheme="https://zml3589110.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="bat" scheme="https://zml3589110.github.io/tags/bat/"/>
    
    <category term="脚本" scheme="https://zml3589110.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="cmd" scheme="https://zml3589110.github.io/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>LVGL学习(一)之模拟器搭建</title>
    <link href="https://zml3589110.github.io/posts/1814094879.html"/>
    <id>https://zml3589110.github.io/posts/1814094879.html</id>
    <published>2022-10-06T02:20:20.000Z</published>
    <updated>2022-10-18T09:19:17.944Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LVGL库简介"><a href="#LVGL库简介" class="headerlink" title="LVGL库简介"></a>LVGL库简介</h1><p>LVGL(Light and Versatile Graphics Library)是一个免费、开源的嵌入式图形库，可以创建丰富、美观的界面，具有许多可以自定义样式的控件，支持按键或触摸响应，支持中文字符，并且内存占用较低。可以在 <a href="https://lvgl.io/demos">https://lvgl.io/demos</a> 使用网页端体验 LVGL 的动态效果，再决定是否需要使用 LVGL 。</p><p>LVGL 使用 C 语言编写，可以用在树莓派、ESP32 、STM32 等单片机上，并支持各种中大型屏幕（只需要提供屏幕的绘图 API 即可）。LVGL 的官网地址为：<a href="https://lvgl.io/">https://lvgl.io/</a> ，GitHub 地址为：<a href="https://github.com/lvgl/lvgl">https://github.com/lvgl/lvgl</a> 。</p><p>LVGL 提供了许多示例程序，还提供了 PC 端的模拟器，这都加快了 LVGL 的开发效率。</p><p>再下载<a href="https://github.com/littlevgl/pc_simulator_sdl_visual_studio">官方的模拟器</a>。就可以进行仿真了</p><h1 id="熟悉模拟器的结构"><a href="#熟悉模拟器的结构" class="headerlink" title="熟悉模拟器的结构"></a>熟悉模拟器的结构</h1><blockquote><p>拿到模拟器第一反应就是F5运行一下。</p></blockquote><img src="https://img-blog.csdnimg.cn/20201118133804918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"><p>然后就可以打开main文件（LVGL.Simulator.cpp）去查看一下主函数结构。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hal_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">tick_thread</span><span class="params">(<span class="keyword">void</span> *data)</span></span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_indev_t</span> * kb_indev;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">lv_init();       <span class="comment">// 初始化lvgl</span></span><br><span class="line">hal_init();<span class="comment">// 这里单片机就是硬件初始化，模拟器中是模拟器初始化(修改配置)</span></span><br><span class="line">lv_demo_widgets();<span class="comment">// 这个函数就是演示的demo(修改示例)</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">lv_task_handler();<span class="comment">// lvgl的任务处理，主要处理事件响应</span></span><br><span class="line">Sleep(<span class="number">10</span>); <span class="comment">// 休眠10ms</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过分析实际我们只需要修改配置和demo就行了，经过对hal_init()的分析发现在lv_conf.h里有个宏定义</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Maximal horizontal and vertical resolution to support by the library.*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_HOR_RES_MAX          (800)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_VER_RES_MAX          (480)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Color depth:</span></span><br><span class="line"><span class="comment"> * - 1:  1 byte per pixel</span></span><br><span class="line"><span class="comment"> * - 8:  RGB332</span></span><br><span class="line"><span class="comment"> * - 16: RGB565</span></span><br><span class="line"><span class="comment"> * - 32: ARGB8888</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_COLOR_DEPTH     32</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>这里有长宽和色深，我们可以修改它，当然还有很多配置，可以自己选择修改。</strong></p><h1 id="编写自己的demo"><a href="#编写自己的demo" class="headerlink" title="编写自己的demo"></a>编写自己的demo</h1><p>通过寻找我们找到了lv_demo_widgets();所在的地方: .\src\lv_demo_benchmark\lv_demo_benchmark.c<br>于是我就自己在src里建立了一个lv_test的文件夹在文件夹内建立了一个.h和.c，然后打开<a href="https://docs.lvgl.io/v7/en/html/widgets/btn.html?highlight=button%EF%BC%8C%E7%A0%94%E7%A9%B6%E4%B8%80%E4%B8%8Bbutton%E6%8E%A7%E4%BB%B6%EF%BC%8C%E5%BC%80%E5%A7%8B%E8%87%AA%E5%B7%B1%E7%BC%96%E5%86%99button%E5%95%A6">https://docs.lvgl.io/v7/en/html/widgets/btn.html?highlight=button，研究一下button控件，开始自己编写button啦</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../../lv_examples.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_ex_btn</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_obj_t</span>* btn1 = lv_btn_create(lv_scr_act(), <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主函数把之前例子函数换成lv_ex_btn()，F5就出来啦</p><p><img src="https://img-blog.csdnimg.cn/2020111814275835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"></p><p>不过这样感觉太简单了加入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">lv_obj_t</span>* label = lv_label_create(btn1, <span class="literal">NULL</span>);</span><br><span class="line">lv_label_set_text(label, <span class="string">&quot;Button&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过创建lable并放到button上，就可以显示Button这个名字啦</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_align(btn1, <span class="literal">NULL</span>, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就可以把它放到中央了，这时我们的按钮就很漂亮了，可以发现因为之前标签放到button上所以移动的时候是二者一起移动的<br>但是我们点击它什么反应都没有。那是因为我们没有绑定相关的“动作函数”在c语言里叫回调函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">event_handler</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">lv_event_t</span> event)</span> <span class="comment">// 设置动作函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event == LV_EVENT_CLICKED) &#123; <span class="comment">// 按下的时候会产生点击事件通过判断可以做出相应响应</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Clicked\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在lv_ex_btn()中加入绑定</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lv_obj_set_event_cb(btn1, event_handler);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>就可以实现效果啦</p><img src="https://img-blog.csdnimg.cn/20201118144452548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"><p>再举一反三，就完成了第一个简单的ui了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;../../lv_examples.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">event_handler</span><span class="params">(<span class="keyword">lv_obj_t</span>* obj, <span class="keyword">lv_event_t</span> event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event == LV_EVENT_CLICKED) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Clicked\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event == LV_EVENT_VALUE_CHANGED) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Toggled\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_ex_btn</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lv_obj_t</span>* btn1 = lv_btn_create(lv_scr_act(), <span class="literal">NULL</span>);</span><br><span class="line">    lv_obj_set_event_cb(btn1, event_handler);</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">lv_obj_t</span>* label = lv_label_create(btn1, <span class="literal">NULL</span>);</span><br><span class="line">    lv_label_set_text(label, <span class="string">&quot;Button&quot;</span>);</span><br><span class="line">    lv_obj_align(btn1, <span class="literal">NULL</span>, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">-40</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">lv_obj_t</span>* btn2 = lv_btn_create(lv_scr_act(), <span class="literal">NULL</span>);</span><br><span class="line">    lv_obj_set_event_cb(btn2, event_handler);</span><br><span class="line">    lv_obj_align(btn2, <span class="literal">NULL</span>, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">40</span>);</span><br><span class="line">    lv_btn_set_checkable(btn2, <span class="literal">true</span>);</span><br><span class="line">    lv_btn_toggle(btn2);</span><br><span class="line">    lv_btn_set_fit2(btn2, LV_FIT_NONE, LV_FIT_TIGHT);</span><br><span class="line"></span><br><span class="line">    label = lv_label_create(btn2, <span class="literal">NULL</span>);</span><br><span class="line">    lv_label_set_text(label, <span class="string">&quot;Toggled&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行效果：</p><img src="https://img-blog.csdnimg.cn/20201118151538294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNjc5NTY2,size_16,color_FFFFFF,t_70#pic_center"><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_42679566/article/details/109771809">LVGL学习之路——模拟器的搭建，使用button做出第一个ui界面</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过Visual Studio 搭建lvgl模拟开发平台</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
  </entry>
  
  <entry>
    <title>C#线程之一（使用Thread）</title>
    <link href="https://zml3589110.github.io/posts/1845063143.html"/>
    <id>https://zml3589110.github.io/posts/1845063143.html</id>
    <published>2022-08-02T09:43:20.000Z</published>
    <updated>2022-09-23T08:31:10.009Z</updated>
    
    <content type="html"><![CDATA[<h1 id="线程界面创建过程"><a href="#线程界面创建过程" class="headerlink" title="线程界面创建过程"></a>线程界面创建过程</h1><p><strong>1. 启动2个线程，一个进行加法计算，一个进行减法计算。并且使界面不卡，随时可以拖动：</strong></p><p><img src="https://img-blog.csdnimg.cn/b56af637d1f4481599c6fd9317dd340a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>2. 在load方法中新建2个线程：</strong></p><p><img src="https://img-blog.csdnimg.cn/15aa999491bb46dcb4ef270d25d96ebb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_19,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>3. 两个线程分别运行加法的方法A和减法的方法B：</strong></p><p><img src="https://img-blog.csdnimg.cn/61ada8ab14a04f8e90d143b060c3d9f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><blockquote><p><strong>注意：这里需要使用Invoke，否则报错下图：</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/d2a7bdd9ad8f4bbaa36149a493010bae.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p><strong>4. 效果：</strong></p><p><img src="https://img-blog.csdnimg.cn/429f5995e0e34347bfbaf1d05b00987a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5pWF6YeMMjEzMA==,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            ThreadStart ts1 = <span class="keyword">new</span> ThreadStart(A);</span><br><span class="line">            Thread t1 = <span class="keyword">new</span> Thread(ts1);</span><br><span class="line">            t1.Start();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            ThreadStart ts2 = <span class="keyword">new</span> ThreadStart(B);</span><br><span class="line">            Thread t2 = <span class="keyword">new</span> Thread(ts2);</span><br><span class="line">            t2.Start();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">A</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//label1.Text = i.ToString();</span></span><br><span class="line">                Invoke(<span class="keyword">new</span> Action(() =&gt; label1.Text = i.ToString()));</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">B</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; Convert.ToInt16(label2.Text); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">                Invoke(<span class="keyword">new</span> Action(() =&gt; label2.Text = (Convert.ToInt16(label2.Text) - <span class="number">1</span>).ToString()));</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/u012563853/article/details/124195187">c#中使用Thread</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过两个线程来进行加减设置</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="线程" scheme="https://zml3589110.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
    <category term="Thread类" scheme="https://zml3589110.github.io/tags/Thread%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之六（Chart 建立多个图表控件）</title>
    <link href="https://zml3589110.github.io/posts/3093651449.html"/>
    <id>https://zml3589110.github.io/posts/3093651449.html</id>
    <published>2022-08-02T09:24:20.000Z</published>
    <updated>2022-09-23T08:31:10.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="https://i0.hdslb.com/bfs/article/a7e021f25deb36a2dda5311509bcbfb460eb6d24.png@942w_665h_progressive.webp"></p><h1 id="创建chart控件"><a href="#创建chart控件" class="headerlink" title="创建chart控件"></a>创建chart控件</h1><p>首先是在工具箱-数据分组中我们就可以看到chart控件，使用时拖拽到界面即可。可以通过属性面板设置其样式，也可以通过代码来调整样式。设置的属性可参照：<br><a href="https://www.cnblogs.com/arxive/p/5861960.html">https://www.cnblogs.com/arxive/p/5861960.html</a></p><h1 id="创建通用类"><a href="#创建通用类" class="headerlink" title="创建通用类"></a>创建通用类</h1><blockquote><p><strong>总结的部分设置chart样式功能的通用类：</strong></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChartHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：添加序列</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;seriesName&quot;&gt;</span>序列名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chartType&quot;&gt;</span>图表类型<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;color&quot;&gt;</span>颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;markColor&quot;&gt;</span>标记点颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;showValue&quot;&gt;</span>是否显示数值<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">AddSeries</span>(<span class="params">Chart chart, <span class="built_in">string</span> seriesName, SeriesChartType chartType, Color color, Color markColor, <span class="built_in">bool</span> showValue = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.Series.Add(seriesName);</span><br><span class="line">        chart.Series[seriesName].ChartType = chartType;</span><br><span class="line">        chart.Series[seriesName].Color = color;</span><br><span class="line">        <span class="keyword">if</span> (showValue)</span><br><span class="line">        &#123;</span><br><span class="line">            chart.Series[seriesName].IsValueShownAsLabel = <span class="literal">true</span>;</span><br><span class="line">            chart.Series[seriesName].MarkerStyle = MarkerStyle.Circle;</span><br><span class="line">            chart.Series[seriesName].MarkerColor = markColor;</span><br><span class="line">            chart.Series[seriesName].LabelForeColor = color;</span><br><span class="line">            chart.Series[seriesName].LabelAngle = <span class="number">-90</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置标题</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chartName&quot;&gt;</span>图表名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetTitle</span>(<span class="params">Chart chart, <span class="built_in">string</span> chartName, Font font, Docking docking, Color foreColor</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.Titles.Add(chartName);</span><br><span class="line">        chart.Titles[<span class="number">0</span>].Font = font;</span><br><span class="line">        chart.Titles[<span class="number">0</span>].Docking = docking;</span><br><span class="line">        chart.Titles[<span class="number">0</span>].ForeColor = foreColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置样式</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;backColor&quot;&gt;</span>背景颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;foreColor&quot;&gt;</span>字体颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetStyle</span>(<span class="params">Chart chart, Color backColor, Color foreColor</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.BackColor = backColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].BackColor = backColor;</span><br><span class="line">        chart.ForeColor = Color.Red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置图例</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;docking&quot;&gt;</span>停靠位置<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;align&quot;&gt;</span>对齐方式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;backColor&quot;&gt;</span>背景颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;foreColor&quot;&gt;</span>字体颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetLegend</span>(<span class="params">Chart chart, Docking docking, StringAlignment align, Color backColor, Color foreColor</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].Docking = docking;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].Alignment = align;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].BackColor = backColor;</span><br><span class="line">        chart.Legends[<span class="number">0</span>].ForeColor = foreColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置XY轴</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;xTitle&quot;&gt;</span>X轴标题<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;yTitle&quot;&gt;</span>Y轴标题<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;align&quot;&gt;</span>坐标轴标题对齐方式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;foreColor&quot;&gt;</span>坐标轴字体颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;lineColor&quot;&gt;</span>坐标轴颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;arrowStyle&quot;&gt;</span>坐标轴箭头样式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;xInterval&quot;&gt;</span>X轴的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;yInterval&quot;&gt;</span>Y轴的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetXY</span>(<span class="params">Chart chart, <span class="built_in">string</span> xTitle, <span class="built_in">string</span> yTitle, StringAlignment align, Color foreColor, Color lineColor, AxisArrowStyle arrowStyle, <span class="built_in">double</span> xInterval, <span class="built_in">double</span> yInterval</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.Title = xTitle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.Title = yTitle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.TitleAlignment = align;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.TitleAlignment = align;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.TitleForeColor = foreColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.TitleForeColor = foreColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.LabelStyle = <span class="keyword">new</span> LabelStyle() &#123; ForeColor = foreColor &#125;;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.LabelStyle = <span class="keyword">new</span> LabelStyle() &#123; ForeColor = foreColor &#125;;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.ArrowStyle = arrowStyle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.ArrowStyle = arrowStyle;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.Interval = xInterval;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.Interval = yInterval;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Name：设置网格</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;chart&quot;&gt;</span>图表对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;lineColor&quot;&gt;</span>网格线颜色<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;xInterval&quot;&gt;</span>X轴网格的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;yInterval&quot;&gt;</span>Y轴网格的间距<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SetMajorGrid</span>(<span class="params">Chart chart, Color lineColor, <span class="built_in">double</span> xInterval, <span class="built_in">double</span> yInterval</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.LineColor = lineColor;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisX.MajorGrid.Interval = xInterval;</span><br><span class="line">        chart.ChartAreas[<span class="number">0</span>].AxisY.MajorGrid.Interval = yInterval;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加form-load事件代码"><a href="#添加form-load事件代码" class="headerlink" title="添加form_load事件代码"></a>添加form_load事件代码</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">chart1.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart1, <span class="string">&quot;柱状图&quot;</span>, SeriesChartType.Column, Color.Lime, Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.AddSeries(chart1, <span class="string">&quot;曲线图&quot;</span>, SeriesChartType.Spline, Color.Red, Color.Red);</span><br><span class="line">ChartHelper.SetTitle(chart1, <span class="string">&quot;柱状图与曲线图&quot;</span>, <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12</span>), Docking.Bottom, Color.White);</span><br><span class="line">ChartHelper.SetStyle(chart1, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart1, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetXY(chart1, <span class="string">&quot;序号&quot;</span>, <span class="string">&quot;数值&quot;</span>, StringAlignment.Far, Color.White, Color.White, AxisArrowStyle.SharpTriangle, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">ChartHelper.SetMajorGrid(chart1, Color.Gray, <span class="number">20</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">chart2.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart2, <span class="string">&quot;饼状图&quot;</span>, SeriesChartType.Pie, Color.Lime, Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.SetStyle(chart2, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart2, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line"></span><br><span class="line">chart3.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart3, <span class="string">&quot;曲线图&quot;</span>, SeriesChartType.SplineRange, Color.FromArgb(<span class="number">100</span>, <span class="number">46</span>, <span class="number">199</span>, <span class="number">201</span>), Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.SetTitle(chart3, <span class="string">&quot;曲线图&quot;</span>, <span class="keyword">new</span> Font(<span class="string">&quot;微软雅黑&quot;</span>, <span class="number">12</span>), Docking.Bottom, Color.FromArgb(<span class="number">46</span>, <span class="number">199</span>, <span class="number">201</span>));</span><br><span class="line">ChartHelper.SetStyle(chart3, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart3, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetXY(chart3, <span class="string">&quot;序号&quot;</span>, <span class="string">&quot;数值&quot;</span>, StringAlignment.Far, Color.White, Color.White, AxisArrowStyle.SharpTriangle, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">ChartHelper.SetMajorGrid(chart3, Color.Gray, <span class="number">20</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">chart4.Series.Clear();</span><br><span class="line">ChartHelper.AddSeries(chart4, <span class="string">&quot;饼状图&quot;</span>, SeriesChartType.Funnel, Color.Lime, Color.Red, <span class="literal">true</span>);</span><br><span class="line">ChartHelper.SetStyle(chart4, Color.Transparent, Color.White);</span><br><span class="line">ChartHelper.SetLegend(chart4, Docking.Top, StringAlignment.Center, Color.Transparent, Color.White);</span><br><span class="line"></span><br><span class="line">RefreshData();</span><br></pre></td></tr></table></figure><h1 id="添加一些方法功能"><a href="#添加一些方法功能" class="headerlink" title="添加一些方法功能"></a>添加一些方法功能</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RefreshData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; x1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span> &#125;;</span><br><span class="line">    List&lt;<span class="built_in">int</span>&gt; y1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">    Random ra = <span class="keyword">new</span> Random();</span><br><span class="line">    y1 = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123;</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>),</span><br><span class="line">        ra.Next(<span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart1&quot;</span>);</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart2&quot;</span>);</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart3&quot;</span>);</span><br><span class="line">    RefreshChart(x1, y1, <span class="string">&quot;chart4&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">RefreshChartDelegate</span>(<span class="params">List&lt;<span class="built_in">int</span>&gt; x, List&lt;<span class="built_in">int</span>&gt; y, <span class="built_in">string</span> type</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">RefreshChart</span>(<span class="params">List&lt;<span class="built_in">int</span>&gt; x, List&lt;<span class="built_in">int</span>&gt; y, <span class="built_in">string</span> type</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (type == <span class="string">&quot;chart1&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart1.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            chart1.Series[<span class="number">1</span>].Points.DataBindXY(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="string">&quot;chart2&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart2.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart2.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            List&lt;Color&gt; colors = <span class="keyword">new</span> List&lt;Color&gt;() &#123;</span><br><span class="line">                Color.Red,</span><br><span class="line">                Color.DarkRed,</span><br><span class="line">                Color.IndianRed,</span><br><span class="line">                Color.MediumVioletRed,</span><br><span class="line">                Color.OrangeRed,</span><br><span class="line">                Color.PaleVioletRed,</span><br><span class="line">                Color.Purple,</span><br><span class="line">                Color.DarkOrange,</span><br><span class="line">                Color.Maroon,</span><br><span class="line">                Color.LightCoral,</span><br><span class="line">                Color.LightPink,</span><br><span class="line">                Color.Magenta</span><br><span class="line">            &#125;;</span><br><span class="line">            DataPointCollection points = chart2.Series[<span class="number">0</span>].Points;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; points.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                points[i].Color = colors[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="string">&quot;chart3&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart3.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart3.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (type == <span class="string">&quot;chart4&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.chart4.InvokeRequired)</span><br><span class="line">        &#123;</span><br><span class="line">            RefreshChartDelegate stcb = <span class="keyword">new</span> RefreshChartDelegate(RefreshChart);</span><br><span class="line">            <span class="keyword">this</span>.Invoke(stcb, <span class="keyword">new</span> <span class="built_in">object</span>[] &#123; x, y, type &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            chart4.Series[<span class="number">0</span>].Points.DataBindXY(x, y);</span><br><span class="line">            List&lt;Color&gt; colors = <span class="keyword">new</span> List&lt;Color&gt;() &#123;</span><br><span class="line">                Color.Red,</span><br><span class="line">                Color.DarkRed,</span><br><span class="line">                Color.IndianRed,</span><br><span class="line">                Color.MediumVioletRed,</span><br><span class="line">                Color.OrangeRed,</span><br><span class="line">                Color.PaleVioletRed,</span><br><span class="line">                Color.Purple,</span><br><span class="line">                Color.DarkOrange,</span><br><span class="line">                Color.Maroon,</span><br><span class="line">                Color.LightCoral,</span><br><span class="line">                Color.LightPink,</span><br><span class="line">                Color.Magenta</span><br><span class="line">            &#125;;</span><br><span class="line">            DataPointCollection points = chart4.Series[<span class="number">0</span>].Points;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; points.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                points[i].Color = colors[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加定时器定时刷新功能"><a href="#添加定时器定时刷新功能" class="headerlink" title="添加定时器定时刷新功能"></a>添加定时器定时刷新功能</h1><blockquote><p><strong>注意：定时器添加的线程Thread需要先定义后使用</strong><br>在声明处添加 <strong>using System.Threading;</strong> 即可</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">new</span> Thread(<span class="keyword">new</span> ThreadStart(RefreshData)).Start();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加按钮控制开始和停止"><a href="#添加按钮控制开始和停止" class="headerlink" title="添加按钮控制开始和停止"></a>添加按钮控制开始和停止</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b_tstart)</span><br><span class="line">    &#123;</span><br><span class="line">        b_tstart=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.timer1.Stop();</span><br><span class="line">        button1.Text = <span class="string">&quot;启动&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        b_tstart = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.timer1.Start();</span><br><span class="line">        button1.Text = <span class="string">&quot;停止&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.bilibili.com/read/cv14839280/">C#中Winform Chart图表控件使用</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Chart建立多个不同类型图表控件,折线图、柱形图、环形图等</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之五（Chart 创建多个ChartArea）</title>
    <link href="https://zml3589110.github.io/posts/123814450.html"/>
    <id>https://zml3589110.github.io/posts/123814450.html</id>
    <published>2022-08-01T12:43:20.000Z</published>
    <updated>2022-08-01T13:03:27.901Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在窗口上添加Chart控件"><a href="#在窗口上添加Chart控件" class="headerlink" title="在窗口上添加Chart控件"></a>在窗口上添加Chart控件</h1><p><strong>chart控件属性设置：【图表】–【ChartAreas集合】。此处设置了2个ChartArea。</strong></p><p><img src="https://www.freesion.com/images/666/11f937002736420bcd0f754f039c3caa.png"></p><h1 id="设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，"><a href="#设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，" class="headerlink" title="设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，"></a>设置曲线：如果曲线较少的话，可以在【属性】-【图表】-【Series集合】中添加曲线，</h1><p><img src="https://www.freesion.com/images/901/e7d0d1e5c5d4e31a124a9c9d3c1d9b85.png"></p><h1 id="曲线较多，可以自己写代码设置"><a href="#曲线较多，可以自己写代码设置" class="headerlink" title="曲线较多，可以自己写代码设置"></a>曲线较多，可以自己写代码设置</h1><blockquote><p>这个例子中我用代码设置了3条曲线。</p></blockquote><p><strong>全部代码如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     <span class="keyword">init</span>();<span class="comment">//曲线初始化</span></span><br><span class="line">     timer1.Start();<span class="comment">//开启计时器</span></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 曲线初始化</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     <span class="comment">//清除默认的series</span></span><br><span class="line">     chart1.Series.Clear();</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>;i&lt; <span class="number">3</span>;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         Series series = <span class="keyword">new</span> Series(SERIES[i]);</span><br><span class="line">         series.ChartType = SeriesChartType.Spline;</span><br><span class="line">         series.MarkerBorderWidth = <span class="number">2</span>;</span><br><span class="line">         series.MarkerSize = <span class="number">4</span>;</span><br><span class="line">         series.MarkerStyle = MarkerStyle.Circle;</span><br><span class="line">         series.ToolTip = SERIES[i] + <span class="string">&quot; #VAL \r\n #AXISLABEL&quot;</span>;</span><br><span class="line">         chart1.Series.Add(series);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 曲线</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">string</span>[] SERIES =</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="string">&quot;曲线一&quot;</span>,<span class="string">&quot;曲线二&quot;</span>,<span class="string">&quot;曲线三&quot;</span></span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 计时器</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;sender&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;e&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     Random r1 = <span class="keyword">new</span> Random();</span><br><span class="line">     <span class="built_in">int</span> val1 = r1.Next(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">     Random r2 = <span class="keyword">new</span> Random();</span><br><span class="line">     <span class="built_in">int</span> val2 = r1.Next(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">     Random r3 = <span class="keyword">new</span> Random();</span><br><span class="line">     <span class="built_in">int</span> val3 = r1.Next(<span class="number">0</span>, <span class="number">100</span>);</span><br><span class="line">     <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartArea = <span class="string">&quot;ChartArea1&quot;</span>;</span><br><span class="line">         <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].ChartArea = <span class="string">&quot;ChartArea1&quot;</span>;</span><br><span class="line">         <span class="keyword">this</span>.chart1.Series[<span class="number">2</span>].ChartArea = <span class="string">&quot;ChartArea2&quot;</span>;</span><br><span class="line">         chart1.Series[<span class="number">0</span>].Points.AddY(val1);</span><br><span class="line">         chart1.Series[<span class="number">1</span>].Points.AddY(val2);</span><br><span class="line">         chart1.Series[<span class="number">2</span>].Points.AddY(val3);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>结果如图所示：</strong></p><p><img src="https://www.freesion.com/images/818/3bdc9fa7ad793b900c225760e51ac122.png"></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.freesion.com/article/2399683528/">C# CHART控件多个CHARTAREA</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Chart创建多个ChartArea图表</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之四（Chart 简单绘图）</title>
    <link href="https://zml3589110.github.io/posts/4010725329.html"/>
    <id>https://zml3589110.github.io/posts/4010725329.html</id>
    <published>2022-08-01T12:11:20.000Z</published>
    <updated>2022-08-01T13:03:27.893Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Chart控件可以用来绘制波形图、柱状图、饼图、折线图等，用来进行数据表现是很不错的，现在简单说一下这个控件的使用方法</p></blockquote><h1 id="一、效果图"><a href="#一、效果图" class="headerlink" title="一、效果图"></a>一、效果图</h1><p><img src="https://img-blog.csdnimg.cn/2021012817414331.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><h1 id="二、设置步骤"><a href="#二、设置步骤" class="headerlink" title="二、设置步骤"></a>二、设置步骤</h1><p><strong>首先要加载Chart控件：</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128174254241.png"></p><p><strong>打开控件的属性窗口</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128174442185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><p><strong>在这个窗口里面我们可以修改曲线的名称，名称在【数据》Name】里面修改</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128174511238.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><h1 id="三、常用几个选项的作用"><a href="#三、常用几个选项的作用" class="headerlink" title="三、常用几个选项的作用"></a>三、常用几个选项的作用</h1><blockquote><p><strong>数据：XValueType是X轴的数据类型，Y同理，这里我们选Time，可以随时间改变</strong><br><strong>图表：ChartType是图表的类型，我们可以选出我们想要用的类型，这里选曲线</strong></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210128175000769.png"></p><blockquote><p><strong>外观：Color可以选择曲线的颜色，这里我选了红色</strong><br><strong>其他：左边的成员框，是我们要显示的曲线，可以添加多个</strong></p></blockquote><blockquote><p>其他属性如果有需要自行修改，修改好之后确定，回到窗口设计界面</p></blockquote><p><strong>在工具箱添加Timer</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128175311218.png"></p><p><strong>在Timer的事件窗口双击时钟事件</strong></p><p><img src="https://img-blog.csdnimg.cn/20210128175423217.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3psbGxn,size_16,color_FFFFFF,t_70"></p><h1 id="四、代码实现"><a href="#四、代码实现" class="headerlink" title="四、代码实现"></a>四、代码实现</h1><blockquote><p>代码如下，请自行对照填到对应的事件里面去</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            timer1.Enabled = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            chart1.Series[<span class="number">0</span>].Points.AddY(cnt*cnt);</span><br><span class="line">            label1.Text = cnt.ToString();</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">chart1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>注：cnt是个自变量，曲线显示的是cnt为底的2次指数曲线</strong></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/zlllg/article/details/113353399">C#中如何使用Chart图表</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Chart制作简单绘图</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#语法之二（try-catch用法）</title>
    <link href="https://zml3589110.github.io/posts/2758512064.html"/>
    <id>https://zml3589110.github.io/posts/2758512064.html</id>
    <published>2022-08-01T09:51:20.000Z</published>
    <updated>2022-08-01T13:03:27.905Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Try-Catch-说明和使用"><a href="#Try-Catch-说明和使用" class="headerlink" title="Try-Catch 说明和使用"></a>Try-Catch 说明和使用</h1><blockquote><p>在C#程序运行中，不可避免的会出现很多异常事件，这些异常事件会阻止程序继续运行，给用户体验增加困难。所以我们要尽量避免异常的同时，也要对异常进行处理。这时就需要使用到try-catch语句。</p></blockquote><p><strong>例如，写一段异常程序，不用try-catch，效果如下：</strong></p><p><img src="https://img-blog.csdnimg.cn/430345e553ae44dbb45b4e3710238fb0.png"></p><p>这时系统会弹出如下错误，直接将错误弹出来，使用户体验不好。</p><p><img src="https://img-blog.csdnimg.cn/a85bf5ad88f9451b9dc4e861b19a69ca.png"></p><p><strong>使用Try-catch用法之后，代码和效果如下所示：</strong></p><p><img src="https://img-blog.csdnimg.cn/60db0f9c1684467f94018622a9a79e90.png"></p><p>则若产生异常，会根据程序输出相应的错误提示，提高用户体验，如下所示：</p><p><img src="https://img-blog.csdnimg.cn/370edc3ef7484492b7c2351fb9b275bc.png"></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_41883890/article/details/124725452">C#语法中try-catch的用法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#中 try-catch 的用法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="语法" scheme="https://zml3589110.github.io/tags/%E8%AF%AD%E6%B3%95/"/>
    
    <category term="try-catch" scheme="https://zml3589110.github.io/tags/try-catch/"/>
    
  </entry>
  
  <entry>
    <title>C#数学函数之一（正弦sin、反正弦arcsin，正切tan、反正切arctan）</title>
    <link href="https://zml3589110.github.io/posts/1660897681.html"/>
    <id>https://zml3589110.github.io/posts/1660897681.html</id>
    <published>2022-08-01T09:11:20.000Z</published>
    <updated>2022-08-01T13:03:27.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 三角函数和反三角函数</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Messaging;</span><br><span class="line"><span class="keyword">using</span> System.Net.Sockets;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Xml.Linq;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">test</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 正弦、反正弦</span></span><br><span class="line">            <span class="comment">//正弦</span></span><br><span class="line">            <span class="built_in">double</span> sinAngleValue1 = <span class="number">30</span>;<span class="comment">//角度值：30度。</span></span><br><span class="line">            <span class="built_in">double</span> sinRadianValue1 = Math.PI * sinAngleValue1 / <span class="number">180</span>;<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> sinValue1 = Math.Sin(sinRadianValue1);<span class="comment">//求sin30度，其实sin30度 = sin(PI/6)，但是，数学上或代码上，常常用弧度PI/6,来计算sin(PI/6)，其他函数同理。</span></span><br><span class="line">            Console.WriteLine(sinValue1);</span><br><span class="line">            <span class="comment">//反正弦</span></span><br><span class="line">            <span class="built_in">double</span> sinValue2 = <span class="number">0.5</span>;<span class="comment">//正弦值 = 0.5。</span></span><br><span class="line">            <span class="built_in">double</span> sinRadianValue2 = Math.Asin(sinValue2);<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> sinAngleValue2 = sinRadianValue2 / Math.PI * <span class="number">180</span>;<span class="comment">//根据弧度值，来求角度值。</span></span><br><span class="line">            Console.WriteLine(sinAngleValue2);</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"> </span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 正切、反正切</span></span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            Console.WriteLine();</span><br><span class="line">            <span class="comment">//正切</span></span><br><span class="line">            <span class="built_in">double</span> tanAngleValue1 = <span class="number">15</span>;<span class="comment">//角度值</span></span><br><span class="line">            <span class="built_in">double</span> tanRadianValue1 = Math.PI * tanAngleValue1 / <span class="number">180</span>;<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> tanValue1 = Math.Tan(tanRadianValue1);<span class="comment">//tan值</span></span><br><span class="line">            Console.WriteLine(tanValue1);<span class="comment">//tan值</span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">double</span> tanValue2 = <span class="number">1</span>;<span class="comment">//正切值</span></span><br><span class="line">            <span class="built_in">double</span> tanRadianValue2 = Math.Atan(tanValue2);<span class="comment">//求弧度值</span></span><br><span class="line">            <span class="built_in">double</span> tanAngleValue2 = tanRadianValue2 / Math.PI *<span class="number">180</span>;<span class="comment">//求角度</span></span><br><span class="line">            Console.WriteLine(tanAngleValue2);</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.51cto.com/u_15241978/2850238">c#实现 正弦sin、反正弦arcsin，正切tan、反正切arctan：求角度值</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">正弦sin、反正弦arcsin，正切tan、反正切arctan：求角度值</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="数学函数" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>C#编辑器之一（#region 大纲功能）</title>
    <link href="https://zml3589110.github.io/posts/3856603375.html"/>
    <id>https://zml3589110.github.io/posts/3856603375.html</id>
    <published>2022-08-01T08:54:20.000Z</published>
    <updated>2022-08-01T13:03:27.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="region说明"><a href="#region说明" class="headerlink" title="region说明"></a>region说明</h1><p>利用 #region，可以指定在使用 Visual Studio Code 编辑器的大纲功能时可展开或折叠的代码块。<br>在较长的代码文件中，能够折叠或隐藏一个或多个区域会十分便利，这样，可将精力集中于当前处理的文件部分。</p><h1 id="添加方式和效果"><a href="#添加方式和效果" class="headerlink" title="添加方式和效果"></a>添加方式和效果</h1><p><strong>添加步骤：</strong><br>方法一、选中需要添加的代码段——右键——片段——外侧代码。<br>方法二、手动输入 #region</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 分页列表展示</span></span><br><span class="line">         <span class="function"><span class="keyword">public</span> ActionResult <span class="title">Index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="built_in">int</span> pageIndex = Request[<span class="string">&quot;pageIndex&quot;</span>] != <span class="literal">null</span> ? Convert.ToInt32(Request[<span class="string">&quot;pageIndex&quot;</span>]) : <span class="number">1</span>;</span><br><span class="line">           <span class="built_in">int</span> pageSize = <span class="number">5</span>;</span><br><span class="line">           <span class="built_in">int</span> pageCount = NewInfoService.GetPageCount(pageSize);</span><br><span class="line">           pageIndex = pageIndex &lt; <span class="number">1</span> ? <span class="number">1</span> : pageIndex;</span><br><span class="line">           pageIndex = pageIndex &gt; pageCount ? pageCount : pageIndex;</span><br><span class="line">           List&lt;T_New&gt;list=NewInfoService.GetPageEntityList(pageIndex, pageSize);</span><br><span class="line">           ViewData[<span class="string">&quot;newInfoList&quot;</span>] = list;</span><br><span class="line">           ViewData[<span class="string">&quot;pageIndex&quot;</span>] = pageIndex;</span><br><span class="line">           ViewData[<span class="string">&quot;pageCount&quot;</span>] = pageCount;</span><br><span class="line">           <span class="keyword">return</span> View();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdn.net/2018051410513243?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ2NTYyMw==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70"></p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p><code>#region</code> 块必须通过 <a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-endregion">#endregion</a> 指令终止。</p><p><code>#region</code> 块不能与 <a href="https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-if">#if</a> 块重叠。 但是，可以将 <code>#region</code> 块嵌套在 <code>#if</code> 块内，或将 <code>#if</code> 块嵌套在 <code>#region</code> 块内。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/weixin_38465623/article/details/80306743">#region</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">大纲功能折叠分页功能</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="编辑器" scheme="https://zml3589110.github.io/tags/%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    
    <category term="大纲功能" scheme="https://zml3589110.github.io/tags/%E5%A4%A7%E7%BA%B2%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之三（Chart 设置Y轴自适应）</title>
    <link href="https://zml3589110.github.io/posts/1486382218.html"/>
    <id>https://zml3589110.github.io/posts/1486382218.html</id>
    <published>2022-08-01T07:30:20.000Z</published>
    <updated>2022-08-01T13:03:27.890Z</updated>
    
    <content type="html"><![CDATA[<p>既然用到了chart控件，那么这个图像就有各种不确定的数据以及多条曲线</p><h1 id="一、Y轴的自适应"><a href="#一、Y轴的自适应" class="headerlink" title="一、Y轴的自适应"></a>一、Y轴的自适应</h1><blockquote><p><strong>关于Y轴的自适应只需要在设置图表时将最大值和最小值改为一下代码即可</strong></p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.chart1.ChartAreas[<span class="number">0</span>].AxisY.IsStartedFromZero = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h1 id="二、多条线的展示（核心代码如下）"><a href="#二、多条线的展示（核心代码如下）" class="headerlink" title="二、多条线的展示（核心代码如下）"></a>二、多条线的展示（核心代码如下）</h1><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置图表显示样式</span></span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Color = Color.Blue;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Titles[<span class="number">0</span>].Text = <span class="built_in">string</span>.Format(<span class="string">&quot;这是一个测试表&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartType = SeriesChartType.Line;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].ChartType = SeriesChartType.FastLine;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">0</span>].Points.Clear();</span><br><span class="line">            <span class="comment">//第二条图像</span></span><br><span class="line">            Series series2 = <span class="keyword">new</span> Series(<span class="string">&quot;S2&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series.Add(series2);</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].Color = Color.Red;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].ChartType = SeriesChartType.Spline;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].ChartType = SeriesChartType.FastLine;</span><br><span class="line">            <span class="keyword">this</span>.chart1.Series[<span class="number">1</span>].Points.Clear();</span><br></pre></td></tr></table></figure><p>这是对差chart产生两个数据的设定，除此之外，还需要对数据更新时设置，将二者分开设置（在这里不进行详细的说明了，可以直接复制对只有一个线的数据更新）</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/Caiabcd/article/details/108910488">C#的chart控件生成的波形图Y轴自适应</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Chart设置Y轴范围为自适应</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
  <entry>
    <title>C#绘图之二（Chart 样式说明）</title>
    <link href="https://zml3589110.github.io/posts/2957355685.html"/>
    <id>https://zml3589110.github.io/posts/2957355685.html</id>
    <published>2022-08-01T07:30:20.000Z</published>
    <updated>2022-08-01T13:03:27.909Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、Chart属性熟悉"><a href="#一、Chart属性熟悉" class="headerlink" title="一、Chart属性熟悉"></a>一、Chart属性熟悉</h1><blockquote><p>能够对C# chart控件属性熟悉起帮助的code, 现在分享给大家，<a href="https://files.cnblogs.com/files/arxive/WinChart_Operate_Demo.rar">Chart Operate Demo Code Download</a>，如有帮助，别忘点个赞.</p></blockquote><p><img src="https://images2015.cnblogs.com/blog/527375/201609/527375-20160912142644711-1711793675.png" alt="img"></p><p>有关MS_Chart的Control范围、ChartArea范围、InnerPlotArea范围，及Lengend、刻度与标签的位置关系如下图所示。以便让大家有个清晰的认识。</p><p><img src="https://images2015.cnblogs.com/blog/527375/201703/527375-20170316151631057-660893516.jpg" alt="img"></p><p>Chart<br>    ChartBorder            图表区域的边框设置<br>    ChartFill             图表区域的背景填充<br>    Legend              图表的注释标签显示设置项目，一组数据对应一种颜色的注释<br>      IsHStack           当有多个显示项的时候设置Y轴数据是叠加的还是分开的<br>    Xaxis               图表区域的X轴相关信息设置<br>      AxisColor          坐标轴颜色<br>      Cross            坐标的原点，可以设置坐标的偏移程度<br>      CrossAuto          原点自动设置：True的话Cross的设置就无效了。<br>      FontSpec           X轴标题字体相关信息<br>         Angle         X轴标题字体显示时候的角度，0为水平 90为垂直<br>         Fill          X轴标题字体填充信息<br>            ColorOpacity   透明度<br>            IsScaled     设置X轴标题字体显示大小是否根据图的比例放大缩小<br>            RangeMax     填充时候的最大倾斜度（有过渡色，没试过）<br>            RangeMin     填充时候的最小倾斜度（有过渡色，没试过）<br>         StringAlignment    X轴标题字体排列（不清楚，没试过）<br>      IsOmitMag          是否显示指数幂（10次方，没试过，似乎与IsUseTenPower有关系）<br>      IsPreventLabelOverlap    坐标值显示是否允许重叠，如果False的话，控件会根据坐标值长度自动消除部分坐标值的显示状态<br>      IsShowTitle         X轴标题是否显示<br>      IsTicsBetweenLabels     两个坐标值之间是否自动显示分隔标志<br>      IsUseTenPower        是否使用10次幂指数<br>      IsVisible          是否显示X轴<br>      IsZeroLine          当数据为0时候是否显示（在饼状图显示的时候有用）<br>      MajorGrid          大跨度的X轴表格虚线线显示信息<br>         DashOff        虚线中孔间距<br>         DashOn         虚线单位长度<br>      MajorTic           大跨度的X轴刻度信息<br>         IsInside        在Chart内部是否显示<br>         IsOutSide       在Chart外部是否显示<br>         IsOpposite       在对面的轴上是否显示<br>      MinorGrid          小跨度的X轴表格虚线显示信息<br>      MinorTic           小跨度的x轴刻度信息<br>      MinSpace           刻度和轴之间的距离（没试过）<br>      Scale            刻度值的一些设定<br>         IsReverse       X轴的刻度值从高到低还是从低到高<br>         MajorStep       大刻度步长<br>         MajorStepAuto     是否自动设置大刻度步长<br>         MajorUnit       大刻度步长单位<br>         Max          刻度最大值<br>         MaxAuto        根据输入数据自动设置刻度最大值<br>         Min          刻度最小值<br>         MinAuto        根据输入数据自动设置刻度最小值<br>         MinGrace        不清楚，没试过<br>         MinorStep       小刻度步长<br>         MinorStepAuto     是否自动设置小刻度步长<br>         MinorUnit       小刻度单位<br>      Type             数据显示方式<br>                      Liner直接现实（自动）<br>                      Date按日期方式显示<br>                      Log 按指数幂方式显示<br>                      Ordinal顺序显示<br>    Y2Axis              第二个Y轴坐标信息显示（具体设置看X轴）<br>    Yaxis               第一个Y轴坐标信息显示（具体设置看X轴）</p><p>GraphPane<br>    BarBase              在生成柱状图的时候设置柱状是基于X轴还是其他轴<br>    BarType              柱状的类型叠加或其他。<br>    IsFontsScaled           图比例变化时候图表上的文字是否跟着自动缩放<br>    IsIgnoreInitial          是否忽略初始值<br>    IsIgnoreMissing          是否忽略缺省值<br>    IsPenWidthScaled         图比例变化时候图表上的画笔的粗细是否跟着自动缩放<br>    IsShowTitle            图表标题是否显示<br>    PaneFill             Pane的一些填充信息</p><p>MasterPane<br>    BaseDimension           缩放比例基数（可以试试效果）</p><p>数据                   未测试过。不知道如何和数据库绑定</p><p>外观<br>    IsImageMap            不清楚干吗用的</p><p>行为<br>    AxisChaneged           是否允许自动绘图（没试过，一般都true，动态绘图）<br>    CacheDuration           Cache保存时间0<br>    OutputFormat           输出格式<br>    RenderedImagePath         输出路径<br>    RenderMode            输出模式，不太清楚一般都是ImageTag，另一个输出的是乱码不是图片</p><p>对于图表而言，一般是三种表现形式：柱状图、饼状图和点线图。</p><p>ChartBorder<br>图表区域的边框设置</p><p>ChartFill<br>图表区域的背景填充</p><p>Legend<br>图表的注释标签显示设置项目，一组数据对应一种颜色的注释</p><p>IsHStack<br>当有多个显示项的时候设置 Y 轴数据是叠加的还是分开的</p><p>Xaxis<br>图表区域的 X 轴相关信息设置</p><p>AxisColor<br>坐标轴颜色</p><p>Cross<br>坐标的原点，可以设置坐标的偏移程度</p><p>CrossAuto<br>原点自动设置：True 的话 Cross 的设置就无效了。</p><p>FontSpec<br>X 轴标题字体相关信息</p><p>Angle<br>X 轴标题字体显示时候的角度，0为水平 90为垂直</p><p>Fill<br>X 轴标题字体填充信息</p><p>ColorOpacity<br>透明度</p><p>IsScaled<br>设置 X 轴标题字体显示大小是否根据图的比例放大缩小</p><p>RangeMax<br>填充时候的最大倾斜度（有过渡色，没试过）</p><p>RangeMin<br>填充时候的最小倾斜度（有过渡色，没试过）</p><p>StringAlignment<br>X 轴标题字体排列（不清楚，没试过）</p><p>IsOmitMag<br>是否显示指数幂（10次方，没试过，似乎与 IsUseTenPower 有关系）</p><p>IsPreventLabelOverlap<br>坐标值显示是否允许重叠，如果False的话，控件会根据坐标值长度自动消除部分坐标值的显示状态</p><p>IsShowTitle<br>X 轴标题是否显示</p><p>IsTicsBetweenLabels<br>两个坐标值之间是否自动显示分隔标志</p><p>IsUseTenPower<br>是否使用10次幂指数</p><p>IsZeroLine<br>当数据为0时候是否显示（在饼状图显示的时候有用）</p><p>IsVisible<br>是否显示 X 轴</p><p>MajorGrid<br>大跨度的 X 轴表格虚线线显示信息</p><p>DashOff<br>虚线中孔间距</p><p>DashOn<br>虚线单位长度</p><p>MajorTic<br>大跨度的 X 轴刻度信息</p><p>IsInside<br>在 Chart 内部是否显示</p><p>IsOutSide<br>在 Chart 外部是否显示</p><p>IsOpposite<br>在对面的轴上是否显示</p><p>MinorGrid<br>小跨度的 X 轴表格虚线显示信息</p><p>MinorTic<br>小跨度的 x 轴刻度信息</p><p>MinSpace<br>刻度和轴之间的距离（没试过）</p><p>Scale<br>刻度值的一些设定</p><p>IsReverse<br>X 轴的刻度值从高到低还是从低到高</p><p>MajorStep<br>大刻度步长</p><p>MajorStepAuto<br>是否自动设置大刻度步长</p><p>MajorUnit<br>大刻度步长单位</p><p>Max<br>刻度最大值</p><p>MaxAuto<br>根据输入数据自动设置刻度最大值</p><p>Min<br>刻度最小值</p><p>MinAuto<br>根据输入数据自动设置刻度最小值</p><p>MinGrace<br>不清楚，没试过</p><p>MinorStep<br>小刻度步长</p><p>MinorStepAuto<br>是否自动设置小刻度步长</p><p>MinorUnit<br>小刻度单位</p><p>Type<br>数据显示方式</p><p>Liner<br>直接现实（自动）</p><p>Date<br>按日期方式显示</p><p>Log<br>按指数幂方式显示</p><p>Ordinal<br>顺序显示</p><p>Y2Axis<br>第二个 Y 轴坐标信息显示（具体设置看 X 轴）</p><p>Yaxis<br>第一个 Y 轴坐标信息显示（具体设置看 X 轴）</p><p>BarBase<br>在生成柱状图的时候设置柱状是基于 X 轴还是其他轴</p><p>BarType<br>柱状的类型叠加或其他。</p><p>IsFontsScaled<br>图比例变化时候图表上的文字是否跟着自动缩放</p><p>IsIgnoreInitial<br>是否忽略初始值</p><p>IsIgnoreMissing<br>是否忽略缺省值</p><p>IsPenWidthScaled<br>图比例变化时候图表上的画笔的粗细是否跟着自动缩放</p><p>IsShowTitle<br>图表标题是否显示</p><p>PaneFill<br>Pane 的一些填充信息</p><p>BaseDimension<br>缩放比例基数（可以试试效果）</p><p>IsImageMap<br>不清楚干吗用的</p><p>AxisChaneged<br>是否允许自动绘图（没试过，一般都 true，动态绘图）</p><p>CacheDuration<br>Cache 保存时间0</p><p>OutputFormat<br>输出格式</p><p>RenderedImagePath<br>输出路径</p><p>RenderMode<br>输出模式，不太清楚一般都是 ImageTag，另一个输出的是乱码不是图片。对于图表而言，一般是三种表现形式：柱状图、饼状图和点线图。</p><h1 id="二、问题"><a href="#二、问题" class="headerlink" title="二、问题"></a>二、问题</h1><h2 id="2-1-控制X轴的标签间隔显示"><a href="#2-1-控制X轴的标签间隔显示" class="headerlink" title="2.1 控制X轴的标签间隔显示"></a>2.1 控制X轴的标签间隔显示</h2><p>下面这部分参考自： <a href="http://bbs.csdn.net/topics/390421777">救急！！！Dev的chartControl画曲线图，怎么控制X轴的标签间隔显示</a>？  <a href="http://my.csdn.net/huangama2011">huangama2011</a></p><p>X轴是时间，Y轴是金额；<br>现在记录有100多个，标签在X轴都显示出来了，数字密密麻麻；<br>麻烦问下，怎么控制X轴的标签间隔显示？</p><p>**要设置下 series1.ArgumentScaleType &#x3D; ScaleType.DateTime;&#x2F;&#x2F;x轴类型 这个 **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Series series1 = <span class="keyword">new</span> Series(<span class="keyword">this</span>.Text, ViewType.Spline);</span><br><span class="line">            series1.ArgumentScaleType = ScaleType.DateTime;<span class="comment">//x轴类型</span></span><br><span class="line">            series1.ValueScaleType = ScaleType.Numerical;<span class="comment">//y轴类型</span></span><br><span class="line">            <span class="comment">//X轴的数据字段</span></span><br><span class="line">            series1.ArgumentDataMember = <span class="string">&quot;StatisticsTime&quot;</span>;</span><br><span class="line">            <span class="comment">//Y轴的数据字段</span></span><br><span class="line">            series1.ValueDataMembers[<span class="number">0</span>] = <span class="string">&quot;StatisticsSum&quot;</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状是否需要</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Kind = MarkerKind.Circle;         </span><br><span class="line">            <span class="comment">//不显示X、Y轴上面的交点的值</span></span><br><span class="line">            ((PointSeriesLabel)series1.Label).Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//线条的类型，虚线，实线</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineStyle.DashStyle = DashStyle.Solid;</span><br></pre></td></tr></table></figure><p>**完整代码： **</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BindChart</span>(<span class="params">DataTable datatable, ChartControl myChartControl</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            myChartControl.Name = <span class="string">&quot;chartResult&quot;</span>;</span><br><span class="line">            myChartControl.Dock = DockStyle.Fill;</span><br><span class="line">            myChartControl.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">400</span>, <span class="number">250</span>);</span><br><span class="line">            <span class="comment">// 显示标签.            </span></span><br><span class="line">            myChartControl.Legend.Visible = <span class="literal">true</span>;</span><br><span class="line">            myChartControl.Series.Clear();</span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> 仅供参考（不需要）</span></span><br><span class="line">            <span class="comment">//控制X、Y轴显示</span></span><br><span class="line">            <span class="comment">//XYDiagram diagram = (XYDiagram)chartControl.Diagram;</span></span><br><span class="line">            <span class="comment">//diagram.AxisX.Label.Staggered = true;</span></span><br><span class="line">            <span class="comment">//diagram.AxisY.Label.BeginText = &quot;Axis value = &quot;;</span></span><br><span class="line">            <span class="comment">//diagram.AxisY.Label.Angle = -30;</span></span><br><span class="line">            <span class="comment">//diagram.AxisY.Label.Antialiasing = true;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//XYDiagram diagram = (XYDiagram)chartControl.Diagram; </span></span><br><span class="line">            <span class="comment">//diagram.AxisX.DateTimeMeasureUnit = DateTimeMeasurementUnit.Second; </span></span><br><span class="line">            <span class="comment">//diagram.AxisX.DateTimeOptions.Format = DateTimeFormat.Custom; diagram.AxisX.DateTimeOptions.FormatString = &quot;HH:mm:ss&quot;;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.Interlaced = true;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.GridSpacing = 10;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.Label.Angle = -30;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.Label.Antialiasing = true;</span></span><br><span class="line">            <span class="comment">//((XYDiagram)myChartControl.Diagram).AxisX.DateTimeOptions.Format = DateTimeFormat.MonthAndDay;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/XYDiagram xyDiagram1 = new XYDiagram();</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.Range.Auto = false; //要开启滚动条必须将其设置为false</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span><span class="doctag">///</span>xyDiagram1.AxisX.Range.MaxValueInternal = 30.5D &gt; (cnt + 1) ? (cnt + 1) : 30.5D;//在不拉到滚动条的时候，X轴显示多个值，既固定的X轴长度。</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span><span class="doctag">///</span>xyDiagram1.AxisX.Range.MinValueInternal = -0.5D;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.Range.ScrollingRange.Auto = false;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.MinorCount = 9; //显示X轴间隔数量</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.Tickmarks.MinorVisible = true;//是否显示X轴间隔</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.MinorCount = 1;//显示Y轴间隔数量</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Tickmarks.MinorVisible = true;//是否显示Y轴间隔</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.Range.ScrollingRange.MaxValueSerializable = (cnt + 1).ToString();//整个X轴最多显示多多少个值</span></span><br><span class="line">            <span class="comment">// xyDiagram1.AxisX.Range.ScrollingRange.MinValueSerializable = &quot;0&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.DateTimeMeasureUnit = DateTimeMeasurementUnit.Second;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.DateTimeOptions.Format = DateTimeFormat.Custom;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.DateTimeOptions.FormatString = &quot;yyyy:MM:HH&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.Range.ScrollingRange.SideMarginsEnabled = true;//是否从X轴原点开始显示</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisX.Range.SideMarginsEnabled = false;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisX.VisibleInPanesSerializable = &quot;-1&quot;;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.NumericOptions.Format = DevExpress.XtraCharts.NumericFormat.Percent;//显示为百分数</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Range.Auto = false;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.Range.MaxValueSerializable = &quot;1.02&quot;;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.Range.MinValueSerializable = &quot;0.5&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Range.ScrollingRange.SideMarginsEnabled = true;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.AxisY.Range.SideMarginsEnabled = true;</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>/xyDiagram1.AxisY.VisibleInPanesSerializable = &quot;-1&quot;;</span></span><br><span class="line">            <span class="comment">//xyDiagram1.EnableScrolling = true;//启用滚动条</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//获取Diagram必须在ChartControl中已经加入了Series之后</span></span><br><span class="line">            <span class="comment">//((XYDiagram)chartControl.Diagram).Rotated = false;</span></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//图标位置</span></span><br><span class="line">            myChartControl.Legend.AlignmentHorizontal = LegendAlignmentHorizontal.Right;</span><br><span class="line">            myChartControl.Legend.AlignmentVertical = LegendAlignmentVertical.Top;</span><br><span class="line"></span><br><span class="line">            ChartTitle chartTitle = <span class="keyword">new</span> ChartTitle();</span><br><span class="line">            chartTitle.Text = <span class="keyword">this</span>.Text;<span class="comment">//标题内容</span></span><br><span class="line">            chartTitle.TextColor = System.Drawing.Color.Black;<span class="comment">//字体颜色</span></span><br><span class="line">            chartTitle.Font = <span class="keyword">new</span> Font(<span class="string">&quot;Tahoma&quot;</span>, <span class="number">8</span>);<span class="comment">//字体类型字号</span></span><br><span class="line">            chartTitle.Dock = ChartTitleDockStyle.Bottom;<span class="comment">//标题对齐方式</span></span><br><span class="line">            chartTitle.Alignment = StringAlignment.Far;</span><br><span class="line">            myChartControl.Titles.Clear();<span class="comment">//清理标题</span></span><br><span class="line">            myChartControl.Titles.Add(chartTitle);<span class="comment">//加载标题</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Series series1 = <span class="keyword">new</span> Series(<span class="keyword">this</span>.Text, ViewType.Spline);</span><br><span class="line">            series1.ArgumentScaleType = ScaleType.DateTime;<span class="comment">//x轴类型</span></span><br><span class="line">            series1.ValueScaleType = ScaleType.Numerical;<span class="comment">//y轴类型</span></span><br><span class="line">            <span class="comment">//X轴的数据字段</span></span><br><span class="line">            series1.ArgumentDataMember = <span class="string">&quot;StatisticsTime&quot;</span>;</span><br><span class="line">            <span class="comment">//Y轴的数据字段</span></span><br><span class="line">            series1.ValueDataMembers[<span class="number">0</span>] = <span class="string">&quot;StatisticsSum&quot;</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状是否需要</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//定义线条上点的标识形状</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineMarkerOptions.Kind = MarkerKind.Circle;          </span><br><span class="line">            <span class="comment">//不显示X、Y轴上面的交点的值</span></span><br><span class="line">            ((PointSeriesLabel)series1.Label).Visible = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//线条的类型，虚线，实线</span></span><br><span class="line">            ((LineSeriesView)series1.View).LineStyle.DashStyle = DashStyle.Solid;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//绑定数据源</span></span><br><span class="line">            series1.DataSource = datatable;</span><br><span class="line"></span><br><span class="line">            myChartControl.Series.Add(series1);        </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-x轴的间距过大的问题"><a href="#2-2-x轴的间距过大的问题" class="headerlink" title="2.2 x轴的间距过大的问题"></a>2.2 x轴的间距过大的问题</h2><ul><li>关于X轴数据间距过大的问题，可以通过设置scale来解决。在Format Chart页，选中Chart Area-&gt;Axes-&gt;X-Axis, 设置间隔。</li><li>关于点重合的问题，你可以通过改变marker的形状和大小来解决。在Format Chart页，选中Series-&gt;Value series,找到marker就可以进行设置了。</li><li>X轴和Y轴的最大值设置 也是在Chart Area-&gt;Axes-&gt;X-Axis的刻度中设置。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Series&gt; listSer = ``<span class="keyword">new</span>` `List&lt;Series&gt;();</span><br></pre></td></tr></table></figure><p><strong>引发动态生成图表的按钮事件完整如下：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> sqlString = <span class="string">&quot;select count(*) from dotrelation where dotdesc like &#x27;温度%&#x27;&quot;</span>;</span><br><span class="line">num = Mycon.countORL(conn, sqlString);<span class="comment">//获得数据库中满足条件的记录数</span></span><br><span class="line"><span class="comment">//MessageBox.Show(&quot;满足条件的数据记录为&quot; + num);</span></span><br><span class="line"><span class="built_in">int</span> heightPer = <span class="number">100</span> / num;<span class="comment">//计算每个绘图区高度</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">string</span> serName = <span class="string">&quot;test&quot;</span> + i.ToString();</span><br><span class="line">  listSer.Add(<span class="keyword">new</span> Series(serName));<span class="comment">//对象数组</span></span><br><span class="line">  fillData(date);<span class="comment">//初始化数组此方法自己定义的</span></span><br><span class="line">  initialSeries((Series)listSer[i], Color.Red, date);</span><br><span class="line">  chart1.ChartAreas.Add(<span class="string">&quot;ANOTHER&quot;</span> + i);</span><br><span class="line"><span class="comment">//这里是关键！！！！！</span></span><br><span class="line">    chart1.ChartAreas[i].Position.Width = <span class="number">100</span>;<span class="comment">//绘图区域在控件中的宽度 100是百分比</span></span><br><span class="line">    chart1.ChartAreas[i].Position.Height = heightPer;</span><br><span class="line">    chart1.ChartAreas[i].Position.X = <span class="number">5</span>;<span class="comment">//绘图区域在控件中的绝对位置 横坐标</span></span><br><span class="line">    chart1.ChartAreas[i].Position.Y = <span class="number">3</span> + heightPer * i;<span class="comment">//绘图区域在控件中的绝对位置纵坐标</span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineWidth = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineWidth = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.Title = <span class="string">&quot;监测值&quot;</span>;</span><br><span class="line">    <span class="comment">//设置网格线  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.MajorGrid.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisX.MajorGrid.Interval = <span class="number">2</span>;<span class="comment">//网格间隔</span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.MinorGrid.Interval = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.MajorGrid.LineColor = Color.Blue;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.MajorGrid.Interval = <span class="number">2</span>;</span><br><span class="line">    chart1.ChartAreas[i].AxisY.MinorGrid.Interval = <span class="number">2</span>;</span><br><span class="line">     </span><br><span class="line">  </span><br><span class="line">    chart1.Series[i].IsValueShownAsLabel = <span class="literal">false</span>; <span class="comment">//是否显示数据      </span></span><br><span class="line">    chart1.Series[i].IsVisibleInLegend = <span class="literal">false</span>;  <span class="comment">//是否显示数据说明  </span></span><br><span class="line">    chart1.Series[i].MarkerStyle = MarkerStyle.Circle;   <span class="comment">//线条上的数据点标志类型  </span></span><br><span class="line">    chart1.Series[i].MarkerSize = <span class="number">3</span>;  <span class="comment">//标志大小  </span></span><br><span class="line">    chart1.Series[i].ChartType = SeriesChartType.Line;      <span class="comment">//图表类型为曲线</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="string">&quot;ANOTHER&quot;</span> + i.ToString();</span><br><span class="line">    chart1.Series[i].ChartArea = name;<span class="comment">//指定绘图区域</span></span><br><span class="line">   </span><br><span class="line">  </span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineColor = Color.Blue;<span class="comment">//X轴颜色  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineColor = Color.Blue;<span class="comment">//Y轴颜色  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisX.LineWidth = <span class="number">2</span>;         <span class="comment">//X轴宽度  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisY.LineWidth = <span class="number">2</span>;          <span class="comment">//Y轴宽度  </span></span><br><span class="line">    chart1.ChartAreas[i].AxisY.Title = <span class="string">&quot;人数&quot;</span>; <span class="comment">//Y轴标题</span></span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">//fillData(date);//初始化数组</span></span><br><span class="line"><span class="comment">//initialSeries(series1, Color.Red, date);</span></span><br><span class="line">initalChart();<span class="comment">//图表初始化</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文章：</p><ol><li><a href="http://home.cnblogs.com/u/liuxinls/">louiskoo</a> ， <a href="http://www.cnblogs.com/liuxinls/archive/2013/04/26/3044219.html">c# Chart设置样式</a>。</li><li>IT-CollectionPlatForm， <a href="http://blog.sina.com.cn/s/blog_45ef2e490101begn.html">C# 2010 Chart的使用</a>。</li></ol><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="hhttps://www.cnblogs.com/arxive/p/5861960.html">c# Chart设置样式</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Chart控件说明</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="绘图" scheme="https://zml3589110.github.io/tags/%E7%BB%98%E5%9B%BE/"/>
    
    <category term="Chart" scheme="https://zml3589110.github.io/tags/Chart/"/>
    
  </entry>
  
</feed>
