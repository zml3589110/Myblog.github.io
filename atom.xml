<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2024-08-12T09:13:31.797Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C# 线程停止线程之一Abort过时被CancellationToken取代</title>
    <link href="https://zml3589110.github.io/posts/2501102727.html"/>
    <id>https://zml3589110.github.io/posts/2501102727.html</id>
    <published>2024-08-15T07:41:20.000Z</published>
    <updated>2024-08-12T09:13:31.797Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NET-5-已过时的功能"><a href="#NET-5-已过时的功能" class="headerlink" title=".NET 5+ 已过时的功能"></a>.NET 5+ 已过时的功能</h1><p><strong>数组淘汰</strong></p><p>.NET Framework 2以上的版本中，ArrayList可以说已经被淘汰了，应该用泛型类中的List<T></p><p><strong><a href="https://www.cnblogs.com/cdaniu/p/15936840.html">https://www.cnblogs.com/cdaniu/p/15936840.html</a></strong></p><p><strong>Thread类淘汰的方法</strong></p><p>Abort() .net5.0 开始过时， 被废弃的主要原因是 不能及时停止线程。方法仅通知线程“嘿，您可以立即停止”，但不会终止该线程。因此，该线程可以在<code>Abort</code>之后保持 Activity 一会儿。</p><p>​    <a href="https://docs.microsoft.com/en-us/dotnet/api/system.threading.thread.abort">Thread.Abort</a>在.NET Core 中从未实现过。<code>CancellationToken</code>已成为一个安全且被广泛接受的<code>Thread.Abort</code>替代者</p><p>Suspend() .net5.0开始过时 被废弃的主要原因是因为其使用很容易造成线程死锁(Deadlock)。</p><p>Resume() .net5.0开始过时 被废弃的主要原因是因为其使用很容易造成线程死锁(Deadlock)。</p><h2 id="全局程序集缓存"><a href="#全局程序集缓存" class="headerlink" title="全局程序集缓存"></a>全局程序集缓存</h2><p>到.NET 4.5 发布时，几乎没有应用程序将 GAC 用于非微软库。主要的例外是商业库，但即使是这些库也已经转向了对 NuGet 更友好的交付模型。</p><h2 id="Remoting"><a href="#Remoting" class="headerlink" title="Remoting"></a>Remoting</h2><p><a href="https://en.wikipedia.org/wiki/.NET_Remoting">.NET Remoting</a>是受<a href="https://en.wikipedia.org/wiki/Distributed_Component_Object_Model">DCOM</a>和<a href="https://en.wikipedia.org/wiki/Java_remote_method_invocation">Java Remoting（Java RMI）</a>的启发。这三种方法的基本思想都是一个应用程序可以使用代理对象来操作在另一个应用程序中运行的真实对象。虽然它在技术上可以工作，但.NET Remoting 从来就没有流行过，因为要正确地使用它很难，而且人们一般认为它很脆弱。</p><p>考虑到这一点，.NET Core 从未实现过.NET Remoting API。就像 GAC API 一样，它只有不可操作的占位符。因此，它们也被标记为已过时，而最终目的是将其删除。</p><h2 id="System-Collections"><a href="#System-Collections" class="headerlink" title="System.Collections"></a>System.Collections</h2><p><strong>（淘汰）<code>DictionaryEntry=</code>（新）<a href="https://docs.microsoft.com/zh-cn/dotnet/api/system.collections.generic.keyvaluepair-2?view=net-6.0">KeyValuePair</a></strong></p><h2 id="（淘汰）约束执行区域CER"><a href="#（淘汰）约束执行区域CER" class="headerlink" title="（淘汰）约束执行区域CER"></a>（淘汰）约束执行区域CER</h2><p><strong>GC.sever（淘汰）</strong></p><p>编程是个人爱好</p><h1 id="CancellationToken的使用"><a href="#CancellationToken的使用" class="headerlink" title="CancellationToken的使用"></a>CancellationToken的使用</h1><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>在.net core随处可见的async await的异步使用,这就可以用到CancellationToken来取消任务。</p><p>场景一：如在web应用中,用户点击了下载文件(耗时操作),当用户不想下载了,直接点取消,但是我们异步代码中没响应取消的话,还是会执行下去这个耗时操作的,这就耗费了不必要的服务器资源。</p><h2 id="一、开始使用"><a href="#一、开始使用" class="headerlink" title="一、开始使用"></a>一、开始使用</h2><p>CancellationTokenSource：用于控制和生成CancellationToken</p><p>CancellationToken:取消令牌,可以注册取消回调等操作</p><p>1、先实例化CancellationTokenSource</p><p>2、注册取消回调</p><p>3、启动一个Task，模拟耗时操作</p><p>4.调用CancellationTokenSource的CancelAfter方法,表示多少毫秒后取消,也可使用Cancel方法立即取消</p><p>5、IsCancellationRequested属性判断任务是否取消,没取消则一直输出i</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">CancellationTokenSource cts=<span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">cts.Token.Register(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;任务已停止&quot;</span>); &#125;);</span><br><span class="line"> </span><br><span class="line">Task.Run(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!cts.IsCancellationRequested)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        Console.WriteLine(i);</span><br><span class="line">        Task.Delay(<span class="number">500</span>).Wait();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line">cts.CancelAfter(<span class="number">2000</span>);</span><br><span class="line">Console.ReadLine();</span><br></pre></td></tr></table></figure><h2 id="二、上面介绍完基本使用-下面使用下具体场景"><a href="#二、上面介绍完基本使用-下面使用下具体场景" class="headerlink" title="二、上面介绍完基本使用,下面使用下具体场景"></a>二、上面介绍完基本使用,下面使用下具体场景</h2><p><strong>2.1 如桌面应用,当用户按下某个键的时候取消我当前的任务</strong></p><p>简单改造下上面的代码就好了</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">CancellationTokenSource cts=<span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">cts.Token.Register(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;任务已停止&quot;</span>); &#125;);</span><br><span class="line"> </span><br><span class="line">Task.Run(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!cts.IsCancellationRequested)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        Console.WriteLine(i);</span><br><span class="line">        Task.Delay(<span class="number">500</span>).Wait();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> key=Console.ReadKey();</span><br><span class="line"><span class="keyword">if</span>(key.Key==ConsoleKey.A)</span><br><span class="line">&#123;</span><br><span class="line">    cts.Cancel();</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadLine();</span><br></pre></td></tr></table></figure><p>当我们按下a键时就可以取消任务了。</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/5b4daaad6e6deb4d3bd4f3ccb5143020.png" alt="img"></p><p><strong>2.2 web api程序中取消操作只需要在接口参数加上CancellationToken就可以了,当我们取消请求的时候,会自动将CancellationToken传进来</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">HttpGet</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IActionResult&gt; <span class="title">CancelDownLoad</span>(<span class="params">CancellationToken cancellationToken</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> _client = _httpClient.CreateClient(<span class="string">&quot;bigDownLoad&quot;</span>);</span><br><span class="line">                _client.DefaultRequestHeaders.Range = <span class="keyword">new</span> RangeHeaderValue(<span class="number">0</span>, <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>);</span><br><span class="line">                <span class="keyword">await</span> Task.Delay(<span class="number">1000</span>);</span><br><span class="line">                <span class="keyword">if</span> (!cancellationToken.IsCancellationRequested)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> resp = <span class="keyword">await</span> _client.GetAsync(<span class="string">&quot;http://du.cainiaoxt.cn/dd.php/windows_7_ultimate_x64_2023.iso&quot;</span>,cancellationToken);</span><br><span class="line">                    <span class="keyword">if</span> (resp.StatusCode != System.Net.HttpStatusCode.OK)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">string</span> chunkFileFolder = <span class="string">@&quot;D:\&quot;</span>;</span><br><span class="line">                        <span class="built_in">string</span> bigFileName = chunkFileFolder + <span class="string">@&quot;\bigFile&quot;</span> + <span class="keyword">new</span> Random().Next(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">                        <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(bigFileName, FileMode.Create))</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">var</span> respStream = <span class="keyword">await</span> resp.Content.ReadAsStreamAsync();</span><br><span class="line">                            <span class="keyword">await</span> respStream.CopyToAsync(fs);</span><br><span class="line">                            <span class="keyword">await</span> respStream.FlushAsync();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> Ok();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    cancellationToken.ThrowIfCancellationRequested();</span><br><span class="line">                    <span class="keyword">return</span> BadRequest(<span class="string">&quot;下载任务取消!&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (OperationCanceledException ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;下载任务取消!&quot;</span>+ex.Message);</span><br><span class="line">                <span class="keyword">return</span> BadRequest(<span class="string">&quot;下载任务取消!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>方便演示,直接用浏览器访问接口,然后马上取消</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/569fe1bb137ce73f65078ad907815bd4.png" alt="img"></p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/90fcbe10b4a0de920009671f7b99a1ac.png" alt="img"></p><p>此CancellationToken参数也可以传递给其他异步方法,IsCancellationRequested属性就是判断任务是否取消,如果取消我们可以调用ThrowIfCancellationRequested方法来抛出OperationCanceledException异常,进行其他操作。</p><p><strong>三、关联取消</strong></p><p>关联取消就是将多个CancellationToken关联起来生成一个新的CancellationTokenSource,当关联的CancellationTokenSource有一个取消时,这个新的CancellationTokenSource也会被取消</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// See https://aka.ms/new-console-template for more information</span></span><br><span class="line">CancellationTokenSource cts=<span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">cts.Token.Register(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;任务1已停止&quot;</span>); &#125;);</span><br><span class="line"> </span><br><span class="line">CancellationTokenSource cts2 = <span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">cts2.Token.Register(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;任务2已停止&quot;</span>); &#125;);</span><br><span class="line"> </span><br><span class="line">CancellationTokenSource cts3 = <span class="keyword">new</span> CancellationTokenSource();</span><br><span class="line">cts3.Token.Register(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;任务3已停止&quot;</span>); &#125;);</span><br><span class="line"><span class="keyword">var</span> linkTokenSource=CancellationTokenSource.CreateLinkedTokenSource(cts.Token, cts2.Token, cts3.Token);</span><br><span class="line"> </span><br><span class="line">linkTokenSource.Token.Register(() =&gt; &#123; Console.WriteLine(<span class="string">&quot;关联token取消&quot;</span>); &#125;);</span><br><span class="line">Task.Run(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!cts.IsCancellationRequested)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;任务1：&quot;</span>+i);</span><br><span class="line">        Task.Delay(<span class="number">500</span>).Wait();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">Task.Run(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!cts2.IsCancellationRequested)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;任务2：&quot;</span>+i);</span><br><span class="line">        Task.Delay(<span class="number">500</span>).Wait();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">Task.Run(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!cts3.IsCancellationRequested)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;任务3：&quot;</span>+i);</span><br><span class="line">        Task.Delay(<span class="number">500</span>).Wait();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">Task.Run(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (!linkTokenSource.IsCancellationRequested)</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;关联token任务：&quot;</span> + i);</span><br><span class="line">        Task.Delay(<span class="number">500</span>).Wait();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> key=Console.ReadKey();</span><br><span class="line"><span class="keyword">if</span>(key.Key==ConsoleKey.A)</span><br><span class="line">&#123;</span><br><span class="line">    cts.Cancel();</span><br><span class="line">&#125;</span><br><span class="line">Console.ReadLine();</span><br></pre></td></tr></table></figure><p>改造一下上面的代码，使用CancellationTokenSource的静态方法CreateLinkedTokenSource将多个CancellationTokenSource关联起来,当我们输入a时,取消任务1，此时也会同时取消新的关联任务</p><p><img src="https://i-blog.csdnimg.cn/blog_migrate/e1bbae2d6939efdaec9a5fde1497bc6f.png" alt="img"></p><h1 id="Thread-Abort-旧方法"><a href="#Thread-Abort-旧方法" class="headerlink" title="Thread.Abort()旧方法"></a>Thread.Abort()旧方法</h1><blockquote><p>线程调用Thread.Abort()方法后，这会给线程注入ThreadAbortException异常，导致线程被终结。该异常可在任何时刻发生并可能彻底摧毁应用程序。另外，使用该技术也不一定总能终止线程，可以通过处理该异常并调用Thread.ResetAbort方法来拒绝被终止。因此并不推荐使用Abort方法来关闭线程。可优先使用一些其他方法，比如提供一个CancellationToken方法来取消线程的执行。</p></blockquote><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">static</span> System.Console;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">static</span> System.Threading.Thread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">AbortAndResetDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">PrintNumbersWithDelay</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            WriteLine(<span class="string">&quot;Starting...&quot;</span>);</span><br><span class="line">            <span class="built_in">int</span> i = <span class="number">1</span>;</span><br><span class="line">        Cycle_Print:</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    Sleep(TimeSpan.FromSeconds(<span class="number">2</span>));</span><br><span class="line">                    WriteLine(i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (ThreadAbortException ex)</span><br><span class="line">            &#123;</span><br><span class="line">                WriteLine(<span class="string">$&quot;After Abort, <span class="subst">&#123;CurrentThread.Name&#125;</span> state: <span class="subst">&#123;CurrentThread.ThreadState&#125;</span>&quot;</span>);</span><br><span class="line">                Thread.ResetAbort();</span><br><span class="line">                WriteLine(<span class="string">$&quot;After ResetAbort, <span class="subst">&#123;CurrentThread.Name&#125;</span> state: <span class="subst">&#123;CurrentThread.ThreadState&#125;</span>&quot;</span>);</span><br><span class="line">                <span class="keyword">goto</span> Cycle_Print;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            WriteLine(<span class="string">&quot;Starting program...&quot;</span>);</span><br><span class="line">            Thread t = <span class="keyword">new</span> Thread(PrintNumbersWithDelay);</span><br><span class="line">            t.Name = <span class="string">&quot;PrintThread&quot;</span>;</span><br><span class="line">            t.Start();</span><br><span class="line">            Sleep(TimeSpan.FromSeconds(<span class="number">6</span>));</span><br><span class="line">            t.Abort();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>可使用Ctrl+F5直接运行程序，从而避免自动退出程序，看不到程序结果的问题。</strong></p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/cdaniu/p/15265155.html">.NET 5+ 中已过时的功能</a></li><li><a href="https://blog.csdn.net/qq_44994764/article/details/130392360">c#之CancellationToken的使用</a></li><li><a href="https://learn.microsoft.com/zh-cn/dotnet/core/compatibility/core-libraries/5.0/thread-abort-obsolete?source=recommendations">Thread.Abort 已过时</a></li><li><a href="https://blog.csdn.net/u014778544/article/details/114662529">多线程编程实战:Abort()与ResetAbort()</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#线程停止使用 Abort 会报错，现在普遍不用 Thread.Abort 而改用 CancellationToken</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="线程管理" scheme="https://zml3589110.github.io/categories/%E7%BA%BF%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="线程管理" scheme="https://zml3589110.github.io/tags/%E7%BA%BF%E7%A8%8B%E7%AE%A1%E7%90%86/"/>
    
    <category term="线程停止" scheme="https://zml3589110.github.io/tags/%E7%BA%BF%E7%A8%8B%E5%81%9C%E6%AD%A2/"/>
    
    <category term="Abort" scheme="https://zml3589110.github.io/tags/Abort/"/>
    
    <category term="CancellationToken" scheme="https://zml3589110.github.io/tags/CancellationToken/"/>
    
  </entry>
  
  <entry>
    <title>C#控件DataGridView之六（常用功能）</title>
    <link href="https://zml3589110.github.io/posts/1577525161.html"/>
    <id>https://zml3589110.github.io/posts/1577525161.html</id>
    <published>2024-08-13T09:50:20.000Z</published>
    <updated>2024-08-13T12:28:37.289Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用基础功能"><a href="#常用基础功能" class="headerlink" title="常用基础功能"></a>常用基础功能</h1><h3 id="表头居中显示"><a href="#表头居中显示" class="headerlink" title="表头居中显示"></a>表头居中显示</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.ColumnHeadersDefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;</span><br></pre></td></tr></table></figure><p>通过修改<code>表格控件.ColumnHeadersDefaultCellStyle.Alignment</code>的值，我们可以将表头靠左、靠右、居中。</p><h3 id="数据居中显示"><a href="#数据居中显示" class="headerlink" title="数据居中显示"></a>数据居中显示</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (DataGridViewColumn column <span class="keyword">in</span> dataGridView1.Columns)</span><br><span class="line">&#123;</span><br><span class="line">    column.DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遍历 DataGridView 的每一列，并将列的默认单元格样式的对齐方式设置为居中对齐，即</p><p><code>DataGridViewContentAlignment.MiddleCenter</code>，这样就可以实现居中显示的效果。</p><h3 id="一次选中一整行"><a href="#一次选中一整行" class="headerlink" title="一次选中一整行"></a>一次选中一整行</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;</span><br></pre></td></tr></table></figure><p>通过设置其 SelectionMode 属性来完成。</p><h3 id="每一次只允许选中一行"><a href="#每一次只允许选中一行" class="headerlink" title="每一次只允许选中一行"></a>每一次只允许选中一行</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.MultiSelect = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>当将 <code>MultiSelect</code> 属性设置为 false 时，就只能每次选中一行。</p><h3 id="获取选中行的数据"><a href="#获取选中行的数据" class="headerlink" title="获取选中行的数据"></a>获取选中行的数据</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (dataGridView1.SelectedRows.Count &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    DataGridViewRow selectedRow = dataGridView1.SelectedRows[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (DataGridViewCell cell <span class="keyword">in</span> selectedRow.Cells)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> cellValue = cell.Value.ToString();</span><br><span class="line">        Console.WriteLine(cellValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先检查是否有选中的行，如果有，则获取选中的第一行，并遍历这一行的每个单元格，获取单元格的值并进行处理（此处是将值打印到控制台）。</p><h3 id="监听选中行发生改变的事件"><a href="#监听选中行发生改变的事件" class="headerlink" title="监听选中行发生改变的事件"></a>监听选中行发生改变的事件</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dataGridView1_SelectionChanged</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 在此处添加你的代码</span></span><br><span class="line">    <span class="keyword">if</span> (dataGridView1.SelectedRows.Count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        DataGridViewRow selectedRow = dataGridView1.SelectedRows[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (DataGridViewCell cell <span class="keyword">in</span> selectedRow.Cells)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> cellValue = cell.Value.ToString();</span><br><span class="line">            Console.WriteLine(cellValue);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要在选中行发生改变时得到通知，可以使用DataGridView的<code>SelectionChanged</code>事件。<br>在方法内部，可以通过dataGridView1.SelectedRows获取选中的行，并进行相应的处理。</p><h3 id="设置行高和列宽"><a href="#设置行高和列宽" class="headerlink" title="设置行高和列宽"></a>设置行高和列宽</h3><p>设置行高：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.RowsDefaultCellStyle.Height = <span class="number">30</span>;  <span class="comment">// 将默认行高设置为 30 像素</span></span><br></pre></td></tr></table></figure><p>设置列宽：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.Columns[<span class="string">&quot;ColumnName&quot;</span>].Width = <span class="number">100</span>;  <span class="comment">// 将指定列名为&quot;ColumnName&quot;的列宽设置为 100 像素</span></span><br></pre></td></tr></table></figure><p>通过索引设置列宽：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataGridView1.Columns[<span class="number">0</span>].Width = <span class="number">80</span>;  <span class="comment">// 将第一列的列宽设置为 80 像素</span></span><br></pre></td></tr></table></figure><h3 id="通过条件筛选显示部分内容"><a href="#通过条件筛选显示部分内容" class="headerlink" title="通过条件筛选显示部分内容"></a>通过条件筛选显示部分内容</h3><p>可以通过以下步骤对 DataGridView 的内容进行条件筛选显示：</p><ol><li>获取要筛选的数据来源，例如 DataTable 。</li><li>根据设定的条件对数据进行筛选。</li><li>将筛选后的结果重新绑定到 DataGridView 。</li></ol><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DataTable data = (DataTable)dataGridView1.DataSource;  <span class="comment">// 获取数据源</span></span><br><span class="line"></span><br><span class="line">DataView view = <span class="keyword">new</span> DataView(data);  <span class="comment">// 创建数据视图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 假设根据&quot;Age&quot;列进行筛选，年龄大于 20</span></span><br><span class="line">view.RowFilter = <span class="string">&quot;Age &gt; 20&quot;</span>; </span><br><span class="line"></span><br><span class="line">dataGridView1.DataSource = view;  <span class="comment">// 将筛选后的结果重新绑定</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="标题-x2F-列内容完全居中及选中行突出显示"><a href="#标题-x2F-列内容完全居中及选中行突出显示" class="headerlink" title="标题&#x2F;列内容完全居中及选中行突出显示"></a>标题&#x2F;列内容完全居中及选中行突出显示</h1><h2 id="一、列标题居中"><a href="#一、列标题居中" class="headerlink" title="一、列标题居中"></a>一、列标题居中</h2><p>1.首先点击属性窗口的ColumnHeadersDefaultCellStyle属性进入属性设置子界面，并设置子界面属性Alignment的值为MiddleCenter（如下图）</p><img src="/posts/undefined/ed643f2bb14ddb7eb009fee6464e1e59-1723552003971.png" class="" title="img"><p>2.如果此时列标题未完全居中，那么找到列集合设置属性（Columns）进入子界面，将所有列头的SortMode属性设置为NotSortable（如下图）</p><img src="/posts/undefined/48c9e70c784bc0a6badf28a1081d325a.png" class="" title="img"><p>以上就是设置列标题居中的方法了</p><h2 id="二、列值居中"><a href="#二、列值居中" class="headerlink" title="二、列值居中"></a>二、列值居中</h2><p>只需在列集合设置属性（Columns）进入子界面，在子界面找到DefaultCellStyle属性，进入DefaultCellStyle属性设置子界面，将Alignment属性数值为MiddleCenter即可</p><img src="/posts/undefined/db769cd58bd57efff6acf124b7523010.png" class="" title="img"><h2 id="三、选中行突出显示"><a href="#三、选中行突出显示" class="headerlink" title="三、选中行突出显示"></a>三、选中行突出显示</h2><p>1.将SeltctionMode属性设置为FullRowSelect</p><img src="/posts/undefined/d05db05ba64a8d5d07c1468acfb829fb.png" class="" title="img"><p>2.进入ColumnHeadersDefaultCellStyle子界面，将SelectionForeColor属性设置为Transparent（这里是为了不然选择时突出列标题）</p><img src="/posts/undefined/09ec56b5eb9bf00c31a22fa306dc258d.png" class="" title="img"><p>3.再进入RowsDefaultCellStyle子界面，将SelectionBackColor属性设置为Gray（这里是设置行选中时的颜色）</p><img src="/posts/undefined/57957b4cce4aa10295c4545f21654bd6.png" class="" title="img"><p>4.如果需要关闭多行选择的话将MultiSelect属性设置为False</p><img src="/posts/undefined/be2164fe93af19c83a0464dd418df38a.png" class="" title="img"><h2 id="四-标题样式"><a href="#四-标题样式" class="headerlink" title="四.标题样式"></a>四.标题样式</h2><p>如果未将EnableHeadersVisualStyles标志设置为False，则对标题样式所做的更改将不会生效，</p><p>dataGridView1.EnableHeadersVisualStyles &#x3D; false;<br>dataGridView1.ColumnHeadersDefaultCellStyle.BackColor &#x3D; Color.Blue;</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><p><a href="https://blog.csdn.net/lgj123xj/article/details/140018725">C#WinForm控件常用方法——DataGridView数据网格控件（表头&#x2F;数据居中 、整行选中 、单选限制 、获取数据 、监听改变 、行高列宽 、条件筛选）</a></p></li><li><p><a href="https://blog.csdn.net/fangyuan621/article/details/139397397">C# Datagridview 标题&#x2F;列内容完全居中及选中行突出显示</a></p></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#控件DataGridView 常用功能</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/categories/DataGridView/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/tags/DataGridView/"/>
    
    <category term="取值" scheme="https://zml3589110.github.io/tags/%E5%8F%96%E5%80%BC/"/>
    
    <category term="标题列内容完全居中" scheme="https://zml3589110.github.io/tags/%E6%A0%87%E9%A2%98%E5%88%97%E5%86%85%E5%AE%B9%E5%AE%8C%E5%85%A8%E5%B1%85%E4%B8%AD/"/>
    
    <category term="突出显示" scheme="https://zml3589110.github.io/tags/%E7%AA%81%E5%87%BA%E6%98%BE%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>存储芯片AT24CXX</title>
    <link href="https://zml3589110.github.io/posts/887274336.html"/>
    <id>https://zml3589110.github.io/posts/887274336.html</id>
    <published>2024-08-13T03:37:20.000Z</published>
    <updated>2024-08-13T07:39:04.850Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注意说明"><a href="#注意说明" class="headerlink" title="注意说明"></a>注意说明</h1><blockquote><p>网上的示例代码都基于arm等内核MCU，有些地方不适合用在低端MCU上，因为内存和堆栈的显示不允许这样使用，需要重新调整IIC通讯！这边只是参考，通讯部分还需要自己重头写！特别是 delayms（10），这个在产品中是不允许出现！整整10ms内MCU啥都不做，这容易触发卡顿或者看门狗复位！</p></blockquote><h1 id="一、应用场景？"><a href="#一、应用场景？" class="headerlink" title="一、应用场景？"></a>一、应用场景？</h1><p>有些单片机没有内部的EEPROM，或者说内部的EEPROM空间不够大，这时候，我们就想到了外挂一个EEPROM芯片，而AT24C32就是一种常用的串行EEPROM存储器，它适用于许多需要在系统掉电后保留数据的嵌入式应用场景。</p><h1 id="二、AT24C32是什么？"><a href="#二、AT24C32是什么？" class="headerlink" title="二、AT24C32是什么？"></a>二、AT24C32是什么？</h1><p>AT24C32是一种常见的串行 EEPROM 存储器芯片，通常用于存储系统配置、用户数据、校准参数等。它具有以下特点，一般会在以下情况下被使用：</p><ol><li>小容量数据存储：AT24C32的存储容量一般为32Kb，适合存储少量的配置信息、校准参数、设备标识等数据。</li><li>串行接口：AT24C32采用串行接口进行数据通信，这使得它在占用较少引脚的同时能够进行高效的数据读写操作，因此适合于资源受限的嵌入式系统或小型设备中使用。</li><li>数据保存与恢复：AT24C32通常被用于存储需要持久保存的数据，例如设备配置、校准参数等。它的非易失性存储特性意味着即使断电也能保持数据完整，可在下次上电时恢复。</li><li>嵌入式系统：由于其小巧的封装、低功耗和易于集成的特点，AT24C32常被嵌入式系统设计中用于管理系统配置、日志记录、用户个性化设置等数据。</li></ol><h2 id="芯片对比"><a href="#芯片对比" class="headerlink" title="芯片对比"></a>芯片对比</h2><table><thead><tr><th>型号</th><th>容量bit</th><th>容量byte</th><th>页数</th><th>字节&#x2F;页</th><th>器件寻址位</th><th>可寻址器件数</th><th>WordAddress位数&#x2F;字节数</th><th>备注</th></tr></thead><tbody><tr><td>AT24C32</td><td>32k</td><td>4k</td><td>128</td><td>32</td><td>A2A1A0</td><td>8</td><td>12&#x2F;2</td><td></td></tr><tr><td>AT24C64</td><td>64k</td><td>8k</td><td>256</td><td>32</td><td>A2A1A0</td><td>8</td><td>13&#x2F;2</td><td></td></tr><tr><td>AT24C128</td><td>128k</td><td>16k</td><td>256</td><td>64</td><td>A1A0</td><td>4</td><td>14&#x2F;2</td><td></td></tr><tr><td>AT24C256</td><td>256k</td><td>32k</td><td>512</td><td>64</td><td>A1A0</td><td>4</td><td>15&#x2F;2</td><td></td></tr><tr><td>T24C512</td><td>512k</td><td>64k</td><td>512</td><td>128</td><td>A2A1A0</td><td>8</td><td>16&#x2F;2</td><td></td></tr></tbody></table><p>这5款芯片与x24C01~x24C16主要的不同是，WordAddress是两个字节，器件寻址位A2&#x2F;A1&#x2F;A0三位或者两位，不再有页选择位。例如，下图是AT24C128、AT24C256的引脚图，只有两个硬件地址引脚A0&#x2F;A1，第3脚不连接。</p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/20c82deb985d3cf5951913aaa899dac5.jpeg" alt="在这里插入图片描述"></p><h1 id="三、使用步骤"><a href="#三、使用步骤" class="headerlink" title="三、使用步骤"></a>三、使用步骤</h1><h2 id="1-引脚说明"><a href="#1-引脚说明" class="headerlink" title="1.引脚说明"></a>1.引脚说明</h2><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/38214a7931811d8a548d27d34a74da8a.png" alt="在这里插入图片描述"></p><p>1-3.A0~A2：地址输入引脚，共3个，用于设定芯片的I2C地址。<br>4.GND：地引脚，与VCC联合供电。<br>5.SDA：串行数据输入&#x2F;输出引脚，用于与I2C总线进行通信。<br>6.SCL：串行时钟输入引脚，用于与I2C总线进行同步。<br>7.WP：写保护引脚，当WP引脚为高电平时，AT24C32将无法写入数据，起到了对AT24C32数据的保护作用。<br>8.VCC：供电引脚，连接正极电源。</p><p>其中，WP引脚是AT24C32的写保护引脚，用于控制AT24C32是否可以写入数据。当WP引脚处于高电平时，AT24C32将进入写保护模式，此时将无法写入数据。当WP引脚处于低电平时，AT24C32将退出写保护模式，此时可以向其写入数据。通常情况下，WP引脚需要连接到系统中的GPIO引脚上，以便在需要时能够动态控制AT24C32的写保护模式</p><h2 id="1-2读写操作"><a href="#1-2读写操作" class="headerlink" title="1.2读写操作"></a>1.2读写操作</h2><h3 id="1-2-1-写操作"><a href="#1-2-1-写操作" class="headerlink" title="1.2.1 写操作"></a>1.2.1 写操作</h3><blockquote><p>Byte Write写一个字节</p></blockquote><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/fa32d91c43f56a9dd68230bcbc58e5be.jpeg" alt="在这里插入图片描述"></p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/333d97e0a12acba951ce5386822c7fa1.jpeg" alt="在这里插入图片描述"></p><p>AT24C32和AT24C64手册中写单个字节的操作及时序，红框中可以看出，在器件地址、应答信号后，跟着的是两个字节的WordAddress，这就是与AT24C01~AT24C16芯片的主要区别。</p><blockquote><p>Page Write写一页</p></blockquote><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/5af729615f1ccd745490d5189268c84c.jpeg" alt="在这里插入图片描述"></p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/9cb2f1b365cefa35d8166481fb89dd37.jpeg" alt="在这里插入图片描述"></p><p>页写操作也是没有多少新东西，除了WordAddress有两个字节，与其他容量芯片的操作类似。</p><h3 id="1-2-2-写操作"><a href="#1-2-2-写操作" class="headerlink" title="1.2.2 写操作"></a>1.2.2 写操作</h3><blockquote><p>读任意地址</p></blockquote><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/0a65056c7e0035e21f9a6478d5ad7e00.jpeg" alt="在这里插入图片描述"></p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/8fd2fe0e7d01d7646c7ed65edef533c5.jpeg" alt="在这里插入图片描述"></p><p>与较小容量的芯片相比，读任意地址的时序，主要的区别是需要发送两个字节的WordAddress。</p><blockquote><p>顺序读（页读）</p></blockquote><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/dac42b01a38b994fb7e1b363a9a05629.jpeg" alt="在这里插入图片描述"></p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/afc4a8430e152ce2d646ec5529db96da.jpeg" alt="在这里插入图片描述"></p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/16372561c08ea950ca362cd5ca8772bb.jpeg" alt="在这里插入图片描述"></p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/95e1f8167e340a33cd5426855e4548bf.jpeg" alt="在这里插入图片描述"></p><p>以上为页读操作，也是由“读当前地址”或“读任意地址”操作开始，mcu收到一个数据后，应答，不发送停止信号，即可接收下一个字节数据。</p><h3 id="1-2-3-示例代码-可参考"><a href="#1-2-3-示例代码-可参考" class="headerlink" title="1.2.3 示例代码(可参考)"></a>1.2.3 示例代码(可参考)</h3><blockquote><p><strong>宏定义</strong><br>先对器件地址等信息进行宏定义，根据不同的器件进行条件编译：</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> READ_CMD1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WRITE_CMD0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> x24C32<span class="comment">//器件名称，AT24C32、AT24C64、AT24C128、AT24C256、AT24C512</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEV_ADDR0xA0<span class="comment">//设备硬件地址</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> x24C32</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span> PAGE_NUM128<span class="comment">//页数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAGE_SIZE32<span class="comment">//页面大小(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAPACITY_SIZE(PAGE_NUM * PAGE_SIZE)<span class="comment">//总容量(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADDR_BYTE_NUM2<span class="comment">//地址字节个数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> x24C64</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span> PAGE_NUM256<span class="comment">//页数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAGE_SIZE32<span class="comment">//页面大小(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAPACITY_SIZE(PAGE_NUM * PAGE_SIZE)<span class="comment">//总容量(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADDR_BYTE_NUM2<span class="comment">//地址字节个数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> x24C128</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span> PAGE_NUM256<span class="comment">//页数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAGE_SIZE64<span class="comment">//页面大小(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAPACITY_SIZE(PAGE_NUM * PAGE_SIZE)<span class="comment">//总容量(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADDR_BYTE_NUM2<span class="comment">//地址字节个数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> x24C256</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span> PAGE_NUM512<span class="comment">//页数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAGE_SIZE64<span class="comment">//页面大小(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAPACITY_SIZE(PAGE_NUM * PAGE_SIZE)<span class="comment">//总容量(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADDR_BYTE_NUM2<span class="comment">//地址字节个数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> x24C512</span></span><br><span class="line"> <span class="meta">#<span class="meta-keyword">define</span> PAGE_NUM512<span class="comment">//页数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAGE_SIZE128<span class="comment">//页面大小(字节) </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CAPACITY_SIZE(PAGE_NUM * PAGE_SIZE)<span class="comment">//总容量(字节)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADDR_BYTE_NUM2<span class="comment">//地址字节个数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>写单个字节（写任意地址）</strong><br>发送起始信号–&gt;发送器件地址（包含写入命令）–&gt;收到应答–&gt;发送需要写入数据的地址的高字节（8bit）–&gt;收到应答–&gt;发送需要写入数据的地址的低字节（8bit）–&gt;收到应答–&gt;发送需要写入的数据–&gt;收到应答–&gt;发送停止信号</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">  * 函数名：x24Cxx_WriteByte</span></span><br><span class="line"><span class="comment">  * 功  能：写一个字节</span></span><br><span class="line"><span class="comment">  * 参  数：u16Addr要写入的地址</span></span><br><span class="line"><span class="comment">u8Data要写入的数据</span></span><br><span class="line"><span class="comment">  * 返回值：无</span></span><br><span class="line"><span class="comment">  * 说  明：无</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">x24Cxx_WriteByte</span><span class="params">(<span class="keyword">uint16_t</span> u16Addr, <span class="keyword">uint8_t</span> u8Data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">x24Cxx_WriteEnable();<span class="comment">//使能写入</span></span><br><span class="line">IIC_Start();<span class="comment">//起始信号</span></span><br><span class="line">IIC_WriteByte(DEV_ADDR | WRITE_CMD);<span class="comment">//器件寻址+读/写选择</span></span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)((u16Addr &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)(u16Addr &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte(u8Data);</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_Stop();<span class="comment">//停止信号</span></span><br><span class="line">x24Cxx_WriteDisble();<span class="comment">//禁止写入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>写一页</strong><br>发送起始信号–&gt;发送器件地址（包含写入命令）–&gt;收到应答–&gt;发送需要写入数据的首地址的高字节（8bit）–&gt;收到应答–&gt;发送需要写入数据的首地址的低字节（8bit）–&gt;收到应答–&gt;发送需要写入的第1个数据–&gt;收到应答–&gt;发送需要写入的第2个数据–&gt;收到应答…–&gt;发送需要写入的第n个数据–&gt;收到应答–&gt;发送停止信号</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">  * 函数名：x24Cxx_WritePage</span></span><br><span class="line"><span class="comment">  * 功  能：页写</span></span><br><span class="line"><span class="comment">  * 参  数：u16Addr要写入的首地址；</span></span><br><span class="line"><span class="comment">u8Len写入数据字节数，最大为PAGE_SIZE</span></span><br><span class="line"><span class="comment">pData要写入的数据首地址</span></span><br><span class="line"><span class="comment">  * 返回值：无</span></span><br><span class="line"><span class="comment">  * 说  明：最多写入1页，防止翻卷，如果地址跨页则去掉跨页的部分</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">x24Cxx_WritePage</span><span class="params">(<span class="keyword">uint16_t</span> u16Addr, <span class="keyword">uint8_t</span> u8Len, <span class="keyword">uint8_t</span> *pData)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> i;</span><br><span class="line">x24Cxx_WriteEnable();<span class="comment">//使能写入</span></span><br><span class="line">IIC_Start();<span class="comment">//起始信号</span></span><br><span class="line">IIC_WriteByte(DEV_ADDR | WRITE_CMD);<span class="comment">//器件寻址+读/写选择</span></span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)((u16Addr &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)(u16Addr &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line"><span class="keyword">if</span> (u8Len &gt; PAGE_SIZE)<span class="comment">//长度大于页的长度</span></span><br><span class="line">&#123;</span><br><span class="line">u8Len = PAGE_SIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((u16Addr + (<span class="keyword">uint16_t</span>)u8Len) &gt; CAPACITY_SIZE)<span class="comment">//超过容量</span></span><br><span class="line">&#123;</span><br><span class="line">u8Len = (<span class="keyword">uint8_t</span>)(CAPACITY_SIZE - u16Addr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (((u16Addr % PAGE_SIZE) + (<span class="keyword">uint16_t</span>)u8Len) &gt; PAGE_SIZE)<span class="comment">//判断是否跨页</span></span><br><span class="line">&#123;</span><br><span class="line">u8Len -= (<span class="keyword">uint8_t</span>)((u16Addr + (<span class="keyword">uint16_t</span>)u8Len) % PAGE_SIZE);<span class="comment">//跨页，截掉跨页的部分</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; u8Len; i++)</span><br><span class="line">&#123;</span><br><span class="line">IIC_WriteByte(*(pData + i));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">&#125;</span><br><span class="line">IIC_Stop();<span class="comment">//停止信号</span></span><br><span class="line">x24Cxx_WriteDisble();<span class="comment">//禁止写入</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>读单个字节（读任意地址）</strong><br>发送起始信号–&gt;发送器件地址（包含写入命令）–&gt;收到应答–&gt;发送需要读取数据的地址的高字节（8bit）–&gt;收到应答–&gt;发送需要读取数据的地址的低字节（8bit）–&gt;收到应答–&gt;发送起始信号–&gt;发送器件地址（包含读取命令）–&gt;收到应答–&gt;读取数据–&gt;不应答–&gt;发送停止信号</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">  * 函数名：x24Cxx_ReadByte</span></span><br><span class="line"><span class="comment">  * 功  能：读一个字节</span></span><br><span class="line"><span class="comment">  * 参  数：u16Addr要读取的地址</span></span><br><span class="line"><span class="comment">  * 返回值：u8Data读出的数据</span></span><br><span class="line"><span class="comment">  * 说  明：无</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">x24Cxx_ReadByte</span><span class="params">(<span class="keyword">uint16_t</span> u16Addr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> u8Data = <span class="number">0</span>;</span><br><span class="line">IIC_Start();<span class="comment">//起始信号</span></span><br><span class="line">IIC_WriteByte(DEV_ADDR | WRITE_CMD);<span class="comment">//器件寻址+读/写选择</span></span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)((u16Addr &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)(u16Addr &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_Start();<span class="comment">//起始信号</span></span><br><span class="line">IIC_WriteByte(DEV_ADDR | READ_CMD);<span class="comment">//器件寻址+读</span></span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">u8Data = IIC_ReadByte();</span><br><span class="line">IIC_NoAck();</span><br><span class="line">IIC_Stop();<span class="comment">//停止信号</span></span><br><span class="line"><span class="keyword">return</span> u8Data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>读一页（顺序读）</strong><br>发送起始信号–&gt;发送器件地址（包含写入命令）–&gt;收到应答–&gt;发送需要读取数据的首地址高字节–&gt;收到应答–&gt;发送需要读取数据的首地址低字节–&gt;收到应答–&gt;发送起始信号–&gt;发送器件地址（包含读取命令）–&gt;收到应答–&gt;读取第1个数据–&gt;发送应答–&gt;读取第2个数据–&gt;发送应答…–&gt;读取第n个数据–&gt;不应答–&gt;发送停止信号</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">  * 函数名：x24Cxx_ReadPage</span></span><br><span class="line"><span class="comment">  * 功  能：页读</span></span><br><span class="line"><span class="comment">  * 参  数：u16Addr要读取的首地址；</span></span><br><span class="line"><span class="comment">u8Len读取数据字节数，最大为PAGE_SIZE</span></span><br><span class="line"><span class="comment">pBuff读取数据存入的缓存</span></span><br><span class="line"><span class="comment">  * 返回值：无</span></span><br><span class="line"><span class="comment">  * 说  明：最多读1页，防止翻卷，如果地址跨页则去掉跨页的部分</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">x24Cxx_ReadPage</span><span class="params">(<span class="keyword">uint16_t</span> u16Addr, <span class="keyword">uint8_t</span> u8Len, <span class="keyword">uint8_t</span> *pBuff)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> i;</span><br><span class="line">IIC_Start();<span class="comment">//起始信号</span></span><br><span class="line">IIC_WriteByte(DEV_ADDR | WRITE_CMD);<span class="comment">//器件寻址+读/写选择</span></span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)((u16Addr &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_WriteByte((<span class="keyword">uint8_t</span>)(u16Addr &amp; <span class="number">0xFF</span>));</span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line">IIC_Start();<span class="comment">//起始信号</span></span><br><span class="line">IIC_WriteByte(DEV_ADDR | READ_CMD);<span class="comment">//器件寻址+读</span></span><br><span class="line">IIC_WaitAck();<span class="comment">//等待应答</span></span><br><span class="line"><span class="keyword">if</span> (u8Len &gt; PAGE_SIZE)<span class="comment">//长度大于页的长度</span></span><br><span class="line">&#123;</span><br><span class="line">u8Len = PAGE_SIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((u16Addr + (<span class="keyword">uint16_t</span>)u8Len) &gt; CAPACITY_SIZE)<span class="comment">//超过容量</span></span><br><span class="line">&#123;</span><br><span class="line">u8Len = (<span class="keyword">uint8_t</span>)(CAPACITY_SIZE - u16Addr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (((u16Addr % PAGE_SIZE) + (<span class="keyword">uint16_t</span>)u8Len) &gt; PAGE_SIZE)<span class="comment">//判断是否跨页</span></span><br><span class="line">&#123;</span><br><span class="line">u8Len -= (<span class="keyword">uint8_t</span>)((u16Addr + (<span class="keyword">uint16_t</span>)u8Len) % PAGE_SIZE);<span class="comment">//跨页，截掉跨页的部分</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (u8Len - <span class="number">1</span>); i++)</span><br><span class="line">&#123;</span><br><span class="line">*(pBuff + i) = IIC_ReadByte();</span><br><span class="line">IIC_Ack();<span class="comment">//主机应答</span></span><br><span class="line">&#125;</span><br><span class="line">*(pBuff + u8Len - <span class="number">1</span>) = IIC_ReadByte();</span><br><span class="line">IIC_NoAck();<span class="comment">//最后一个不应答</span></span><br><span class="line">IIC_Stop();<span class="comment">//停止信号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意事项</strong></p></blockquote><ol><li>仅适用于x24C32、x24C64、x24C128、x24C256、x24C512系列EEPROM芯片，其他容量芯片请参考第一节中链接的相关文章；</li><li>器件地址必须与A2&#x2F;A1&#x2F;A0引脚的硬件连接对应；</li><li>调用写入程序（无论是单字节写入还是页写），需要延时10ms（即twr,有的芯片手册说是5ms）后再对器件进行操作，否则这段时间内器件不响应命令；</li></ol><h2 id="2-示例代码"><a href="#2-示例代码" class="headerlink" title="2.示例代码"></a>2.示例代码</h2><p>EEPROM设备都需要一个8位设备地址字，包含一个启动条件，以使芯片能够进行读或写操作。设备地址字前4位最高有效位为1010。这对所有串行EEPROM设备都是通用的。接下来的3位是EEPROM的A2、A1和A0设备地址位。设备地址的第8位是读写操作选择位。如果该位高，则进行读操作；如果该位低，则进行写操作。</p><p>综上，如果对AT24C32进行读操作，则设备地址为10100001B&#x3D;A1H；如果对AT24C32进行写操作，则设备地址为10100000B&#x3D;A0H.</p><h3 id="2-1-读取一个字节数据代码如下（示例）："><a href="#2-1-读取一个字节数据代码如下（示例）：" class="headerlink" title="2.1 读取一个字节数据代码如下（示例）："></a>2.1 读取一个字节数据代码如下（示例）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 函数名：AT24CXX_ReadOneByte</span></span><br><span class="line"><span class="comment"> * 描述  ：从串行EEPROM指定地址处开始读取一个字节数据</span></span><br><span class="line"><span class="comment"> * 输入  ：_usAddress地址</span></span><br><span class="line"><span class="comment"> * 输出  ：读取的数据dat</span></span><br><span class="line"><span class="comment"> * 调用  ：</span></span><br><span class="line"><span class="comment"> * 备注  ：</span></span><br><span class="line"><span class="comment"> *******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">uint8_t</span> <span class="title">AT24CXX_ReadOneByte</span><span class="params">(<span class="keyword">uint16_t</span> _usAddress)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> dat = <span class="number">0</span>;       </span><br><span class="line">EE_IIC_Start();  </span><br><span class="line"><span class="keyword">if</span>(EE_SIZE &gt; ((<span class="number">128</span>*<span class="number">16</span>)))<span class="comment">//&gt;AT24C16</span></span><br><span class="line">&#123;</span><br><span class="line">EE_IIC_Send_Byte(EE_DEV_ADDR);<span class="comment">//发送写命令</span></span><br><span class="line">EE_IIC_Wait_Ack();</span><br><span class="line">EE_IIC_Send_Byte(_usAddress&gt;&gt;<span class="number">8</span>);<span class="comment">//发送高地址 </span></span><br><span class="line">EE_IIC_Wait_Ack(); </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">EE_IIC_Send_Byte(EE_DEV_ADDR + ((_usAddress/<span class="number">256</span>)&lt;&lt;<span class="number">1</span>));<span class="comment">//发送器件地址0xA0,写数据  </span></span><br><span class="line">&#125;</span><br><span class="line">EE_IIC_Send_Byte(_usAddress%<span class="number">256</span>);<span class="comment">//发送低地址</span></span><br><span class="line">EE_IIC_Wait_Ack();    </span><br><span class="line">EE_IIC_Start();      </span><br><span class="line">EE_IIC_Send_Byte(EE_DEV_ADDR | I2C_RD);<span class="comment">//进入接收模式0xA1   </span></span><br><span class="line">EE_IIC_Wait_Ack(); </span><br><span class="line">dat = EE_IIC_Read_Byte(<span class="number">0</span>);   </span><br><span class="line">EE_IIC_Stop();<span class="comment">//产生一个停止条件    </span></span><br><span class="line"><span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-2-写入一个字节数据代码如下（示例）："><a href="#2-2-写入一个字节数据代码如下（示例）：" class="headerlink" title="2.2 写入一个字节数据代码如下（示例）："></a>2.2 写入一个字节数据代码如下（示例）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 函数名：AT24CXX_WriteOneByte</span></span><br><span class="line"><span class="comment"> * 描述  ：从串行EEPROM指定地址处开始写入一个字节数据</span></span><br><span class="line"><span class="comment"> * 输入  ：_usAddress地址,_usWrite数据</span></span><br><span class="line"><span class="comment"> * 输出  ：void</span></span><br><span class="line"><span class="comment"> * 调用  ：</span></span><br><span class="line"><span class="comment"> * 备注  ：</span></span><br><span class="line"><span class="comment"> *******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_WriteOneByte</span><span class="params">(<span class="keyword">uint16_t</span> _usAddress,<span class="keyword">uint8_t</span> _usWrite)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">EE_IIC_Start();</span><br><span class="line"><span class="keyword">if</span>(EE_SIZE &gt; ((<span class="number">128</span>*<span class="number">16</span>)))<span class="comment">//&gt;AT24C16</span></span><br><span class="line">    &#123;  </span><br><span class="line">    EE_IIC_Send_Byte(EE_DEV_ADDR);<span class="comment">//发送写命令</span></span><br><span class="line">EE_IIC_Wait_Ack();</span><br><span class="line">EE_IIC_Send_Byte(_usAddress&gt;&gt;<span class="number">8</span>);<span class="comment">//发送高地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">EE_IIC_Send_Byte(EE_DEV_ADDR + ((_usAddress/<span class="number">256</span>)&lt;&lt;<span class="number">1</span>));<span class="comment">//发送器件地址0xA0,写数据  </span></span><br><span class="line">&#125;</span><br><span class="line">EE_IIC_Wait_Ack();   </span><br><span class="line">EE_IIC_Send_Byte(_usAddress%<span class="number">256</span>);<span class="comment">//发送低地址</span></span><br><span class="line">EE_IIC_Wait_Ack();       </span><br><span class="line">EE_IIC_Send_Byte(_usWrite);<span class="comment">//发送字节   </span></span><br><span class="line">EE_IIC_Wait_Ack();         </span><br><span class="line">EE_IIC_Stop();<span class="comment">//产生一个停止条件 </span></span><br><span class="line">delay_syms(<span class="number">10</span>); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-3-读取若干数据代码如下（示例）："><a href="#2-3-读取若干数据代码如下（示例）：" class="headerlink" title="2.3 读取若干数据代码如下（示例）："></a>2.3 读取若干数据代码如下（示例）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 函数名：AT24CXX_ReadBytes</span></span><br><span class="line"><span class="comment"> * 描述  ：从串行EEPROM指定地址处开始读取若干数据</span></span><br><span class="line"><span class="comment"> * 输入  ： usAddress : 起始地址</span></span><br><span class="line"><span class="comment"> *_pReadBuf : 存放读到的数据的缓冲区指针</span></span><br><span class="line"><span class="comment"> * _usSize : 数据长度，单位为字节</span></span><br><span class="line"><span class="comment"> * 输出  ：0 表示失败，1表示成功</span></span><br><span class="line"><span class="comment"> * 调用  ：</span></span><br><span class="line"><span class="comment"> * 备注  ：</span></span><br><span class="line"><span class="comment"> *******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_ReadBytes</span><span class="params">(<span class="keyword">uint16_t</span> _usAddress, <span class="keyword">uint8_t</span> *_pReadBuf, <span class="keyword">uint16_t</span> _usSize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(_usSize)</span><br><span class="line">&#123;</span><br><span class="line">    *_pReadBuf++ = AT24CXX_ReadOneByte(_usAddress++);</span><br><span class="line"> _usSize--; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-4-写入若干数据代码如下（示例）："><a href="#2-4-写入若干数据代码如下（示例）：" class="headerlink" title="2.4 写入若干数据代码如下（示例）："></a>2.4 写入若干数据代码如下（示例）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 函数名：AT24CXX_WriteBytes</span></span><br><span class="line"><span class="comment"> * 描述  ：向串行EEPROM指定地址写入若干数据</span></span><br><span class="line"><span class="comment"> * 输入  ：_usAddress : 起始地址 </span></span><br><span class="line"><span class="comment"> * _pWriteBuf : 存放读到的数据的缓冲区指针</span></span><br><span class="line"><span class="comment"> * _usSize : 数据长度，单位为字节</span></span><br><span class="line"><span class="comment"> * 调用  ：0 表示失败，1表示成功</span></span><br><span class="line"><span class="comment"> * 备注  ：</span></span><br><span class="line"><span class="comment"> *******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_WriteBytes</span><span class="params">(<span class="keyword">uint16_t</span> _usAddress, <span class="keyword">uint8_t</span> *_pWriteBuf, <span class="keyword">uint16_t</span> _usSize)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(_usSize--)</span><br><span class="line">&#123;</span><br><span class="line">AT24CXX_WriteOneByte(_usAddress,*_pWriteBuf);</span><br><span class="line">        _usAddress++;</span><br><span class="line">_pWriteBuf++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-5-测试代码如下（示例）："><a href="#2-5-测试代码如下（示例）：" class="headerlink" title="2.5 测试代码如下（示例）："></a>2.5 测试代码如下（示例）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment"> * 函数名：DEBUG_test_AT24C32</span></span><br><span class="line"><span class="comment"> * 描述  ：测试AT24C32</span></span><br><span class="line"><span class="comment"> * 输入  ：void</span></span><br><span class="line"><span class="comment"> * 输出  ：void</span></span><br><span class="line"><span class="comment"> * 调用  ：</span></span><br><span class="line"><span class="comment"> * 备注  ：</span></span><br><span class="line"><span class="comment"> *******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DEBUG_test_AT24C32</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> i,j;</span><br><span class="line"><span class="keyword">if</span>(EE_CheckOk() == <span class="number">1</span>)<span class="comment">//检测设备是否存在</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Check OK \r\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">    test_buf1[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    AT24CXX_WriteBytes(<span class="number">0x20</span>,test_buf1,<span class="number">16</span>);</span><br><span class="line"> </span><br><span class="line">    AT24CXX_ReadBytes(<span class="number">0x20</span>,test_buf2,<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">16</span>;j++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;test_buf2 = %d\r\n&quot;</span>,test_buf2[j]);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">&quot;Check Fail \r\n&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-测试结果"><a href="#3-测试结果" class="headerlink" title="3.测试结果"></a>3.测试结果</h2><p>和测试代码写的结果是一样，测试代码首先把0-15写入到test_buf1数组里面，再通过写函数把它写入到EEPROM芯片，最后通过读函数将它读取出来给到test_buf2数组，再打印出来。</p><p><img src="/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87AT24CXX/73927b5bda1c6cb8ad9fae358b9a2452.png" alt="在这里插入图片描述"></p><h1 id="其他示例代码一"><a href="#其他示例代码一" class="headerlink" title="其他示例代码一"></a>其他示例代码一</h1><h2 id="IIC-H"><a href="#IIC-H" class="headerlink" title="IIC.H"></a>IIC.H</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __IIC_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __IIC_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//本程序只供学习使用，未经作者许可，不得用于其它任何用途</span></span><br><span class="line"><span class="comment">//Mini STM32开发板</span></span><br><span class="line"><span class="comment">//IIC 驱动函数   </span></span><br><span class="line"><span class="comment">//正点原子@ALIENTEK</span></span><br><span class="line"><span class="comment">//技术论坛:www.openedv.com</span></span><br><span class="line"><span class="comment">//修改日期:2010/6/10 </span></span><br><span class="line"><span class="comment">//版本：V1.0</span></span><br><span class="line"><span class="comment">//版权所有，盗版必究。</span></span><br><span class="line"><span class="comment">//Copyright(C) 正点原子 2009-2019</span></span><br><span class="line"><span class="comment">//All rights reserved</span></span><br><span class="line"><span class="comment">//   </span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">//IO方向设置</span></span><br><span class="line"><span class="comment">#define SDA_IN()  &#123;GPIOC-&gt;CRH&amp;=0XFFFF0FFF;GPIOC-&gt;CRH|=8&lt;&lt;12;&#125;</span></span><br><span class="line"><span class="comment">#define SDA_OUT() &#123;GPIOC-&gt;CRH&amp;=0XFFFF0FFF;GPIOC-&gt;CRH|=3&lt;&lt;12;&#125;</span></span><br><span class="line"><span class="comment">//IO操作函数 </span></span><br><span class="line"><span class="comment">#define IIC_SCL    PCout(12) //SCL</span></span><br><span class="line"><span class="comment">#define IIC_SDA    PCout(11) //SDA </span></span><br><span class="line"><span class="comment">#define READ_SDA   PCin(11)  //输入SDA </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//IO方向设置</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDA_IN()  &#123;GPIOA-&gt;CRL&amp;=0X0FFFFFFF;GPIOA-&gt;CRL|=8&lt;&lt;28;&#125;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SDA_OUT() &#123;GPIOA-&gt;CRL&amp;=0X0FFFFFFF;GPIOA-&gt;CRL|=3&lt;&lt;28;&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//IO操作函数 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IIC_SCL    PAout(6) <span class="comment">//SCL</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IIC_SDA    PAout(7) <span class="comment">//SDA </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> READ_SDA   PAin(7)  <span class="comment">//输入SDA </span></span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//IIC所有操作函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>;                <span class="comment">//初始化IIC的IO口 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Start</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//发送IIC开始信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Stop</span><span class="params">(<span class="keyword">void</span>)</span></span>;  <span class="comment">//发送IIC停止信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Send_Byte</span><span class="params">(u8 txd)</span></span>;<span class="comment">//IIC发送一个字节</span></span><br><span class="line"><span class="function">u8 <span class="title">IIC_Read_Byte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> ack)</span></span>;<span class="comment">//IIC读取一个字节</span></span><br><span class="line"><span class="function">u8 <span class="title">IIC_Wait_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//IIC等待ACK信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//IIC发送ACK信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_NAck</span><span class="params">(<span class="keyword">void</span>)</span></span>;<span class="comment">//IIC不发送ACK信号</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Write_One_Byte</span><span class="params">(u8 daddr,u8 addr,u8 data)</span></span>;</span><br><span class="line"><span class="function">u8 <span class="title">IIC_Read_One_Byte</span><span class="params">(u8 daddr,u8 addr)</span></span>;  </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="IIC-C"><a href="#IIC-C" class="headerlink" title="IIC.C"></a>IIC.C</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">//本程序只供学习使用，未经作者许可，不得用于其它任何用途</span></span><br><span class="line"><span class="comment">//Mini STM32开发板</span></span><br><span class="line"><span class="comment">//IIC 驱动函数   </span></span><br><span class="line"><span class="comment">//正点原子@ALIENTEK</span></span><br><span class="line"><span class="comment">//技术论坛:www.openedv.com</span></span><br><span class="line"><span class="comment">//修改日期:2010/6/10 </span></span><br><span class="line"><span class="comment">//版本：V1.0</span></span><br><span class="line"><span class="comment">//版权所有，盗版必究。</span></span><br><span class="line"><span class="comment">//Copyright(C) 正点原子 2009-2019</span></span><br><span class="line"><span class="comment">//All rights reserved</span></span><br><span class="line"><span class="comment">//   </span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//初始化IIC</span></span><br><span class="line"><span class="comment">void IIC_Init(void)</span></span><br><span class="line"><span class="comment">&#123;     </span></span><br><span class="line"><span class="comment">GPIO_InitTypeDef GPIO_InitStructure;</span></span><br><span class="line"><span class="comment">//RCC-&gt;APB2ENR|=1&lt;&lt;4;//先使能外设IO PORTC时钟 </span></span><br><span class="line"><span class="comment">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE );</span></span><br><span class="line"><span class="comment">   </span></span><br><span class="line"><span class="comment">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;</span></span><br><span class="line"><span class="comment">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;   //推挽输出</span></span><br><span class="line"><span class="comment">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span></span><br><span class="line"><span class="comment">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;</span></span><br><span class="line"><span class="comment">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;   //推挽输出</span></span><br><span class="line"><span class="comment">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span></span><br><span class="line"><span class="comment">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">IIC_SCL=1;</span></span><br><span class="line"><span class="comment">IIC_SDA=1;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;     </span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE );</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;<span class="comment">//PA6  SCL</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;   <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;<span class="comment">//PA7  SDA</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP ;   <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">IIC_SCL=<span class="number">1</span>;</span><br><span class="line">IIC_SDA=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//产生IIC起始信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Start</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SDA_OUT();     <span class="comment">//sda线输出</span></span><br><span class="line">IIC_SDA=<span class="number">1</span>;    </span><br><span class="line">IIC_SCL=<span class="number">1</span>;</span><br><span class="line">delay_us(<span class="number">4</span>);</span><br><span class="line">IIC_SDA=<span class="number">0</span>;<span class="comment">//START:when CLK is high,DATA change form high to low </span></span><br><span class="line">delay_us(<span class="number">4</span>);</span><br><span class="line">IIC_SCL=<span class="number">0</span>;<span class="comment">//钳住I2C总线，准备发送或接收数据 </span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//产生IIC停止信号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Stop</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SDA_OUT();<span class="comment">//sda线输出</span></span><br><span class="line">IIC_SCL=<span class="number">0</span>;</span><br><span class="line">IIC_SDA=<span class="number">0</span>;<span class="comment">//STOP:when CLK is high DATA change form low to high</span></span><br><span class="line">delay_us(<span class="number">4</span>);</span><br><span class="line">IIC_SCL=<span class="number">1</span>; </span><br><span class="line">delay_us(<span class="number">4</span>);</span><br><span class="line">IIC_SDA=<span class="number">1</span>;<span class="comment">//发送I2C总线结束信号</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//等待应答信号到来</span></span><br><span class="line"><span class="comment">//返回值：1，接收应答失败</span></span><br><span class="line"><span class="comment">//        0，接收应答成功</span></span><br><span class="line"><span class="function">u8 <span class="title">IIC_Wait_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 ucErrTime=<span class="number">0</span>;</span><br><span class="line">SDA_IN();      <span class="comment">//SDA设置为输入  </span></span><br><span class="line">IIC_SDA=<span class="number">1</span>;delay_us(<span class="number">1</span>);   </span><br><span class="line">IIC_SCL=<span class="number">1</span>;delay_us(<span class="number">1</span>); </span><br><span class="line"><span class="keyword">while</span>(READ_SDA)</span><br><span class="line">&#123;</span><br><span class="line">ucErrTime++;</span><br><span class="line"><span class="keyword">if</span>(ucErrTime&gt;<span class="number">250</span>)</span><br><span class="line">&#123;</span><br><span class="line">IIC_Stop();</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">IIC_SCL=<span class="number">0</span>;<span class="comment">//时钟输出0    </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//产生ACK应答</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Ack</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IIC_SCL=<span class="number">0</span>;</span><br><span class="line">SDA_OUT();</span><br><span class="line">IIC_SDA=<span class="number">0</span>;</span><br><span class="line">delay_us(<span class="number">2</span>);</span><br><span class="line">IIC_SCL=<span class="number">1</span>;</span><br><span class="line">delay_us(<span class="number">2</span>);</span><br><span class="line">IIC_SCL=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//不产生ACK应答    </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_NAck</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IIC_SCL=<span class="number">0</span>;</span><br><span class="line">SDA_OUT();</span><br><span class="line">IIC_SDA=<span class="number">1</span>;</span><br><span class="line">delay_us(<span class="number">2</span>);</span><br><span class="line">IIC_SCL=<span class="number">1</span>;</span><br><span class="line">delay_us(<span class="number">2</span>);</span><br><span class="line">IIC_SCL=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//IIC发送一个字节</span></span><br><span class="line"><span class="comment">//返回从机有无应答</span></span><br><span class="line"><span class="comment">//1，有应答</span></span><br><span class="line"><span class="comment">//0，无应答  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IIC_Send_Byte</span><span class="params">(u8 txd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 t;   </span><br><span class="line">SDA_OUT();     </span><br><span class="line">IIC_SCL=<span class="number">0</span>;<span class="comment">//拉低时钟开始数据传输</span></span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;<span class="number">8</span>;t++)</span><br><span class="line">&#123;              </span><br><span class="line">IIC_SDA=(txd&amp;<span class="number">0x80</span>)&gt;&gt;<span class="number">7</span>;</span><br><span class="line">txd&lt;&lt;=<span class="number">1</span>;   </span><br><span class="line">delay_us(<span class="number">2</span>);   <span class="comment">//对TEA5767这三个延时都是必须的</span></span><br><span class="line">IIC_SCL=<span class="number">1</span>;</span><br><span class="line">delay_us(<span class="number">2</span>); </span><br><span class="line">IIC_SCL=<span class="number">0</span>;</span><br><span class="line">delay_us(<span class="number">2</span>);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//读1个字节，ack=1时，发送ACK，ack=0，发送nACK   </span></span><br><span class="line"><span class="function">u8 <span class="title">IIC_Read_Byte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> ack)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> i,receive=<span class="number">0</span>;</span><br><span class="line">SDA_IN();<span class="comment">//SDA设置为输入</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++ )</span><br><span class="line">&#123;</span><br><span class="line">IIC_SCL=<span class="number">0</span>; </span><br><span class="line">delay_us(<span class="number">2</span>);</span><br><span class="line">IIC_SCL=<span class="number">1</span>;</span><br><span class="line">receive&lt;&lt;=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(READ_SDA)</span><br><span class="line">receive++;   </span><br><span class="line">delay_us(<span class="number">1</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!ack)</span><br><span class="line">IIC_NAck();<span class="comment">//发送nACK</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">IIC_Ack(); <span class="comment">//发送ACK   </span></span><br><span class="line"><span class="keyword">return</span> receive;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="24CXX-H"><a href="#24CXX-H" class="headerlink" title="24CXX.H"></a>24CXX.H</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __24CXX_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __24CXX_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iic.h&quot;</span>   </span></span><br><span class="line"><span class="comment">//Mini STM32开发板</span></span><br><span class="line"><span class="comment">//24CXX驱动函数(适合24C01~24C16,24C32~256未经过测试!有待验证!)</span></span><br><span class="line"><span class="comment">//正点原子@ALIENTEK</span></span><br><span class="line"><span class="comment">//2010/6/10</span></span><br><span class="line"><span class="comment">//V1.2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C01127</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C02255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C04511</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C081023</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C162047</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C324095</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C64  8191</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C12816383</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C25632767  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C51265535</span></span><br><span class="line"><span class="comment">//Mini STM32开发板使用的是24c02，所以定义EE_TYPE为AT24C02</span></span><br><span class="line"><span class="comment">//#define EE_TYPE AT24C02</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EE_TYPE AT24C512</span></span><br><span class="line"></span><br><span class="line"><span class="function">u8 <span class="title">AT24CXX_ReadOneByte</span><span class="params">(u16 ReadAddr)</span></span>;<span class="comment">//指定地址读取一个字节</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_WriteOneByte</span><span class="params">(u16 WriteAddr,u8 DataToWrite)</span></span>;<span class="comment">//指定地址写入一个字节</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_WriteLenByte</span><span class="params">(u16 WriteAddr,u32 DataToWrite,u8 Len)</span></span>;<span class="comment">//指定地址开始写入指定长度的数据</span></span><br><span class="line"><span class="function">u32 <span class="title">AT24CXX_ReadLenByte</span><span class="params">(u16 ReadAddr,u8 Len)</span></span>;<span class="comment">//指定地址开始读取指定长度数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_Write</span><span class="params">(u16 WriteAddr,u8 *pBuffer,u16 NumToWrite)</span></span>;<span class="comment">//从指定地址开始写入指定长度的数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_Read</span><span class="params">(u16 ReadAddr,u8 *pBuffer,u16 NumToRead)</span></span>;   <span class="comment">//从指定地址开始读出指定长度的数据</span></span><br><span class="line"> </span><br><span class="line"><span class="function">u8 <span class="title">AT24CXX_Check</span><span class="params">(<span class="keyword">void</span>)</span></span>;  <span class="comment">//检查器件</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_Init</span><span class="params">(<span class="keyword">void</span>)</span></span>; <span class="comment">//初始化IIC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h2 id="24CXX-C"><a href="#24CXX-C" class="headerlink" title="24CXX.C"></a>24CXX.C</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;24cxx.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="comment">//Mini STM32开发板</span></span><br><span class="line"><span class="comment">//24CXX驱动函数(适合24C01~24C16,24C32~256未经过测试!有待验证!)</span></span><br><span class="line"><span class="comment">//正点原子@ALIENTEK</span></span><br><span class="line"><span class="comment">//2010/6/10</span></span><br><span class="line"><span class="comment">//V1.2</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//初始化IIC接口</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IIC_Init();</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//在AT24CXX指定地址读出一个数据</span></span><br><span class="line"><span class="comment">//ReadAddr:开始读数的地址  </span></span><br><span class="line"><span class="comment">//返回值  :读到的数据</span></span><br><span class="line"><span class="function">u8 <span class="title">AT24CXX_ReadOneByte</span><span class="params">(u16 ReadAddr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 temp=<span class="number">0</span>;       </span><br><span class="line">IIC_Start();  </span><br><span class="line"><span class="keyword">if</span>(EE_TYPE&gt;AT24C16)</span><br><span class="line">&#123;</span><br><span class="line">IIC_Send_Byte(<span class="number">0XA0</span>);   <span class="comment">//发送写命令</span></span><br><span class="line">IIC_Wait_Ack();</span><br><span class="line">IIC_Send_Byte(ReadAddr&gt;&gt;<span class="number">8</span>);<span class="comment">//发送高地址</span></span><br><span class="line">IIC_Wait_Ack(); <span class="comment">//这句也得考虑注释掉</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">IIC_Send_Byte(<span class="number">0XA0</span>+((ReadAddr/<span class="number">256</span>)&lt;&lt;<span class="number">1</span>));   <span class="comment">//发送器件地址0XA0,写数据  </span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//IIC_Wait_Ack(); //这句去掉就OK了，就可以通过AT24CXX_Check()了</span></span><br><span class="line">IIC_Send_Byte(ReadAddr%<span class="number">256</span>);   <span class="comment">//发送低地址</span></span><br><span class="line">IIC_Wait_Ack();    </span><br><span class="line">IIC_Start();      </span><br><span class="line">IIC_Send_Byte(<span class="number">0XA1</span>);           <span class="comment">//进入接收模式   </span></span><br><span class="line">IIC_Wait_Ack(); </span><br><span class="line">temp=IIC_Read_Byte(<span class="number">0</span>);   </span><br><span class="line">IIC_Stop();<span class="comment">//产生一个停止条件    </span></span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//在AT24CXX指定地址写入一个数据</span></span><br><span class="line"><span class="comment">//WriteAddr  :写入数据的目的地址    </span></span><br><span class="line"><span class="comment">//DataToWrite:要写入的数据</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_WriteOneByte</span><span class="params">(u16 WriteAddr,u8 DataToWrite)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IIC_Start();  </span><br><span class="line"><span class="keyword">if</span>(EE_TYPE&gt;AT24C16)</span><br><span class="line">&#123;</span><br><span class="line">IIC_Send_Byte(<span class="number">0XA0</span>);    <span class="comment">//发送写命令</span></span><br><span class="line">IIC_Wait_Ack();</span><br><span class="line">IIC_Send_Byte(WriteAddr&gt;&gt;<span class="number">8</span>);<span class="comment">//发送高地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">IIC_Send_Byte(<span class="number">0XA0</span>+((WriteAddr/<span class="number">256</span>)&lt;&lt;<span class="number">1</span>));   <span class="comment">//发送器件地址0XA0,写数据 </span></span><br><span class="line">&#125; </span><br><span class="line">IIC_Wait_Ack();   </span><br><span class="line">IIC_Send_Byte(WriteAddr%<span class="number">256</span>);   <span class="comment">//发送低地址</span></span><br><span class="line">IIC_Wait_Ack();       </span><br><span class="line">IIC_Send_Byte(DataToWrite);     <span class="comment">//发送字节   </span></span><br><span class="line">IIC_Wait_Ack();         </span><br><span class="line">IIC_Stop();<span class="comment">//产生一个停止条件 </span></span><br><span class="line">delay_ms(<span class="number">10</span>); </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//在AT24CXX里面的指定地址开始写入长度为Len的数据</span></span><br><span class="line"><span class="comment">//该函数用于写入16bit或者32bit的数据.</span></span><br><span class="line"><span class="comment">//WriteAddr  :开始写入的地址  </span></span><br><span class="line"><span class="comment">//DataToWrite:数据数组首地址</span></span><br><span class="line"><span class="comment">//Len        :要写入数据的长度2,4</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_WriteLenByte</span><span class="params">(u16 WriteAddr,u32 DataToWrite,u8 Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 t;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;Len;t++)</span><br><span class="line">&#123;</span><br><span class="line">AT24CXX_WriteOneByte(WriteAddr+t,(DataToWrite&gt;&gt;(<span class="number">8</span>*t))&amp;<span class="number">0xff</span>);</span><br><span class="line">&#125;    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//在AT24CXX里面的指定地址开始读出长度为Len的数据</span></span><br><span class="line"><span class="comment">//该函数用于读出16bit或者32bit的数据.</span></span><br><span class="line"><span class="comment">//ReadAddr   :开始读出的地址 </span></span><br><span class="line"><span class="comment">//返回值     :数据</span></span><br><span class="line"><span class="comment">//Len        :要读出数据的长度2,4</span></span><br><span class="line"><span class="function">u32 <span class="title">AT24CXX_ReadLenByte</span><span class="params">(u16 ReadAddr,u8 Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 t;</span><br><span class="line">u32 temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(t=<span class="number">0</span>;t&lt;Len;t++)</span><br><span class="line">&#123;</span><br><span class="line">temp&lt;&lt;=<span class="number">8</span>;</span><br><span class="line">temp+=AT24CXX_ReadOneByte(ReadAddr+Len-t<span class="number">-1</span>);     </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> temp;    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//检查AT24CXX是否正常</span></span><br><span class="line"><span class="comment">//这里用了24XX的最后一个地址来存储标志字.24C02是255,24C512是65535</span></span><br><span class="line"><span class="comment">//如果用其他24C系列,这个地址要修改</span></span><br><span class="line"><span class="comment">//返回1:检测失败</span></span><br><span class="line"><span class="comment">//返回0:检测成功</span></span><br><span class="line"><span class="function">u8 <span class="title">AT24CXX_Check</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 temp;</span><br><span class="line">temp=AT24CXX_ReadOneByte(<span class="number">65535</span>);<span class="comment">//避免每次开机都写AT24CXX   </span></span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0X55</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line"><span class="keyword">else</span><span class="comment">//排除第一次初始化的情况</span></span><br><span class="line">&#123;</span><br><span class="line">AT24CXX_WriteOneByte(<span class="number">65535</span>,<span class="number">0X55</span>);</span><br><span class="line">temp=AT24CXX_ReadOneByte(<span class="number">65535</span>);</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">0X55</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;  </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//在AT24CXX里面的指定地址开始读出指定个数的数据</span></span><br><span class="line"><span class="comment">//ReadAddr :开始读出的地址 对24c02为0~255</span></span><br><span class="line"><span class="comment">//pBuffer  :数据数组首地址</span></span><br><span class="line"><span class="comment">//NumToRead:要读出数据的个数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_Read</span><span class="params">(u16 ReadAddr,u8 *pBuffer,u16 NumToRead)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(NumToRead)</span><br><span class="line">&#123;</span><br><span class="line">*pBuffer++=AT24CXX_ReadOneByte(ReadAddr++);</span><br><span class="line">NumToRead--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//在AT24CXX里面的指定地址开始写入指定个数的数据</span></span><br><span class="line"><span class="comment">//WriteAddr :开始写入的地址 对24c02为0~255</span></span><br><span class="line"><span class="comment">//pBuffer   :数据数组首地址</span></span><br><span class="line"><span class="comment">//NumToWrite:要写入数据的个数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AT24CXX_Write</span><span class="params">(u16 WriteAddr,u8 *pBuffer,u16 NumToWrite)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(NumToWrite--)</span><br><span class="line">&#123;</span><br><span class="line">AT24CXX_WriteOneByte(WriteAddr,*pBuffer);</span><br><span class="line">WriteAddr++;</span><br><span class="line">pBuffer++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AT24C512的读写问题?- 百度文库  </span></span><br><span class="line"><span class="comment">https://wenku.baidu.com/view/cfc89adaa48da0116c175f0e7cd184254b351bb6.html</span></span><br><span class="line"><span class="comment">阿波罗F4/F7开发板例程不支持24C512的解决办法-OpenEdv-开源电子网  </span></span><br><span class="line"><span class="comment">http://www.openedv.com/forum.php?mod=viewthread&amp;tid=93162&amp;highlight=24C512</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="主程序main-c"><a href="#主程序main-c" class="headerlink" title="主程序main.c"></a>主程序main.c</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="comment">//#include &quot;lcd.h&quot;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;key.h&quot;</span>  </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;24cxx.h&quot;</span> </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;iic.h&quot;</span></span></span><br><span class="line"><span class="comment">//ALIENTEK Mini STM32开发板范例代码19</span></span><br><span class="line"><span class="comment">//IIC实验  </span></span><br><span class="line"><span class="comment">//技术支持：www.openedv.com</span></span><br><span class="line"><span class="comment">//广州市星翼电子科技有限公司</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">//要写入到24Cxx的字符串数组</span></span><br><span class="line"><span class="keyword">const</span> u8 TEXT_Buffer[]=&#123;<span class="string">&quot;MiniSTM32 IIC TEST&quot;</span>&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE sizeof(TEXT_Buffer)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//QQ：1447233384</span></span><br><span class="line">u8 key;</span><br><span class="line">u16 i=<span class="number">0</span>;</span><br><span class="line">u8 datatemp[SIZE];</span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">// 设置中断优先级分组2</span></span><br><span class="line">delay_init();    <span class="comment">//延时函数初始化  </span></span><br><span class="line">uart_init(<span class="number">9600</span>); <span class="comment">//串口初始化为9600</span></span><br><span class="line">LED_Init();  <span class="comment">//初始化与LED连接的硬件接口</span></span><br><span class="line"><span class="comment">//LCD_Init();</span></span><br><span class="line">KEY_Init();<span class="comment">//按键初始化 </span></span><br><span class="line">AT24CXX_Init();<span class="comment">//IIC初始化 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;开机成功\r\n&quot;</span>);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(AT24CXX_Check())<span class="comment">//检测不到24c02</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//LCD_ShowString(60,150,200,16,16,&quot;24C02 Check Failed!&quot;);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;检测不到\r\n&quot;</span>);</span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line"><span class="comment">//LCD_ShowString(60,150,200,16,16,&quot;Please Check!      &quot;);</span></span><br><span class="line">delay_ms(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请检查\r\n&quot;</span>);</span><br><span class="line">LED0=!LED0;<span class="comment">//DS0闪烁</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;检测存在\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;read \t %d \t.\r\n&quot;</span>, AT24CXX_ReadOneByte(<span class="number">65535</span>)  );</span><br><span class="line"><span class="comment">//读出AT24CXX_Check()中65535位置中的数值</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">key=KEY_Scan(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(key==WKUP_PRES)<span class="comment">//WK_UP 按下,写入24C02</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//LCD_Fill(0,170,239,319,WHITE);//清除半屏    </span></span><br><span class="line"><span class="comment">//LCD_ShowString(60,170,200,16,16,&quot;Start Write 24C02....&quot;);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Start Write 24C512....\r\n&quot;</span>);</span><br><span class="line">AT24CXX_Write(<span class="number">0</span>,(u8*)TEXT_Buffer,SIZE);</span><br><span class="line"><span class="comment">//LCD_ShowString(60,170,200,16,16,&quot;24C02 Write Finished!&quot;);//提示传送完成</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;24C512 Write Finished!\r\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(key==KEY0_PRES)<span class="comment">//KEY0 按下,读取字符串并显示</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//LCD_ShowString(60,170,200,16,16,&quot;Start Read 24C02.... &quot;);</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Start Read 24C512.... \r\n&quot;</span>);</span><br><span class="line">AT24CXX_Read(<span class="number">0</span>,datatemp,SIZE);</span><br><span class="line"><span class="comment">//LCD_ShowString(60,170,200,16,16,&quot;The Data Readed Is:  &quot;);//提示传送完成</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The Data Readed Is:  %s\r\n&quot;</span>,datatemp);</span><br><span class="line"><span class="comment">//LCD_ShowString(60,190,200,16,16,datatemp);//显示读到的字符串</span></span><br><span class="line"><span class="comment">//printf(&quot;Start Read 24C02.... \r\n&quot;);</span></span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">delay_ms(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED0=!LED0;<span class="comment">//提示系统正在运行</span></span><br><span class="line">i=<span class="number">0</span>;</span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="AT24Cxx应用介绍"><a href="#AT24Cxx应用介绍" class="headerlink" title="AT24Cxx应用介绍"></a>AT24Cxx应用介绍</h1><p>结论：<br>1、读写AT24CXX芯片，根据容量有多种方式：<br>        一、容量为AT24C01<del>AT24C16，首先发送设备地址（8位地址），再发送数据地址（8位地址），再发送或者接受数据。<br>        二、AT24C32&#x2F;AT24C64</del>AT24C512，首先发送设备地址（8位地址），再发送高位数据地址，再发送地位数据地址，再发送或者接受数据。<br>        三、容量AT24C1024的芯片,是把容量一和容量二的方法结合，设备地址中要用一位作为数据地址位，存储地址长度是17位。<br>2、它的设备地址根据容量不同有区别：<br>        1）、AT24C01<del>AT24C16：这一类又分为两类，分别为AT24C01&#x2F;AT24C02和AT24C04</del>AT24C16;他们的设备地址为高7位，低1位用来作为读写标示位，1为读，0为写。<br>                <strong>1</strong>、AT24C01&#x2F;AT24C02。AT24C01&#x2F;AT24C02的A0、A1、A2引脚作为7位设备地址的低三位，高4为固定为1010B，低三位A0、A1、A2确定了AT24CXX的设备地址，所以一根I2C线上最大可以接8个AT24CXX，地址为1010000B<del>1010111B。<br>                <strong>2</strong>、AT24C04</del>AT24C16的 A0、A1、A2只使用一部分，不用的悬空或者接地（数据手册中写的是悬空不接）。举例：AT24C04只用A2、A1引脚作为设备地址，另外一位A0不用悬空，发送地址中对应的这位（A0）用来写入页寻址的页面号,一根I2C线上最大可以接4个，地址为101000xB~101011xB<br>        2）、AT24C32&#x2F;AT24C64:和AT24C01&#x2F;AT24C02一样，区别是，发送数据地址变成16位。</p><p><strong>注意事项：</strong>对AT24C32来说，WP置高，则只有四分之一受保护，即0x0C00－0x0FFF。也就是说保护区为1KBytes。对于低地址的四分之三，则不保护。所以，如果数据较多时，可以有选择地存储。不重要的数据则放在低四分之三区域，重要的数据则放在高四分之一区域。</p><p>详细如下：<br>图AT24C01&#x2F;02&#x2F;04&#x2F;08&#x2F;16的外形级封装和引脚说明</p><p>AT24C系列为美国ATMEL公司推出的串行COMS型E2PROM，是典型的串行通信E2PROM 。</p><p>AT24CXX是IIC总线串行器件,具有工作电源宽(1.8～6.0 V),抗干扰能力强（输入引脚内置施密特触发器滤波抑制噪声),功耗低(写状态时最大工作电流3 mA),高可靠性(写次数100万次,数据保存100年),支持在线编程等特点.</p><p>从上面两张图片可以得知：</p><p>AT ：ATMEL公司出品</p><p>24:  系列号</p><p>C ：商业</p><p>XX ： 存储容量 ，举例 01 –&gt; 1K à 128 字节</p><pre><code>02 à 2K à 256 字节</code></pre><p>   …………….</p><pre><code>16à 16K à 2K 字节</code></pre><p>I2C总线协议规定，任何将数据传送到总线的器件作为发送器。任何从总线接收数据的器件为接收器。</p><p>主器件控制串行时钟和起始、停止信号的发生。主器件任何期间都可以发送或接收数据，但是主器件控制数据传送模式（发送或者接收）。</p><p>WP写保护引脚：当该引脚连接到VCC，I2C器件内的内容被写保护（只能读）。如果允许对器件进行正常的读写，那么WP引脚需连接到地或者悬空。</p><p>通过器件地址输入端A0、A1、A2可以实现讲最多8个at24c01器件和at24c02器件、4个at24c04器件、2个at24c08器件、1个at24c16器件连接到总线上。当总线上只有一个器件时，A0、A1、A2可以连接到地或者悬空。</p><p>下面重点分析一下这句话：为什么 at24c01&#x2F;at24c02 可以挂接8个器件呢？为什么到了 at24C16 却只能挂接1个器件呢？？？</p><p>WHY？ </p><p>器件识别控制字节的作用</p><p>以at24c01&#x2F;at24c02 和at24C16  举例：</p><p>I2C总线上所有外围器件都有唯一的地址，这个地址由器件地址和引脚地址两部分组成。共7位。</p><p>器件地址是I2C器件固有的地址编码，器件出厂时已经给定，不可更改。</p><p>引脚地址由I2C总线外围器件的地址引脚A0、A1、A2决定，根据其在电路中接电源正极、接地或者悬空的不同，形成不同的地址代码。引脚地址数也决定了同一器件可接入总线的最大数目。</p><p>此时于引脚地址无关，与 P2、P1、P0有关，即页地址有关，页地址高三位是器件识别控制字节的1－3位，器件上的A0，A1，A2，就无效了，所以只能接1个AT24C16器件。</p><p>页地址是什么乖乖，从何而来呢？？？？</p><p>上图可知 AT24C16 存储容量 16K &#x3D; 2K字节 &#x3D; 128（页面数）* 16 （每页的字节数） &#x3D; 2^11 (寻址地址位数 11位)。</p><p>AT24C16内部有2048*8位的存储容量，即可以存储2K字节的数据。这2K字节被放在128个页内，每页存放16个字节。所以对AT24C16内部的访问需要11位地址（0-7ff）。</p><p>举个实际的例子：</p><p>对AT24C16访问时，按照页地址和页偏移量的方式进行访问。</p><p>比如要访问第100页的第3个字节，则在发送寻址的时候，就要发送0X0643,其中页地址的高三位放在器件地址中。</p><p>第100页的第3个字节  &#x3D;&#x3D;  0X0643</p><p>0643 &#x3D; 6 * 256 + 4 * 16  + 3 &#x3D;  （6<em>16+4）</em>16 + 3 &#x3D; 1603 </p><p>就是 100页的第3个字节。</p><p>所以在编写程序对AT24C16第100页的第3个字节进行写数据的时候，步骤如下：</p><p>1）发送起始信号；</p><p>2）发送器件地址0XAC（1010 1100，1010是固定地址，110是页地址的高三位，0表示写操作）；</p><p>3）发送操作地址0X43（0100 0010，0100是页地址的低四位，0010是页地址偏移量，即第100页内的第三个字节；</p><p>4）发送要写的数据；</p><p>5）发送终止信号。</p><h1 id="STM32-AT24CXX器件地址的理解（IIC通讯协议）"><a href="#STM32-AT24CXX器件地址的理解（IIC通讯协议）" class="headerlink" title="STM32 AT24CXX器件地址的理解（IIC通讯协议）"></a>STM32 AT24CXX器件地址的理解（IIC通讯协议）</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (EE_TYPE &gt; AT24C16)      <span class="comment">/* 24C16以上的型号, 分2个字节发送地址 */</span></span><br><span class="line">    &#123;</span><br><span class="line">        iic_send_byte(<span class="number">0XA0</span>);    <span class="comment">/* 发送写命令, IIC规定最低位是0, 表示写入 */</span></span><br><span class="line">        iic_wait_ack();         <span class="comment">/* 每次发送完一个字节,都要等待ACK */</span></span><br><span class="line">        iic_send_byte(addr &gt;&gt; <span class="number">8</span>);<span class="comment">/* 发送高字节地址 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        iic_send_byte(<span class="number">0XA0</span> + ((addr &gt;&gt; <span class="number">8</span>) &lt;&lt; <span class="number">1</span>));   <span class="comment">/* 发送器件 0XA0 + 高位a8/a9/a10地址,写数据 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    iic_wait_ack();             <span class="comment">/* 每次发送完一个字节,都要等待ACK */</span></span><br><span class="line">    iic_send_byte(addr % <span class="number">256</span>);  <span class="comment">/* 发送低位地址 */</span></span><br><span class="line">    iic_wait_ack();             <span class="comment">/* 等待ACK, 此时地址发送完成了 */</span></span><br></pre></td></tr></table></figure><p>EETYPE为宏定义，具体如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C01     127</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C02     255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C04     511</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C08     1023</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C16     2047</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C32     4095</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C64     8191</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C128    16383</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AT24C256    32767</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 开发板使用的是24c02，所以定义EE_TYPE为AT24C02 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EE_TYPE     AT24C02</span></span><br></pre></td></tr></table></figure><p>根据尼使用得AT24C型号得不同，给EE_TYPE初始化不同的值。先讨论C16以下的</p><pre><code> *    对于24C01/02, 其器件地址格式(8bit)为: 1  0  1  0  A2  A1  A0  R/W *    对于24C04,    其器件地址格式(8bit)为: 1  0  1  0  A2  A1  a8  R/W *    对于24C08,    其器件地址格式(8bit)为: 1  0  1  0  A2  a9  a8  R/W *    对于24C16,    其器件地址格式(8bit)为: 1  0  1  0  a10 a9  a8  R/W</code></pre><p><strong>R&#x2F;W:</strong> 读&#x2F;写控制位 0,表示写; 1,表示读;<br><strong>A0&#x2F;A1&#x2F;A2:</strong> 对应器件的1,2,3引脚(只有24C01&#x2F;02&#x2F;04&#x2F;8有这些脚，16以上的芯片没设计这些脚)<br><strong>a8&#x2F;a9&#x2F;a10:</strong> 对应存储地址的高位。</p><p>比如24C04 有512byte（32page16byte),地址本质都是0 1这种二进制（经常我们看到的地址表示形式是0x00000008这种，是32位机下，四个二进制转换成一个十六进制形成的），一位二进制（2的一次方）能代表两个地址块，2位二进制（2的平方）能代表四个地址块，512个地址块就需要2的九次方，所以每个地址需要9位来表示来能把这521byte覆盖完。在发送时，只能一个字节一个字节的发送，你要一口气发九个字节，从机会领悟不到的，所以可以先把高位的1位弄成00000001发送，再发最后的八位，加上1  0  1  0  A2  A1  A0  R&#x2F;W，一共要发三次才能确定要读或者写的地址，麻烦！！</p><p>所以我们把多出来的1位（第九位，这个最高位）放到1  0  1  0  A2  A1  A0  R&#x2F;W的A0位去传输，这样只用传输两次即可。如果多了两位就把多的放在A1,和A0位去传输。</p><hr><p>以上方法最多11bit地址，最多可以表示2048个位置,可以寻址24C16及以内的型号</p><p>针对C32以后的，不够用了，所以干脆就大大方方的先发1  0  1  0  A2  A1  A0  R&#x2F;W，再分两次发送地址</p><hr><p>iic_send_byte(0XA0 + ((addr &gt;&gt; 8) &lt;&lt; 1));</p><p>这句代码的理解：addr &gt;&gt; 8左移八位，把八位之后的东西留下来再左移一位后与0XA0相加，左移这一位相当于是给R&#x2F;W腾了个位置，通过这句代码，把地址的高x位取出来了，然后随着1  0  1  0  A2  A1  A0  R&#x2F;W发送出去。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/wanglong3713/article/details/124909042">AT24C32、AT24C64、AT24C128、AT24C256、AT24C512系列EEPROM芯片单片机读写驱动程序</a></li><li><a href="https://blog.csdn.net/qq_44836335/article/details/134663326">串行 EEPROM 存储器芯片AT24C32（兼容同系列AT24CXX）</a></li><li><a href="https://blog.csdn.net/ba_wang_mao/article/details/108142765">AT24CXX系列芯片在STM32F103单片机下的读写程序</a></li><li><a href="https://www.cnblogs.com/leo0621/p/8251897.html">EEPROM—AT24Cxx应用介绍</a></li><li><a href="https://blog.csdn.net/qq_42747105/article/details/130833208">STM32 AT24CXX器件地址的理解（IIC通讯协议）</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">收集硬件存储芯片AT24CXX相关资料</summary>
    
    
    
    <category term="硬件" scheme="https://zml3589110.github.io/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="存储芯片" scheme="https://zml3589110.github.io/categories/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87/"/>
    
    <category term="EEPROM" scheme="https://zml3589110.github.io/categories/EEPROM/"/>
    
    <category term="AT24CXX" scheme="https://zml3589110.github.io/categories/AT24CXX/"/>
    
    
    <category term="存储芯片" scheme="https://zml3589110.github.io/tags/%E5%AD%98%E5%82%A8%E8%8A%AF%E7%89%87/"/>
    
    <category term="EEPROM" scheme="https://zml3589110.github.io/tags/EEPROM/"/>
    
    <category term="AT24CXX" scheme="https://zml3589110.github.io/tags/AT24CXX/"/>
    
  </entry>
  
  <entry>
    <title>C#数据结构之二（队列的使用）</title>
    <link href="https://zml3589110.github.io/posts/2102930043.html"/>
    <id>https://zml3589110.github.io/posts/2102930043.html</id>
    <published>2024-08-12T08:17:20.000Z</published>
    <updated>2024-08-12T09:13:31.779Z</updated>
    
    <content type="html"><![CDATA[<h1 id="队列简单使用"><a href="#队列简单使用" class="headerlink" title="队列简单使用"></a>队列简单使用</h1><h2 id="队列说明"><a href="#队列说明" class="headerlink" title="队列说明"></a>队列说明</h2><p>什么是队列？我想学习过数据结构应该很清楚，如果没有仔细了解，只要记住队列是一个先进先出的列表即可，列表中可以是线程，可以是预备执行的函数的入口，可以是地址，可以是数据，在C#中，Queue<T> 类可以实现队列，这一个类可以简单的让我们完成数据的插入和获取，可以在便利性这一块十分出众的。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>在这一步，我们将建立一个存储String数据的队列，为了实用队列能够<strong>用多线程的方式来插入</strong>，后台将有一个长时间运行的线程来不断将数据从队列取出并执行我们编写的内容。因此需要规划<strong>多线程之间资源冲突如何避免</strong>的措施。</p><p>发环境：VisualStudio 2017和 .NET 4.5.2</p><h2 id="函数功能与实施"><a href="#函数功能与实施" class="headerlink" title="函数功能与实施"></a>函数功能与实施</h2><p>首先，需要定义下存储的数据，这里设置的是结构体，主要存储的内容为字符串</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> bbchecklist</span><br><span class="line">        &#123;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> stand_title;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> fail_title;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> success_title;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> num;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>并且事先定义好显示数据的函数</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">DispalyData</span>(<span class="params">bbchecklist bb</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            System.Console.WriteLine(<span class="string">&quot;&#123;0&#125;:&#123;1&#125; &#123;2&#125; &#123;3&#125;&quot;</span>, bb.num, bb.stand_title, bb.success_title, bb.fail_title); </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>再来是设置一个Queue类，以进行调用，实例化后，这就是我们存储和取出数据的位置，有点像List类</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">Queue</span>&lt;<span class="title">bbchecklist</span>&gt; _tasks</span> = <span class="keyword">new</span> Queue&lt;bbchecklist&gt;(); </span><br></pre></td></tr></table></figure><p>如何加数据到刚刚设置好的队列？方法很简单，与List的操作是一致的，使用Queue类的Enqueue函数来添加，这里定义一个Enqueue函数来添加数据到队列，可以看到有一个object类的锁，它的作用就是防止冲突</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">readonly</span> <span class="keyword">static</span> <span class="built_in">object</span> _locker = <span class="keyword">new</span> <span class="built_in">object</span>();</span><br></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">EnqueuelTask</span>(<span class="params"><span class="built_in">int</span> num ,<span class="built_in">string</span> stdStr,<span class="built_in">string</span> failStr,<span class="built_in">string</span> succeedStr</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span>(_locker)</span><br><span class="line">            &#123;</span><br><span class="line">                bbchecklist newitem =<span class="keyword">new</span> bbchecklist();</span><br><span class="line">                newitem.stand_title = stdStr;</span><br><span class="line">                newitem.fail_title = failStr;</span><br><span class="line">                newitem.num = num;</span><br><span class="line">                newitem.success_title = succeedStr;</span><br><span class="line">                _tasks.Enqueue(newitem);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>然后，定义一下输出这个队列中的内容的线程。</p><p>线程的逻辑是，在运行时候不断的去取出队列中末尾的数据并读取，当读取的数据不为空的时候，就会等待1200ms然后再次循环执行，当队列为空亦或是已经没有可以继续执行的项目的时候的时候，等待信号。</p><p>因此我们要实例化线程，还需要实例化信号，EventWaitHandle可以让我们的线程处于等待的状态，当有新的通知的时候再运行，这样就不用每间隔一段时间去查询是否有新的任务，上面所说的1200ms是执行间隔时间</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Thread _worker;</span><br><span class="line"><span class="keyword">static</span> EventWaitHandle _wh = <span class="keyword">new</span> AutoResetEvent(<span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p> 用于取出数据并打印出来的线程实现如下，当读取数据时候，上锁，防止此时写入数据，当线程读取到-1时候，线程退出程序结束。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Work</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               bbchecklist title; </span><br><span class="line">               <span class="keyword">lock</span> ( _locker) <span class="comment">//锁，用来保护数据读写不会冲突</span></span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="keyword">if</span>(_tasks.Count &gt; <span class="number">0</span>) <span class="comment">//队列中剩余的数据</span></span><br><span class="line">                   &#123;</span><br><span class="line">                       title = _tasks.Dequeue(); <span class="comment">//去取得数据</span></span><br><span class="line">                       DispalyData(title);</span><br><span class="line">                       <span class="keyword">if</span> (title.num == <span class="number">-1</span>)</span><br><span class="line">                       &#123;</span><br><span class="line">                           System.Console.WriteLine(<span class="string">&quot;---Queue Over---&quot;</span>);</span><br><span class="line">                           <span class="keyword">return</span>;</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span> (title.fail_title != <span class="literal">null</span>) <span class="comment">//任务不为空</span></span><br><span class="line">               &#123;</span><br><span class="line">                   Thread.Sleep(<span class="number">1200</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> </span><br><span class="line">               &#123;</span><br><span class="line">                   _wh.WaitOne();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p>整个程序的所有代码</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">QueueApp</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">struct</span> bbchecklist</span><br><span class="line">        &#123;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> stand_title;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> fail_title;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> success_title;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> num;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">struct</span> FactorySet</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="built_in">int</span> FPLHP25;</span><br><span class="line">            <span class="keyword">static</span> <span class="built_in">int</span> FPLHP40;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">struct</span> TTCDM  <span class="comment">//时间法测试数据项目</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="built_in">int</span> PLHP40;</span><br><span class="line">            <span class="keyword">static</span> <span class="built_in">int</span> PLHP25;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">double</span> IHP;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> CCDT40;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> CCDT25;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> DIW;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> v40s;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> v25s;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> v40e;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> v25e;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">struct</span> PTCDM <span class="comment">//能量法测试数据项目</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> ACDT70;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> ACDT60;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> ACDT50;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> ACDT40;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> ACDT30;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> ACDT25;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> ACDT20;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="title">Queue</span>&lt;<span class="title">bbchecklist</span>&gt; _tasks</span> = <span class="keyword">new</span> Queue&lt;bbchecklist&gt;(); <span class="comment">//队列</span></span><br><span class="line">        <span class="keyword">readonly</span> <span class="keyword">static</span> <span class="built_in">object</span> _locker = <span class="keyword">new</span> <span class="built_in">object</span>(); <span class="comment">//使用一个锁来保护_task的访问</span></span><br><span class="line">        <span class="keyword">static</span> EventWaitHandle _wh = <span class="keyword">new</span> AutoResetEvent(<span class="literal">false</span>); <span class="comment">//通知Work线程的信号</span></span><br><span class="line">        <span class="keyword">static</span> Thread _worker;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            _worker = <span class="keyword">new</span> Thread(Work);</span><br><span class="line">            _worker.Start();</span><br><span class="line"> </span><br><span class="line">            SetQueueData();</span><br><span class="line">            Dispose();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 任务执行线程</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Work</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bbchecklist title=<span class="keyword">new</span> bbchecklist();</span><br><span class="line">                <span class="keyword">lock</span> ( _locker)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(_tasks.Count &gt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        title = _tasks.Dequeue();</span><br><span class="line">                        DispalyData(title);</span><br><span class="line">                        <span class="keyword">if</span> (title.num == <span class="number">-1</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            System.Console.WriteLine(<span class="string">&quot;---Queue Over---&quot;</span>);</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (title.fail_title != <span class="literal">null</span>) <span class="comment">//任务不为空</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Thread.Sleep(<span class="number">1200</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;</span><br><span class="line">                    _wh.WaitOne();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 插入队列</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;num&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;stdStr&quot;&gt;</span>一般提示语句<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;failStr&quot;&gt;</span>失败提示语句<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;succeedStr&quot;&gt;</span>成功提示语句<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">EnqueuelTask</span>(<span class="params"><span class="built_in">int</span> num ,<span class="built_in">string</span> stdStr,<span class="built_in">string</span> failStr,<span class="built_in">string</span> succeedStr</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">lock</span>(_locker)</span><br><span class="line">            &#123;</span><br><span class="line">                bbchecklist newitem =<span class="keyword">new</span> bbchecklist();</span><br><span class="line">                newitem.stand_title = stdStr;</span><br><span class="line">                newitem.fail_title = failStr;</span><br><span class="line">                newitem.num = num;</span><br><span class="line">                newitem.success_title = succeedStr;</span><br><span class="line">                _tasks.Enqueue(newitem);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 设置队列预置的数据</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;num&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>设置成功true，设置失败false<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">SetQueueData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            EnqueuelTask(<span class="number">0</span>, <span class="string">&quot;测功机预热中..&quot;</span>, <span class="string">&quot;预热失败，按F8继续&quot;</span>, <span class="string">&quot;测功机预热完成按F8继续&quot;</span>);</span><br><span class="line">            EnqueuelTask(<span class="number">1</span>, <span class="string">&quot;正在进行时间法滑行测试..&quot;</span>, <span class="string">&quot;测试失败！按F8继续进行能量法测试&quot;</span>, <span class="string">&quot;测试已通过！按F8继续&quot;</span>);</span><br><span class="line">            EnqueuelTask(<span class="number">2</span>, <span class="string">&quot;正在进行能量法滑行测试..&quot;</span>, <span class="string">&quot;能量法测试失败！&quot;</span>, <span class="string">&quot;能量法测试成功！&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 停止线程的运行并释放所有的资源</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            EnqueuelTask(<span class="number">-1</span>, <span class="string">&quot;正在结束测试..&quot;</span>, <span class="string">&quot;结束测试未完成&quot;</span>, <span class="string">&quot;测试已结束&quot;</span>);<span class="comment">//加入最后的</span></span><br><span class="line">            _worker.Join();<span class="comment">//阻止调用线程</span></span><br><span class="line">            _wh.Close();<span class="comment">//释放信号</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">DispalyData</span>(<span class="params">bbchecklist bb</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            System.Console.WriteLine(<span class="string">&quot;&#123;0&#125;:&#123;1&#125; &#123;2&#125; &#123;3&#125;&quot;</span>, bb.num, bb.stand_title, bb.success_title, bb.fail_title); </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>整个软件最终运行的结果</p><img src="/posts/2102930043/cd35e4c863d7623bac39e8b41e640e1a.png" class="" title="img"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/chenlight/p/16464106.html">C# 二维数组（2d Array）解析</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#使用队列功能 Queue类</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="队列" scheme="https://zml3589110.github.io/categories/%E9%98%9F%E5%88%97/"/>
    
    <category term="Queue类" scheme="https://zml3589110.github.io/categories/Queue%E7%B1%BB/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="数据结构" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="队列" scheme="https://zml3589110.github.io/tags/%E9%98%9F%E5%88%97/"/>
    
    <category term="Queue类" scheme="https://zml3589110.github.io/tags/Queue%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>C#窗体复制迁移相关</title>
    <link href="https://zml3589110.github.io/posts/2669946936.html"/>
    <id>https://zml3589110.github.io/posts/2669946936.html</id>
    <published>2024-08-12T08:11:20.000Z</published>
    <updated>2024-08-12T09:13:31.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="复制窗体"><a href="#复制窗体" class="headerlink" title="复制窗体"></a>复制窗体</h1><p>在原项目的磁盘文件夹中找到</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Form1.cs</span><br><span class="line">Form1.Designer.cs</span><br><span class="line">Form1.resx</span><br></pre></td></tr></table></figure><p>这三个文件，然后拷贝到新项目的文件夹下，</p><p>在VS中的新项目右键点击“添加”-“现有项”</p><p>自动跳到当前项目的文件夹下，将Form1.cs添加即可</p><p>注意：如果新项目是控制台应用程序这种，</p><p>还需要在引用中增加</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.Drawing</span><br><span class="line">System.Windows.Forms</span><br></pre></td></tr></table></figure><p>这两个引用文件和对应的头引用即可</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/u011555996/article/details/105301907">C#中如何复制窗体到另一个项目</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#窗体复制</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/tags/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="窗体" scheme="https://zml3589110.github.io/tags/%E7%AA%97%E4%BD%93/"/>
    
    <category term="复制" scheme="https://zml3589110.github.io/tags/%E5%A4%8D%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>C#控件DataGridView之五（取值）</title>
    <link href="https://zml3589110.github.io/posts/2206111195.html"/>
    <id>https://zml3589110.github.io/posts/2206111195.html</id>
    <published>2024-08-12T08:08:20.000Z</published>
    <updated>2024-08-12T09:13:31.769Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单取值"><a href="#简单取值" class="headerlink" title="简单取值"></a>简单取值</h1><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><p>在C#中，可以使用DataGridView的Rows和Columns属性来获取指定行和列的值。</p><p>首先，使用Rows属性获取指定行的DataGridViewRow对象，然后使用Cells属性获取该行中指定列的DataGridViewCell对象，最后使用Value属性获取该单元格的值。</p><p>以下是一个示例代码，演示如何获取第2行第3列的值：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取第2行第3列的值</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">value</span> = dataGridView1.Rows[<span class="number">1</span>].Cells[<span class="number">2</span>].Value;</span><br><span class="line"><span class="comment">// 将值转换成字符串</span></span><br><span class="line"><span class="built_in">string</span> strValue = <span class="keyword">value</span>.ToString();</span><br></pre></td></tr></table></figure><p>需要注意的是，行和列的索引都是从0开始的。在示例代码中，我们使用[1]获取第2行，使用[2]获取第3列的值。</p><p>另外，还可以根据DataGridView的列名来获取某行某列的值。可以使用Columns属性来获取指定列的DataGridViewColumn对象，然后使用Index属性获取该列的索引，最后使用Cells属性获取指定行该列的DataGridViewCell对象。</p><p>以下是一个示例代码，演示如何根据列名获取第1行“列名”列的值：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取第1行“列名”列的值</span></span><br><span class="line"><span class="keyword">var</span> columnName = <span class="string">&quot;列名&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> columnIndex = dataGridView1.Columns[columnName].Index;</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">value</span> = dataGridView1.Rows[<span class="number">0</span>].Cells[columnIndex].Value;</span><br><span class="line"><span class="comment">// 将值转换成字符串</span></span><br><span class="line"><span class="built_in">string</span> strValue = <span class="keyword">value</span>.ToString();</span><br></pre></td></tr></table></figure><p>在示例代码中，我们首先使用Columns属性获取“列名”列的DataGridViewColumn对象，然后使用Index属性获取该列的索引，最后使用Cells属性获取第1行该列的DataGridViewCell对象。</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.yisu.com/ask/19391188.html">C#中怎么使用datagridview获取某行某列的值</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#控件DataGridView 单元格取值相关</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/categories/DataGridView/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/tags/DataGridView/"/>
    
    <category term="取值" scheme="https://zml3589110.github.io/tags/%E5%8F%96%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>C#控件DataGridView之四（单元格颜色）</title>
    <link href="https://zml3589110.github.io/posts/3221568494.html"/>
    <id>https://zml3589110.github.io/posts/3221568494.html</id>
    <published>2024-08-12T08:00:20.000Z</published>
    <updated>2024-08-12T09:13:31.751Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简单设置颜色"><a href="#简单设置颜色" class="headerlink" title="简单设置颜色"></a>简单设置颜色</h1><p><strong>1.设置DataGridView Columns j 背景颜色</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataGridView1.Columns[j].DefaultCellStyle.BackColor = Color.LemonChiffon;</span><br></pre></td></tr></table></figure><p><strong>2，修改单元格(i, j)单元格的背景色为红色</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataGridView1.Rows[i].Cells[j].Style.BackColor = Color.Red;</span><br></pre></td></tr></table></figure><p><strong>或者用rgb的格式修改</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataGridView1.Rows[i].Cells[j].Style.BackColor = Color.FromArgb(<span class="number">0</span>, <span class="number">176</span>, <span class="number">240</span>);</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/ao_100/article/details/138065851">DC#修改datagridview单元格颜色</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C#控件DataGridView 单元格设置颜色等</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="控件" scheme="https://zml3589110.github.io/categories/%E6%8E%A7%E4%BB%B6/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/categories/DataGridView/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="错误" scheme="https://zml3589110.github.io/tags/%E9%94%99%E8%AF%AF/"/>
    
    <category term="DataGridView" scheme="https://zml3589110.github.io/tags/DataGridView/"/>
    
    <category term="单元格颜色" scheme="https://zml3589110.github.io/tags/%E5%8D%95%E5%85%83%E6%A0%BC%E9%A2%9C%E8%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>VUE常用组件之el-table</title>
    <link href="https://zml3589110.github.io/posts/1855904474.html"/>
    <id>https://zml3589110.github.io/posts/1855904474.html</id>
    <published>2024-08-04T06:39:20.000Z</published>
    <updated>2024-08-12T09:13:31.728Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取SELECTION选中的数据"><a href="#获取SELECTION选中的数据" class="headerlink" title="获取SELECTION选中的数据"></a>获取SELECTION选中的数据</h1><p>table绑定一列type为selection，绑定table中的@selection-change&#x3D;“selectionLineChangeHandle”，每次点击触发事件，赋值给数组，最后提交时候遍历获取需要的值</p><h3 id="table绑定-selection-change事件"><a href="#table绑定-selection-change事件" class="headerlink" title="table绑定@selection-change事件"></a>table绑定@selection-change事件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:data</span>=<span class="string">&quot;dataonLineList&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">border</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">selection-change</span>=<span class="string">&quot;selectionLineChangeHandle&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">&quot;width: 100%;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h3 id="table中定义一列type为selection"><a href="#table中定义一列type为selection" class="headerlink" title="table中定义一列type为selection"></a>table中定义一列type为selection</h3></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table-column</span><br><span class="line">       type=&quot;selection&quot;</span><br><span class="line">     width=&quot;55&quot;&gt;</span><br><span class="line">     <span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><h3 id="return中定义数组"><a href="#return中定义数组" class="headerlink" title="return中定义数组"></a>return中定义数组</h3></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataonLineListSelections: [],</span><br></pre></td></tr></table></figure><h3 id="methods中添加事件"><a href="#methods中添加事件" class="headerlink" title="methods中添加事件"></a>methods中添加事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">selectionLineChangeHandle (val) &#123;</span><br><span class="line">       <span class="built_in">this</span>.dataonLineListSelections = val</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="提交时遍历列表，获取对应的数据id是你表格里面绑定的列"><a href="#提交时遍历列表，获取对应的数据id是你表格里面绑定的列" class="headerlink" title="提交时遍历列表，获取对应的数据id是你表格里面绑定的列"></a>提交时遍历列表，获取对应的数据id是你表格里面绑定的列</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//提交</span></span><br><span class="line">fromCommit  () &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="built_in">this</span>.dataonLineListSelections);</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i&lt; <span class="built_in">this</span>.dataonLineListSelections.length; i++)&#123;</span><br><span class="line">         <span class="built_in">console</span>.log(<span class="string">&#x27;id:&#x27;</span>+<span class="built_in">this</span>.dataonLineListSelections[i].id)</span><br><span class="line">       &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/guapilixianghe/article/details/124880420">VUE中获取TABLE的SELECTION选中的数据</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">常用 Element UI组件之el-table常用收集</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="el-table" scheme="https://zml3589110.github.io/categories/el-table/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="Element UI" scheme="https://zml3589110.github.io/tags/Element-UI/"/>
    
    <category term="el-x" scheme="https://zml3589110.github.io/tags/el-x/"/>
    
    <category term="el-table" scheme="https://zml3589110.github.io/tags/el-table/"/>
    
  </entry>
  
  <entry>
    <title>Hass实体的属性独立成一个新实体</title>
    <link href="https://zml3589110.github.io/posts/3622133057.html"/>
    <id>https://zml3589110.github.io/posts/3622133057.html</id>
    <published>2024-08-02T07:02:20.000Z</published>
    <updated>2024-08-13T07:43:17.714Z</updated>
    
    <content type="html"><![CDATA[<h1 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h1><p>看到这篇UI分享  <a href="https://bbs.hassbian.com/thread-26328-1-1.html">UI界面 【自制分享】清爽简洁+自适应主题的空调卡片</a></p><p><strong>利用button-card手搓的空调卡片，字体颜色随主题设置自动变化</strong><br><strong>效果展示：</strong></p><img src="/posts/3622133057/133322u4ge0en8ceau0aea.jpg" class="" title="img"><p>使用教程：<br>用 Decluttering Card将卡片封装了起来便于大家使用，以下是详细步骤：<br>1、下载所需卡片：</p><p>  1）Decluttering Card</p><p>  2）Mushroom Card</p><p>  3）Button Card</p><p>  4）Mini-graph-card</p><p>  5）Card-mod</p><p>2、代码导入：</p><p>  1）打开仪表盘的原始配置编辑器，进入编辑页面</p><p>  2）光标放到’views:’的上一行，顶格</p><p>  3）打开<strong>代码1</strong>，复制所有代码，粘贴到上图光标处</p><p>3、代码使用：</p><p>  打开<strong>代码2</strong>，复制即可使用，参照下图填入自己的实体</p><img src="/posts/3622133057/133322yt9j0t6gggtjk29l.png" class="" title="img"><p>控制界面挺好看就打算一样使用，后边发现温度跟湿度显示不对，因为使用的是美的空调，这两个数值都是在属性里，多次尝试无法正常读取，在寻找多个方案后还是选择现在这种折中了</p><h1 id="属性实体设置"><a href="#属性实体设置" class="headerlink" title="属性实体设置"></a>属性实体设置</h1><p>这两天一直在论坛找相关的，也发出了提问，非常感谢<a href="https://bbs.hassbian.com/home.php?mod=space&uid=42993">adamjensen</a>和<a href="https://bbs.hassbian.com/home.php?mod=space&uid=255">QQ617250210</a>两位的回答，我又结合了以下自己在论坛翻得帖子总结下，很简单，就当个记录了，以后也好找。</p><p>比如我的门锁，通过多模网关和<a href="https://github.com/AlexxIT/XiaomiGateway3">XiaomiGateway3</a>接入，里面有个action实体，在这个实体下面就有一堆属性，会随着门锁的动作而改变。</p><img src="/posts/3622133057/100536aotheji7qpczjhlc.png" class="" title="img"><p>如果要把这六面的属性转换成实体，需要在configuration.yaml中添加一段代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 门锁的action的属性提取</span></span><br><span class="line"><span class="attr">template:</span> </span><br><span class="line">    <span class="attr">sensors:</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_action:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_action&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;action&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeaba9&quot;</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_action_id:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_action_id&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;action_id&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeaba8&quot;</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_message:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_message&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;message&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeaba7&quot;</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_method_id:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_method_id&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;method_id&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeaba6&quot;</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_method:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_method&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;method&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeaba5&quot;</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_key_id:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_key_id&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;key_id&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeaba4&quot;</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_key_error:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_error&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;error&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeabaa&quot;</span></span><br><span class="line">      <span class="attr">xiaomi_facelock_key_device_class:</span></span><br><span class="line">        <span class="attr">friendly_name:</span> <span class="string">&#x27;小米人脸识别锁X_device_class&#x27;</span></span><br><span class="line">        <span class="attr">value_template:</span> <span class="string">&quot;<span class="template-variable">&#123;&#123;   state_attr(&#x27;sensor.d17988bbea1b_action&#x27;, &#x27;device_class&#x27;) &#125;&#125;</span>&quot;</span></span><br><span class="line">        <span class="attr">unique_id:</span> <span class="string">&quot;32b33778a2614be0a3290f81afdeabab&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">friendly_name: &#39;自己起个名字&#39;</span><br><span class="line">value_template: &quot;&#123;&#123; state_attr(&#39;你要提取属性的实体&#39;, &#39;属性值&#39;) &#125;&#125;&quot;</span><br><span class="line">unique_id: &quot;是我自己定义的，应该是只要保证唯一就可以&quot;</span><br><span class="line">需要注意的是，属性值 并不是你在属性里面看到的名称，例如“Action”最好去开发者选项里面的状态中查看，可以看到并不是“Action”而是“action”</span><br></pre></td></tr></table></figure><img src="/posts/3622133057/101347cqi8lkq788moe9rm.png" class="" title="img"><p>其他就没有什么需要注意的了。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>在configuration.yaml里写上template: !include templates.yaml，然后就是在同级目录下生成一个叫templates.yaml的文件，在文件里编辑，我感觉这样写清楚一些。当然也可以写在configuration.yaml里</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://bbs.hassbian.com/thread-21005-1-1.html">如何读取某个实体属性中的数值</a></li><li><a href="https://bbs.hassbian.com/thread-19884-1-1.html">分享下将实体的属性独立成一个新实体的方法</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">HomeAssistant将实体中的属性独立成新实体来使用</summary>
    
    
    
    <category term="ubuntu" scheme="https://zml3589110.github.io/categories/ubuntu/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/categories/HomeAssistant/"/>
    
    <category term="HACS" scheme="https://zml3589110.github.io/categories/HACS/"/>
    
    <category term="Docker" scheme="https://zml3589110.github.io/categories/Docker/"/>
    
    
    <category term="智能家居" scheme="https://zml3589110.github.io/tags/%E6%99%BA%E8%83%BD%E5%AE%B6%E5%B1%85/"/>
    
    <category term="HomeAssistant" scheme="https://zml3589110.github.io/tags/HomeAssistant/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="属性" scheme="https://zml3589110.github.io/tags/%E5%B1%9E%E6%80%A7/"/>
    
    <category term="方法技巧" scheme="https://zml3589110.github.io/tags/%E6%96%B9%E6%B3%95%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF网络编程之mDNS</title>
    <link href="https://zml3589110.github.io/posts/251041743.html"/>
    <id>https://zml3589110.github.io/posts/251041743.html</id>
    <published>2024-08-01T03:28:20.000Z</published>
    <updated>2024-08-01T09:51:17.839Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重要说明"><a href="#重要说明" class="headerlink" title="重要说明"></a>重要说明</h1><p>官网地址 <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32/api-reference/protocols/mdns.html">mDNS 服务</a></p><p>注意：<br>之前使用esp8266完成了mDNS对主机域名解析，这次是想用这个办法使用在esp32中，本以为把之前文件直接复制就行了，谁知是不行的！查询发现是因为没有添加这个组件，官放已经迁出至独立的仓库！根据官方说明添加到组件库即可！</p><p>mDNS 是一种组播 UDP 服务，用来提供本地网络服务和主机发现。</p><p>自 v5.0 版本起，ESP-IDF 组件 <code>mDNS</code> 已从 ESP-IDF 中迁出至独立的仓库：</p><ul><li><p>GitHub 上 <a href="https://github.com/espressif/esp-protocols/tree/master/components/mdns">mDNS 组件</a></p></li><li><p>GitHub 上 <a href="https://github.com/espressif/esp-protocols/tree/master/components/mdns/examples/query_advertise">mDNS 示例</a></p></li></ul><p>运行 <code>idf.py add-dependency espressif/mdns</code>，在项目中添加 mDNS 组件。</p><p>托管的文档</p><p>请点击如下链接，查看 mDNS 的相关文档：</p><ul><li><a href="https://docs.espressif.com/projects/esp-protocols/mdns/docs/latest/zh_CN/index.html">mDNS 文档</a></li></ul><h1 id="mDNS学习使用"><a href="#mDNS学习使用" class="headerlink" title="mDNS学习使用"></a>mDNS学习使用</h1><h2 id="mDNS的作用"><a href="#mDNS的作用" class="headerlink" title="mDNS的作用"></a>mDNS的作用</h2><p>mDNS 是一种组播 UDP 服务，用来提供本地网络服务和主机发现。</p><ul><li>你要和设备通信，需要记住IP地址不好记。用了mDNS只要几个名字就行。</li><li>你需要快速知道局域网内是否有你想要的服务，用mDNS查一下就行。</li><li>这个协议只在局域网内有效。</li><li>先简单了解下什么是组播–一种被预先定义好的IP地址数字。用于实现一对多的通信。</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">组播是一对多。</span></span><br><span class="line"><span class="string">广播是一对所有。</span></span><br></pre></td></tr></table></figure><h2 id="mDNS涉及到的标准文件"><a href="#mDNS涉及到的标准文件" class="headerlink" title="mDNS涉及到的标准文件"></a>mDNS涉及到的标准文件</h2><ul><li><a href="https://datatracker.ietf.org/doc/html/rfc6762">rfc6762</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc6763">rfc6763</a></li></ul><h2 id="组播地址"><a href="#组播地址" class="headerlink" title="组播地址"></a>组播地址</h2><ul><li>因为有IPV4和IPV6两类地址，因此组播也分两类。</li><li>多播地址在网络通信中用于发送数据到多个接收器，而不是单一接收器或广播到所有接收器。多播地址有其特定的规则和范围</li></ul><h3 id="IPv4-多播地址"><a href="#IPv4-多播地址" class="headerlink" title="IPv4 多播地址"></a>IPv4 多播地址</h3><p>IPv4 多播地址范围是 224.0.0.0 到 239.255.255.255。这些地址进一步细分为特定用途的子范围：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">局部网络控制块： 224.0.0.0 到 224.0.0.255</span><br><span class="line"><span class="code">    这些地址保留用于本地网络内的协议控制消息，不会被路由器转发到其他网络。</span></span><br><span class="line"><span class="code">    例如，224.0.0.1 是所有主机的多播地址，224.0.0.2 是所有路由器的多播地址。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">预留多播地址： 224.0.1.0 到 238.255.255.255</span></span><br><span class="line"><span class="code">    这些地址用于全球范围的多播应用，且路由器会转发这些地址的数据包。</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">本地管理地址： 239.0.0.0 到 239.255.255.255</span></span><br><span class="line"><span class="code">    这些地址保留用于组织内部的多播，不会被全球路由。</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><h3 id="IPv6-多播地址"><a href="#IPv6-多播地址" class="headerlink" title="IPv6 多播地址"></a>IPv6 多播地址</h3><p>IPv6 多播地址以 ff00::&#x2F;8 前缀开头，并具有不同的范围标识符和子范围：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">范围标识符（Scope Identifier）：</span><br><span class="line"><span class="code">    ff01:: 链路本地（Link-Local）</span></span><br><span class="line"><span class="code">    ff02:: 本地网络（Local Network）</span></span><br><span class="line"><span class="code">    ff05:: 站点本地（Site-Local）</span></span><br><span class="line"><span class="code">    ff08:: 组织本地（Organization-Local）</span></span><br><span class="line"><span class="code">    ff0e:: 全球范围（Global）</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">预定义多播地址：</span></span><br><span class="line"><span class="code">    ff02::1 所有节点地址（所有主机）</span></span><br><span class="line"><span class="code">    ff02::2 所有路由器地址</span></span><br><span class="line"><span class="code"></span></span><br></pre></td></tr></table></figure><h3 id="预先定义好的组播地址"><a href="#预先定义好的组播地址" class="headerlink" title="预先定义好的组播地址"></a>预先定义好的组播地址</h3><p>不同的标准，如果用到组播地址，会定义出组播地址的值。下面列出常见的。</p><p><strong>常见IPv4 预定义组播地址</strong><br>这些地址用于局域网内的控制消息，通常不被路由器转发。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">224.0.0.1: 所有主机</span><br><span class="line">224.0.0.2: 所有路由器</span><br><span class="line">224.0.0.4: DVMRP 路由器</span><br><span class="line">224.0.0.5: OSPF 路由器</span><br><span class="line">224.0.0.6: OSPF 指定路由器</span><br><span class="line">224.0.0.9: RIPv2 路由器</span><br><span class="line">224.0.0.10: EIGRP 路由器</span><br><span class="line">224.0.0.13: PIM 路由器</span><br><span class="line">224.0.0.18: VRRP 路由器</span><br><span class="line">224.0.0.22: IGMPv3</span><br><span class="line">224.0.0.251: mDNS (Multicast DNS)</span><br><span class="line">224.0.0.252: Link-Local Multicast Name Resolution (LLMNR)</span><br><span class="line">224.0.1.1: NTP (Network Time Protocol)</span><br><span class="line">224.0.1.22: H.323 网关发现</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>常见IPv4 预定义预留多播地址（224.0.1.0 - 238.255.255.255）</strong></p><p>这些地址用于全球范围的多播应用，路由器会转发这些地址的数据包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">224.0.1.2: SGI-Dogfight（多用户虚拟现实游戏）</span><br><span class="line">224.0.1.35: SVRLOC (Service Location Protocol)</span><br><span class="line">224.0.1.60: AAP (AOL Access Protocol)</span><br><span class="line">239.255.255.250: SSDP (Simple Service Discovery Protocol)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>常见IPv4 预定义本地管理地址（239.0.0.0 - 239.255.255.255）</strong></p><p>这些地址用于组织内部的多播，不会被全球路由。</p><p><strong>常见IPv6 预定义组播地址</strong><br>范围标识符（Scope Identifier）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ff01::: 节点本地（Node-Local）</span><br><span class="line">ff02::: 链路本地（Link-Local）</span><br><span class="line">ff05::: 站点本地（Site-Local）</span><br><span class="line">ff08::: 组织本地（Organization-Local）</span><br><span class="line">ff0e::: 全球范围（Global）</span><br></pre></td></tr></table></figure><p>预定义多播地址</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ff02::1: 所有节点（All Nodes）</span><br><span class="line">ff02::2: 所有路由器（All Routers）</span><br><span class="line">ff02::5: OSPF 路由器</span><br><span class="line">ff02::6: OSPF 指定路由器</span><br><span class="line">ff02::9: RIPv2 路由器</span><br><span class="line">ff02::a: EIGRP 路由器</span><br><span class="line">ff02::d: PIM 路由器</span><br><span class="line">ff02::16: MLDv2（Multicast Listener Discovery version 2）</span><br><span class="line">ff02::fb: mDNS (Multicast DNS)</span><br><span class="line">ff02::1:3: Link-Local Multicast Name Resolution (LLMNR)</span><br><span class="line">ff05::1:3: DHCPv6 服务器/中继代理</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>备注：</strong><br>“组播”和“多播”在网络通信中基本上是同一个概念。两者指的是同一种技术。</p><h2 id="mDNS调试工具"><a href="#mDNS调试工具" class="headerlink" title="mDNS调试工具"></a>mDNS调试工具</h2><p>在电脑端，有两款，</p><ul><li>一款是Apple开发的Bonjour 的服务（有windows版本），这款我下载安装了，不会用尴尬，好像只能识别打印机服务。</li><li>一款是在linux平台下的avahi（默认已安装），也有图形界面。后面会有这款工具的截图。</li></ul><h2 id="例程"><a href="#例程" class="headerlink" title="例程"></a>例程</h2><p>ESP的mDNS文档和例程都放在下面的git 库里面</p><p><a href="https://github.com/espressif/esp-protocols/tree/master/components/mdns/examples/query_advertise">例程</a></p><ol><li>git下来后vscode打开例程。</li><li>设置wifi账号密码</li></ol><img src="/posts/251041743/538244caafa8445c8084938d4666fdad.png" class="" title="在这里插入图片描述"><p><strong>编译和运行测试</strong><br>运行命令avahi-discover，打开图形界面，如下所示。</p><img src="/posts/251041743/07e2bccc2fd64b7ca1e271f87eefa7ee.png" class="" title="在这里插入图片描述"><p>点击任意一项，就可以看到解析出来的数据。如下所示。</p><img src="/posts/251041743/ca6e9312a0be46119b9b8d8bc9eef283.png" class="" title="在这里插入图片描述"><p>直接ping域名也是可以ping通的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping esp32-mdns.local</span><br></pre></td></tr></table></figure><img src="/posts/251041743/9c17ec314b18418286b9c1d9453e921c.png" class="" title="在这里插入图片描述"><p>按下按钮0，打印如下信息。查询到局域网里有这些服务。</p><img src="/posts/251041743/40056e1148b44637a2c0fec6d850c129.png" class="" title="在这里插入图片描述"><h2 id="mDNS如何开发和使用"><a href="#mDNS如何开发和使用" class="headerlink" title="mDNS如何开发和使用"></a>mDNS如何开发和使用</h2><p>开发主要看需求，分两个需求：注册服务和查询服务。<br>根据自己的需求决定是否要做这两个动作。<br>下面只是把关键的代码片段拿出来，完整代码，请看例程。</p><p><strong>初始化mdns</strong><br>mdns_init() 这一步是通用的，不管是注册还是查询，都要先初始化。</p><h3 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h3><ol><li><p>设置主机名<br>mdns_hostname_set(hostname)</p></li><li><p>设置实例名<br>mdns_instance_name_set(EXAMPLE_MDNS_INSTANCE)</p></li><li><p>注册服务</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mdns_service_add(<span class="string">&quot;ESP32-WebServer&quot;</span>, <span class="string">&quot;_http&quot;</span>, <span class="string">&quot;_tcp&quot;</span>, <span class="number">80</span>, serviceTxtData, <span class="number">3</span>) </span><br><span class="line">mdns_service_subtype_add_for_host(<span class="string">&quot;ESP32-WebServer&quot;</span>, <span class="string">&quot;_http&quot;</span>, <span class="string">&quot;_tcp&quot;</span>, <span class="literal">NULL</span>, <span class="string">&quot;_server&quot;</span>) </span><br></pre></td></tr></table></figure></li></ol><h3 id="查询服务"><a href="#查询服务" class="headerlink" title="查询服务"></a>查询服务</h3><p>例程将查询服务做了一次封装，只需要输入服务名和使用协议，就可以查网络中是否存在有这个服务。</p><p>在例程里，只要按一下按钮0，就回调用这个函数，并将查询结果在串口打印。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">query_mdns_service</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *service_name, <span class="keyword">const</span> <span class="keyword">char</span> *proto)</span></span></span><br></pre></td></tr></table></figure><p>上面的函数实际是调用库函数，实现查询</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdns_query_ptr()</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/zhu378287521/article/details/140667971">ESP32和mDNS学习</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF使用 组播 UDP 服务的 mDNS 功能实现局域网内域名解析，通过名字直接解析出IP地址</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/categories/Components/"/>
    
    <category term="mDNS" scheme="https://zml3589110.github.io/categories/mDNS/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="网络编程" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/tags/Components/"/>
    
    <category term="mDNS" scheme="https://zml3589110.github.io/tags/mDNS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 添加随机文章功能</title>
    <link href="https://zml3589110.github.io/posts/883659004.html"/>
    <id>https://zml3589110.github.io/posts/883659004.html</id>
    <published>2024-08-01T02:21:20.000Z</published>
    <updated>2024-08-01T03:14:53.224Z</updated>
    
    <content type="html"><![CDATA[<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>hexo 自带有这个插件 <code>hexo-generator-random</code></p><p>GitHub 项目地址：<a href="https://github.com/Drew233/hexo-generator-random">https://github.com/Drew233/hexo-generator-random</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>npm 先需要安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">npm install object-assign</span><br></pre></td></tr></table></figure><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">npm install hexo-generator-random --save</span><br></pre></td></tr></table></figure><p>然后再照常 <code>hexo d -g</code>，public 下就会有个 <code>random.html</code> 的文件了</p><p>菜单栏可以添加上该地址</p><p>menu:<br>Random | 随机文章： &#x2F;random.html || fas fa-random</p><p>注：是在主题里边的menu修改，自己使用的是 hexo-theme-butterfly</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://ednovas.xyz/2021/07/16/hexorandom/">Hexo 添加随机文章功能</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">hexo实现随机文章推送</summary>
    
    
    
    <category term="HEXO" scheme="https://zml3589110.github.io/categories/HEXO/"/>
    
    <category term="插件" scheme="https://zml3589110.github.io/categories/HEXO/%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="插件" scheme="https://zml3589110.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
    <category term="HEXO" scheme="https://zml3589110.github.io/tags/HEXO/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>唯一ID进行程序加密实现</title>
    <link href="https://zml3589110.github.io/posts/733777082.html"/>
    <id>https://zml3589110.github.io/posts/733777082.html</id>
    <published>2024-07-20T09:40:20.000Z</published>
    <updated>2024-07-20T09:45:01.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-背景说明"><a href="#一-背景说明" class="headerlink" title="一 背景说明"></a>一 背景说明</h2><p>​    项目程序需要进行加密处理。</p><p>​    考虑利用嵌入式芯片的唯一UID，结合Flash读写来实现。</p><p>​    加密后的程序，可以使得从芯片Flash中读取出来的文件（一般为HEX格式）不能用于其他的芯片。</p><h2 id="二-原理介绍"><a href="#二-原理介绍" class="headerlink" title="二 原理介绍"></a>二 原理介绍</h2><p>​    【1】芯片唯一ID</p><p>​    芯片提供了器件<a href="https://so.csdn.net/so/search?q=%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D&spm=1001.2101.3001.7020">电子签名</a>，即唯一身份标识。该信息存储在产品唯一身份标识寄存器中：</p><img src="/posts/733777082/f39fac80c16546a7b84d44902f65b03e.png" class="" title="img"><p>​    UID寄存器描述如下：</p><img src="/posts/733777082/35c1a34630de455d94b2a4c6f03a0462.png" class="" title="img"><p>​    其中，UID1、UID2均为16位，UID3为32位，UID4为32位。    </p><p>​    这样就可以从0x0x1FFFF7E8地址读取3个32bit的数据，获取它的唯一ID。</p><p>​    【2】程序加密逻辑说明</p><p>​    在讲解简单的程序加密方法之前，先了解一下通常的MCU程序复制方法。</p><p>​    通过烧写器（或者其他手段），将MCU内部程序存储区中的内容全部读出，就获取了烧写文件。如果烧写文件没有被加密，则可以直接将它烧写到别的MCU中运行，就完成了复制。</p><p>​    有没有办法可以使得对方即使获取了烧写文件，也不能直接烧写到别的MCU中运行呢？</p><p>​    我们可以利用芯片的唯一ID来实现一种简单的程序加密方法。由于每个芯片的唯一ID是不同的，我们只要在程序中检查ID的合法性即可，主要的步骤如下：</p><p>​    （i）程序首次运行时，读出芯片的唯一ID；</p><p>​    （ii）将ID使用加密算法，计算出一个特殊值，写入到非易失存储区中（需要掉电能保存）；</p><p>​    （iii）以后每次运行时，读出芯片唯一ID，通过算法计算后，与非易失存储区中保存的值比对，如果一致，则正常运行；如果不对，停止运行。</p><p>​    由于每个芯片中的ID是不同的，由加密算法算出的值也是不同的，所以，即使有人获取了我们的烧写文件，烧写到另一片MCU中，由于ID不同，最后也会比对出错，无法执行。</p><p>​    </p><h2 id="三-设计实现"><a href="#三-设计实现" class="headerlink" title="三 设计实现"></a>三 设计实现</h2><p>​    【1】编写获取并加密ID的接口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UID_BASE (0x1FFFF7E8)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： getEncryptID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 获取并加密ID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">u32 <span class="title">getEncryptID</span><span class="params">(u32 *p_id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">0</span>] = *(vu32*)(UID_BASE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">1</span>] = *(vu32*)(UID_BASE + <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">2</span>] = *(vu32*)(UID_BASE + <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ((p_id[<span class="number">0</span>] &gt;&gt; <span class="number">3</span>) + (p_id[<span class="number">1</span>] &gt;&gt; <span class="number">1</span>) + (p_id[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>));  <span class="comment">//加密算法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    【2】编写判断加密ID的接口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> u32 uid_save = <span class="number">0xFFFFFFFF</span>;    <span class="comment">//CPUID保存</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： judgeEncryptID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 判断加密ID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">u8 <span class="title">judgeEncryptID</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_encid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_cpuid[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_addr = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u32 t_flashid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    t_encid = <span class="built_in">getEncryptID</span>(t_cpuid);    <span class="comment">//读本机UID</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    t_addr = (u32)&amp;uid_save;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(*(vu32 *)t_addr == <span class="number">0xFFFFFFFF</span>)   <span class="comment">//第一次烧写将加密后的UID写入FLASH</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_Unlock</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_ClearFlag</span>(FLASH_FLAG_BSY|FLASH_FLAG_EOP|FLASH_FLAG_PGERR|FLASH_FLAG_WRPRTERR);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_ProgramWord</span>(t_addr, t_encid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">FLASH_Lock</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    t_flashid = *(vu32 *)t_addr;        <span class="comment">//第一次上电存完了之后需要再读一遍</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (t_flashid == t_encid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    【3】主函数初始化中执行上面的判断：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断加密UID（若不匹配，则报错并陷入死循环）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(! <span class="built_in">judgeEncryptID</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//主循环</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    【注意点】：</p><p>​        （i）注意 const u32 uid_save 的类型定义，我使用的 keil 环境中不能加 volatile 修饰，如果加了会被定义到RAM区，而非Flash区，这样起不到加密的效果。</p><p>​            如果用的是IAR环境，可能必须加 volatile 修饰，同时工程选项Options-&gt;Debugger-&gt;Download中选择: use flash loader。不这样做的后果是按速度优化编译，再判断加密值，不会重新读取加密值，导致判断出错；</p><p>​        （ii）注意 const u32 uid_save 的初始化值定义为全F，和擦除后的状态一致，所以程序中省略了擦除的操作，可以直接写入；</p><p>​        （iii）唯一ID存储地址 0x1FFFF7E8 应该尽量隐蔽，尽量避免在程序中直接出现该值：</p><img src="/posts/733777082/22584012e28942ba97f8e80f5045b120.png" class="" title="img"><p>​        更好的做法可以参考下面的方案：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： getEncryptID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 获取并加密ID</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">u32 <span class="title">getEncryptID</span><span class="params">(u32 *p_id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">volatile</span> u32 UID_BASE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    UID_BASE = <span class="number">0x20000006</span>;    <span class="comment">//让逆向的人误以为是ram变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    UID_BASE -= <span class="number">0x800</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    UID_BASE -= <span class="number">0x1e</span>;         <span class="comment">//等于id的基地址0x1FFFF7E8</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">0</span>] = *(vu32*)(UID_BASE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">1</span>] = *(vu32*)(UID_BASE + <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    p_id[<span class="number">2</span>] = *(vu32*)(UID_BASE + <span class="number">8</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ((p_id[<span class="number">0</span>] &gt;&gt; <span class="number">3</span>) + (p_id[<span class="number">1</span>] &gt;&gt; <span class="number">1</span>) + (p_id[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>));  <span class="comment">//加密算法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四-参考资料"><a href="#四-参考资料" class="headerlink" title="四 参考资料"></a>四 <a href="https://so.csdn.net/so/search?q=%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99&spm=1001.2101.3001.7020">参考资料</a></h2><p>​    【1】<a href="https://blog.csdn.net/zhj903/article/details/15029375?ops_request_misc=%7B%22request_id%22:%22169528226516800182780231%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=169528226516800182780231&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-15029375-null-null.142%5Ev94%5Einsert_down28v1&utm_term=stm32%E5%8A%A0%E5%AF%86">STM32 的加密实现_stn32加密-CSDN博客</a></p><p>​    【2】<a href="https://blog.csdn.net/little_grapes/article/details/122711456?ops_request_misc=&request_id=&biz_id=102&utm_term=%E8%8A%AF%E7%89%87ID%E5%8A%A0%E5%AF%86&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-122711456.142%5Ev94%5Einsert_down28v1&spm=1018.2226.3001.4187">【STM32+cubemx】0025 HAL库开发：唯一ID获取和简单的程序加密_mcu唯一uid加密-CSDN博客</a></p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/sinat_33408502/article/details/133355405">【嵌入式】使用嵌入式芯片唯一ID进行程序加密实现</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">嵌入式芯片通过唯一ID进行程序加密实现</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="加密" scheme="https://zml3589110.github.io/categories/%E5%8A%A0%E5%AF%86/"/>
    
    
    <category term="加密" scheme="https://zml3589110.github.io/tags/%E5%8A%A0%E5%AF%86/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="嵌入式" scheme="https://zml3589110.github.io/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    <category term="唯一ID" scheme="https://zml3589110.github.io/tags/%E5%94%AF%E4%B8%80ID/"/>
    
  </entry>
  
  <entry>
    <title>STM32芯片使用12864串口屏(驱动为ST7567)</title>
    <link href="https://zml3589110.github.io/posts/2271611938.html"/>
    <id>https://zml3589110.github.io/posts/2271611938.html</id>
    <published>2024-07-20T09:26:20.000Z</published>
    <updated>2024-07-20T09:45:01.367Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-背景说明"><a href="#一-背景说明" class="headerlink" title="一 背景说明"></a>一 背景说明</h2><p>拿到一款由ST7567驱动的128×64<a href="https://so.csdn.net/so/search?q=%E7%82%B9%E9%98%B5&spm=1001.2101.3001.7020">点阵</a>液晶屏，准备连接STM32主控连接它并点亮屏幕。</p><h2 id="二-驱动原理"><a href="#二-驱动原理" class="headerlink" title="二 驱动原理"></a>二 驱动原理</h2><p>​    我用的这款LCD屏幕，驱动IC是ST7567。其原理是通过驱动芯片与128×64的液晶模组进行交互，结合背光板，就能指定哪些点阵被点亮，从而得到想要的图形。驱动芯片与屏幕、背光的原理图如下：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/b3c7ba7ce154415f87dc28bd13d9c8a5.png" alt="img"></p><p>​    </p><p>【1】驱动IC——ST7567</p><p>​    （i）驱动引脚：</p><p>​    驱动引脚如下，其中主要用到了SDA&#x2F;SCL&#x2F;RS&#x2F;RES&#x2F;CS这5个引脚进行屏幕配置和数据交互：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/f66f7a1371904158b06a94e5195b4168.png" alt="img"></p><p>​     </p><p>​    （ii）驱动时序：</p><p>​    驱动时序如下，其中：</p><blockquote><p>​    CSB即引脚CS，片选引脚，为低电平的时候，才能写入数据或命令；<br>​    A0即引脚RS，数据或命令选择引脚；<br>​    SCL时钟引脚，为低电平期间，写入数据，<br>​    SDA数据引脚，数据低位在前，高位在后；</p></blockquote><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/a6a801b97e484dd19ae56a7e48858bed.png" alt="img"></p><p>​    复位时序如下，其中：</p><blockquote><p>RSTB也就是RES，复位引脚，拉低即可复位，但是要注意拉低再拉高后要延时一段时间才能操作LCD。</p></blockquote><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/74b055af75744134aebf6422fc2b29e8.png" alt="img"></p><p>​    </p><p>​    （iii）驱动命令：</p><p>​     驱动命令如下，通过RS脚来实现数据与命令的切换：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/9bc21ffcc0c8414f9388c18556fedb53.png" alt="img"></p><p>【2】128×64液晶模组</p><p>​    一共128列，64行（其中每8行作为一页，共8页）：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/0bdd694e92db44509340ebebd80c61ec.png" alt="img"></p><p>【3】BL背光模块</p><p>​    由背光正极性端LED+（LEDA）和背光负极性端LED-（LEDK）控制背光亮灭。</p><h2 id="三-LCD接线"><a href="#三-LCD接线" class="headerlink" title="三 LCD接线"></a>三 LCD接线</h2><p>​    驱动芯片的引脚加上背光的引脚则形成了用户需要外接的所有引脚，其中主要关注CS0&#x2F;RST&#x2F;A0&#x2F;SCK&#x2F;SDA几个引脚，另外V0和XV0之间接1uf电容  VG和VSS之间接1uF电容：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/7603ff8c9d7b4b348ed894a9310c0cf3.png" alt="img"></p><h2 id="四-屏幕初始化"><a href="#四-屏幕初始化" class="headerlink" title="四 屏幕初始化"></a>四 屏幕<a href="https://so.csdn.net/so/search?q=%E5%88%9D%E5%A7%8B%E5%8C%96&spm=1001.2101.3001.7020">初始化</a></h2><p>【1】IO口初始化：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//12864点阵屏引脚定义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_PORT     (GPIOC)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_PIN      (GPIO_Pin_5)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_PORT     (GPIOB)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_PIN      (GPIO_Pin_0)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_PORT     (GPIOB)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_PIN      (GPIO_Pin_1)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_PORT    (GPIOB)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_PIN     (GPIO_Pin_2)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_PORT    (GPIOC)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_PIN     (GPIO_Pin_7)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_L()      GPIO_ResetBits(LDZ_CS_PORT, LDZ_CS_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_CS_H()      GPIO_SetBits(LDZ_CS_PORT, LDZ_CS_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_L()      GPIO_ResetBits(LDZ_RE_PORT, LDZ_RE_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_RE_H()      GPIO_SetBits(LDZ_RE_PORT, LDZ_RE_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_L()      GPIO_ResetBits(LDZ_DC_PORT, LDZ_DC_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_DC_H()      GPIO_SetBits(LDZ_DC_PORT, LDZ_DC_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_L()     GPIO_ResetBits(LDZ_SCK_PORT, LDZ_SCK_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SCK_H()     GPIO_SetBits(LDZ_SCK_PORT, LDZ_SCK_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_L()     GPIO_ResetBits(LDZ_SDA_PORT, LDZ_SDA_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LDZ_SDA_H()     GPIO_SetBits(LDZ_SDA_PORT, LDZ_SDA_PIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_Init</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： LDZ初始化</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_Init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">RCC_AHBPeriphClockCmd</span>(RCC_AHBPeriph_GPIOB | RCC_AHBPeriph_GPIOC, ENABLE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_CS_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_CS_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_RE_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_RE_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_DC_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_DC_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_SCK_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_SCK_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin  =  LDZ_SDA_PIN;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">GPIO_Init</span>(LDZ_SDA_PORT, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SCK_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SDA_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_RE_H</span>(); <span class="built_in">Ddl_Delay1ms</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_RE_L</span>(); <span class="built_in">Ddl_Delay1ms</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_RE_H</span>(); <span class="built_in">Ddl_Delay1ms</span>(<span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【2】写命令&#x2F;写数据（通过DC口即上面的A0引脚来控制，其中高电平为写数据，低电平为写命令）：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_SendBit</span><span class="params">(u8 bit)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">u8 i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i ++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_SCK_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(bit &amp; <span class="number">0x80</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">LDZ_SDA_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="built_in">LDZ_SDA_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_SCK_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bit &lt;&lt;= <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_WriteCMD/LDZ_WriteDAT</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 写命令/写数据</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_WriteCMD</span><span class="params">(u8 cmd)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_DC_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SendBit</span>(cmd);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_WriteDAT</span><span class="params">(u8 dat)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_L</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_DC_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SendBit</span>(dat);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_CS_H</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【3】配置屏幕</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_Cfg</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 配置屏幕</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_Cfg</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xE2</span>); <span class="comment">//reset</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">Ddl_Delay1ms</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xA2</span>); <span class="comment">//设置偏压比为1/9</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xA0</span>); <span class="comment">//设置seg扫描正向seg0~seg131</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xC8</span>); <span class="comment">//设置com扫描反向com63~com0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x24</span>); <span class="comment">//对比度粗调</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x81</span>); <span class="comment">//对比度双指令</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x2B</span>); <span class="comment">//对比度微调</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0x2F</span>); <span class="comment">//电源控制</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xB0</span>); <span class="comment">//设置页地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xAF</span>); <span class="comment">//显示打开</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xA6</span>); <span class="comment">//正常显示不反转</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【4】几个功能接口，包括设置地址&#x2F;清整屏&#x2F;清整页：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_SetAddr/LDZ_ClearPage/LDZ_Clear</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 设置地址/清整页/清全屏</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_SetAddr</span><span class="params">(u8 page, u8 col)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(<span class="number">0xB0</span>|page);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>((col &gt;&gt; <span class="number">4</span>)| <span class="number">0x10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_WriteCMD</span>(col &amp; <span class="number">0x0F</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ClearPage</span><span class="params">(u8 page)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_SetAddr</span>(page, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">128</span>;i ++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_WriteDAT</span>(<span class="number">0x00</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_Clear</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i ++)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ClearPage</span>(i);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    至此，屏幕初始化便完成了，下面准备显示内容。</p><h2 id="五-显示字符-x2F-汉字"><a href="#五-显示字符-x2F-汉字" class="headerlink" title="五 显示字符&#x2F;汉字"></a>五 显示字符&#x2F;汉字</h2><p>​    需要用到16和32两种大小的字体，根据ASC字符与汉字的差异可以分别放在如下的数组中：</p><blockquote><p>​    （i）小字符（8×16）放到数组ASC16[ ]；</p><p>​    （ii）小汉字（16×16）放到数组CHN16[ ]；</p><p>​    （iii）大字符（16×32）放到数组ASC32[ ]；</p><p>​    （iv）大汉字（32×32）放到数组CHN32[ ]；</p></blockquote><p>【1】字体取模：</p><p>​    要想显示字符&#x2F;汉字，需要预先进行字体取模。我这边用到了 PCtoLCD2002 这款软件。软件的具体使用不再赘述，我这边设置是这样的：</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/b2bd7a4df6c444358cea78963aae285e.png" alt="img"></p><p>​    生成的字库如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> ASC16[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="comment">/*&quot;0&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;1&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x98</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x14</span>,<span class="number">0x12</span>,<span class="number">0x11</span>,<span class="number">0x10</span>,<span class="comment">/*&quot;2&quot;,2*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x09</span>,<span class="number">0x07</span>,<span class="comment">/*&quot;3&quot;,3*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x05</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x1F</span>,<span class="number">0x04</span>,<span class="comment">/*&quot;4&quot;,4*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xB8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x09</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="comment">/*&quot;5&quot;,5*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x09</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="comment">/*&quot;6&quot;,6*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;7&quot;,7*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x98</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x11</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x19</span>,<span class="number">0x0F</span>,<span class="comment">/*&quot;8&quot;,8*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x98</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x90</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x11</span>,<span class="number">0x08</span>,<span class="number">0x07</span>,<span class="comment">/*&quot;9&quot;,9*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> CHN16[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x42</span>,<span class="number">0xCC</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0xA0</span>,<span class="number">0x9E</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x82</span>,<span class="number">0x9E</span>,<span class="number">0xA0</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x90</span>,<span class="number">0x88</span>,<span class="number">0x40</span>,<span class="number">0x43</span>,<span class="number">0x2C</span>,<span class="number">0x10</span>,<span class="number">0x28</span>,<span class="number">0x46</span>,<span class="number">0x41</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;设&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x17</span>,<span class="number">0x15</span>,<span class="number">0xD5</span>,<span class="number">0x55</span>,<span class="number">0x57</span>,<span class="number">0x55</span>,<span class="number">0x7D</span>,<span class="number">0x55</span>,<span class="number">0x57</span>,<span class="number">0x55</span>,<span class="number">0xD5</span>,<span class="number">0x15</span>,<span class="number">0x17</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x7F</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x55</span>,<span class="number">0x7F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;置&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> ASC32[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0xFE</span>,<span class="number">0xFF</span>,<span class="number">0x07</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x7F</span>,<span class="number">0xFF</span>,<span class="number">0xE0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xE0</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;0&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x1C</span>,<span class="number">0x0C</span>,<span class="number">0x0E</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;1&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x81</span>,<span class="number">0xE3</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0x60</span>,<span class="number">0x70</span>,<span class="number">0x38</span>,<span class="number">0x18</span>,<span class="number">0x1C</span>,<span class="number">0x0E</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="comment">/*&quot;2&quot;,2*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x07</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xE1</span>,<span class="number">0xF3</span>,<span class="number">0xBF</span>,<span class="number">0xBF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0xE0</span>,<span class="number">0xE0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x81</span>,<span class="number">0xC3</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;3&quot;,3*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0xF0</span>,<span class="number">0x78</span>,<span class="number">0x3C</span>,<span class="number">0x1E</span>,<span class="number">0x0F</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x1E</span>,<span class="number">0x1F</span>,<span class="number">0x1F</span>,<span class="number">0x1B</span>,<span class="number">0x19</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0x18</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x18</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;4&quot;,4*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x6F</span>,<span class="number">0x61</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x70</span>,<span class="number">0x60</span>,<span class="number">0xE0</span>,<span class="number">0xC0</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0xE0</span>,<span class="number">0xE0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xE0</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;5&quot;,5*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0xFC</span>,<span class="number">0xFE</span>,<span class="number">0x8F</span>,<span class="number">0xC3</span>,<span class="number">0xC1</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0x60</span>,<span class="number">0xC1</span>,<span class="number">0xC3</span>,<span class="number">0x87</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x7F</span>,<span class="number">0xFF</span>,<span class="number">0xE1</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xC1</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;6&quot;,6*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0xF8</span>,<span class="number">0x3C</span>,<span class="number">0x0E</span>,<span class="number">0x07</span>,<span class="number">0x03</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0xFE</span>,<span class="number">0x7F</span>,<span class="number">0x0F</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;7&quot;,7*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x3F</span>,<span class="number">0xFF</span>,<span class="number">0xE1</span>,<span class="number">0xE1</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xE1</span>,<span class="number">0xE1</span>,<span class="number">0xFF</span>,<span class="number">0x3F</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x3C</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0xC3</span>,<span class="number">0x81</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x81</span>,<span class="number">0xC3</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;8&quot;,8*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x7C</span>,<span class="number">0xFE</span>,<span class="number">0xFF</span>,<span class="number">0x87</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x83</span>,<span class="number">0xFF</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0xE1</span>,<span class="number">0xE1</span>,<span class="number">0xC3</span>,<span class="number">0x83</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x06</span>,<span class="number">0x83</span>,<span class="number">0xC3</span>,<span class="number">0xF1</span>,<span class="number">0x7F</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;9&quot;,9*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> CHN32[]=&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0xF8</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xFC</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0xF0</span>,<span class="number">0x10</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x58</span>,<span class="number">0x4E</span>,<span class="number">0xC7</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x47</span>,<span class="number">0x4F</span>,<span class="number">0xEC</span>,<span class="number">0xCC</span>,<span class="number">0x4C</span>,<span class="number">0x0C</span>,<span class="number">0x0C</span>,<span class="number">0x0C</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x60</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0xE0</span>,<span class="number">0x78</span>,<span class="number">0x1F</span>,<span class="number">0x07</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x47</span>,<span class="number">0x43</span>,<span class="number">0x41</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x10</span>,<span class="number">0x18</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x08</span>,<span class="number">0x0C</span>,<span class="number">0x06</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x06</span>,<span class="number">0x0E</span>,<span class="number">0x0C</span>,<span class="number">0x1C</span>,<span class="number">0x18</span>,<span class="number">0x38</span>,<span class="number">0x30</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;设&quot;,0*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFC</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xFC</span>,<span class="number">0xFC</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x13</span>,<span class="number">0x13</span>,<span class="number">0x51</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0xF3</span>,<span class="number">0xFD</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x95</span>,<span class="number">0x95</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0x91</span>,<span class="number">0xD1</span>,<span class="number">0xD1</span>,<span class="number">0x91</span>,<span class="number">0x1B</span>,<span class="number">0x1B</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0x44</span>,<span class="number">0xFF</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x3F</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x3F</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="comment">/*&quot;置&quot;,1*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>【2】显示字符&#x2F;汉字接口：</p><p>​    用四个定制化的接口，来显示上面不同字体的字库内容：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************************************************************************</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 函数名称： LDZ_ShowASC16/LDZ_ShowASC32/LDZ_ShowCHN16/LDZ_ShowCHN32</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 功能描述： 显示字符</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* 参数说明： [1]页地址 / [2]列地址 / [3]字符位于对应数组中的序号</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**************************************************************************/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowASC16</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">2</span>;i ++)<span class="comment">//一共2行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">8</span>;j ++)  <span class="comment">//一行8字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(ASC16[j + i*<span class="number">8</span> + id*<span class="number">16</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowCHN16</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">2</span>;i ++)   <span class="comment">//一共2行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">16</span>;j ++)  <span class="comment">//一行16字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(CHN16[j + i*<span class="number">16</span> + id*<span class="number">32</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowASC32</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)   <span class="comment">//一共4行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">16</span>;j ++)  <span class="comment">//一行16字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(ASC32[j+ i*<span class="number">16</span> + id*<span class="number">64</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LDZ_ShowCHN32</span><span class="params">(u8 page, u8 col, u8 id)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    u8 i,j;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i ++)   <span class="comment">//一共4行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_SetAddr</span>(page++, col);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; <span class="number">32</span>;j ++)  <span class="comment">//一行32字节</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">LDZ_WriteDAT</span>(CHN32[j + i*<span class="number">32</span> + id*<span class="number">128</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    至此，定制化的字符&#x2F;汉字显示接口已经完成，接下来就是在主函数中使用。</p><h2 id="六-实际效果"><a href="#六-实际效果" class="headerlink" title="六 实际效果"></a>六 实际效果</h2><p>​    在主函数中调用初始化以及字符显示接口：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//LCD初始化/配置命令/清屏</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_Init</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_Cfg</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">LDZ_Clear</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);    <span class="comment">//显示0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">8</span>, <span class="number">1</span>);    <span class="comment">//显示1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">16</span>, <span class="number">2</span>);    <span class="comment">//显示2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC16</span>(<span class="number">0</span>, <span class="number">24</span>, <span class="number">3</span>);    <span class="comment">//显示3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN16</span>(<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);    <span class="comment">//显示“设”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN16</span>(<span class="number">2</span>, <span class="number">16</span>, <span class="number">1</span>);    <span class="comment">//显示“置”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC32</span>(<span class="number">4</span>, <span class="number">0</span>, <span class="number">4</span>);    <span class="comment">//显示4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowASC32</span>(<span class="number">4</span>, <span class="number">16</span>, <span class="number">5</span>);    <span class="comment">//显示5</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN32</span>(<span class="number">4</span>, <span class="number">32</span>, <span class="number">0</span>);    <span class="comment">//显示“设”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">LDZ_ShowCHN32</span>(<span class="number">4</span>, <span class="number">64</span>, <span class="number">1</span>);    <span class="comment">//显示“置”</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    实际运行屏幕效果如下:</p><p><img src="/STM32%E8%8A%AF%E7%89%87%E4%BD%BF%E7%94%A812864%E4%B8%B2%E5%8F%A3%E5%B1%8F(%E9%A9%B1%E5%8A%A8%E4%B8%BAST7567)/150b20c3cde940e281653cef848ea89c.png" alt="img"></p><h2 id="七-附录"><a href="#七-附录" class="headerlink" title="七 附录"></a>七 附录</h2><p>【1】<a href="https://blog.csdn.net/sinat_33408502/article/details/119913561?spm=1001.2014.3001.5502">【嵌入式】MCU(HC32F460)+SPI接口LCD液晶屏ILI9341 移植emWin记录1—-点亮LCD屏_ili9341是spi 还是i2c-CSDN博客</a></p><p>【2】<a href="https://blog.csdn.net/freemote/article/details/127808624">【开源】使用HK32F030驱动ST7567 LCD-CSDN博客</a></p><p>【3】<a href="https://blog.csdn.net/weixin_46251230/article/details/127942339">LX12864P1屏幕使用介绍（ST7567驱动），显示横线、字符、图形-CSDN博客</a></p><p>【4】[<a href="https://blog.csdn.net/ic2121/article/details/126943905">STM32F1]使用STM32F103驱动ST7567液晶屏_st7567单片机驱动程序-CSDN博客</a></p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://www.cnblogs.com/zhjblogs/p/12712575.html">（stm32f103学习总结）—RTC独立定时器—实时时钟实验 </a></li><li><a href="https://blog.csdn.net/zhai17863966493/article/details/104361466">STM32F103的RTC实时时钟配置</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">STM32芯片使用12864串口屏(驱动为ST7567)</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/categories/STM32/"/>
    
    <category term="LCD" scheme="https://zml3589110.github.io/categories/LCD/"/>
    
    <category term="ST7567" scheme="https://zml3589110.github.io/categories/ST7567/"/>
    
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="LCD" scheme="https://zml3589110.github.io/tags/LCD/"/>
    
    <category term="ST7567" scheme="https://zml3589110.github.io/tags/ST7567/"/>
    
  </entry>
  
  <entry>
    <title>LVGL页面切换</title>
    <link href="https://zml3589110.github.io/posts/435688621.html"/>
    <id>https://zml3589110.github.io/posts/435688621.html</id>
    <published>2024-07-20T08:24:20.000Z</published>
    <updated>2024-07-20T09:45:01.376Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在LVGL中，大多情况下是有多个页面的，一般来说页面的切换有两种情况：</p><ol><li>删除当前的页面，创建新页面加载</li><li>保留当前的页面，创建新页面加载</li></ol><p>我们来分析一下这两种情况，比如页面1有一个列表框，有三个选项，每个选项对应进入一个页面。假设此时我们的焦点落在第二个选项上，然后点击进入页面2，我们要是想返回，我们是希望焦点还是保留在列表的第二个选项上的。基于这种情况来说，我们希望能够在保留页面1的同时(同时也保留了焦点)，创建页面2并加载。同时对于页面2来说，只是想用户选择的时候再加载，每次进入都处于初始状态，所以在从页面2返回页面1时，我们会希望删除页面2，再创建页面1并加载。</p><p>所以这两种切换方式我们都需要了解，下面就来看看在LVGL中如何完成页面切换。</p><h1 id="页面切换原理和页面管理实现"><a href="#页面切换原理和页面管理实现" class="headerlink" title="页面切换原理和页面管理实现"></a>页面切换原理和页面管理实现</h1><h2 id="1-页面切换函数"><a href="#1-页面切换函数" class="headerlink" title="1 页面切换函数"></a>1 页面切换函数</h2><p>首先，无论对于哪种情况，我们都需要创建一个新页面进行加载。在LVGL中是采用函数<code>lv_scr_load</code>来加载一个新页面的，它的调用关系如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lv_scr_load(scr)</span><br><span class="line">lv_disp_load_scr(scr)</span><br><span class="line">lv_scr_load_anim(scr, LV_SCR_LOAD_ANIM_NONE, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我们不对<code>lv_scr_load_anim</code>进行深入分析，我们只需要知道这个函数最终可以用来显示一个页面就行了，其中<code>anim</code>表示animation，即页面加载时可以有一些动画。<code>lv_scr_load</code>函数则是不用任何动画而是直接加载页面。所以我们也可以直接使用<code>lv_scr_load_anim</code>进行加载页面。</p><p>有了这个函数，实际上页面切换就很简单了，对于每个页面来说，一个<code>lv_obj_t</code>基础对象表示一个页面，我们只需要让所有的组件都以这个页面<code>lv_obj_t</code>为父类即可，然后用<code>lv_scr_load_anim</code>函数进行加载就行了。</p><p><strong>隐藏页面切换法？</strong><br>隐藏页面切换法就是调用<code>lv_obj_add_flag(obj, LV_OBJ_FLAG_HIDDEN)</code>和<code>lv_obj_clear_flag(obj, LV_OBJ_FLAG_HIDDEN)</code>来隐藏&#x2F;显示页面以实现页面的切换。如果想多个页面显示在一起，即有上下层叠的关系，可以指定所有页面有一个共有的父类。</p><p>但对于<code>lv_scr_load_anim</code>函数来说，仅支持单个页面的显示，参数是哪个页面，显示的就是哪个页面，即使上一个页面没有被删除，也不会被显示出来。如果将所有的页面都建立于一个<code>lv_obj</code>上，不仅浪费内存，而且页面之间的管理也非常乱。所以在我看来，没有什么所谓的隐藏页面切换法。</p><h2 id="2-页面切换的条件及原因"><a href="#2-页面切换的条件及原因" class="headerlink" title="2 页面切换的条件及原因"></a>2 页面切换的条件及原因</h2><p>对于实际的页面切换来说，我们还需要考虑一些事，比如从当前页面切换出去，是要删除还是保留当前页面及其所有子对象。我们就以GUI Guider生成的代码为例，看看它是如何删除页面、如何调用<code>lv_scr_load_anim</code>进行页面的切换的，毕竟这种软件上生成的代码肯定是非常严谨的。</p><hr><p>这里插一句嘴，网上很多信息都不太严谨，我之前下了一个LVGL源码学习，在单片机中运行没问题，但在Codeblocks模拟就有可能会崩溃。这并不是CodeBlocks不兼容，而是代码本身就有内存越界访问的问题。</p><p>还有比如BootLoader，如果开启了某个外设的中断、Cache、GPIO时钟等，在退出BootLoader前一定要关掉，即恢复之前的状态。我有亲身经历，同事的BootLoader在退出前没有关串口的中断，然后进入APP后一个常量字符串的某一位莫名其妙的被修改了。</p><ul><li>感兴趣的话可以看一下我的这篇文章：<a href="https://blog.csdn.net/tilblackout/article/details/134621320">单片机(STM32,GD32,NXP等)中BootLoader的严谨实现详解</a></li></ul><p>网上很多内容都是不严谨的，可能表面上确实可以用，但也留下了一些潜在的错误。我的建议是参考官方SDK或Github中Star很多的代码。</p><hr><p>如下图所示，我们先创键两个页面：</p><img src="/posts/435688621/cc58ff8cce864f7f8063969eac73b712.png" class="" title="在这里插入图片描述"><p>我们希望页面一的按钮按下后切换到页面二，页面二的按钮按下后切换到页面一。在GUI Guider中选中按钮，在右侧添加Events，如下图所示，左边为页面一的Events，右边为页面二的Events。</p><img src="/posts/435688621/6cf3cfe40ffc405eb02eef7ec3cc276a.png" class="" title="在这里插入图片描述"><p>以页面一为例，上图表示按钮按下后，将载入页面二。另外，我们注意到，在GUI Guider中，还有一个<code>Delete current screen</code>的选项，而且选上之后又出现一个<code>Free memory of current screen before loading new screen</code>选项。三种情况下，点击按钮后切换页面的代码如下所示：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 未选中Delete current screen */</span></span><br><span class="line"><span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (guider_ui.screen_2_del == <span class="literal">true</span>)</span><br><span class="line">setup_scr_screen_2(&amp;guider_ui);</span><br><span class="line">lv_scr_load_anim(guider_ui.screen_2, LV_SCR_LOAD_ANIM_NONE, <span class="number">100</span>, <span class="number">100</span>, <span class="literal">false</span>);</span><br><span class="line">guider_ui.screen_1_del = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选中Delete current screen */</span></span><br><span class="line"><span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (guider_ui.screen_2_del == <span class="literal">true</span>)</span><br><span class="line">setup_scr_screen_2(&amp;guider_ui);</span><br><span class="line">lv_scr_load_anim(guider_ui.screen_2, LV_SCR_LOAD_ANIM_NONE, <span class="number">100</span>, <span class="number">100</span>, <span class="literal">true</span>);</span><br><span class="line">guider_ui.screen_1_del = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选中Delete current screen和Free memory of current screen before loading new screen */</span></span><br><span class="line"><span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line">lv_obj_clean(act_scr);</span><br><span class="line"><span class="keyword">if</span> (guider_ui.screen_2_del == <span class="literal">true</span>)</span><br><span class="line">setup_scr_screen_2(&amp;guider_ui);</span><br><span class="line">lv_scr_load_anim(guider_ui.screen_2, LV_SCR_LOAD_ANIM_NONE, <span class="number">100</span>, <span class="number">100</span>, <span class="literal">true</span>);</span><br><span class="line">guider_ui.screen_1_del = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看出如果设置待加载的页面为要删除，则需要在每次加载新页面前，都需要调用<code>setup_scr_screen_2</code>来重新初始化页面中的组件，然后<code>lv_scr_load_anim</code>的最后一个参数<code>auto_del</code>设置为true，表示加载后自动删除原页面中的对象。如果想要在加载新页面前就把原页面中的内容释放掉，调用<code>lv_obj_clean</code>即可。</p><p>现在再来分析一下上面代码的共同特征：</p><p>（1）<code>lv_obj_t * act_scr = lv_scr_act()</code>：获取当前屏幕中正在显示的页面的<code>lv_obj_t</code>类型的指针<br>（2）<code>lv_disp_t * d = lv_obj_get_disp(act_scr);</code>：获取当前屏幕对象关联的显示器对象<br>（3）<code>d-&gt;prev_scr == NULL</code><br>        LVGL支持页面切换动画，如从左到右切换，<code>prev_scr</code>就用作于此。当<code>prev_scr</code>不为<code>NULL</code>时，表示当前屏幕对象正在进行切换动画，并且可以通过<code>prev_scr</code>引用到前一个屏幕对象。当<code>prev_scr</code>为<code>NULL</code>时才能切换页面，这样做是为了防止在动画执行过程中对前一个屏幕对象进行删除操作，以及避免可能的资源冲突或不一致性。<br>（4）<code>(d-&gt;scr_to_load == NULL || d-&gt;scr_to_load == act_scr)</code><br>        只有在<code>scr_to_load </code>等于<code>NULL</code>或等于<code>act_scr</code>时才能切换页面。<code>NULL</code>表示当前没有在执行切换页面的动画(已经执行完毕)，<code>act_scr</code>表示当前正处于从别的页面切换为当前页面的过程中。其它情况下，如当前页面1(<code>act_scr</code>)正准备切换到页面2时，执行切换到页面3是不被允许的。<br>（5）<code>lv_obj_clean</code><br>        表示在载入新的页面之前，删除当前页面的所有子对象。但当<code>lv_scr_load_anim</code>的最后一个参数为true时，会在下一次切换屏幕时调用<code>lv_obj_del</code>删除前一个页面及其子对象。但实际上我们先删除其子对象也不影响动画切换的效果，这是因为子对象已经绘制在<code>act_scr</code>中了，我们只需要当前页面的一个显示状态即可完成动画的过渡效果。</p><p>这里我仅仅是用文字对函数的执行过程进行了描述，具体的原理请参考<code>lv_disp.c</code>。如果有必要的话，我会写一篇源码分析的文章。</p><h2 id="3-页面切换的模块化实现"><a href="#3-页面切换的模块化实现" class="headerlink" title="3 页面切换的模块化实现"></a>3 页面切换的模块化实现</h2><p>从上面可以发现，其实页面切换就是调用那几行代码，但是在每个页面的回调函数中都写那几行又感觉有点冗余，所以干脆我们就写一个页面切换的函数，将所有页面管理起来，调用函数进行相互之间的切换。<br><strong>（1）定义页面结构体PageStruct_t和页面标识符PAGE_ID</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">PAGE_NULL = <span class="number">-1</span>,</span><br><span class="line"><span class="comment">/* 假设有两个页面：LOGO和MAIN，增加页面后自行在此添加对应的枚举类型 */</span></span><br><span class="line">PAGE_LOGO, </span><br><span class="line">PAGE_MAIN,</span><br><span class="line">&#125;PAGE_ID;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span><span class="params">(*page_init_handle)</span><span class="params">(<span class="keyword">lv_obj_t</span>* root)</span></span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">uint8_t</span> page_id;</span><br><span class="line"><span class="keyword">lv_obj_t</span>* root;</span><br><span class="line">page_init_handle init_handler;  <span class="comment">//页面中所有组件的初始化函数,以root为父对象</span></span><br><span class="line">&#125;PageStruct_t;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（2）添加和创建页面</strong><br>这里实现了一个链表，来管理每个界面，链表实现很普遍而代码量很长，就不贴代码了。<code>page_find</code>和<code>list_rpush</code>为链表相关函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">page_add</span><span class="params">(PageStruct_t* page)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/* 遍历链表看是否page_id是否被加入过 */</span></span><br><span class="line"><span class="keyword">list_node_t</span>* node = page_find(page-&gt;page_id);</span><br><span class="line"><span class="keyword">if</span>(node != <span class="literal">NULL</span>) </span><br><span class="line">&#123;</span><br><span class="line">PRINTF(<span class="string">&quot;page has been added!\r\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">node = list_rpush(page_list, list_node_new(page));</span><br><span class="line"><span class="keyword">if</span>(node != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">PRINTF(<span class="string">&quot;page %d adds successfully!\r\n&quot;</span>, page-&gt;page_id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> PageStruct_t* <span class="title">page_create</span><span class="params">(<span class="keyword">uint8_t</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PageStruct_t* page = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">list_node_t</span>* node = page_find(id);</span><br><span class="line"><span class="keyword">if</span>(node != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">page = node-&gt;val;</span><br><span class="line">page-&gt;root = lv_obj_create(<span class="literal">NULL</span>);</span><br><span class="line"><span class="comment">/* 每个页面的大小与LCD屏幕大小对应 */</span></span><br><span class="line">lv_obj_set_size(page-&gt;root, DEMO_PANEL_WIDTH, DEMO_PANEL_HEIGHT);</span><br><span class="line">page-&gt;init_handler(page-&gt;root);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（3）页面切换</strong><br>页面切换实际上就是在刚刚GUI Guider生成的代码的基础上加上了链表的查询操作。这里当<code>del</code>为1时，默认在切换页面前都调用<code>lv_obj_clean</code>把当前页面的子对象清理掉。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @param:arg 页面ID</span></span><br><span class="line"><span class="comment"> * @param:del 页面内存释放标志</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">page_callback</span><span class="params">(PAGE_ID arg, <span class="keyword">lv_scr_load_anim_t</span> animation, <span class="keyword">bool</span> del)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">uint8_t</span> id = (<span class="keyword">uint8_t</span>)arg;</span><br><span class="line">PageStruct_t *page;</span><br><span class="line"><span class="keyword">lv_obj_t</span> *act_scr = lv_scr_act();</span><br><span class="line"><span class="keyword">lv_disp_t</span> *d = lv_obj_get_disp(act_scr);</span><br><span class="line"><span class="keyword">list_node_t</span>* p_node = page_find_root(act_scr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(p_node == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">page = p_node-&gt;val;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(del)</span><br><span class="line">&#123;</span><br><span class="line">lv_obj_clean(act_scr);</span><br><span class="line">page-&gt;root = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 根据待切换屏幕的page_id找到其结构体 */</span></span><br><span class="line">p_node = page_find(id);</span><br><span class="line"><span class="keyword">if</span>(p_node == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="comment">//page_cur = id;</span></span><br><span class="line">page = p_node-&gt;val;</span><br><span class="line"><span class="comment">/* 如果屏幕中的组件被删除了,重新创建 */</span></span><br><span class="line"><span class="keyword">if</span>(page-&gt;root == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">page_create(id);</span><br><span class="line"><span class="keyword">if</span>(page-&gt;root == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 加载新页面:这里固定了animation的时间,如有必要可以在每个页面结构体里添加这些参数 */</span></span><br><span class="line">lv_scr_load_anim(page-&gt;root, animation, <span class="number">150</span>, <span class="number">50</span>, del);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>（4）LOGO页面添加例子</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> PageStruct_t page_logo = &#123;</span><br><span class="line">.page_id = PAGE_LOGO,</span><br><span class="line">.init_handler = gui_logo_init,   <span class="comment">//初始化页面中的各个组件的函数</span></span><br><span class="line">.root = <span class="literal">NULL</span>,</span><br><span class="line">&#125;;</span><br><span class="line">page_add(&amp;page_logo);</span><br><span class="line">page_callback(PAGE_LOGO,  LV_SCR_LOAD_ANIM_MOVE_LEFT,  <span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>本文就不贴完整的代码了，本文主要是介绍页面切换部分的函数。至于页面之间的管理，实际上就缺一个链表的实现。大家自己去github找一个链表实现一下，同时也有助于理解代码。对于页面切换时焦点保存和恢复的问题，可以参考<a href="https://blog.csdn.net/tilblackout/article/details/131146111">LVGL学习(5)：物理按键切换焦点之焦点保存和恢复</a>。</p><h1 id="界面切换以及显示优化"><a href="#界面切换以及显示优化" class="headerlink" title="界面切换以及显示优化"></a>界面切换以及显示优化</h1><h2 id="一-界面切换"><a href="#一-界面切换" class="headerlink" title="一 界面切换"></a>一 界面切换</h2><p>利用lvgl框架绘制GUI免不了需要实现多个页面的切换，毕竟把所有功能和接口都放在一页上有些不太优雅，而且对于嵌入式硬件的小屏幕也有些过于困难。因此这里就需要实现多个页面（或者说lvgl里的screen）及其互相切换。</p><p>实现方案（参考文章《<a href="https://blog.csdn.net/m0_37187962/article/details/125526292">LVGL V8应用——通过按键切换页面</a>》），有以下两类实现方案：</p><h3 id="【1】通过LV-OBJ-FLAG-HIDDEN隐藏属性实现页面切换："><a href="#【1】通过LV-OBJ-FLAG-HIDDEN隐藏属性实现页面切换：" class="headerlink" title="【1】通过LV_OBJ_FLAG_HIDDEN隐藏属性实现页面切换："></a>【1】通过LV_OBJ_FLAG_HIDDEN隐藏属性实现页面切换：</h3><p>显示窗口1之前给窗口2的容器设置LV_OBJ_FLAG_HIDDEN隐藏属性，显示窗口2之前给窗口1的容器设置LV_OBJ_FLAG_HIDDEN隐藏属性。</p><h3 id="【2】切换到窗口2时，删除窗口1的容器"><a href="#【2】切换到窗口2时，删除窗口1的容器" class="headerlink" title="【2】切换到窗口2时，删除窗口1的容器:"></a>【2】切换到窗口2时，删除窗口1的容器:</h3><p>这边的具体实现也可以分为两种方法：</p><ol><li><p>切换到窗口2时，可以在回调函数中删除窗口1的容器，这样可以删除窗口1下的所有子对象，这种方式适用于运存较小的设备。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">win_btn_event_callback1</span><span class="params">(<span class="keyword">lv_event_t</span>* event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_event_code_t</span> code = lv_event_get_code(event);</span><br><span class="line">    <span class="keyword">if</span> (code == LV_EVENT_CLICKED)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 删除窗口1的win1_contanier容器，这样就可以把win1_contanier上的子对象全部删除，然后显示窗口2</span></span><br><span class="line">        lv_obj_del(win1_contanier);</span><br><span class="line">        show_button_win2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">win_btn_event_callback2</span><span class="params">(<span class="keyword">lv_event_t</span>* event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">lv_event_code_t</span> code = lv_event_get_code(event);</span><br><span class="line">    <span class="keyword">if</span> (code == LV_EVENT_CLICKED)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 删除窗口2的win2_contanier容器，这样就可以把win2_contanier上的子对象全部删除，然后显示窗口1</span></span><br><span class="line">        lv_obj_del(win2_contanier);</span><br><span class="line">        show_button_win1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用函数lv_scr_load_anim和lv_scr_load加载和切换屏幕：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 直接加载该屏幕scr</span></span><br><span class="line"><span class="comment">参数1：要加载的屏幕 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">lv_scr_load</span><span class="params">(<span class="keyword">lv_obj_t</span> * scr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lv_disp_load_scr(scr);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/* 通过动画的方式显示</span></span><br><span class="line"><span class="comment">参数1：要加载的屏幕</span></span><br><span class="line"><span class="comment">参数2：动画类别</span></span><br><span class="line"><span class="comment">参数3：切换动画需要的时间</span></span><br><span class="line"><span class="comment">参数4：为true时则会在切换界面后将旧界面删除，节约内存*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_scr_load_anim</span><span class="params">(<span class="keyword">lv_obj_t</span> * scr, <span class="keyword">lv_scr_load_anim_t</span> anim_type, <span class="keyword">uint32_t</span> time, <span class="keyword">uint32_t</span> delay, <span class="keyword">bool</span> auto_del)</span></span>;</span><br></pre></td></tr></table></figure></li></ol><p>我这边用到的是第二类方式，即GUI Guider中自动生成的事件+加载页面动作的方式：</p><img src="/posts/435688621/20e9faae6733aa0c0e80787387886212.png" class="" title="img"><h2 id="二-显示优化"><a href="#二-显示优化" class="headerlink" title="二 显示优化"></a>二 显示优化</h2><p>因为用到界面的切换，涉及整屏（320*240）的刷新，如果绘制较为复杂的画面，界面切换的过程中会有拉窗帘的效果，非常影响美观。所以显示的优化就不得不考虑了。</p><p>参考《<a href="https://www.bilibili.com/read/cv17894963">LVGL显示优化—基本优化</a>》、《<a href="https://blog.csdn.net/weixin_43862847/article/details/109318017">LVGL 优化帧率技巧</a>》，有以下几种优化方法以供参考：</p><h3 id="【1】disp-flush刷屏方法改进"><a href="#【1】disp-flush刷屏方法改进" class="headerlink" title="【1】disp_flush刷屏方法改进"></a>【1】disp_flush刷屏方法改进</h3><p>这一点之前移植的时候也提过（《<a href="https://blog.csdn.net/sinat_33408502/article/details/129199633">【LVGL】学习笔记–(1)Keil中嵌入式系统移植LVGL</a>》），在disp_flush中用封装好的LCD_Fill_LVGL刷屏函数替代原先默认的画点函数。</p><h3 id="【2】LVGL帧率限制"><a href="#【2】LVGL帧率限制" class="headerlink" title="【2】LVGL帧率限制"></a>【2】LVGL帧率限制</h3><p>LVGL是有一个帧率刷新周期的宏定义，在lv_conf.h里。LVGL会通过LVGL内部的tick，定时去刷屏幕，也就是说该宏定义限定了LVGL刷屏帧率的上限，默认满帧33帧。</p><p>这里我们直接改成10ms刷新一次，满帧100帧。顺手再把输入设备读取周期也改成10ms。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Default display refresh period. LVG will redraw changed areas with this period time*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_DISP_DEF_REFR_PERIOD 10      <span class="comment">/*[ms]*/</span>  <span class="comment">//默认30</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Input device read period in milliseconds*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_INDEV_DEF_READ_PERIOD 10     <span class="comment">/*[ms]*/</span>  <span class="comment">//默认30</span></span></span><br></pre></td></tr></table></figure><h3 id="【3】LV-DPI-DEF配置"><a href="#【3】LV-DPI-DEF配置" class="headerlink" title="【3】LV_DPI_DEF配置"></a>【3】LV_DPI_DEF配置</h3><p>在lv_conf.h里配置DPI：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  * LV_DPI_DEF 注意这里，虽然LVGL的作者说这个没这么重要，但他会严重影响到LVGL的动画效果</span></span><br><span class="line"><span class="comment">  * 你应该进行DPI的手动计算，例如320*240分辨率3.2英寸的屏幕，那么 DPI = (320*320+240*240)^0.5 / 3.2 = 125</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_DPI_DEF                  125     <span class="comment">/*[px/inch]*/</span></span></span><br></pre></td></tr></table></figure><h3 id="【4】编译器版本以及代码优化等级"><a href="#【4】编译器版本以及代码优化等级" class="headerlink" title="【4】编译器版本以及代码优化等级"></a>【4】编译器版本以及代码优化等级</h3><p>编译器版本尽量用arm compiler5。代码优化等级可以提高到Level 2：</p><img src="/posts/435688621/cb69e6d5a3945468b931d24b4669d405.png" class="" title="img"><h3 id="【5】堆栈设置"><a href="#【5】堆栈设置" class="headerlink" title="【5】堆栈设置"></a>【5】堆栈设置</h3><ol><li><p>栈设置：</p><p>官方推荐：</p><img src="/posts/435688621/ecdf3d4b2e71520b25977de4d3f97997.png" class="" title="img"><p>在启动文件startup_hc32f460.s中设置大一点，我这边设置为8K：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Stack_Size      EQU     0x00002000</span><br><span class="line"> </span><br><span class="line">                AREA    STACK, NOINIT, READWRITE, ALIGN&#x3D;3</span><br><span class="line">Stack_Mem       SPACE   Stack_Size</span><br><span class="line">__initial_sp</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">; &lt;h&gt; Heap Configuration</span><br><span class="line">;   &lt;o&gt;  Heap Size (in Bytes) &lt;0x0-0xFFFFFFFF:8&gt;</span><br><span class="line">; &lt;&#x2F;h&gt;</span><br><span class="line"> </span><br><span class="line">Heap_Size       EQU     0x00000200</span><br><span class="line"> </span><br><span class="line">                AREA    HEAP, NOINIT, READWRITE, ALIGN&#x3D;3</span><br><span class="line">__heap_base</span><br><span class="line">Heap_Mem        SPACE   Heap_Size</span><br><span class="line">__heap_limit</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                PRESERVE8</span><br><span class="line">                THUMB</span><br></pre></td></tr></table></figure></li><li><p>堆设置：<br>lv_conf.h中的LV_MEM_SIZE进行设置，上面推荐大于32K，我这边设为了48K：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Size of the memory available for `lv_mem_alloc()` in bytes (&gt;= 2kB)*/</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> LV_MEM_SIZE (48U * 1024U)          <span class="comment">/*[bytes]*/</span></span></span><br></pre></td></tr></table></figure></li></ol><h3 id="【6】显存类型"><a href="#【6】显存类型" class="headerlink" title="【6】显存类型"></a>【6】显存类型</h3><p>LVGL其实提供了三种显存类型。三种分别对应不同环境，都可以试试 （B站有大神进行过三种类型的测试<a href="https://www.bilibili.com/video/BV1BL4y1n7hV/">LVGL 最优配置测试 (STM32)</a>，可以参考一下，我自己测了单BUFFER和非全尺寸双BUFFER，区别不大）。先看下结论：</p><img src="/posts/435688621/79d226740a9ad9327b330cdc0e1de14d.png" class="" title="img"><ol><li><p>单BUFFER<br>画面会被拆分成buffer的size大小，分块刷新，当只有局部刷新时，比如说点击了一个按钮按钮变高亮，那么他就只会刷局部画面。官方推荐 1&#x2F;10 screen size，拆分太小，刷屏接口又慢的话，不仅帧率低，还会有感人的拉窗帘。整屏幕刷速度快是快，但是太占内存了。我这边调整为1&#x2F;4全屏，效果还不错：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 单缓冲区示例) */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_disp_draw_buf_t</span> draw_buf_dsc_1;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">lv_color_t</span> buf_1[MY_DISP_HOR_RES * MY_DISP_VER_RES / <span class="number">4</span>]; </span><br><span class="line">lv_disp_draw_buf_init(&amp;draw_buf_dsc_1, buf_1, <span class="literal">NULL</span>, MY_DISP_HOR_RES * MY_DISP_VER_RES / <span class="number">4</span>);   <span class="comment">/*Initialize the display buffer*/</span></span><br></pre></td></tr></table></figure></li><li><p>非全尺寸双BUFFER<br>顾名思义，两个buffer，实际上就是PING-PONG模式，这种情况适合有dma或者其他显存加速设备的芯片，在一块buffer使用dma等外设后台刷屏时，lvgl可以再前台渲染显示进另一块显存，也就是说渲染和刷屏并发执行，理论是比单显存要好的，不过跟硬件和屏幕大小有关，具体要实测。</p></li><li><p>全尺寸双BUFFER<br>两个全尺寸buffer，虽然直觉看上去和非全尺寸双buffer应该区别不大，但实际上，这个是专门为带TFT驱动的MCU准备的。双全尺寸与前两种不同，在任何时候，给出的buffer都是全屏大小的buffer，而不是局部刷新只提供刷新部分的buffer窗口，这么做的的好处是刷屏，只需要更改TFT驱动的显存地址，而不需要将LVGL的buffer再搬运到TFT驱动的显存，就可完成刷屏动作。</p></li></ol><p>以上。</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/tilblackout/article/details/131058317">（这个博主技术厉害！）LVGL学习(3)：页面切换原理和页面管理实现</a></li><li><a href="https://blog.csdn.net/sinat_33408502/article/details/129242824">（这个也厉害）【LVGL】学习笔记–(3)界面切换以及显示优化</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">LVGL基本页面切换</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/categories/LVGL/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
  </entry>
  
  <entry>
    <title>LVGL输入设备对接</title>
    <link href="https://zml3589110.github.io/posts/2588001421.html"/>
    <id>https://zml3589110.github.io/posts/2588001421.html</id>
    <published>2024-07-20T07:47:20.000Z</published>
    <updated>2024-07-20T09:45:01.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="外部按键对接之ESP32"><a href="#外部按键对接之ESP32" class="headerlink" title="外部按键对接之ESP32"></a>外部按键对接之ESP32</h1><h2 id="一、任务目标"><a href="#一、任务目标" class="headerlink" title="一、任务目标"></a>一、任务目标</h2><p>ui创建有三个button的页面，通过外部实体按键可在这三个button间实现聚焦与切换，点击button切换至有滑动条的页面，通过按键使滑动条数值增加。</p><p>有三个实体按键，它们分别实现：</p><p>1）控件聚焦与切换（LV_KEY_NEXT）</p><p>2）控件选择（LV_KEY_ENTER）</p><p>3）控件数值变化（LV_KEY_RIGHT）</p><h2 id="二、准备工作"><a href="#二、准备工作" class="headerlink" title="二、准备工作"></a>二、准备工作</h2><p>芯片平台：ESP32S3 LVGL版本：V8.3  ESP-IDF版本：v5.2</p><ol><li><p>已完成屏幕显示功能</p></li><li><p>已完成lvgl库移植到esp32s3</p></li><li><p>已完成底层按键驱动（最好）</p></li></ol><h2 id="三、输入设备移植"><a href="#三、输入设备移植" class="headerlink" title="三、输入设备移植"></a>三、输入设备移植</h2><h3 id="1-创建输入设备组件"><a href="#1-创建输入设备组件" class="headerlink" title="1.创建输入设备组件"></a>1.创建输入设备组件</h3><p>在工程的components&#x2F;lvgl&#x2F;examples&#x2F;porting&#x2F;文件夹下找到 lv_port_indev_template.c 和lv_port_indev_template.h 两个文件，将其复制拷贝到新的 lv_port_indev 组件文件夹下并改名为 lv_port_indev.c 和 lv_port_indev.h，并创建CMakeLists.txt 文件。结构如下：</p><img src="/posts/2588001421/f764326ecfa74551bae086e42915d973.png" class="" title="img"><h3 id="2-底层代码的实现"><a href="#2-底层代码的实现" class="headerlink" title="2.底层代码的实现"></a>2.底层代码的实现</h3><h4 id="1-修改lv-port-indev-h"><a href="#1-修改lv-port-indev-h" class="headerlink" title="1.修改lv_port_indev.h"></a>1.修改lv_port_indev.h</h4><p>lv_port_indev.h 只需要修改把#if 0 改为 #if 1 即可。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file lv_port_indev_templ.h</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Copy this file as &quot;lv_port_indev.h&quot; and set this value to &quot;1&quot; to enable content*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> LV_PORT_INDEV_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LV_PORT_INDEV_H</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      INCLUDES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl/lvgl.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      DEFINES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      TYPEDEFS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> * GLOBAL PROTOTYPES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_port_indev_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      MACROS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125; <span class="comment">/*extern &quot;C&quot;*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/*LV_PORT_INDEV_TEMPL_H*/</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/*Disable/Enable content*/</span></span></span><br></pre></td></tr></table></figure><h4 id="2-修改lv-port-indev-c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）"><a href="#2-修改lv-port-indev-c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）" class="headerlink" title="2. 修改lv_port_indev.c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）"></a>2. 修改lv_port_indev.c（这里原理差不多，后边自己使用了MQTT传送过来也是可行）</h4><p>因为我们这里使用的输入方式是keypad，所以把其它几种输入方式的代码先删掉，只保留indev_keypad相关代码。其中，</p><p>keypad_init()是底层按键检测代码，需要用户自己实现，这里我们初始化了3个io按键。</p><p>keypad_get_key()是将实体按键与lvgl输入设备关联，这里我们选择关联LV_KEY_NEXT、LV_KEY_RIGHT和LV_KEY_ENTER。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file lv_port_indev_templ.c</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Copy this file as &quot;lv_port_indev.c&quot; and set this value to &quot;1&quot; to enable content*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      INCLUDES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lv_port_indev.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hal_btn.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*********************</span></span><br><span class="line"><span class="comment"> *      DEFINES</span></span><br><span class="line"><span class="comment"> *********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      TYPEDEFS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *  STATIC PROTOTYPES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_read</span><span class="params">(<span class="keyword">lv_indev_drv_t</span> * indev_drv, <span class="keyword">lv_indev_data_t</span> * data)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint32_t</span> <span class="title">keypad_get_key</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *  STATIC VARIABLES</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"><span class="keyword">lv_indev_t</span> * indev_keypad;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">// lv_group_t *key_group;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *      MACROS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *   GLOBAL FUNCTIONS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_port_indev_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Here you will find example implementation of input devices supported by LittelvGL:</span></span><br><span class="line"><span class="comment">     *  - Touchpad</span></span><br><span class="line"><span class="comment">     *  - Mouse (with cursor support)</span></span><br><span class="line"><span class="comment">     *  - Keypad (supports GUI usage only with key)</span></span><br><span class="line"><span class="comment">     *  - Encoder (supports GUI usage only with: left, right, push)</span></span><br><span class="line"><span class="comment">     *  - Button (external buttons to press points on the screen)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *  The `..._read()` function are only examples.</span></span><br><span class="line"><span class="comment">     *  You should shape them according to your hardware</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_indev_drv_t</span> indev_drv;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*------------------</span></span><br><span class="line"><span class="comment">     * Keypad</span></span><br><span class="line"><span class="comment">     * -----------------*/</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Initialize your keypad or keyboard if you have*/</span></span><br><span class="line">    keypad_init();</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Register a keypad input device*/</span></span><br><span class="line">    lv_indev_drv_init(&amp;indev_drv);</span><br><span class="line">    indev_drv.type = LV_INDEV_TYPE_KEYPAD;</span><br><span class="line">    indev_drv.read_cb = keypad_read;</span><br><span class="line">    indev_keypad = lv_indev_drv_register(&amp;indev_drv);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Later you should create group(s) with `lv_group_t * group = lv_group_create()`,</span></span><br><span class="line"><span class="comment">     *add objects to the group with `lv_group_add_obj(group, obj)`</span></span><br><span class="line"><span class="comment">     *and assign this input device to group to navigate in it:</span></span><br><span class="line"><span class="comment">     *`lv_indev_set_group(indev_keypad, group);`*/</span></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**********************</span></span><br><span class="line"><span class="comment"> *   STATIC FUNCTIONS</span></span><br><span class="line"><span class="comment"> **********************/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*------------------</span></span><br><span class="line"><span class="comment"> * Keypad</span></span><br><span class="line"><span class="comment"> * -----------------*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Initialize your keypad*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    btn_init(<span class="number">0</span>,UP);</span><br><span class="line">    btn_init(<span class="number">20</span>,UP);</span><br><span class="line">    btn_init(<span class="number">19</span>,UP);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Will be called by the library to read the mouse*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">keypad_read</span><span class="params">(<span class="keyword">lv_indev_drv_t</span> * indev_drv, <span class="keyword">lv_indev_data_t</span> * data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint32_t</span> last_key = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Get the current x and y coordinates*/</span></span><br><span class="line">    <span class="comment">// mouse_get_xy(&amp;data-&gt;point.x, &amp;data-&gt;point.y);</span></span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*Get whether the a key is pressed and save the pressed key*/</span></span><br><span class="line">    <span class="keyword">uint32_t</span> act_key = keypad_get_key();</span><br><span class="line">    <span class="comment">// printf(&quot;key:%d\n&quot;,act_key);</span></span><br><span class="line">    <span class="keyword">if</span>(act_key != <span class="number">0</span>) &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">/*Translate the keys to LVGL control characters according to your key definitions*/</span></span><br><span class="line">        <span class="keyword">switch</span>(act_key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                act_key = LV_KEY_NEXT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                act_key = LV_KEY_PREV;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                act_key = LV_KEY_LEFT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                act_key = LV_KEY_RIGHT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                act_key = LV_KEY_ENTER;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        last_key = act_key;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    data-&gt;key = last_key;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*Get the currently being pressed key.  0 if no key is pressed*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint32_t</span> <span class="title">keypad_get_key</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(btn_get_level(<span class="number">0</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(btn_get_level(<span class="number">20</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(btn_get_level(<span class="number">19</span>)==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h4 id="3-CMakeLists-txt-的实现"><a href="#3-CMakeLists-txt-的实现" class="headerlink" title="3.CMakeLists.txt 的实现"></a>3.CMakeLists.txt 的实现</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">file</span>(GLOB_RECURSE srcs *.c)</span><br><span class="line"> </span><br><span class="line">idf_component_register(</span><br><span class="line">    SRCS <span class="variable">$&#123;srcs&#125;</span></span><br><span class="line">    INCLUDE_DIRS .</span><br><span class="line">    REQUIRES lvgl hal_btn</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>到了这一步我们的lvgl 按键输入差不多就移植好了，接下来来实现我们的任务目标。</p><h2 id="四、目标工程的实现"><a href="#四、目标工程的实现" class="headerlink" title="四、目标工程的实现"></a>四、目标工程的实现</h2><h3 id="1-ui设计"><a href="#1-ui设计" class="headerlink" title="1.ui设计"></a>1.ui设计</h3><p>首先，我们需要创建好我们的ui并移植到我们的工程中。这里我们在screen页面创建三个不同颜色的button，其中，通过点击红色的btn1可跳转至页面screen_1,通过按键实现滑动条数值的增加，并通过点击back返回screen页面。</p><p>screen：</p><img src="/posts/2588001421/d1edb2afb6f342428da02dc0bb272ab0.png" class="" title="img"><p>screen_1:</p><img src="/posts/2588001421/21ab87674ac24376bcb5173f8ebdfde7.png" class="" title="img"><h3 id="2-组的添加"><a href="#2-组的添加" class="headerlink" title="2.组的添加"></a>2.组的添加</h3><p>通过lvgl的注释我们知道，想要让我们的按键控制ui的功能能实现还需要创建一个组（group），并且将我们的ui控件添加进这个组中，并将输入设备的句柄与组相关联。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Later you should create group(s) with `lv_group_t * group = lv_group_create()`,</span></span><br><span class="line"><span class="comment">     *add objects to the group with `lv_group_add_obj(group, obj)`</span></span><br><span class="line"><span class="comment">     *and assign this input device to group to navigate in it:</span></span><br><span class="line"><span class="comment">     *`lv_indev_set_group(indev_keypad, group);`*/</span></span><br></pre></td></tr></table></figure><p>在文件setup_scr_screen.c和setup_scr_screen_1.c里找到ui控件创建函数并添加相应的代码。</p><p>也可以直接在lv_port_indev_init（）中添加默认组，这样后续创建的控件将会自动加入默认组。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">extern</span> <span class="keyword">lv_indev_t</span> * indev_keypad;</span><br><span class="line"><span class="keyword">lv_group_t</span> *group=lv_group_create();</span><br><span class="line">   lv_indev_set_group(indev_keypad, group);<span class="comment">//将组绑定到输入设备</span></span><br><span class="line"></span><br><span class="line">   lv_group_set_editing(group, <span class="literal">false</span>);   <span class="comment">//导航模式</span></span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_btn_1);</span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_btn_2);</span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_btn_3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   lv_group_add_obj(group ,ui-&gt;screen_1_btn_1);</span><br><span class="line">lv_group_add_obj(group ,ui-&gt;screen_1_slider_1);</span><br></pre></td></tr></table></figure><img src="/posts/2588001421/336174331acd4a04a8a9dba3bc5d58fa.png" class="" title="img"><img src="/posts/2588001421/86fd91abef264c598ceb19954c33ec91.png" class="" title="img"><h3 id="3-修改main-c"><a href="#3-修改main-c" class="headerlink" title="3.修改main.c"></a>3.修改main.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_log.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;nvs_flash.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_system.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/event_groups.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lvgl_helpers.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;gui_guider.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;custom.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lv_port_indev.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;demos/lv_demos.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">lv_ui guider_ui;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LVGL_TICK_MS 1</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TAG <span class="meta-string">&quot;main&quot;</span></span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lv_tick_task</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    lv_tick_inc(LVGL_TICK_MS);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">app_main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">esp_err_t</span> ret = nvs_flash_init();</span><br><span class="line">    <span class="keyword">if</span> (ret == ESP_ERR_NVS_NO_FREE_PAGES || ret == ESP_ERR_NVS_NEW_VERSION_FOUND)</span><br><span class="line">    &#123;</span><br><span class="line">        ESP_ERROR_CHECK(nvs_flash_erase());</span><br><span class="line">        ret = nvs_flash_init();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* Initialize SPI or I2C bus used by the drivers */</span></span><br><span class="line">    lvgl_driver_init();</span><br><span class="line"> </span><br><span class="line">    lv_init();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">lv_color_t</span> *buf1 = heap_caps_malloc(DISP_BUF_SIZE * <span class="keyword">sizeof</span>(<span class="keyword">lv_color_t</span>), MALLOC_CAP_DMA);</span><br><span class="line">    assert(buf1 != <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_color_t</span> *buf2 = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">lv_disp_draw_buf_t</span> disp_buf;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">uint32_t</span> size_in_px = DISP_BUF_SIZE;</span><br><span class="line">    lv_disp_draw_buf_init(&amp;disp_buf, buf1, buf2, size_in_px);</span><br><span class="line">    <span class="keyword">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">    lv_disp_drv_init(&amp;disp_drv);</span><br><span class="line">    disp_drv.hor_res = BOARD_LCD_H_RES;</span><br><span class="line">    disp_drv.ver_res = BOARD_LCD_V_RES;</span><br><span class="line">    disp_drv.flush_cb = disp_driver_flush;</span><br><span class="line">    disp_drv.draw_buf = &amp;disp_buf;</span><br><span class="line">    lv_disp_drv_register(&amp;disp_drv);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">esp_timer_create_args_t</span> periodic_timer_args = &#123;</span><br><span class="line">        .callback = &amp;lv_tick_task,</span><br><span class="line">        .name = <span class="string">&quot;periodic_gui&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">esp_timer_handle_t</span> periodic_timer;</span><br><span class="line">    ESP_ERROR_CHECK(esp_timer_create(&amp;periodic_timer_args, &amp;periodic_timer));</span><br><span class="line">    ESP_ERROR_CHECK(esp_timer_start_periodic(periodic_timer, <span class="number">1</span> * <span class="number">1000</span>));</span><br><span class="line"> </span><br><span class="line">    lv_port_indev_init();  <span class="comment">//输入设备初始化</span></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// lvgl demo演示</span></span><br><span class="line">    <span class="comment">// lv_demo_music();</span></span><br><span class="line">    <span class="comment">// lv_demo_stress();</span></span><br><span class="line"> </span><br><span class="line">    setup_ui(&amp;guider_ui);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Delay 1 tick (assumes FreeRTOS tick is 10ms */</span></span><br><span class="line">        vTaskDelay(pdMS_TO_TICKS(<span class="number">10</span>));</span><br><span class="line">        lv_task_handler();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="六、其它"><a href="#六、其它" class="headerlink" title="六、其它"></a><code>六、其它</code></h2><h3 id="1-按键驱动参考"><a href="#1-按键驱动参考" class="headerlink" title="1.按键驱动参考"></a><code>1.按键驱动参考</code></h3><p>hal_btn.c:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;freertos/queue.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;esp_log.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;hal_btn.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> s_btn_disable = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> s_btn_level = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">btn_cb_t</span> s_btn_cb = <span class="literal">NULL</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_init</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num, <span class="keyword">pull_mode_t</span> pull_mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gpio_pad_select_gpio(gpio_num);</span><br><span class="line">    gpio_set_direction(gpio_num, GPIO_MODE_INPUT);</span><br><span class="line">    gpio_pad_select_gpio(gpio_num);</span><br><span class="line">    gpio_set_direction(gpio_num, GPIO_MODE_INPUT);</span><br><span class="line">    <span class="keyword">switch</span> (pull_mode)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> UP:</span><br><span class="line">        gpio_set_pull_mode(gpio_num, GPIO_PULLUP_ONLY);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DOWN:</span><br><span class="line">        gpio_set_pull_mode(gpio_num, GPIO_PULLDOWN_ONLY);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> FLOATING:</span><br><span class="line">        gpio_set_pull_mode(gpio_num, GPIO_FLOATING);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_set_disable</span><span class="params">(<span class="keyword">bool</span> disable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s_btn_disable = disable;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_send_level</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s_btn_level = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">btn_get_level</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> level = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (s_btn_disable)</span><br><span class="line">    &#123;</span><br><span class="line">        s_btn_level = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s_btn_level)</span><br><span class="line">    &#123;</span><br><span class="line">        s_btn_level = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    level = gpio_get_level(gpio_num);</span><br><span class="line">    <span class="keyword">if</span> (s_btn_cb != <span class="literal">NULL</span> &amp;&amp; level == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s_btn_cb();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> level;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btn_set_callback</span><span class="params">(<span class="keyword">btn_cb_t</span> btn_cb)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s_btn_cb = btn_cb;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>hal_btn.h:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;driver/gpio.h&quot;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        UP = <span class="number">0</span>,</span><br><span class="line">        DOWN,</span><br><span class="line">        FLOATING</span><br><span class="line">    &#125; <span class="keyword">pull_mode_t</span>;</span><br><span class="line">    <span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*<span class="keyword">btn_cb_t</span>)</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_init</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num, <span class="keyword">pull_mode_t</span> pull_mode)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_set_disable</span><span class="params">(<span class="keyword">bool</span> disable)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_send_level</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">btn_get_level</span><span class="params">(<span class="keyword">gpio_num_t</span> gpio_num)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">btn_set_callback</span><span class="params">(<span class="keyword">btn_cb_t</span> btn_cb)</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="2-lv-event-send-的使用"><a href="#2-lv-event-send-的使用" class="headerlink" title="2.lv_event_send 的使用"></a>2.lv_event_send 的使用</h3><p>虽然通过上面的按键操作也可以实现通过点击back按钮返回上一页面的功能，但这种点击方式更常用于以触摸屏作为输入设备的时候，而在以外部按键作为输入设备的工程中，通常会有一个单独的实体按键来固定返回之前页面这一功能，而不会在ui上显示这一虚拟按钮，这是便需要使用lv_event_send 来手动发送事件。</p><p>比如，我们在一个实体按键的按键回调中使用lv_event_send：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">button_short_down_cb</span><span class="params">(<span class="keyword">void</span> *arg, <span class="keyword">void</span> *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ESP_LOGI(TAG, <span class="string">&quot;BTN BUTTON_short_DOWN&quot;</span>);</span><br><span class="line">    <span class="keyword">lv_obj_t</span> *root = lv_obj_get_child(lv_scr_act(), <span class="literal">NULL</span>);<span class="comment">/*获得当前页面创建的第一个控件（按创建顺序）*/</span></span><br><span class="line"> </span><br><span class="line">    lv_event_send(root, LV_EVENT_CANCEL, <span class="literal">NULL</span>);<span class="comment">//手动发送LV_EVENT_CANCEL事件</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在滑动条的事件中添加LV_EVENT_CANCEL事件：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> LV_EVENT_CANCEL:</span><br><span class="line">&#123;</span><br><span class="line">        <span class="comment">//切换页面</span></span><br><span class="line"><span class="comment">//Write the load screen code.</span></span><br><span class="line">    <span class="keyword">lv_obj_t</span> * act_scr = lv_scr_act();</span><br><span class="line">    <span class="keyword">lv_disp_t</span> * d = lv_obj_get_disp(act_scr);</span><br><span class="line">    <span class="keyword">if</span> (d-&gt;prev_scr == <span class="literal">NULL</span> &amp;&amp; (d-&gt;scr_to_load == <span class="literal">NULL</span> || d-&gt;scr_to_load == act_scr)) &#123;</span><br><span class="line">lv_obj_clean(act_scr);</span><br><span class="line">        <span class="keyword">if</span> (guider_ui.main_del == <span class="literal">true</span>) &#123;</span><br><span class="line">          setup_scr_main(&amp;guider_ui);</span><br><span class="line">        &#125;</span><br><span class="line">        lv_scr_load_anim(guider_ui.main, LV_SCR_LOAD_ANIM_NONE, <span class="number">200</span>, <span class="number">200</span>, <span class="literal">true</span>);</span><br><span class="line">        guider_ui.main_del = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>这样我们按下相应的实体按键即可返回之前的页面，而不再需要通过back按钮的点击事件了（滑动条控件需要在其所在页面被第一个创建）。</p><h2 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h2><iframe id="tqr0sln3-1695622077321" frameborder="0" src="https://live.csdn.net/v/embed/330563" allowfullscreen="true" data-mediaembed="csdn" style="box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: normal; font-synthesis-style: auto; overflow-wrap: break-word; display: block; width: 730px; height: 365px;"></iframe><p>esp32_keypad_indev</p><hr><h1 id="相关链接-侵删"><a href="#相关链接-侵删" class="headerlink" title="相关链接(侵删)"></a>相关链接(侵删)</h1><ol><li><a href="https://blog.csdn.net/m0_55986987/article/details/133171860">ESP32系列之LVGL（四）：输入设备（外部按键）对接</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">LVGL各种输入设备对接，实现页面控制</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/categories/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/categories/LVGL/"/>
    
    <category term="indev" scheme="https://zml3589110.github.io/categories/indev/"/>
    
    
    <category term="linux" scheme="https://zml3589110.github.io/tags/linux/"/>
    
    <category term="C" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="STM32" scheme="https://zml3589110.github.io/tags/STM32/"/>
    
    <category term="GUI" scheme="https://zml3589110.github.io/tags/GUI/"/>
    
    <category term="LVGL" scheme="https://zml3589110.github.io/tags/LVGL/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="indev" scheme="https://zml3589110.github.io/tags/indev/"/>
    
    <category term="输入设备" scheme="https://zml3589110.github.io/tags/%E8%BE%93%E5%85%A5%E8%AE%BE%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF之MQTT</title>
    <link href="https://zml3589110.github.io/posts/1702633171.html"/>
    <id>https://zml3589110.github.io/posts/1702633171.html</id>
    <published>2024-07-20T07:36:20.000Z</published>
    <updated>2024-08-01T02:02:38.902Z</updated>
    
    <content type="html"><![CDATA[<h1 id="错误及其处理"><a href="#错误及其处理" class="headerlink" title="错误及其处理"></a>错误及其处理</h1><h2 id="error-：MQTT-CLIENT-Error-parse-uri"><a href="#error-：MQTT-CLIENT-Error-parse-uri" class="headerlink" title="error ：MQTT_CLIENT: Error parse uri"></a>error ：MQTT_CLIENT: Error parse uri</h2><p>esp使用mqtt进行连接AWS出现下面error<br>error ：MQTT_CLIENT: Error parse uri</p><p>查一查是不是配置出错。<br>url：应该为：（ mqtts:&#x2F;&#x2F; ）+（endpoint）的格式<br>port：上云查看端口是否一致</p><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/Cmy_894/article/details/129767322">esp 使用mqtt进行连接云台</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF下 使用MQTT通讯 MQTT_CLIENT Error parse uri</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    <category term="MQTT" scheme="https://zml3589110.github.io/categories/MQTT/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/tags/WIFI/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="网络编程" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    <category term="MQTT" scheme="https://zml3589110.github.io/tags/MQTT/"/>
    
  </entry>
  
  <entry>
    <title>ESP32­-PICO-­D4芯片开发板</title>
    <link href="https://zml3589110.github.io/posts/3931543859.html"/>
    <id>https://zml3589110.github.io/posts/3931543859.html</id>
    <published>2024-07-20T06:47:20.000Z</published>
    <updated>2024-07-20T09:45:01.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h1><ul><li><p>尺寸仅为 (7.000±0.100) mm × (7.000±0.100) mm × (0.940±0.100) mm</p></li><li><p>集成1 个 4 MB 串行外围设备接口 (SPI) flash</p></li><li><p>集成 2.4 GHz Wi-Fi 和蓝牙双模的单芯片方案，采用台积电(TSMC) 超低功耗的 40 纳米工艺</p></li><li><p>已将晶振、 flash、滤波电容、 RF 匹配链路等所有外围器件无缝集成进封装内，不再需要外围元器件即可工作</p></li></ul><img src="/posts/3931543859/9e322b0e45b0430bb6cc469aadf653d4.png" class="" title="在这里插入图片描述"><h1 id="管脚"><a href="#管脚" class="headerlink" title="管脚"></a>管脚</h1><img src="/posts/3931543859/5befaaab810c4b6cab18680db0f0f985.png" class="" title="在这里插入图片描述"><img src="/posts/3931543859/e06f03c194e04c0786f0da86a0a977b8.png" class="" title="在这里插入图片描述"><img src="/posts/3931543859/80b3e5c189d74e9594f2ef85ffd99cbf.png" class="" title="在这里插入图片描述"><img src="/posts/3931543859/97d07773131a459388bbd3e22cc49de0.png" class="" title="在这里插入图片描述"><ol><li>嵌入式 flash 连接至 VDD_SDIO(26脚)，由 VDD3P3_RTC 通过约 6 Ω 电阻直接供电。因此， VDD_SDIO 相对 VDD3P3_RTC(19脚)会有一定电压降。</li><li>IO16(25脚)、 IO17(27脚)、 CMD(30脚)、 CLK(31脚)、 SD0(32脚) 和 SD1(33脚) 用于连接嵌入式 flash，不可用于其他功能。</li><li>如果要外接 PSRAM，推荐使用 SD3 (GPIO10) 用于 PSRAM_CS。</li></ol><h1 id="Strapping-管脚"><a href="#Strapping-管脚" class="headerlink" title="Strapping 管脚"></a>Strapping 管脚</h1><p>ESP32 共有 5 个 Strapping 管脚：MTDI（18脚）、GPIO0（23脚）、GPIO2（22脚）、MTDO（21脚）、GPIO5（34脚）</p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>  软件可以读取寄存器“GPIO_STRAPPING”中这 5 个管脚 strapping 的值。<br>  在芯片的系统复位（上电复位、 RTC 看门狗复位、欠压复位）放开的过程中，Strapping 管脚对电平采样并存储到锁存器中，锁存为“0”或“1”，并一直保持到芯片掉电或关闭。<br>  每一个 Strapping 管脚都会连接内部上拉&#x2F;下拉。如果一个 Strapping 管脚没有外部连接或者连接的外部线路处于高阻抗状态，内部弱上拉&#x2F;下拉将决定 Strapping 管脚输入电平的默认值。<br>  为改变 Strapping 的值，用户可以应用外部下拉&#x2F;上拉电阻，或者应用主机 MCU 的 GPIO 控制 ESP32 上电复位放开时的 Strapping 管脚电平。<br>  复位放开后， Strapping 管脚和普通管脚功能相同。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>MTDI控制内置LDO的输出电压，VDD_SDIO（26脚）</p><img src="/posts/3931543859/1d1c373b77bb4cf2b61fe827c84a2239.png" class="" title="在这里插入图片描述"><p>GPIO0、GPIO2控制启动模式，从内部的SPI Flash正常启动还是进入下载模式。</p><img src="/posts/3931543859/d73cf349c37e444eaa20da9d3f5fb162.png" class="" title="在这里插入图片描述"><p>MTDO在系统启动过程中，控制 U0TXD 打印</p><img src="/posts/3931543859/d6b4439857034451bdb493a5d20e92fb.png" class="" title="在这里插入图片描述"><p>MTDO、GPIO5控制SDIO 从机信号输入输出时序</p><img src="/posts/3931543859/a4dfe1a1fe824819ac34d8e76700bb66.png" class="" title="在这里插入图片描述"><h1 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h1><h2 id="CPU-和片上存储"><a href="#CPU-和片上存储" class="headerlink" title="CPU 和片上存储"></a>CPU 和片上存储</h2><p>ESP32-PICO-D4 搭载 2 个低功耗 Xtensa® 32-bit LX6 微处理器。<br>ESP32-PICO-D4 片上存储包括：</p><ul><li><p>448 KB 的 ROM，用于程序启动和内核功能调用</p></li><li><p>用于数据和指令存储的 520 KB 片上 SRAM</p></li><li><p>RTC 快速存储器，为 8 KB 的 SRAM，可以在 Deep-sleep 模式下 RTC 启动时用于数据存储以及被主CPU 访问</p></li><li><p>RTC 慢速存储器，为 8 KB 的 SRAM，可以在 Deep-sleep 模式下被协处理器访问</p></li><li><p>1 Kbit 的 eFuse，其中 256 bit 为系统专用（MAC 地址和芯片设置） ; 其余 768 bit 保留给用户程序, 这些程序包括 flash 加密和芯片 ID</p></li></ul><h3 id="外部-Flash-和-SRAM"><a href="#外部-Flash-和-SRAM" class="headerlink" title="外部 Flash 和 SRAM"></a>外部 Flash 和 SRAM</h3><p>ESP32 支持多个外部 QSPI flash 和静态随机存储器 (SRAM)。详情可参考《ESP32 技术参考手册》 中的 SPI 章节。 ESP32 还支持基于 AES 的硬件加解密功能，从而保护开发者 flash 中的程序和数据。</p><p>ESP32 可通过高速缓存访问外部 QSPI flash 和 SRAM：</p><ul><li>外部 flash 可以同时映射到 CPU 指令和只读数据空间。<ul><li>当映射到 CPU 指令空间时，一次最多可映射 11 MB + 248 KB。如果一次映射超过 3 MB + 248 KB，则 cache 性能可能由于 CPU 的推测性读取而降低。</li><li>当映射到只读数据空间时，一次最多可以映射 4 MB。支持 8-bit、 16-bit 和 32-bit 读取。</li></ul></li><li>外部 SRAM 可映射到 CPU 数据空间。一次最多可映射 4 MB。支持 8-bit、 16-bit 和 32-bit 访问。</li></ul><p>ESP32-PICO-D4 集成了 4 MB 的外部 SPI flash。</p><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/posts/3931543859/cc2176d19d074670a5ed17b971c6367a.png" class="" title="在这里插入图片描述"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://blog.csdn.net/qlexcel/article/details/122192294">ESP32­-PICO-­D4的使用</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP32­-PICO-­D4 的 kit 开发板</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="文件共享" scheme="https://zml3589110.github.io/categories/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/categories/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="开发板" scheme="https://zml3589110.github.io/categories/%E5%BC%80%E5%8F%91%E6%9D%BF/"/>
    
    <category term="ESP32­-PICO-­D4" scheme="https://zml3589110.github.io/categories/ESP32%C2%AD-PICO-%C2%ADD4/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="ESP32" scheme="https://zml3589110.github.io/tags/ESP32/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/tags/%E4%B9%90%E9%91%AB/"/>
    
    <category term="SDK-IDF" scheme="https://zml3589110.github.io/tags/SDK-IDF/"/>
    
    <category term="开发板" scheme="https://zml3589110.github.io/tags/%E5%BC%80%E5%8F%91%E6%9D%BF/"/>
    
    <category term="ESP32­-PICO-­D4" scheme="https://zml3589110.github.io/tags/ESP32%C2%AD-PICO-%C2%ADD4/"/>
    
    <category term="4MB" scheme="https://zml3589110.github.io/tags/4MB/"/>
    
  </entry>
  
  <entry>
    <title>Cshap监听键盘事件</title>
    <link href="https://zml3589110.github.io/posts/3443976773.html"/>
    <id>https://zml3589110.github.io/posts/3443976773.html</id>
    <published>2024-07-20T02:41:20.000Z</published>
    <updated>2024-07-20T09:45:01.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取当前方法事件对应的控件"><a href="#获取当前方法事件对应的控件" class="headerlink" title="获取当前方法事件对应的控件"></a>获取当前方法事件对应的控件</h1><p>例如，button1对应的事件button1_Click()：</p><p>private void button1_Click(object sender, EventArgs e)<br>{</p><p>…</p><p>}<br>我们想在方法内部获得事件方法对应的控件相关参数：名称、内容、数据…</p><p>可以通过事件中传递过来的sender对象获取名称</p><p>因为我们的控件是button类。所以用—&gt;(Button) sender，</p><p>同理，其他类型的控件就是就是—&gt;(控件类) sender</p><p>…</p><p>((ComboBox) sender).Name&#x2F;&#x2F;名称<br>((ComboBox) sender).Text&#x2F;&#x2F;获取文本</p><h1 id="监听按键-创建类来使用"><a href="#监听按键-创建类来使用" class="headerlink" title="监听按键-创建类来使用"></a>监听按键-创建类来使用</h1><p>c#按键键盘事件监控键盘上下左右和其它按键</p><p>重写：protected override bool ProcessDialogKey(Keys keyData)就可以实现了。</p><p>放在窗口类里面</p><p> public partial class Form_XYZ_Jog : Form</p><p>{</p><p>xxxxx</p><p>}</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="built_in">bool</span> <span class="title">ProcessDialogKey</span>(<span class="params">Keys keyData</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// MessageBox.Show(keyData.ToString());</span></span><br><span class="line">    <span class="built_in">string</span> direction2 = keyData.ToString();</span><br><span class="line">    <span class="built_in">string</span> Left = <span class="string">&quot;A&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Right = <span class="string">&quot;D&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Front = <span class="string">&quot;W&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Back = <span class="string">&quot;S&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Up = <span class="string">&quot;Up&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> Down = <span class="string">&quot;Down&quot;</span>;</span><br><span class="line">    label_press_msg.Text = <span class="string">&quot;已按下：&quot;</span> + direction2;</span><br><span class="line">    Console.WriteLine(DateTime.Now.ToString()+ label_press_msg.Text);</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span> (direction2 ==Left)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_left.Focus();</span><br><span class="line"> </span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(direction2 == Right)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_right.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Front)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_front.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Back)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_back.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">true</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Up)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_down.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">false</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (direction2 == Down)</span><br><span class="line">    &#123;</span><br><span class="line">        button_move_up.Focus();</span><br><span class="line">        EnableLeftRightFrontBack(<span class="literal">false</span>);</span><br><span class="line">        EnableUpDown(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">base</span>.ProcessDialogKey(keyData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="全局监听"><a href="#全局监听" class="headerlink" title="全局监听"></a>全局监听</h1><p>C#如何获取键盘和鼠标处于空闲状态下的时间  可以通过windows api 函数 GetLastInputInfo或者全局钩子HOOK来实现</p><p>用 GetLastInputInfo 写（键鼠空闲15分钟自动弹出一个页面）</p><h2 id="新建windows-应用程序项目"><a href="#新建windows-应用程序项目" class="headerlink" title="新建windows 应用程序项目"></a>新建windows 应用程序项目</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">APPDEMO</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> VedioForm vf = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> System.Windows.Forms.Timer timer1 = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">STAThread</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Application.EnableVisualStyles();</span><br><span class="line">            Application.SetCompatibleTextRenderingDefault(<span class="literal">false</span>);</span><br><span class="line">            <span class="comment">//启用定时器</span></span><br><span class="line">            <span class="keyword">if</span> (timer1 == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                timer1 = <span class="keyword">new</span> Timer();</span><br><span class="line">            &#125;</span><br><span class="line">            timer1.Interval = <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">            timer1.Tick += <span class="keyword">new</span> EventHandler(timer1_Tick);</span><br><span class="line">            timer1.Start();</span><br><span class="line">            Application.Run(<span class="keyword">new</span> MainForm());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">//判断空闲时间是否超过15分钟,超过则自动弹出视频播放窗口</span></span><br><span class="line">            <span class="keyword">if</span> (GetIdleTick() / <span class="number">1000</span> &gt;= <span class="number">15</span> * <span class="number">60</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ShowVidioForm();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 打开视频播放窗口</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ShowVidioForm</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (vf == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    vf = <span class="keyword">new</span> VedioForm();</span><br><span class="line">                &#125;</span><br><span class="line">                vf.ShowDialog();</span><br><span class="line">            &#125;</span><br><span class="line">            catch</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取鼠标键盘空闲时间</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">long</span> <span class="title">GetIdleTick</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            LASTINPUTINFO lastInputInfo = <span class="keyword">new</span> LASTINPUTINFO();</span><br><span class="line">            lastInputInfo.cbSize = Marshal.SizeOf(lastInputInfo);</span><br><span class="line">            <span class="keyword">if</span> (!GetLastInputInfo(<span class="keyword">ref</span> lastInputInfo)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> Environment.TickCount - (<span class="built_in">long</span>)lastInputInfo.dwTime;</span><br><span class="line">        &#125;</span><br><span class="line">        [<span class="meta">StructLayout(LayoutKind.Sequential)</span>]</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">struct</span> LASTINPUTINFO</span><br><span class="line">        &#123;</span><br><span class="line">            [<span class="meta">MarshalAs(UnmanagedType.U4)</span>]</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> cbSize;</span><br><span class="line">            [<span class="meta">MarshalAs(UnmanagedType.U4)</span>]</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">uint</span> dwTime;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 调用windows API获取鼠标键盘空闲时间</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;plii&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">bool</span> <span class="title">GetLastInputInfo</span>(<span class="params"><span class="keyword">ref</span> LASTINPUTINFO plii</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用HOOK钩子来实现-创建钩子类"><a href="#用HOOK钩子来实现-创建钩子类" class="headerlink" title="用HOOK钩子来实现 创建钩子类"></a>用HOOK钩子来实现 创建钩子类</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">TengDa.Core</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">KeyboardHook</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> KeyEventHandler KeyDownEvent;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> KeyPressEventHandler KeyPressEvent;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">event</span> KeyEventHandler KeyUpEvent;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">HookProc</span>(<span class="params"><span class="built_in">int</span> nCode, Int32 wParam, IntPtr lParam</span>)</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">int</span> hKeyboardHook = <span class="number">0</span>; <span class="comment">//声明键盘钩子处理的初始值</span></span><br><span class="line">                                      <span class="comment">//值在Microsoft SDK的Winuser.h里查询</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">const</span> <span class="built_in">int</span> WH_KEYBOARD_LL = <span class="number">13</span>;   <span class="comment">//线程键盘钩子监听鼠标消息设为2，全局键盘监听鼠标消息设为13</span></span><br><span class="line">        HookProc KeyboardHookProcedure; <span class="comment">//声明KeyboardHookProcedure作为HookProc类型</span></span><br><span class="line">                                        <span class="comment">//键盘结构</span></span><br><span class="line">        [<span class="meta">StructLayout(LayoutKind.Sequential)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KeyboardHookStruct</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> vkCode;  <span class="comment">//定一个虚拟键码。该代码必须有一个价值的范围1至254</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> scanCode; <span class="comment">// 指定的硬件扫描码的关键</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> flags;  <span class="comment">// 键标志</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> time; <span class="comment">// 指定的时间戳记的这个讯息</span></span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> dwExtraInfo; <span class="comment">// 指定额外信息相关的信息</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用此功能，安装了一个钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">SetWindowsHookEx</span>(<span class="params"><span class="built_in">int</span> idHook, HookProc lpfn, IntPtr hInstance, <span class="built_in">int</span> threadId</span>)</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//调用此函数卸载钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">bool</span> <span class="title">UnhookWindowsHookEx</span>(<span class="params"><span class="built_in">int</span> idHook</span>)</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//使用此功能，通过信息钩子继续下一个钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">CallNextHookEx</span>(<span class="params"><span class="built_in">int</span> idHook, <span class="built_in">int</span> nCode, Int32 wParam, IntPtr lParam</span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 取得当前线程编号（线程钩子需要用到）</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;kernel32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">GetCurrentThreadId</span>(<span class="params"></span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//使用WINDOWS API函数代替获取当前实例的函数,防止钩子失效</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;kernel32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">GetModuleHandle</span>(<span class="params"><span class="built_in">string</span> name</span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 安装键盘钩子</span></span><br><span class="line">            <span class="keyword">if</span> (hKeyboardHook == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                KeyboardHookProcedure = <span class="keyword">new</span> HookProc(KeyboardHookProc);</span><br><span class="line">                hKeyboardHook = SetWindowsHookEx(WH_KEYBOARD_LL, KeyboardHookProcedure, GetModuleHandle(System.Diagnostics.Process.GetCurrentProcess().MainModule.ModuleName), <span class="number">0</span>);</span><br><span class="line">                <span class="comment">//hKeyboardHook = SetWindowsHookEx(WH_KEYBOARD_LL, KeyboardHookProcedure, Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]), 0);</span></span><br><span class="line">                <span class="comment">//************************************</span></span><br><span class="line">                <span class="comment">//键盘线程钩子</span></span><br><span class="line">                SetWindowsHookEx(<span class="number">13</span>, KeyboardHookProcedure, IntPtr.Zero, GetCurrentThreadId());<span class="comment">//指定要监听的线程idGetCurrentThreadId(),</span></span><br><span class="line">                                                                                               <span class="comment">//键盘全局钩子,需要引用空间(using System.Reflection;)</span></span><br><span class="line">                                                                                               <span class="comment">//SetWindowsHookEx( 13,MouseHookProcedure,Marshal.GetHINSTANCE(Assembly.GetExecutingAssembly().GetModules()[0]),0);</span></span><br><span class="line">                                                                                               <span class="comment">//</span></span><br><span class="line">                                                                                               <span class="comment">//关于SetWindowsHookEx (int idHook, HookProc lpfn, IntPtr hInstance, int threadId)函数将钩子加入到钩子链表中，说明一下四个参数：</span></span><br><span class="line">                                                                                               <span class="comment">//idHook 钩子类型，即确定钩子监听何种消息，上面的代码中设为2，即监听键盘消息并且是线程钩子，如果是全局钩子监听键盘消息应设为13，</span></span><br><span class="line">                                                                                               <span class="comment">//线程钩子监听鼠标消息设为7，全局钩子监听鼠标消息设为14。lpfn 钩子子程的地址指针。如果dwThreadId参数为0 或是一个由别的进程创建的</span></span><br><span class="line">                                                                                               <span class="comment">//线程的标识，lpfn必须指向DLL中的钩子子程。 除此以外，lpfn可以指向当前进程的一段钩子子程代码。钩子函数的入口地址，当钩子钩到任何</span></span><br><span class="line">                                                                                               <span class="comment">//消息后便调用这个函数。hInstance应用程序实例的句柄。标识包含lpfn所指的子程的DLL。如果threadId 标识当前进程创建的一个线程，而且子</span></span><br><span class="line">                                                                                               <span class="comment">//程代码位于当前进程，hInstance必须为NULL。可以很简单的设定其为本应用程序的实例句柄。threaded 与安装的钩子子程相关联的线程的标识符</span></span><br><span class="line">                                                                                               <span class="comment">//如果为0，钩子子程与所有的线程关联，即为全局钩子</span></span><br><span class="line">                                                                                               <span class="comment">//************************************</span></span><br><span class="line">                                                                                               <span class="comment">//如果SetWindowsHookEx失败</span></span><br><span class="line">                <span class="keyword">if</span> (hKeyboardHook == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Stop();</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;安装键盘钩子失败&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Stop</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="built_in">bool</span> retKeyboard = <span class="literal">true</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (hKeyboardHook != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                retKeyboard = UnhookWindowsHookEx(hKeyboardHook);</span><br><span class="line">                hKeyboardHook = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (!(retKeyboard)) <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;卸载钩子失败！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//ToAscii职能的转换指定的虚拟键码和键盘状态的相应字符或字符</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">ToAscii</span>(<span class="params"><span class="built_in">int</span> uVirtKey, //[<span class="keyword">in</span>] 指定虚拟关键代码进行翻译。</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">int</span> uScanCode, // [<span class="keyword">in</span>] 指定的硬件扫描码的关键须翻译成英文。高阶位的这个值设定的关键，如果是（不压）</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">byte</span>[] lpbKeyState, // [<span class="keyword">in</span>] 指针，以<span class="number">256</span>字节数组，包含当前键盘的状态。每个元素（字节）的数组包含状态的一个关键。如果高阶位的字节是一套，关键是下跌（按下）。在低比特，如果设置表明，关键是对切换。在此功能，只有肘位的CAPS LOCK键是相关的。在切换状态的NUM个锁和滚动锁定键被忽略。</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">byte</span>[] lpwTransKey, // [<span class="keyword">out</span>] 指针的缓冲区收到翻译字符或字符。</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="built_in">int</span> fuState</span>)</span>; <span class="comment">// [in] Specifies whether a menu is active. This parameter must be 1 if a menu is active, or 0 otherwise.</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取按键的状态</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">GetKeyboardState</span>(<span class="params"><span class="built_in">byte</span>[] pbKeyState</span>)</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">&quot;user32.dll&quot;</span>, CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">short</span> <span class="title">GetKeyState</span>(<span class="params"><span class="built_in">int</span> vKey</span>)</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_KEYDOWN = <span class="number">0x100</span>;<span class="comment">//KEYDOWN</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_KEYUP = <span class="number">0x101</span>;<span class="comment">//KEYUP</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_SYSKEYDOWN = <span class="number">0x104</span>;<span class="comment">//SYSKEYDOWN</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">const</span> <span class="built_in">int</span> WM_SYSKEYUP = <span class="number">0x105</span>;<span class="comment">//SYSKEYUP</span></span><br><span class="line"> </span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">int</span> <span class="title">KeyboardHookProc</span>(<span class="params"><span class="built_in">int</span> nCode, Int32 wParam, IntPtr lParam</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 侦听键盘事件</span></span><br><span class="line">            <span class="keyword">if</span> ((nCode &gt;= <span class="number">0</span>) &amp;&amp; (KeyDownEvent != <span class="literal">null</span> || KeyUpEvent != <span class="literal">null</span> || KeyPressEvent != <span class="literal">null</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                KeyboardHookStruct MyKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure(lParam, <span class="keyword">typeof</span>(KeyboardHookStruct));</span><br><span class="line">                <span class="comment">// raise KeyDown</span></span><br><span class="line">                <span class="keyword">if</span> (KeyDownEvent != <span class="literal">null</span> &amp;&amp; (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN))</span><br><span class="line">                &#123;</span><br><span class="line">                    Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;</span><br><span class="line">                    KeyEventArgs e = <span class="keyword">new</span> KeyEventArgs(keyData);</span><br><span class="line">                    KeyDownEvent(<span class="keyword">this</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//键盘按下</span></span><br><span class="line">                <span class="keyword">if</span> (KeyPressEvent != <span class="literal">null</span> &amp;&amp; wParam == WM_KEYDOWN)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">byte</span>[] keyState = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">256</span>];</span><br><span class="line">                    GetKeyboardState(keyState);</span><br><span class="line"> </span><br><span class="line">                    <span class="built_in">byte</span>[] inBuffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (ToAscii(MyKeyboardHookStruct.vkCode, MyKeyboardHookStruct.scanCode, keyState, inBuffer, MyKeyboardHookStruct.flags) == <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        KeyPressEventArgs e = <span class="keyword">new</span> KeyPressEventArgs((<span class="built_in">char</span>)inBuffer[<span class="number">0</span>]);</span><br><span class="line">                        KeyPressEvent(<span class="keyword">this</span>, e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">// 键盘抬起</span></span><br><span class="line">                <span class="keyword">if</span> (KeyUpEvent != <span class="literal">null</span> &amp;&amp; (wParam == WM_KEYUP || wParam == WM_SYSKEYUP))</span><br><span class="line">                &#123;</span><br><span class="line">                    Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;</span><br><span class="line">                    KeyEventArgs e = <span class="keyword">new</span> KeyEventArgs(keyData);</span><br><span class="line">                    KeyUpEvent(<span class="keyword">this</span>, e);</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果返回1，则结束消息，这个消息到此为止，不再传递。</span></span><br><span class="line">            <span class="comment">//如果返回0或调用CallNextHookEx函数则消息出了这个钩子继续往下传递，也就是传给消息真正的接受者</span></span><br><span class="line">            <span class="keyword">return</span> CallNextHookEx(hKeyboardHook, nCode, wParam, lParam);</span><br><span class="line">        &#125;</span><br><span class="line">        ~KeyboardHook()</span><br><span class="line">        &#123;</span><br><span class="line">            Stop();</span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用-方法"><a href="#调用-方法" class="headerlink" title="调用 方法"></a>调用 方法</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">hook_KeyDown</span>(<span class="params"><span class="built_in">object</span> sender, KeyEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="comment">//  这里写具体实现</span></span><br><span class="line">           <span class="keyword">if</span> (e.KeyCode.Equals(Keys.PrintScreen))</span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 开始监听</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startListen</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           myKeyEventHandeler = <span class="keyword">new</span> KeyEventHandler(hook_KeyDown);</span><br><span class="line">           k_hook.KeyDownEvent += myKeyEventHandeler;<span class="comment">//钩住键按下</span></span><br><span class="line">           k_hook.Start();<span class="comment">//安装键盘钩子</span></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 结束监听</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stopListen</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">if</span> (myKeyEventHandeler != <span class="literal">null</span>)</span><br><span class="line">           &#123;</span><br><span class="line">               k_hook.KeyDownEvent -= myKeyEventHandeler;<span class="comment">//取消按键事件</span></span><br><span class="line">               myKeyEventHandeler = <span class="literal">null</span>;</span><br><span class="line">               k_hook.Stop();<span class="comment">//关闭键盘钩子</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://www.cnblogs.com/87obxr/p/18199029">c# 获取当前方法事件对应的控件</a></li><li><a href="https://blog.csdn.net/txwtech/article/details/131445158">c#按键键盘事件监控上下左右和其它按键</a></li><li><a href="https://blog.csdn.net/weixin_44779911/article/details/129814815/">C#全局监听键盘事件</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">C# 程序编译时自动更新版本号方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="C#" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/C/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="键盘" scheme="https://zml3589110.github.io/categories/%E9%94%AE%E7%9B%98/"/>
    
    
    <category term="C#" scheme="https://zml3589110.github.io/tags/C/"/>
    
    <category term="键盘" scheme="https://zml3589110.github.io/tags/%E9%94%AE%E7%9B%98/"/>
    
    <category term="输入" scheme="https://zml3589110.github.io/tags/%E8%BE%93%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>ESP-IDF找不到example_connect</title>
    <link href="https://zml3589110.github.io/posts/2798208739.html"/>
    <id>https://zml3589110.github.io/posts/2798208739.html</id>
    <published>2024-07-20T02:26:20.000Z</published>
    <updated>2024-07-20T09:45:01.336Z</updated>
    
    <content type="html"><![CDATA[<h1 id="example-connect"><a href="#example-connect" class="headerlink" title="example_connect"></a>example_connect</h1><p>这是常用WIFI连接程序，内包含连接例程，一般调用之后即可连接，但是自己使用时找不到，其实是调用不对，要么通过 CmakeLists 修改，要么直接查找到这个文件夹并复制到 Components 下，最后自己使用的是第二个方法，复制过来当组件使用方便些，而且也能查看修改源码！</p><img src="/posts/2798208739/image-20240720102911131.png" class="" title="image-20240720102911131"><h1 id="来自网上解答"><a href="#来自网上解答" class="headerlink" title="来自网上解答"></a>来自网上解答</h1><h2 id="环境修改"><a href="#环境修改" class="headerlink" title="环境修改"></a>环境修改</h2><p>这个方法是能解决 .h 文件问题，但还是没法解决 c 中函数，因为并没有进行编译！<br>而且， .h 文件是在 $ENV{IDF_PATH}&#x2F;examples&#x2F;common_components&#x2F;protocol_examples_common&#x2F;include 下，应该是5.0后更改了放置地方，所以直接复制组件好一点！</p><ol><li>对于 ” 一直显示头文件protocol_examples_common.h找不到“<br>这个是你需要在你的项目的cmakelist里面加<br><code>set(EXTRA_COMPONENT_DIRS</code> $ENV{IDF_PATH}&#x2F;examples&#x2F;common_components&#x2F;protocol_examples_common)&#96;</li><li>对于你说的连接失败，应该是 http 地址或者端口不正确导致的。</li></ol><h2 id="参照官方编译"><a href="#参照官方编译" class="headerlink" title="参照官方编译"></a>参照官方编译</h2><p>注：官方给的 demo 是能正常编译，而且也没有放到组件！主要差别还是在 yml 文件下，尝试过直接复制 yml 文件到工程目录下还是不行，应该是哪里没有配置好！</p><p>我看了看官方给的那个例程，是要在idf_component.yml文件里面加入 protocol_examples_common:<br>path: ${IDF_PATH}&#x2F;examples&#x2F;common_components&#x2F;protocol_examples_common这个的，像我下面那个一样（不过我下面那个还加了摄像头需要的）</p><img src="/posts/2798208739/image-20240720103555377.png" class="" title="image-20240720103555377"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><ol><li><a href="https://github.com/espressif/esp-mdf/issues/288">使用官方例程下的simple_ota_example.c一直显示头文件protocol_examples_common.h找不到</a></li></ol><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ESP-IDF下 自己田间 WIFI 功能时 找不到 example_connect 相关内容</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="乐鑫" scheme="https://zml3589110.github.io/categories/%E4%B9%90%E9%91%AB/"/>
    
    <category term="ESP-IDF" scheme="https://zml3589110.github.io/categories/ESP-IDF/"/>
    
    <category term="Components" scheme="https://zml3589110.github.io/categories/Components/"/>
    
    <category term="CmakeLists" scheme="https://zml3589110.github.io/categories/CmakeLists/"/>
    
    <category term="example_connect" scheme="https://zml3589110.github.io/categories/example-connect/"/>
    
    
  </entry>
  
  <entry>
    <title>IGBT相关</title>
    <link href="https://zml3589110.github.io/posts/1225844187.html"/>
    <id>https://zml3589110.github.io/posts/1225844187.html</id>
    <published>2024-07-20T01:44:20.000Z</published>
    <updated>2024-07-20T09:45:01.323Z</updated>
    
    <content type="html"><![CDATA[<p><strong>常用查询网站：</strong></p><ol><li><a href="https://www.dianziaihaozhe.com/jingtiguan/">晶体管元件查询</a></li></ol><h1 id="infineon-英飞凌"><a href="#infineon-英飞凌" class="headerlink" title="infineon 英飞凌"></a><a href="https://www.infineon.com/cms/cn/">infineon 英飞凌</a></h1><h2 id="H20PR5"><a href="#H20PR5" class="headerlink" title="H20PR5"></a>H20PR5</h2><img src="/posts/1225844187/image-20240720095441287.png" class="" title="image-20240720095441287"><img src="/posts/1225844187/image-20240720095452603.png" class="" title="image-20240720095452603"><h2 id="H30PR5"><a href="#H30PR5" class="headerlink" title="H30PR5"></a>H30PR5</h2><img src="/posts/1225844187/image-20240720095336558.png" class="" title="image-20240720095336558"><img src="/posts/1225844187/image-20240720095347577.png" class="" title="image-20240720095347577"><h2 id="G50T60"><a href="#G50T60" class="headerlink" title="G50T60"></a>G50T60</h2><img src="/posts/1225844187/image-20240720095017557.png" class="" title="image-20240720095017557"><hr><h1 id="相关链接（侵删）"><a href="#相关链接（侵删）" class="headerlink" title="相关链接（侵删）"></a>相关链接（侵删）</h1><hr><center><font color=red>=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">收集IGBT相关资料</summary>
    
    
    
    <category term="硬件" scheme="https://zml3589110.github.io/categories/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="IGBT" scheme="https://zml3589110.github.io/categories/IGBT/"/>
    
    
    <category term="硬件" scheme="https://zml3589110.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
    <category term="IGBT" scheme="https://zml3589110.github.io/tags/IGBT/"/>
    
    <category term="英飞凌" scheme="https://zml3589110.github.io/tags/%E8%8B%B1%E9%A3%9E%E5%87%8C/"/>
    
    <category term="infineon" scheme="https://zml3589110.github.io/tags/infineon/"/>
    
    <category term="H20PR5" scheme="https://zml3589110.github.io/tags/H20PR5/"/>
    
    <category term="H30PR5" scheme="https://zml3589110.github.io/tags/H30PR5/"/>
    
    <category term="G50T60" scheme="https://zml3589110.github.io/tags/G50T60/"/>
    
  </entry>
  
</feed>
