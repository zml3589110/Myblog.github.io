<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵逸尘个人博客</title>
  
  <subtitle>记录工作生活</subtitle>
  <link href="https://zml3589110.github.io/atom.xml" rel="self"/>
  
  <link href="https://zml3589110.github.io/"/>
  <updated>2022-06-20T01:55:21.286Z</updated>
  <id>https://zml3589110.github.io/</id>
  
  <author>
    <name>ZhaoYichen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建个人图床(PicGo + GitHub)</title>
    <link href="https://zml3589110.github.io/posts/3258321867.html"/>
    <id>https://zml3589110.github.io/posts/3258321867.html</id>
    <published>2022-06-20T01:10:20.000Z</published>
    <updated>2022-06-20T01:55:21.286Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p><strong>这个方式来取代 七牛云+Mpic 方案</strong><br>我以前用的 七牛云 + Mpic 的组合，后来由于七牛云测试域名收回，我的图床就废了。以前的好多图片都埋藏在七牛云的服务器上，又气又难过。思考好一段时间，想自己搭服务，但成本有点高，备案的域名 + 服务器一年几百块。对于我这种不靠写字谋生的人而言没有必要，所以就停摆了一段时间。直到今天用 GitHub 搭起了图床，可以说非常开心了。所以跟大家分享一下。</p></blockquote><ul><li>该软件使用手册：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E">https://picgo.github.io/PicGo-Doc/zh/guide/#应用说明</a></li></ul><h1 id="一、下载-x2F-安装"><a href="#一、下载-x2F-安装" class="headerlink" title="一、下载&#x2F;安装"></a>一、下载&#x2F;安装</h1><ol><li>下载链接</li></ol><blockquote><p>PicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多</p></blockquote><p>参考文档提供: Win版下载链接：<a href="https://pan.baidu.com/share/init?surl=7KycPMoqNCnc1cR_yQO8nQ">百度云</a> 密码：PicG</p><p>git地址：<a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a></p><img src="https://img-blog.csdnimg.cn/1748132cebc0432a958938d33e8d917b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p><strong>下载后一路点安装即可</strong></p><ol start="2"><li>配置<blockquote><p><strong>仅使用 GitHub 做图床，所以 PicGo 设置仅选择GitHub图床</strong></p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/4280cca5c8dd47b799e89332ff72d9ec.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="GitHub-仓库设置"><a href="#GitHub-仓库设置" class="headerlink" title="GitHub 仓库设置"></a>GitHub 仓库设置</h1><blockquote><p><strong>流程：新建 public 仓库 -&gt; 创建 token -&gt; 复制 token 备用</strong></p></blockquote><ol><li>新建仓库</li></ol><p>点击 git 主页右上角的 + 创建 New repository；</p><img src="https://img-blog.csdnimg.cn/be35fc1137e64b09bd62dcaa382926c1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>填写仓库信息，例如我就创建了一个 cloudimg 的仓库。这里注意，仓库得设置为 Public 因为后面通过客户端访问算是外部访问，因此无法访问 Private ，这样的话图片传上来之后只能存储不能显示。所以要设置为 Public。</p><p>图一：</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIyNTE0LnBuZw"><p>图二：</p><img src="https://img-blog.csdnimg.cn/7db3e15ac0e5460fa29e1f7e080689f7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="2"><li>创建 token 并复制保存</li></ol><p>此时仓库已经建立，点击右上角头像，然后进入设置:</p><img src="https://img-blog.csdnimg.cn/5cef567c46634a14947158625fb5f0f2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>在页面最下找到 Developer settings，点击进入:</p><img src="https://img-blog.csdnimg.cn/b7e9dfe38ee14ebfb8a13c02398e853b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><p>创建 token:</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIzMzE3LnBuZw?x-oss-process=image/format,png"><p>填 description（也是随心填），勾选复选框 repo ，接着到页面底部 Generate token 就完成了：</p><p>设置一、</p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzE1NTIzMTQ5MDc3OTQucG5n?x-oss-process=image/format,png"><p>设置二、</p><img src="https://img-blog.csdnimg.cn/5b38543cd03b4418980b586628222fe7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5oiR5oOz5YW75Y-q5rGk5aeG54yr,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="3"><li>然后复制生成一串字符 token，这个 token 只出现一次，所以要保存一下（我一般记在微信收藏）</li></ol><blockquote><ul><li>点击生成之后Token只会出现一次，记得保存备用</li></ul></blockquote><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjIzOTAxLnBuZw"><h1 id="在PicGo中设置Github图库"><a href="#在PicGo中设置Github图库" class="headerlink" title="在PicGo中设置Github图库"></a>在PicGo中设置Github图库</h1><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjI0NDQzLnBuZw"><ul><li>仓库名 即你的仓库名（你的Github账户名&#x2F;刚才创建的仓库名）</li><li>分支名 默认 master</li><li>Token 就是刚刚从github复制的那一串字符</li><li>存储路径 这个可以填也可以不填，填了的话图片就上传到 git 中 data 这个文件夹</li><li>域名 <a href="https://raw.githubusercontent.com/yefcion/cloudimg/master%E8%BF%99%E4%B8%AA%E8%A6%81%E6%94%B9%E4%B8%80%E4%B8%8B">https://raw.githubusercontent.com/yefcion/cloudimg/master这个要改一下</a> 格式 <a href="https://raw.githubusercontent.com/[username]/[%E4%BB%93%E5%BA%93%E5%90%8D]/master">https://raw.githubusercontent.com/[username]/[仓库名]/master</a></li><li>自定义域名的作用是，在上传图片后成功后，PicGo会将“自定义域名+上传的图片名”生成的访问链接，放到剪切板上<a href="https://raw.githubusercontent.com/%E7%94%A8%E6%88%B7%E5%90%8D/RepositoryName/%E5%88%86%E6%94%AF%E5%90%8D%EF%BC%8C%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E5%8F%AF%E6%8C%89%E6%AD%A4%E5%A1%AB%E5%86%99%E3%80%82">https://raw.githubusercontent.com/用户名/RepositoryName/分支名，，自定义域名可按此填写。</a></li></ul><blockquote><p>**注：这里提供一个加速访问图片的方法：CDN加速，具体原理自行百度（我还不是很懂）<br>将上面的域名改为：<br>原 <a href="https://raw.githubusercontent.com/yefcion/cloudimg/master">https://raw.githubusercontent.com/yefcion/cloudimg/master</a><br>现 <a href="https://cdn.jsdelivr.net/gh/yefcion/cloudimg@master">https://cdn.jsdelivr.net/gh/yefcion/cloudimg@master</a><br>**</p></blockquote><p>然后点确定就可以了。</p><h1 id="接下来就可以正常使用了"><a href="#接下来就可以正常使用了" class="headerlink" title="接下来就可以正常使用了"></a>接下来就可以正常使用了</h1><ul><li><p>我们将图片复制到剪切板中，按我们所设置的快捷键，图片将自动上传到我们Github的仓库中</p></li><li><p>根据自己之前所选择的格式，图片的链接会自动复制到我们的剪切板中，等到图片上传完毕之后，我们直接Ctrl +V就好了</p></li><li><p>然后关于上传的快捷键设置。默认的是 Mac 按键，推荐改成 Ctrl + alt +c。</p></li></ul><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3llZmNpb24vUGljRGF0YS9tYXN0ZXIvaW1nLzIwMTkwMzExMjI0OTM1LnBuZw"><p>Typora软件和PicGo配合起来使用更佳，使用typora写完博客然后直接导入CSDN的编辑器中，真香</p><p><strong>本方案唯一缺点，不能私人。但是考虑到 GitHub 上传的图在列表里没法预览，应该没人会闲着没事翻记录。</strong></p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/yefcion/article/details/88412025">PicGo + GitHub 搭建个人图床工具</a></li><li><a href="https://blog.csdn.net/qq_43367829/article/details/104882071">PicGo+GitHub使用</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用 PicGo 和 GitHub 搭建属于自己的个人图床，预防使用网络图床导致链接失败</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="GitHub" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/GitHub/"/>
    
    <category term="PicGo" scheme="https://zml3589110.github.io/categories/PicGo/"/>
    
    
    <category term="图床" scheme="https://zml3589110.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="PicGo" scheme="https://zml3589110.github.io/tags/PicGo/"/>
    
    <category term="GitHub" scheme="https://zml3589110.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>VScode配置KEIL5编译下载</title>
    <link href="https://zml3589110.github.io/posts/3493436520.html"/>
    <id>https://zml3589110.github.io/posts/3493436520.html</id>
    <published>2022-06-18T07:55:20.000Z</published>
    <updated>2022-06-18T08:16:52.349Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>经常使用keil的人都知道keil的使用特别广泛，但是keil的自动补全功能极其难用。VScode功能十分强大，许多大佬为其编写插件供他人使用，利用好这些插件可以大大提高代码编写效率。最近发现了一个VScode可以调用KEIL编程的插件，使用起来非常方便。</p><h1 id="一、安装插件"><a href="#一、安装插件" class="headerlink" title="一、安装插件"></a>一、安装插件</h1><ol><li>点击拓展选项的图标</li></ol><img src="https://i0.hdslb.com/bfs/article/ee3c30d0c52a663e79e077f3abc93b8dc1f4f2a1.png@174w_107h_progressive.webp"><blockquote><p><strong>输入Chinese，进行安装，安装完成后界面就变成中文了。</strong></p></blockquote><img src="https://i0.hdslb.com/bfs/article/8781454b3adba17079f688b931915f584e8d9f46.png@942w_699h_progressive.webp"><ol start="2"><li>VScode中搜索插件Keil Assistant并安装。</li></ol><img src="https://img-blog.csdnimg.cn/20210717213624458.png"><h1 id="二、使用方法"><a href="#二、使用方法" class="headerlink" title="二、使用方法"></a>二、使用方法</h1><blockquote><p>插件下方介绍非常详细，并且都是中文的。</p></blockquote><img src="https://img-blog.csdnimg.cn/20210717213828397.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><ol><li>插件设置<blockquote><p>进入插件设置，添加Keil可执行文件的路径</p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/20210717214251906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><blockquote><p>如下图所示第一个是51单片机的路径，第二个选项是MDK的路径（也就是ARM核单片机的路径）</p></blockquote><img src="https://i0.hdslb.com/bfs/article/1372396b3c92e211ab8a538136e310a3b73688cf.png@942w_704h_progressive.webp"><blockquote><p>接下来就是填入路径，找到我们的keil软件选着文件所在位置</p></blockquote><img src="https://i0.hdslb.com/bfs/article/09bc99e665e38b29bb814e5deeb07277b93f6ac5.png@470w_938h_progressive.webp"><p>在安装位置找到 keil 的图标:</p><img src="https://i0.hdslb.com/bfs/article/2aa130c7fed5bebbbd3a922e39fd6e63474844bb.png@942w_548h_progressive.webp"><p>复制他的路径:</p><img src="https://i0.hdslb.com/bfs/article/3e288ef2cef0c3855e558e4890dca034ab682250.png@942w_45h_progressive.webp"><p>填入VScode(注意：要在刚才的路径后面添加UV4.exe的后缀):</p><img src="https://i0.hdslb.com/bfs/article/730c29528eef3c4c9aa5baf7eb9dc60146d553b7.png@939w_483h_progressive.webp"><p>至此Keil Assistant配置完成。注意我在keil 5中安装了51单片机的包，所以路径相同，实测若是安装keil 4如此添加路径是没有用的，所以要用他来写51单片机的需要安装keil 5的51的包。</p><ol start="2"><li>打开工程</li></ol><p>打开资源管理器，会出现KEIL UVISION PROJECT点击后面的打开keil工程按钮，选择你想打开的工程的**.uvprojx**文件。</p><img src="https://img-blog.csdnimg.cn/20210717214649138.png"><p><strong>下方会有编译，下载，重编译按钮。</strong></p><img src="https://img-blog.csdnimg.cn/20210717214748979.png"><h1 id="三、配置工程"><a href="#三、配置工程" class="headerlink" title="三、配置工程"></a>三、配置工程</h1><blockquote><p><strong>VScode打开keil工程会出现工程头文件、变量红色波浪线的情况，通过配置工程，可以解决问题。如果不想改的话，也可以不改。</strong></p></blockquote><ol><li>配置方法</li></ol><p>按ctrl+alt+P在搜索栏中搜索Edit configurations (UI)。</p><img src="https://img-blog.csdnimg.cn/20210717215342533.png"><p>进入配置界面，里面都是中文，仔细阅读可以理解。</p><img src="https://img-blog.csdnimg.cn/20210717215535865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p><strong>利用此插件便可以通过VScode调用KEIL编写代码。<br>最后推荐一个可以提高工程逼格的插件koroFileHeader<br>文件头注释模板，安装步骤同上，文件头内容可在插件配置中更改，并更新最后修改时间。<br>快捷键：ctrl+alt+i</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/2021071722393639.png"><img src="https://img-blog.csdnimg.cn/2021071722394671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDAxMjM1OQ==,size_16,color_FFFFFF,t_70"><blockquote><p>打开工程后注释乱码怎么解决:<br><strong>调整vscode的编码方式 和你的keil相同 一般为GB2312</strong></p></blockquote><p>VScode作为一款功能强大的文本编辑器它可以用来写任何的语言，有多种拓展可以供你来安装使用。它来写单片机是因为他的代码高亮、跳转、代码自动补全非常好用。比keil不知好用多少倍。但是若你要是调试单片机的话还是建议用keil（术业有专攻）仅仅将VScode作为一个文本编辑器来使用。使用时同时开启VScode和keil。用VScode来写代码，用keil进行调试。不要担心你在VScode中写的代码保存后会自动同步过去的，keil 中也是如此！</p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_44012359/article/details/118862954">VScode调用KEIL-MDK</a></li><li><a href="https://www.bilibili.com/read/cv14597116">VScode 配置 keil 5 环境</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过 VScode 插件 Keil Assistant 连接 KEIL 进行编译下载</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="KEIL" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/KEIL/"/>
    
    <category term="VScode" scheme="https://zml3589110.github.io/categories/VScode/"/>
    
    
    <category term="KEIL5" scheme="https://zml3589110.github.io/tags/KEIL5/"/>
    
    <category term="VScode" scheme="https://zml3589110.github.io/tags/VScode/"/>
    
    <category term="环境配置" scheme="https://zml3589110.github.io/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    
    <category term="Keil Assistant" scheme="https://zml3589110.github.io/tags/Keil-Assistant/"/>
    
  </entry>
  
  <entry>
    <title>KEIL5安装C51依赖</title>
    <link href="https://zml3589110.github.io/posts/2938783249.html"/>
    <id>https://zml3589110.github.io/posts/2938783249.html</id>
    <published>2022-06-18T07:34:20.000Z</published>
    <updated>2022-06-18T08:16:52.347Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>**问题描述：从KEIL4升级安装了KEIL5之后找不到 C51 相关设置，想创建89C51的工程却发现找不到89C51的芯片包 **</p></blockquote><h1 id="无法创建的原因"><a href="#无法创建的原因" class="headerlink" title="无法创建的原因"></a>无法创建的原因</h1><p>keil4通常用来开发51单片机项目，而keil5通常用来开发STM32项目，keil5中默认并没有51芯片库，这就导致了keil5创建工程时找不到89C51芯片。就像下图这样只有ARM和STM系列芯片。</p><img src="https://img-blog.csdnimg.cn/20210606213725369.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p><strong>真正原因在与keil5没有如下包（Legacy Device Database [no RTE]），如图:</strong></p><img src="https://img-blog.csdnimg.cn/20210606213852524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><h1 id="解决步骤"><a href="#解决步骤" class="headerlink" title="解决步骤"></a>解决步骤</h1><blockquote><p><strong>解决思路：使keil5集成51芯片库</strong></p></blockquote><ol><li><p>首先我们找到51芯片库的下载地址，去官网下载即可。<br>下载地址： <a href="https://www.keil.com/download/product/">https://www.keil.com/download/product/</a></p></li><li><p>进入官网后点击C51</p></li></ol><img src="https://img-blog.csdnimg.cn/20210606214158601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p><strong>进去后需要填写一下个人信息，我们看情况填写就行了。</strong></p><ol start="3"><li>点击这个C51V960A.EXE下载安装51芯片库</li></ol><img src="https://img-blog.csdnimg.cn/20210606214424233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><blockquote><p>下载完成后以管理员身份运行，点击 <strong>next</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20210606214650227.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"> <p>下一步确认自己keil5的根目录（一般默认是没问题的），Backup打勾后点击next</p><img src="https://img-blog.csdnimg.cn/20210606214813818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>下一步看情况填写:</p><p>&lt;src&#x3D;”<a href="https://img-blog.csdnimg.cn/20210606214844648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70&quot;&gt;">https://img-blog.csdnimg.cn/20210606214844648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70&quot;&gt;</a></p><p>然后点击next等待安装完成即可。注意安装前要关闭当前正在运行的keil5</p><ol start="4"><li>再次打开keil5创建工程</li></ol><p>点击project&gt;New xxxxxx创建工程，下拉菜单就出现了51单片机的芯片库</p><img src="https://img-blog.csdnimg.cn/20210606215219879.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>选中后可以直接在搜索框搜索AT89C51，或者找到Microchip展开第一个就是</p><img src="https://img-blog.csdnimg.cn/20210606215423315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzcyMTE2Mw==,size_16,color_FFFFFF,t_70"><p>点击OK之后51工程就创建成功了。</p><hr><blockquote><p><strong>说明：本文是收集参考网络文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_43721163/article/details/117637028">KEIL5安装C51依赖，解决KEIL5无法创建C51工程</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">为 KEIL5 安装 C51 依赖包</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="KEIL" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/KEIL/"/>
    
    
    <category term="KEIL5" scheme="https://zml3589110.github.io/tags/KEIL5/"/>
    
    <category term="C51" scheme="https://zml3589110.github.io/tags/C51/"/>
    
  </entry>
  
  <entry>
    <title>马自达钥匙技巧等</title>
    <link href="https://zml3589110.github.io/posts/264219034.html"/>
    <id>https://zml3589110.github.io/posts/264219034.html</id>
    <published>2022-06-10T06:27:20.000Z</published>
    <updated>2022-06-10T07:03:27.262Z</updated>
    
    <content type="html"><![CDATA[<h1 id="钥匙中止功能，很多老司机也不一定知道！"><a href="#钥匙中止功能，很多老司机也不一定知道！" class="headerlink" title="钥匙中止功能，很多老司机也不一定知道！"></a>钥匙中止功能，很多老司机也不一定知道！</h1><img src="https://mmbiz.qpic.cn/mmbiz_gif/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bBIxSWp437SeAhZadk5AVNqGdIk9G5BbRTOOsGPjvtVdwIkx2fictbIw/640?wx_fmt=gif&wxfrom=5&wx_lazy=1"><h2 id="钥匙中止功能的作用"><a href="#钥匙中止功能的作用" class="headerlink" title="钥匙中止功能的作用"></a>钥匙中止功能的作用</h2><blockquote><p>当车辆防盗系统检测到钥匙被遗落在车厢或后备箱后，钥匙中止功能会被激活。此时留在车内的钥匙功能会被临时性中止，导致无法启动发动机，从而降低车辆被盗风险。</p></blockquote><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bEcMkYUsGMJ8byhVL7icoo6GkZOUpEwicsZTgP4OcKhlK0Oodf9ofLZibw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><h2 id="钥匙中止功能的触发场景"><a href="#钥匙中止功能的触发场景" class="headerlink" title="钥匙中止功能的触发场景"></a>钥匙中止功能的触发场景</h2><ul><li>带高级遥控功能的钥匙，会在以下两种情况触发钥匙中止功能：<blockquote><p>所有车门被上锁，钥匙留在后备箱内且后备箱门关闭<br>在这种情况下，可以通过按下电子开启装置的方式打开后备箱并取出钥匙，但取出的钥匙功能会暂时停止。</p></blockquote></li></ul><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bfEN7hAic99GsU2CNbVBUqVXZ6RTZJic9ZRvmPibibJjjibzf4us5xuATcfg/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><ul><li>钥匙留在车厢内时，使用另外一把钥匙使所有车门和后备箱上锁<br>在这种情况下，打开车门取出钥匙后，其功能会暂时停止。</li></ul><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34bBEc7Iic3WfhCvfUnvGiaoCcSJbFrP0K3Plu3ZQkzn0ga1pAkab1XNCHw/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><p><strong>注：以上两种情况发生时，车辆都会发出约 10 秒的蜂鸣声，以通知驾驶员钥匙遗留在车内。</strong></p><h2 id="如何解除钥匙中止功能"><a href="#如何解除钥匙中止功能" class="headerlink" title="如何解除钥匙中止功能"></a>如何解除钥匙中止功能</h2><blockquote><p>取回遗留在车内的钥匙后，只需在车内按下钥匙的开锁按钮便可解除钥匙中止功能，解除后发动机便可启动。</p></blockquote><img src="https://mmbiz.qpic.cn/mmbiz_jpg/WCGkgwxeBkxSMib8cPxONAUfJ22d1t34b5N1Xe2eFefyg8GCNLGicvI5SCQzgCKsoJjibicsbz8icwH2wk87UpPaLlQ/640?wx_fmt=jpeg&wxfrom=5&wx_lazy=1&wx_co=1"><h1 id="优秀评论："><a href="#优秀评论：" class="headerlink" title="优秀评论："></a>优秀评论：</h1><h2 id="长按开锁键5-6秒，然后四窗就会自动下降"><a href="#长按开锁键5-6秒，然后四窗就会自动下降" class="headerlink" title="长按开锁键5-6秒，然后四窗就会自动下降"></a>长按开锁键5-6秒，然后四窗就会自动下降</h2><p>在生活中，我想大家都遇到过这样一种烦恼，比如车中后排坐了人，然后人都习惯性的下去了，车子也熄火了，准备离开时却发现后排车窗没关。这时又要重新开启车的电源关闭车窗好麻烦啊！<br>但是马自达却又这样的冷门又实用的功能:拿起车钥匙，长按开锁键5-6秒，然后四窗就会自动下降。长按钥匙关闭键5-6秒，然后你会发现四门又奇迹般升上去了。其实还有一个更冷门的功能，有兴趣的试一下:锁-解锁-锁(不用开电源)四门车窗会开一条缝，但是好像没什么卵用。不知道厂家的意图。发现之后，带女朋友或者撩妹子时对着车门用四窗智能升降法再加上马自达的颜值，妹子一定会刮目相看，逼格提升不少呢～</p><h2 id="触摸板点击停放音乐，驾驶位置的钥匙记忆功能"><a href="#触摸板点击停放音乐，驾驶位置的钥匙记忆功能" class="headerlink" title="触摸板点击停放音乐，驾驶位置的钥匙记忆功能"></a>触摸板点击停放音乐，驾驶位置的钥匙记忆功能</h2><p>我都想给大家来个视频教学 给大家展现一下我们小昂的隐藏功能到底有哪些[旺柴]<br>首先就是触控板，设置<del>系统设置</del>触控板~勾选，然后这个触控板就可以单击暂停音乐，双击下一首音乐，方便又好玩[旺柴]<br>还有一个就是钥匙记忆功能，当我们调整到适合自己的驾驶位置跟后视镜后，按住set键，听到滴的一声响后拿出车钥匙按下解锁键，钥匙记忆功能就设置成功了[鼓掌]之后不管位置怎么调，只要我拿着设置过的钥匙解锁打开车门，都会重新调整到我自己的位置上！[旺柴]牛不牛🐮<br>总之 只要夸马自达的我们就是好朋友👬</p><h2 id="中控黑屏重启"><a href="#中控黑屏重启" class="headerlink" title="中控黑屏重启"></a>中控黑屏重启</h2><p>我们都知道有的导航会在使用时突然死机或者黑屏，然后就不知道怎么办，很麻烦！要是在高速死机黑屏真的对于不认识路又靠车上导航的人来说要哭了。马自达针对这个有特殊设计的！在中控台有几个功能键，同时长按音乐键和最右的导航键可以重启。</p><h2 id="保养提醒关闭"><a href="#保养提醒关闭" class="headerlink" title="保养提醒关闭"></a>保养提醒关闭</h2><p>马三车主报道，保养将至的时候只要开车总会跳出来提示，这个时候可以将大圆旋钮往左一掰，就可以取消了，不过不要忘记按时去保养哦[转圈]</p><h2 id="车钥匙控制升降窗户，自动启停不用关"><a href="#车钥匙控制升降窗户，自动启停不用关" class="headerlink" title="车钥匙控制升降窗户，自动启停不用关"></a>车钥匙控制升降窗户，自动启停不用关</h2><p>杠五黑骑士车主报道，分享两个很有用但大多数车主不知道的小技巧。一是车钥匙控制升降窗户。长按钥匙锁车键，可以自动升窗；长按钥匙解锁键，可以自动降窗，升降幅度以按钥匙时长随心控制，夏天散热必备神器，优雅降温！二是自动启停不用关。轻踩刹车刹住后，istop灯闪烁，松开刹车，车停住了，但是不会熄火，如果需要熄火再深踩一脚刹车即可。如果需要直接熄火可以直接重踩刹车。</p><h2 id="安全带高度调节，后排座椅放倒"><a href="#安全带高度调节，后排座椅放倒" class="headerlink" title="安全带高度调节，后排座椅放倒"></a>安全带高度调节，后排座椅放倒</h2><p>1、安全带高度可手动调节。<br>2、按两下锁车键可以寻车。<br>3、长按开锁按键，所有车窗和天窗同时打开。长按锁车按键，所有车窗和天窗关闭。<br>4、钥匙没电时，可以拔出机械钥匙打开车门，把有马自达车标的地方贴在一键启动按钮上，即可识别车钥匙打火。<br>5、汽车行驶中落锁功能可在汽车电脑的设置中设置。<br>6、汽车后排座椅可放倒，可应急使用，以及用来休息。</p><h2 id="儿童锁功能开启方式"><a href="#儿童锁功能开启方式" class="headerlink" title="儿童锁功能开启方式"></a>儿童锁功能开启方式</h2><p>“儿童锁”这个功能设置的非常好，打开此功能后，后排车门只能从车外打开，可以避免发生一些意外，保障后排儿童的安全。具体操作位置在后排副驾一侧的门上，有一个小圆孔，通过旋转孔内的小孔槽，即可开启&#x2F;关闭儿童锁。</p><h2 id="行车落锁功能"><a href="#行车落锁功能" class="headerlink" title="行车落锁功能"></a>行车落锁功能</h2><p>行车落锁🔒 可以进行手工设置和悦联系统设置。<br>下面是手工设置方法哦！<br>自动落锁5种模式先选好其中一个。<br>1：自动车门上锁功能将失效。<br>2：当车速为20km&#x2F;h或更高时速，则所有车门和后舱门将自动上锁。<br>3：出厂设定，当车速为20km&#x2F;h或更高时速，则所有车门和后备舱门将自动上锁。当点火开关从ON切换至OFF位置时，所有车门和后舱门将开锁。<br>4：当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动上锁。<br>5：当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动上锁。当点火开关切换至ON且换挡杆从驻车档（P）切换至其它档位时，所有车门和后舱门将自动开锁。<br>操作方法：<br>1.安全停放车辆所有车门必须关闭状态<br>2.将点火开关切换至on档<br>3.将点火开关切换至on档20秒钟内按住驾驶员车门门锁开关上的锁侧，然后约8秒钟后应听到哗的一声。<br>4.按下车门门锁开锁侧，所按次数与选择功能编号相同即可。<br>5.变更功能设定后三秒钟，将根据所选的功能编号，蜂鸣器响声几次。</p><h2 id="方向盘锁死"><a href="#方向盘锁死" class="headerlink" title="方向盘锁死"></a>方向盘锁死</h2><p>方向盘锁死，点不着火，按发动，灯闪烁后就不再反应。这时，需要将钥匙靠近启动按钮，同时手抓牢方向盘，点击启动的同时稍用力转动方向盘即可解锁。之前昂克赛拉发生过几次，用此方法屡试不爽</p><h2 id="重启系统，倒车静音，显示时间"><a href="#重启系统，倒车静音，显示时间" class="headerlink" title="重启系统，倒车静音，显示时间"></a>重启系统，倒车静音，显示时间</h2><p>MZD CONNECT马自达悦联系统懂你又贴心，自带 “隐形”重启按钮，只要将“音乐键”与“导航键”同时按下3秒，即可优雅的将死机的系统重启，而不必停车熄火再着车这些繁琐举动。<br>贴心的并不仅在重启按钮上，人性化方面也做到了细致的考虑。倒车时如果音响声音过大影响倒车雷达蜂鸣警告音的收听，可在车辆静止状态短按指挥键声音旋钮，使音响静音，不影响倒车雷达蜂鸣警告音的收听。<br>除此之外，悦联系统还可变身成为一台数字时钟，只需长按3秒音量旋钮就会关闭悦联系统，只显示时间。</p><h2 id="遥控钥匙匹配座椅-设置迎宾模式"><a href="#遥控钥匙匹配座椅-设置迎宾模式" class="headerlink" title="遥控钥匙匹配座椅,设置迎宾模式"></a>遥控钥匙匹配座椅,设置迎宾模式</h2><p>遥控钥匙匹配座椅，设置迎宾模式。首先将座椅调至合适上车位置，按遥控钥匙的解锁键，此时座椅默认为遥控钥匙1上车位置，然后将座椅调至合适驾驶位置，按设置并确认1位置，这样就设置了主驾驶迎宾模式。下次开车门主驾座椅就会自动调整到合适上车位置，到了驾驶位后按1，自动调整到驾驶位置。如有不正确，请指教</p><h2 id="马三天窗透气模式"><a href="#马三天窗透气模式" class="headerlink" title="马三天窗透气模式"></a>马三天窗透气模式</h2><p>昨天在抖音刷到马自达的视频，才知道原来马三的天窗按键往前面推是天窗透气的模式[捂脸][捂脸]</p><h2 id="自适应智能大灯"><a href="#自适应智能大灯" class="headerlink" title="自适应智能大灯"></a>自适应智能大灯</h2><p>很贴心的自适应智能大灯<br>细心的马自达车主会发现，大灯会自动调节高度，它会根据坐上的人调节，是不是很智能。如果感觉不到的车主，可以把车开到墙边，坐上人就很明显了。还有不知道你们发现没有，当你在上坡时或者下坡时灯光会根据路段的变化而变化，下坡会把灯光往下聚集，因为在马自达的左后悬挂下有一个接收感应数据的随动传感器，连接部分的是一节球头，当车辆上坡车的重心在车尾，后悬挂下摆臂弹簧弹起，球头杆受感应，纵向角度拉长。由传感器传输数据到ecu再传输到大灯模组控制单元根据数据调整光聚(下坡同理)</p><h2 id="CX5锁车，车尾门电子锁"><a href="#CX5锁车，车尾门电子锁" class="headerlink" title="CX5锁车，车尾门电子锁"></a>CX5锁车，车尾门电子锁</h2><p>1。CX5停车按下一键启动熄火后，发现后面2个车窗没关，不用再按一键启动通电后升玻璃，只要4个车门没有开车门的动作，就可以直接在主驾驶升车窗玻璃，如果乘客已经开车门，下车后长按遥控器锁车键可以自动关闭4门车窗。相反长按解锁键自动降下车窗。<br>2。车尾门开门把手右边10厘米，有个电子锁车按钮(只能锁，不能开)<br>3。后排座椅靠背有2档可调，跑长途坐累了只需要在靠背上端把塑料抠手抬一下即可往后放躺几度，长途更舒适。<br>4。后挡除霜开关即后视镜除霜开关。两者同一个开关，很多新车主不知道。<br>5。大灯高度调节是自动的。点火后，行车电脑会根据当前车重自动调节高低，当然也可以打开机盖用一把十字起，垂直插入大灯后方的圆孔里自己调节。<br>6。车机悦联系统是可以播放无损格式音乐的。自己用音乐app下载FLAC无损格式，再用小程序改后缀名为.MP3，车机即可识别播放，建议用SD卡，可腾个USB接口出来。<br>7。建议车主到当地4S店加装胎压显示模块，右视辅助，电动尾门一脚踢开关。这3个功能非常实用。</p><h2 id="音乐功能"><a href="#音乐功能" class="headerlink" title="音乐功能"></a>音乐功能</h2><p>令天发现了马三的隐藏小功能，当音乐在播放时候轻点一下音乐就会暂停，点俩下就会换下一首！功能虽小但是很实用，驾驶时不用分心了！车行千里，安全第一！为马三点赞！</p><h2 id="放倒后排座椅，钥匙无法开门启动"><a href="#放倒后排座椅，钥匙无法开门启动" class="headerlink" title="放倒后排座椅，钥匙无法开门启动"></a>放倒后排座椅，钥匙无法开门启动</h2><p>次世代马自达3<br>在副驾驶后排位置，找到隐藏开关，扣开顺着箭头的方向掰动按键，这样就能放到后排座椅了。<br>当遥控钥匙无法开门时，用机械钥匙，拉开门把手，一拧门就开了。<br>车辆挂P挡时候再按键的上面有盖子，扣开，用坚硬的物体捅下，就能解锁推车了。</p><h2 id="智能钥匙的功能："><a href="#智能钥匙的功能：" class="headerlink" title="智能钥匙的功能："></a>智能钥匙的功能：</h2><p>1、携带钥匙贴近车辆，触模主驾驶车门把手的感应区，可以智能开启或锁止车门。<br>2、遥控钥匙失灵或电池没电，可以打开隐藏的钥匙手动开锁，进入车内。<br>3、智能钥匙无电，将钥匙贴在方向盘右侧下面带有钥匙标志的感应区，可以启动车辆。<br>4、停车熄火后，长按锁止键，可以一键升窗或落窗。<br>5、长按带有背箱开启标志的按键，可以开启或关闭后备箱。<br>6、携带钥匙靠近车辆，用脚扫扫后导流板下面，可以感应开启后备箱。</p><h2 id="座椅迎宾功能"><a href="#座椅迎宾功能" class="headerlink" title="座椅迎宾功能"></a>座椅迎宾功能</h2><p>座椅迎宾功能!有电动座椅这项功能的车主可以看下说明手册，只要调节好自己的座椅，后视镜，储存激活。如果有人开了你的车，你上车还要调整你舒适的坐姿，这个时候只需要电子钥匙在身边，使用无钥匙进入，打开车门，你会发现座椅和后视镜会自动的在调整，调整到你设置好的坐姿和后视镜角度!</p><h2 id="无钥匙进入功能失灵各种情况"><a href="#无钥匙进入功能失灵各种情况" class="headerlink" title="无钥匙进入功能失灵各种情况"></a>无钥匙进入功能失灵各种情况</h2><p>锁车自动落锁功能需要在中控屏幕设置打开离车落锁功能，注意次时代无钥匙进入需要下车关门，并且出现滴的一声才会自动落锁！<br>分析无钥匙进入功能失灵各种情况：<br>可能会出现自动落锁（下车自动锁车）失灵的操作：<br>0.钥匙进入了省电模式（一般是这个原因的多）-退出即可<br>1.主副驾驶门不是最后一个关闭<br>2.车门，后尾箱没有关闭<br>3.副驾驶上的门把手有人在摸着不放<br>4.雨天门把手湿了<br>5.把手插进门把手里面关门<br>6.钥匙套是金属的<br>7.钥匙距离过远<br>8.拉开车门，短时间内又关车门<br>9.钥匙电量不足<br>可能会出现无钥匙进入（上车自动解锁）失灵的操作:<br>1.钥匙进入了省电模式-退出即可<br>2.上车的时候副驾驶比你先摸门把手<br>3.没有把手插入门把手里面拉<br>4.门把手有水<br>5.钥匙电量不足<br>6.钥匙套是金属的<br>7.钥匙距离过远</p><h2 id="儿童锁"><a href="#儿童锁" class="headerlink" title="儿童锁"></a>儿童锁</h2><p>最实用的功能莫过于左右后车门的儿童锁了，别看只是那一点点的白色小按钮，安全作用不言而喻，孩子玩嗨了，上车下车就会把安全抛之脑后，等红绿灯时也不用担心她们随意下车，很安全的设计！</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://mp.weixin.qq.com/s/I-e1iIVbQKoBonOJr3t7Kg">钥匙中止功能，很多老司机也不一定知道！</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">收集各类马自达钥匙技巧</summary>
    
    
    
    <category term="生活技能" scheme="https://zml3589110.github.io/categories/%E7%94%9F%E6%B4%BB%E6%8A%80%E8%83%BD/"/>
    
    <category term="马自达" scheme="https://zml3589110.github.io/categories/%E9%A9%AC%E8%87%AA%E8%BE%BE/"/>
    
    
    <category term="汽车" scheme="https://zml3589110.github.io/tags/%E6%B1%BD%E8%BD%A6/"/>
    
    <category term="马自达" scheme="https://zml3589110.github.io/tags/%E9%A9%AC%E8%87%AA%E8%BE%BE/"/>
    
    <category term="生活类" scheme="https://zml3589110.github.io/tags/%E7%94%9F%E6%B4%BB%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>批处理常用命令总结 - 批处理命令简介(转载)</title>
    <link href="https://zml3589110.github.io/posts/1240814313.html"/>
    <id>https://zml3589110.github.io/posts/1240814313.html</id>
    <published>2022-06-10T06:20:20.000Z</published>
    <updated>2022-06-10T07:03:27.267Z</updated>
    
    <content type="html"><![CDATA[<h1 id="批处理常用命令总结-批处理命令简介"><a href="#批处理常用命令总结-批处理命令简介" class="headerlink" title="批处理常用命令总结 - 批处理命令简介"></a>批处理常用命令总结 - 批处理命令简介</h1><h3 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h3><p>打开回显或关闭请求回显功能，或显示消息。如果没有任何参数，echo 命令将显示当前回显设置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo [&#123;on|off&#125;] [message]</span><br><span class="line">Sample：@echo off &#x2F; echo hello world</span><br></pre></td></tr></table></figure><p>在实际应用中我们会把这条命令和重定向符号（也称为管道符号，一般用<code>&gt;</code> <code>&gt;&gt;</code> <code>^</code>）结合来实现输入一些命令到特定的文件中。</p><h3 id="rem"><a href="#rem" class="headerlink" title="rem"></a>rem</h3><p>注释命令，类似于在C语言中的<code>/*--------*/</code>，它并不会被执行，只是起一个注释的作用，便于别人阅读和你自己日后修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Rem Message</span><br><span class="line">Sample：@Rem Here is the description.</span><br></pre></td></tr></table></figure><h3 id="pause"><a href="#pause" class="headerlink" title="pause"></a>pause</h3><p>暂停命令。运行 Pause 命令时，将显示下面的消息：<code>Press any key to continue. . .(或：请按任意键继续. . .)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Sample：</span><br><span class="line">@echo off</span><br><span class="line">:begin</span><br><span class="line">copy G:*.* d：&#x2F;back</span><br><span class="line">echo 请插入另一张光盘...</span><br><span class="line">pause</span><br><span class="line">goto begin</span><br></pre></td></tr></table></figure><p>在这个例子中，驱动器 G 中磁盘上的所有文件均复制到d:&#x2F;back中。显示的注释提示您将另一张光盘盘放入驱动器 G 时，pause 命令会使程序挂起，以便您更换光盘，然后按任意键继续处理。</p><h3 id="call"><a href="#call" class="headerlink" title="call"></a>call</h3><p>从一个批处理程序调用另一个批处理程序，并且不终止父批处理程序。call 命令接受用作调用目标的标签。如果在脚本或批处理文件外使用 Call，它将不会在命令行起作用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">call [[Drive:][Path] FileName ] [:label [arguments]]</span><br><span class="line">参数</span><br><span class="line">[Drive:&#125;[Path] FileName</span><br></pre></td></tr></table></figure><p>指定要调用的批处理程序的位置和名称。</p><h3 id="start-命令"><a href="#start-命令" class="headerlink" title="start 命令"></a>start 命令</h3><p>调用外部程序，所有的DOS命令和命令行程序都可以由start命令来调用。 如：start calc.exe 即可打开Windows的计算器。</p><ul><li><p>常用参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MIN 开始时窗口最小化</span><br><span class="line">SEPARATE 在分开的空间内开始 16 位 Windows 程序</span><br><span class="line">HIGH 在 HIGH 优先级类别开始应用程序</span><br><span class="line">REALTIME 在 REALTIME 优先级类别开始应用程序</span><br><span class="line">WAIT 启动应用程序并等候它结束</span><br><span class="line">parameters 这些为传送到命令&#x2F;程序的参数</span><br></pre></td></tr></table></figure></li></ul><p>执行的应用程序是 32-位 GUI 应用程序时，CMD.EXE 不等应用程序终止就返回命令提示。如果在命令脚本内执行，该新行为则不会发生。</p><h3 id="goto"><a href="#goto" class="headerlink" title="goto"></a>goto</h3><p>跳转命令。程序指针跳转到指定的标签，从标签后的第一条命令开始继续执行批处理程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">goto label （label是参数，指定所要转向的批处理程序中的行。）</span><br><span class="line">Sample：</span><br><span class="line">if &#123;%1&#125;&#x3D;&#x3D;&#123;&#125; goto noparms</span><br><span class="line">if &#123;%2&#125;&#x3D;&#x3D;&#123;&#125; goto noparms（如果这里的if、%1、%2你不明白的话，先跳过去，后面会有详细的解释</span><br><span class="line">。）</span><br><span class="line">@Rem check parameters if null show usage</span><br><span class="line">:noparms</span><br><span class="line">echo Usage: monitor.bat ServerIP PortNumber</span><br><span class="line">goto end</span><br></pre></td></tr></table></figure><p>标签的名字可以随便起，但是最好是有意义的字母啦，字母前加个：用来表示这个字母是标签，goto命令就是根据这个：来寻找下一步跳到到那里。最好有一些说明这样你别人看起来才会理解你的意图啊。</p><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><p>显示、设置或删除变量。</p><p>显示变量：set 或 set s 前者显示批处理当前已定义的所有变量及其值，后者显示所有以s开头的变量及值。</p><p>设置变量：set aa&#x3D;abcd 此句命令便可向变量aa赋值abcd。</p><p>如果变量aa已被定义，则aa的值被修改为abcd；若aa尚未定义，则此句命令即可定义新的变量aa，同时为变量aa赋予初始值abcd。</p><p>删除变量：set aa&#x3D; 此句命令即可删除变量aa。若变量aa已被定义，则删除变量aa；若aa尚未定义，则此句命令为实质意义。</p><p>需要说明的是，批处理中的变量是不区分类型的，不需要像C语言中的变量那样还要区分int、float、char等。比如执行set aa&#x3D;345后，变量aa的值既可以被视为数字345，也可以被视为字符串345。</p><p>set命令具有扩展功能，如用作交互输入、字符串处理、数值计算等，属于高级命令范畴。</p><h3 id="批处理常用命令及用法大全"><a href="#批处理常用命令及用法大全" class="headerlink" title="批处理常用命令及用法大全"></a>批处理常用命令及用法大全</h3><p>阅读下面文字需要一定的dos基础概念，象：盘符、文件、目录(文件夹)、子目录、根目录、当前目录</p><p>每个命令的完整说明请加 &#x2F;? 参数参考微软的帮助文档可以看到，在 &#x2F;? 帮助里，”命令扩展名”一词会经常出现”命令扩展名”是指相对于win98的dos版本而言，每个命令新增的功能命令测试环境win2000proSP4win98的命令功能太少，就不作研究了。</p><p>注：如果对某一命令还不是很熟悉，可以在命令行窗口下输入：命令名&#x2F;?的方式来获得帮助。</p><p>例如：对dir命令的应用不熟悉，可以在命令行窗口下输入：<code>dir /?</code></p><ul><li><p>echo 和 @回显控制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@                    #关闭单行回显</span><br><span class="line">echo off             #从下一行开始关闭回显</span><br><span class="line">@echo off            #从本行开始关闭回显。一般批处理第一行都是这个</span><br><span class="line">echo on              #从下一行开始打开回显</span><br><span class="line">echo                 #显示当前是 echo off 状态还是 echo on 状态</span><br><span class="line">echo.                #输出一个&quot;回车换行&quot;，一般就是指空白行</span><br><span class="line">echo hello world     #输出hello world</span><br></pre></td></tr></table></figure></li></ul><p>“关闭回显”是指运行批处理文件时，不显示文件里的每条命令，只显示运行结果批处理开始和结束时，系统都会自动打开</p><ul><li>errorlevel程序返回码</li></ul><p>echo %errorlevel%每个命令运行结束，可以用这个命令行格式查看返回码用于判断刚才的命令是否执行成功默认值为0，</p><p>一般命令执行出错会设 errorlevel 为1</p><ul><li><p>dir显示目录中的文件和子目录列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dir                 #显示当前目录中的文件和子目录</span><br><span class="line">dir &#x2F;a              #显示当前目录中的文件和子目录，包括隐藏文件和系统文件</span><br><span class="line">dir c: &#x2F;a:d         #显示 C 盘当前目录中的目录</span><br><span class="line">dir c:&#x2F; &#x2F;a:-d       #显示 C 盘根目录中的文件dir d:&#x2F;mp3 &#x2F;b&#x2F;p     #逐屏显示 d:&#x2F;mp3 目录里的文件，只显示文件名，不显示时间和大小</span><br><span class="line">dir *.exe &#x2F;s        #显示当前目录和子目录里所有的.exe文件其中 * 是通配符，代表所有的文件名，还一个通配符 ? 代表一个</span><br><span class="line">                    #任意字母或汉字如 c*.* 代表以 c 开头的所有文件?.exe 代表所有文件名是一个字母的.exe文件如果指定的目录或文件</span><br><span class="line">                    #不存在，将返回 errorlevel 为1;</span><br><span class="line"></span><br><span class="line"># 每个文件夹的 dir 输出都会有2个子目录 . 和 ... 代表当前目录.. 代表当前目录的上级目录</span><br><span class="line">dir .               #显示当前目录中的文件和子目录</span><br><span class="line">dir ..              #显示当前目录的上级目录中的文件和子目录</span><br></pre></td></tr></table></figure></li></ul><p>其它参数可参考 dir &#x2F;?</p><ul><li><p>cd更改当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd mp3              #进入当前目录中的mp3 目录</span><br><span class="line">cd ..               #进入当前目录中的上级目录</span><br><span class="line">cd&#x2F;                 #进入根目录</span><br><span class="line">cd                  #显示当前目录</span><br><span class="line">cd &#x2F;d d:&#x2F;mp3        #可以同时更改盘符和目录</span><br><span class="line">cd &quot;Documents and Settings&quot;&#x2F;All users文件名带空格，路径前需要加上引号！！如果更改到的目录不存在，则出错返</span><br></pre></td></tr></table></figure></li><li><p>md创建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">md abc              #在当前目录里建立子目录 abc</span><br><span class="line">md d:&#x2F;a&#x2F;b&#x2F;c         #如果 d:&#x2F;a 不存在，将会自动创建</span><br></pre></td></tr></table></figure></li><li><p>rd删除目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rd abc              #删除当前目录里的 abc 子目录，要求为空目录</span><br><span class="line">rd &#x2F;s&#x2F;q d:&#x2F;temp     #删除 d:&#x2F;temp 文件夹及其子文件夹和文件，不需要按 Y 确认</span><br></pre></td></tr></table></figure></li><li><p>del删除文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">del d:&#x2F;test.txt     #删除指定文件，不能是隐藏、系统、只读文件</span><br><span class="line">del *.*删除当前目录里的所有文件，不包括隐藏、系统、只读文件，要求按 Y 确认</span><br><span class="line">del &#x2F;q&#x2F;a&#x2F;f d:&#x2F;temp&#x2F;*.*删除 d:&#x2F;temp 文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录</span><br><span class="line">del &#x2F;q&#x2F;a&#x2F;f&#x2F;s d:&#x2F;temp&#x2F;*.*删除 d:&#x2F;temp 及子文件夹里面的所有文件，包括隐藏、只读、系统文件，不包括子目录</span><br></pre></td></tr></table></figure></li><li><p>ren文件重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ren 1.txt 2.bak     #把 1.txt 更名为 2.bak</span><br><span class="line">ren *.txt *.ini     #把当前目录里所有.txt文件改成.ini文件</span><br><span class="line">ren d:&#x2F;temp tmp     #支持对文件夹的重命名</span><br></pre></td></tr></table></figure></li><li><p>cls清屏</p></li><li><p>type显示文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type c:&#x2F;boot.ini    #显示指定文件的内容，程序文件一般会显示乱码</span><br><span class="line">type *.txt          #显示当前目录里所有.txt文件的内容</span><br></pre></td></tr></table></figure></li><li><p>copy拷贝文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">copy c:&#x2F;test.txt d:&#x2F;复制 c:&#x2F;test.txt 文件到 d:&#x2F;</span><br><span class="line">copy c:&#x2F;test.txt d:&#x2F;test.bak复制 c:&#x2F;test.txt 文件到 d:&#x2F; ，并重命名为 test.bak</span><br><span class="line">copy c:&#x2F;*.*复制 c:&#x2F; 所有文件到当前目录，不包括隐藏文件和系统文件不指定目标路径，则默认目标路径为当前目录</span><br><span class="line">copy con test.txt从屏幕上等待输入，按 Ctrl+Z 结束输入，输入内容存为test.txt文件con代表屏幕，prn代表打印机，nul代表空设备</span><br><span class="line">copy 1.txt + 2.txt 3.txt合并 1.txt 和 2.txt 的内容，保存为 3.txt 文件如果不指定 3.txt ，则保存到 1.txt</span><br><span class="line">copy test.txt +复制文件到自己，实际上是修改了文件日期</span><br></pre></td></tr></table></figure></li><li><p>title设置cmd窗口的标题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title 新标题        #可以看到cmd窗口的标题栏变了</span><br></pre></td></tr></table></figure></li><li><p>ver显示系统版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">14 label 和 vol设置卷标</span><br><span class="line">vol                 #显示卷标</span><br><span class="line">label               #显示卷标，同时提示输入新卷标</span><br><span class="line">label c:system      #设置C盘的卷标为 system</span><br></pre></td></tr></table></figure></li><li><p>pause暂停命令</p></li></ul><p>运行该命令时，将显示消息：<code>请按任意键继续 . . .</code>，一般用于看清楚屏幕上显示的内容</p><ul><li>rem 和 ::注释命令</li></ul><p>注释行不执行操作</p><ul><li><p>date 和 time日期和时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">date          #显示当前日期，并提示输入新日期，按&quot;回车&quot;略过输入</span><br><span class="line">date&#x2F;t        #只显示当前日期，不提示输入新日期</span><br><span class="line">time          #显示当前时间，并提示输入新时间，按&quot;回车&quot;略过输入</span><br><span class="line">time&#x2F;t        #只显示当前时间，不提示输入新时间</span><br></pre></td></tr></table></figure></li><li><p>goto 和 :跳转命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:label        #行首为:表示该行是标签行，标签行不执行操作</span><br><span class="line">goto label    #跳转到指定的标签那一行</span><br></pre></td></tr></table></figure></li><li><p>find (外部命令)查找命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find &quot;abc&quot; c:&#x2F;test.txt在 c:&#x2F;test.txt 文件里查找含 abc 字符串的行如果找不到，将设 errorlevel 返回码为1</span><br><span class="line">find &#x2F;i &quot;abc&quot; c:&#x2F;test.txt查找含 abc 的行，忽略大小写</span><br><span class="line">find &#x2F;c &quot;abc&quot; c:&#x2F;test.txt显示含 abc 的行的行数</span><br></pre></td></tr></table></figure></li><li><p>more (外部命令)逐屏显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more c:&#x2F;test.txt    #逐屏显示 c:&#x2F;test.txt 的文件内容</span><br></pre></td></tr></table></figure></li><li><p>tree显示目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree d:&#x2F;            #显示D盘的文件目录结构</span><br></pre></td></tr></table></figure></li><li><p>&amp;顺序执行多条命令，而不管命令是否执行成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c: &amp; cd&#x2F; &amp; dir &#x2F;w相当于把下面3行命令写到1行去了c:cd&#x2F;dir &#x2F;w</span><br></pre></td></tr></table></figure></li><li><p>&amp;&amp;顺序执行多条命令，当碰到执行出错的命令后将不执行后面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f: &amp;&amp; cd&#x2F; &amp;&amp; dir &gt;c:&#x2F;test.txt注意如果f盘不存在，那么后面2条命令将不会执行</span><br><span class="line">find &quot;ok&quot; c:&#x2F;test.txt &amp;&amp; echo 成功如果找到了&quot;ok&quot;字样，就显示&quot;成功&quot;，找不到就不显示</span><br></pre></td></tr></table></figure></li><li><p>||顺序执行多条命令，当碰到执行正确的命令后将不执行后面的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find &quot;ok&quot; c:&#x2F;test.txt || echo 不成功如果找不到&quot;ok&quot;字样，就显示&quot;不成功&quot;，找到了就不显示</span><br></pre></td></tr></table></figure></li><li><p>|管道命令</p></li></ul><p>前一个命令的执行结果输出到后一个命令</p><p><code>dir *.* /s/a | find /c &quot;.exe&quot;</code>管道命令表示先执行 dir 命令，对其输出的结果执行后面的 find 命令该命令行结果：</p><p>输出当前文件夹及所有子文件夹里的.exe文件的个数</p><p><code>type c:/test.txt|more</code>这个和 more c:&#x2F;test.txt 的效果是一样的</p><ul><li>&gt; 和 &gt;&gt;输出重定向命令</li></ul><p>&gt; 清除文件中原有的内容后再写入</p><p>&gt;&gt; 追加内容到文件末尾，而不会清除原有的内容主要将本来显示在屏幕上的内容输出到指定文件中指定文件如果不存在，则自动生成该文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo hello world&gt;c:&#x2F;test.txt   生成c:&#x2F;test.txt文件，内容为hello world这个格式在批处理文件里用得很多，可以生成.reg .bat .vbs 等临时文件</span><br><span class="line">type c:&#x2F;test.txt &gt;prn          屏幕上不显示文件内容，转向输出到打印机</span><br><span class="line">echo hello world&gt;con           在屏幕上显示hello world，实际上所有输出都是默认 &gt;con 的</span><br><span class="line">copy c:&#x2F;test.txt f: &gt;nul       拷贝文件，并且不显示&quot;文件复制成功&quot;的提示信息，但如果f盘不存在，还是会显示出错信息</span><br><span class="line">copy c:&#x2F;test.txt f: &gt;nul 2&gt;nul 不显示&quot;文件复制成功&quot;的提示信息，并且f盘不存在的话，也不显示错误提示信息</span><br><span class="line">echo ^^W ^&gt; ^W&gt;c:&#x2F;test.txt     生成的文件内容为 ^W &gt; W^ 和 &gt; 是控制命令，要把它们输出到文件，必须在前面加个 ^符号</span><br></pre></td></tr></table></figure><ul><li><code>&lt;</code> 从文件中获得输入信息，而不是从屏幕上</li></ul><p>一般用于 date time label 等需要等待输入的命令，这样就可以不等待输入直接修改当前日期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo 2005-05-01&gt;temp.txt</span><br><span class="line">date &lt;temp.txt</span><br><span class="line">del temp.txt</span><br></pre></td></tr></table></figure><ul><li>%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %*命令行传递给批处理的参数<ul><li>%0 批处理文件本身</li><li>%1 第一个参数</li><li>%9 第九个参数</li><li>%* 从第一个参数开始的所有参数</li></ul></li></ul><p>在C盘根目录新建test.bat，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo %0</span><br><span class="line">echo %1</span><br><span class="line">echo %2</span><br><span class="line">echo %*</span><br></pre></td></tr></table></figure><p>运行cmd，输入 <code>c:/test.bat &quot;/a&quot; /b /c /d</code>,可以看出每个参数的含意 修改test.bat内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo %1</span><br><span class="line">echo %~1</span><br><span class="line">echo %0</span><br><span class="line">echo %~f0</span><br><span class="line">echo %~d0</span><br><span class="line">echo %~p0</span><br><span class="line">echo %~n0</span><br><span class="line">echo %~x0</span><br><span class="line">echo %~s0</span><br><span class="line">echo %~a0</span><br><span class="line">echo %~t0</span><br><span class="line">echo %~z0</span><br></pre></td></tr></table></figure><p>再运行cmd，输入 <code>c:/test.bat &quot;/a&quot; /b /c /d</code>可以参照 call&#x2F;? 或 for&#x2F;? 看出每个参数的含意，注意这里可以对文件进行日期比较和大小比较：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo load &quot;%%1&quot; &quot;%%2&quot;&gt;c:&#x2F;test.txt</span><br></pre></td></tr></table></figure><p>生成的文件内容为 load “%1” “%2”批处理文件里，用这个格式把命令行参数输出到文件</p><ul><li>set设置变量</li></ul><p>引用变量可在变量名前后加 % ，即 %变量名%</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">set                    #显示目前所有可用的变量，包括系统变量和自定义的变量</span><br><span class="line">echo %SystemDrive%     #显示系统盘盘符。系统变量可以直接引用</span><br><span class="line">set p                  #显示所有以p开头的变量，要是一个也没有就设errorlevel&#x3D;1</span><br><span class="line">set p&#x3D;aa1bb1aa2bb2     #设置变量p，并赋值为 &#x3D; 后面的字符串，即aa1bb1aa2bb2</span><br><span class="line">echo %p%               #显示变量p代表的字符串，即aa1bb1aa2bb2</span><br><span class="line">echo %p:~6%            #显示变量p中第6个字符以后的所有字符，即aa2bb2</span><br><span class="line">echo %p:~6,3%          #显示第6个字符以后的3个字符，即aa2</span><br><span class="line">echo %p:~0,3%          #显示前3个字符，即aa1</span><br><span class="line">echo %p:~-2%           #显示最后面的2个字符，即b2</span><br><span class="line">echo %p:~0,-2%         #显示除了最后2个字符以外的其它字符，即aa1bb1aa2b</span><br><span class="line">echo %p:aa&#x3D;c%          #用c替换变量p中所有的aa，即显示c1bb1c2bb2</span><br><span class="line">echo %p:aa&#x3D;%           #将变量p中的所有aa字符串置换为空，即显示1bb12bb2</span><br><span class="line">echo %p:*bb&#x3D;c%         #第一个bb及其之前的所有字符被替换为c，即显示c1aa2bb2</span><br><span class="line">set p&#x3D;%p:*bb&#x3D;c%        #设置变量p，赋值为 %p:*bb&#x3D;c% ，即c1aa2bb2</span><br><span class="line">set &#x2F;a p&#x3D;39            #设置p为数值型变量，值为39</span><br><span class="line">set &#x2F;a p&#x3D;39&#x2F;10         #支持运算符，有小数时用去尾法，39&#x2F;10&#x3D;3.9，去尾得3，p&#x3D;3set &#x2F;a p&#x3D;p&#x2F;10</span><br><span class="line">                       #用 &#x2F;a 参数时，在 &#x3D; 后面的变量可以不加%直接引用set &#x2F;a p&#x3D;&quot;1&amp;0&quot;</span><br><span class="line">                       #&quot;与&quot;运算，要加引号。其它支持的运算符参见set&#x2F;?</span><br><span class="line">set p&#x3D;                 #取消p变量</span><br><span class="line">set &#x2F;p p&#x3D;              请输入屏幕上显示&quot;请输入&quot;，并会将输入的字符串赋值给变量p注意这条可以用来取代 choice 命令</span><br></pre></td></tr></table></figure><p>注意变量在 if 和 for 的复合语句里是一次性全部替换的，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set p&#x3D;aaa</span><br><span class="line">if %p%&#x3D;&#x3D;aaa (   </span><br><span class="line">echo %p%  </span><br><span class="line">set p&#x3D;bbb   </span><br><span class="line">echo %p%    )</span><br></pre></td></tr></table></figure><p>结果将显示aaaaaa因为在读取 if 语句时已经将所有 %p% 替换为aaa这里的”替换”，在 &#x2F;? 帮助里就是指”扩充”、”环境变量扩充”可以启用”延缓环境变量扩充”，用 ! 来引用变量，即<code>!变量名!</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">SETLOCAL ENABLEDELAYEDEXPANSION</span><br><span class="line">set p&#x3D;aaaif %p%&#x3D;&#x3D;aaa ( </span><br><span class="line">echo %p%   </span><br><span class="line">set p&#x3D;bbb   </span><br><span class="line">echo !p!    )</span><br><span class="line">ENDLOCAL</span><br></pre></td></tr></table></figure><p>结果将显示aaabbb 还有几个动态变量，运行 set 看不到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%CD%                  #代表当前目录的字符串</span><br><span class="line">%DATE%                #当前日期</span><br><span class="line">%TIME%                #当前时间</span><br><span class="line">%RANDOM%              #随机整数，介于0~32767</span><br><span class="line">%ERRORLEVEL%          #当前ERRORLEVEL 值</span><br><span class="line">%CMDEXTVERSION%       #当前命令处理器扩展名版本号</span><br><span class="line">%CMDCMDLINE%          #调用命令处理器的原始命令行可以用echo命令查看每个变量值，如 echo %time%</span><br><span class="line"></span><br><span class="line">注意 %time%精确到毫秒，在批处理需要延时处理时可以用到</span><br></pre></td></tr></table></figure><ul><li><p>start批处理中调用外部程序的命令，否则等外部程序完成后才继续执行剩下的指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">start explorer d:&#x2F;调用图形界面打开D盘</span><br><span class="line">@echo off</span><br><span class="line">cd &#x2F;d %~dp0</span><br><span class="line">regedit &#x2F;s 劲舞团.reg</span><br><span class="line">start patcher.exe</span><br></pre></td></tr></table></figure></li></ul><p>不加 start 命令的话，”劲舞团”运行时，后面会有个黑乎乎的cmd窗口</p><ul><li><p>call批处理中调用另外一个批处理的命令，否则剩下的批处理指令将不会被执行有时有的应用程序用start调用出错的，也可以call调用</p></li><li><p>choice (外部命令)选择命令让用户输入一个字符，从而选择运行不同的命令，返回码errorlevel为1234……</p></li></ul><p>win98里是choice.com，win2000pro里没有，可以从win98里拷过来，win2003里是choice.exe</p><p>choice &#x2F;N &#x2F;C y &#x2F;T 5 &#x2F;D y&gt;nul延时5秒</p><p>下面是个 choice 语句的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">rem 以下在win2000pro运行通过，从win98里拷的chioce.com文件</span><br><span class="line">choice &#x2F;c:abc aaa,bbb,ccc</span><br><span class="line">if errorlevel 3 goto ccc</span><br><span class="line">if %errorlevel%&#x3D;&#x3D;2 goto bbb</span><br><span class="line">if errorlevel&#x3D;&#x3D;1 goto aaa</span><br><span class="line">rem 必须先判断数值高的返回码rem 可以看到 errorlevel 值的判断有3种写法，有时某种写法不好用，可以用另外的写法</span><br><span class="line">rem 直接运行</span><br><span class="line"></span><br><span class="line">chioce相当于运行</span><br><span class="line">choice &#x2F;c:yn:aaa</span><br><span class="line">echo aaa</span><br><span class="line">goto end</span><br><span class="line">:bbb</span><br><span class="line">echo bbb</span><br><span class="line">goto end</span><br><span class="line">:ccc</span><br><span class="line">echo ccc</span><br><span class="line">goto end</span><br><span class="line">:end</span><br></pre></td></tr></table></figure><ul><li><p>assoc 和 ftype文件关联assoc 设置’文件扩展名’关联，关联到’文件类型’ftype 设置’文件类型’关联，关联到’执行程序和参数’当你双击一个.txt文件时，windows并不是根据.txt直接判断用 notepad.exe 打开而是先判断.txt属于 txtfile ‘文件类型’再调用 txtfile 关联的命令行 txtfile&#x3D;%SystemRoot%&#x2F;system32&#x2F;NOTEPAD.EXE %1可以在”文件夹选项”→”文件类型”里修改这2种关联</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">assoc           #显示所有&#39;文件扩展名&#39;关联</span><br><span class="line">assoc .txt      #显示.txt代表的&#39;文件类型&#39;，结果显示 .txt&#x3D;txtfile</span><br><span class="line">assoc .doc      #显示.doc代表的&#39;文件类型&#39;，结果显示 .doc&#x3D;Word.Document.8</span><br><span class="line">assoc .exe      #显示.exe代表的&#39;文件类型&#39;，结果显示 .exe&#x3D;exefile</span><br><span class="line">ftype           #显示所有&#39;文件类型&#39;关联</span><br><span class="line">ftype exefile   #显示exefile类型关联的命令行，结果显示 exefile&#x3D;&quot;%1&quot; %* assoc .txt&#x3D;Word.Document.8设置.txt为word类型的文档，可以看到.txt文件的图标都变了</span><br><span class="line">assoc .txt&#x3D;txtfile恢复.txt的正确关联 ftype exefile&#x3D;&quot;%1&quot; %*恢复 exefile 的正确关联</span><br></pre></td></tr></table></figure></li></ul><p>如果该关联已经被破坏，可以运行 command.com ，再输入这条命令</p><ul><li><p>pushd 和 popd切换当前目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">c: &amp; cd&#x2F; &amp; md mp3       #在 C:&#x2F; 建立 mp3 文件夹</span><br><span class="line">md d:&#x2F;mp4               #在 D:&#x2F; 建立 mp4 文件夹</span><br><span class="line">cd &#x2F;d d:&#x2F;mp4            #更改当前目录为 d:&#x2F;mp4</span><br><span class="line">pushd c:&#x2F;mp3            #保存当前目录，并切换当前目录为 c:&#x2F;mp3</span><br><span class="line">popd                    #恢复当前目录为刚才保存的 d:&#x2F;mp4一般用处不大，在当前目录名不确定时，会有点帮助</span><br></pre></td></tr></table></figure></li><li><p>subst (外部命令)映射磁盘。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">subst z: &#x2F;&#x2F;server&#x2F;d     #这样输入z:就可以访问&#x2F;&#x2F;server&#x2F;d了</span><br><span class="line">subst z: &#x2F;d             #取消该映射</span><br><span class="line">subst                   #显示目前所有的映</span><br></pre></td></tr></table></figure></li><li><p>xcopy (外部命令)文件拷贝</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcopy d:&#x2F;mp3 e:&#x2F;mp3 &#x2F;s&#x2F;e&#x2F;i&#x2F;y</span><br></pre></td></tr></table></figure><p>复制 d:&#x2F;mp3 文件夹、所有子文件夹和文件到 e:&#x2F;，覆盖已有文件，加 &#x2F;i 表示如果 e:&#x2F; 没有 mp3 文件夹就自动新建一个，否则会有询问</p><ul><li><p>39 一些不常用的内部命令</p><ul><li><code>&gt;&amp;</code> 将一个句柄的输出写入到另一个句柄的输入中</li><li><code>&lt;&amp;</code> 从一个句柄读取输入并将其写入到另一个句柄输出中</li><li>shift 命令行传递给批处理的参数不止9个时，用以切换参数</li><li>color 设置cmd窗口的显示颜色</li><li>pormpt 更改命令提示符号，默认都是 盘符:&#x2F;路径&#x2F;&gt; ，如 c:&#x2F;&gt;</li></ul></li><li><p>format (外部命令)格式化硬盘</p></li></ul><p><code>format c: /q/u/autotest/</code>，q表示快速格式化，&#x2F;autotest表示自动格式化，不需要按 Y 确认，&#x2F;u表示每字节用F6覆盖硬盘数据，使其不可用软件恢复</p><p>format c: &#x2F;c格式化C盘，并检测坏道</p><ul><li><p>fdisk (外部命令)硬盘分区win2000不带该命令win98里的fdisk不支持80G以上大硬盘，winme里的支持fdisk&#x2F;mbr重建硬盘分区表，一般用于清除引导区病毒、还原精灵注意使用该命令不能从硬盘启动，必须软驱或光驱启动后直接运行</p></li><li><p>ping (外部命令)</p></li></ul><p>ping -l 65500 -t 192.168.1.200不停的向192.168.1.200计算机发送大小为65500byte的数据包</p><p>ping -n 10 127.0.0.1&gt;nulping自己10次，可用于批处理延时10秒</p><ul><li><p>SC (外部命令)服务控制命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sc create aaa displayname&#x3D; bbb start&#x3D; auto binpath&#x3D; &quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;alg.exe&quot;创建服务，服务名称aaa，显示名称bbb，启动类型:自动可执行文件的路径&quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;alg.exe&quot;</span><br><span class="line">sc description aaa &quot;ccc&quot;更改aaa的描述为ccc</span><br><span class="line">sc config aaa start&#x3D; disabled binpath&#x3D; &quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;svchost.exe -k netsvcs&quot;更改aaa的启动类型:已禁用更改aaa的可执行文件的路径&quot;C:&#x2F;WINDOWS&#x2F;System32&#x2F;svchost.exe -k netsvcs&quot;</span><br><span class="line">sc config aaa start&#x3D; demand displayname&#x3D; ddd更改aaa的启动类型:手动更改aaa的显示名称ddd</span><br><span class="line">sc start aaa启动aaa服务</span><br><span class="line">sc stop aaa停止aaa服务</span><br><span class="line">sc delete aaa删除aaa服务</span><br></pre></td></tr></table></figure></li></ul><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="http://xstarcd.github.io/wiki/windows/windows_cmd_summary_commands.html">批处理常用命令总结 - 批处理命令简介</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">批处理常用命令总结</summary>
    
    
    
    <category term="小插件类" scheme="https://zml3589110.github.io/categories/%E5%B0%8F%E6%8F%92%E4%BB%B6%E7%B1%BB/"/>
    
    <category term="BAT" scheme="https://zml3589110.github.io/categories/BAT/"/>
    
    
    <category term="计算机" scheme="https://zml3589110.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="bat" scheme="https://zml3589110.github.io/tags/bat/"/>
    
    <category term="脚本" scheme="https://zml3589110.github.io/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="cmd" scheme="https://zml3589110.github.io/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>Virtual box 6.1 0x80004005 错误</title>
    <link href="https://zml3589110.github.io/posts/939509364.html"/>
    <id>https://zml3589110.github.io/posts/939509364.html</id>
    <published>2022-05-28T08:24:20.000Z</published>
    <updated>2022-05-28T08:37:47.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>原本要备份虚拟机系统，中途觉得等时间太久就手动停止运行。然后再想打开运行系统时就提示 不能为虚拟电脑 ubuntu for Tuya 打开一个新任务<br>网上找很多方法，也卸载重装好多次都无果！</p><h1 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h1><blockquote></blockquote><p>不能为虚拟电脑 win2k3_x641 打开一个新任务.<br>The virtual machine ‘win2k3_x641’ has terminated unexpectedly during startup with exit code 1 (0x1).  More details may be available in ‘D:\temp\win2k3_x641\Logs\VBoxHardening.log’.<br>返回 代码: E_FAIL (0x80004005)<br>组件: MachineWrap<br>界面: IMachine {85632c68-b5bb-4316-a900-5eb28d3413df}</p><img src="https://img-blog.csdnimg.cn/20200303175136545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6Z2V5ZQ==,size_16,color_FFFFFF,t_70"><h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><blockquote><p><strong>反复对比研究终于解决问题:<br>问题出在启动菜单式按钮,不能直接点击虚拟机界面上的”启动”按钮,而是要选另2个启动方式</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20200303175352644.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2x6Z2V5ZQ==,size_16,color_FFFFFF,t_70"><h1 id="其他参考-网上很多用这种方法（方法无效）"><a href="#其他参考-网上很多用这种方法（方法无效）" class="headerlink" title="其他参考-网上很多用这种方法（方法无效）"></a>其他参考-网上很多用这种方法（方法无效）</h1><p>virtualbox虚拟机拥有丰富的功能，而且性能优异，简单易用。但最近有win8&#x2F;win10系统启动VirtualBox 5.0版本出错提示“不能为虚拟电脑XX打开一个新任务”NtCreateFile(\Device\VBoxDrvStub) failed: 0xc000000034“怎么办呢？大家不要着急，按照下面小编介绍的方法即可轻松解决了。</p><p>具体方法如下:</p><p>1、打开VirtualBox安装文件夹里的\drivers\vboxdrv文件夹（默认位置为：C:\Program Files\Oracle\VirtualBox\drivers\vboxdrv）；</p><p>2、右键VBoxDrv.inf文件；</p><p>3、点击安装；</p><img src="http://www.morefunsoft.com/uploads/allimg/210419/10320060a_0.jpg"><p>4、安装完成后重启VirtualBox即可。</p><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/lzgeye/article/details/104637611">Virtual box 6.1 0x80004005 错误</a></li><li><a href="http://www.morefunsoft.com/hyxg/237271.html">win8&#x2F;win10启动virtualbox虚拟机提示“不能为虚拟电脑XX打开一个新任务”怎么办</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">虚拟机 Virtual box 打开时提示 不能为虚拟电脑 ubuntu for Tuya 打开一个新任务.</summary>
    
    
    
    <category term="问题收集" scheme="https://zml3589110.github.io/categories/%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    
    
    <category term="虚拟机" scheme="https://zml3589110.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    <category term="Virtual box" scheme="https://zml3589110.github.io/tags/Virtual-box/"/>
    
    <category term="2147500037" scheme="https://zml3589110.github.io/tags/2147500037/"/>
    
  </entry>
  
  <entry>
    <title>GIT版本控制(二)之常用命令说明</title>
    <link href="https://zml3589110.github.io/posts/3836851438.html"/>
    <id>https://zml3589110.github.io/posts/3836851438.html</id>
    <published>2022-05-28T02:11:20.000Z</published>
    <updated>2022-05-28T02:51:21.346Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>QA必备 — git:</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#正常提交代码流程：</span><br><span class="line"> </span><br><span class="line">git status # 检查下工作区有哪些变动</span><br><span class="line"> </span><br><span class="line">git add &lt;file_path&gt; # 将要提交的变动添加到暂存区</span><br><span class="line"> </span><br><span class="line">git commit -m &quot;message&quot; # 将变动内容由暂存区提交到版本库</span><br><span class="line"> </span><br><span class="line">git push origin &lt;remote&gt; # 提交到远程分支</span><br><span class="line"> </span><br><span class="line">#但实际中并非如此顺利，会遇到各种异常，要顺利解决异常，需对git操作熟悉。蓝色表示QA必会。</span><br></pre></td></tr></table></figure><h1 id="git-clone-lt-版本库的网址-gt"><a href="#git-clone-lt-版本库的网址-gt" class="headerlink" title="git clone &lt;版本库的网址&gt;"></a>git clone &lt;版本库的网址&gt;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;git_url&gt;</span><br></pre></td></tr></table></figure><blockquote><p>作用：拷贝一个 Git 仓库到本地，本地目录名称与git 仓库同名。<br>操作：打开页面，单击复制仓库地址，打开终端进入指定目录后，执行git clone命令​​</p></blockquote><h1 id="git-branch-—-分支信息"><a href="#git-branch-—-分支信息" class="headerlink" title="git branch — 分支信息"></a>git branch — 分支信息</h1><h2 id="1、查看分支"><a href="#1、查看分支" class="headerlink" title="1、查看分支"></a>1、查看分支</h2><blockquote><p>作用：查看分支（前面带有*号的是当前分支）</p></blockquote><ul><li><p>查看本地分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></li><li><p>查看远程分支(origin&#x2F;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -r</span><br></pre></td></tr></table></figure></li><li><p>查看所有分支(本地+远程)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a</span><br></pre></td></tr></table></figure><h2 id="2、创建本地分支"><a href="#2、创建本地分支" class="headerlink" title="2、创建本地分支"></a>2、创建本地分支</h2><blockquote><p>作用：创建一个新的本地分支</p></blockquote></li><li><p>创建但不切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;name&gt;</span><br></pre></td></tr></table></figure><blockquote><p>创建完的test分支与当前master分支代码一致</p></blockquote></li><li><p>创建且同时切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;name&gt;</span><br></pre></td></tr></table></figure><p>创建完的test_new分支与切换之前的master分支代码一致</p><h2 id="3、重命名本地分支"><a href="#3、重命名本地分支" class="headerlink" title="3、重命名本地分支"></a>3、重命名本地分支</h2></li><li><p>不强制重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -m &lt;old&gt; &lt;new&gt;</span><br></pre></td></tr></table></figure></li><li><p>强制重命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -M &lt;old&gt; &lt;new&gt; # 转换大小写</span><br></pre></td></tr></table></figure><h2 id="4、重命名远程分支"><a href="#4、重命名远程分支" class="headerlink" title="4、重命名远程分支"></a>4、重命名远程分支</h2><blockquote><p>假设将”duoshan_pro“重命名为”master“</p></blockquote></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch -m duoshan_pro master # 本地duoshan_pro重命名为master</span><br><span class="line"> </span><br><span class="line">git push origin master:master # 将master推到远端</span><br><span class="line"> </span><br><span class="line">git push origin :duoshan_pro # 删除远端的duoshan_pro</span><br></pre></td></tr></table></figure><h2 id="5、删除本地分支"><a href="#5、删除本地分支" class="headerlink" title="5、删除本地分支"></a>5、删除本地分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;name&gt; # -D 强制删除，</span><br></pre></td></tr></table></figure><h1 id="git-status-—-状态信息"><a href="#git-status-—-状态信息" class="headerlink" title="git status — 状态信息"></a>git status — 状态信息</h1><p>红色表示修完完未追踪，绿色表示修改完已追踪</p><blockquote><p>1）详细状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure><blockquote><p>2）精简状态</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status -s</span><br></pre></td></tr></table></figure><blockquote></blockquote><p>​详细状态 精简状态<br>?? ：新添加未追踪 （新增但未git add）<br>A：新添加到暂存区中的文件前面有标记（新增且已git add）<br>M：该文件被修改了并被放入了暂存区。 （修改且已git add）<br>R：被重命名且已放入暂存区。（修改且已git add）<br>M：该文件被修改了但是还没被放入暂存区（修改但未git add）</p><h1 id="git-add-—-提交到暂存区"><a href="#git-add-—-提交到暂存区" class="headerlink" title="git add — 提交到暂存区"></a>git add — 提交到暂存区</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add &lt;file_path&#x2F;path&gt; # &lt;path&gt;可以是目录，也可以是目录下的具体文件</span><br></pre></td></tr></table></figure><blockquote></blockquote><p>​git add .：提交被修改(modified)和新文件(new)和文件，不包括被删除文件(deleted)<br>git add -u：提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)<br>git add -A：# 提交所有变化</p><h1 id="git-commit-—-提交到本地版本库"><a href="#git-commit-—-提交到本地版本库" class="headerlink" title="git commit — 提交到本地版本库"></a>git commit — 提交到本地版本库</h1><p>每次使用git commit 命令后，都会在本地版本库生成一个40位的哈希值，这个哈希值也叫commit-id。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit -m “message”</span><br><span class="line">git commit --amend -m &quot;new message&quot; # 修改提交的描述信息</span><br></pre></td></tr></table></figure><h1 id="git-pull-—-从远端拉取-fetch-代码并合并-merge"><a href="#git-pull-—-从远端拉取-fetch-代码并合并-merge" class="headerlink" title="git pull — 从远端拉取(fetch)代码并合并(merge)"></a>git pull — 从远端拉取(fetch)代码并合并(merge)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; # :前后无空格</span><br></pre></td></tr></table></figure><h2 id="1）建立新的本地分支"><a href="#1）建立新的本地分支" class="headerlink" title="1）建立新的本地分支"></a>1）建立新的本地分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;remote&gt;:&lt;local&gt; # -f 强拉</span><br></pre></td></tr></table></figure><p>如：将远端分支T，拉到本地，且命名为jieqiong（此刻jieqong分支代码与远端分支T一致）</p><p>ps：git branch jieqiong也是建立本地分支，但建立完后的分支与本地所在分支一致</p><h2 id="2）拉取最新代码到本地"><a href="#2）拉取最新代码到本地" class="headerlink" title="2）拉取最新代码到本地"></a>2）拉取最新代码到本地</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;remote&gt; # 如本地已经在当前分支，则本地分支可省略，如出错则，后加-f 强拉</span><br></pre></td></tr></table></figure><p>注：更改分支代码之前，最好先git pull下，否则会发生冲突。</p><p>发生冲突后，将 &lt;&lt;&lt; &#x3D;&#x3D;&#x3D;等行信息删除，重新git add、git commit、git pull、git push等。</p><blockquote><p>（最简单的办法：去远程目标分支找对应的冲突文件，复制到本地对应文件，再git commit）</p></blockquote><h1 id="git-fetch-—-从远端拉取代码到版本库"><a href="#git-fetch-—-从远端拉取代码到版本库" class="headerlink" title="git fetch — 从远端拉取代码到版本库"></a>git fetch — 从远端拉取代码到版本库</h1><blockquote><p>作用：相当于是从远程获取最新版本到本地,不会自动merge。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin develop:tmp &#x2F;&#x2F; 拉取远程develop分支，并放到本地tmp分支上 </span><br><span class="line">git fetch orgin master &#x2F;&#x2F;将远程仓库的master分支下载到本地当前branch中 </span><br><span class="line">git merge — 整合提交</span><br></pre></td></tr></table></figure><blockquote><p>作用：合并指定分支到当前分支，你需要往哪个分支上面合并，就要切换到哪个分支。<br>假设有一个开发分支dev，有一个主干分支master，现在要 把dev分支merge到master分支，保证两个分支都是最新的状态后，执行。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout master </span><br><span class="line">git merge dev </span><br><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br><span class="line"> # :前后无空格</span><br></pre></td></tr></table></figure><h2 id="1）建立新的远程分支"><a href="#1）建立新的远程分支" class="headerlink" title="1）建立新的远程分支"></a>1）建立新的远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;local&gt;:&lt;remote&gt; </span><br></pre></td></tr></table></figure><p>建立远程分支test：即将本地test推向远端test，有异常则使用-f强制</p><h2 id="2）推送到已有远程分支"><a href="#2）推送到已有远程分支" class="headerlink" title="2）推送到已有远程分支"></a>2）推送到已有远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;test&gt; # 当前所在分支，与欲推送本地分支一致时，可省略本地分支 </span><br></pre></td></tr></table></figure><h2 id="3）删除指定远程分支"><a href="#3）删除指定远程分支" class="headerlink" title="3）删除指定远程分支"></a>3）删除指定远程分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;test&gt; # 用:号前的空格代替:号后的test分支，代表删除test </span><br><span class="line">git push origin -d &lt;test&gt; # 二者等价，-D表强制删除</span><br></pre></td></tr></table></figure><h1 id="​git-checkout-—-切换分支-x2F-恢复工作区"><a href="#​git-checkout-—-切换分支-x2F-恢复工作区" class="headerlink" title="​git checkout — 切换分支&#x2F;恢复工作区"></a>​git checkout — 切换分支&#x2F;恢复工作区</h1><h2 id="1）切换分支"><a href="#1）切换分支" class="headerlink" title="1）切换分支"></a>1）切换分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch&gt; # 切换已有分支 </span><br><span class="line">git checkout -b &lt;branch&gt; # 新建并切换分支，见 2-（2）节</span><br></pre></td></tr></table></figure><h2 id="2）撤销工作区的修改（未git-add）"><a href="#2）撤销工作区的修改（未git-add）" class="headerlink" title="2）撤销工作区的修改（未git add）"></a>2）撤销工作区的修改（未git add）</h2><p>ps：未执行git add</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout -- &lt;file&gt; # 放弃在工作区的文件更改 </span><br><span class="line">git checkout . # 放弃所有文件的修改 </span><br></pre></td></tr></table></figure><h1 id="git-reset-—-回退暂存区-x2F-版本库"><a href="#git-reset-—-回退暂存区-x2F-版本库" class="headerlink" title="git reset — 回退暂存区&#x2F;版本库"></a>git reset — 回退暂存区&#x2F;版本库</h1><blockquote><p>适用场景：恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了。</p></blockquote><h2 id="1）撤销暂存区的修改（已git-add）"><a href="#1）撤销暂存区的修改（已git-add）" class="headerlink" title="1）撤销暂存区的修改（已git add）"></a>1）撤销暂存区的修改（已git add）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD &lt;file&gt; # 放弃在缓存中的文件更改，回到git add之前状态 </span><br><span class="line">git reset HEAD . # 放弃所有文件的修改，回到git add之前状态 </span><br></pre></td></tr></table></figure><h2 id="2）撤销版本库的修改（已git-commit）"><a href="#2）撤销版本库的修改（已git-commit）" class="headerlink" title="2）撤销版本库的修改（已git commit）"></a>2）撤销版本库的修改（已git commit）</h2><p>–mixed：git reset (–mixed) HEAD，相当于默认–mixed<br>只动暂存区，不动工作区（修改内容不丢失），原节点和reset节点之间的所有差异都会放到工作目录中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD^ # 回退到上一个版本 </span><br><span class="line">git reset HEAD^^ # 回退到倒数第二版 </span><br><span class="line">git reset HEAD 版本号 # 版本号通过git log查看 </span><br></pre></td></tr></table></figure><h2 id="3）带参数–hard-x2F-–soft的差别"><a href="#3）带参数–hard-x2F-–soft的差别" class="headerlink" title="3）带参数–hard&#x2F;–soft的差别"></a>3）带参数–hard&#x2F;–soft的差别</h2><p>–soft：暂存区和工作区的内容都保持原样，不会被替换。原节点和reset节点之间的所有差异会放到暂存区中。<br>–hard：暂存区和工作区的内容都会被新指向的commit提交内容所替换；git reset –hard只影响被跟踪的文件，如果工作区有新增的文件，并不会被影响。​</p><h1 id="git-revert-—-反做暂存区-x2F-版本库"><a href="#git-revert-—-反做暂存区-x2F-版本库" class="headerlink" title="git revert — 反做暂存区&#x2F;版本库"></a>git revert — 反做暂存区&#x2F;版本库</h1><blockquote><p>适用场景：想撤销之前的某一版本，但是又想保留该目标版本后面的版本。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git revert -n 版本号 # 版本号可通过git log查看，或去gitlab 仓库查看可视化</span><br></pre></td></tr></table></figure><p>继续git commit、git push 会生成新的版本号，而又不动到中间的版本。<br><strong>ps：reset与revert的区别</strong></p><img src="https://img-blog.csdnimg.cn/edbdb910f97e4ab59feb66e7b76aefcd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><h1 id="git-rebase-—-重新设置基线"><a href="#git-rebase-—-重新设置基线" class="headerlink" title="git rebase — 重新设置基线"></a>git rebase — 重新设置基线</h1><p>什么时候用到rebase? 当</p><h2 id="1）git-rebase-branch"><a href="#1）git-rebase-branch" class="headerlink" title="1）git rebase branch"></a>1）git rebase branch</h2><p>git rebase branch-B # rebase的是谁，就修改的是谁<br>两个分支都会有自己不同的发展轨迹：</p><img src="https://img-blog.csdnimg.cn/653b3a9aa9bd403d9eaeb8cd98e94d51.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol><li>git会把在branch-A上的C1之后的C3暂时存储到一个地方。</li></ol><img src="https://img-blog.csdnimg.cn/6f10a777250d413caca8454b91ddb3ff.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="2"><li>git会整合那些在branch-B（这个我们想要整合的分支）上的还未整合的提交到branch-A 中。</li></ol><img src="https://img-blog.csdnimg.cn/16a0e9ba5871475d8e49df15aca2e3c2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><ol start="3"><li>那些在branch-A的新的提交C3，会被重新应用到这个分支上。</li></ol><image src="https://img-blog.csdnimg.cn/86f89772d6a040b68530ee989dc4fddc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Liq5bCP5oCC5YyF5ZWK,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>缺陷：rebase 会改写历史记录（C3的源提交由C1变为了C4）。应该只使用 rebase 来清理你的本地工作，千万不要尝试着对那些已经被发布的提交进行这个操作，故：</strong></p></blockquote><ul><li>不要在公共分支使用rebase</li><li>本地和远端对应同一条分支,优先使用rebase，而不是merge</li></ul><h2 id="2）git-rebase-–continue"><a href="#2）git-rebase-–continue" class="headerlink" title="2）git rebase –continue"></a>2）git rebase –continue</h2><p>在rebase的过程中，可能会出现冲突。在这种情况，git会停止rebase并会让你去解决冲突；在解决完冲突后，用”git-add”命令去更新这些内容的索引， 然后，你无需执行 git-commit，只要执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase --continue </span><br></pre></td></tr></table></figure><h2 id="3）git-rebase-–abort"><a href="#3）git-rebase-–abort" class="headerlink" title="3）git rebase –abort"></a>3）git rebase –abort</h2><p><strong>在任何时候，你可以用–abort参数来终止rebase的行动，并且分支会回到rebase前的状态。</strong></p><h1 id="git-stash-—-暂存工作区"><a href="#git-stash-—-暂存工作区" class="headerlink" title="git stash — 暂存工作区"></a>git stash — 暂存工作区</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash # 暂存工作区的修改 </span><br><span class="line">git stash pop # 弹出修改内容 </span><br></pre></td></tr></table></figure><h1 id="git-log-—-查看提交历史"><a href="#git-log-—-查看提交历史" class="headerlink" title="git log — 查看提交历史"></a>git log — 查看提交历史</h1><ul><li>建议提前git fetch一下</li></ul><h2 id="1）–stat：增改行数统计"><a href="#1）–stat：增改行数统计" class="headerlink" title="1）–stat：增改行数统计"></a>1）–stat：增改行数统计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --stat # 查看简略统计信息</span><br></pre></td></tr></table></figure><p>–stat 选项在每次提交的下面列出所有被修改过的文件、有多少文件被修改了以及被修改过的文件的哪些行被移除或是添加了。 在每次提交的最后还有一个总结。</p><h2 id="2）–pretty：定制展示格式"><a href="#2）–pretty：定制展示格式" class="headerlink" title="2）–pretty：定制展示格式"></a>2）–pretty：定制展示格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --pretty&#x3D;oneline # 每个提交放在一行显示</span><br></pre></td></tr></table></figure><h2 id="3）-p：展开内容差异"><a href="#3）-p：展开内容差异" class="headerlink" title="3）-p：展开内容差异"></a>3）-p：展开内容差异</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log -p -2 # 展开显示每次提交的内容差异, 用 -2 则仅显示最近的两次更新</span><br></pre></td></tr></table></figure><h1 id="git-diff-—-比较两次修改的差异"><a href="#git-diff-—-比较两次修改的差异" class="headerlink" title="git diff — 比较两次修改的差异"></a>git diff — 比较两次修改的差异</h1><h2 id="1）比较工作区与暂存区"><a href="#1）比较工作区与暂存区" class="headerlink" title="1）比较工作区与暂存区"></a>1）比较工作区与暂存区</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff # git diff 不加参数即默认比较工作区(未git add)与暂存区(git add之后)</span><br><span class="line"> </span><br><span class="line">git diff --stat #查看简单的diff结果</span><br></pre></td></tr></table></figure><h2 id="2）比较暂存区与版本库"><a href="#2）比较暂存区与版本库" class="headerlink" title="2）比较暂存区与版本库"></a>2）比较暂存区与版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff --cached # 对比暂存区(git add 之后)和版本库(git commit 之后)</span><br></pre></td></tr></table></figure><h2 id="3）比较工作区与版本库"><a href="#3）比较工作区与版本库" class="headerlink" title="3）比较工作区与版本库"></a>3）比较工作区与版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff HEAD # 对比工作区(未 git add)和版本库(git commit 之后)</span><br></pre></td></tr></table></figure><h2 id="4）比较两个分支上最新提交"><a href="#4）比较两个分支上最新提交" class="headerlink" title="4）比较两个分支上最新提交"></a>4）比较两个分支上最新提交</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff branch-A branch-B</span><br></pre></td></tr></table></figure><h1 id="5-比较两个历史版本之间的差异"><a href="#5-比较两个历史版本之间的差异" class="headerlink" title="5) 比较两个历史版本之间的差异"></a>5) 比较两个历史版本之间的差异</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git diff SHA1 SHA2 # SHA为40位的commit_id</span><br></pre></td></tr></table></figure><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol><li><p>打开终端输入：ssh-keygen -t rsa ，按三个回车，密码为空，如下：</p></li><li><p>输入：cat ~&#x2F;.ssh&#x2F;id_rsa.pub，将以ssh-rsa开头的所有序列复制到key框中，点击Add key按钮</p></li></ol><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/mango22_2/article/details/124351063">git版本控制命令</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></image>]]></content>
    
    
    <summary type="html">GIT常用命令说明</summary>
    
    
    
    <category term="Git" scheme="https://zml3589110.github.io/categories/Git/"/>
    
    
    <category term="版本控制" scheme="https://zml3589110.github.io/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    <category term="git" scheme="https://zml3589110.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>GIT版本控制(一)之常见命令汇总</title>
    <link href="https://zml3589110.github.io/posts/1498888733.html"/>
    <id>https://zml3589110.github.io/posts/1498888733.html</id>
    <published>2022-05-28T01:51:20.000Z</published>
    <updated>2022-05-28T02:51:21.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h1><blockquote><p>**利用Git命令实现简单的版本控制，设好存档点，保护好自己写的代码不至于丢失，避免重复写代码的尴尬，并跟踪自己的所有修改变化。 **</p></blockquote><hr><h1 id="主干内容："><a href="#主干内容：" class="headerlink" title="主干内容："></a>主干内容：</h1><h2 id="一、设置git-config-–global-参数"><a href="#一、设置git-config-–global-参数" class="headerlink" title="一、设置git config  –global 参数"></a>一、设置git config  –global 参数</h2><p>有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，一个电脑只需配置一次，当然你也可以对某个仓库指定的不同的用户名和邮箱，需要另外配置，就不多说了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  –-global user.name <span class="string">&quot;用户名&quot;</span></span><br><span class="line">git config  –-global user.email <span class="string">&quot;用户邮箱&quot;</span></span><br></pre></td></tr></table></figure><h2 id="二、初始化一个仓库-git-init"><a href="#二、初始化一个仓库-git-init" class="headerlink" title="二、初始化一个仓库 git init"></a>二、初始化一个仓库 git init</h2><p>什么是仓库？仓库又名版本库，英文名repository，你可以简单的理解成一个文件夹，这个文件夹里面的所有文件都可以被Git管理起来，每个文件的修改，删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻还可以将文件”还原”。</p><p>选中你的工程文件夹 –&gt; 右键 –&gt; Git Bash Here ，进入Git 命令窗口，输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br><span class="line">// <span class="built_in">pwd</span>   //使用该命令可以查看初始化后的仓库绝对路径</span><br></pre></td></tr></table></figure><blockquote><p>这样，就创建好了仓库，并默认在（master）主分支上。</p></blockquote><h2 id="三、把文件添加到仓库中-git-add"><a href="#三、把文件添加到仓库中-git-add" class="headerlink" title="三、把文件添加到仓库中 git add"></a>三、把文件添加到仓库中 git add</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add test1.txt   // 可以单个添加</span><br><span class="line">git add .   // 也可以一次添加所有文件</span><br></pre></td></tr></table></figure><h2 id="四、提交到本地仓库-git-commit"><a href="#四、提交到本地仓库-git-commit" class="headerlink" title="四、提交到本地仓库 git commit"></a>四、提交到本地仓库 git commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交信息说明&quot;</span></span><br></pre></td></tr></table></figure><h2 id="五、新建分支并切换到新建分支-git-checkout-b"><a href="#五、新建分支并切换到新建分支-git-checkout-b" class="headerlink" title="五、新建分支并切换到新建分支 git checkout -b"></a>五、新建分支并切换到新建分支 git checkout -b</h2><blockquote><p>可以将主分支保护起来，所有修改都在分支上进行，当调试ok后，再合并分支。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 新的分支名  // 新建分支并切换到新建分支</span><br><span class="line"> </span><br><span class="line">git checkout 分支名  // 切换到指定分支</span><br><span class="line">git branch    // 查看分支 * 后面的分支是当前分支</span><br></pre></td></tr></table></figure><h2 id="六、合并分支-git-merge-branch"><a href="#六、合并分支-git-merge-branch" class="headerlink" title="六、合并分支 git merge branch"></a>六、合并分支 git merge branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge branch 主分支名 分支命  // 合并两个任意分支</span><br></pre></td></tr></table></figure><h2 id="七、删除本地分支-git-branch-d"><a href="#七、删除本地分支-git-branch-d" class="headerlink" title="七、删除本地分支 git branch -d"></a>七、删除本地分支 git branch -d</h2><blockquote><p><strong>合并分支后并不会删除原分支，需要手动删除。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d 分支   // 删除本地分支</span><br></pre></td></tr></table></figure><h2 id="八、连接远程仓库-git-remote-add-origin"><a href="#八、连接远程仓库-git-remote-add-origin" class="headerlink" title="八、连接远程仓库 git remote add origin"></a>八、连接远程仓库 git remote add origin</h2><blockquote><p>远程仓库的作用在于共享代码，协同编程，如果只是版本控制也可不用上传。（主要是本人学艺不精，远程推送第一次还正常，第二次推送总是出现各种冲突）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:用户名/远程仓库名.git   // 使用HHS 加密传输</span><br></pre></td></tr></table></figure><h2 id="九、推送主分支-git-push-u-origin-master"><a href="#九、推送主分支-git-push-u-origin-master" class="headerlink" title="九、推送主分支 git push -u origin master"></a>九、推送主分支 git push -u origin master</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master   // 推送主分支 第一次需要加 -u 后面就不用了</span><br></pre></td></tr></table></figure><h2 id="十、推送任意分支-git-push-origin"><a href="#十、推送任意分支-git-push-origin" class="headerlink" title="十、推送任意分支 git push  origin"></a>十、推送任意分支 git push  origin</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push  origin 分支名  // 推送任意分支</span><br></pre></td></tr></table></figure><h2 id="十一、删除任意远程分支-git-push-origin-："><a href="#十一、删除任意远程分支-git-push-origin-：" class="headerlink" title="十一、删除任意远程分支 git push  origin ："></a>十一、删除任意远程分支 git push  origin ：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push  origin ：分支名  // 删除任意远程分支 （本地分支还在） 注意区别是多了个冒号</span><br></pre></td></tr></table></figure><h2 id="十二、拉取远程分支到本地创建的新分支-git-checkout-b-origin-x2F"><a href="#十二、拉取远程分支到本地创建的新分支-git-checkout-b-origin-x2F" class="headerlink" title="十二、拉取远程分支到本地创建的新分支 git checkout -b   origin&#x2F;"></a>十二、拉取远程分支到本地创建的新分支 git checkout -b   origin&#x2F;</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b 本地新建分支名  origin/远程分支名   // 拉取远程分支到本地创建的新分支</span><br></pre></td></tr></table></figure><h2 id="十三、查看本地与远程所有分支-git-branch-a"><a href="#十三、查看本地与远程所有分支-git-branch-a" class="headerlink" title="十三、查看本地与远程所有分支 git branch -a"></a>十三、查看本地与远程所有分支 git branch -a</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -a  // 查看本地与远程所有分支 </span><br></pre></td></tr></table></figure><h1 id="辅助内容"><a href="#辅助内容" class="headerlink" title="辅助内容"></a>辅助内容</h1><h2 id="一、获取常用git命令及说明-git-或-git-help"><a href="#一、获取常用git命令及说明-git-或-git-help" class="headerlink" title="一、获取常用git命令及说明  git 或 git help"></a>一、获取常用git命令及说明  git 或 git help</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$ git</span><br><span class="line">usage: git [--version] [--<span class="built_in">help</span>] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           [--super-prefix=&lt;path&gt;] [--config-env=&lt;name&gt;=&lt;envvar&gt;]</span><br><span class="line">           &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line"> </span><br><span class="line">These are common Git commands used <span class="keyword">in</span> various situations:</span><br><span class="line"> </span><br><span class="line">start a working area (see also: git <span class="built_in">help</span> tutorial)</span><br><span class="line">   <span class="built_in">clone</span>     Clone a repository into a new directory</span><br><span class="line">   init      Create an empty Git repository or reinitialize an existing one</span><br><span class="line"> </span><br><span class="line">work on the current change (see also: git <span class="built_in">help</span> everyday)</span><br><span class="line">   add       Add file contents to the index</span><br><span class="line">   mv        Move or rename a file, a directory, or a symlink</span><br><span class="line">   restore   Restore working tree files</span><br><span class="line">   rm        Remove files from the working tree and from the index</span><br><span class="line"> </span><br><span class="line">examine the <span class="built_in">history</span> and state (see also: git <span class="built_in">help</span> revisions)</span><br><span class="line">   bisect    Use binary search to find the commit that introduced a bug</span><br><span class="line">   diff      Show changes between commits, commit and working tree, etc</span><br><span class="line">   grep      Print lines matching a pattern</span><br><span class="line">   <span class="built_in">log</span>       Show commit logs</span><br><span class="line">   show      Show various types of objects</span><br><span class="line">   status    Show the working tree status</span><br><span class="line"> </span><br><span class="line">grow, mark and tweak your common <span class="built_in">history</span></span><br><span class="line">   branch    List, create, or delete branches</span><br><span class="line">   commit    Record changes to the repository</span><br><span class="line">   merge     Join two or more development histories together</span><br><span class="line">   rebase    Reapply commits on top of another base tip</span><br><span class="line">   reset     Reset current HEAD to the specified state</span><br><span class="line">   switch    Switch branches</span><br><span class="line">   tag       Create, list, delete or verify a tag object signed with GPG</span><br><span class="line"> </span><br><span class="line">collaborate (see also: git <span class="built_in">help</span> workflows)</span><br><span class="line">   fetch     Download objects and refs from another repository</span><br><span class="line">   pull      Fetch from and integrate with another repository or a <span class="built_in">local</span> branch</span><br><span class="line">   push      Update remote refs along with associated objects</span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;git help -a&#x27;</span> and <span class="string">&#x27;git help -g&#x27;</span> list available subcommands and some</span><br><span class="line">concept guides. See <span class="string">&#x27;git help &lt;command&gt;&#x27;</span> or <span class="string">&#x27;git help &lt;concept&gt;&#x27;</span></span><br><span class="line">to <span class="built_in">read</span> about a specific subcommand or concept.</span><br><span class="line">See <span class="string">&#x27;git help git&#x27;</span> <span class="keyword">for</span> an overview of the system.</span><br></pre></td></tr></table></figure><h2 id="二、显示所有git命令-git-help-a"><a href="#二、显示所有git命令-git-help-a" class="headerlink" title="二、显示所有git命令  git help -a"></a>二、显示所有git命令  git help -a</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help -a  &#x2F;&#x2F; 由于内容太多就不展示了</span><br></pre></td></tr></table></figure><h2 id="三、查看单个命令的说明-git-help"><a href="#三、查看单个命令的说明-git-help" class="headerlink" title="三、查看单个命令的说明 git help ***"></a>三、查看单个命令的说明 git help ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git help branch  &#x2F;&#x2F; 查看branch 的手册信息</span><br></pre></td></tr></table></figure><h2 id="四、查看文件的区别-git-diff"><a href="#四、查看文件的区别-git-diff" class="headerlink" title="四、查看文件的区别 git diff"></a>四、查看文件的区别 git diff</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git diff  &#x2F;&#x2F; 查看当前仓库所有文件与上一次存档的区别，只能区别文本信息</span><br><span class="line"> </span><br><span class="line">git diff 文件1 文件2  &#x2F;&#x2F; 查看两个文件的差异，必须在当前目录下</span><br></pre></td></tr></table></figure><h2 id="五、查看日志（所有提交信息）"><a href="#五、查看日志（所有提交信息）" class="headerlink" title="五、查看日志（所有提交信息）"></a>五、查看日志（所有提交信息）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --oneline  &#x2F;&#x2F; 显示简单的提交日志</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>说明：本文是收集参考文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/weixin_45694843/article/details/124766183">利用Git命令进行版本控制之常见命令汇总</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">利用Git命令进行版本控制之常见命令汇总</summary>
    
    
    
    <category term="Git" scheme="https://zml3589110.github.io/categories/Git/"/>
    
    
    <category term="版本控制" scheme="https://zml3589110.github.io/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    <category term="git" scheme="https://zml3589110.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>涂鸦WIFI基本开发(四)之涂鸦模组WBR3(RTL8720CF)程序下载</title>
    <link href="https://zml3589110.github.io/posts/716589256.html"/>
    <id>https://zml3589110.github.io/posts/716589256.html</id>
    <published>2022-05-27T09:07:20.000Z</published>
    <updated>2022-06-13T06:46:41.011Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>**先根据 <a href="https://zml3589110.github.io/posts/4014484988.html">涂鸦WIFI基本开发(三)之TuyaOS环境搭建</a> 将环境搭建好 **</p></blockquote><h1 id="WBR-系列模组烧录授权方式"><a href="#WBR-系列模组烧录授权方式" class="headerlink" title="WBR 系列模组烧录授权方式"></a>WBR 系列模组烧录授权方式</h1><p>完成模组 SDK 固件开发后，您需要对模组进行烧录授权以实现连接云服务的能力。根据不同场景的需求，涂鸦提供以下两烧录授权方式:</p><blockquote><ol><li>烧录授权一体方案。该方案通过云模组烧录授权平台进行烧录和授权操作，适用于发布阶段。</li><li>烧录授权分立方案。该方案使用芯片烧录工具进行烧录操作，再使用云模组烧录授权平台授权，适用于开发阶段。</li></ol></blockquote><h2 id="烧录文件"><a href="#烧录文件" class="headerlink" title="烧录文件"></a>烧录文件</h2><p>该型号芯片编译后会生成 4 种如下所示的 .bin 文件。</p><blockquote><ol><li>flash_is.bin：boot + 用户区固件。</li><li>oem_rtl8720cf_light_ty_QIO_1.1.2.bin（生产固件）：boot+用户区固件+检测固件。</li><li>oem_rtl8720cf_light_ty_UA_1.1.2.bin：用户区固件。</li><li>oem_rtl8720cf_light_ty_UG_1.1.2.bin：升级区固件。</li></ol></blockquote><h2 id="适用芯片"><a href="#适用芯片" class="headerlink" title="适用芯片"></a>适用芯片</h2><p>适用于核心芯片为 RTL8720CF 的以下模组。<br>WBR1<br>WBR2<br><a href="https://developer.tuya.com/cn/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy">WBR3</a><br>WBR2L<br>WBR3L</p><h2 id="方式一：烧录授权一体方案"><a href="#方式一：烧录授权一体方案" class="headerlink" title="方式一：烧录授权一体方案"></a>方式一：烧录授权一体方案</h2><p>该方案适用于发布阶段，由于涂鸦模组必要进行授权才能连接涂鸦平台，所以授权步骤无法省略。<br>该方案的总体流程如下：</p><ol><li>上传编译固件到 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 。</li><li>平台成固件 key，并基于固件 key 生成授权码。</li><li>使用云模组烧录授权平台进行烧录授权。</li></ol><h3 id="硬件准备"><a href="#硬件准备" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/babfd04c09194a8e9fd41cb8143e25e8.png"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b7cd54dfa91a4a82a2c19f5301df7dc2.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">RX&#x2F;A13</td><td align="left">TX</td></tr><tr><td align="left">TX&#x2F;A14</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr></tbody></table><h3 id="上传固件"><a href="#上传固件" class="headerlink" title="上传固件"></a>上传固件</h3><ol><li>在 <a href="https://iot.tuya.com/">涂鸦 IoT 平台</a> 产品开发的第三步 硬件开发 中，单击 新增自定义固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/54d650e79d9244599d4115789f7feb1f.png"><ol start="2"><li>填写固件参数后，单击 确认。</li></ol><table><thead><tr><th align="left">参数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left">务必和编译固件的名称一致。</td></tr><tr><td align="left">固件类型</td><td align="left">模组固件。</td></tr><tr><td align="left">其他参数</td><td align="left">根据实际情况或界面帮助填写。</td></tr></tbody></table><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/8a2c3ebe03f14fe78fd38a4cc516d853.png"><ol start="3"><li>在 已生成固件 区域中，选择 上传生产固件。</li></ol><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20210303/f7ebced38c1b4687ad8c28fc17c40df6.png"><ol start="4"><li>上传固件并单击 确定。</li></ol><ul><li>生产固件：上传文件名中带有 QIO 的 .bin 文件。</li><li>用户区固件：上传文件名中带有 UA 的.bin 文件。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201228/cd9657d6cd3d4f80b077d71ea08efabe.png"><ol start="5"><li>授权码获取+烧录<br>根据 PID 在平台获取授权码，参考 <a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u">烧录授权</a> 操作步骤章节内容下载安装 云模组烧录授权平台。</li></ol><p>烧录步骤为：</p><ol><li>先给模组断电。</li><li>在云模组烧录授权平台软件中，输入授权码后单击 <strong>运行</strong>。</li><li>烧录成功后，给模组上电。</li></ol><h2 id="方式二：烧录授权分立方案"><a href="#方式二：烧录授权分立方案" class="headerlink" title="方式二：烧录授权分立方案"></a>方式二：烧录授权分立方案</h2><p>该方案适用于开发阶段。该方案的特点是 <strong>授权一次，重复烧录</strong>。假如已经授权过一次，您只需要进行固件 demo 修改烧录，模组即能正常工作。</p><h3 id="硬件准备-1"><a href="#硬件准备-1" class="headerlink" title="硬件准备"></a>硬件准备</h3><p>硬件准备包括串口助手、任意搭载芯片平台 RTL8720CF 的模组、硬件连接图。</p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/e45e43a46203480290ee6ba93608f3d9.png"><table><thead><tr><th align="left">模组对应引脚</th><th align="left">串口对应引脚</th></tr></thead><tbody><tr><td align="left">A_0</td><td align="left">VCC3.3V</td></tr><tr><td align="left">LOG_RX</td><td align="left">TX</td></tr><tr><td align="left">LOG_TX</td><td align="left">RX</td></tr><tr><td align="left">VCC</td><td align="left">VCC3.3V</td></tr><tr><td align="left">GND</td><td align="left">GND</td></tr><tr><td align="left">RXD</td><td align="left">VCC3.3V</td></tr></tbody></table><p><strong>注意事项</strong></p><ul><li>烧录完成后，需要把 <em><strong>A_0</strong></em> 拔掉，并把用户 <em><strong>RX</strong></em> 接回用户串口的 <em><strong>RX</strong></em>。</li><li>烧录完成后，模组需要重新上电才可以正常使用。</li></ul><h3 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h3><p>下载并运行 <a href="https://images.tuyacn.com/smart/AmebaZ2_PGTool_v1.2.7/AmebaZ2_PGTool_v1.2.7.exe">RTL8720CF 芯片烧录工具</a>。<br>请注意以上红色标记区域：</p><ul><li>Port 参数项需要选择实际使用的串口。</li><li>Flash Pin 参数项需要选择 <code>PIN_B6_B12 </code>。</li><li>烧录过程中失败的话，可适当降低波特率。</li></ul><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/db1bb031375b4ed38811343d801796e3.png"><h3 id="下载说明"><a href="#下载说明" class="headerlink" title="下载说明"></a>下载说明</h3><p><strong>烧录步骤</strong></p><ol><li>先给模组断电。</li><li>打开烧录工具后，单击 <strong>Browse</strong> 后选择 <code>flash_is.bin</code>（boot+用户区固件）文件进行烧录。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/7b7d96c843b743f9b76ef6451f2ccfa0.png" alt="WBR 系列模组烧录授权"></li><li>烧录成功后，给模组上电。</li></ol><p><strong>注意事项</strong><br>需要确定模组在断电上电后是否处于烧录状态。如果没有出现下图所示内容，请检查接线 <strong>A_0</strong> 和 <strong>RX</strong> 是否接地。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/adbf286381bb4116bfb20adb260ea9ba.png" alt="WBR 系列模组烧录授权"></p><p><strong>下载</strong><br>下载截图如下：</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/3ffa912854dd46d5bdf54d3d839e64e6.png" alt="WBR 系列模组烧录授权"></p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li>在 RTL8720CF 芯片烧录工具上更新固件时，每次都需要单击 <strong>Browse</strong>，不然会出现以下状态。</li></ol><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201226/b51b2e984bf84bb2a8177cf4acd6f892.png" alt="WBR 系列模组烧录授权"></p><ol start="2"><li>烧录后没有效果<blockquote><p><strong>把程序烧录进去后却没运行，那是因为启动分区的问题导致新程序没能正确启动</strong></p></blockquote></li></ol><ul><li>需要将 keep System Data 去掉勾选，保证每次都是从 OTA1区启动</li></ul><hr><h1 id="烧录方式补充说明"><a href="#烧录方式补充说明" class="headerlink" title="烧录方式补充说明"></a>烧录方式补充说明</h1><p>固件开发完成后，需要将固件和授权码烧录到设备内，才可以连接云服务。涂鸦提供多种烧录授权方式供您使用，您可在不同的开发阶段选择合适的烧录授权方式。</p><h2 id="烧录授权方案"><a href="#烧录授权方案" class="headerlink" title="烧录授权方案"></a>烧录授权方案</h2><p>根据不同的开发阶段、芯片类型和生产方式，涂鸦提供三种烧录授权方案，每种方案的详细说明如下：</p><h3 id="烧录授权一体方案"><a href="#烧录授权一体方案" class="headerlink" title="烧录授权一体方案"></a>烧录授权一体方案</h3><p>适用于使用涂鸦标准模组的开发者使用，固件需要维护在涂鸦 IoT 平台（选用涂鸦现有的模组固件或者将自己开发的模组固件上传至涂鸦 IoT 平台），根据生产方式的区别，通常有以下两种形式。</p><ul><li><p><strong>委托涂鸦进行烧录授权</strong></p><p>涂鸦出货已完成烧录授权的模组，您收到模组后可直接使用。</p></li><li><p><strong>自主进行烧录授权</strong></p><p>涂鸦提供云模组烧录工具+授权码+烧录说明+烧录工装制作说明等一系列资料，您可以参考涂鸦提供的资料自行对模组进行烧录授权。</p></li></ul><h3 id="烧录授权分立方案"><a href="#烧录授权分立方案" class="headerlink" title="烧录授权分立方案"></a>烧录授权分立方案</h3><p>适用于调试阶段和非涂鸦标准模组方案，使用芯片烧录工具烧录固件，涂鸦 <strong>云模组烧录授权平台</strong> 工具只用于授权。</p><ul><li><p><strong>调试阶段</strong></p><p>使用芯片烧录工具第一次烧录固件和授权码后，后续代码有更新，只需要重新烧录用户区固件，不会擦除授权码信息，方便调试。</p></li><li><p><strong>非涂鸦标准模组方案</strong></p><p>涂鸦<strong>云模组烧录授权平台</strong>工具不支持非涂鸦标准芯片烧录固件，只能使用原厂工具烧录固件，再使用<strong>涂鸦云模组授权平台</strong>工具进行授权。</p></li></ul><h3 id="产测-SDK-对接方案"><a href="#产测-SDK-对接方案" class="headerlink" title="产测 SDK 对接方案"></a>产测 SDK 对接方案</h3><p>适用于自身有完整的烧录生产体系的开发者，不使用 <strong>涂鸦云模组烧录授权平台</strong> 工具，通过涂鸦产测 SDK 对接自身生产烧录体系进行固件和授权码烧录，方案详细内容参考 <a href="https://developer.tuya.com/cn/docs/iot/smart-production/production-test-solution/production-test-docking-case/typical-production-test-cases/classic-case?id=K96ruma3lcaai">产测对接经典方案</a>。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>以下流程适用于使用涂鸦 <strong>云模组烧录授权码平台</strong> 工具烧录授权&#x2F;只授权方案。</p><h3 id="烧录软件准备"><a href="#烧录软件准备" class="headerlink" title="烧录软件准备"></a>烧录软件准备</h3><p>进入 <a href="https://pms.tuya.com/">涂鸦 PMS 生产工艺管理系统</a>，注册账号并登录，选择 <strong>软件下载</strong>，下载 <strong>生产解决方案</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/content-platform/hestia/1641436307ca840934acd.png" alt="烧录授权"></p><h3 id="烧录硬件环境搭建"><a href="#烧录硬件环境搭建" class="headerlink" title="烧录硬件环境搭建"></a>烧录硬件环境搭建</h3><p>根据芯片&#x2F;模组的烧录方式搭建硬件环境，不同协议的芯片烧录方式不同，通常可以分为以下三类。</p><ul><li><p><strong>Wi-Fi 模组烧录</strong></p><p>通常使用串口方式烧录授权，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">USB 转 TTL 工具</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">TX</td><td align="left">RX</td><td align="left"></td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>BLE 模组烧录</strong></p><p>通常使用芯片烧录器烧录固件 ，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">Telink 烧录器</td><td align="left">3V3</td><td align="left">3V3</td></tr><tr><td align="left">SWS</td><td align="left">SWM</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li><li><p><strong>Zigbee 模组烧录</strong></p><p>通常使用 J-link 烧录固件，串口烧录授权码，硬件上引脚按如下对应连接。</p><table><thead><tr><th align="left">烧录工具</th><th align="left">模组引脚</th><th align="left">烧录工具引脚</th></tr></thead><tbody><tr><td align="left">J-link 烧录器</td><td align="left">RST</td><td align="left">RESET</td></tr><tr><td align="left">SWDIO</td><td align="left">SWDIO</td><td align="left"></td></tr><tr><td align="left">SWCLK</td><td align="left">SWCLK</td><td align="left"></td></tr><tr><td align="left">3V3</td><td align="left">VCC</td><td align="left"></td></tr><tr><td align="left">USB 转 TTL 工具</td><td align="left">TX</td><td align="left">RX</td></tr><tr><td align="left">RX</td><td align="left">TX</td><td align="left"></td></tr><tr><td align="left">GND</td><td align="left">GND</td><td align="left"></td></tr></tbody></table></li></ul><h3 id="烧录授权操作流程说明"><a href="#烧录授权操作流程说明" class="headerlink" title="烧录授权操作流程说明"></a>烧录授权操作流程说明</h3><ol><li><p>连接硬件到 PC 并安装相关驱动。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201216/a881e7fc191a44f5af3f027b2f5aa9c8.png" alt="烧录授权"></p></li><li><p>根据烧录授权方案，选择是否使用芯片烧录工具，并对上位机进行配置。</p><ul><li><p>烧录授权分立方案</p><p>a. 打开芯片烧录工具，按照操作说明烧录固件。<br>b. 配置上位机为只授权模式。<br><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/a9b2eac98b8e4f338d1d2dee23ccdfaa.png" alt="烧录授权"><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/09007a1f154443638cbc77d505a5c80f.png" alt="烧录授权"></p></li><li><p>烧录授权一体方案</p><p>配置上位机为烧录授权模式。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/38e65b2ab6594914b4c31a5946a71296.png" alt="烧录授权"></p></li></ul></li><li><p>选择串口信息，输入授权码，单击 <strong>运行</strong>。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/5e0225b48d4648cfa0e7a0b21e80fc2f.png" alt="烧录授权"></p><p>上位机会显示烧录的进度及结果，如果出现错误，可点击下方 <strong>错误详细</strong> 处查看原因，并根据提示进行内容，整改后重新烧录。</p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/145f417c572f4273a6d06eeaa6d7ff41.png" alt="烧录授权"></p><p><img src="https://airtake-public-data-1254153901.cos.ap-shanghai.myqcloud.com/goat/20201209/b0fb20892ae145f7a3a46294280c6fa3.png" alt="烧录授权"></p></li></ol><hr><h1 id="烧录授权说明二"><a href="#烧录授权说明二" class="headerlink" title="烧录授权说明二"></a>烧录授权说明二</h1><p>通过涂鸦 IoT 开发平台免开发方案成功生成固件，或使用自定义开发方案生成固件并上传到涂鸦 IoT 开发平台后，下一步需要对模组进行烧录授权。</p><p>本文将详细讲解 3 种不同的烧录授权方式：</p><ul><li><p>自定义开发烧录授权：适用于发布阶段，使用自定义开发方式创建的产品。</p></li><li><p>三明治开发板方式烧录授权：仅适用于涂鸦三明治开发板的烧录授权。</p></li><li><p>使用原厂工具烧录：适用于开发阶段。方案的特点是<strong>授权一次，重复烧录</strong>。</p><p>下文中的生产凭证，授权码和 token 均描述同一事物。</p></li></ul><h2 id="烧录前准备"><a href="#烧录前准备" class="headerlink" title="烧录前准备"></a>烧录前准备</h2><p>烧录授权所需工具如下：</p><ul><li>申请 PMS 账号</li><li>下载「生产解决方案」</li><li>下载 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">BK 原厂烧录工具</a></li><li>一个 USB 转 UART 转换工具</li></ul><h3 id="注册-PMS-账号"><a href="#注册-PMS-账号" class="headerlink" title="注册 PMS 账号"></a>注册 PMS 账号</h3><p>选择个人开发者，按照系统注册指引填写相关信息后，你会收到涂鸦发送的审核成功邮件。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/PMS_1.png" alt="烧录授权"></p><h3 id="下载并安装生产解决方案"><a href="#下载并安装生产解决方案" class="headerlink" title="下载并安装生产解决方案"></a>下载并安装生产解决方案</h3><h4 id="下载生产解决方案"><a href="#下载生产解决方案" class="headerlink" title="下载生产解决方案"></a>下载生产解决方案</h4><p>审核通过后，输入账号和密码登录<a href="https://pms.tuya.com/login">涂鸦 PMS 系统</a>。登录成功后，选择 <strong>知识库管理</strong> &gt; <strong>软件下载</strong> &gt; <strong>生产解决方案</strong>，下载<strong>生产解决方案</strong>。</p><p><img src="https://images.tuyacn.com/content-platform/hestia/16529503994a1e6b5a737.png" alt="烧录授权"></p><h4 id="安装生产解决方案"><a href="#安装生产解决方案" class="headerlink" title="安装生产解决方案"></a>安装生产解决方案</h4><ol><li><p>双击<strong>生产解决方案</strong>安装包，会现下面的警告，单击<strong>更多信息</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_1.png" alt="烧录授权"></p></li><li><p>单击<strong>仍要运行</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_2.png" alt="烧录授权"></p></li><li><p>根据自身需求，设置程序安装的位置，建议不要有中文路径。</p></li><li><p>完成安装后，启动<strong>生产解决方案</strong>，登录账号和密码同涂鸦PMS系统（涂鸦智造）的账号和密码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_3.png" alt="烧录授权"></p></li><li><p>单击<strong>云模组</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/TYPYK_TYDA.png" alt="烧录授权"></p></li><li><p>检查安装情况。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_4.png" alt="烧录授权"></p><ul><li><p>红色框内为黄色，则说明安装成功。可<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#download">下载原厂烧录工具</a>。</p></li><li><p>红色框内全为白色，就需要对软进行如下设置，使它恢复正常。</p><p>(1) 单击 <strong>文件</strong> &gt; <strong>设置</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_5.png" alt="烧录授权"></p><p>(2) 在<strong>基础设置</strong>中，将箭头 ① 指向的<strong>多路选择</strong>的<strong>1*1</strong>选项改为<strong>1*2</strong>，再单击<strong>确认</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_6.png" alt="烧录授权"></p><p><strong>多路选择</strong>改变后，界面如下图所示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_7.png" alt="烧录授权"></p><p>(3) 将多路选择的<strong>1*2</strong>，改回到<strong>1*1</strong>，使两个黄色框变为一个黄色框，设置就完成了。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_TYDA_8.png" alt="烧录授权"></p></li></ul></li></ol><h3 id="下载原厂烧录工具"><a href="#下载原厂烧录工具" class="headerlink" title="下载原厂烧录工具"></a>下载原厂烧录工具</h3><ul><li>单击 <a href="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/tools/bk_writer_gui_V1.6.3.rar">bk_writer_gui_V1.6.3</a> 下载 Beken 原厂工具。</li></ul><h2 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h2><p>不同开发板或模组的烧录流程也不一样。如果使用的是涂鸦的三明治开发板，建议通过<strong>云模组</strong>工具进行烧录。</p><h3 id="自定义开发烧录授权"><a href="#自定义开发烧录授权" class="headerlink" title="自定义开发烧录授权"></a>自定义开发烧录授权</h3><p>此方案适用于 <strong>发布阶段</strong> ，使用自定义开发方式创建的产品，需要先将编译好的固件上传到涂鸦 IoT 开发平台，获取生产凭证（token）后，再使用<strong>云模组</strong>工具进行烧录授权。</p><p>涂鸦模组需要完成授权才能连接涂鸦平台，授权完成的模组如果需要烧录开发好的固件或更改后的固件，可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#original">使用原厂工具烧录</a>。</p><h4 id="上传固件-1"><a href="#上传固件-1" class="headerlink" title="上传固件"></a>上传固件</h4><ol><li><p>进入<a href="https://iot.tuya.com/pmg/list">涂鸦 IoT 开发平台</a>，单击已开发的产品，找到<strong>硬件开发</strong>。按照下图指示，单击<strong>新增自定义固件</strong>，再填写相关固件信息。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件标识名</td><td align="left"><strong>固件标识名</strong>必须和编译时的 <code>apps</code> 下的工程文件夹的名称保持一致。也就是说，如果这里的固件标识名填写为 <code>wifi_one_light</code> ，那么上传的固件应为 SDK 包中 <code>apps</code> 目录下的 <code>wifi_one_light</code> 文件夹中编译所生成的固件。</td></tr><tr><td align="left">Flash 大小</td><td align="left"><strong>Flash 大小</strong>为 <code>16Mbit</code>，也就是 2M 大小。关于不同模组的 flash 大小，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>。<strong>Note</strong>: 1 byte(字节) &#x3D; 8 bits(位)。 16 Mbit ÷ 8 &#x3D; 2M。</td></tr><tr><td align="left">没有被 ② 的框框圈到的参数</td><td align="left">使用默认设置。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_1.png" alt="烧录授权"></p></li><li><p>相关信息填写完成后，单击<strong>上传固件</strong>，进入下一步，开始上传固件。进行如下操作之后，单击<strong>保存</strong>。</p><table><thead><tr><th align="left">参数名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">固件版本</td><td align="left">需要和编译时输入的版本号对应一致。</td></tr><tr><td align="left">生产固件</td><td align="left">上传包含 <code>QIO</code> 的 bin 文件。</td></tr><tr><td align="left">用户区固件</td><td align="left">上传包含 <code>UA</code> 的 bin 文件。</td></tr><tr><td align="left">升级固件</td><td align="left">上传包含 <code>UG</code> 的 bin 文件。</td></tr><tr><td align="left">运行模式</td><td align="left">运行模式选择 <code>QIO</code> 。</td></tr></tbody></table><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_2.png" alt="烧录授权"></p></li><li><p>单击<strong>进行固件上架</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_3.png" alt="烧录授权"></p></li><li><p>选择<strong>不限范围</strong>，单击<strong>确认上架</strong>。</p><p>选择<strong>不限范围</strong>是方便个人开发者管理产品。如果是公司将要量产的产品，请根据你的实际需求设置允许使用范围。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/upload_firmware_4.png" alt="烧录授权"></p></li></ol><h4 id="获取生产凭证（token"><a href="#获取生产凭证（token" class="headerlink" title="获取生产凭证（token)"></a>获取生产凭证（token)</h4><p>将固件上传到涂鸦 IoT 开发平台，成功上架后，就可以免费领取激活码。使用激活码通过<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>单击<strong>免费领取激活码</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_1.png" alt="烧录授权"></p></li><li><p>交付方式选择<strong>生产凭证</strong>，单击<strong>提交订单</strong>。</p><ul><li><strong>生产凭证</strong>: 产测授权工具<strong>烧录授权</strong>功能读取的凭证编码，可自动抓取指定数量的授权码，随固件一起逐个写入设备。需上传生产固件至涂鸦 IoT 开发平台。</li><li><strong>授权码清单</strong>: 写着每一个授权码 UUID 及相关信息的表单，需自行逐个写入设备。</li><li><strong>生产凭证-仅授权</strong>: 产测授权工具<strong>独立授权</strong>功能读取的凭证编码，无需固件，即可对设备进行逐个授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_2.png" alt="烧录授权"></p></li><li><p>单击<strong>去订单列表页看看</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_3.png" alt="烧录授权"></p></li><li><p>确认箭头 ① 所指向信息是否正确。确认无误后，单击箭头 ② 的<strong>下载生产凭证</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_4.png" alt="烧录授权"></p></li><li><p>解压下载好的生产凭证，打开 <code>Token_information.txt</code> 文件，并复制生产凭证。</p></li><li><p>在<strong>云模组</strong>工具中输入生产凭证，并选择工位<strong>烧录授权</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_5.png" alt="烧录授权"></p><p>如果出现<code>获取 token 失败，没有操作权限</code>的错误，请参考<a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#token">获取 token 失败，没有操作权限</a>中的解决办法。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p>生产凭证输入完成后，界面如下图所示。在<strong>基础信息</strong>一栏中显示固件的相关信息。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_6.png" alt="烧录授权"></p></li></ol><h4 id="烧录授权"><a href="#烧录授权" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>在<strong>云模组</strong>工具上根据按照箭头的指引，输入生产凭证，选择工位为<strong>烧录授权</strong>，并单击<strong>确定</strong>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_3.png" alt="烧录授权"></p></li><li><p>按照下表通过 USB 转 UART 工具，把三明治开发板与电脑连接起来。</p><table><thead><tr><th align="center">USB 转 UART 引脚</th><th align="center">三明治 SoC 开发板引脚</th></tr></thead><tbody><tr><td align="center"><code>VCC</code></td><td align="center"><code>VCC</code></td></tr><tr><td align="center"><code>GND</code></td><td align="center"><code>GND</code></td></tr><tr><td align="center"><code>TX</code></td><td align="center"><code>RX</code></td></tr><tr><td align="center"><code>RX</code></td><td align="center"><code>TX</code></td></tr></tbody></table></li><li><p>选择烧录的串口，单击<strong>运行</strong>，然后马上给模组断电再上电或按下复位按键使模组重启，开始对模组进行烧录授权操作。</p><ul><li>重启模组时不要直接把串口工具从电脑上拔掉，避免造成烧录失败。建议拔掉再插上模组与串口工具连接的 VCC 和 GND 的杜邦线。</li><li>CBU 的三明治 SoC 开发板自带 CH304 串口芯片。在单击<strong>运行</strong>后，按下开发板上 USB 口复位按键即可重启芯片，开始烧录授权。</li></ul><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_4.png" alt="烧录授权"></p></li><li><p>（可选）如果在烧录授权过程中出现<strong>进入产测失败</strong>的错误，可能是因为该开发板在上一次烧录授权时已经累计连接到网络超过15分钟，设备此时关闭了产测功能，才导致无法进入产测，出现授权失败的情况。解决办法可参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#enter">进入产测失败</a>。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_1.png" alt="烧录授权"></p></li></ol><h3 id="三明治开发板方式烧录授权"><a href="#三明治开发板方式烧录授权" class="headerlink" title="三明治开发板方式烧录授权"></a>三明治开发板方式烧录授权</h3><p>本方法仅适用于涂鸦三明治开发板的烧录授权。</p><p>在涂鸦 IoT 开发平台上使用免开发方案创建的产品只能通过绑定三明治 SoC 主控板，在三明治开发套件中申请授权码的方式申请到生产凭证（token）。如果账号没有绑定过三明治 SoC 主控板，只有涂鸦模组，既不能获取到免开发方案产品的 token ，也不能给模组烧录授权免开发方案的固件。</p><h4 id="绑定三明治开发板"><a href="#绑定三明治开发板" class="headerlink" title="绑定三明治开发板"></a>绑定三明治开发板</h4><p>打开<a href="https://iot.tuya.com/">涂鸦 IoT 开发平台</a>，单击<strong>产品</strong> &gt; <strong>开发者工具</strong> &gt; <strong>三明治开发板</strong> &gt; <strong>绑定开发板</strong>。在弹窗中，输入开发板上的 ID 和密码，即可完成绑定。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bound_sandwich_board_1.png" alt="烧录授权"></p><h4 id="三明治开发板获取-Token"><a href="#三明治开发板获取-Token" class="headerlink" title="三明治开发板获取 Token"></a>三明治开发板获取 Token</h4><p>绑定完成后，根据下方图片指示的顺序进行操作，选择要烧录的产品，单击<strong>申请新的授权码</strong>，便可成功申请到授权码。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_1.png" alt="烧录授权"></p><h4 id="烧录授权-1"><a href="#烧录授权-1" class="headerlink" title="烧录授权"></a>烧录授权</h4><ol><li><p>复制从涂鸦 IoT 开发平台上获取到的授权码后，打开<strong>云模组</strong>工具。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/sandwich_board_download_2.png" alt="烧录授权"></p></li><li><p>烧录授权可以参考 <a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2#flash">烧录授权</a> ，进行操作。</p></li></ol><h3 id="使用原厂工具烧录"><a href="#使用原厂工具烧录" class="headerlink" title="使用原厂工具烧录"></a>使用原厂工具烧录</h3><p>此方案适用于开发阶段。方案的特点是 <strong>授权一次，重复烧录</strong>。方案需要确保模组在烧录前已完成授权，且烧录时要注意选择的 flash 区域，避免程序写入位置错误，导致程序无法正常运行。</p><p>在开发过程中，如果每次使用<strong>云模组</strong>工具对模组进行烧录授权，相对来说不太方便。如果模组已经完成授权，使用原厂工具进行烧录授权的方式，不但不会刷掉模组的授权信息，还可以达到 <strong>授权一次，重复烧录</strong> 的效果。</p><h4 id="Beken-平台"><a href="#Beken-平台" class="headerlink" title="Beken 平台"></a>Beken 平台</h4><p>使用此方法只能烧录应用区固件，无法给模组进行授权操作。可以使用该方法给已经授权过的模组进行烧录，避免每次更新代码生成固件后都要上传到涂鸦 IoT 开发平台使用<strong>云模组</strong>工具进行烧录授权。</p><ol><li><p>按照下图步骤，在箭头 ① 所指向的烧录对象中，根据实际烧录的模组选择对应的芯片型号，可在<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>查看相关模组规格书，确认模组使用的芯片型号。</p></li><li><p>单击箭头 ② 指向的<strong>浏览</strong>按钮，选择成功编译生成的包含了 <code>UA</code> 字样的 bin 文件（该文件就是应用区固件，这里选择的固件就是<code>wifi_one_light</code>）。</p></li><li><p>在箭头 ③ 和箭头 ④ 指向的<code>起始地址</code>中填入<code>0x00011000</code>，<code>操作长度</code>中填入<code>0x00119000</code>。</p></li><li><p>在箭头 ⑤ 指向的位置选择正确的烧录串口，将箭头 ⑥ 指向的<strong>通讯波特率</strong>调整为最高，可以加快烧录速度。</p></li><li><p>单击箭头 ⑦ 指向的<strong>烧录</strong>，给模组通断电或复位模组使模组重启，开始烧录。烧录完成后，更改后的代码就成功烧录到模组中。你可以不再使用<strong>云模组</strong>工具对该模组再次进行授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/bk_writer_download.png" alt="烧录授权"></p></li></ol><h2 id="烧录授权-FAQs"><a href="#烧录授权-FAQs" class="headerlink" title="烧录授权 FAQs"></a>烧录授权 FAQs</h2><h3 id="获取-token-失败，没有操作权限"><a href="#获取-token-失败，没有操作权限" class="headerlink" title="获取 token 失败，没有操作权限"></a>获取 token 失败，没有操作权限</h3><p>输入生产凭证是，出现<code>获取 token 失败：没有操作权限</code>的提示。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_token_error.png" alt="烧录授权"></p><p><strong>解决办法</strong>：<br>如果出现该错误，需要登录 <a href="https://pms.tuya.com/">PMS 系统</a>，选择<strong>生产管理</strong> &gt; <strong>工单管理</strong> &gt; <strong>生产凭证确认</strong>，输入生产凭证，并单击<strong>确认</strong>。之后，回到<strong>云模组</strong>工具中输入该生产凭证，单击<strong>确认</strong>，即可开始烧录授权操作。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/no_operate_rights.png" alt="烧录授权"></p><h3 id="抢总线失败错误"><a href="#抢总线失败错误" class="headerlink" title="抢总线失败错误"></a>抢总线失败错误</h3><p>可能其它软件占用了烧录使用的串口。</p><p><strong>解决办法</strong>：<br>可以将烧录串口工具软件全部关闭，或直接插拔 USB 转 TTL 串口工具。</p><h3 id="获取固件指纹错误"><a href="#获取固件指纹错误" class="headerlink" title="获取固件指纹错误"></a>获取固件指纹错误</h3><p>在仅授权的场景下，会出现<strong>获取固件指纹错误</strong>的情况，如下图显示。错误原因是由于模组内烧录的固件名称或版本号与授权的固件名称或版本号不一致。</p><p><strong>解决办法</strong>：</p><ol><li><p>输入与模组固件名称和版本号一致的生产凭证（token），再进行授权处理。</p></li><li><p>对该模组进行烧录授权处理（非仅授权）。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/error_get_firmware_fingerprint.png" alt="烧录授权"></p></li></ol><h3 id="进入产测失败"><a href="#进入产测失败" class="headerlink" title="进入产测失败"></a>进入产测失败</h3><p>设备累计联网时间超过 15 分钟后，会关闭产测功能。在烧录授权过程中，如果出现<strong>进入产测失败</strong>的错误，并且日志中有 <code>have actived over 15 min, not enter mf_init</code> 字样的日志打印，说明设备关闭了产测功能。</p><p><strong>解决办法</strong>：<br>你需要先擦除 flash 中的相关数据才能授权成功。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_3.png" alt="烧录授权"></p><h4 id="修改代码（通用方式）"><a href="#修改代码（通用方式）" class="headerlink" title="修改代码（通用方式）"></a>修改代码（通用方式）</h4><p>进入产测失败时，可以在 <code>tuya_device.c</code> 文件 <code>pre_device_init()</code> 函数内调用 <code>mf_test_ignore_close_flag() ;</code>函数，忽略产测关闭标志，从而避免因为产测关闭而无法通过授权。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_4.png" alt="烧录授权"></p><h4 id="Beken-系列，使用原厂工具擦除相关数据"><a href="#Beken-系列，使用原厂工具擦除相关数据" class="headerlink" title="Beken 系列，使用原厂工具擦除相关数据"></a>Beken 系列，使用原厂工具擦除相关数据</h4><p>打开 Beken 原厂提供的烧录授权 <code>bk_writer</code> 工具，按照下图步骤将箭头 ① 指向的<strong>烧录对象</strong>选项改为对应的芯片。关于模组芯片型号，参考涂鸦<a href="https://developer.tuya.com/cn/docs/iot/network-module-overview?id=Ka4z12ojepber">文档中心</a>的相关模组规格书。</p><p>三明治 SoC Beken 平台开发板介绍:</p><ul><li>WB3S: 烧录对象选择 BK7231</li><li>CBU: 烧录对象选择 BK7231N</li><li>起始地址：<code>0x001EE000</code>，操作长度：<code>0x00012000</code>。</li></ul><p>选择开发板烧录串口，单击<strong>擦除 Flash</strong>按钮，重启模块，开始擦除内存数据。</p><p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/15min_product_test_2.png" alt="烧录授权"></p><hr><blockquote><p><strong>说明：本文是收集参考涂鸦官方文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/qq_38179373/article/details/112202787">涂鸦模组二次开发RTL8720CF</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/burn-and-authorize-wbr-series-modules?id=Ka78imt8pf85p#title-3-%E6%96%B9%E5%BC%8F%E4%B8%80%EF%BC%9A%E7%83%A7%E5%BD%95%E6%8E%88%E6%9D%83%E4%B8%80%E4%BD%93%E6%96%B9%E6%A1%88">WBR 系列模组烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/overview-of-download-firmware-and-authorization?id=Ka4zcqfo0eb5u#title-5-%E7%83%A7%E5%BD%95%E8%BD%AF%E4%BB%B6%E5%87%86%E5%A4%87">烧录授权</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/flash-and-authorize?id=Kaytfatwdbfj2">烧录授权(通用说明)</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">通过 USB-TTL 连线将程序下载至模组当中</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/WIFI/"/>
    
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="C语言" scheme="https://zml3589110.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="涂鸦" scheme="https://zml3589110.github.io/tags/%E6%B6%82%E9%B8%A6/"/>
    
    <category term="WBR3" scheme="https://zml3589110.github.io/tags/WBR3/"/>
    
    <category term="WIFI模块" scheme="https://zml3589110.github.io/tags/WIFI%E6%A8%A1%E5%9D%97/"/>
    
    <category term="蓝牙" scheme="https://zml3589110.github.io/tags/%E8%93%9D%E7%89%99/"/>
    
    <category term="rtl8720cf" scheme="https://zml3589110.github.io/tags/rtl8720cf/"/>
    
  </entry>
  
  <entry>
    <title>涂鸦WIFI基本开发(三)之TuyaOS环境搭建</title>
    <link href="https://zml3589110.github.io/posts/4014484988.html"/>
    <id>https://zml3589110.github.io/posts/4014484988.html</id>
    <published>2022-05-27T07:33:20.000Z</published>
    <updated>2022-05-27T09:03:53.432Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、SDK-获取"><a href="#一、SDK-获取" class="headerlink" title="一、SDK 获取"></a>一、SDK 获取</h1><blockquote><p>在 涂鸦 IoT 平台 上完成了产品创建。探后在【硬件开发】页面选择好云模组WBR3后，即可在下载资料中找到对应的 SDK，点击【下载】</p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/332c4f488fd6014646cb96b17786bb7a.png"><p>得到相应压缩包 <font color="red">ty_iot_household_electrical_appliances_sdk_rtl8720cf_ameba_2.3.0</font> 就是本芯片相对应SDK，<br>在 README.md 中有相对应简介说明,SDK 目录结构说明以及使用说明等。</p><blockquote><p><strong>注意：压缩包需要在ubuntu上解压，否则很容易出现文件链接错误</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/img_convert/c00f6bdb9bf47a2641ca1b40d392bf13.png"><h1 id="二、安装-VirtualBox-虚拟机"><a href="#二、安装-VirtualBox-虚拟机" class="headerlink" title="二、安装 VirtualBox 虚拟机"></a>二、安装 VirtualBox 虚拟机</h1><h2 id="第-1-步：软件下载"><a href="#第-1-步：软件下载" class="headerlink" title="第 1 步：软件下载"></a>第 1 步：软件下载</h2><ol><li>进入<a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a> 官网，单击红色框中  Windows hosts 的链接开始下载 VirtualBox 安装包。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/download_virtual_box.png"><ol start="2"><li>进入<a href="https://ubuntu.com/download/desktop">Ubuntu</a> 官网，下载 Ubuntu 系统镜像。这里下载的是 Ubuntu 20.04 （推荐使用 Ubuntu 18 及以上版本）作为开发编译环境<h2 id="第-2-步：安装-VirtualBox"><a href="#第-2-步：安装-VirtualBox" class="headerlink" title="第 2 步：安装 VirtualBox"></a>第 2 步：安装 VirtualBox</h2>点击安装包后直接按照 VirtualBox 软件的提示步骤即可安装完成。</li><li>双击下载好的 VirtualBox 安装包，出现下图界面，单击下一步。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_1.png"><ol start="2"><li>安装功能和安装位置。安装功能使用默认选项，一般不做改变。安装路径可以按照个人喜好进行设置。设置完成后，单击下一步，继续安装。<blockquote><p>如果你的电脑 C 盘空间足够，选择默认目录安装即可。如果电脑 C 盘空间不太充足或不想安装在 C 盘，单击 ① 箭头指向的浏览按钮，修改安装目录并单击下一步。在选择安装路径时，不建议安装路径中包含中文，避免在将来出现一些意想不到的情况。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_2.png"><ol start="3"><li>单击 下一步，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_3.png"><ol start="4"><li>单击 是，继续安装。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_4.png"><ol start="5"><li>上述步骤配置完成后，单击 安装 开始安装软件。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_5.png"><ol start="6"><li>等待 VirtualBox 安装完成后，单击 完成，运行 VirtualBox。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/VirtualBox_install_6.png"><h2 id="第-3-步：安装Ubuntu虚拟机"><a href="#第-3-步：安装Ubuntu虚拟机" class="headerlink" title="第 3 步：安装Ubuntu虚拟机"></a>第 3 步：安装Ubuntu虚拟机</h2><ol><li>VirtualBox 安装完成后，单击新建，开始创建虚拟机。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_1.png"><ol start="2"><li>名称输入 Ubuntu，下面的类型和版本会自动填充为对应的选项。这里使用的 Ubuntu 镜像为 Ubuntu20.04，所以类型应为Linux，版本应为Ubuntu（64-bit）。单击文件夹，选择其它，将要创建的虚拟机选择到你想要放的位置。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_2.png"><ol start="3"><li>为新创建的虚拟机分配合适的内存大小。<blockquote><p>根据使用的电脑配置情况进行分配，当然分配的内存大一点，虚拟机也会相对于流畅一点。这里使用的电脑内存大小为 16 GB，在实际分配的时候为它分配 4 GB（4096 MB）的内存大小。后续使用过程中，还可以再次修改内存大小。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_3.png"><ol start="4"><li>为将要创建的虚拟机分配合适的磁盘大小。<blockquote><p>根据自身电脑资源情况进行分配，这里为它分配 50 GB 的磁盘大小。在安装完成后，分配的磁盘空间大小也是可以修改的。</p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_4.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_6.png"><p>更改创建的磁盘文件所放置的文件夹，为虚拟机创建的磁盘大小设置为50 GB.</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_7.png"><ol start="5"><li>虚拟机的资源分配完成后，就可以开始为虚拟机安装 Ubuntu 系统了。单击箭头 ① 所指向光驱，选择下载完成的 Ubuntu 镜像，再单击箭头 ③ 所指向的启动按钮。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_8.png"><ol start="6"><li>安装 Ubuntu 时，建议语言设置为英文。如果设置为中文，在将来可能出现一些意想不到的问题。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_9.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_10.png"><ol start="7"><li>建议设置为最小安装，取消在安装过程中的下载更新，以加快镜像的安装速度。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_11.png"><ol start="8"><li>选择擦除磁盘并安装 Ubuntu，单击Install Now按钮，开始安装 Ubuntu。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_12.png"><ol start="9"><li>这一步会弹出将会对磁盘分区进行修改的提示，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_13.png"><ol start="10"><li>选择时区，默认为上海。可以不用做修改，单击Continue。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_14.png"><ol start="11"><li>输入用户名和密码，按照自身喜好进行设置就好。<blockquote><p><strong>此处设置的用户名和密码在后续步骤中将会多次用于认证操作。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_15.png"><ol start="12"><li>完成上述步骤后，根据界面提示重启电脑。重启后，软件会提示移除镜像安装光驱，此时单击ENTER。等待 VirtualBox 移除镜像安装光驱后，单击虚拟机并按下回车键等待虚拟机配置完成。<blockquote><p><strong>如果软件没有自动移除光驱镜像，您可以在进行手动移除。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/Ubuntu_install_16.png"><ol start="13"><li>等待虚拟机开机完成后，输入密码即可进入 Ubuntu 的桌面虚拟机。</li></ol><h2 id="第-4-步：-安装增强工具"><a href="#第-4-步：-安装增强工具" class="headerlink" title="第 4 步： 安装增强工具"></a>第 4 步： 安装增强工具</h2><blockquote><p><strong>Ubuntu 安装成功后，为了能够更加方便地使用虚拟机，可以给虚拟机安装增强功能。安装成功后，支持共享粘贴板内容、屏幕自动调整分辨率等功能。</strong></p></blockquote><ol><li>在虚拟机界面，单击设备 &gt; 安装增强工具。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_1.png"><ol start="2"><li>单击Run，开始安装增强功能。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_2.png"><ol start="3"><li>等待软件提示 Press Return to close this window…，按下回车并重启虚拟机。此时，虚拟机的桌面大小会根据窗口大小，调整分辨率。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_3.png"><ol start="4"><li>选择 设备 &gt; 共享粘贴板 &gt; 双向 后，就可以在 Windows 上复制内容并在 Ubuntu 虚拟机中进行粘贴或者反向操作。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/install_enhancements_4.png"><h1 id="三、安装编译工具"><a href="#三、安装编译工具" class="headerlink" title="三、安装编译工具"></a>三、安装编译工具</h1><blockquote><p><strong>注意：这里吃过亏，设置配置的编译环境是需要在ubuntu进行，否则会出现文件链接出现错误！因为之前 ESP8266 环境编译太久导致忘记了！环境跟源码是可以分开，在环境搭建好之后可以通过 WIN 共享来放置程序代码！</strong></p></blockquote><p>此时，我们还需要安装一些编译所必备的工具，才可以对涂鸦提供的 SDK 进行编译。<br>本文以 Samba 工具为例进行介绍。Samba 工具使我们能够在 Windows 下修改工程项目，在 Linux 下对修改后的工程进行编译，使用 Samba 工具提供的文件共享，也可以方便我们进行开发。<br>为什么不使用 VirtualBox 提供的共享文件夹功能而使用 Samba 工具来共享文件夹呢？因为 Linux 和 Windows 的文件系统是不一样的，如果使用 VirtualBox 上的共享文件夹，当你在 GitHub 上把 SDK 克隆到 VirtualBox 提供的共享文件夹中时，编译的时候可能会出现编译失败的问题。</p><h2 id="第-1-步：-修改下载源"><a href="#第-1-步：-修改下载源" class="headerlink" title="第 1 步： 修改下载源"></a>第 1 步： 修改下载源</h2><blockquote><p>为了使下载软件的速度更快，在安装软件前，先将下载源修改为国内源，以加快下载软件的速度。</p></blockquote><ol><li>打开 Software&amp;Updates。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_1.png"><ol start="2"><li>单击Download from后的选项框，选择选项框内的<strong>Other…</strong>选项。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_2.png"><ol start="3"><li>单击 Select Best Server，软件将自动为你选择最快的下载源。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_3.png"><ol start="4"><li>等待系统自动选择完成后，单击 Choose Server。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_4.png"><ol start="5"><li>单击 Close 后根据界面提示，再单击 Reload，等待系统刷新缓存完成。</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_5.png"><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/ubuntu_change_download_source_6.png"><ol start="6"><li>系统刷新缓存完成后，Ubuntu 的软件下载源成功更改为国内源。</li></ol><h2 id="第-2-步：下载编译依赖工具"><a href="#第-2-步：下载编译依赖工具" class="headerlink" title="第 2 步：下载编译依赖工具"></a>第 2 步：下载编译依赖工具</h2><p>在虚拟机中，单击右键并选择 <strong>Open in Terminal</strong> 来打开终端，再依次运行以下命令：</p><blockquote><p><strong>在输入命令后，可能会提醒你输入密码。</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update -y</span><br><span class="line">sudo apt-get upgrade -y</span><br><span class="line">sudo apt-get install net-tools build-essential wget git python libc6-i386</span><br></pre></td></tr></table></figure><p>至此，编译所需要的工具都已下载完成，可以在 Ubuntu 下编译涂鸦的 SDK 了。</p><h2 id="第-3-步：-安装-Samba"><a href="#第-3-步：-安装-Samba" class="headerlink" title="第 3 步： 安装 Samba"></a>第 3 步： 安装 Samba</h2><blockquote><p>使用 Samba 在 Ubuntu 和 windows 之间进行文件共享。</p></blockquote><ol><li>在安装 Samba 之前，需要设置虚拟机的网络。先关闭虚拟机，然后按照下图中的步骤进行设置。<br>（1）选择 设置 &gt; 网络 &gt; 网卡2。<br>（2）在 网卡2 中选择 启动网络连接，连接方式选择 仅主机(Host-Only)网络。<br>（3）单击 确认 完成设置。</li></ol><blockquote><p><strong>注意：这里我使用的是桥接网卡模式，因为习惯使用这个方式，而且我的虚拟机也没网卡2</strong></p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_1.png"><ol start="2"><li>设置完成后打开虚拟机，输入下列命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><blockquote><p>这个是查看网卡信息</p></blockquote></li></ol><p>输入ifconfig 命令后得到电脑的 IP 地址，如下图显示：</p><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_2.png"><ol start="3"><li><p>输出下列命令，开始安装 Samba。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install samba cifs-utils samba-common</span><br></pre></td></tr></table></figure></li><li><p>Samba 安装完成后，需要创建 Ubuntu 和 Windows 可以互相访问的共享目录，并将共享目录的权限设置为可读可写可执行，依次执行下列命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /home/share/samba</span><br><span class="line">sudo chmod 777 -R /home/share/samba</span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，然后对 Samba 的配置进行修改：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/samba/smb.conf</span><br></pre></td></tr></table></figure><p>在文件尾部加入下列字段，然后保存退出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[share] </span><br><span class="line">path = /home/share/samba </span><br><span class="line">available = yes </span><br><span class="line">browseable = yes </span><br><span class="line">public = no</span><br><span class="line">writable = yes</span><br></pre></td></tr></table></figure><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_3.png"></li><li><p>输入下列命令，添加指定用户至 smb 用户组，然后按照提醒设置你 Samba 的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo smbpasswd -a xxxx <span class="comment">#(xxxx 为当前登录用户名，我这里xxxx就应该是y)</span></span><br></pre></td></tr></table></figure></li><li><p>输入下列命令，重启 Samba：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service smbd restart</span><br></pre></td></tr></table></figure></li><li><p>在 Windows 下，打开我的电脑，根据上面获取到的信息，按照下面图片的格式，将 IP 地址换成你 Ubuntu 虚拟机上的 IP 地址，填写在箭头 ② 的位置。如果忘记了虚拟机的 IP 地址，可以在 Ubuntu 上输入 ifconfig 命令进行查询。</p><blockquote><p><strong>注意：这里建议修改成主机名字而不是IP地址，因网内路由分配是DNS随机分配IP地址，所以下次可能又要重新输入IP<br>例如我的是: yichen-VirtualBox 那么设置连接后为：<br>share (yichen-VirtualBox (yichen-VirtualBox server (Samba, Ubuntu)))</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_4.png"><ol start="9"><li>填入用户名和你设置的 Samba 密码。<blockquote><p><strong>建议勾选记住我的凭证，避免每次打开共享文件夹都要填写账号密码。</strong></p></blockquote></li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/samba_install_5.png"><ol start="10"><li>至此，Samba 已经安装配置成功。</li></ol><h1 id="四、编译验证"><a href="#四、编译验证" class="headerlink" title="四、编译验证"></a>四、编译验证</h1><p>通过上面的步骤，已经将虚拟机基本设置完成。但为了验证对虚拟机的设置是否成功，我们需要获取涂鸦 SDK 进行编译，以验证我们已成功安装与编译相关的工具。<br>涂鸦 SDK 从涂鸦的 GitHub 仓库拉取和从涂鸦 IoT 开发平台下载。在下面的两种方式中选择一种进行编译验证即可。</p><h2 id="方式一：GitHub-上获取-SDK-进行验证"><a href="#方式一：GitHub-上获取-SDK-进行验证" class="headerlink" title="方式一：GitHub 上获取 SDK 进行验证"></a>方式一：GitHub 上获取 SDK 进行验证</h2><blockquote><p><strong>我在 Github 上找不到 WBR3 类型的 rtl8720cf 芯片，所以使用的是方式二，即开头的下载方式</strong></p></blockquote><p>以 BK7231N 的 SDK 为例进行演示。</p><ol><li>在 Ubuntu 虚拟机下，输入下列命令，获取 bk7231n 的 SDK：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/tuya/tuya-iotos-embeded-sdk-wifi-ble-bk7231n.git</span><br></pre></td></tr></table></figure></li><li>输入下列命令，开始编译 tuya_demo_template：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> tuya-iotos-embeded-sdk-wifi-ble-bk7231n/</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#该编译命令将会在下一部分进行介绍</span></span><br></pre></td></tr></table></figure></li><li>编译成功，则说明上述操作均已成功完成。编译成功如下图所示：</li></ol><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/build_success.png"><h2 id="方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）"><a href="#方式二：从涂鸦-IoT-开发平台下载-SDK-进行验证（使用的是本方式）" class="headerlink" title="方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）"></a>方式二：从涂鸦 IoT 开发平台下载 SDK 进行验证（使用的是本方式）</h2><p>在<a href="https://iot.tuya.com/">涂鸦IoT 开发平台</a> 上成功创建自定义开发的产品后，在硬件开发中选择 TuyaOS，即可下载该模组的 SDK。</p><blockquote><p>详细步骤，可参考<a href="https://developer.tuya.com/cn/docs/iot/iot-platform?id=Kaytf2hpelxqs#title-5-%E7%AC%AC5%E6%AD%A5%EF%BC%9A%20%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91%E8%AE%BE%E7%BD%AE">产品创建</a> 内容。</p></blockquote><img src="https://images.tuyacn.com/smart/shiliu_zone/SOC_Develop/get_SDK_1.png"><p>将下载好的 SDK 复制到 Windows 和 Ubuntu 的共享文件夹中，在 Ubuntu 虚拟机中输入下列命令进行编译：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/share/samba/</span><br><span class="line">tar -xzvf *.tar.gz <span class="comment">#注意：该命令会将当前目录下所有后缀名为.tar.gz的文件进行解压，建议将*.tar.gz改为你实际要解压的文件的完整名字</span></span><br><span class="line"><span class="built_in">cd</span> ty_iot_sdk_bk7231n_2.3.1</span><br><span class="line">sh build_app.sh apps/tuya_demo_template/ tuya_demo_template 1.0.0 <span class="comment">#输入该命令将会在所需相关资源下载完成后开始编译</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>说明：本文是收集参考涂鸦官方环境搭建文档，以方便查看</strong></p></blockquote><hr><h1 id="信息链接"><a href="#信息链接" class="headerlink" title="信息链接:"></a>信息链接:</h1><ol><li><a href="https://blog.csdn.net/sandwich_iot/article/details/124094533?spm=1001.2014.3001.5502">涂鸦蓝牙SDK开发系列教程——3.环境搭建</a></li><li><a href="https://developer.tuya.com/cn/docs/iot/SoC-redevelopment_Windows?id=Kauqrxxka0wv6">环境搭建（Windows）</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">在ubuntu系统下搭建TuyaOS开发环境</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="WIFI" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/WIFI/"/>
    
    
    <category term="物联网" scheme="https://zml3589110.github.io/tags/%E7%89%A9%E8%81%94%E7%BD%91/"/>
    
    <category term="C语言" scheme="https://zml3589110.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="涂鸦" scheme="https://zml3589110.github.io/tags/%E6%B6%82%E9%B8%A6/"/>
    
    <category term="WBR3" scheme="https://zml3589110.github.io/tags/WBR3/"/>
    
    <category term="WIFI模块" scheme="https://zml3589110.github.io/tags/WIFI%E6%A8%A1%E5%9D%97/"/>
    
    <category term="蓝牙" scheme="https://zml3589110.github.io/tags/%E8%93%9D%E7%89%99/"/>
    
    <category term="ubuntu" scheme="https://zml3589110.github.io/tags/ubuntu/"/>
    
    <category term="VirtualBox" scheme="https://zml3589110.github.io/tags/VirtualBox/"/>
    
    <category term="rtl8720cf" scheme="https://zml3589110.github.io/tags/rtl8720cf/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu无法访问github</title>
    <link href="https://zml3589110.github.io/posts/969895767.html"/>
    <id>https://zml3589110.github.io/posts/969895767.html</id>
    <published>2022-05-24T07:56:20.000Z</published>
    <updated>2022-05-24T08:30:13.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查询github-com和github-global-ssl-fastly-net的ip地址"><a href="#查询github-com和github-global-ssl-fastly-net的ip地址" class="headerlink" title="查询github.com和github.global.ssl.fastly.net的ip地址"></a>查询github.com和github.global.ssl.fastly.net的ip地址</h1><blockquote><p>**可参考Windows github下拒绝访问的文章<br><a href="https://zml3589110.github.io/posts/774596022.html">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a><br>**</p></blockquote><blockquote><ol><li>地址查询已失效: <a href="https://ipaddress.com/website/github.com">https://ipaddress.com/website/github.com</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/4870f2d39d134a6994170100ccb346b8.png"><blockquote><ol start="2"><li><a href="https://ipaddress.com/website/github.global.ssl.fastly.net">https://ipaddress.com/website/github.global.ssl.fastly.net</a></li></ol></blockquote><img src="https://img-blog.csdnimg.cn/f30c66da905740a6bb6123d0e82efdfd.png"><h1 id="修改hosts下的配置"><a href="#修改hosts下的配置" class="headerlink" title="修改hosts下的配置"></a>修改hosts下的配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure><p><strong>添加如下两句：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">140.82.113.3 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><h1 id="重启network"><a href="#重启network" class="headerlink" title="重启network"></a>重启network</h1><blockquote><p>**注意：在20版本ubuntu没有这种启动方式，需使用 network-manager restart 命令<br>参考：Ubuntu常用命令之ubuntu20.04重启网络方法 **</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li><li><a href="https://blog.51cto.com/u_15242250/2856080">【终极方法，绝对有用】ubuntu 无法访问github.com的解决方法 </a></li><li><a href="https://blog.csdn.net/w09103419/article/details/121562044">Windows&#x2F;Ubuntu无法访问GitHub的解决方式</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">Ubuntu无法访问github的解决方案</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/categories/Ubuntu/"/>
    
    <category term="网络" scheme="https://zml3589110.github.io/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="github" scheme="https://zml3589110.github.io/tags/github/"/>
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="常用命令" scheme="https://zml3589110.github.io/tags/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu常用命令之ubuntu20.04重启网络方法</title>
    <link href="https://zml3589110.github.io/posts/471655546.html"/>
    <id>https://zml3589110.github.io/posts/471655546.html</id>
    <published>2022-05-24T07:48:20.000Z</published>
    <updated>2022-05-24T08:30:13.769Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网上常用的重启办法会报错"><a href="#网上常用的重启办法会报错" class="headerlink" title="网上常用的重启办法会报错"></a>网上常用的重启办法会报错</h1><blockquote><p>配置完网络ip需要重启一下网络，网上搜了一下，大多用的这条命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure><p><strong>结果在ubuntu20.04上运行该语句报错：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo: /etc/init.d/networking：找不到命令</span><br></pre></td></tr></table></figure><p>所以去看了下networking文件，发现并没有这个文件。<br>而是变成了这个文件，打开进去看一下</p><img src="https://img-blog.csdnimg.cn/1a0c7380153a45bda59cc375a1f0a8bb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5LiA5Y-q5bCP6I-c6bifeWE=,size_20,color_FFFFFF,t_70,g_se,x_16"><blockquote><p><strong>发现 network-manager 和 networking 功能是一样的。</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><blockquote><p><strong>所以回到终端，运行此条命令</strong></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/network-manager restart</span><br></pre></td></tr></table></figure><p>重启结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restarting network-manager (via systemctl): network-manager.service.</span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/workMATLABhard/article/details/123679197">ubuntu20.04重启网络方法</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">ubuntu20.04使用network-manager restart重启网络方法</summary>
    
    
    
    <category term="Linux" scheme="https://zml3589110.github.io/categories/Linux/"/>
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/categories/Ubuntu/"/>
    
    <category term="网络" scheme="https://zml3589110.github.io/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="Ubuntu" scheme="https://zml3589110.github.io/tags/Ubuntu/"/>
    
    <category term="常用命令" scheme="https://zml3589110.github.io/tags/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
    <category term="network-manager restart" scheme="https://zml3589110.github.io/tags/network-manager-restart/"/>
    
    <category term="网络重启" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E7%BB%9C%E9%87%8D%E5%90%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</title>
    <link href="https://zml3589110.github.io/posts/774596022.html"/>
    <id>https://zml3589110.github.io/posts/774596022.html</id>
    <published>2022-05-24T06:37:20.000Z</published>
    <updated>2022-05-24T06:58:33.302Z</updated>
    
    <content type="html"><![CDATA[<h1 id="出现-你的连接不是私密连接-原因"><a href="#出现-你的连接不是私密连接-原因" class="headerlink" title="出现[你的连接不是私密连接]原因"></a>出现[你的连接不是私密连接]原因</h1><blockquote><p>为了更快的访问github网站，一般都会在hosts文件中加入github.com对应的ip地址。<br>但在加入值之后可能会出现下图中的情况</p></blockquote><img src="https://img-blog.csdnimg.cn/20200721225543761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><blockquote><p>查看证书会发现这样一个问题:</p></blockquote><img scr="https://img-blog.csdnimg.cn/20200721225647922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>我查看百度几乎所有解决方案都没有效果，甚至一度怀疑被中间人攻击，到处查找证书的信息。将别人访问github.com的证书导出之后再导入我的证书管理，都无济于事。<br>最后发现问题出在hosts文件中追加的域名和ip地址不对应，我将github.com的ip地址写成了github.global.ssl.fastly.net对应的ip地址。<br>所以，在修改hosts文件时，需要将域名和ip地址对应正确，最好是两个都配置上，甚至github.com可以配置对个ip。这些域名对应的ip可以从<a href="https://www.ipaddress.com/%E5%A4%84%E6%9F%A5%E6%89%BE%E3%80%82">https://www.ipaddress.com/处查找。</a><blockquote><p><strong>主：自己网上方法也试了，只是增加IP地址的话还是不能访问，博主提供的这个网站也已经404，后来直接复制他的结果就解决了</strong></p></blockquote></li></ol><img src="https://img-blog.csdnimg.cn/20200721230940576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="2"><li>在搜索框中输入域名即可查看对应的ip<br>github.com对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231258768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="3"><li>github.global.ssl.fastly.net对应ip（可能不同）</li></ol><img src="https://img-blog.csdnimg.cn/20200721231501466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI5MjgzNTY5,size_16,color_FFFFFF,t_70"><ol start="4"><li>然后将以上两段ip放入hosts文件<br>hosts文件地址为: C:\Windows\System32\drivers\etc<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">199.232.69.194github.global.ssl.fastly.net</span><br><span class="line">140.82.114.4github.com</span><br></pre></td></tr></table></figure></li><li>最后在cmd命令行窗口执行刷新操作即可<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><h1 id="最后PING看结果"><a href="#最后PING看结果" class="headerlink" title="最后PING看结果"></a>最后PING看结果</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;ipconfig /flushdns</span><br><span class="line"></span><br><span class="line">Windows IP 配置</span><br><span class="line"></span><br><span class="line">已成功刷新 DNS 解析缓存。</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator&gt;ping github.com</span><br><span class="line"></span><br><span class="line">正在 Ping github.com [140.82.114.4] 具有 32 字节的数据:</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=232ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=231ms TTL=50</span><br><span class="line">来自 140.82.114.4 的回复: 字节=32 时间=239ms TTL=50</span><br><span class="line"></span><br><span class="line">140.82.114.4 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = 4，已接收 = 4，丢失 = 0 (0% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = 231ms，最长 = 239ms，平均 = 233ms</span><br></pre></td></tr></table></figure></li></ol><p>查了很久，原本还会跳转到 Apache 服务上，后边停了就直接失败！最后找到博主这个方法，尝试后正常使用，记录下来以后方便能用上。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_29283569/article/details/107501508">关于访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">访问github时出现隐私设置错误您的连接不是私密连接问题的解决方案</summary>
    
    
    
    <category term="问题收集" scheme="https://zml3589110.github.io/categories/%E9%97%AE%E9%A2%98%E6%94%B6%E9%9B%86/"/>
    
    
    <category term="github" scheme="https://zml3589110.github.io/tags/github/"/>
    
    <category term="Google Chrome" scheme="https://zml3589110.github.io/tags/Google-Chrome/"/>
    
  </entry>
  
  <entry>
    <title>VUE项目(一)之制作登录注册系统</title>
    <link href="https://zml3589110.github.io/posts/2822623721.html"/>
    <id>https://zml3589110.github.io/posts/2822623721.html</id>
    <published>2022-05-24T01:30:20.000Z</published>
    <updated>2022-05-24T02:27:23.299Z</updated>
    
    <content type="html"><![CDATA[<h1 id="账号登录部分"><a href="#账号登录部分" class="headerlink" title="账号登录部分"></a>账号登录部分</h1><blockquote><p>VUE HTML登录界面<br><strong>实现账号密码输入</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:60px;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../icon/vlogo.png&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:20rem;height:auto;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form middle&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名 / 邮箱&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;input type=&quot;password&quot; class=&quot;form-control input100&quot; v-model=&quot;usercode&quot; placeholder=&quot;密码&quot; @keyup.13=&quot;login&quot; /&gt; --&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;input v-on:keyup.delete=&quot;confirmDelete&quot; /&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">v-on:keyup.delete</span>=<span class="string">&quot;login&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123; errorMsg &#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;login&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="comment">&lt;!-- &lt;a href=&quot;./registermobile.html&quot; class=&quot;btn btn-default btn100&quot;&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;Gotoregister&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">           </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:right;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./findpassword.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>找回密码<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">hr</span>&gt;</span>         </span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>© vchenzhe<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">form</span>&gt;</span>    </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE JavaScript方法功能<br><strong>实现登录验证和路由跳转</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: <span class="built_in">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    userid:<span class="string">&#x27;33&#x27;</span>,</span><br><span class="line">    usercode:<span class="string">&#x27;55&#x27;</span>,</span><br><span class="line">    errorFlag:<span class="literal">false</span>,</span><br><span class="line">    errorMsg:<span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">      <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">        thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">          method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">          url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">          data:&#123;        </span><br><span class="line"></span><br><span class="line">            userid:thisvue.userid,</span><br><span class="line">            usercode:thisvue.usercode</span><br><span class="line">          &#125;,</span><br><span class="line"></span><br><span class="line">         &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">              alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">              thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">              <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">              thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">              thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">   &#125;)</span><br><span class="line">         </span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,<span class="comment">// methods</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>PHP 数据处理<br><strong>接收来自 VUE 的数据并对接 mysql</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$myid</span>!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="variable">$mycode</span>!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$pwd</span>=<span class="string">&quot;*****&quot;</span>;</span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;localhost:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="variable">$pwd</span>, <span class="string">&quot;student&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$conn</span> != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * FROM user_login where user_id=&#x27;<span class="subst">$myid</span>&#x27; or user_mail = &#x27;<span class="subst">$myid</span>&#x27; &quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> =<span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$resArray</span> = mysqli_fetch_array(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span> == <span class="literal">null</span>) &#123;<span class="keyword">goto</span> __ERENO_SSID;&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$resArray</span>[<span class="string">&quot;user_password&quot;</span>] == <span class="variable">$mycode</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;chenzhe_user_id&#x27;</span>] = <span class="variable">$resArray</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;登陆成功&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">__ERENO_SSID:&#123;&#125;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;用户名或密码输入错误&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="variable">$conn</span>-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;<span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;mysql not connect&#x27;</span>];&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="variable">$result_array</span>[<span class="number">0</span>] = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;请输入用户名或密码&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result_array</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="账号注册部分"><a href="#账号注册部分" class="headerlink" title="账号注册部分"></a>账号注册部分</h1><blockquote><p>VUE HTML注册界面<br><strong>实现数据FORM表格界面输入和检测</strong></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top:2rem;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./indexmobile.html&quot;</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;errorMsg&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;errorFlag==1&quot;</span> <span class="attr">v-cloak</span> &gt;</span>&#123;&#123;errorMsg&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form&quot;</span> <span class="attr">id</span>=<span class="string">&quot;registerForm&quot;</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testUserIdFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userid&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span>  <span class="attr">maxlength</span>=<span class="string">16</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testUserId&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">maxlength</span>=<span class="string">10</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;昵称&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercode&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;usercode&quot;</span> <span class="attr">minlength</span>=<span class="string">9</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;readInfo&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usercodes&quot;</span> <span class="attr">name</span>=<span class="string">&quot;checkusercode&quot;</span> <span class="attr">maxlength</span>=<span class="string">20</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testpass&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group has-feedback &quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> @<span class="attr">keyup</span>=<span class="string">&quot;testmailFunc&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;usermail&quot;</span> <span class="attr">name</span>=<span class="string">&quot;usermail&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;form-control input100&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;邮箱&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">&quot;testmail&quot;</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-ok form-control-feedback&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color:#5cb85c;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group btn100&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display:flex;&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;code&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>  <span class="attr">placeholder</span>=<span class="string">&quot;验证码&quot;</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span>  <span class="attr">v-if</span>=<span class="string">&quot;testUserId==0||testpass==false||usermail==&#x27;&#x27;||testmail==false&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80 btn-disabled&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==0&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;testUserId==1&amp;&amp;testpass==true&amp;&amp;usermail!=&#x27;&#x27;&amp;&amp;testmail==true&quot;</span>  <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default btn80&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getCode&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>获取验证码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-show</span>=<span class="string">&quot;btnGetCode==1&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-disabled btn80&quot;</span> <span class="attr">disabled</span> <span class="attr">style</span>=<span class="string">&quot;margin-left:1rem;&quot;</span>&gt;</span>已发送(&#123;&#123; clock &#125;&#125;s)<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">             </span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn100&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary btn100&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;register&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;myModalLabel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myModalLabel&quot;</span>&gt;</span>消息<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      &#123;&#123; errorMsg &#125;&#125;</span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>  <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>确认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal-content --&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.modal --&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h6</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;margin-top:3rem;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right:2rem;&quot;</span>&gt;</span>电脑版<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.beian.gov.cn&#x27;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color:black;&quot;</span> <span class="attr">target</span>=<span class="string">&#x27;_blank&#x27;</span>&gt;</span>闽ICP备19008574号-1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h6</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>VUE注册界面 JavaScript方法功能<br><strong>实现注册数据检测和POST数据功能</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;./js/jquery.js&#x27;</span>;<span class="keyword">import</span> <span class="string">&#x27;./css/mobilecommon.css&#x27;</span>;<span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;../node_modules/vue/dist/vue.js&#x27;</span>;$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line"></span><br><span class="line">        el:<span class="string">&quot;#app&quot;</span>,</span><br><span class="line"></span><br><span class="line">        data:&#123;</span><br><span class="line"></span><br><span class="line">            errorMsg:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            errorFlag:<span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//填写注册信息</span></span><br><span class="line"></span><br><span class="line">            userid:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            username:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercode:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usercodes:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            usermail:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            <span class="comment">//验证注册信息</span></span><br><span class="line"></span><br><span class="line">            code:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"></span><br><span class="line">            btnGetCode:<span class="number">0</span>, <span class="comment">//用于判断当前是否获取了一次验证码，默认是0，获取一次后改成1</span></span><br><span class="line"></span><br><span class="line">            testcode:<span class="number">0</span>, <span class="comment">//用于判断当前是否完成了验证码验证，默认是0，验证通过是1</span></span><br><span class="line"></span><br><span class="line">            clock:<span class="number">60</span>,</span><br><span class="line"></span><br><span class="line">            testUserId:<span class="literal">false</span>,<span class="comment">//检测当前用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">            testpass:<span class="literal">false</span>,<span class="comment">//检测密码安全</span></span><br><span class="line"></span><br><span class="line">            testmail:<span class="literal">false</span>, <span class="comment">//检测邮箱是否被注册过了</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        methods:&#123;</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testUserIdFunc</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检测用户名是否已经注册</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^[a-zA-Z][a-zA-Z0-9]*$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(thisvue.userid)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;用户名必须以英文开头，且只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(thisvue.userid.length&lt;<span class="number">9</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;用户名长度须在9-16之间&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;    </span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testUserId.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_id:thisvue.userid                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testUserId = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = res.msg;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">readInfo</span>(<span class="params"></span>)</span>&#123; <span class="comment">//检索密码安全等</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> result = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> testall = <span class="regexp">/^(?!\d+$)[\da-zA-Z]+$/</span>; <span class="comment">//只能是数字和字母</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usercode.length&lt;<span class="number">9</span>) <span class="comment">//检测长度</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码长度须在9-20个字符，只能由英文和数字组成&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(!testall.test(<span class="built_in">this</span>.usercode)) <span class="comment">//检测英文和数字</span></span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;密码只能使用英文+数字,且不能为纯数字&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    result = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                     </span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">/*else if(testenglish.test(this.usercode))</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorFlag = 1;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    this.errorMsg = &#x27;密码不能为纯数字&#x27;;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                    result = 0;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                &#125;*/</span></span><br><span class="line"></span><br><span class="line">                 </span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(result==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.testpass = <span class="number">1</span>;<span class="comment">//如果密码验证成功，则通过</span></span><br><span class="line"></span><br><span class="line">                &#125; </span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    thisvue.verifyCode();</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/register.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:$(<span class="string">&quot;#registerForm&quot;</span>).serialize(),</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;注册失败&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;                </span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">getCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//获取验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.userid==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.username==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercode==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usercodes==<span class="string">&#x27;&#x27;</span>||<span class="built_in">this</span>.usermail==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;请填写全部的信息后获取验证码&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">this</span>.usercode!=<span class="built_in">this</span>.usercodes)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">this</span>.errorMsg = <span class="string">&#x27;两次密码输入不一致&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                    thisvue.btnGetCode = <span class="number">1</span>; <span class="comment">//把获取验证码按钮禁用</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">var</span> timer1 = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;thisvue.clock=thisvue.clock-<span class="number">1</span>;&#125;,<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="built_in">clearInterval</span>(timer1);</span><br><span class="line"></span><br><span class="line">                        thisvue.btnGetCode=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                        thisvue.clock=<span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">                    &#125;,<span class="number">60000</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//发送邮件</span></span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/sendMail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">async</span>:<span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            address:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;我们发送了一封邮件到你的邮箱，请尽快验证&#x27;</span></span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">verifyCode</span>(<span class="params"></span>)</span>&#123; <span class="comment">//验证验证码</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue =<span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(thisvue.code&gt;<span class="number">100000</span>&amp;&amp;thisvue.code&lt;<span class="number">999999</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/mail/verifyCode.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;<span class="attr">code</span>:thisvue.code&#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">                        </span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testcode=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg=<span class="string">&#x27;验证码不正确，请重新输入&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="title">testmailFunc</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">this</span>.usermail!=<span class="string">&#x27;&#x27;</span>&amp;&amp;<span class="built_in">this</span>.usermail.indexOf(<span class="string">&#x27;@&#x27;</span>)!=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line"></span><br><span class="line">                        type:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        url:<span class="string">&#x27;../server/testmail.php&#x27;</span>,</span><br><span class="line"></span><br><span class="line">                        data:&#123;</span><br><span class="line"></span><br><span class="line">                            user_mail:thisvue.usermail                        &#125;,</span><br><span class="line"></span><br><span class="line">                        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">if</span>(res.code==<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">                            &#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">                                thisvue.testmail = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">                                thisvue.errorMsg = <span class="string">&#x27;此邮箱已被注册,换个邮箱试试吧&#x27;</span>;</span><br><span class="line"></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>PHP注册数据功能<br><strong>实现注册数据接收处理</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">    header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myid</span> = <span class="variable">$_POST</span>[userid];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[usercode]);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$myname</span> = <span class="variable">$_POST</span>[username];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mymail</span> = <span class="variable">$_POST</span>[usermail];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$gm</span> = <span class="string">&#x27;vchenzhecom&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$conn</span> = <span class="keyword">new</span> mysqli(<span class="string">&quot;47.106.190.129:3306&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;52F7cbad94f2&quot;</span>, <span class="string">&quot;personal&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$test</span> = <span class="string">&quot;SELECT * FROM user_login WHERE `user_id` = &#x27;<span class="subst">$myid</span>&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$testResult</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$test</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(mysqli_num_rows(<span class="variable">$testResult</span>)==<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$path</span>=<span class="string">&quot;/home/www/htdocs/carelesswhisper/src/img/&quot;</span>.<span class="variable">$myid</span>; <span class="comment">//判断目录存在否，存在给出提示，不存在则创建目录</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_dir(<span class="variable">$path</span>))&#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;覆盖用户目录&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="comment">//第三个参数是“true”表示能创建多级目录，iconv防止中文目录乱码</span></span><br><span class="line"></span><br><span class="line">            <span class="variable">$res</span>=mkdir(iconv(<span class="string">&quot;UTF-8&quot;</span>, <span class="string">&quot;GBK&quot;</span>, <span class="variable">$path</span>),<span class="number">0777</span>,<span class="literal">true</span>); </span><br><span class="line"></span><br><span class="line">            <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;注册成功&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot; INSERT INTO user_login VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$mycode</span>&#x27;,&#x27;<span class="subst">$myname</span>&#x27;,&#x27;<span class="subst">$mymail</span>&#x27;,&#x27;imageFile/image.jpg&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;未填&#x27;,&#x27;0&#x27;) &quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$gm</span>&#x27;,&#x27;<span class="subst">$myid</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;query(<span class="string">&quot;INSERT INTO personal_follow VALUES(&#x27;<span class="subst">$myid</span>&#x27;,&#x27;<span class="subst">$gm</span>&#x27;,1,&#x27;2019&#x27;,0)&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$conn</span>-&gt;close();</span><br><span class="line"></span><br><span class="line">         </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$result</span> = [<span class="string">&#x27;code&#x27;</span>=&gt;<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;msg&#x27;</span>=&gt;<span class="string">&#x27;此用户名已被使用&#x27;</span>]; </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>]=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> json_encode(<span class="variable">$result</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="后端PHP数据接口参考"><a href="#后端PHP数据接口参考" class="headerlink" title="后端PHP数据接口参考"></a>后端PHP数据接口参考</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line">    header(<span class="string">&#x27;Access-Control-Allow-Origin: *&#x27;</span>);</span><br><span class="line">    error_reporting(E_ALL &amp; ~E_NOTICE);</span><br><span class="line">    <span class="comment">//header(&quot;Content-type: text/html; charset=gbk&quot;);</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        注意：</span></span><br><span class="line"><span class="comment">            本php是gbk编码的，因为mysise就是gbk编码没办法</span></span><br><span class="line"><span class="comment">            json_encode()里面的值要先转换为utf-8才能被识别</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="variable">$user</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line">    <span class="variable">$pass</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line">    <span class="variable">$sise_cookie</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]?<span class="variable">$_POST</span>[<span class="string">&#x27;sise_cookie&#x27;</span>]:<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;sise_cookie&#x27;</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//echo $_POST[&#x27;sise_cookie&#x27;];</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//测试账号110</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>&amp;&amp;<span class="variable">$_POST</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="string">&#x27;110&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="string">&quot;./user.php&quot;</span>);</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//登录页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;login&#x27;</span>)&#123;            </span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;number=<span class="subst">$user</span>&amp;pwd=<span class="subst">$pass</span>&quot;</span>;              </span><br><span class="line">        <span class="variable">$scse_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录scse</span></span><br><span class="line">        <span class="variable">$scse_url</span>=<span class="string">&quot;http://my.scse.com.cn/login_pro.asp&quot;</span>;               </span><br><span class="line">        LinkCurl(<span class="variable">$scse_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$scse_cookie</span>);                  </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//获取管理系统隐藏字段</span></span><br><span class="line">        <span class="variable">$sise_login_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login.jsp&quot;</span>;            </span><br><span class="line">        <span class="variable">$sise_login_html</span>=getCurlCon(<span class="variable">$sise_login_url</span>,<span class="variable">$scse_cookie</span>);</span><br><span class="line">        preg_match(<span class="string">&#x27;/&lt;input type=\&quot;hidden\&quot; name=\&quot;(.*)\&quot;  value=\&quot;(.*)\&quot;&gt;/&#x27;</span>, <span class="variable">$sise_login_html</span>,<span class="variable">$arr</span>);   </span><br><span class="line">        <span class="comment">//print_r($arr);</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment">//模拟登录管理系统</span></span><br><span class="line">        <span class="variable">$curlpost</span>=<span class="string">&quot;username=<span class="subst">$user</span>&amp;password=<span class="subst">$pass</span>&amp;<span class="subst">$arr</span>[1]=<span class="subst">$arr</span>[2]&quot;</span>; </span><br><span class="line">        <span class="variable">$sise_cookie</span>=tempnam(<span class="string">&#x27;./temp&#x27;</span>,<span class="string">&#x27;cookie&#x27;</span>);               </span><br><span class="line">        <span class="variable">$sise_login_check_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/login_check.jsp&quot;</span>;        </span><br><span class="line">        LinkCurl(<span class="variable">$sise_login_check_url</span>,<span class="variable">$curlpost</span>,<span class="variable">$sise_cookie</span>); </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;((.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*))&lt;\/span&gt;/&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">            <span class="comment">//登录成功后保存用户数据</span></span><br><span class="line">            <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]= <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;user&#x27;</span> =&gt; <span class="variable">$user</span>,</span><br><span class="line">                <span class="string">&#x27;pass&#x27;</span> =&gt; <span class="variable">$pass</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;sise_cookie&#x27;</span> =&gt; <span class="variable">$sise_cookie</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//课程表页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;course&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$course_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_schedular/student_schedular.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$course_html</span>=getCurlCon(<span class="variable">$course_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;span class=\&quot;style16\&quot;&gt;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*) &amp;nbsp;(.*)&lt;\/span&gt;/U&#x27;</span>, <span class="variable">$course_html</span>,<span class="variable">$user_info</span>);</span><br><span class="line">        preg_match_all(<span class="string">&quot;/&lt;td width=\&#x27;10%\&#x27; align=\&#x27;left\&#x27; valign=\&#x27;top\&#x27; class=\&#x27;font12\&#x27;&gt;(.*)&lt;\/td&gt;/U&quot;</span>, <span class="variable">$course_html</span>,<span class="variable">$course</span>);</span><br><span class="line">        <span class="variable">$res_course</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">8</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">7</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">7</span>+<span class="number">7</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] == <span class="string">&#x27;&amp;nbsp;&#x27;</span>) <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$k</span>!=<span class="number">5</span> &amp;&amp; <span class="variable">$k</span>!=<span class="number">6</span>) &#123;</span><br><span class="line">                    <span class="variable">$res_course</span>[<span class="variable">$i</span>][<span class="variable">$k</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$course</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                &#125;   </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;info&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&quot;stuNum&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">1</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;name&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">2</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;grade&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">3</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                    <span class="string">&quot;major&quot;</span> =&gt; iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$user_info</span>[<span class="number">4</span>][<span class="number">0</span>],<span class="number">6</span>,<span class="literal">null</span>)),</span><br><span class="line">                ),</span><br><span class="line">                <span class="string">&quot;course&quot;</span> =&gt; <span class="variable">$res_course</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">        <span class="comment">//print_r($res_course);</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//查找老师页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;teacher&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// gei请求的name查询字符串</span></span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="comment">//获取老师的json数据库</span></span><br><span class="line">        <span class="variable">$data</span> = json_decode(file_get_contents(<span class="string">&quot;./json/teacher.json&quot;</span> ));</span><br><span class="line">        <span class="comment">//老师的信息</span></span><br><span class="line">        <span class="variable">$arr</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//响应数据</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="comment">//查询json数据库</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$data</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$data</span>[<span class="variable">$i</span>]-&gt;name == <span class="variable">$name</span>)&#123;</span><br><span class="line">                <span class="variable">$arr</span> = <span class="variable">$data</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断查询数据</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$arr</span>))&#123;</span><br><span class="line">            <span class="comment">//如果工号为三位就前面加个0</span></span><br><span class="line">            <span class="keyword">if</span>(mb_strlen(<span class="variable">$arr</span>-&gt;num) ==<span class="number">3</span> )&#123;</span><br><span class="line">                <span class="variable">$arr</span>-&gt;num = <span class="string">&quot;0&quot;</span>.<span class="variable">$arr</span>-&gt;num;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="variable">$arr</span></span><br><span class="line">            );</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">                <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">                <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>()</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//考勤信息页面</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&quot;method&quot;</span>] == <span class="string">&#x27;attendance&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">//正常用户登录</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">404</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;failed&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; []</span><br><span class="line">        );</span><br><span class="line">        <span class="variable">$main_url</span>=<span class="string">&quot;http://class.sise.com.cn:7001/sise/module/student_states/student_select_class/main.jsp&quot;</span>;</span><br><span class="line">        <span class="variable">$main_html</span>=getCurlCon(<span class="variable">$main_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/window\.location=\&#x27;\.\.\/\.\.\/\.\.\/\.\.\/\.\.\/(.*)\&#x27;\&quot;/Um&#x27;</span>, <span class="variable">$main_html</span>,<span class="variable">$main</span>);</span><br><span class="line">        <span class="variable">$attendance_url</span>=<span class="string">&#x27;http://class.sise.com.cn:7001/&#x27;</span>.<span class="variable">$main</span>[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="variable">$attendance_html</span> = getCurlCon(<span class="variable">$attendance_url</span>,<span class="variable">$sise_cookie</span>);</span><br><span class="line">        <span class="comment">//print_r($attendance_html);</span></span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td&gt;(.*)(\d+)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$count</span>);</span><br><span class="line">        preg_match_all(<span class="string">&#x27;/&lt;td align=\&quot;center\&quot;&gt;(.*)&lt;\/td&gt;/U&#x27;</span>, <span class="variable">$attendance_html</span>,<span class="variable">$attendance</span>);</span><br><span class="line">        <span class="variable">$res_attendance</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;count(<span class="variable">$attendance</span>[<span class="number">1</span>])/<span class="number">3</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="variable">$i</span>*<span class="number">3</span>,<span class="variable">$k</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;<span class="variable">$i</span>*<span class="number">3</span>+<span class="number">3</span>;<span class="variable">$j</span>++,<span class="variable">$k</span>++)&#123;</span><br><span class="line">                <span class="keyword">switch</span> (<span class="variable">$k</span>) &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;num&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                        <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;name&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                        <span class="comment">//匹配请假次数</span></span><br><span class="line">                        preg_match_all(<span class="string">&#x27;/\[&lt;a href=\&#x27;(.*)\&#x27;&gt;(.*)&lt;\/a&gt;\]/U&#x27;</span>, <span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="variable">$count</span>);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>];</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="variable">$res_attendance</span>[<span class="variable">$i</span>][<span class="string">&quot;detail&quot;</span>] = iconv(<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>, mb_substr(<span class="variable">$attendance</span>[<span class="number">1</span>][<span class="variable">$j</span>],<span class="number">0</span>,<span class="number">4</span>)).<span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>].<span class="string">&#x27;次&#x27;</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">break</span>;                  </span><br><span class="line">                    <span class="keyword">default</span>:</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;                               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;code&quot;</span> =&gt; <span class="number">200</span>,</span><br><span class="line">            <span class="string">&quot;msg&quot;</span> =&gt; <span class="string">&quot;success&quot;</span>,</span><br><span class="line">            <span class="string">&quot;resData&quot;</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;total&quot;</span> =&gt; <span class="variable">$count</span>[<span class="number">2</span>][<span class="number">0</span>],</span><br><span class="line">                <span class="string">&quot;list&quot;</span> =&gt; <span class="variable">$res_attendance</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        print_r(json_encode(<span class="variable">$res</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">LinkCurl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$curlpost</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);                   </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$curlpost</span>);            </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEJAR, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        curl_exec(<span class="variable">$curl</span>);                          </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//模拟登录后获取页面内容函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCurlCon</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$cookie_file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$curl</span>=curl_init(<span class="variable">$url</span>);                         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);             </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);         </span><br><span class="line">        curl_setopt(<span class="variable">$curl</span>, CURLOPT_COOKIEFILE, <span class="variable">$cookie_file</span>);         </span><br><span class="line">        <span class="variable">$data</span>=curl_exec(<span class="variable">$curl</span>);    </span><br><span class="line">        curl_close(<span class="variable">$curl</span>);                         </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.php.cn/php-ask-485509.html">vue加php怎么实现登陆</a></li><li><a href="https://www.mk2048.com/blog/blog_bab1ika2ij2j.html">Vue+php 后端PHP登录接口编写</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">使用VUE3设置注册登录系统，涉及VUE-PHP-MYSQL</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/categories/mysql/"/>
    
    <category term="php" scheme="https://zml3589110.github.io/categories/php/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="php" scheme="https://zml3589110.github.io/tags/php/"/>
    
    <category term="mysql" scheme="https://zml3589110.github.io/tags/mysql/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="axios" scheme="https://zml3589110.github.io/tags/axios/"/>
    
  </entry>
  
  <entry>
    <title>php接收来自POST数据</title>
    <link href="https://zml3589110.github.io/posts/705713032.html"/>
    <id>https://zml3589110.github.io/posts/705713032.html</id>
    <published>2022-05-23T12:50:20.000Z</published>
    <updated>2022-05-24T01:19:02.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="POST提交过来模式为-Request-Payload-的-json-类型数据"><a href="#POST提交过来模式为-Request-Payload-的-json-类型数据" class="headerlink" title="POST提交过来模式为 Request Payload 的 json 类型数据"></a>POST提交过来模式为 Request Payload 的 json 类型数据</h1><ol><li>从html发送过来的Payload格式为 Request Payload<blockquote><p>内容格式为：{“userid”: “33”,”usercode”: “55”}</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line"><span class="function"><span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">     <span class="keyword">if</span>(thisvue.userid==<span class="string">&#x27;&#x27;</span>||thisvue.usercode==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">     &#123;</span><br><span class="line">       thisvue.errorMsg = <span class="string">&#x27;请输入用户名和密码&#x27;</span>;</span><br><span class="line">       thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">       <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">         method:<span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">         url:<span class="string">&#x27;/api/myBlog/axios-login.php&#x27;</span>,</span><br><span class="line">         data:&#123;</span><br><span class="line">           userid:thisvue.userid,</span><br><span class="line">           usercode:thisvue.usercode</span><br><span class="line">         &#125;,</span><br><span class="line">        &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(res.data.length == <span class="number">0</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             <span class="built_in">console</span>.log(<span class="string">&quot;Mysql 数据错误!&quot;</span>)</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(res.data[<span class="number">0</span>].code==<span class="number">1</span>)</span><br><span class="line">           &#123;</span><br><span class="line">             alert(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">             thisvue.errorFlag = <span class="literal">false</span>;</span><br><span class="line">             <span class="built_in">window</span>.location.href=<span class="string">&quot;./homemobile.html&quot;</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span>&#123;</span><br><span class="line">             thisvue.errorMsg = <span class="string">&#x27;账号或密码错误&#x27;</span>;</span><br><span class="line">             thisvue.errorFlag = <span class="literal">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">        </span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,<span class="comment">// method</span></span><br></pre></td></tr></table></figure></li><li>使用 file_get_contents(‘php:&#x2F;&#x2F;input’); 方式进行接收<blockquote><p>之前尝试使用 $_POST 模式接收 POST 过来的数据，但总得到的数据为空，找了很多方法才发现是类型不对！</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   session_start();</span><br><span class="line">   header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="variable">$form</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);  <span class="comment">//在这里post方法是无效得，所以用这个语句，无需任何配置</span></span><br><span class="line"><span class="variable">$formi</span> = json_decode(<span class="variable">$form</span>,<span class="literal">true</span>);  <span class="comment">//JSON转换。 from是数组， true</span></span><br><span class="line"><span class="variable">$arr2</span>=<span class="variable">$formi</span>;    <span class="comment">//我多做了一些步骤测试</span></span><br><span class="line">   </span><br><span class="line">   <span class="variable">$myid</span> = <span class="variable">$arr2</span>[<span class="string">&quot;userid&quot;</span>];</span><br><span class="line">   <span class="variable">$mycode</span> = md5(<span class="variable">$arr2</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br></pre></td></tr></table></figure><h1 id="POST-提交过来模式为-Form-Data-单格式"><a href="#POST-提交过来模式为-Form-Data-单格式" class="headerlink" title="POST 提交过来模式为 Form Data 单格式"></a>POST 提交过来模式为 Form Data 单格式</h1></li></ol><blockquote><p>$_POST 变量预定义的 $_POST 变量用于收集来自 method&#x3D;”post” 的表单中的值。<br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的（不会显示在浏览器的地址栏），并且对发送信息的量也没有限制。<br><strong>注释：然而，默认情况下，POST 方法的发送信息的量最大值为 8 MB（可通过设置 php.ini 文件中的 post_max_size 进行更改）</strong></p></blockquote><ol><li>从html发送过来的Payload格式为 Form Data<blockquote><p>内容格式为：<br>userid: zm<br>username: zha<br>usercode: zm<br>checkusercode: zml<br>usermail: zhaoming</p></blockquote></li></ol><p><strong>请注意，表单域的名称会自动成为 $_POST 数组中的键</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> thisvue = <span class="built_in">this</span>;</span><br><span class="line">  <span class="keyword">if</span>(thisvue.usermail==<span class="string">&#x27;&#x27;</span>||thisvue.code==<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    thisvue.errorMsg = <span class="string">&#x27;你还没有进行邮箱验证&#x27;</span>;</span><br><span class="line">    thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    thisvue.verifyCode();</span><br><span class="line">    <span class="built_in">this</span>.$axios(&#123;</span><br><span class="line">      url:<span class="string">&quot;/api/myBlog/axios-register.php&quot;</span>,</span><br><span class="line">      <span class="comment">// type:&#x27;POST&#x27;,</span></span><br><span class="line">      method:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">      data:$(<span class="string">&#x27;#registerForm&#x27;</span>).serialize(<span class="built_in">this</span>.serialize),  <span class="comment">//可以发送 FORM 类型数据了</span></span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(res.data[<span class="string">&#x27;code&#x27;</span>]==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          alert(<span class="string">&quot;注册成功&quot;</span>)</span><br><span class="line">          <span class="built_in">window</span>.location.href = <span class="string">&#x27;indexmobile.html&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">          thisvue.errorMsg = <span class="string">&#x27;注册失败:&#x27;</span>+res.data[<span class="string">&#x27;msg&#x27;</span>];</span><br><span class="line">          thisvue.errorFlag = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>不能使用 type:’POST’, 要不然接收不到数据<br>要使用 data:$(‘#registerForm’).serialize(this.serialize),<br>而非 data:this.$(“#registerForm”).serialize(),</strong></p></blockquote><ol start="2"><li>使用 $_POST 方式进行接收<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line">header(<span class="string">&#x27;Content-Type:application/json; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$myid</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line"><span class="variable">$mycode</span> = md5(<span class="variable">$_POST</span>[<span class="string">&#x27;usercode&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$myname</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$mymail</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;usermail&#x27;</span>];</span><br></pre></td></tr></table></figure></li></ol><blockquote><p><strong>注意：括号内使用的是单引号[‘’]而不是[“”]</strong></p></blockquote><h2 id="POST-简单试验说明"><a href="#POST-简单试验说明" class="headerlink" title="$_POST 简单试验说明"></a>$_POST 简单试验说明</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;welcome.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;fname&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Age:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fname&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;age&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="POST-表单保存-json-文件"><a href="#POST-表单保存-json-文件" class="headerlink" title="$_POST 表单保存 json 文件"></a>$_POST 表单保存 json 文件</h2><blockquote><p>html端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;form.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>密码:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>php端-建立一个 form.php 文件</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$userInfo</span> = <span class="variable">$_POST</span>;</span><br><span class="line"><span class="comment">//把获取的用户信息数组编码成json字符串</span></span><br><span class="line"><span class="variable">$json</span> = json_encode(<span class="variable">$userInfo</span>);</span><br><span class="line"><span class="comment">//打开json文件,如果没有json文件则自动创建json文件</span></span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&#x27;form.json&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>);</span><br><span class="line"><span class="comment">//把json字符串$json写入json文件form.json</span></span><br><span class="line">fwrite(<span class="variable">$file</span>,<span class="variable">$json</span>);</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">fclose(<span class="variable">$file</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>何时使用 method&#x3D;”post”？</strong><br>从带有 POST 方法的表单发送的信息，对任何人都是不可见的，并且对发送信息的量也没有限制。<br>然而，由于变量不显示在 URL 中，所以无法把页面加入书签。</p><p><strong>PHP $_REQUEST 变量</strong><br>预定义的 $_REQUEST 变量包含了 $_GET、$_POST 和 $_COOKIE 的内容。</p><p>$_REQUEST 变量可用来收集通过 GET 和 POST 方法发送的表单数据。</p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.runoob.com/php/php-post.html">菜鸟教程</a></li><li><a href="https://www.cnblogs.com/supermeimei/p/5165735.html">PHP中的$_POST变量</a></li><li><a href="https://www.shuyong.net/chengxu/1116.html">PHP获取前端form数据并保存在json中</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">php接收来自POST 数据，分别是FORM格式和Request Payload 的json格式</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="PHP" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/PHP/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="php" scheme="https://zml3589110.github.io/tags/php/"/>
    
    <category term="数据库" scheme="https://zml3589110.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    <category term="POST" scheme="https://zml3589110.github.io/tags/POST/"/>
    
    <category term="表单" scheme="https://zml3589110.github.io/tags/%E8%A1%A8%E5%8D%95/"/>
    
    <category term="json" scheme="https://zml3589110.github.io/tags/json/"/>
    
    <category term="$_POST" scheme="https://zml3589110.github.io/tags/POST/"/>
    
  </entry>
  
  <entry>
    <title>VUE重要功能(一)之route路由跳转</title>
    <link href="https://zml3589110.github.io/posts/98479763.html"/>
    <id>https://zml3589110.github.io/posts/98479763.html</id>
    <published>2022-05-23T08:15:20.000Z</published>
    <updated>2022-05-23T12:08:36.500Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是路由"><a href="#什么是路由" class="headerlink" title="什么是路由"></a>什么是路由</h1><blockquote><p>路由的本质就是一种对应关系，比如说我们在url地址中输入我们要访问的url地址之后，浏览器要去请求这个url地址对应的资源。<br>那么url地址和真实的资源之间就有一种对应的关系，就是路由。</p></blockquote><p><strong>路由分为前端路由和后端路由:</strong></p><ol><li>后端路由是由服务器端进行实现，并完成资源的分发<br>后端路由性能相对前端路由来说较低，所以，我们接下来主要学习的是前端路由</li><li>前端路由是依靠hash值(锚链接)的变化进行实现<br>前端路由的基本概念：根据不同的事件来显示不同的页面内容，即事件与事件处理函数之间的对应关系<br>前端路由主要做的事情就是监听事件并分发执行事件处理函数</li></ol><h1 id="vue3-安装路由"><a href="#vue3-安装路由" class="headerlink" title="vue3 安装路由"></a>vue3 安装路由</h1><blockquote><p>查看自己项目目录中是否有route文件,安装 route 后会有生成该文件</p></blockquote><img src="https://img-blog.csdnimg.cn/20210619092259367.png"><h2 id="方法一：使用-vue-ui-安装"><a href="#方法一：使用-vue-ui-安装" class="headerlink" title="方法一：使用 vue ui 安装"></a>方法一：使用 vue ui 安装</h2><p><strong>在当前项目文件夹使用cmd命令，然后输入vue ui</strong></p><img src="https://img-blog.csdnimg.cn/20210619092605125.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70">打开之后是这个页面<img src="https://img-blog.csdnimg.cn/20210619092805266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><h1 id="route-路由配置和使用"><a href="#route-路由配置和使用" class="headerlink" title="route 路由配置和使用"></a>route 路由配置和使用</h1><blockquote><p><strong>注:需要配置并且引用后才能生效</strong></p></blockquote><h2 id="一、配置-router-文件中的-index-js"><a href="#一、配置-router-文件中的-index-js" class="headerlink" title="一、配置 router 文件中的 index.js"></a>一、配置 router 文件中的 index.js</h2><p>添加相应的路径和名字，参考设置即可<br><img src="https://img-blog.csdnimg.cn/20210619093338656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"></p><h2 id="二、使用-router"><a href="#二、使用-router" class="headerlink" title="二、使用 router"></a>二、使用 router</h2><ol><li>查看 main.js 中查看是否引用了，正常安装后会引用</li></ol><blockquote><p><strong>注：必须要在mount之前挂载</strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line"><span class="keyword">const</span> app = createApp(App);</span><br><span class="line">app.use(router)</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">app.mount(<span class="string">&#x27;#app&#x27;</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong>最后在App.vue里面引用一下<router-view>组件就把环境都弄好了，记得把之前模板自带的东西清理了就好</router-view></strong></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-view/&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在 VUE 界面中引用</li></ol><blockquote><p><strong>在 template 中设置 点击事件</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/2021061909374558.png"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;cliec&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在 script 中配置跳转</strong></p></blockquote><img src="https://img-blog.csdnimg.cn/20210619094108740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjkyMTU1MA==,size_16,color_FFFFFF,t_70"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>; <span class="comment">//引入路由</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  name: <span class="string">&#x27;HelloWorld&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> router=useRouter();</span><br><span class="line">    <span class="keyword">let</span> Gotoregister=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    router.push(&#123;<span class="attr">name</span>: <span class="string">&quot;Registermobile&quot;</span>,&#125;)&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      Gotoregister</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">...<span class="comment">//其他代码</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="route-路由进阶使用之传参功能"><a href="#route-路由进阶使用之传参功能" class="headerlink" title="route 路由进阶使用之传参功能"></a>route 路由进阶使用之传参功能</h1><p><strong>安装方法二：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@4 --save</span><br></pre></td></tr></table></figure><h2 id="1、跳转模式-A界面－－▶B界面"><a href="#1、跳转模式-A界面－－▶B界面" class="headerlink" title="1、跳转模式 A界面－－▶B界面"></a><strong>1、跳转模式 A界面－－▶B界面</strong></h2><p>需要配置 router 的文件夹：</p><img src="https://img-blog.csdnimg.cn/20210528160712548.png"><hr><h3 id="一、router-环境配置"><a href="#一、router-环境配置" class="headerlink" title="一、router 环境配置"></a>一、router 环境配置</h3><p><strong>1. 首先我们在文件夹的index.js文件里添加下面的代码：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> A <span class="keyword">from</span> <span class="string">&#x27;../views/A.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">    <span class="comment">// &#123; path: &quot;/&quot;, redirect: &quot;/index&quot; &#125;,</span></span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;A&#x27;</span>,</span><br><span class="line">        component: A</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">&#x27;/B&#x27;</span>,</span><br><span class="line">        name: <span class="string">&#x27;B&#x27;</span>,</span><br><span class="line">        component: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span> (<span class="string">&#x27;../views/B.vue&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><blockquote><p>你会惊奇的发现，Vue对象去哪儿了？在2.x中，我们要使用路由是要先import Vue from ‘vue’把Vue引入进来，接着再Vue.use(VueRouter)去初始化使用路由，是的，vue3中已经没有全局的Vue对象了，并且vue-router也变得模块化了，routes引入页面的两种方式没啥改变，倒是history已经模块化了，它有几种方式，我们使用createWebHistory 就好了，就是浏览器URL后面带不带#号小尾巴的区别</p></blockquote><p><strong>2. 然后在main.js文件里修改添加下面的代码：</strong></p><blockquote><p>使用router的话在createApp模块里挂载一下就好了，需要注意的是必须要在mount之前挂载</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line">createApp(App).use(router).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>3. 最后在App.vue里面引用一下<router-view>组件：</router-view></strong></p><blockquote><p>值此就把环境都弄好了，记得把之前模板自带的东西清理了就好</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="二、router-使用"><a href="#二、router-使用" class="headerlink" title="二、router 使用"></a>二、router 使用</h3><p><strong>1. 首先在之前创建的A.vue文件中添加下面代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;goToB&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">//也可以这样写</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// function goToB() &#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   router.push(&#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     name: &quot;B&quot;,</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//   &#125;);</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2. 然后在B.vue文件中随便添加点东西，能显示就好：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>3. 最后我们再回看A文件，在methods中引用：</strong></p><blockquote><p><strong>在A文件中你会发现找不到this.$router.push()，是的，vue3中已经没有全局的路由了，需要使用路由，<br>我需先要引入useRouter模块，接着要在setup函数中定义router，之后再创建一个方法，里面才是我们熟悉的router.push({ name: “B”})，这里不要用this，setup函数中是没有this的，到这里简单的跳转就算完成了。</strong></p></blockquote><p><strong>methods函数里面调用方式：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToB = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;B&quot;</span>,</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToB,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">test</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToB();</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最终效果如下：</p><img src="https://img-blog.csdnimg.cn/20210528181441344.gif"><h2 id="2、重点功能之路由传参"><a href="#2、重点功能之路由传参" class="headerlink" title="2、重点功能之路由传参"></a><strong>2、重点功能之路由传参</strong></h2><blockquote><p>既然在methods函数里可以调用了setup() 里return的方法，那是不是意味着我们可以传点东西过去？</p></blockquote><ol><li><strong>修改 A.vue 文件:</strong></li></ol><blockquote><p>我们可以传参数过去，这样我们就可以把这个自定义的跳转函数封装起来，动态的传入页面名称和参数就好了</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">&quot;test&quot;</span>&gt;</span>Page A<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> router = useRouter();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> goToOtherPage = <span class="function">(<span class="params">page_name, value</span>) =&gt;</span> &#123;</span></span><br><span class="line">      router.push(&#123;</span><br><span class="line">        name: page_name,</span><br><span class="line">        params: &#123;</span><br><span class="line">          value: value,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 定义methods的方法可以直接写在return之前</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line">      /*</span><br><span class="line"><span class="javascript">       * <span class="keyword">do</span> something...</span></span><br><span class="line">       */</span><br><span class="line"><span class="javascript">      <span class="comment">//要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> page_name = <span class="string">&quot;B&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="comment">//要传的参数</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> value = <span class="string">&quot;hello vue3&quot;</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.goToOtherPage(page_name, value);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      goToOtherPage,</span><br><span class="line">      test</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript"><span class="comment">//   methods: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     test() &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       /*</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        * do something...</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//        */</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要跳转的页面名称</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let page_name = &quot;B&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       //要传的参数</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       let value = &quot;hello vue3&quot;;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//       this.goToOtherPage(page_name, value);</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li><strong>修改 B.vue 文件:</strong></li></ol><blockquote><p>接着我们要怎么接受参数咧？搞了那么久，其实配方都是一样的，要接受参数，我需要想引入useRoute ，注意是没有r结尾的，是不是有种很熟悉的味道同志们&#x3D;》this.$route.params，接着也要在setup函数里定义route，接着我们就可以以方法的形式返回params，要使用的话this一下就好了，生命周期函数created、mounted里面都可以直接拿到</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>Page B<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> route = useRoute();</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> getParams = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> route.params;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="javascript">    <span class="comment">// Composition API 生命周期写法</span></span></span><br><span class="line"><span class="javascript">    onMounted(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&quot;mounted:&quot;</span> + getParams().value);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line">      getParams,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="comment">//   created: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(`created:` + JSON.stringify(this.getParams()));</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   mounted: function () &#123;</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//     console.log(&quot;mounted:&quot; + this.getParams().value);</span></span></span><br><span class="line"><span class="javascript">  <span class="comment">//   &#125;,</span></span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>效果图：</strong></p><img src="https://img-blog.csdnimg.cn/20210528205800430.gif"><h2 id="3、在基础页怎么获取router文件夹中index-js里的数据呢？"><a href="#3、在基础页怎么获取router文件夹中index-js里的数据呢？" class="headerlink" title="3、在基础页怎么获取router文件夹中index.js里的数据呢？"></a><strong>3、在基础页怎么获取router文件夹中index.js里的数据呢？</strong></h2><p><strong>1. vue3.x 带上数据</strong></p><blockquote><p>在vue2.x时，在new实例时可以顺便把数据带上，之后在created或mounted生命周期里直接this.$router.options就可以找到我们传的数据了</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">    mode: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">    base: process.env.BASE_URL,</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>那么在vue3.x中，我们可以在创建路由时把数据带上</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myArr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">const</span> router = createRouter(&#123;</span><br><span class="line">    <span class="comment">//history模式：createWebHistory , hash模式：createWebHashHistory</span></span><br><span class="line">    history: createWebHistory(process.env.BASE_URL),</span><br><span class="line">    routes,</span><br><span class="line">    myArr</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>2. 之后我们在setup() 函数中使用路由时接收并返回对应的数据，之后就可以在created或mounted生命周期中使用了</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; onMounted &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter();</span><br><span class="line">    <span class="built_in">console</span>.log(router.options);</span><br><span class="line">    <span class="keyword">const</span> myArr = <span class="function">() =&gt;</span> router.options.myArr;</span><br><span class="line">    onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">this</span>.myArr());</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      myArr</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="comment">//   mounted: function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(this.myArr());</span></span><br><span class="line"><span class="comment">//   &#125;,</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>3. 成功后打印大概是这个样子：</strong></p><img src="https://img-blog.csdnimg.cn/539ea0f067164ab7b5b1604364d0cfe1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA54ix5ZSx5q2M55qE5YmN56uv,size_9,color_FFFFFF,t_70,g_se,x_16"><h1 id="route-路由跳转与方式对比"><a href="#route-路由跳转与方式对比" class="headerlink" title="route 路由跳转与方式对比"></a>route 路由跳转与方式对比</h1><p>vue-router实现路由跳转与参数获取：</p><p><strong>路由跳转和传参：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent, onMounted, reactive, readonly, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useRouter, useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent(&#123;</span><br><span class="line">  name: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">  <span class="function"><span class="title">setup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> router = useRouter(), route = useRoute();</span><br><span class="line">    <span class="keyword">const</span> submitForm = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      formRef.value?.validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          login(&#123; <span class="attr">strategy</span>: <span class="string">&#x27;local&#x27;</span>, ...ruleForm &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">res: any</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 获取参数和路由跳转</span></span><br><span class="line">              <span class="keyword">const</span> redirect: string = route.query &amp;&amp; route.query.redirect;</span><br><span class="line">              <span class="keyword">if</span> (redirect) &#123;</span><br><span class="line">                router.replace(redirect);</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                router.push(<span class="string">&#x27;/home&#x27;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">              ...</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         ...</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; ..., submitForm &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>路由跳转三种方法的总结：</strong></p><ol><li>第一种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment">//`在这里插入代码片`</span></span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">`/detail/1`</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意： params 传参相当于是路由的一部分是必须传的东西,经过验证不传页面会跳转到空白页,该方式刷新页面id 不丢失</strong></p></blockquote><ol start="2"><li>第二种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail/:id&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    name: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    params: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.params.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 可以传也可以不传,不传刷新页面id 会丢失该方式刷新页面id 不丢失</strong></p></blockquote><ol start="3"><li>第三种</li></ol><blockquote><p>S1: 路由设置方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  path: <span class="string">&#x27;/detail&#x27;</span>,</span><br><span class="line">  name: <span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">  meta: &#123; <span class="attr">keepAlive</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  component: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;../pages/detail/index&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>S2: 路由跳转模式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$router.push(</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">&#x27;Detail&#x27;</span>,</span><br><span class="line">    query: &#123;</span><br><span class="line">      id</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p>S3: 获取参数方式:</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> detailId = <span class="built_in">this</span>.$route.query.id</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：此方式传参 路由设置方式中的 id 不能写，因为写了就是router 的一部分，这样就会匹配不到, 此方式刷新页面id 不丢失</strong></p></blockquote><p><a href="http://localhost:8080/#/detail?id=1">http://localhost:8080/#/detail?id=1</a></p><p><strong>总结： params一旦设置在路由，params就是路由的一部分，如果这个路由有params传参，但是在跳转的时候没有传这个参数，会导致跳转失败或者页面会没有内容。</strong></p><hr><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://www.jb51.net/article/235876.htm">一篇文章带你了解vue路由</a></li><li><a href="https://blog.csdn.net/weixin_52921550/article/details/118046853">vue3.0路由跳转</a></li><li><a href="https://blog.csdn.net/weixin_42063951/article/details/117357542">vue3中怎么使用router路由呢&amp;页面跳转传参怎么搞呢</a></li><li><a href="https://www.jb51.net/article/242793.htm#_lab2_1_1">Vue3使用vue-router如何实现路由跳转与参数获取</a></li></ol><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong></p><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg">]]></content>
    
    
    <summary type="html">VUE3安装和使用route路由跳转功能</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="route" scheme="https://zml3589110.github.io/tags/route/"/>
    
  </entry>
  
  <entry>
    <title>VUE问题(二)之按键修饰符KeyboardEvent.keyCode&#39; modifier</title>
    <link href="https://zml3589110.github.io/posts/3235598376.html"/>
    <id>https://zml3589110.github.io/posts/3235598376.html</id>
    <published>2022-05-20T06:38:20.000Z</published>
    <updated>2022-05-20T07:27:35.618Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>重要参考：</strong><a href="https://v3.cn.vuejs.org/guide/migration/keycode-modifiers.html"><strong>VUE官方迁移策略</strong></a><br>弃用 KeyboardEvent.keyCode</p></blockquote><h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>使用 <input v-on:keyup.13="submit"> 时出现报错显示 ‘KeyboardEvent.keyCode’ modifier on ‘v-on’ directive</p><h2 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h2><blockquote><p>VUE3版本：</p><ol><li>不再支持使用 keyCodes (即键码) 作为 v-on 修饰符；</li><li>不再支持 config.keyCodes；</li></ol></blockquote><h1 id="VU2-对-keyCodes-说明"><a href="#VU2-对-keyCodes-说明" class="headerlink" title="VU2 对 keyCodes 说明"></a>VU2 对 keyCodes 说明</h1><p><strong>Vue 2.x 中的 keyCodes 修饰符</strong></p><p>在 Vue 2.x 中，允许使用 keyCodes 作为v-on 的修饰符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.13&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.enter&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><blockquote><p>上面两种写法，在 Vue 2.x 是等价的。</p></blockquote><p><strong>另外， 我们还可以通过全局的 config.keyCodes 选项来自定义 alias （别名）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  f1: 112&#x2F;&#x2F;快捷键</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- keyCode version --&gt;</span><br><span class="line">&lt;input v-on:keyup.112&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- custom alias version --&gt;</span><br><span class="line">&lt;input v-on:keyup.f1&#x3D;&quot;showHelpText&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h1 id="Vue3-弃用-keyCodes-说明"><a href="#Vue3-弃用-keyCodes-说明" class="headerlink" title="Vue3 弃用 keyCodes 说明"></a>Vue3 弃用 keyCodes 说明</h1><p>因为 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/KeyboardEvent/keyCode"><strong>Web 标准已经弃用</strong></a> KeyboardEvent.keyCode<br>所以 Vue 3.x 为了和 Web 标准保持一致也不再支持 keyCodes。<br>Vue 3.x 建议使用按键 alias （别名）作为v-on的修饰符。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Vue 3 Key Modifier on v-on --&gt;</span><br><span class="line">&lt;input v-on:keyup.delete&#x3D;&quot;confirmDelete&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>因此，这也意味着config.keyCodes也被弃用了</p><h1 id="Vue3-设置快捷键方法"><a href="#Vue3-设置快捷键方法" class="headerlink" title="Vue3 设置快捷键方法"></a>Vue3 设置快捷键方法</h1><blockquote><p>设置快捷键比如 ctrl+s 这种,vue2: @keydown.ctrl.83<br>配置的代码可以写在 main.js 入口文件中，全局统一管理</p></blockquote><p><strong>vue3 不能使用 keyCode，只能使用按键别名。你为 keyCode&#x3D;83 设置别名就行了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.keyCodes &#x3D; &#123;</span><br><span class="line">  s: 83</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_44869002/article/details/113176050">Vue 3 迁移策略笔记—— 第18节：按键修饰符</a></li><li><a href="https://zhuanlan.zhihu.com/p/113754059">Markdown设置居中和字体颜色</a></li></ol><hr><hr><center><font color="red">=================我是分割线=================</font></center><p><strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
    
    
    <summary type="html">升级VUE3后之前的VUE2版本提示按键修饰符错误</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="BUG" scheme="https://zml3589110.github.io/tags/BUG/"/>
    
    <category term="keyCodes" scheme="https://zml3589110.github.io/tags/keyCodes/"/>
    
    <category term="v-on" scheme="https://zml3589110.github.io/tags/v-on/"/>
    
    <category term="web标准" scheme="https://zml3589110.github.io/tags/web%E6%A0%87%E5%87%86/"/>
    
  </entry>
  
  <entry>
    <title>VUE常用组件(一)之Element UI</title>
    <link href="https://zml3589110.github.io/posts/1511238045.html"/>
    <id>https://zml3589110.github.io/posts/1511238045.html</id>
    <published>2022-05-19T00:30:20.000Z</published>
    <updated>2022-05-19T02:38:47.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Element-UI安装"><a href="#Element-UI安装" class="headerlink" title="Element UI安装"></a>Element UI安装</h1><p><strong>原来安装的是 element-plus 而不是 Element-ui</strong><br><a href="https://blog.csdn.net/drhrht/article/details/123421598">Element-ui和Element-Plus的区别_Element2和Element3的区别</a></p><ol><li>Icon图标库变化了 </li><li>组件的插槽slot使用变化了:同时可支持多个插槽 </li><li>新增组件 Skeleton-骨架屏&#x2F;Empty-空状态&#x2F;Affix -固钉&#x2F;TimeSelect 时间选择&#x2F;Space 间距</li></ol><hr><p>因需使用 el-table 报错才发现需要安装 Element UI 组件，开始按照网上大多数方法进行，但总报错！因为这些方法是基于VUE2.X版本，而搭建的环境是VUE3！</p><h2 id="VUE3正确安装方法"><a href="#VUE3正确安装方法" class="headerlink" title="VUE3正确安装方法"></a>VUE3正确安装方法</h2><ol><li>下载 Element UI组件<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save element-plus</span><br></pre></td></tr></table></figure><blockquote><p>安装完之后 package.json 文件中的 dependencies 会新增版本内容，说明安装成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">  &quot;axios&quot;: &quot;^0.27.2&quot;,</span><br><span class="line">  &quot;core-js&quot;: &quot;^3.8.3&quot;,</span><br><span class="line">  &quot;element-plus&quot;: &quot;^2.2.0&quot;,</span><br><span class="line">  &quot;table&quot;: &quot;^6.8.0&quot;,</span><br><span class="line">  &quot;vue&quot;: &quot;^3.2.13&quot;,</span><br><span class="line">  &quot;vue-router&quot;: &quot;^4.0.3&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>在 main.js 中引入 Element UI 组件<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import ElementPlus from &#39;element-plus&#39;</span><br><span class="line">import &#39;element-plus&#x2F;dist&#x2F;index.css&#39;</span><br><span class="line"></span><br><span class="line">const app &#x3D; createApp(App);</span><br><span class="line">app.use(ElementPlus)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;...</span><br><span class="line">app.mount(&#39;#app&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;createApp(App).use(store).use(router).use(element).mount(&#39;#app&#39;)</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<br>因vue3 的 dom挂载方式是新创建一个 app 然后调用 mount() 方法插入到页面中<br>所以 app.use(ElementPlus) 设置需要在 app.mount(‘#app’); 挂载之前设置</strong></p></blockquote></li><li>在相应的 vue 文件中测试使用 并 npm run serve 运行测试<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>卸载 element-ui<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall element-ui</span><br></pre></td></tr></table></figure><strong>装过旧版需要卸载，还需要把 main.js 和 package.json 内与 element-plus 相关删除</strong></li></ol><h2 id="旧版常规安装"><a href="#旧版常规安装" class="headerlink" title="旧版常规安装"></a>旧版常规安装</h2><blockquote><p><strong>注意:官方和网上常见的方式为 VUE2.X 旧版本方式</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 1.下载elementui的依赖</span><br><span class="line">    npm i element-ui -S</span><br><span class="line"># 2.指定当前项目中使用elementui</span><br><span class="line">    import ElementUI from &#39;element-ui&#39;;</span><br><span class="line">    import &#39;element-ui&#x2F;lib&#x2F;theme-chalk&#x2F;index.css&#39;;</span><br><span class="line">  &#x2F;&#x2F;在vue脚手架中使用elementui</span><br><span class="line">    Vue.use(ElementUI);</span><br></pre></td></tr></table></figure><h1 id="Element-UI基本使用-示例"><a href="#Element-UI基本使用-示例" class="headerlink" title="Element UI基本使用(示例)"></a>Element UI基本使用(示例)</h1><blockquote><p><strong>注意：<br>使用element ui的相关组件时需要注意的是 所有组件都是el-组件名称开头<br>属性使用都是直接将属性名&#x3D;属性值方式写在对应的组件标签上</strong></p></blockquote><h2 id="按钮组件"><a href="#按钮组件" class="headerlink" title="按钮组件"></a>按钮组件</h2><ol><li>默认样式按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>简洁按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span>&gt;</span>朴素按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">plain</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">plain</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">plain</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">plain</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">plain</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>圆角按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">round</span>&gt;</span>圆角按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">round</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">round</span>&gt;</span>成功按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">round</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">round</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">round</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>图标按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-search&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-edit&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-check&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-message&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-delete&quot;</span> <span class="attr">circle</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>按钮组件的详细使用<br>一、 按钮组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 按钮属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> 属性名=<span class="string">属性值</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">plain</span>=<span class="string">true</span> <span class="attr">round</span> <span class="attr">circle</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-loading&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br></pre></td></tr></table></figure>三、 按钮组使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-button-group</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-back&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-right&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-button-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Link-文字链接组件"><a href="#Link-文字链接组件" class="headerlink" title="Link 文字链接组件"></a>Link 文字链接组件</h2></li><li>文字链接组件的创建<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>文字链接组件的属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-link</span>  <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> &gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span><span class="attr">:underline</span>=<span class="string">&quot;false&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;success&quot;</span> <span class="attr">disabled</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;el-icon-platform-eleme&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-link</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>默认链接<span class="tag">&lt;/<span class="name">el-link</span>&gt;</span> </span><br></pre></td></tr></table></figure><h2 id="Layout-栅格-布局组件的使用"><a href="#Layout-栅格-布局组件的使用" class="headerlink" title="Layout (栅格)布局组件的使用"></a>Layout (栅格)布局组件的使用</h2><blockquote><p><strong>通过基础的 24 分栏，迅速简便地创建布局<br>在element ui中布局组件将页面划分为多个行row,每行最多分为24栏(列)</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在一个布局组件中 是由 row 和 col 组合而成<br>在使用时要区分 row属性 和 col属性</strong></p></blockquote></li><li>使用Layout组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性的使用<br>一、 行属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">:gutter</span>=<span class="string">&quot;50&quot;</span> <span class="attr">tag</span>=<span class="string">&quot;span&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用4份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;8&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用8份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;3&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用3份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;9&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px red solid;&quot;</span>&gt;</span>占用9份<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure>二、 列属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;12&quot;</span> <span class="attr">:offset</span>=<span class="string">&quot;9&quot;</span> <span class="attr">:psuh</span>=<span class="string">&quot;3&quot;</span> <span class="attr">xs</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用12分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">&quot;6&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px blue solid;&quot;</span>&gt;</span>我是占用6分<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Container-布局容器组件"><a href="#Container-布局容器组件" class="headerlink" title="Container 布局容器组件"></a>Container 布局容器组件</h2></li><li>创建布局容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>容器中包含的子元素<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-header</span>&gt;</span>：顶栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-aside</span>&gt;</span>：侧边栏容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-main</span>&gt;</span>：主要区域容器。</span><br><span class="line"><span class="tag">&lt;<span class="name">el-footer</span>&gt;</span>：底栏容器。</span><br></pre></td></tr></table></figure></li><li>容器的嵌套使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--创建容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--容器嵌套使用--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>水平容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;horizontal&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>垂直容器<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-container</span> <span class="attr">direction</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--header--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-header</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-container</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--aside--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-aside</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是菜单<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-aside</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--main--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-main</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是中心内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--footer--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-footer</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是页脚<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">el-footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-container</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Form相关组件"><a href="#Form相关组件" class="headerlink" title="Form相关组件"></a>Form相关组件</h2><h3 id="Radio单选按钮"><a href="#Radio单选按钮" class="headerlink" title="Radio单选按钮"></a>Radio单选按钮</h3></li><li>创建Radio按钮<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--组件创建--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio按钮属性的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">disabled</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;medium&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Radio事件的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;男&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">v-model</span>=<span class="string">&quot;label&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">border</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">label</span>=<span class="string">&quot;女&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                label:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123; <span class="comment">//定义的事件处理函数</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.label);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>事件的使用也是和属性使用是一致都是直接写在对应的组件标签上<br>事件在使用时必须使用Vue中绑定时间方式进行使用如 @事件名&#x3D;事件处理函数(绑在在vue组件中对应函数)</strong></p></blockquote><h3 id="radio按钮组"><a href="#radio按钮组" class="headerlink" title="radio按钮组"></a>radio按钮组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-radio-group</span> <span class="attr">v-model</span>=<span class="string">&quot;radio&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;3&quot;</span>&gt;</span>备选项3<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;6&quot;</span>&gt;</span>备选项6<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-radio</span> <span class="attr">:label</span>=<span class="string">&quot;9&quot;</span>&gt;</span>备选项9<span class="tag">&lt;/<span class="name">el-radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-radio-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">    name: <span class="string">&quot;Radio&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line">        radio: 6</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="checkbox组件"><a href="#checkbox组件" class="headerlink" title="checkbox组件"></a>checkbox组件</h2></li><li>创建checkbox组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>属性使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">disabled</span> <span class="attr">true-label</span>=<span class="string">&quot;北京&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">checked</span> <span class="attr">border</span> <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span><span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span>  <span class="attr">true-label</span>=<span class="string">&quot;上海&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">v-model</span>=<span class="string">&quot;checked&quot;</span> @<span class="attr">change</span>=<span class="string">&quot;aa&quot;</span> <span class="attr">true-label</span>=<span class="string">&quot;天津&quot;</span>&gt;</span>天津<span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>复选框组的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-checkbox-group</span> @<span class="attr">change</span>=<span class="string">&quot;bb&quot;</span> <span class="attr">:min</span>=<span class="string">&quot;1&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkList&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 A&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 B&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;复选框 C&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-checkbox</span> <span class="attr">label</span>=<span class="string">&quot;选中且禁用&quot;</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">el-checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Checkbox&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                checked:<span class="literal">true</span>,</span></span><br><span class="line">                checkList:[],</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checked);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="built_in">this</span>.checkList);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Input-输入框组件"><a href="#Input-输入框组件" class="headerlink" title="Input 输入框组件"></a>Input 输入框组件</h2></li><li>创建Input组件<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>常用属性<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span> <span class="attr">disabled</span> <span class="attr">type</span>=<span class="string">&quot;textarea&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;price&quot;</span> <span class="attr">:maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">show-word-limit</span> <span class="attr">:minlength</span>=<span class="string">&quot;5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">prefix-icon</span>=<span class="string">&quot;el-icon-user-solid&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">suffix-icon</span>=<span class="string">&quot;el-icon-star-off&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> <span class="attr">show-password</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">clearable</span> <span class="attr">v-model</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>事件使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> @<span class="attr">blur</span>=<span class="string">&quot;aaa&quot;</span> @<span class="attr">focus</span>=<span class="string">&quot;bbb&quot;</span> @<span class="attr">clear</span>=<span class="string">&quot;clears&quot;</span> <span class="attr">clearable</span> @<span class="attr">input</span>=<span class="string">&quot;ccc&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line">                restaurants: [],</span><br><span class="line"><span class="javascript">                state1: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                state2: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                name:<span class="string">&#x27;xiaochen&#x27;</span>,</span></span><br><span class="line">                price:0.0,</span><br><span class="line"><span class="javascript">                username:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="javascript">                password:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&#x27;失去焦点&#x27;</span>);</span></span><br><span class="line">                ;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;获取焦点&quot;</span>);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">ccc</span>(<span class="params">value</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;改变:&quot;</span>+value);</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">clears</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="string">&quot;清楚&quot;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>方法的使用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>方法的使用<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;username&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;inputs&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;focusInputs&quot;</span>&gt;</span>focus方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;blurInputs&quot;</span>&gt;</span>blur方法<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">        name: <span class="string">&quot;Input&quot;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;&#125;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">            <span class="comment">//调用focus方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">focusInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.focus();</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">           <span class="comment">//调用失去焦点方法</span></span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">blurInputs</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$refs.inputs.blur();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在使用组件的方法时需要在对应的组件中加入 ref&#x3D;”组件别名”<br>在调用方法时直接使用 this.$refs.组件别名.方法名()</strong></p></blockquote></li></ol><h1 id="elementui-使用注意"><a href="#elementui-使用注意" class="headerlink" title="elementui 使用注意"></a><strong>elementui 使用注意</strong></h1><blockquote><p>**注意:在elementui中所有组件 都存在 属性 事件 和方法<br>属性: 直接写在对应的组件标签上 使用方式:属性名&#x3D;属性值<code>方式 事件</code>: 直接使用vue绑定事件方式写在对应的组件标签上 使用方式:&#96;@事件名&#x3D;vue中事件处理函数<br>方法: 1.在对应组件标签上使用 ref&#x3D;组件别名 2. 通过使用this.$refs.组件别名.方法名()进行调用<br>**</p></blockquote><h1 id="相关链接及原文出处"><a href="#相关链接及原文出处" class="headerlink" title="相关链接及原文出处"></a>相关链接及原文出处</h1><ol><li><a href="https://blog.csdn.net/Stars_in_rain/article/details/122363128">vue3 引入element-ui</a></li><li><a href="https://blog.csdn.net/qq_35254085/article/details/116600164">Element UI组件介绍</a></li><li><a href="https://vuex.vuejs.org/zh/index.html">VUE 官方文档</a></li><li><a href="https://element-plus.org/zh-CN/component/button.html">官方VUE3使用 Element UI</a></li></ol>]]></content>
    
    
    <summary type="html">Element UI组件的安装和使用</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="Element UI" scheme="https://zml3589110.github.io/tags/Element-UI/"/>
    
    <category term="el-x" scheme="https://zml3589110.github.io/tags/el-x/"/>
    
  </entry>
  
  <entry>
    <title>VUE问题(一)之spaces and tabs 空格和tab键问题</title>
    <link href="https://zml3589110.github.io/posts/1689160997.html"/>
    <id>https://zml3589110.github.io/posts/1689160997.html</id>
    <published>2022-05-18T11:54:20.000Z</published>
    <updated>2022-05-18T12:24:03.751Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h1><p>新建文章后，复制网上或者原来的代码段过来使用时发现报错 Mixed spaces and tabs no-mixed-spaces-and-tabs</p><blockquote><p><strong>因为大多数代码约定要求使用空格或 tab 进行缩进。因此，一行代码同时混有 tab 缩进和空格缩进，通常是错误的</strong></p></blockquote><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><ol><li>在工程目录下找到 package.json 文件并打开</li><li>在eslintrcr配置项rules里边手动添加规则 ’no-mixed-spaces-and-tabs’并定义为 0(即关闭检查规则)<blockquote><p><strong>“no-mixed-spaces-and-tabs”:0</strong></p><img src="https://img-blog.csdnimg.cn/c6699555819d47cf9a5777137f5a5745.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA56iL5bqP5bCP5pet,size_20,color_FFFFFF,t_70,g_se,x_16"></blockquote></li></ol><p><strong>补充：使用下面的配置可以减少很多语法检查的报错信息，可以配置使用然后重启项目</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&quot;eslintConfig&quot;: &#123;</span><br><span class="line">    &quot;root&quot;: false,</span><br><span class="line">    &quot;env&quot;: &#123;</span><br><span class="line">      &quot;node&quot;: false</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;extends&quot;: [</span><br><span class="line">      &quot;plugin:vue&#x2F;essential&quot;,</span><br><span class="line">      &quot;eslint:recommended&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;parserOptions&quot;: &#123;</span><br><span class="line">      &quot;parser&quot;: &quot;babel-eslint&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;rules&quot;: &#123;</span><br><span class="line">&quot;generator-star-spacing&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-tabs&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-unused-vars&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-console&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-irregular-whitespace&quot;:&quot;off&quot;,</span><br><span class="line">&quot;no-debugger&quot;: &quot;off&quot;,</span><br><span class="line">&quot;no-mixed-spaces-and-tabs&quot;:0</span><br><span class="line">&#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://blog.csdn.net/weixin_46167190/article/details/122800825">Vue报错：Mixed spaces and tabs no-mixed-spaces-and-tabs 解决办法</a></li></ol><p>———————————————-<strong>我是分割线</strong>—————————————<br>    <strong>欢迎到公众号来唠嗑:</strong><br><img src="https://pic4.zhimg.com/80/v2-eedc5dc7d30beedf4c2f1812df8e61a7_720w.jpg"></p>]]></content>
    
    
    <summary type="html">VUE因tab和空格导致报错 Mixed spaces and tabs no-mixed-spaces-and-tabs</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="BUG" scheme="https://zml3589110.github.io/tags/BUG/"/>
    
    <category term="Mixed spaces and tabs" scheme="https://zml3589110.github.io/tags/Mixed-spaces-and-tabs/"/>
    
  </entry>
  
  <entry>
    <title>VUE常用命令(一)之v-if</title>
    <link href="https://zml3589110.github.io/posts/289735847.html"/>
    <id>https://zml3589110.github.io/posts/289735847.html</id>
    <published>2022-05-18T08:24:20.000Z</published>
    <updated>2022-05-18T08:52:19.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="v-if指令作用"><a href="#v-if指令作用" class="headerlink" title="v-if指令作用"></a>v-if指令作用</h1><p><strong>根据表达式的真假切换元素的显示状态</strong></p><ol><li>本质是通过操纵dom元素来切换显示状态</li><li>表达式的值为true,元素存在于dom树中，为false,从dom树中移除</li><li>频繁的切换使用v-show,反之使用v-if,前者的切换消耗小<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language&#x3D;&quot;java&quot; contentType&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;</span><br><span class="line">    pageEncoding&#x3D;&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-&#x2F;&#x2F;W3C&#x2F;&#x2F;DTD HTML 4.01 Transitional&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.w3.org&#x2F;TR&#x2F;html4&#x2F;loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot;&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;button&quot; value&#x3D;&quot;切换状态&quot; @click&#x3D;&quot;changeShow&quot;&gt;</span><br><span class="line">&lt;h1 v-show&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;h2 v-if&#x3D;&quot;isshow&quot;&gt;Web前端&lt;&#x2F;h2&gt;</span><br><span class="line">&lt;h3 v-if&#x3D;&quot;temperature&gt;&#x3D;35&quot;&gt;热死了&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"> var app&#x3D;new Vue(&#123;</span><br><span class="line"> el:&quot;#app&quot;,</span><br><span class="line"> data:&#123;</span><br><span class="line"> isshow:false,</span><br><span class="line"> temperature:40</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line"> changeShow:function()&#123;</span><br><span class="line"> this.isshow&#x3D;!this.isshow;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>点击“切换状态”之后：<img src="https://img-blog.csdnimg.cn/20200803101013231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM4ODM1MTQw,size_16,color_FFFFFF,t_70"></li></ol><h1 id="v-if常见使用方法详解"><a href="#v-if常见使用方法详解" class="headerlink" title="v-if常见使用方法详解"></a>v-if常见使用方法详解</h1><p>v-if一般有两个场景：<br>1- 多个元素 通过条件判断展示或者隐藏某个元素。或者多个元素<br>2- 进行两个视图之间的切换<br>Vue官方的简单实例:</p><ol><li>实现了 type等于不同值，A，B，C 三个元素的展示情况</li><li>实现了点击按钮两个视图的切换<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line"> &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line"> &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;</span><br><span class="line"> &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line"> &lt;title&gt;Vue中v-if的常见使用&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.5.17-beta.0&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.onload &#x3D; function()&#123;</span><br><span class="line"></span><br><span class="line"> &#x2F;&#x2F;创建一个vue实例</span><br><span class="line"> var app &#x3D; new Vue(&#123;</span><br><span class="line"> el: &#39;#app&#39;,</span><br><span class="line"> data: &#123;</span><br><span class="line">  type:&#39;C&#39;,</span><br><span class="line">  loginType:&#39;username&#39;</span><br><span class="line"> &#125;,</span><br><span class="line"> methods:&#123;</span><br><span class="line">  changeloginType()&#123;</span><br><span class="line">  let self &#x3D; this;</span><br><span class="line">  if(self.loginType&#x3D;&#x3D;&#39;username&#39;)&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;&#39;</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">   self.loginType &#x3D; &#39;username&#39;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:red&quot;&gt;v-if的简单实用&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template&gt;</span><br><span class="line">  &lt;div v-if&#x3D;&quot;type &#x3D;&#x3D; &#39;A&#39;&quot;&gt;</span><br><span class="line">  A</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else-if&#x3D;&quot;type&#x3D;&#x3D;&#39;B&#39;&quot;&gt;</span><br><span class="line">  B</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;div v-else&gt;</span><br><span class="line">  C</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;div style&#x3D;&quot;color:green&quot;&gt;v-if的弹框切换&lt;&#x2F;div&gt;</span><br><span class="line"> &lt;template v-if&#x3D;&quot;loginType &#x3D;&#x3D;&#x3D; &#39;username&#39;&quot;&gt;</span><br><span class="line">  &lt;label&gt;用户名：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your username&quot; key&#x3D;&quot;username-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;template v-else&gt;</span><br><span class="line">  &lt;label&gt;密码：&lt;&#x2F;label&gt;</span><br><span class="line">  &lt;input placeholder&#x3D;&quot;Enter your email address&quot; key&#x3D;&quot;email-input&quot;&gt;</span><br><span class="line"> &lt;&#x2F;template&gt;</span><br><span class="line"> &lt;button @click&#x3D;&quot;changeloginType&quot;&gt;切换状态&lt;&#x2F;button&gt;</span><br><span class="line"> &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>效果图:<img src="https://img.jbzj.com/file_images/article/201809/20180928154104.jpg"><img src="https://img.jbzj.com/file_images/article/201809/20180928154117.jpg"></li></ol><h1 id="通过-v-if-来判断数组是否为空"><a href="#通过-v-if-来判断数组是否为空" class="headerlink" title="通过 v-if 来判断数组是否为空"></a>通过 v-if 来判断数组是否为空</h1><blockquote><p><strong>此方法已经在处理PHP回传 JSON 数据时，对键名解析使用成功</strong></p></blockquote><p>语法为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为空：array &#x3D;&#x3D; undefined ||array &#x3D;&#x3D; null || array.length &lt;&#x3D; 0     (顺序不能调换)</span><br><span class="line">不为空： array !&#x3D;&#x3D;undefined &amp;&amp; array !&#x3D; null  &amp;&amp; array.length &gt; 0   (顺序不能调换)</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul v-if&#x3D;&quot;commentList &#x3D;&#x3D; undefined ||commentList &#x3D;&#x3D; null || commentList.length &lt;&#x3D; 0 &quot; &gt;</span><br><span class="line">暂无评论！</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul v-if&#x3D;&quot;commentList !&#x3D; undefined &amp;&amp; commentList !&#x3D; null &amp;&amp; commentList.length &gt; 0 &quot; &gt;</span><br><span class="line">&lt;li class&#x3D;&quot;list-group-item&quot;  v-for&#x3D;&quot;(item,index) in commentList&quot;  &gt;</span><br><span class="line">&lt;div class&#x3D;&quot;username&quot;&gt;</span><br><span class="line">&#123;&#123; item.username &#125;&#125; 说：</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;content&quot; &gt;</span><br><span class="line">&#123;&#123; item.content &#125;&#125;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;li&gt;</span><br><span class="line">&lt;&#x2F;ul&gt;</span><br></pre></td></tr></table></figure><h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><ol><li><a href="https://blog.csdn.net/qq_38835140/article/details/107757104">v-if指令</a></li><li><a href="https://www.jb51.net/article/148174.htm">对vue中v-if的常见使用方法详解</a></li><li><a href="https://blog.csdn.net/xiaojin21cen/article/details/118605410">VUE 模板 v-if 判断 数组是否为空</a></li></ol>]]></content>
    
    
    <summary type="html">VUE命令的 v-if 常用方法</summary>
    
    
    
    <category term="编程类" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/categories/%E7%BC%96%E7%A8%8B%E7%B1%BB/VUE/"/>
    
    <category term="前端" scheme="https://zml3589110.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="网页" scheme="https://zml3589110.github.io/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="VUE" scheme="https://zml3589110.github.io/tags/VUE/"/>
    
    <category term="JavaScript" scheme="https://zml3589110.github.io/tags/JavaScript/"/>
    
    <category term="v-if" scheme="https://zml3589110.github.io/tags/v-if/"/>
    
  </entry>
  
</feed>
